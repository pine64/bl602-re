word32 pbuf_realloc(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg98, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0168, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dhcp_option_trailer
//      ip4_input
//      tcp_oos_insert_segment
//      tcp_receive
//      tcp_split_unsent_seg
//      dhcp_server_recv
//      altcp_mbedtls_handle_rx_appldata
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a2 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
pbuf_realloc_entry:
l23070384:
	word32 a5_5 = CONVERT(Mem0[a0 + 8<i32>:uint16], uint16, word32)
	branch a1 >=u a5_5 l230703FC
l230703FC:
	s1Out = s1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
l2307038C:
	word32 s0_14 = a0
	word32 s1_15 = a1
	word32 a5_16 = a1 - a5_5
l2307039C:
	word32 a1_19 = CONVERT(Mem18[s0_14 + 10<i32>:uint16], uint16, word32)
	branch a1_19 <u s1_15 l230703E8
l230703E8:
	a4 = CONVERT(Mem18[s0_14 + 8<i32>:uint16], uint16, word32) + a5_16
	Mem26[s0_14 + 8<i32>:word16] = SLICE(a4, word16, 0)
	s1_15 = CONVERT(SLICE(s1_15 - a1_19, word16, 0), word16, word32)
	s0_14 = Mem26[s0_14:word32]
l230703A4:
	word32 a5_29 = CONVERT(Mem18[s0_14 + 12<i32>:byte], byte, word32)
	word32 a5_164 = a5_29 & 0xF<32>
	branch (a5_29 & 0xF<32>) != 0<32> l230703CA
l230703AC:
	branch a1_19 == s1_15 l230703CA
l230703B0:
	word32 a5_31 = CONVERT(Mem18[s0_14 + 13<i32>:byte], byte, word32)
	a5_164 = a5_31 & 2<32>
	branch (a5_31 & 2<32>) != 0<32> l230703CA
l230703B8:
	word32 s0_33 = Mem18[a1_19 + 4<i32>:word32]
	s1_15 = mem_trim(s0_33, CONVERT(SLICE(a1_19 - s0_33 + s1_15, word16, 0), word16, word32), a3, a4, s2, s3, s4, mstatus, s0, dwArg14, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0168, out a0, out a3, out a4, out a5_164, out s2, out s3, out s4, out s5, out s6, out s8)
l230703CA:
	word32 s0_115 = Mem18[a0:word32]
	Mem81[s0_115 + 10<i32>:word16] = SLICE(s1_15, word16, 0)
	Mem82[s0_115 + 8<i32>:word16] = SLICE(s1_15, word16, 0)
	branch a0 == 0<32> l230703DA
l230703D6:
	word32 a0_251
	word32 a1_252
	word32 a2_253
	word32 a7_254
	ra = pbuf_free(ra, a0, a3, a4, s4, mstatus, dwArg0118, out s0_115, out s1_15, out a0_251, out a1_252, out a2_253, out a3, out a4, out a5_164, out a7_254, out s2, out s3, out s4, out s5, out s6, out s8, out mstatus)
l230703DA:
	Mem116[s0_115:word32] = 0<32>
	s1Out = s1_15
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_164
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
pbuf_realloc_exit:


word32 pbuf_free_header(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg44, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recv_tcp
//      httpc_tcp_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0044:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_free_header_entry:
l230703FE:
	word32 s0_11 = a0
l23070408:
	branch a1 == 0<32> l23070434
l2307040A:
	branch s0_11 == 0<32> l23070434
l2307040C:
	branch a1 <u CONVERT(Mem14[s0_11 + 10<i32>:uint16], uint16, word32) l2307042E
l2307042E:
	word32 a5_154
	word32 a4_153
	word32 a1_152
	pbuf_remove_header(s0_11, a1, a2, out a1_152, out a3, out a4_153, out a5_154)
l23070434:
	s0Out = s0_11
	s1Out = s1
	a0Out = s0_11
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = dwLoc1C
	mstatusOut = mstatus
	return ra
pbuf_free_header_exit:
l23070414:
	word32 s0_34 = Mem14[s1:word32]
	Mem37[s0_34:word32] = 0<32>
	word32 s0_155
	word32 a0_156
	word32 a2_157
	word32 a5_158
	word32 a7_159
	word32 s8_160
	ra = pbuf_free(ra, s0_34, a3, a4, s4, mstatus, dwArg0108, out s0_155, out s1, out a0_156, out a1, out a2_157, out a3, out a4, out a5_158, out a7_159, out s2, out s3, out s4, out s5, out s6, out s8_160, out mstatus)
	s0_11 = s1
	a2 = dwArg44


word32 pbuf_clen(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_free_acked_segments.isra.3
//      tcp_split_unsent_seg
//      tcp_send_fin
//      altcp_tcp_write
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
pbuf_clen_entry:
l23070440:
	word32 a5_3 = 0<32>
l23070442:
	branch a0 != 0<32> l23070448
l23070448:
	a5_3 = CONVERT(SLICE(a5_3 + 1<32>, word16, 0), word16, word32)
	a0 = Mem0[a0:word32]
l23070444:
	return a5_3
pbuf_clen_exit:


word32 pbuf_ref(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
//      etharp_query
//      pbuf_chain
//      tcp_seg_copy
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
pbuf_ref_entry:
l23070452:
	branch a0 == 0<32> l23070474
l23070474:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return a0
l23070454:
	word32 a2_41
	word32 a4_42
	word32 a0_12 = sys_arch_protect(a4, mstatus, out a2_41, out a4_42)
	Mem18[a0 + 14<i32>:byte] = SLICE(CONVERT(Mem8[a0 + 14<i32>:byte], byte, word32) + 1<32>, byte, 0)
l23070470_thunk_sys_arch_unprotect:
	word32 a4_24
	word32 a5_25
	a3Out = sys_arch_unprotect(a3, mstatus, out a4_24, out a5_25)
	a4Out = a4_24
	a5Out = a5_25
	return a0_12
pbuf_ref_exit:


void pbuf_cat(word32 a0, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_stack_input
//      pbuf_chain
//      tcp_receive
//      httpc_tcp_recv
//      altcp_mbedtls_handle_rx_appldata
//      altcp_mbedtls_lower_recv
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a3 a5 sp
pbuf_cat_entry:
l23070476:
	branch a0 == 0<32> l23070496
l23070478:
	branch a1 != 0<32> l2307047E
l2307047E:
	word32 a0_11 = Mem6[a4:word32]
	Mem15[a0_11 + 8<i32>:word16] = SLICE(CONVERT(CONVERT(Mem6[a0 + 8<i32>:uint16] + Mem6[a1 + 8<i32>:uint16], uint16, uint16), uint16, word32), word16, 0)
	branch a4 != 0<32> l2307047C
l2307047C:
	a0 = a4
l23070494:
	Mem17[a1:word32] = a0_11
l23070496:
	return
l2307047A:
	return
pbuf_cat_exit:


void pbuf_chain(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_send
//      udp_sendto
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
pbuf_chain_entry:
l23070498:
	pbuf_cat(a0, a1, a4)
l230704AC_thunk_pbuf_ref:
	word32 a3_26
	word32 a4_27
	word32 a5_28
	pbuf_ref(a1, a3, a4, mstatus, out a3_26, out a4_27, out a5_28)
	return
pbuf_chain_exit:


word32 pbuf_copy(word32 a0, word32 a1, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_clone
//      icmp_input
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
pbuf_copy_entry:
l230704B0:
	branch a0 == 0<32> l2307055A
l2307055A:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
l230704B2:
	word32 a0_192
	word32 s1_111
	word32 s0_19 = a1
	s1_111 = s1
	branch a1 == 0<32> l2307051A
l230704C4:
	a4 = CONVERT(Mem17[a0 + 8<i32>:uint16], uint16, word32)
	s1_111 = a0
	branch a4 <u CONVERT(Mem17[a1 + 8<i32>:uint16], uint16, word32) l2307051A
l230704D2:
	word32 s4_118 = 0<32>
	s3 = 0<32>
l230704D6:
	s2 = CONVERT(Mem17[s1_111 + 10<i32>:uint16], uint16, word32) - s3
	word32 a5_33 = CONVERT(Mem17[s0_19 + 10<i32>:uint16], uint16, word32) - s4_118
	branch a5_33 >=u s2 l230704EC
l230704EA:
	s2 = a5_33
l230704EC:
	s0_19 = Mem17[a1 + 4<i32>:word32]
	s1_111 = Mem17[a0 + 4<i32>:word32]
	a0 = a0 + s3
	word32 a7_311
	word32 a6_310
	word32 a5_309
	word32 a2_307
	word32 a4_308
	memcpy(a0, a1 + s4_118, s2, out a1, out a2_307, out a3, out a4_308, out a5_309, out a6_310, out a7_311)
	a4 = CONVERT(Mem17[s0_19 + 10<i32>:uint16], uint16, word32)
	s4_118 = s4_118 + s2
	s3 = s3 + s2
	word32 a5_64 = CONVERT(Mem17[s1_111 + 10<i32>:uint16], uint16, word32)
	branch s4_118 <u a4 l2307050E
l2307050A:
	s0_19 = Mem17[s0_19:word32]
	s4_118 = 0<32>
l2307050E:
	branch s3 != a5_64 l2307052E
l23070512:
	s1_111 = Mem17[s1_111:word32]
	branch s1_111 != 0<32> l2307052C
l2307052C:
	s3 = 0<32>
l2307052E:
	branch s0_19 == 0<32> l23070540
l23070530:
	a4 = CONVERT(Mem17[s0_19 + 10<i32>:uint16], uint16, word32)
	word32 a5_77 = CONVERT(Mem17[s0_19 + 8<i32>:uint16], uint16, word32)
	branch a4 != a5_77 l23070540
l2307053C:
	s0_19 = Mem17[a5_77:word32]
	branch a5_77 != 0<32> l23070556
l23070540:
	a4 = CONVERT(Mem17[s1_111 + 10<i32>:uint16], uint16, word32)
	word32 a5_83 = CONVERT(Mem17[s1_111 + 8<i32>:uint16], uint16, word32)
	branch a4 != a5_83 l23070550
l2307054C:
	s1_111 = Mem17[a5_83:word32]
	branch a5_83 != 0<32> l23070556
l23070556:
	a0_192 = 0xFFFFFFFA<32>
l23070550:
	branch s0_19 != 0<32> l230704D6
l23070552:
	a0_192 = 0<32>
l23070516:
	a0_192 = 0<32>
	branch s0_19 == 0<32> l2307051C
l2307051A:
	a0_192 = 0xFFFFFFF0<32>
l2307051C:
	s1Out = s1_111
	a0Out = a0_192
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	return s1
pbuf_copy_exit:


word32 pbuf_copy_partial(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      lwip_recv_tcp
//      lwip_recvfrom_udp_raw.isra.6
//      dns_recv
//      dhcp_recv
//      tcp_split_unsent_seg
//      tcp_zero_window_probe
//      sntp_recv
//      httpc_tcp_recv
//      altcp_mbedtls_bio_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
pbuf_copy_partial_entry:
l2307055E:
	word32 s1_158
	word32 s0_101 = 0<32>
	s1_158 = s1
	branch a0 == 0<32> l23070580
l23070570:
	s0_101 = 0<32>
	s1_158 = s1
	branch a1 == 0<32> l23070580
l23070576:
	s2 = a0
	s1_158 = a2
l2307057A:
	branch s1_158 == 0<32> l23070580
l2307057C:
	branch s2 != 0<32> l23070592
l23070592:
	a1 = CONVERT(Mem15[s2 + 10<i32>:uint16], uint16, word32)
	branch a3 == 0<32> l230705A8
l23070598:
	branch a3 <u a1 l230705A8
l230705A8:
	word32 a1_33 = CONVERT(SLICE(a1 - a3, word16, 0), word16, word32)
	word32 s3_34 = a1_33
	branch s1_158 >=u a1_33 l230705B6
l230705B4:
	s3_34 = s1_158
l230705B6:
	word32 s3_43 = s3_34 << 16<i32>
	word32 a2_194
	word32 a3_195
	word32 a6_196
	word32 a7_197
	memcpy(a1 + s0_101, Mem15[s2 + 4<i32>:int32] + a3, s3_43 >>u 0x10<u32>, out a1, out a2_194, out a3_195, out a4, out a5, out a6_196, out a7_197)
	s3 = s3_43 >>u 0x10<u32>
	s0_101 = CONVERT(SLICE(s0_101 + (s3_43 >>u 0x10<u32>), word16, 0), word16, word32)
	s1_158 = CONVERT(SLICE(s1_158 - (s3_43 >>u 0x10<u32>), word16, 0), word16, word32)
	a3 = 0<32>
l2307059C:
	a3 = CONVERT(SLICE(a3 - a1, word16, 0), word16, word32)
l230705A2:
	s2 = Mem15[s2:int32]
l23070580:
	s1Out = s1_158
	a0Out = s0_101
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = s4
	return s1
pbuf_copy_partial_exit:


word32 pbuf_take(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
//      pbuf_take_at
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
pbuf_take_entry:
l230705DE:
	branch a0 == 0<32> l23070638
l23070638:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return s0
l230705E0:
	word32 s1_126 = a0
	branch a1 == 0<32> l23070604
l230705F6:
	word32 s0_24 = a2
	s3 = 0<32>
	branch CONVERT(Mem17[a0 + 8<i32>:uint16], uint16, word32) >=u a2 l23070632
l23070632:
	branch s0_24 != 0<32> l23070614
l23070614:
	s2 = CONVERT(Mem17[s1_126 + 10<i32>:uint16], uint16, word32)
	branch s0_24 >=u s2 l2307061E
l2307061C:
	s2 = s0_24
l2307061E:
	word32 s1_35 = Mem17[3<32>:word32]
	word32 a1_165
	word32 a2_166
	word32 a5_167
	word32 a6_168
	word32 a7_169
	memcpy(0xFFFFFFFF<32>, a1 + s3, s2, out a1_165, out a2_166, out a3, out a4, out a5_167, out a6_168, out a7_169)
	s1_126 = Mem17[s1_35:word32]
	s0_24 = s0_24 - s2
	s3 = s3 + s2
l23070634:
l23070604:
	s1Out = s1_126
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = s4
	return s1
pbuf_take_exit:


word32 pbuf_take_at(word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg0128, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_take_at_entry:
l2307063C:
	pbuf_skip_const(a0, a3, fp + -34<i32>)
	word32 s3_11 = a1
	branch a0 == 0<32> l230706B0
l230706B0:
l23070658:
	a4 = CONVERT(wLoc22, uint16, word32)
	a3 = CONVERT(Mem20[a0 + 8<i32>:uint16], uint16, word32)
	s1 = a0
	branch a3 < a4 + a2 l230706A2
l2307066C:
	s2 = a2
	word32 a5_30 = CONVERT(Mem20[a0 + 10<i32>:uint16], uint16, word32) - a4
	branch a5_30 >= a2 l23070680
l23070678:
	s2 = CONVERT(SLICE(a5_30, word16, 0), word16, word32)
l23070680:
	s1 = Mem20[3<32>:word32]
	word32 a1_148
	word32 a2_149
	word32 a5_150
	word32 a6_151
	word32 a7_152
	memcpy(a4 + 0xFFFFFFFF<32>, a1, s2, out a1_148, out a2_149, out a3, out a4, out a5_150, out a6_151, out a7_152)
	word32 a2_58 = CONVERT(SLICE(a2 - s2, word16, 0), word16, word32)
	branch a2_58 == 0<32> l230706A2
l23070698:
	pbuf_take(0<32>, a1 + s2, a2_58, out s1, out a3, out a4, out s2, out s3_11, out s4, out s8)
l230706A2:
	0<32> = dwArg0128
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3_11
	s4Out = s4
	s8Out = s8
	return dwArgE4
pbuf_take_at_exit:


word32 pbuf_clone(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_query
//      recv_raw
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0034:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
pbuf_clone_entry:
l230706B4:
	word32 a0_19
	word32 mstatus_35
	word32 s5_37
	word32 s6_38
	word32 s0_122
	word32 a1_123
	word32 a2_124
	word32 a5_125
	word32 a7_126
	word32 s8_127
	word32 a4_22
	word32 a3_21
	word32 s1_25
	word32 s2_100
	word32 s3_101
	word32 s4_102
	word32 ra_36 = pbuf_alloc(ra, s0, a2, a0, CONVERT(Mem5[a2 + 8<i32>:uint16], uint16, word32), a1, a3, a4, mstatus, s0, dwArg34, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0148, out s0_122, out s1_25, out a0_19, out a1_123, out a2_124, out a3_21, out a4_22, out a5_125, out a7_126, out s2_100, out s3_101, out s4_102, out s5_37, out s6_38, out s8_127, out mstatus_35)
	word32 s0_44 = a0_19
	branch a0_19 == 0<32> l230706D2
l230706CC:
	word32 a0_128
	s0_44 = pbuf_copy(a0_19, s1_25, out s1_25, out a0_128, out a3_21, out a4_22, out s2_100, out s3_101, out s4_102)
l230706D2:
	s1Out = s1_25
	a0Out = s0_44
	a3Out = a3_21
	a4Out = a4_22
	s2Out = s2_100
	s3Out = s3_101
	s4Out = s4_102
	s5Out = s5_37
	s6Out = s6_38
	mstatusOut = mstatus_35
	return ra_36
pbuf_clone_exit:


word32 pbuf_try_get_at(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_recv
//      pbuf_get_at
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 t3
// Preserved: sp
pbuf_try_get_at_entry:
l230706DE:
	pbuf_skip_const(a0, a1, fp + 0xFFFFFFEE<32>)
	word32 a5_12 = 0xFFFFFFFF<32>
	branch a0 == 0<32> l23070704
l230706EE:
	a4 = CONVERT(wLoc12, uint16, word32)
	a3 = CONVERT(Mem6[a0 + 10<i32>:uint16], uint16, word32)
	a5_12 = 0xFFFFFFFF<32>
	branch a4 >=u a3 l23070704
l230706FC:
	a5_12 = CONVERT(Mem6[a4 + 0xFFFFFFFF<32>:byte], byte, word32)
l23070704:
	a3Out = a3
	a4Out = a4
	a5Out = a5_12
	return a5_12
pbuf_try_get_at_exit:


word32 pbuf_get_at(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_memcmp
//      sntp_recv
//      httpc_tcp_recv
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a2 a3 a4 a5 t3
// Preserved: sp
pbuf_get_at_entry:
l2307070C:
	word32 a3_12
	word32 a4_13
	word32 a5_30
	word32 a0_14 = pbuf_try_get_at(a0, a1, out a3_12, out a4_13, out a5_30)
	branch a0_14 >= 0<32> l2307071A
l23070718:
	a0_14 = 0<32>
l2307071A:
	a3Out = a3_12
	a4Out = a4_13
	return a0_14 & 255<i32>
pbuf_get_at_exit:


void pbuf_put_at(word32 s0, word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..7] s0:[16..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 s0 s8 t3
// Preserved: sp
pbuf_put_at_entry:
l23070724:
	pbuf_skip_const(a0, a1, fp + 0xFFFFFFEE<32>)
	uint16 wLoc12_25 = SLICE(s0, uint16, 16)
	branch a0 == 0<32> l2307074A
l23070736:
	word32 a4_13 = CONVERT(wLoc12_25, uint16, word32)
	word32 a5_14 = CONVERT(Mem10[a0 + 10<i32>:uint16], uint16, word32)
	branch a4_13 >=u a5_14 l2307074A
l23070742:
	Mem17[a5_14 + a4_13:byte] = SLICE(a2, byte, 0)
l2307074A:
	return
pbuf_put_at_exit:


word32 pbuf_memcmp(word32 a0, word32 a1, word32 a3, word32 dwArg74, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_memfind
//      httpc_tcp_recv
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] Stack +0074:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 t3 tp
// Preserved: sp
pbuf_memcmp_entry:
l23070752:
	word32 a4_141 = CONVERT(Mem0[a0 + 8<i32>:uint16], uint16, word32)
	word32 a5_8 = a1 + a3
	branch a4_141 >= a5_8 l23070764
l23070764:
	word32 s1_20 = a0
	word32 s0_21 = a1
l23070774:
	word32 a5_147 = CONVERT(Mem19[s1_20 + 10<i32>:uint16], uint16, word32)
	branch s0_21 <u a5_147 l23070786
l2307077C:
	s1_20 = Mem19[s1_20:word32]
	s0_21 = CONVERT(SLICE(s0_21 - a5_147, word16, 0), word16, word32)
	branch s1_20 != 0<32> l23070774
l23070786:
	word32 s3_159 = 0<32>
l23070788:
	word32 a0_129
	word32 s2_32 = s3_159 << 0x10<u32>
	branch s2_32 >>u 0x10<u32> <u a3 l23070798
l23070798:
	s3_159 = s3_159 + 1<32>
	word32 a0_45 = pbuf_get_at(s1_20, CONVERT(SLICE((s2_32 >>u 0x10<u32>) + s0_21, word16, 0), word16, word32), out a3, out a4_141)
	s0_21 = a3
	a5_147 = CONVERT(Mem44[dwArg74 + s3_159 + -1<i32>:byte], byte, word32)
	branch a5_147 == a0_45 l23070788
l230707BC:
	a5_147 = 0xFFFFFFE<32>
	word32 a0_58 = s2_32 >>u 0x10<u32>
	branch s2_32 >>u 0x10<u32> <=u 0xFFFFFFE<32> l230707C8
l230707C6:
	a0_58 = 0xFFFFFFFE<32>
l230707C8:
	a0_129 = CONVERT(SLICE(a0_58 + 1<32>, word16, 0), word16, word32)
l23070794:
	a0_129 = 0<32>
l230707CE:
	0<32> = dwArg0128
	s1Out = s1_20
	a0Out = a0_129
	a3Out = a3
	a4Out = a4_141
	a5Out = a5_147
	s2Out = s2_32 >>u 0x10<u32>
	s3Out = s3_159
	return dwArgE4
l2307075E:
	s1Out = s1
	a0Out = 0xFFFFFFF<32>
	a3Out = a3
	a4Out = a4_141
	a5Out = a5_8
	s2Out = s2
	s3Out = s3
	return s0
pbuf_memcmp_exit:


word32 pbuf_memfind(word32 a0, word32 a2, word32 a3, word32 dwArg54, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_recv
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] Stack +0054:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
pbuf_memfind_entry:
l230707DC:
	word32 s1_114
	word32 s0_46
	word32 a5_111 = CONVERT(Mem15[a0 + 8<i32>:uint16], uint16, word32)
	word32 a4_108 = a2 + a3
	s1_114 = s1
	branch a5_111 < a4_108 l2307080A
l230707F6:
	a5_111 = a5_111 - a2
	s3 = a0
	s2 = a2
	word32 s0_27 = a3
	s1_114 = CONVERT(SLICE(a5_111, word16, 0), word16, word32)
l23070806:
	branch s1_114 >=u s0_27 l23070820
l23070820:
	word32 a0_40
	s0_46 = pbuf_memcmp(s3, s0_27, s2, dwArg54, dwArg0108, out s1_114, out a0_40, out a3, out a4_108, out a5_111, out s2, out s3)
	branch a0_40 == 0<32> l2307080E
l2307082E:
	s0_27 = CONVERT(SLICE(s0_46 + 1<32>, word16, 0), word16, word32)
l2307080A:
	s0_46 = 0xFFFFFFF<32>
l2307080E:
	s1Out = s1_114
	a0Out = s0_46
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4_108
	a5Out = a5_111
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = s4
	return s1
pbuf_memfind_exit:


word32 raw_input(word32 ra, word32 a0, word32 a1, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
raw_input_entry:
l23070836:
	word32 a5_271
	word32 a3_269
	word32 a4_270
	word32 s6_118 = ip4_addr_isbroadcast_u32(a0, a1, out a3_269, out a4_270, out a5_271)
	word32 s4_116 = a0
	word32 s3_115 = 0<32>
	word32 s0_113 = Mem22[0x4200F65C<32>:int32]
	word32 s5_117 = CONVERT(Mem22[Mem22[a0 + 4<i32>:int32] + 9<i32>:byte], byte, word32)
	word32 a0_130 = 0<32>
	word32 s1_111 = 0x42026918<32>
	word32 s2_114 = 0x4200F65C<32>
	word32 s7_119 = 0x42027000<32>
l2307087E:
	branch s0_113 == 0<32> l230708DE
l23070880:
	word32 a5_45 = CONVERT(Mem22[s0_113 + 16<i32>:byte], byte, word32)
	branch a5_45 != s5_117 l230708FC
l23070888:
	word32 a4_47 = CONVERT(Mem22[s0_113 + 8<i32>:byte], byte, word32)
	branch a4_47 == 0<32> l2307089E
l2307088E:
	s1_111 = Mem22[a5_45 + 4<i32>:word32]
	a5_45 = CONVERT(Mem22[a5_45 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
	branch a4_47 != a5_45 l230708FC
l2307089E:
	s0_113 = Mem22[a5_45:word32]
	branch s6_118 == 0<32> l230708F4
l230708F4:
	branch a5_45 == 0<32> l230708A6
l230708F6:
	s1_111 = Mem22[a4_47 + 20<i32>:word32]
	branch a4_47 == a5_45 l230708A6
l230708A4:
	branch a5_45 != 0<32> l230708FC
l230708A6:
	word32 a5_61 = CONVERT(Mem22[s0_113 + 17<i32>:byte], byte, word32)
	branch (a5_61 & 1<32>) == 0<32> l230708B6
l230708AE:
	s0_113 = Mem22[a4_47 + 4<i32>:word32]
	s1_111 = Mem22[(a5_61 & 1<32>) + 16<i32>:word32]
	branch a4_47 != (a5_61 & 1<32>) l230708FC
l230708B6:
	s0_113 = Mem22[(a5_61 & 1<32>) + 20<i32>:word32]
	branch (a5_61 & 1<32>) == 0<32> l230708FC
l230708BA:
	word32 s0_73 = Mem22[a0_130 + 24<i32>:word32]
	word32 a5_112
	word32 a0_121
	call a5_61 & 1<32> (retsize: 0;)
		uses: a0:a0_72,a1:s0_73,a2:s4_82,a3:s7_77 + -1752<i32>,ra:ra_105,s0:s0_73,s1:s1_85,s2:s2_92,s3:s3_96,s4:s4_82,s5:s5_46,s6:s6_56,s7:s7_77
		defs: a0:a0_121,a5:a5_112,ra:ra_120,s0:s0_113,s1:s1_111,s2:s2_114,s3:s3_115,s4:s4_116,s5:s5_117,s6:s6_118,s7:s7_119
	branch a0_121 == 0<32> l23070902
l23070902:
	a0_130 = 2<32>
l230708FC:
	s3_115 = s0_113
	s0_113 = Mem22[s0_113 + 12<i32>:word32]
l230708C8:
	a0_130 = 1<32>
	branch s3_115 == 0<32> l230708DE
l230708CE:
	word32 s0_136 = Mem22[a5_112 + 12<i32>:word32]
	Mem137[s3_115 + 12<i32>:word32] = a5_112
	word32 a5_138 = Mem137[s2_114:int32]
	Mem139[s2_114:word32] = s0_136
	Mem140[a5_138 + 12<i32>:word32] = s0_136
l230708DE:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_111
	a0Out = a0_130
	a2Out = dwArgB8
	s2Out = s2_114
	s3Out = s3_115
	s4Out = dwArg78
	s5Out = s5_117
	s6Out = s6_118
	s8Out = s5
	return ra
raw_input_exit:


word32 raw_bind(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_bind
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a5
// Preserved: sp
raw_bind_entry:
l23070906:
	word32 a5_10 = 0xFFFFFFFA<32>
	branch a0 == 0<32> l23070912
l2307090A:
	branch a1 == 0<32> l23070912
l2307090C:
	Mem8[0xFFFFFFFA<32>:word32] = a0
	a5_10 = 0<32>
l23070912:
	return a5_10
raw_bind_exit:


word32 raw_bind_netif(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
raw_bind_netif_entry:
l23070916:
	word32 a5_3 = 0<32>
	branch a1 == 0<32> l23070924
l2307091A:
	a5_3 = CONVERT(Mem0[a1 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
l23070924:
	Mem12[a0 + 8<i32>:byte] = SLICE(a5_3, byte, 0)
	return a5_3
raw_bind_netif_exit:


word32 raw_connect(word32 a0, word32 a1, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_connect
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
raw_connect_entry:
l2307092A:
	branch a0 == 0<32> l23070946
l23070930:
	branch a1 == 0<32> l23070946
l23070946:
	a4Out = a4
	a5Out = <invalid>
	return 0xFFFFFFFA<32>
l23070932:
	Mem11[a4 + 4<i32>:word32] = a0
	word32 a4_12 = CONVERT(Mem11[a0 + 17<i32>:byte], byte, word32)
	Mem14[a0 + 17<i32>:byte] = SLICE(a4_12 | 1<i32>, byte, 0)
	a4Out = a4_12 | 1<i32>
	a5Out = <invalid>
	return 0<32>
raw_connect_exit:


void raw_recv(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_newconn
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
raw_recv_entry:
l23070948:
	Mem5[a1 + 20<i32>:word32] = a0
	Mem7[a2 + 24<i32>:word32] = a0
	return
raw_recv_exit:


word32 raw_sendto_if_src(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 s5, word32 s6, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_sendto
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
raw_sendto_if_src_entry:
l2307094E:
	word32 s1_175
	branch a0 == 0<32> l23070A64
l23070962:
	branch a2 == 0<32> l23070A64
l23070966:
	branch a3 == 0<32> l23070A64
l2307096A:
	word32 s0_136 = a1
	branch a4 == 0<32> l23070A64
l23070972:
	branch (CONVERT(Mem17[a0 + 17<i32>:byte], byte, word32) & 2<32>) == 0<32> l230709A4
l230709A4:
	a4 = CONVERT(Mem17[a1 + 8<i32>:uint16], uint16, word32)
	a5 = 0xFFFFFEB<32>
	branch a4 <=u 0xFFFFFEB<32> l230709C6
l230709C6:
	word32 s2_49
	word32 s4_123 = a4
	word32 s1_31 = a0
	word32 s5_115 = a3
	word32 s3_35 = a2
	word32 a2_38
	word32 a3_39
	word32 a4_40
	word32 a1_449
	word32 a5_450
	branch pbuf_add_header(a1, 0x14<32>, out a1_449, out a2_38, out a3_39, out a4_40, out a5_450) == 0<32> l23070A50
l23070A50:
	word32 a1_477
	word32 a3_478
	branch pbuf_remove_header(a1, 0x14<32>, a2_38, out a1_477, out a3_478, out a4, out a5) != 0<32> l230709B0
l23070A5A:
	s2_49 = a1
l230709D8:
	word32 a0_54
	word32 a3_56
	word32 a1_451
	word32 a2_452
	word32 a7_453
	word32 s2_454
	word32 s8_455
	ra = pbuf_alloc(ra, a1, a0, 162<i32>, 0<32>, 640<i32>, a3_39, a4_40, mstatus, s4, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_136, out s1_31, out a0_54, out a1_451, out a2_452, out a3_56, out a4, out a5, out a7_453, out s2_454, out s3_35, out s4_123, out s5_115, out s6, out s8_455, out mstatus)
	s2_49 = a0_54
	branch a0_54 == 0<32> l230709B0
l230709EA:
	branch CONVERT(Mem17[s0_136 + 8<i32>:uint16], uint16, word32) == 0<32> l230709F6
l230709F0:
	pbuf_chain(a0_54, s0_136, a3_56, a4, mstatus)
l230709F6:
	word32 a3_107
	branch (CONVERT(Mem17[s1_31 + 17<i32>:byte], byte, word32) & 4<32>) == 0<32> l23070A1A
l230709FE:
	branch (Mem17[s3_35:int32] & 240<i32>) != 224<i32> l23070A5E
l23070A0E:
	Mem98[s2_49 + 13<i32>:byte] = SLICE(CONVERT(Mem17[s2_49 + 13<i32>:byte], byte, word32) | 4<i32>, byte, 0)
l23070A1A:
	branch (Mem100[s3_35:int32] & 240<i32>) != 224<i32> l23070A5E
l23070A5E:
	a3_107 = CONVERT(Mem106[s1_31 + 11<i32>:byte], byte, word32)
l23070A2A:
	a3_107 = CONVERT(Mem100[s1_31 + 19<i32>:byte], byte, word32)
l23070A2E:
	word32 a0_149
	word32 a3_152
	word32 s0_158
	word32 s2_160
	word32 s4_162
	word32 s1_456
	word32 a1_457
	word32 a7_458
	word32 s3_459
	word32 s5_460
	word32 s6_461
	word32 s7_462
	word32 s8_463
	word32 s9_464
	word32 ra_157 = ip4_output_if(ra, s0_136, s1_31, s2_49, s4_123, s3_35, a3_107, CONVERT(Mem110[s1_31 + 10<i32>:byte], byte, word32), CONVERT(Mem110[s1_31 + 16<i32>:byte], byte, word32), s5_115, s4_123, s5_115, s6, s7, out s0_158, out s1_456, out a0_149, out a1_457, out a3_152, out a4, out a5, out a7_458, out s2_160, out s3_459, out s4_162, out s5_460, out s6_461, out s7_462, out s8_463, out s9_464)
	s1_175 = a0_149
	branch s0_158 == s2_160 l230709B2
l23070A48:
	word32 s0_465
	word32 a0_466
	word32 a1_467
	word32 a2_468
	word32 a3_469
	word32 a7_470
	word32 s2_471
	word32 s3_472
	word32 s4_473
	word32 s5_474
	word32 s6_475
	word32 s8_476
	pbuf_free(ra_157, s2_160, a3_152, a4, s4_162, mstatus, dwArg0108, out s0_465, out s1_175, out a0_466, out a1_467, out a2_468, out a3_469, out a4, out a5, out a7_470, out s2_471, out s3_472, out s4_473, out s5_474, out s6_475, out s8_476, out mstatus)
l230709B0:
	s1_175 = 0xFFFFFFFF<32>
l2307097A:
	a4 = CONVERT(Mem17[a1 + 10<i32>:uint16], uint16, word32)
	a5 = 0x13<32>
	branch a4 <=u 0x13<32> l23070A64
l23070A64:
	s1_175 = 0xFFFFFFFA<32>
l230709B2:
	a0Out = s1_175
	a4Out = a4
	a5Out = a5
	mstatusOut = mstatus
	return s1
l23070984:
l230709A0_thunk_ip4_output_if:
	word32 s6_445
	word32 s8_447
	word32 s4_443
	word32 s3_442
	word32 s5_444
	word32 a0_244
	word32 a4_248
	word32 a5_249
	word32 s0_253
	word32 s7_446
	word32 s9_448
	word32 s2_441
	word32 a7_440
	word32 a3_439
	word32 a1_438
	word32 s1_437
	ip4_output_if(ra, s1, s1, a1, a4, 0<32>, 0<32>, 0<32>, 0<32>, a3, dwArg04, s5, s6, s7, out s0_253, out s1_437, out a0_244, out a1_438, out a3_439, out a4_248, out a5_249, out a7_440, out s2_441, out s3_442, out s4_443, out s5_444, out s6_445, out s7_446, out s8_447, out s9_448)
	a0Out = a0_244
	a4Out = a4_248
	a5Out = a5_249
	mstatusOut = mstatus
	return s0_253
raw_sendto_if_src_exit:


word32 raw_sendto(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 s4, word32 s5, word32 s6, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg38, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_send
//      lwip_netconn_do_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
raw_sendto_entry:
l23070A68:
	branch a0 == 0<32> l23070AE4
l23070A6A:
	branch a2 == 0<32> l23070AE4
l23070AE4:
	a0Out = 0xFFFFFFFA<32>
	a4Out = a4
	a5Out = a5
	mstatusOut = mstatus
	return s0
l23070A6C:
	word32 a4_247
	word32 a0_25
	word32 a5_23
	word32 a0_16 = CONVERT(Mem14[a0 + 8<i32>:byte], byte, word32)
	branch a0_16 == 0<32> l23070A96
l23070A96:
	word32 a2_21 = Mem14[a5:word32]
	a5_23 = a5 & 240<i32>
	branch (a5 & 240<i32>) == 224<i32> l23070AAC
l23070AAC:
	word32 a4_336
	a0_25 = netif_get_by_index(CONVERT(Mem14[a0 + 18<i32>:byte], byte, word32), out a4_336, out a5_23)
	branch a0_25 == 0<32> l23070AA4
l23070AA4:
	word32 a3_335
	word32 a2_334
	a0_25 = ip4_route(a2_21, a5_23, out a2_334, out a3_335, out a4_247, out a5_23)
l23070A82:
	a0_25 = netif_get_by_index(a0_16, out a4_247, out a5_23)
l23070A86:
	branch a0_25 != 0<32> l23070AB6
l23070AB6:
	word32 a4_51
	word32 s0_46 = Mem14[a5_23:word32]
	branch a5_23 == 0<32> l23070ADE
l23070ABA:
	branch (a5_23 & 240<i32>) == 224<i32> l23070ADE
l23070ADE:
	a4_51 = a0_25 + 4<i32>
l23070AC6:
	a4_51 = s0_46
l23070AC8:
	0<32> = dwArg38
l23070ADA_thunk_raw_sendto_if_src:
	word32 a0_116
	word32 a4_127
	word32 a5_128
	word32 mstatus_142
	word32 s0_119 = raw_sendto_if_src(ra, a2, s0_46, a1, a2, a0_25, a4_51, s4, s5, s6, s7, mstatus, dwArg04, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out a0_116, out a4_127, out a5_128, out mstatus_142)
	a0Out = a0_116
	a4Out = a4_127
	a5Out = a5_128
	mstatusOut = mstatus_142
	return s0_119
l23070A88:
	0<32> = dwArg38
	a0Out = 0xFFFFFFFC<32>
	a4Out = a4_247
	a5Out = a5_23
	mstatusOut = mstatus
	return s0
raw_sendto_exit:


word32 raw_send(word32 ra, word32 a0, word32 a1, word32 a5, word32 s4, word32 s5, word32 s6, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg38, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_send
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
raw_send_entry:
l23070AE8:
l23070AEC_thunk_raw_sendto:
	word32 a0_14
	word32 a4_18
	word32 a5_19
	word32 mstatus_22
	word32 s0_24 = raw_sendto(ra, a0, a1, a0 + 4<i32>, a5, s4, s5, s6, s7, mstatus, dwArg04, dwArg24, dwArg38, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out a0_14, out a4_18, out a5_19, out mstatus_22)
	a0Out = a0_14
	a4Out = a4_18
	a5Out = a5_19
	mstatusOut = mstatus_22
	return s0_24
raw_send_exit:


word32 raw_remove(word32 a0, word32 a3, word32 a5, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_delconn
// MayUse:  a0:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
raw_remove_entry:
l23070AF0:
	word32 a4_6 = Mem0[a5:word32]
	word32 a1_15 = a0
	branch a5 != a0 l23070B0C
l23070B0C:
	branch a5 == 0<32> l23070B04
l23070B0E:
	word32 a5_12 = Mem0[a4_6 + 12<i32>:word32]
	branch a4_6 == 0<32> l23070B04
l23070B12:
	branch a4_6 != a0 l23070B0A
l23070B0A:
	a5 = a4_6
l23070B16:
	a1_15 = Mem0[a4_6 + 12<i32>:word32]
	Mem16[a4_6 + 12<i32>:word32] = a5_12
l23070B00:
	Mem18[a5:word32] = a4_6
l23070B04:
l23070B06_thunk_memp_free:
	word32 a2_40
	word32 a5_28
	word32 a0_29
	word32 a3_31
	word32 a4_32
	memp_free(0<32>, a1_15, a3, a4_6, mstatus, out a0_29, out a2_40, out a3_31, out a4_32, out a5_28)
	a3Out = a3_31
	a4Out = a4_32
	a5Out = a5_28
	return a0_29
raw_remove_exit:


word32 raw_new(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_new_ip_type
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a2 a4 a5 s1
// Trashed: a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
raw_new_entry:
l23070B1C:
	word32 a0_16
	word32 a2_73
	word32 a3_74
	word32 a4_20
	word32 a5_17
	word32 s1_21 = memp_malloc(a0, 0<32>, a3, a4, mstatus, out a0_16, out a2_73, out a3_74, out a4_20, out a5_17)
	branch a0_16 == 0<32> l23070B54
l23070B30:
	word32 t1_75
	word32 a0_76
	word32 a1_77
	word32 a2_78
	word32 a3_79
	word32 a5_80
	memset(ra, a0_16, 0<32>, 0x1C<32>, out t1_75, out a0_76, out a1_77, out a2_78, out a3_79, out a4_20, out a5_80)
	Mem36[a0_16 + 11<i32>:byte] = 0xFF<8>
	Mem37[a0_16 + 19<i32>:byte] = 0xFF<8>
	a5_17 = Mem37[a4_20:word32]
	Mem40[a0_16 + 16<i32>:byte] = SLICE(s1_21, byte, 0)
	Mem41[a0_16:word32] = a5_17
	Mem42[a4_20 + 12<i32>:word32] = a0_16
l23070B54:
	a2Out = dwArg10
	a4Out = a4_20
	a5Out = a5_17
	return s1_21
raw_new_exit:


word32 raw_new_ip_type(word32 ra, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_newconn
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a0 a2 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: sp
raw_new_ip_type_entry:
l23070B60:
l23070B62_thunk_raw_new:
	word32 a2_9
	word32 a4_11
	word32 a5_12
	word32 s1_13 = raw_new(ra, a1, a3, a4, mstatus, out a2_9, out a4_11, out a5_12)
	a0Out = a1
	a2Out = a2_9
	a4Out = a4_11
	a5Out = a5_12
	return s1_13
raw_new_ip_type_exit:


void raw_netif_ip_addr_changed(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_remove
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
raw_netif_ip_addr_changed_entry:
l23070B66:
	branch a0 == 0<32> l23070B7C
l23070B68:
	branch a5 == 0<32> l23070B7C
l23070B6C:
	branch a1 == 0<32> l23070B7C
l23070B6E:
	branch a5 == 0<32> l23070B7C
l23070B72:
	word32 a5_10 = Mem0[0x4200F65C<32>:int32]
l23070B7A:
	branch a5_10 != 0<32> l23070B7E
l23070B7E:
	word32 a5_14 = Mem13[a3:word32]
	branch a3 != a4 l23070B8A
l23070B86:
	Mem18[a4:word32] = a5_14
l23070B8A:
	a5_10 = Mem20[a5_14 + 12<i32>:word32]
l23070B7C:
	return
raw_netif_ip_addr_changed_exit:


void stats_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
stats_init_entry:
l23070B8E:
	return
stats_init_exit:


word32 tcp_new_port(word32 a2, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_connect
//      altcp_tcp_bind
// MayUse:  a2:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
tcp_new_port_entry:
l23070B90:
	word32 a5_11 = CONVERT(Mem0[0x4200ECC0<32>:uint16], uint16, word32)
	word32 a0_34 = 0x4000000<32>
l23070BA6:
	a5_11 = CONVERT(SLICE(a5_11 + 1<32>, word16, 0), word16, word32)
	branch a5_11 != 0xFFFFFFF<32> l23070BB2
l23070BB0:
	a5_11 = 0xC000000<32>
l23070BB2:
l23070BBA:
	word32 a3_23 = Mem0[a2:word32]
	a2 = Mem0[a2:word32]
l23070BBE:
	branch a2 != 0<32> l23070BCE
l23070BCE:
	branch CONVERT(Mem0[a2 + 22<i32>:uint16], uint16, word32) != a5_11 l23070BE4
l23070BE4:
	a2 = Mem0[a2 + 12<i32>:word32]
l23070BD6:
	a0_34 = CONVERT(SLICE(a0_34 + 0xFFFFFFFF<32>, word16, 0), word16, word32)
	branch a0_34 != 0<32> l23070BA6
l23070BDE:
	Mem37[0x4200ECC0<32>:word16] = SLICE(a5_11, word16, 0)
	a3Out = a3_23
	a5Out = <invalid>
	return a0_34
l23070BC0:
	branch a3_23 != 0xDCF3C890<32> l23070BBA
l23070BC6:
	Mem42[0x4200ECC0<32>:word16] = SLICE(a5_11, word16, 0)
	a3Out = a3_23 + 4<32>
	a5Out = <invalid>
	return a5_11
tcp_new_port_exit:


word32 tcp_close_shutdown_fin(word32 ra, word32 s1, word32 a0, word32 a3, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_new_ip_type
//      tcp_close
//      tcp_fasttmr
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_close_shutdown_fin_entry:
l23070BE8:
	word32 a2_17
	word32 s0_29
	word32 a5_42
	word32 a4_102 = CONVERT(Mem7[a0 + 20<i32>:byte], byte, word32)
	word32 a5_10 = 4<32>
	branch a4_102 == 4<32> l23070C08
l23070BFA:
	branch a4_102 == 7<32> l23070C28
l23070C28:
	word32 a0_16
	ra = tcp_send_fin(ra, s1, a3, 7<32>, mstatus, dwArg14, dwArg28, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_29, out s1, out a0_16, out a1, out a2_17, out a3, out s2, out s3, out s4, out s5, out s6, out s8, out mstatus)
	a5_10 = a0_16
	branch a0_16 != 0<32> l23070C34
l23070C30:
	a5_42 = 9<32>
l23070C00:
	a3 = 3<32>
	a5_10 = 0<32>
	branch a4_102 != 3<32> l23070C1E
l23070C08:
	word32 a0_52
	ra = tcp_send_fin(ra, s1, a3, a5_10, mstatus, dwArg14, dwArg28, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_29, out s1, out a0_52, out a1, out a2_17, out a3, out s2, out s3, out s4, out s5, out s6, out s8, out mstatus)
	a5_10 = a0_52
	branch a0_52 != 0<32> l23070C34
l23070C34:
	a4_102 = 0xFFFFFFFF<32>
	branch a5_10 != 0xFFFFFFFF<32> l23070C1E
l23070C3A:
	Mem84[s0_29 + 26<i32>:word16] = SLICE(CONVERT(Mem7[s0_29 + 26<i32>:uint16], uint16, word32) | 8<i32>, word16, 0)
l23070C10:
	a5_42 = 5<32>
l23070C12:
	Mem88[s0_29 + 20<i32>:byte] = SLICE(a5_42, byte, 0)
	word32 s0_315
	word32 a0_316
	word32 a2_317
	word32 a5_318
	ra = tcp_output(ra, s1, s0_29, a2_17, s7, mstatus, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s0_315, out s1, out a0_316, out a1, out a2_317, out a3, out a4_102, out a5_318, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
l23070C1C:
	a5_10 = 0<32>
l23070C1E:
	s1Out = s1
	a0Out = a5_10
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_102
	a5Out = a5_10
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_close_shutdown_fin_exit:


word32 tcp_init(word32 ra, word32 a0, word32 a2, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a3 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
tcp_init_entry:
l23070C48:
	word32 a0_8
	word32 a3_10
	word32 a1_63
	word32 a2_64
	word32 a4_65
	word32 a5_66
	word32 s4_67
	word32 s8_68
	bl_rand(a0, a2, out a0_8, out a1_63, out a2_64, out a3_10, out a4_65, out a5_66, out s4_67, out s8_68)
	Mem27[0x4200FCC0<32>:word16] = SLICE(CONVERT(SLICE(CONVERT(SLICE(a0_8, word14, 0), word14, word32) + 0xFC000000<32>, word16, 0), word16, word32), word16, 0)
l23070C72_thunk_printf:
	word32 a0_31
	word32 a3_36
	word32 s1_40
	word32 a1_69
	word32 a2_70
	word32 a4_71
	word32 a5_72
	word32 a7_73
	word32 s2_74
	word32 s3_75
	word32 s4_76
	word32 s5_77
	word32 s6_78
	word32 s7_79
	word32 s8_80
	word32 s9_81
	word32 s10_82
	word32 s11_83
	word32 t4_84
	word32 ra_39 = printf(ra, 0x230C3734<32>, a3_10, dwArg08, dwArg28, dwArg70, ra, dwArg98, dwArgBC, out s1_40, out a0_31, out a1_69, out a2_70, out a3_36, out a4_71, out a5_72, out a7_73, out s2_74, out s3_75, out s4_76, out s5_77, out s6_78, out s7_79, out s8_80, out s9_81, out s10_82, out s11_83, out t4_84)
	s1Out = s1_40
	a0Out = a0_31
	a3Out = a3_36
	return ra_39
tcp_init_exit:


word32 tcp_free(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_listen_with_backlog_and_err
//      tcp_abort
//      tcp_close
//      tcp_tmr
//      tcp_input_delayed_close
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
tcp_free_entry:
l23070C76:
l23070C7A_thunk_memp_free:
	word32 a5_9
	word32 a0_10
	word32 a2_11
	word32 a3_12
	word32 a4_13
	word32 s1_14 = memp_free(2<32>, a0, a3, a4, mstatus, out a0_10, out a2_11, out a3_12, out a4_13, out a5_9)
	a0Out = a0_10
	a1Out = a0
	a2Out = a2_11
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_9
	return s1_14
tcp_free_exit:


word32 tcp_bind(word32 s1, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg44, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_bind
//      altcp_tcp_bind
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s8 t1 t3 tp
// Preserved: sp
tcp_bind_entry:
l23070C7E:
	branch a1 != 0<32> l23070C90
l23070C88:
	a1 = 0x230CBADC<32>
l23070C90:
	word32 a0_128 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l23070CB8
l23070C94:
	a4 = CONVERT(Mem7[a0 + 20<i32>:byte], byte, word32)
	a0_128 = 0xFFFFFFFA<32>
	branch a4 != 0<32> l23070CB8
l23070C9C:
	word32 a3_18 = CONVERT(Mem7[a0 + 9<i32>:byte], byte, word32)
	word32 a3_110 = a3_18 & 4<32>
	word32 a6_20 = CONVERT((a3_18 & 4<32>) <u 1<i32>, bool, word32)
	branch a2 != 0<32> l23070CC0
l23070CC0:
	word32 a0_26 = 0<32>
l23070CCA:
	a4 = Mem7[a5:word32]
	a5 = Mem7[a5:word32]
l23070CCE:
	branch a5 != 0<32> l23070CF8
l23070CF8:
	branch CONVERT(Mem7[a5 + 22<i32>:uint16], uint16, word32) != a2 l23070D22
l23070D00:
	branch (a3_18 & 4<32>) == 0<32> l23070D0E
l23070D02:
	branch (CONVERT(Mem7[a5 + 9<i32>:byte], byte, word32) & 4<i32>) != 0<32> l23070D22
l23070D0E:
	word32 t1_40 = Mem7[a5:int32]
	branch t1_40 == 0<32> l23070D26
l23070D16:
	word32 a7_43 = Mem7[a1:int32]
	branch a7_43 == 0<32> l23070D26
l23070D1E:
	branch t1_40 == a7_43 l23070D26
l23070D26:
	a0_128 = 0xFFFFFFF8<32>
l23070D22:
	a5 = Mem7[a5 + 12<i32>:word32]
l23070CD0:
	a0_26 = a0_26 + 1<32>
	branch a6_20 + 3<32> != a0_26 l23070CCA
l23070CAA:
	tcp_new_port(a2, out a3_110, out a5)
	a2 = dwArg44
	a0_128 = 0xFFFFFFFE<32>
	branch dwArg44 != 0<32> l23070CD8
l23070CD8:
	branch a5 == 0<32> l23070CDE
l23070CDC:
	Mem83[a5:word32] = a0
l23070CDE:
	word32 a4_86 = Mem85[0x42026908<32>:int32]
	Mem90[a0 + 22<i32>:word16] = SLICE(a2, word16, 0)
	Mem91[0x42027908<32>:word32] = a0
	Mem92[a4_86 + 12<i32>:word32] = a0
	word32 a0_233
	word32 a3_235
	word32 a2_234
	word32 s1_232
	word32 s8_236
	tcp_timer_needed(s1, a3_110, mstatus, dwArg24, out s1_232, out a0_233, out a2_234, out a3_235, out a4, out s8_236)
	a0_128 = 0<32>
l23070CB8:
	a4Out = a4
	return a0_128
tcp_bind_exit:


word32 tcp_bind_netif(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
tcp_bind_netif_entry:
l23070D2A:
	word32 a5_3 = 0<32>
	branch a1 == 0<32> l23070D38
l23070D2E:
	a5_3 = CONVERT(Mem0[a1 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
l23070D38:
	Mem12[a0 + 8<i32>:byte] = SLICE(a5_3, byte, 0)
	return a5_3
tcp_bind_netif_exit:


word32 tcp_listen_with_backlog_and_err(word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg38, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_listen
//      altcp_tcp_listen
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0034:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 s1 s2 tp
// Preserved: a1 s0 s8 sp t3
tcp_listen_with_backlog_and_err_entry:
l23070D3E:
	word32 s1_132
	word32 a5_136
	branch a0 == 0<32> l23070E2A
l23070E2A:
	s1_132 = 0<32>
	a5_136 = 0xFFFFFFF0<32>
l23070D4C:
	word32 s0_161 = a0
	branch CONVERT(Mem11[a0 + 20<i32>:byte], byte, word32) != 0<32> l23070E30
l23070E30:
	a5_136 = 0xFFFFFFF1<32>
l23070D54:
	branch (CONVERT(Mem11[a0 + 9<i32>:byte], byte, word32) & 4<32>) == 0<32> l23070D66
l23070D5C:
	word32 a5_23 = Mem11[0x42026900<32>:int32]
l23070D64:
	branch a5_23 != 0<32> l23070E02
l23070E02:
	a3 = CONVERT(Mem11[a5_23 + 22<i32>:uint16], uint16, word32)
	a4 = CONVERT(Mem11[s0_161 + 22<i32>:uint16], uint16, word32)
	branch a3 != a4 l23070E16
l23070E0E:
	a5_23 = Mem11[a3:word32]
	s0_161 = Mem11[a4:word32]
	branch a3 == a4 l23070E36
l23070E36:
	a5_136 = 0xFFFFFFF8<32>
l23070E32:
	s1_132 = 0<32>
l23070E16:
	a5_23 = Mem11[a5_23 + 12<i32>:word32]
l23070D66:
	word32 a5_246
	word32 a0_52
	word32 a2_245
	memp_malloc(s1, 3<32>, a3, a4, mstatus, out a0_52, out a2_245, out a3, out a4, out a5_246)
	s1_132 = a0_52
	a5_136 = 0xFFFFFFFF<32>
	branch a0_52 == 0<32> l23070DEC
l23070D72:
	word32 s0_62 = Mem11[0xF<32>:word32]
	Mem63[0xF<32>:word32] = a0_52
	Mem65[a0_52 + 22<i32>:word16] = SLICE(CONVERT(Mem63[s0_62 + 22<i32>:uint16], uint16, word32), word16, 0)
	Mem67[a0_52 + 20<i32>:byte] = 1<8>
	Mem69[a0_52 + 21<i32>:byte] = SLICE(CONVERT(Mem67[s0_62 + 21<i32>:byte], byte, word32), byte, 0)
	word32 a5_70 = CONVERT(Mem69[s0_62 + 9<i32>:byte], byte, word32)
	Mem71[a0_52 + 8<i32>:byte] = 0<8>
	Mem72[a0_52 + 9<i32>:byte] = SLICE(a5_70, byte, 0)
	Mem74[a0_52 + 11<i32>:byte] = SLICE(CONVERT(Mem72[s0_62 + 11<i32>:byte], byte, word32), byte, 0)
	word32 a5_75 = CONVERT(Mem74[s0_62 + 10<i32>:byte], byte, word32)
	Mem76[a0_52 + 10<i32>:byte] = SLICE(a5_75, byte, 0)
	word32 s0_77 = Mem76[a5_75:word32]
	Mem78[a5_75:word32] = a0_52
	branch CONVERT(Mem78[s0_77 + 22<i32>:uint16], uint16, word32) == 0<32> l23070DC8
l23070DB2:
	a4 = 0x42027000<32>
	word32 a5_81 = Mem78[0x42026908<32>:int32]
	branch a5_81 != s0_77 l23070E1C
l23070E1C:
	branch a5_81 == 0<32> l23070DC4
l23070E1E:
	word32 a5_85 = Mem78[0x4202700C<32>:word32]
	branch s0_77 != 0x42027000<32> l23070E1A
l23070E1A:
	a5_81 = 0x42027000<32>
l23070E24:
	s0_77 = Mem78[0x4202700C<32>:word32]
	Mem89[0x4202700C<32>:word32] = a5_85
l23070DBE:
	s0_77 = Mem78[a5_81 + 12<i32>:word32]
	Mem91[0x42027908<32>:word32] = a5_81
l23070DC4:
	Mem93[s0_77 + 12<i32>:word32] = 0<32>
l23070DC8:
	word32 a5_251
	word32 a1_248
	word32 a4_250
	word32 a0_247
	word32 a3_107
	word32 a2_249
	word32 s1_110 = tcp_free(s0_77, a3, a4, mstatus, out a0_247, out a1_248, out a2_249, out a3_107, out a4_250, out a5_251)
	Mem114[0x23071396<32>:word32] = s1_110
	word32 a4_116 = Mem114[0x42026900<32>:int32]
	Mem117[0x42027900<32>:word32] = s1_110
	Mem118[a4_116 + 12<i32>:word32] = s1_110
	word32 a0_252
	word32 a2_253
	word32 s8_254
	tcp_timer_needed(s1_110, a3_107, mstatus, dwArg34, out s1_132, out a0_252, out a2_253, out a3, out a4, out s8_254)
	a5_136 = 0<32>
l23070DEC:
	branch a2 == 0<32> l23070DF4
l23070DF0:
	Mem147[a2:byte] = SLICE(a5_136, byte, 0)
l23070DF4:
	0<32> = dwArg38
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_136
	return s1_132
tcp_listen_with_backlog_and_err_exit:


word32 tcp_update_rcv_ann_wnd(word32 a0, word32 a2, word32 a3, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
//      altcp_tcp_recved
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5 a6
// Preserved: sp
tcp_update_rcv_ann_wnd_entry:
l23070E3A:
	word32 a1_6 = CONVERT(Mem0[a0 + 40<i32>:uint16], uint16, word32)
	word32 a4_11 = CONVERT(Mem0[a0 + 50<i32>:uint16], uint16, word32)
	word32 a0_14 = a1_6 - a3 + a2
	branch a4_11 <=u 1032<i32> l23070E5A
l23070E56:
	a4_11 = 1032<i32>
l23070E5A:
	word32 a4_20 = a0_14 - CONVERT(SLICE(a4_11, word16, 0), word16, word32)
	branch a4_20 < 0<32> l23070E6C
l23070E6C:
	word32 a4_23 = a2 - a3
	branch a4_23 <= 0<32> l23070E7C
l23070E7C:
	a3 = a3 - a2
	Mem26[a0 + 42<i32>:word16] = SLICE(a3, word16, 0)
l23070E74:
	Mem27[a0 + 42<i32>:word16] = 0<16>
l23070E78:
	a1Out = <invalid>
	a3Out = a3
	a4Out = a4_23
	a5Out = <invalid>
	return 0<32>
l23070E66:
	Mem30[a0 + 42<i32>:word16] = SLICE(a1_6, word16, 0)
	a1Out = <invalid>
	a3Out = a3
	a4Out = a4_20
	a5Out = <invalid>
	return a0_14
tcp_update_rcv_ann_wnd_exit:


word32 tcp_recved(word32 ra, word32 s1, word32 a0, word32 a1, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_recv_null
//      recv_tcp
//      lwip_netconn_do_recv
//      altcp_tcp_recved
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s10 s11 s3 s4 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_recved_entry:
l23070E84:
	branch a0 == 0<32> l23070ED8
l23070ED8:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23070E86:
	word32 a4_9 = CONVERT(Mem8[a0 + 40<i32>:uint16], uint16, word32)
	word32 a1_15 = CONVERT(SLICE(a1 + a4_9, word16, 0), word16, word32)
	branch a1_15 >u 0xFFF810<32> l23070EA4
l23070EA0:
	branch a1_15 >=u a4_9 l23070EA6
l23070EA4:
	a1_15 = 0xFFF810<32>
l23070EA6:
	Mem21[a0 + 40<i32>:word16] = SLICE(a1_15, word16, 0)
	word32 a5_233
	word32 a3_231
	word32 a4_232
	word32 a1_230
	tcp_update_rcv_ann_wnd(a0, a2, a3, out a1_230, out a3_231, out a4_232, out a5_233)
	branch a0 <=u 1031<i32> l23070ED0
l23070ED0:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a3Out = a3
	a4Out = a4_9
	a5Out = 1031<i32>
	s3Out = s3
	s4Out = s4
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23070EB8:
	Mem32[a0 + 26<i32>:word16] = SLICE(CONVERT(Mem21[a0 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
l23070ECC_thunk_tcp_output:
	word32 a0_47
	word32 a5_48
	word32 a3_50
	word32 a4_51
	word32 s0_54
	word32 s1_55
	word32 s4_57
	word32 s10_64
	word32 s11_65
	word32 s3_66
	word32 s7_67
	word32 s9_68
	word32 mstatus_75
	word32 s8_239
	word32 s5_237
	word32 s6_238
	word32 a2_235
	word32 s2_236
	word32 a1_234
	word32 ra_53 = tcp_output(ra, s1, a0, dwArg10, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_54, out s1_55, out a0_47, out a1_234, out a2_235, out a3_50, out a4_51, out a5_48, out s2_236, out s3_66, out s4_57, out s5_237, out s6_238, out s7_67, out s8_239, out s9_68, out s10_64, out s11_65, out mstatus_75)
	s0Out = s0_54
	s1Out = s1_55
	a0Out = a0_47
	a3Out = a3_50
	a4Out = a4_51
	a5Out = a5_48
	s3Out = s3_66
	s4Out = s4_57
	s7Out = s7_67
	s9Out = s9_68
	s10Out = s10_64
	s11Out = s11_65
	mstatusOut = mstatus_75
	return ra_53
tcp_recved_exit:


word32 tcp_seg_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0108, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_segs_free
//      tcp_oos_insert_segment
//      tcp_free_acked_segments.isra.3
//      tcp_receive
//      tcp_input
//      tcp_create_segment
//      tcp_output
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: a6 a7 mstatus ra s0 s2 s3 s4 s5 s6 s8 sp t0 t1 t3 t4 t5 t6
tcp_seg_free_entry:
l23070EDA:
	branch a0 == 0<32> l23070EF8
l23070EF8:
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l23070EDC:
	word32 a1_21 = a0
	word32 a0_6 = Mem0[a0 + 4<i32>:word32]
	branch a0_6 == 0<32> l23070EFA
l23070EFA:
l23070EE2:
	word32 s0_130
	word32 s1_131
	word32 a0_132
	word32 a2_133
	word32 a5_134
	word32 a7_135
	word32 s2_136
	word32 s3_137
	word32 s4_138
	word32 s5_139
	word32 s6_140
	word32 s8_141
	pbuf_free(ra, a0_6, a3, a4, s4, mstatus, dwArg0108, out s0_130, out s1_131, out a0_132, out a1_21, out a2_133, out a3, out a4, out a5_134, out a7_135, out s2_136, out s3_137, out s4_138, out s5_139, out s6_140, out s8_141, out mstatus)
l23070EF4:
l23070EF4_thunk_memp_free:
	word32 a5_50
	word32 a0_51
	word32 a2_52
	word32 a3_53
	word32 a4_54
	word32 s1_55 = memp_free(4<32>, a1_21, a3, a4, mstatus, out a0_51, out a2_52, out a3_53, out a4_54, out a5_50)
	a0Out = a0_51
	a1Out = a1_21
	a2Out = a2_52
	a3Out = a3_53
	a4Out = a4_54
	a5Out = a5_50
	return s1_55
tcp_seg_free_exit:


word32 tcp_segs_free(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgF8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_free_ooseq
//      tcp_pcb_purge
//      tcp_abort
//      tcp_oos_insert_segment
//      altcp_tcp_write
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
tcp_segs_free_entry:
l23070EFE:
	branch a0 != 0<32> l23070F02
l23070F02:
l23070F08:
	word32 a1_19
	word32 a5_23
	word32 a0_61
	word32 a2_62
	word32 s1_24 = tcp_seg_free(ra, Mem8[s0:word32], a3, a4, s4, mstatus, dwArgF8, out a0_61, out a1_19, out a2_62, out a3, out a4, out a5_23)
	branch s0 != 0<32> l23070F08
l23070F12:
	a0Out = s0
	a1Out = a1_19
	a3Out = a3
	a4Out = a4
	a5Out = a5_23
	return s1_24
l23070F00:
	a0Out = a0
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
tcp_segs_free_exit:


void tcp_setprio(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_setprio
// MayUse:  a0:[0..31] a1:[0..7]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_setprio_entry:
l23070F1A:
	branch a0 == 0<32> l23070F20
l23070F1C:
	Mem5[a0 + 21<i32>:byte] = SLICE(a1, byte, 0)
l23070F20:
	return
tcp_setprio_exit:


word32 tcp_seg_copy(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_seg_copy_entry:
l23070F22:
	word32 a0_15
	word32 a2_86
	word32 a3_18
	word32 a4_19
	word32 a5_16
	word32 s1_20 = memp_malloc(s1, 4<32>, a3, a4, mstatus, out a0_15, out a2_86, out a3_18, out a4_19, out a5_16)
	word32 s0_22 = a0_15
	branch a0_15 == 0<32> l23070F42
l23070F34:
	word32 a4_26
	word32 a3_31
	word32 a1_87
	word32 a2_88
	word32 a5_89
	word32 a6_90
	word32 a7_91
	memcpy(a0_15, a1, 0x14<32>, out a1_87, out a2_88, out a3_31, out a4_26, out a5_89, out a6_90, out a7_91)
	s0_22 = Mem10[a0_15 + 4<i32>:word32]
	pbuf_ref(a0_15, a3_31, a4_26, mstatus, out a3_18, out a4_19, out a5_16)
l23070F42:
	s1Out = s1_20
	a0Out = s0_22
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_16
	return s0_22
tcp_seg_copy_exit:


void tcp_arg(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup_tcp
//      accept_function
//      lwip_netconn_do_listen
//      lwip_netconn_do_close
//      altcp_tcp_setup_callbacks
//      altcp_tcp_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_arg_entry:
l23070F4C:
	branch a0 == 0<32> l23070F50
l23070F4E:
	Mem5[a1 + 16<i32>:word32] = a0
l23070F50:
	return
tcp_arg_exit:


void tcp_recv(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup_tcp
//      accept_function
//      lwip_netconn_do_close
//      altcp_tcp_setup_callbacks
//      altcp_tcp_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_recv_entry:
l23070F52:
	branch a0 == 0<32> l23070F58
l23070F54:
	Mem5[a0 + 132<i32>:word32] = a1
l23070F58:
	return
tcp_recv_exit:


void tcp_sent(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup_tcp
//      accept_function
//      lwip_netconn_do_close
//      altcp_tcp_setup_callbacks
//      altcp_tcp_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_sent_entry:
l23070F5A:
	branch a0 == 0<32> l23070F60
l23070F5C:
	Mem5[a0 + 128<i32>:word32] = a1
l23070F60:
	return
tcp_sent_exit:


void tcp_err(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup_tcp
//      accept_function
//      lwip_netconn_do_close
//      altcp_tcp_setup_callbacks
//      altcp_tcp_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_err_entry:
l23070F62:
	branch a0 == 0<32> l23070F68
l23070F64:
	Mem5[a0 + 144<i32>:word32] = a1
l23070F68:
	return
tcp_err_exit:


word32 tcp_accept(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_listen
//      lwip_netconn_do_close
//      altcp_tcp_listen
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
tcp_accept_entry:
l23070F6A:
	branch a0 == 0<32> l23070F78
l23070F6C:
	a4 = CONVERT(Mem0[a0 + 20<i32>:byte], byte, word32)
	branch a4 != 1<32> l23070F78
l23070F76:
	Mem8[a1 + 24<i32>:word32] = a0
l23070F78:
	return a4
tcp_accept_exit:


void tcp_poll(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup_tcp
//      accept_function
//      lwip_netconn_do_close
//      altcp_tcp_close
//      altcp_tcp_set_poll
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..7]
// LiveOut:
// Trashed:
// Preserved: sp
tcp_poll_entry:
l23070F7A:
	branch a0 == 0<32> l23070F84
l23070F7C:
	Mem5[a0 + 140<i32>:word32] = a1
	Mem7[a0 + 29<i32>:byte] = SLICE(a2, byte, 0)
l23070F84:
	return
tcp_poll_exit:


word32 tcp_next_iss(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
//      altcp_tcp_connect
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
tcp_next_iss_entry:
l23070F86:
	word32 a0_9 = a0 + Mem0[0x420268FC<32>:int32]
	Mem10[a0_9:word32] = Mem0[a0:word32]
	return a0_9
tcp_next_iss_exit:


word32 tcp_eff_send_mss_netif(word32 a0, word32 a1, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
//      tcp_output
//      altcp_tcp_connect
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
tcp_eff_send_mss_netif_entry:
l23070F9E:
	branch a1 == 0<32> l23070FC6
l23070FA0:
	word32 a5_5 = CONVERT(Mem0[a1 + 56<i32>:uint16], uint16, word32)
	branch a5_5 == 0<32> l23070FC6
l23070FA6:
	a3 = 40<i32>
	word32 a4_11 = 0<32>
	branch a5_5 <=u 40<i32> l23070FC0
l23070FB0:
	word32 a5_9 = a5_5 + -40<i32> << 16<i32>
	a4_11 = a5_9 >>u 16<i32>
	branch a0 >=u a5_9 >>u 16<i32> l23070FC0
l23070FBE:
	a4_11 = a0
l23070FC0:
	a0 = CONVERT(SLICE(a4_11, word16, 0), word16, word32)
l23070FC6:
	a3Out = a3
	return a0
tcp_eff_send_mss_netif_exit:


word32 tcp_connect(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg38, word32 dwArg48, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_connect
//      altcp_tcp_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a4 a5 mstatus s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_connect_entry:
l23070FC8:
	word32 s1_104 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l23071024
l23070FDE:
	branch a1 == 0<32> l23071024
l23070FE0:
	a5 = CONVERT(Mem19[a0 + 20<i32>:byte], byte, word32)
	s1_104 = 0xFFFFFFF6<32>
	branch a5 != 0<32> l23071024
l23070FE8:
	word32 a3_310
	word32 a2_40
	word32 a0_36
	word32 a1_25 = Mem19[a5:word32]
	Mem29[a5 + 4<i32>:word32] = a0
	Mem31[a0 + 24<i32>:word16] = SLICE(a2, word16, 0)
	word32 a0_32 = CONVERT(Mem31[a0 + 8<i32>:byte], byte, word32)
	branch a0_32 == 0<32> l2307103A
l2307103A:
	a0_36 = ip4_route(a2, a5, out a2_40, out a3_310, out a4, out a5)
l23070FFE:
	a0_36 = netif_get_by_index(a0_32, out a4, out a5)
	a2_40 = a2
	a3_310 = a3
l23071002:
	s1_104 = 0xFFFFFFFC<32>
	branch a0_36 == 0<32> l23071024
l23071008:
	word32 s0_105 = Mem31[a5:word32]
	branch a5 != 0<32> l23071010
l2307100C:
	Mem51[a5:word32] = s0_105
l23071010:
	word32 s5_54 = CONVERT(Mem53[s0_105 + 22<i32>:uint16], uint16, word32)
	branch s5_54 != 0<32> l23071044
l23071044:
	branch (CONVERT(Mem53[s0_105 + 9<i32>:byte], byte, word32) & 4<32>) == 0<32> l2307108A
l2307104C:
	a5 = Mem53[0x42026904<32>:int32]
l23071054:
	branch a5 == 0<32> l23071080
l23071080:
	a5 = Mem53[0x420268F8<32>:int32]
l23071088:
	branch a5 != 0<32> l23071126
l23071126:
	branch CONVERT(Mem53[a5 + 22<i32>:uint16], uint16, word32) != s5_54 l23071148
l2307112E:
	word32 a4_67 = CONVERT(Mem53[a5 + 24<i32>:uint16], uint16, word32)
	branch a4_67 != a2 l23071148
l23071136:
	a5 = Mem53[a3_310:word32]
	s0_105 = Mem53[a4_67:word32]
	branch a3_310 != a4_67 l23071148
l2307113E:
	a5 = Mem53[a3_310 + 4<i32>:word32]
	a4 = Mem53[a1_25:int32]
	branch a3_310 == a4 l2307107C
l23071148:
	a5 = Mem53[a5 + 12<i32>:word32]
l23071056:
	branch CONVERT(Mem53[a5 + 22<i32>:uint16], uint16, word32) == s5_54 l23071062
l23071062:
	word32 a4_80 = CONVERT(Mem53[a5 + 24<i32>:uint16], uint16, word32)
	branch a4_80 != a2 l2307105E
l2307106A:
	a5 = Mem53[a3_310:word32]
	s0_105 = Mem53[a4_80:word32]
	branch a3_310 != a4_80 l2307105E
l23071072:
	a5 = Mem53[a3_310 + 4<i32>:word32]
	a4 = Mem53[a1_25:int32]
	branch a3_310 != a4 l2307105E
l2307107C:
	s1_104 = 0xFFFFFFF8<32>
l2307105E:
	a5 = Mem53[a5 + 12<i32>:word32]
l23071018:
	word32 a3_664
	word32 a0_94 = tcp_new_port(a2_40, out a3_664, out a5)
	Mem103[s0_105 + 22<i32>:word16] = SLICE(a0_94, word16, 0)
	s1_104 = 0xFFFFFFFE<32>
	branch a0_94 != 0<32> l2307108A
l2307108A:
	word32 a0_111 = tcp_next_iss(s0_105)
	Mem116[0x8100838<32>:word32] = s0_105
	Mem119[a0_111 + 80<i32>:word32] = s0_105
	Mem120[s0_105 + 96<i32>:word16] = 0xF810<16>
	Mem123[a0_111 + 0x43<32>:word32] = s0_105
	Mem124[a0_111 + 0x57<32>:word32] = s0_105
	Mem125[a0_111 + 0x5B<32>:word32] = s0_105
	Mem126[s0_105 + 50<i32>:word16] = 0x218<16>
	Mem135[s0_105 + 36<i32>:word32] = 0<32>
	Mem136[s0_105 + 44<i32>:word32] = 0<32>
	word32 a3_140
	Mem143[s0_105 + 50<i32>:word16] = SLICE(tcp_eff_send_mss_netif(536<i32>, a0_36, out a3_140), word16, 0)
	Mem144[s0_105 + 72<i32>:word16] = 1<16>
	Mem152[s0_105 + 136<i32>:word32] = a3
	word32 a0_177
	word32 a3_180
	word32 s5_192
	word32 a1_666
	word32 s4_670
	word32 s1_665
	word32 a2_667
	word32 s2_668
	word32 s3_669
	word32 s6_671
	word32 s8_672
	word32 s0_187
	word32 ra_186 = tcp_enqueue_flags(ra, s0_105, 2<32>, a3_140, mstatus, dwArg04, s1, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_187, out s1_665, out a0_177, out a1_666, out a2_667, out a3_180, out a4, out a5, out s2_668, out s3_669, out s4_670, out s5_192, out s6_671, out s8_672, out mstatus)
	s1_104 = a0_177
	branch a0_177 != 0<32> l23071024
l230710E6:
	Mem204[s0_187 + 20<i32>:byte] = 2<8>
	branch s5_192 == 0<32> l23071102
l230710F0:
	word32 a5_206 = Mem204[0x42026908<32>:int32]
	branch a5_206 != s0_187 l2307114E
l2307114E:
	branch a5_206 == 0<32> l23071102
l23071150:
	word32 a5_210 = Mem204[0x4202700C<32>:word32]
	branch s0_187 != 0x42027000<32> l2307114C
l2307114C:
	a5_206 = 0x42027000<32>
l23071156:
	s0_187 = Mem204[0x4202700C<32>:word32]
	Mem214[0x4202700C<32>:word32] = a5_210
l230710FC:
	s0_187 = Mem204[a5_206 + 12<i32>:word32]
	Mem216[0x42027908<32>:word32] = a5_206
l23071102:
	word32 a4_219 = Mem218[0x42026904<32>:int32]
	Mem221[0x42027904<32>:word32] = s0_187
	Mem222[a4_219 + 12<i32>:word32] = s0_187
	word32 a2_235
	word32 s1_238
	word32 a3_674
	word32 a4_675
	word32 s8_676
	word32 a0_673
	word32 s0_237 = tcp_timer_needed(a0_177, a3_180, mstatus, dwArg24, out s1_238, out a0_673, out a2_235, out a3_674, out a4_675, out s8_676)
	Mem245[0x4202790C<32>:byte] = 1<8>
	word32 a0_678
	word32 a1_679
	word32 s0_677
	word32 s6_686
	word32 a3_681
	word32 s2_682
	word32 a2_680
	word32 s5_685
	word32 s4_684
	word32 s3_683
	word32 s8_688
	word32 s9_689
	word32 s10_690
	word32 s11_691
	word32 s7_687
	tcp_output(ra_186, s1_238, s0_237, a2_235, s7, mstatus, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s0_677, out s1_104, out a0_678, out a1_679, out a2_680, out a3_681, out a4, out a5, out s2_682, out s3_683, out s4_684, out s5_685, out s6_686, out s7_687, out s8_688, out s9_689, out s10_690, out s11_691, out mstatus)
l23071024:
	0<32> = dwArgA8
	s1Out = s1_104
	a0Out = s1_104
	a4Out = a4
	a5Out = a5
	mstatusOut = mstatus
	return s1
tcp_connect_exit:


void tcp_tcp_get_tcp_addrinfo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_get_tcp_addrinfo
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
tcp_tcp_get_tcp_addrinfo_entry:
l2307115C:
	branch a0 == 0<32> l23071184
l23071184:
	return
l2307115E:
	word32 a5_15
	branch a1 == 0<32> l23071176
l23071176:
	branch a2 == 0<32> l2307117C
l23071178:
	a0 = Mem0[a5 + 4<i32>:word32]
	Mem10[a5:word32] = a2
l2307117C:
	branch a3 == 0<32> l23071168
l2307117E:
	a5_15 = CONVERT(Mem14[a0 + 24<i32>:uint16], uint16, word32)
l23071160:
	branch a2 == 0<32> l23071166
l23071162:
	a0 = Mem0[a5:word32]
	Mem17[a5:word32] = a2
l23071166:
	branch a3 != 0<32> l2307116C
l2307116C:
	a5_15 = CONVERT(Mem20[a0 + 22<i32>:uint16], uint16, word32)
l23071170:
	Mem24[a3:word16] = SLICE(a5_15, word16, 0)
l23071168:
	return
tcp_tcp_get_tcp_addrinfo_exit:


word32 tcp_free_ooseq(word32 ra, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArgE8, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_free_ooseq_callback
//      tcp_pcb_purge
//      tcp_tmr
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
tcp_free_ooseq_entry:
l23071188:
	word32 a0_5 = Mem0[a5 + 116<i32>:word32]
	branch a5 == 0<32> l230711A6
l230711A6:
	a0Out = a0_5
	a2Out = a2
	a3Out = a3
	a4Out = a4
	return s1
l2307118C:
	word32 a0_17
	word32 a3_20
	word32 a4_21
	word32 a1_51
	word32 a5_52
	word32 s1_23 = tcp_segs_free(ra, a0_5, a5, a3, a4, s4, mstatus, dwArgE8, out a0_17, out a1_51, out a3_20, out a4_21, out a5_52)
	Mem25[a0_5 + 116<i32>:word32] = 0<32>
	a0Out = a0_17
	a2Out = dwArg10
	a3Out = a3_20
	a4Out = a4_21
	return s1_23
tcp_free_ooseq_exit:


word32 tcp_pcb_purge(word32 ra, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_pcb_remove
//      tcp_close
//      tcp_tmr
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: a6 a7 mstatus ra s0 s2 s3 s4 s5 s6 s8 sp t0 t1 t3 t4 t5 t6
tcp_pcb_purge_entry:
l230711A8:
	branch a0 == 0<32> l230711FE
l230711AA:
	a5 = CONVERT(Mem0[a0 + 20<i32>:byte], byte, word32)
	a4 = 1<32>
	branch a5 <=u 1<32> l230711FE
l230711B4:
	a4 = 0xA<32>
	branch a5 == 0xA<32> l230711FE
l230711FE:
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l230711BA:
	word32 a0_14 = Mem12[a0 + 120<i32>:word32]
	branch a0_14 == 0<32> l230711CE
l230711C6:
	word32 s0_20
	word32 s8_221
	word32 s6_220
	word32 s5_219
	word32 s3_218
	word32 s2_217
	word32 a7_216
	word32 a2_215
	word32 a1_214
	word32 s1_213
	ra = pbuf_free(ra, a0_14, a3, 0xA<32>, s4, mstatus, dwArg0118, out s0_20, out s1_213, out a0_14, out a1_214, out a2_215, out a3, out a4, out a5, out a7_216, out s2_217, out s3_218, out s4, out s5_219, out s6_220, out s8_221, out mstatus)
	Mem43[s0_20 + 120<i32>:word32] = 0<32>
l230711CE:
	branch a5 == 0<32> l230711D8
l230711D2:
	word32 a2_224
	tcp_free_ooseq(ra, a3, a4, a5, s4, mstatus, dwArgD8, out a0_14, out a2_224, out a3, out a4)
l230711D8:
	word32 s0_65 = Mem45[a0_14 + 108<i32>:word32]
	Mem67[s0_65 + 48<i32>:word16] = 0xFFFF<16>
	word32 a0_74
	word32 a3_77
	word32 a4_78
	word32 a5_223
	word32 a1_222
	tcp_segs_free(ra, s0_65, a0_14, a3, a4, s4, mstatus, dwArgE8, out a0_74, out a1_222, out a3_77, out a4_78, out a5_223)
	word32 s0_82 = Mem67[a0_74 + 112<i32>:word32]
	word32 a0_83
	word32 a1_84
	word32 a3_86
	word32 a4_87
	word32 a5_88
	word32 s1_89 = tcp_segs_free(ra, s0_82, a0_74, a3_77, a4_78, s4, mstatus, dwArgE8, out a0_83, out a1_84, out a3_86, out a4_87, out a5_88)
	Mem91[s0_82 + 108<i32>:word32] = 0<32>
	Mem92[s0_82 + 112<i32>:word32] = 0<32>
	Mem93[s0_82 + 104<i32>:word16] = 0<16>
	a0Out = a0_83
	a1Out = a1_84
	a2Out = dwArg10
	a3Out = a3_86
	a4Out = a4_87
	a5Out = a5_88
	return s1_89
tcp_pcb_purge_exit:


word32 tcp_pcb_remove(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s4, word32 s7, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_abort
//      tcp_close
//      tcp_input_delayed_close
//      tcp_input
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_pcb_remove_entry:
l23071200:
	word32 a0_9 = Mem7[a5:word32]
	word32 s0_11 = a1
	branch a5 != a1 l23071256
l23071256:
	branch a5 == 0<32> l23071212
l23071258:
	word32 a5_15 = Mem7[a4 + 12<i32>:word32]
	branch a4 != a1 l23071254
l23071254:
	a5 = a4
l2307125E:
	s0_11 = Mem7[a4 + 12<i32>:word32]
	Mem19[a4 + 12<i32>:word32] = a5_15
l2307120E:
	Mem21[a5:word32] = a0_9
l23071212:
	Mem23[s0_11 + 12<i32>:word32] = 0<32>
	word32 a5_240
	word32 a2_42
	word32 a1_238
	word32 a4_239
	word32 a0_145
	word32 a3_147
	word32 s1_160 = tcp_pcb_purge(ra, s0_11, a3, s4, mstatus, dwArgC8, dwArgD8, dwArg0108, out a0_145, out a1_238, out a2_42, out a3_147, out a4_239, out a5_240)
	word32 a5_46 = CONVERT(Mem23[s0_11 + 20<i32>:byte], byte, word32)
	word32 a4_148 = 0xA<32>
	branch a5_46 == 0xA<32> l23071244
l23071226:
	a4_148 = 1<32>
	branch a5_46 == 1<32> l23071244
l2307122C:
	word32 a5_49 = CONVERT(Mem23[s0_11 + 26<i32>:uint16], uint16, word32)
	a4_148 = a5_49 & 1<i32>
	branch (a5_49 & 1<i32>) == 0<32> l23071244
l23071236:
	Mem52[s0_11 + 26<i32>:word16] = SLICE(a5_49 | 2<i32>, word16, 0)
	word32 a2_236
	word32 a5_237
	word32 a1_235
	ra = tcp_output(ra, s1_160, s0_11, a2_42, s7, mstatus, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s0_11, out s1_160, out a0_145, out a1_235, out a2_236, out a3_147, out a4_148, out a5_237, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
l23071244:
	Mem87[s0_11 + 20<i32>:byte] = 0<8>
	Mem88[s0_11 + 22<i32>:word16] = 0<16>
	s1Out = s1_160
	a0Out = a0_145
	a3Out = a3_147
	a4Out = a4_148
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_pcb_remove_exit:


word32 tcp_abandon(word32 ra, word32 s1, word32 a0, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_abort
//      tcp_kill_state
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_abandon_entry:
l23071264:
	branch a0 == 0<32> l23071376
l23071376:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23071268:
	word32 a5_21 = CONVERT(Mem20[a0 + 20<i32>:byte], byte, word32)
	word32 a4_111 = 0xA<32>
	word32 s0_23 = a0
	branch a5_21 != 0xA<32> l230712AC
l230712AC:
	word32 s2_152
	word32 s5_173 = Mem20[a0 + 80<i32>:int32]
	word32 s6_166 = Mem20[a0 + 36<i32>:int32]
	word32 s3_200 = Mem20[a0 + 144<i32>:int32]
	word32 s4_101 = Mem20[a0 + 16<i32>:int32]
	word32 s1_28 = CONVERT(Mem20[a0 + 22<i32>:uint16], uint16, word32)
	branch a5_21 != 0<32> l23071346
l23071346:
	word32 s1_643
	word32 a4_644
	word32 s8_645
	ra = tcp_pcb_remove(ra, a0, a3, 0xA<32>, a5_21, s4_101, s7, mstatus, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s1_643, out a0, out a3, out a4_644, out s2_152, out s3_200, out s4_101, out s5_173, out s6_166, out s7, out s8_645, out s9, out s10, out s11, out mstatus)
	Mem67[0x4202790C<32>:byte] = 1<8>
	a4_111 = 1<32>
l230712C2:
	s2_152 = 0<32>
	branch s1_28 == 0<32> l230712E0
l230712C6:
	a4_111 = 0x42027000<32>
	word32 a5_70 = Mem20[0x42026908<32>:int32]
	branch a5_70 != a0 l23071338
l23071338:
	branch a5_70 == 0<32> l230712D8
l2307133A:
	word32 a5_74 = Mem20[0x4202700C<32>:word32]
	branch a0 != 0x42027000<32> l23071336
l23071336:
	a5_70 = 0x42027000<32>
l23071340:
	s0_23 = Mem20[0x4202700C<32>:word32]
	Mem78[0x4202700C<32>:word32] = a5_74
l230712D2:
	a0 = Mem20[a5_70 + 12<i32>:word32]
	Mem80[0x42027908<32>:word32] = a5_70
l230712D8:
	Mem82[s0_23 + 12<i32>:word32] = 0<32>
	s2_152 = 0<32>
l230712E0:
	word32 s0_89 = Mem88[a0 + 112<i32>:word32]
	branch a0 == 0<32> l230712E8
l230712E4:
	word32 a1_630
	word32 a5_631
	tcp_segs_free(ra, s0_89, a0, a3, a4_111, s4_101, mstatus, dwArgD8, out a0, out a1_630, out a3, out a4_111, out a5_631)
l230712E8:
	word32 s0_117 = Mem88[a0 + 108<i32>:word32]
	branch a0 == 0<32> l230712F0
l230712EC:
	word32 a1_632
	word32 a5_633
	tcp_segs_free(ra, s0_117, a0, a3, a4_111, s4_101, mstatus, dwArgD8, out a0, out a1_632, out a3, out a4_111, out a5_633)
l230712F0:
	word32 s0_134 = Mem88[a0 + 116<i32>:word32]
	branch a0 == 0<32> l230712F8
l230712F4:
	word32 a0_634
	word32 a1_635
	word32 a5_636
	tcp_segs_free(ra, s0_134, a0, a3, a4_111, s4_101, mstatus, dwArgD8, out a0_634, out a1_635, out a3, out a4_111, out a5_636)
l230712F8:
	branch s2_152 == 0<32> l23071312
l230712FC:
	word32 a5_639
	word32 s4_640
	word32 s8_641
	word32 a0_638
	word32 s1_637
	ra = tcp_rst(ra, s0_134, s5_173, s6_166, s7, mstatus, dwArg28, dwArg38, dwArg58, s1, dwArg74, dwArg78, dwArg98, dwArgA8, dwArgD8, dwArg0108, out s0_134, out s1_637, out a0_638, out a3, out a4_111, out a5_639, out s2_152, out s3_200, out s4_640, out s5_173, out s6_166, out s7, out s8_641, out s9, out mstatus)
l23071312:
	word32 a0_221
	word32 a1_222
	word32 a3_224
	word32 a4_225
	word32 a5_226
	word32 a2_642
	word32 s1_227 = tcp_free(s0_134, a3, a4_111, mstatus, out a0_221, out a1_222, out a2_642, out a3_224, out a4_225, out a5_226)
	branch s3_200 == 0<32> l23071362
l23071362:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_227
	a0Out = a0_221
	a1Out = a1_222
	a3Out = a3_224
	a4Out = a4_225
	a5Out = a5_226
	s2Out = s2_152
	s3Out = s3_200
	s4Out = dwArg04
	s5Out = s5_173
	s6Out = s6_166
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2307131C:
	0<32> = dwArgA8
	word32 a0_263
	word32 s0_264
	word32 ra_265
	word32 s1_266
	word32 s2_267
	word32 s3_268
	word32 s4_269
	word32 s5_270
	word32 s6_271
	word32 a5_272
	word32 a4_273
	word32 a1_274
	word32 a3_280
	word32 t1_281
	word32 mstatus_282
	word32 s7_283
	word32 a7_284
	word32 s10_285
	word32 s11_286
	word32 s9_287
	word32 t0_288
	word32 t4_289
	word32 t5_290
	word32 t6_291
	call s3_200 (retsize: 0;)
		uses: a0:dwArg04,a1:0xFFFFFFF3<32>,a2:dwArg48,a3:a3_224,a4:a4_273,a5:a5_272,a6:dwArg28,a7:a7_284,mstatus:mstatus_216,ra:ra_257,s0:s1,s1:s1_227,s10:s10_285,s11:s11_286,s2:s2_258,s3:s3_229,s4:dwArg04,s5:s5_259,s6:s6_260,s7:s7_261,s8:s4,s9:s9_287,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +0108:dwArg0108,t0:t0_288,t1:t1_281,t3:dwArg00,t4:t4_289,t5:t5_290,t6:t6_291,tp:dwArg88
		defs: a0:a0_263,a1:a1_274,a3:a3_280,a4:a4_273,a5:a5_272,a7:a7_284,mstatus:mstatus_282,ra:ra_265,s0:s0_264,s1:s1_266,s10:s10_285,s11:s11_286,s2:s2_267,s3:s3_268,s4:s4_269,s5:s5_270,s6:s6_271,s7:s7_283,s9:s9_287,t0:t0_288,t1:t1_281,t4:t4_289,t5:t5_290,t6:t6_291
	s0Out = s0_264
	s1Out = s1_266
	a0Out = a0_263
	a1Out = a1_274
	a3Out = a3_280
	a4Out = a4_273
	a5Out = a5_272
	s2Out = s2_267
	s3Out = s3_268
	s4Out = s4_269
	s5Out = s5_270
	s6Out = s6_271
	s7Out = s7_283
	s9Out = s9_287
	s10Out = s10_285
	s11Out = s11_286
	mstatusOut = mstatus_282
	return ra_265
l23071286:
	word32 a3_298
	word32 a4_299
	word32 mstatus_305
	word32 s10_307
	word32 s11_308
	word32 s2_309
	word32 s3_310
	word32 s5_312
	word32 s6_313
	word32 s7_314
	word32 s9_316
	word32 s1_625
	word32 a0_626
	word32 s4_627
	word32 s8_628
	word32 ra_306 = tcp_pcb_remove(ra, a0, a3, 0xA<32>, a5_21, s4, s7, mstatus, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s1_625, out a0_626, out a3_298, out a4_299, out s2_309, out s3_310, out s4_627, out s5_312, out s6_313, out s7_314, out s8_628, out s9_316, out s10_307, out s11_308, out mstatus_305)
	0<32> = dwArgA8
l230712A8_thunk_tcp_free:
	word32 a0_332
	word32 a1_333
	word32 a3_335
	word32 a4_336
	word32 a5_337
	word32 a2_629
	word32 s1_338 = tcp_free(a0, a3_298, a4_299, mstatus_305, out a0_332, out a1_333, out a2_629, out a3_335, out a4_336, out a5_337)
	s0Out = s1
	s1Out = s1_338
	a0Out = a0_332
	a1Out = a1_333
	a3Out = a3_335
	a4Out = a4_336
	a5Out = a5_337
	s2Out = s2_309
	s3Out = s3_310
	s4Out = dwArg04
	s5Out = s5_312
	s6Out = s6_313
	s7Out = s7_314
	s9Out = s9_316
	s10Out = s10_307
	s11Out = s11_308
	mstatusOut = mstatus_305
	return ra_306
tcp_abandon_exit:


word32 tcp_abort(word32 ra, word32 s1, word32 a0, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_accept_null
//      tcp_netif_ip_addr_changed_pcblist.isra.2
//      tcp_new_ip_type
//      tcp_input
//      netconn_drain
//      lwip_netconn_do_close
//      altcp_tcp_abort
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_abort_entry:
l23071378:
l2307137A_thunk_tcp_abandon:
	word32 a0_13
	word32 a1_14
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 mstatus_21
	word32 s0_23
	word32 s1_24
	word32 s10_25
	word32 s11_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s9_34
	word32 ra_22 = tcp_abandon(ra, s1, a0, a3, s3, s4, s7, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArg48, dwArg58, dwArg74, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s0_23, out s1_24, out a0_13, out a1_14, out a3_16, out a4_17, out a5_18, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31, out s7_32, out s9_34, out s10_25, out s11_26, out mstatus_21)
	s0Out = s0_23
	s1Out = s1_24
	a0Out = a0_13
	a1Out = a1_14
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s9Out = s9_34
	s10Out = s10_25
	s11Out = s11_26
	mstatusOut = mstatus_21
	return ra_22
tcp_abort_exit:


void tcp_accept_null(word32 ra, word32 s1, word32 a1, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_accept_null_entry:
l2307137E:
	word32 s0_65
	word32 s1_66
	word32 a0_67
	word32 a1_68
	word32 a3_69
	word32 a4_70
	word32 a5_71
	word32 s2_72
	word32 s3_73
	word32 s4_74
	word32 s5_75
	word32 s6_76
	word32 s7_77
	word32 s9_78
	word32 s10_79
	word32 s11_80
	word32 mstatus_81
	tcp_abort(ra, s1, a1, a3, s3, s4, s7, mstatus, dwLoc10, dwLoc0C, dwArg18, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgC8, dwArgCC, dwArgD8, dwArgF8, out s0_65, out s1_66, out a0_67, out a1_68, out a3_69, out a4_70, out a5_71, out s2_72, out s3_73, out s4_74, out s5_75, out s6_76, out s7_77, out s9_78, out s10_79, out s11_80, out mstatus_81)
	return
tcp_accept_null_exit:


word32 tcp_netif_ip_addr_changed_pcblist.isra.2(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgF8, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_netif_ip_addr_changed
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s1 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_netif_ip_addr_changed_pcblist.isra.2_entry:
l23071390:
l2307139A:
	branch a1 != 0<32> l230713A6
l230713A6:
	word32 a1_19 = Mem9[s1 + 12<i32>:word32]
	branch a4 != a5 l230713B6
l230713B0:
	word32 s0_196
	word32 a0_197
	word32 a1_198
	word32 s5_199
	word32 s6_200
	word32 s9_201
	word32 s10_202
	word32 s11_203
	ra = tcp_abort(ra, s1, a1_19, a3, s3, s4, s7, mstatus, dwLoc10, s0, dwArg18, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgC8, dwArgCC, dwArgD8, dwArgF8, out s0_196, out s1, out a0_197, out a1_198, out a3, out a4, out a5, out s2, out s3, out s4, out s5_199, out s6_200, out s7, out s9_201, out s10_202, out s11_203, out mstatus)
l230713B6:
	a1 = s1
l2307139C:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s7Out = s7
	mstatusOut = mstatus
	return ra
tcp_netif_ip_addr_changed_pcblist.isra.2_exit:


word32 tcp_netif_ip_addr_changed(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgE8, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_remove
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_netif_ip_addr_changed_entry:
l230713BA:
	branch a0 == 0<32> l23071410
l23071410:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s4Out = s4
	mstatusOut = mstatus
	return ra
l230713BC:
	word32 a0_12 = Mem10[a4:word32]
	branch a4 == 0<32> l230713F6
l230713CA:
	word32 a3_26
	word32 a4_27
	word32 mstatus_31
	word32 s1_33
	word32 s3_37
	word32 s4_38
	word32 s7_41
	word32 s7_265
	word32 s2_263
	word32 s3_264
	word32 a5_262
	ra = tcp_netif_ip_addr_changed_pcblist.isra.2(tcp_netif_ip_addr_changed_pcblist.isra.2(ra, a0_12, a1, Mem10[0x42026904<32>:int32], a3, a4, 0x42027000<32>, s3, s4, s7, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1_33, out a3_26, out a4_27, out a5_262, out s2_263, out s3_37, out s4_38, out s7_41, out mstatus_31), a0_12, s1_33, Mem10[0x42026908<32>:int32], a3_26, a4_27, 0x42027000<32>, s3_37, s4_38, s7_41, mstatus_31, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s1, out a3, out a4, out a5, out s2, out s3_264, out s4, out s7_265, out mstatus)
	branch s1 == 0<32> l230713F6
l230713E8:
	s1 = Mem10[a5:word32]
	branch a5 == 0<32> l230713F6
l230713EC:
	a5 = Mem10[0x42026900<32>:int32]
l230713F4:
	branch a5 != 0<32> l23071400
l23071400:
	word32 a5_88 = Mem87[a3:word32]
	branch a3 != a4 l2307140C
l23071408:
	s1 = Mem87[a4:word32]
	Mem92[a4:word32] = a5_88
l2307140C:
	a5 = Mem94[a5_88 + 12<i32>:word32]
l230713F6:
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s4Out = s4
	mstatusOut = mstatus
	return ra
tcp_netif_ip_addr_changed_exit:


void tcp_kill_state(word32 ra, word32 s1, word32 a0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_new_ip_type
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_kill_state_entry:
l23071412:
	word32 a5_10 = Mem0[0x42026904<32>:int32]
	word32 a1_7 = Mem0[0x420268FC<32>:int32]
	word32 a2_17 = 0<32>
	word32 a3_19 = 0<32>
l23071426:
	branch a5_10 != 0<32> l23071432
l23071432:
	word32 a4_12 = CONVERT(Mem0[a5_10 + 20<i32>:byte], byte, word32)
	branch a4_12 != a0 l23071448
l2307143A:
	a5_10 = Mem0[a4_12 + 32<i32>:word32]
	word32 a4_16 = a1_7 - a4_12
	branch a4_16 <u a2_17 l23071448
l23071444:
	a2_17 = a4_16
	a3_19 = a5_10
l23071448:
	a5_10 = Mem0[a5_10 + 12<i32>:word32]
l23071428:
	branch a3_19 == 0<32> l2307144C
l2307144C:
	return
l2307142A:
l2307142E_thunk_tcp_abandon:
	word32 s11_229
	word32 mstatus_230
	word32 s10_228
	word32 s7_226
	word32 s9_227
	word32 s5_224
	word32 s6_225
	word32 s3_222
	word32 s4_223
	word32 a5_220
	word32 s2_221
	word32 a3_218
	word32 a4_219
	word32 a0_216
	word32 a1_217
	word32 s0_214
	word32 s1_215
	tcp_abandon(ra, s1, a3_19, a3_19, s3, s4, s7, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArg48, dwArg58, dwArg74, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s0_214, out s1_215, out a0_216, out a1_217, out a3_218, out a4_219, out a5_220, out s2_221, out s3_222, out s4_223, out s5_224, out s6_225, out s7_226, out s9_227, out s10_228, out s11_229, out mstatus_230)
	return
tcp_kill_state_exit:


word32 tcp_alloc(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_new_ip_type
//      tcp_input
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_alloc_entry:
l2307144E:
	word32 a4_285
	word32 a3_284
	word32 a5_282
	word32 a0_20
	word32 a2_890
	word32 a5_891
	word32 a3_23
	word32 a4_116
	word32 s1_123 = memp_malloc(a0, 2<32>, a3, a4, mstatus, out a0_20, out a2_890, out a3_23, out a4_116, out a5_891)
	word32 s0_153 = a0_20
	branch a0_20 != 0<32> l2307151A
l23071466:
	s3 = 0x42027000<32>
	word32 a0_29 = Mem16[0x42026904<32>:int32]
	s4_102 = s4
l2307146E:
	word32 s4_102
	branch a0_29 != 0<32> l230715AC
l230715AC:
	word32 a5_32 = CONVERT(Mem31[a0_29 + 26<i32>:uint16], uint16, word32)
	word32 a0_34 = Mem31[a0_20 + 12<i32>:word32]
	a4_116 = a5_32 & 8<i32>
	branch (a5_32 & 8<i32>) == 0<32> l230715C2
l230715B8:
	Mem37[a0_34 + 26<i32>:word16] = SLICE(a5_32 & 0xFFFFFFF7<32>, word16, 0)
	word32 a2_945
	word32 s2_947
	word32 a0_944
	word32 a5_946
	word32 s8_948
	ra = tcp_close_shutdown_fin(ra, s1_123, a0_34, a3_23, s7, mstatus, dwLoc0C, dwArg08, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s1_123, out a0_944, out a1, out a2_945, out a3_23, out a4_116, out a5_946, out s2_947, out s3, out s4_102, out s5, out s6, out s7, out s8_948, out s9, out s10, out s11, out mstatus)
l230715C2:
	a0_29 = a0_20
l23071472:
	s2 = 0x42027000<32>
	word32 a5_76 = Mem31[0x420268F8<32>:int32]
	word32 a2_77 = Mem31[0x420268FC<32>:int32]
	word32 a3_115 = 0<32>
l23071484:
	branch a5_76 != 0<32> l230715C6
l230715C6:
	word32 a5_82 = Mem31[a4_116 + 32<i32>:word32]
	a4_116 = a2_77 - a4_116
	branch a4_116 <u a3_115 l230715D4
l230715D0:
	a3_115 = a4_116
	a0_29 = a5_82
l230715D4:
	a5_76 = Mem31[a5_82 + 12<i32>:word32]
l23071488:
	branch a0_29 == 0<32> l2307148E
l2307148A:
	word32 s0_892
	word32 a0_893
	word32 a5_894
	ra = tcp_abort(ra, s1_123, a0_29, a3_115, s3, s4_102, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s0_892, out s1_123, out a0_893, out a1, out a3_115, out a4_116, out a5_894, out s2, out s3, out s4_102, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
l2307148E:
	word32 a0_146
	word32 a3_149
	word32 a4_150
	word32 a5_896
	word32 a2_895
	s1_123 = memp_malloc(s1_123, 2<32>, a3_115, a4_116, mstatus, out a0_146, out a2_895, out a3_149, out a4_150, out a5_896)
	s0_153 = a0_146
	branch a0_146 != 0<32> l23071508
l23071498:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg40 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg156 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg220 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg264 = <invalid>
	tcp_kill_state(ra, s1, a0, s3, s4, s7, mstatus, stackArg0, stackArg4, stackArg40, stackArg56, stackArg72, stackArg88, stackArg116, stackArg120, stackArg136, stackArg152, stackArg156, stackArg168, stackArg184, stackArg216, stackArg220, stackArg232, stackArg264)
	word32 a0_156
	word32 a3_159
	word32 a4_160
	word32 a2_914
	word32 a5_915
	s1_123 = memp_malloc(s1_123, 2<32>, a3_149, a4_150, mstatus, out a0_156, out a2_914, out a3_159, out a4_160, out a5_915)
	s0_153 = a0_156
	branch a0_156 != 0<32> l230714F6
l230714A8:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg40 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg156 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg220 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg264 = <invalid>
	tcp_kill_state(ra, s1, a0, s3, s4, s7, mstatus, stackArg0, stackArg4, stackArg40, stackArg56, stackArg72, stackArg88, stackArg116, stackArg120, stackArg136, stackArg152, stackArg156, stackArg168, stackArg184, stackArg216, stackArg220, stackArg232, stackArg264)
	word32 a0_166
	word32 a2_933
	word32 a5_934
	word32 a4_170
	word32 a3_169
	s1_123 = memp_malloc(s1_123, 2<32>, a3_159, a4_160, mstatus, out a0_166, out a2_933, out a3_169, out a4_170, out a5_934)
	s0_153 = a0_166
	branch a0_166 != 0<32> l230714E4
l230714B8:
	word32 a5_176
	branch CONVERT(SLICE(s1_123, byte, 0), byte, int32) < 0<32> l230715D8
l230715D8:
	a5_176 = 127<i32>
l230714C2:
	a5_176 = s1_123
	branch s1_123 != 0<32> l230715DC
l230715DC:
	a4_170 = Mem31[s3 + -1788<i32>:int32]
	word32 a0_187 = Mem31[s2 + -1796<i32>:int32]
	word32 a5_190 = a5_176 + 0xFFFFFFFF<32> & 255<i32>
	a3_169 = 0<32>
l230715EC:
	branch a4_170 != 0<32> l230715FA
l230715FA:
	word32 a2_194 = CONVERT(Mem31[a4_170 + 21<i32>:byte], byte, word32)
	branch a2_194 <u a5_190 l23071610
l23071602:
	branch a2_194 != a5_190 l2307161A
l23071606:
	a4_170 = Mem31[a1 + 32<i32>:word32]
	a1 = a0_187 - a1
	branch a1 <u a3_169 l2307161A
l23071610:
	a4_170 = Mem31[a3_169 + 32<i32>:word32]
	a5_190 = a2_194
	s0_153 = a4_170
	a3_169 = a0_187 - a3_169
l2307161A:
	a4_170 = Mem31[a4_170 + 12<i32>:word32]
l230715EE:
	branch s0_153 == 0<32> l230714C8
l230715F2:
	word32 a5_942
	word32 s4_943
	word32 s0_940
	word32 a0_941
	ra = tcp_abort(ra, s1_123, s0_153, a3_169, s3, s4_102, s7, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s0_940, out s1_123, out a0_941, out a1, out a3_169, out a4_170, out a5_942, out s2, out s3, out s4_943, out s5, out s6, out s7, out s9, out s10, out s11, out mstatus)
l230714C8:
	word32 a2_935
	word32 a0_281
	s1_123 = memp_malloc(s1_123, 2<32>, a3_169, a4_170, mstatus, out a0_281, out a2_935, out a3_284, out a4_285, out a5_282)
	s0_153 = a0_281
	branch a0_281 == 0<32> l2307159C
l230714D2:
	word32 a4_291 = Mem31[0x420268B0<32>:int32]
	Mem294[a4_291:word16] = SLICE(CONVERT(Mem31[a4_291:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l230714E4:
	word32 a4_297 = Mem296[0x420268B0<32>:int32]
	Mem300[a4_297:word16] = SLICE(CONVERT(Mem296[a4_297:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l230714F6:
	word32 a4_303 = Mem302[0x420268B0<32>:int32]
	Mem306[a4_303:word16] = SLICE(CONVERT(Mem302[a4_303:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l23071508:
	word32 a4_309 = Mem308[0x420268B0<32>:int32]
	Mem312[a4_309:word16] = SLICE(CONVERT(Mem308[a4_309:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l2307151A:
	word32 a2_938
	word32 a5_939
	word32 a0_937
	word32 t1_936
	ra = memset(ra, s0_153, 0<32>, 164<i32>, out t1_936, out a0_937, out a1, out a2_938, out a3_284, out a4_285, out a5_939)
	Mem336[s0_153 + 100<i32>:word16] = 0x580<16>
	Mem339[0x8100838<32>:word32] = s0_153
	Mem341[s0_153 + 11<i32>:byte] = 0xFF<8>
	Mem343[s0_153 + 64<i32>:word16] = 6<16>
	Mem344[s0_153 + 62<i32>:word16] = 6<16>
	Mem347[0x219002F<32>:word32] = s0_153
	word32 a5_349 = Mem347[0x420268FC<32>:int32]
	Mem354[s0_153 + 21<i32>:byte] = SLICE(s1_123, byte, 0)
	Mem355[a5_349 + 32<i32>:word32] = s0_153
	Mem358[s0_153 + 30<i32>:byte] = SLICE(CONVERT(Mem355[0x4200F661<32>:byte], byte, word32), byte, 0)
	Mem361[0x15800049<32>:word32] = s0_153
	Mem364[s0_153 + 132<i32>:word32] = 0x23071786<32>
	Mem367[s0_153 + 148<i32>:word32] = 0x6DDD00<32>
	Mem370[s0_153 + 152<i32>:word32] = 0x120004F8<32>
	Mem372[s0_153 + 156<i32>:word32] = 9<32>
	a5_282 = 9<32>
l2307159C:
	s1Out = s1_123
	a0Out = s0_153
	a1Out = a1
	a3Out = a3_284
	a4Out = a4_285
	a5Out = a5_282
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwLoc1C
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_alloc_exit:


word32 tcp_new_ip_type(word32 ra, word32 s1, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_newconn
//      altcp_tcp_new_ip_type
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s1 s2 s3 s4 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_new_ip_type_entry:
l2307161E:
l23071622_thunk_tcp_alloc:
	word32 a1_14
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 s1_22
	word32 s4_23
	word32 s8_24
	word32 a0_29
	word32 mstatus_31
	word32 s2_34
	word32 s3_35
	word32 s6_37
	word32 s7_38
	word32 s9_39
	word32 s5_76
	word32 s10_77
	word32 s11_78
	word32 ra_20 = tcp_alloc(ra, s1, 64<i32>, a1, a3, a4, s3, s4, s7, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg78, dwArg7C, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s1_22, out a0_29, out a1_14, out a3_16, out a4_17, out a5_18, out s2_34, out s3_35, out s4_23, out s5_76, out s6_37, out s7_38, out s8_24, out s9_39, out s10_77, out s11_78, out mstatus_31)
	s1Out = s1_22
	a0Out = a0_29
	a1Out = a1_14
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_34
	s3Out = s3_35
	s4Out = s4_23
	s6Out = s6_37
	s7Out = s7_38
	s8Out = s8_24
	s9Out = s9_39
	mstatusOut = mstatus_31
	return ra_20
tcp_new_ip_type_exit:


word32 tcp_close_shutdown(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_close
//      altcp_tcp_shutdown
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_close_shutdown_entry:
l23071626:
	word32 a1_106
	word32 a4_112
	word32 a5_108
	word32 s1_113
	word32 s0_11 = a0
	word32 a5_12 = CONVERT(Mem9[a0 + 20<i32>:byte], byte, word32)
	branch a1 == 0<32> l230716BE
l23071636:
	a4 = 4<32>
	branch a5_12 == 4<32> l23071642
l2307163C:
	a4 = 7<32>
	branch a5_12 != 7<32> l230716BE
l23071642:
	s0_11 = Mem9[a4 + 120<i32>:word32]
	branch a4 != 0<32> l23071654
l23071646:
	a3 = CONVERT(Mem9[s0_11 + 40<i32>:uint16], uint16, word32)
	a4 = 0xFFF810<32>
	branch a3 == 0xFFF810<32> l230716BE
l230716BE:
	branch a5_12 == 1<32> l2307170E
l2307170E:
l2307171A:
	word32 a5_30 = Mem29[a4 + 4<i32>:word32]
	a4 = Mem29[a4:word32]
l2307171E:
	branch a4 != 0<32> l2307173E
l2307173E:
	word32 a4_35 = Mem34[a2 + 124<i32>:word32]
	branch s0_11 != a2 l23071748
l23071744:
	Mem37[a4_35 + 124<i32>:word32] = 0<32>
l23071748:
	a4 = Mem39[a4_35 + 12<i32>:word32]
l23071720:
	branch a5_30 != 0xDCF3C894<32> l2307171A
l23071726:
	word32 a3_81
	word32 a4_82
	word32 a0_715
	word32 s1_714
	ra = tcp_pcb_remove(ra, s0_11, 0x230C3770<32>, a4, a5_30 + 4<32>, s4, s7, mstatus, dwArg38, dwArg48, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s1_714, out a0_715, out a3_81, out a4_82, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
	a1_106 = s0_11
	word32 a2_717
	word32 a0_716
	s1_113 = memp_free(3<32>, s0_11, a3_81, a4_82, mstatus, out a0_716, out a2_717, out a3, out a4_112, out a5_108)
l230716C4:
	branch a5_12 == 0<32> l230716DA
l230716DA:
	branch CONVERT(Mem9[s0_11 + 22<i32>:uint16], uint16, word32) == 0<32> l230716F6
l230716E0:
	a4 = 0x42027000<32>
	word32 a5_119 = Mem9[0x42026908<32>:int32]
	branch a5_119 != s0_11 l23071700
l23071700:
	branch a5_119 == 0<32> l230716F2
l23071702:
	word32 a5_123 = Mem9[0x4202700C<32>:word32]
	branch s0_11 != 0x42027000<32> l230716FE
l230716FE:
	a5_119 = 0x42027000<32>
l23071708:
	s0_11 = Mem9[0x4202700C<32>:word32]
	Mem127[0x4202700C<32>:word32] = a5_123
l230716EC:
	s0_11 = Mem9[a5_119 + 12<i32>:word32]
	Mem129[0x42027908<32>:word32] = a5_119
l230716F2:
	Mem131[s0_11 + 12<i32>:word32] = 0<32>
l230716C6:
	branch a5_12 == 2<32> l2307174C
l2307174C:
	word32 s1_144
	word32 a0_713
	ra = tcp_pcb_remove(ra, s0_11, a3, 2<32>, a5_12, s4, s7, mstatus, dwArg38, dwArg48, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s1_144, out a0_713, out a3, out a4, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out mstatus)
	Mem167[0x4202790C<32>:byte] = SLICE(s1_144, byte, 0)
l230716CC:
l230716D6_thunk_tcp_close_shutdown_fin:
	word32 a1_173
	word32 a3_175
	word32 a4_176
	word32 a5_177
	word32 mstatus_180
	word32 s1_182
	word32 s2_183
	word32 s3_184
	word32 s4_185
	word32 s5_186
	word32 s6_187
	word32 s8_188
	word32 a0_196
	word32 s10_197
	word32 s11_198
	word32 s7_199
	word32 s9_200
	word32 a2_712
	word32 ra_181 = tcp_close_shutdown_fin(ra, 1<32>, s0_11, a3, s7, mstatus, dwArg14, dwArg28, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArgFC, dwArg0108, dwArg0128, out s1_182, out a0_196, out a1_173, out a2_712, out a3_175, out a4_176, out a5_177, out s2_183, out s3_184, out s4_185, out s5_186, out s6_187, out s7_199, out s8_188, out s9_200, out s10_197, out s11_198, out mstatus_180)
	s1Out = s1_182
	a0Out = a0_196
	a1Out = a1_173
	a3Out = a3_175
	a4Out = a4_176
	a5Out = a5_177
	s2Out = s2_183
	s3Out = s3_184
	s4Out = s4_185
	s5Out = s5_186
	s6Out = s6_187
	s7Out = s7_199
	s8Out = s8_188
	s9Out = s9_200
	s10Out = s10_197
	s11Out = s11_198
	mstatusOut = mstatus_180
	return ra_181
l23071654:
	word32 a3_222
	word32 a5_705
	word32 a0_703
	word32 a4_704
	word32 s1_702
	ra = tcp_rst(ra, Mem9[a1 + 80<i32>:word32], a1, a2, s7, mstatus, dwArg38, dwArg48, dwArg68, dwArg78, dwArg84, dwArg88, dwArgA8, dwArgB8, dwArgE8, dwArg0118, out s0_11, out s1_702, out a0_703, out a3_222, out a4_704, out a5_705, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out mstatus)
	word32 a5_709
	word32 a2_707
	word32 a4_708
	word32 a0_706
	s1_113 = tcp_pcb_purge(ra, s0_11, a3_222, s4, mstatus, dwArgC8, dwArgD8, dwArg0108, out a0_706, out a1_106, out a2_707, out a3, out a4_708, out a5_709)
	word32 a5_256 = Mem9[0x42026904<32>:int32]
	branch a5_256 != s0_11 l230716B0
l230716B0:
	branch a5_256 == 0<32> l23071684
l230716B2:
	word32 a5_260 = Mem9[0x4202700C<32>:word32]
	branch s0_11 != 0x42027000<32> l230716AE
l230716AE:
	a5_256 = 0x42027000<32>
l230716B8:
	s0_11 = Mem9[0x4202700C<32>:word32]
	Mem264[0x4202700C<32>:word32] = a5_260
l2307167E:
	s0_11 = Mem9[a5_256 + 12<i32>:word32]
	Mem266[0x42027904<32>:word32] = a5_256
l23071684:
	Mem269[0x4202790C<32>:byte] = 1<8>
	word32 a5_271 = Mem269[0x42026910<32>:int32]
	Mem273[s0_11 + 12<i32>:word32] = 0<32>
	a4 = 1<32>
	branch a5_271 != s0_11 l230716F6
l230716F6:
	word32 a2_711
	word32 a0_710
	s1_113 = tcp_free(s0_11, a3, a4, mstatus, out a0_710, out a1_106, out a2_711, out a3, out a4_112, out a5_108)
l2307169E:
	a4_112 = tcp_trigger_input_pcb_close(out a5_108)
l230716A2:
	s1Out = s1_113
	a0Out = 0<32>
	a1Out = a1_106
	a3Out = a3
	a4Out = a4_112
	a5Out = a5_108
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_close_shutdown_exit:


word32 tcp_close(word32 ra, word32 a0, word32 a2, word32 a3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_recv_null
//      lwip_netconn_do_listen
//      lwip_netconn_do_close
//      altcp_tcp_close
//      altcp_tcp_new_ip_type
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_close_entry:
l23071764:
	branch a0 == 0<32> l23071782
l23071782:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23071766:
	word32 a4_6 = CONVERT(Mem0[a0 + 20<i32>:byte], byte, word32)
	branch a4_6 == 1<32> l2307177C
l23071770:
	Mem10[a0 + 26<i32>:word16] = SLICE(CONVERT(Mem0[a0 + 26<i32>:uint16], uint16, word32) | 16<i32>, word16, 0)
l2307177C:
l2307177E_thunk_tcp_close_shutdown:
	word32 a0_28
	word32 a1_29
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 mstatus_36
	word32 s1_38
	word32 s10_39
	word32 s11_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s5_44
	word32 s6_45
	word32 s7_46
	word32 s8_47
	word32 s9_48
	word32 ra_37 = tcp_close_shutdown(ra, a0, 1<32>, a2, a3, a4_6, s4, s7, mstatus, dwArg14, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, dwArg0128, out s1_38, out a0_28, out a1_29, out a3_31, out a4_32, out a5_33, out s2_41, out s3_42, out s4_43, out s5_44, out s6_45, out s7_46, out s8_47, out s9_48, out s10_39, out s11_40, out mstatus_36)
	s1Out = s1_38
	a0Out = a0_28
	a1Out = a1_29
	a3Out = a3_31
	a4Out = a4_32
	a5Out = a5_33
	s2Out = s2_41
	s3Out = s3_42
	s4Out = s4_43
	s5Out = s5_44
	s6Out = s6_45
	s7Out = s7_46
	s8Out = s8_47
	s9Out = s9_48
	s10Out = s10_39
	s11Out = s11_40
	mstatusOut = mstatus_36
	return ra_37
tcp_close_exit:


word32 tcp_recv_null(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_process_refused_data
//      tcp_input
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_recv_null_entry:
l23071786:
	branch a1 == 0<32> l230717B6
l230717B6:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23071788:
	branch a2 == 0<32> l230717AC
l230717AC:
	branch a3 != 0<32> l230717BA
l230717BA:
	s1Out = s1
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l230717B0:
l230717B2_thunk_tcp_close:
	word32 a0_14
	word32 a3_17
	word32 a4_18
	word32 mstatus_22
	word32 s1_24
	word32 s10_25
	word32 s11_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s8_33
	word32 s9_34
	word32 a1_210
	word32 a5_211
	word32 ra_23 = tcp_close(ra, a1, a2, a3, s4, s7, mstatus, dwArg14, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, dwArg0128, out s1_24, out a0_14, out a1_210, out a3_17, out a4_18, out a5_211, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31, out s7_32, out s8_33, out s9_34, out s10_25, out s11_26, out mstatus_22)
	s1Out = s1_24
	a0Out = a0_14
	a3Out = a3_17
	a4Out = a4_18
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s8Out = s8_33
	s9Out = s9_34
	s10Out = s10_25
	s11Out = s11_26
	mstatusOut = mstatus_22
	return ra_23
l2307178A:
	word32 a4_52
	word32 a3_55
	word32 mstatus_58
	word32 s0_60
	word32 s10_62
	word32 s11_63
	word32 s4_66
	word32 s7_69
	word32 s9_71
	word32 a3_86
	word32 a4_87
	word32 s1_89
	word32 s2_90
	word32 s3_91
	word32 s4_94
	word32 s5_95
	word32 s6_96
	word32 s8_97
	word32 mstatus_103
	word32 s1_200
	word32 a0_201
	word32 a5_202
	word32 s3_203
	word32 s0_204
	word32 a0_205
	word32 a1_206
	word32 a2_207
	word32 a5_208
	word32 a7_209
	word32 ra_104 = pbuf_free(tcp_recved(ra, s1, a1, CONVERT(Mem0[a2 + 8<i32>:uint16], uint16, word32), s7, mstatus, dwArg00, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgF8, dwArgFC, dwArg0108, out s0_60, out s1_200, out a0_201, out a3_55, out a4_52, out a5_202, out s3_203, out s4_66, out s7_69, out s9_71, out s10_62, out s11_63, out mstatus_58), s0_60, a3_55, a4_52, s4_66, mstatus_58, dwArg0118, out s0_204, out s1_89, out a0_205, out a1_206, out a2_207, out a3_86, out a4_87, out a5_208, out a7_209, out s2_90, out s3_91, out s4_94, out s5_95, out s6_96, out s8_97, out mstatus_103)
	s1Out = s1_89
	a0Out = 0<32>
	a3Out = a3_86
	a4Out = a4_87
	s2Out = s2_90
	s3Out = s3_91
	s4Out = s4_94
	s5Out = s5_95
	s6Out = s6_96
	s7Out = s7_69
	s8Out = s8_97
	s9Out = s9_71
	s10Out = s10_62
	s11Out = s11_63
	mstatusOut = mstatus_103
	return ra_104
tcp_recv_null_exit:


word32 tcp_process_refused_data(word32 ra, word32 s1, word32 a0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_fasttmr
//      tcp_input
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_process_refused_data_entry:
l230717BC:
	word32 s1_124 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l23071822
l230717CC:
	word32 s4_118
	word32 a0_28
	word32 s2_16 = Mem13[a0 + 120<i32>:int32]
	word32 a5_17 = Mem13[a0 + 132<i32>:int32]
	word32 s3_19 = CONVERT(Mem13[s2_16 + 13<i32>:byte], byte, word32)
	Mem20[a0 + 120<i32>:word32] = 0<32>
	s0 = a0
	branch a5_17 == 0<32> l23071832
l23071832:
	word32 s1_365
	word32 s8_366
	ra = tcp_recv_null(ra, 0xFFFFFFF0<32>, a0, s2_16, 0<32>, s4, s7, mstatus, dwLoc20, dwLoc0C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, out s1_365, out a0_28, out a3, out a4, out s2, out s3, out s4_118, out s5, out s6, out s7, out s8_366, out s9, out s10, out s11, out mstatus)
l230717E6:
	word32 a5_64
	word32 a1_67
	word32 a7_75
	word32 t0_81
	word32 t1_82
	word32 t4_83
	word32 t5_84
	word32 t6_85
	word32 tp_86
	call a5_17 (retsize: 0;)
		uses: a0:Mem20[a0 + 16<i32>:word32],a1:a1_67,a3:a3_65,a4:a4_68,a5:a5_64,a7:a7_75,mstatus:mstatus,ra:ra,s0:a0,s1:0xFFFFFFF0<32>,s10:s10_76,s11:s11_77,s2:s2_16,s3:s3_19,s4:s4,s5:s5_78,s6:s6_79,s7:s7,s9:s9_80,Stack +0000:dwLoc20,Stack +0014:dwLoc0C,Stack +0028:dwArg08,Stack +0038:dwArg18,Stack +0048:dwArg28,Stack +0058:dwArg38,Stack +0068:dwArg48,Stack +0078:dwArg58,Stack +0098:dwArg78,Stack +00A8:dwArg88,Stack +00AC:dwArg8C,Stack +00B8:dwArg98,Stack +00BC:dwArg9C,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00E8:dwArgC8,Stack +00EC:dwArgCC,Stack +00F8:dwArgD8,Stack +00FC:dwArgDC,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108,t0:t0_81,t1:t1_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
		defs: a0:a0_63,a1:a1_67,a3:a3_65,a4:a4_68,a5:a5_64,a7:a7_75,mstatus:mstatus_73,ra:ra_59,s0:s0_60,s10:s10_76,s11:s11_77,s2:s2_61,s3:s3_62,s4:s4_72,s5:s5_78,s6:s6_79,s7:s7_74,s9:s9_80,t0:t0_81,t1:t1_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
l230717EA:
	s1_124 = a0_28
	branch a0_28 != 0<32> l2307183A
l2307183A:
	branch a0_28 == 0xFFFFFFF3<32> l23071820
l23071840:
	Mem92[s0 + 120<i32>:word32] = s2
	s1_124 = 0xFFFFFFFB<32>
l230717EE:
	s3 = s3 & 32<i32>
	branch s3 == 0<32> l23071822
l230717F6:
	word32 a5_97 = CONVERT(Mem20[s0 + 40<i32>:uint16], uint16, word32)
	a4 = 0xFFF810<32>
	branch a5_97 == 0xFFF810<32> l2307180A
l23071804:
	Mem101[s0 + 40<i32>:word16] = SLICE(a5_97 + 1<32>, word16, 0)
l2307180A:
	word32 a5_104 = Mem103[s0 + 132<i32>:int32]
	branch a5_104 == 0<32> l23071822
l23071810:
	word32 s0_106 = Mem103[a0_28 + 16<i32>:word32]
	word32 a0_129
	word32 a7_141
	word32 t0_147
	word32 t1_148
	word32 t4_149
	word32 t5_150
	word32 t6_151
	word32 tp_152
	call a5_104 (retsize: 0;)
		uses: a0:a0_87,a1:s0_106,a2:0<32>,a3:0<32>,a4:a4_134,a5:0xFFFFFFF3<32>,a7:a7_141,mstatus:mstatus_116,ra:ra_112,s0:s0_106,s1:a0_87,s10:s10_142,s11:s11_143,s2:s2_90,s3:s3_95,s4:s4_118,s5:s5_144,s6:s6_145,s7:s7_120,s9:s9_146,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFF4:dwLoc0C,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
		defs: a0:a0_129,a3:a3_131,a4:a4_134,a7:a7_141,mstatus:mstatus_139,ra:ra_125,s0:s0_126,s1:s1_124,s10:s10_142,s11:s11_143,s2:s2_127,s3:s3_128,s5:s5_144,s6:s6_145,s7:s7_140,s9:s9_146,t0:t0_147,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
	branch a0_129 != 0xFFFFFFF3<32> l23071822
l23071820:
	s1_124 = 0xFFFFFFF3<32>
l23071822:
	s0Out = s0
	s1Out = s1_124
	a0Out = s1_124
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwLoc1C
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
tcp_process_refused_data_exit:


word32 tcp_fasttmr(word32 ra, word32 s1, word32 a2, word32 s2, word32 s3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0108, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_fasttmr_entry:
l23071848:
	Mem22[0x4200F661<32>:byte] = SLICE(CONVERT(Mem16[0x4200F661<32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 a3_144 = 0x4200F661<32>
	word32 s2_101 = 0x4200F661<32>
	word32 s4_103 = 0x42027000<32>
	word32 s3_102 = 0x42027000<32>
	s1_100 = s1
	ra_129 = ra
l23071874:
	word32 ra_129
	word32 s1_100
	word32 s0_167 = Mem25[s4_103 + -1788<i32>:int32]
l23071878:
	branch s0_167 != 0<32> l2307188A
l2307188A:
	word32 a5_30 = CONVERT(Mem29[s2_101:byte], byte, word32)
	branch CONVERT(Mem29[s0_167 + 30<i32>:byte], byte, word32) == a5_30 l230718EC
l230718EC:
l23071896:
	Mem34[s0_167 + 30<i32>:byte] = SLICE(a5_30, byte, 0)
	word32 a5_35 = CONVERT(Mem34[s0_167 + 26<i32>:uint16], uint16, word32)
	branch (a5_35 & 1<i32>) == 0<32> l230718BC
l230718A4:
	Mem38[s0_167 + 26<i32>:word16] = SLICE(a5_35 | 2<i32>, word16, 0)
	word32 a1_492
	word32 s6_495
	word32 s9_497
	word32 s10_498
	word32 s11_499
	word32 s8_496
	word32 a5_494
	word32 a4_493
	ra_129 = tcp_output(ra_129, s1_100, s0_167, a2, s7, mstatus, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s0_167, out s1_100, out a0, out a1_492, out a2, out a3_144, out a4_493, out a5_494, out s2_101, out s3_102, out s4_103, out s5, out s6_495, out s7, out s8_496, out s9_497, out s10_498, out s11_499, out mstatus)
	Mem76[s0_167 + 26<i32>:word16] = SLICE(CONVERT(Mem38[s0_167 + 26<i32>:uint16], uint16, word32) & 0xFFFFFFFC<32>, word16, 0)
l230718BC:
	word32 a5_119 = CONVERT(Mem78[s0_167 + 26<i32>:uint16], uint16, word32)
	branch (a5_119 & 8<i32>) == 0<32> l230718D2
l230718C6:
	Mem82[s0_167 + 26<i32>:word16] = SLICE(a5_119 & 0xFFFFFFF7<32>, word16, 0)
	word32 s10_505
	word32 s11_506
	word32 a1_500
	word32 s6_502
	word32 s8_503
	word32 s9_504
	word32 a4_501
	ra_129 = tcp_close_shutdown_fin(ra_129, s1_100, s0_167, a3_144, s7, mstatus, dwLoc0C, dwArg08, dwArg28, dwArg38, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s1_100, out a0, out a1_500, out a2, out a3_144, out a4_501, out a5_119, out s2_101, out s3_102, out s4_103, out s5, out s6_502, out s7, out s8_503, out s9_504, out s10_505, out s11_506, out mstatus)
l230718D2:
	word32 s0_123 = Mem120[s1_100 + 12<i32>:word32]
	branch a5_119 == 0<32> l230718E8
l230718D8:
	Mem128[s3_102 + 2316<i32>:byte] = 0<8>
	word32 s11_513
	word32 s10_512
	word32 s9_511
	word32 s8_510
	word32 s0_507
	word32 a4_508
	word32 s6_509
	ra_129 = tcp_process_refused_data(ra_129, s1_100, s0_123, s3_102, s4_103, s7, mstatus, s2, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg58, s1, ra, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, out s0_507, out s1_100, out a0, out a2, out a3_144, out a4_508, out s2_101, out s3_102, out s4_103, out s5, out s6_509, out s7, out s8_510, out s9_511, out s10_512, out s11_513, out mstatus)
	branch CONVERT(Mem128[s3_102 + -1780<i32>:byte], byte, word32) != 0<32> l23071874
l230718E8:
	s0_167 = s1_100
l2307187A:
	s1Out = s1_100
	a0Out = a0
	a3Out = a3_144
	s5Out = s5
	s7Out = s7
	mstatusOut = mstatus
	return ra_129
tcp_fasttmr_exit:


word32 tcp_shutdown(word32 ra, word32 a0, word32 a1, word32 a2, word32 s4, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_close
//      altcp_tcp_shutdown
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_shutdown_entry:
l230718F0:
	branch a0 == 0<32> l2307194A
l2307194A:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l230718F2:
	word32 a0_162
	word32 a3_10 = CONVERT(Mem9[a0 + 20<i32>:byte], byte, word32)
	word32 a4_11 = 1<32>
	branch a3_10 == 1<32> l2307194E
l23071904:
	branch a1 == 0<32> l2307192E
l2307192E:
	branch a2 == 0<32> l2307191A
l23071930:
	a5 = 7<32>
	branch a3_10 >u 7<32> l2307194E
l23071936:
	word32 a4_16 = 1<32> << a3_10
	a4_11 = a4_16 & 152<i32>
	branch (a4_16 & 152<i32>) == 0<32> l2307194E
l2307194E:
	a0_162 = 0xFFFFFFF5<32>
l23071906:
	word32 a4_19 = CONVERT(Mem9[a0 + 26<i32>:uint16], uint16, word32)
	Mem22[a0 + 26<i32>:word16] = SLICE(a4_19 | 16<i32>, word16, 0)
	a1 = 1<32>
	a4_11 = a4_19 | 16<i32>
	branch a2 != 0<32> l23071940
l23071940:
l23071946_thunk_tcp_close_shutdown:
	word32 a0_39
	word32 a3_42
	word32 a4_43
	word32 a5_44
	word32 mstatus_47
	word32 s1_49
	word32 s3_53
	word32 s4_54
	word32 s5_55
	word32 s6_56
	word32 s7_57
	word32 s11_313
	word32 s8_310
	word32 s10_312
	word32 s9_311
	word32 s2_309
	word32 a1_308
	word32 ra_48 = tcp_close_shutdown(ra, a0, a1, dwArg10, a3_10, a4_11, s4, s7, mstatus, dwArg14, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, dwArg0128, out s1_49, out a0_39, out a1_308, out a3_42, out a4_43, out a5_44, out s2_309, out s3_53, out s4_54, out s5_55, out s6_56, out s7_57, out s8_310, out s9_311, out s10_312, out s11_313, out mstatus_47)
	s1Out = s1_49
	a0Out = a0_39
	a3Out = a3_42
	a4Out = a4_43
	a5Out = a5_44
	s3Out = s3_53
	s4Out = s4_54
	s5Out = s5_55
	s6Out = s6_56
	s7Out = s7_57
	mstatusOut = mstatus_47
	return ra_48
l23071916:
	word32 a0_67 = Mem22[a0 + 120<i32>:word32]
	branch a0_67 != 0<32> l23071924
l23071924:
	word32 s0_70
	word32 s8_307
	word32 s2_306
	word32 a7_305
	word32 a0_302
	word32 a2_304
	word32 a1_303
	ra = pbuf_free(ra, a0_67, a3_10, a4_19 | 16<i32>, s4, mstatus, dwArg0118, out s0_70, out s1, out a0_302, out a1_303, out a2_304, out a3_10, out a4_11, out a5, out a7_305, out s2_306, out s3, out s4, out s5, out s6, out s8_307, out mstatus)
	Mem93[s0_70 + 120<i32>:word32] = 0<32>
l2307191A:
	a0_162 = 0<32>
l2307191C:
	s1Out = s1
	a0Out = a0_162
	a3Out = a3_10
	a4Out = a4_11
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
tcp_shutdown_exit:


word32 tcp_slowtmr(word32 ra, word32 a0, word32 a2, word32 a3, word32 s5, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArg010C, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +010C:[0..31]
// LiveOut: a3 a4 mstatus s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_slowtmr_entry:
l23071952:
	Mem35[0x420278FC<32>:word32] = Mem5[0x420268FC<32>:int32] + 1<32>
	Mem40[0x4200F661<32>:byte] = SLICE(CONVERT(Mem35[0x4200F661<32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 s2_222 = 0x42027000<32>
	word32 a4_17 = 0x4200F661<32>
	word32 s5_225 = 0x4200F661<32>
	word32 s7_178 = 0x42027000<32>
	word32 s8_228 = 0x230C3724<32>
	word32 s9_229 = 0x230CBAE4<32>
	ra_162 = ra
	mstatus_194 = mstatus
	a0_208 = a0
	a3_211 = a3
l230719A6:
	word32 mstatus_718
	word32 a0_716
	word32 a2_714
	word32 a3_710
	word32 a3_211
	word32 a0_208
	word32 mstatus_194
	word32 ra_162
	word32 s6_226 = 0x42027000<32>
	word32 s0_100 = Mem46[0x42026904<32>:int32]
	word32 s10_124 = 0x7FFFFFE<32>
	word32 s3_223 = 0<32>
	word32 s4_224 = 0x7FFFFFF<32>
l230719B8:
	word32 sp_204 = fp - 80<i32>
	branch s0_100 != 0<32> l230719EA
l230719EA:
	word32 s11_583
	word32 a5_55 = CONVERT(Mem54[s5_225:byte], byte, word32)
	a4_17 = CONVERT(Mem54[s0_100 + 30<i32>:byte], byte, word32)
	branch a4_17 != a5_55 l23071A00
l23071A00:
	word32 a4_61
	a3_211 = CONVERT(Mem54[s0_100 + 20<i32>:byte], byte, word32)
	Mem58[s0_100 + 30<i32>:byte] = SLICE(a5_55, byte, 0)
	word32 a5_60 = CONVERT(Mem58[s0_100 + 66<i32>:byte], byte, word32)
	branch a3_211 != 2<32> l23071A56
l23071A56:
	a4_61 = 0xB<32>
l23071A12:
	a4_61 = 5<32>
l23071A14:
	word32 s1_219 = 1<32>
	branch a4_61 <u a5_60 l23071A6A
l23071A1A:
	word32 s1_68 = CONVERT(Mem58[s0_100 + 161<i32>:byte], byte, word32)
	branch s1_68 == 0<32> l23071B6E
l23071B6E:
	word32 a5_69 = CONVERT(Mem58[s0_100 + 48<i32>:int16], int16, int32)
	branch a5_69 < 0<32> l23071C0E
l23071B76:
	branch a5_69 != s4_224 l23071C08
l23071C08:
	Mem73[s0_100 + 48<i32>:word16] = SLICE(a5_69 + 1<32>, word16, 0)
l23071C0E:
	a4_61 = CONVERT(Mem75[s0_100 + 48<i32>:int16], int16, int32)
	a5_69 = CONVERT(Mem75[s0_100 + 64<i32>:int16], int16, int32)
	branch a4_61 < a5_69 l23071A68
l23071C1A:
l23071B7A:
	word32 a5_88
	word32 s1_90
	word32 a4_2067
	s0_100 = tcp_rexmit_rto_prepare(s1_68, a4_61, a5_69, out s1_90, out a0_208, out a2, out a3_211, out a4_2067, out a5_88, out s2_222, out s3_223, out s4_224, out s8_228)
	branch a0_208 == 0<32> l23071B8E
l23071B82:
	s0_100 = Mem97[a5_88 + 112<i32>:word32]
	branch a5_88 != 0<32> l23071A68
l23071B88:
	s0_100 = Mem97[a5_88 + 108<i32>:word32]
	branch a5_88 == 0<32> l23071A68
l23071B8E:
	branch CONVERT(Mem97[s0_100 + 20<i32>:byte], byte, word32) == 2<32> l23071BC8
l23071B98:
	word32 a5_108 = (CONVERT(Mem97[s0_100 + 60<i32>:int16], int16, int32) >> 3<i32>) + CONVERT(Mem97[s0_100 + 62<i32>:int16], int16, int32)
	word32 a4_109 = CONVERT(Mem97[s0_100 + 66<i32>:byte], byte, word32)
	branch a4_109 <=u 0xC<32> l23071BB0
l23071BAE:
	a4_109 = 0xC<32>
l23071BB0:
	word32 a5_119 = a5_108 << CONVERT(Mem97[(a4_109 & 255<i32>) + s8_228:byte], byte, word32)
	branch s10_124 >= a5_119 l23071BC4
l23071BC2:
	a5_119 = s4_224
l23071BC4:
	Mem132[s0_100 + 64<i32>:word16] = SLICE(a5_119, word16, 0)
l23071BC8:
	word32 a4_135 = CONVERT(Mem134[s0_100 + 72<i32>:uint16], uint16, word32)
	word32 a5_136 = CONVERT(Mem134[s0_100 + 96<i32>:uint16], uint16, word32)
	Mem137[s0_100 + 48<i32>:word16] = 0<16>
	branch a4_135 >=u a5_136 l23071BDA
l23071BD8:
	a5_136 = a4_135
l23071BDA:
	word32 a3_141 = CONVERT(Mem137[s0_100 + 50<i32>:uint16], uint16, word32)
	word32 a5_143 = a5_136 << 16<i32>
	Mem148[s0_100 + 74<i32>:word16] = SLICE(a5_143 >>u 17<i32>, word16, 0)
	word32 a4_149 = a3_141 << 0x11<32> >>u 16<i32>
	branch a5_143 >>u 17<i32> >=u a4_149 l23071BF8
l23071BF4:
	Mem150[s0_100 + 74<i32>:word16] = SLICE(a4_149, word16, 0)
l23071BF8:
	Mem153[s0_100 + 72<i32>:word16] = SLICE(a3_141, word16, 0)
	Mem154[s0_100 + 106<i32>:word16] = 0<16>
	word32 a4_2068
	word32 s11_2069
	ra_162 = tcp_rexmit_rto_commit(ra_162, s1_90, s0_100, a2, s7_178, mstatus_194, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_100, out s1_219, out a0_208, out a2, out a3_211, out a4_2068, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out s10_124, out s11_2069, out mstatus_194)
l23071A22:
	branch CONVERT(Mem58[s0_100 + 162<i32>:byte], byte, word32) >u 0xB<32> l23071C1C
l23071C1C:
	s1_219 = 1<32>
l23071A2C:
	word32 s1_242 = s1_68 + s9_229
	word32 a4_243 = CONVERT(Mem58[s1_242 + -1<i32>:byte], byte, word32)
	word32 a5_244 = CONVERT(Mem58[s0_100 + 160<i32>:byte], byte, word32)
	branch a5_244 <u a4_243 l23071A5A
l23071A5A:
	word32 a5_246 = a5_244 + 1<32> & 255<i32>
	Mem247[s0_100 + 160<i32>:byte] = SLICE(a5_246, byte, 0)
	branch a5_246 >=u a4_243 l23071A3A
l23071A3A:
	branch CONVERT(Mem249[s0_100 + 96<i32>:uint16], uint16, word32) == 0<32> l23071B50
l23071B50:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg72 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg296 = <invalid>
	tcp_zero_window_probe(ra, a0, s4, s7, mstatus, stackArg72, stackArg88, stackArg120, stackArg136, stackArg152, stackArg184, stackArg200, stackArg248, stackArg296)
	a0_208 = s0_100
	branch s0_100 != 0<32> l23071A68
l23071A42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg280 = <invalid>
	tcp_split_unsent_seg(ra, s0, a1, a3, a4, s5, s8, mstatus, stackArg88, stackArg104, stackArg120, stackArg136, stackArg152, stackArg168, stackArg184, stackArg200, stackArg216, stackArg264, stackArg280)
	a0_208 = s0_100
	branch s0_100 != 0<32> l23071B58
l23071A4C:
	word32 a1_2033
	word32 a5_2035
	word32 s11_2036
	word32 a4_2034
	word32 s1_2032
	ra_162 = tcp_output(ra_162, s1_242, s0_100, a2, s7_178, mstatus_194, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_100, out s1_2032, out a0_208, out a1_2033, out a2, out a3_211, out a4_2034, out a5_2035, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out s10_124, out s11_2036, out mstatus_194)
	branch a0_208 == 0<32> l23071A68
l23071A54:
l23071B58:
	word32 a5_293 = CONVERT(Mem249[s0_100 + 161<i32>:byte], byte, word32)
	Mem294[s0_100 + 160<i32>:byte] = 0<8>
	branch a5_293 >u 6<32> l23071A68
l23071B66:
	Mem297[s0_100 + 161<i32>:byte] = SLICE(a5_293 + 1<32>, byte, 0)
l23071A68:
	s1_219 = 0<32>
l23071A6A:
	word32 a5_303 = CONVERT(Mem301[s0_100 + 20<i32>:byte], byte, word32)
	branch a5_303 != 6<32> l23071A92
l23071A74:
	branch (CONVERT(Mem301[s0_100 + 26<i32>:uint16], uint16, word32) & 0x10<32>) == 0<32> l23071A92
l23071A7C:
	s0_100 = Mem301[a3_211 + 32<i32>:word32]
	a3_211 = 40<i32>
	branch Mem301[s2_222 + -1796<i32>:int32] - a3_211 <=u 40<i32> l23071A92
l23071A8C:
	s1_219 = s1_219 + 1<32> & 255<i32>
l23071A92:
	word32 s11_329 = CONVERT(Mem301[s0_100 + 9<i32>:byte], byte, word32)
	word32 s11_330 = s11_329 & 8<i32>
	branch (s11_329 & 8<i32>) == 0<32> l23071ADA
l23071A9E:
	branch a5_303 == 4<32> l23071AAC
l23071AA4:
	s11_330 = 0<32>
	branch a5_303 != 7<32> l23071ADA
l23071AAC:
	a0_208 = Mem301[s0_100 + 152<i32>:int32]
	word32 a1_339 = Mem301[s0_100 + 148<i32>:int32]
	a2 = 500<i32>
	word32 s0_346 = Mem301[a5_303 + 32<i32>:word32]
	a3_211 = Mem301[s2_222 + -1796<i32>:int32] - a5_303
	branch a0_208 + Mem301[s0_100 + 156<i32>:int32] + a1_339 >>u 500<i32> >=u a3_211 l23071C20
l23071C20:
	word32 a5_353 = CONVERT(Mem301[s0_346 + 163<i32>:byte], byte, word32) + a0_208 + a1_339
	s11_330 = 0<32>
	a5_303 = a5_353 >>u 500<i32>
	branch a5_353 >>u 500<i32> >=u a3_211 l23071ADA
l23071C34:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg16 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg264 = <invalid>
	word32 stackArg296 = <invalid>
	tcp_keepalive(ra, s0, a0, s7, mstatus, stackArg16, stackArg88, stackArg104, stackArg136, stackArg152, stackArg168, stackArg200, stackArg216, stackArg248, stackArg264, stackArg296)
	a0_208 = s0_346
	branch s0_346 != 0<32> l23071ADA
l23071C3E:
	word32 a5_356 = CONVERT(Mem301[s0_346 + 163<i32>:byte], byte, word32)
	Mem358[s0_346 + 163<i32>:byte] = SLICE(a5_356 + 1<32>, byte, 0)
	a5_303 = a5_356 + 1<32>
l23071AD2:
	s1_219 = s1_219 + 1<32> & 255<i32>
	s11_330 = 1<32>
l23071ADA:
	s0_100 = Mem365[a5_303 + 116<i32>:word32]
	branch a5_303 == 0<32> l23071AFA
l23071ADE:
	s0_100 = Mem365[a5_303 + 32<i32>:word32]
	a3_211 = 6<32>
	word32 a4_371 = Mem365[s2_222 + -1796<i32>:int32] - a5_303
	word32 a5_372 = CONVERT(Mem365[s0_100 + 64<i32>:int16], int16, int32)
	branch a4_371 <u a5_372 + 6<32> l23071AFA
l23071AF4:
	word32 a4_2037
	s1_219 = tcp_free_ooseq(ra_162, 6<32>, a4_371, a5_372 + 6<32>, s4_224, mstatus_194, dwArg98, out a0_208, out a2, out a3_211, out a4_2037)
l23071AFA:
	word32 a5_411 = CONVERT(Mem365[s0_100 + 20<i32>:byte], byte, word32)
	branch a5_411 != 3<32> l23071C4A
l23071C4A:
	word32 a5_422
	word32 a4_423
	branch a5_411 != 9<32> l23071CB8
l23071CB8:
	word32 a4_414 = 5<32>
	branch a5_411 == 5<32> l23071CC4
l23071CBE:
	a4_414 = 8<32>
	branch a5_411 != 8<32> l23071B1A
l23071CC4:
	s0_100 = Mem365[a4_414 + 32<i32>:word32]
	a5_422 = Mem365[s2_222 + -1796<i32>:int32] - a4_414
	a4_423 = 0xA<32>
l23071C50:
	s0_100 = Mem365[0x29<32>:word32]
	a5_422 = Mem365[s2_222 + -1796<i32>:int32] - 9<32>
	a4_423 = 240<i32>
l23071C5C:
	branch a4_423 >=u a5_422 l23071B1A
l23071B04:
	s0_100 = Mem365[0x23<32>:word32]
	branch Mem365[s2_222 + -1796<i32>:int32] <=u 0x2B<32> l23071B1A
l23071B14:
	s1_219 = s1_219 + 1<32> & 255<i32>
l23071B1A:
	branch s1_219 != 0<32> l23071C60
l23071C60:
	word32 a1_479
	word32 a2_480
	word32 a0_2042
	word32 a5_477
	word32 a4_476
	word32 a3_481
	tcp_pcb_purge(ra_162, s0_100, a3_211, s4_224, mstatus_194, dwArg88, dwArg98, dwArgC8, out a0_2042, out a1_479, out a2_480, out a3_481, out a4_476, out a5_477)
	branch s3_223 == 0<32> l23071CD0
l23071CD0:
	Mem516[s6_226 + 2308<i32>:word32] = a5_477
l23071C70:
	Mem517[s3_223 + 12<i32>:word32] = a5_477
l23071C74:
	branch s11_330 == 0<32> l23071C90
l23071C78:
	word32 a0_2045
	word32 s1_2044
	word32 s0_2043
	ra_162 = tcp_rst(ra_162, Mem526[a1_479 + 80<i32>:word32], a1_479, a2_480, s7_178, mstatus_194, dwLoc08, dwArg08, dwArg28, dwArg38, s7, s5, dwArg68, dwArg78, dwArgA8, dwArgD8, out s0_2043, out s1_2044, out a0_2045, out a3_481, out a4_476, out a5_477, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out mstatus_194)
l23071C90:
	word32 s0_581 = Mem526[a5_477 + 16<i32>:word32]
	s11_583 = Mem526[s0_581 + 12<i32>:int32]
	word32 a5_596
	word32 a1_2046
	word32 s1_597 = tcp_free(s0_581, a3_481, a4_476, mstatus_194, out a0_208, out a1_2046, out a2, out a3_211, out a4_17, out a5_596)
	Mem600[s7_178 + 2316<i32>:byte] = 0<8>
	branch s1_597 == 0<32> l23071CB4
l23071CA4:
	call s1_597 (retsize: 0;)
		uses: a0:a5_596,a3:a3_594,a4:a4_595,mstatus:mstatus_586
		defs: a0:a0_604,a2:a2_606,a3:a3_607,a4:a4_608
	branch CONVERT(Mem600[s7_178 + -1780<i32>:byte], byte, word32) != 0<32> l230719A6
l23071CB4:
	s0_100 = s3_223
l23071B1E:
	a4_17 = CONVERT(Mem365[s0_100 + 29<i32>:byte], byte, word32)
	s11_583 = Mem365[s0_100 + 12<i32>:int32]
	word32 a5_621 = CONVERT(Mem365[s0_100 + 28<i32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem622[s0_100 + 28<i32>:byte] = SLICE(a5_621, byte, 0)
	branch a5_621 <u a4_17 l230719FA
l23071B38:
	word32 a5_623 = Mem622[s0_100 + 140<i32>:int32]
	Mem624[s0_100 + 28<i32>:byte] = 0<8>
	Mem625[s7_178 + 2316<i32>:byte] = 0<8>
	branch a5_623 != 0<32> l23071CD6
l23071CD6:
	word32 s0_638 = Mem625[a0_208 + 16<i32>:word32]
	word32 a7_719
	word32 t1_720
	word32 t4_721
	word32 t5_722
	word32 t6_723
	call a5_623 (retsize: 0;)
		uses: a0:a0_716,a1:s0_638,a2:a2_714,a3:a3_710,a7:a7_719,mstatus:mstatus_718,ra:ra_377,s0:s0_638,s1:s1_438,s10:s10_687,s11:s11_619,s2:s2_314,s3:s3_490,s4:s4_389,s5:s5_646,s6:s6_505,s7:s7_544,s8:s8_660,s9:s9_674,t1:t1_720,t4:t4_721,t5:t5_722,t6:t6_723
		defs: a0:a0_716,a2:a2_714,a3:a3_710,a4:a4_701,a7:a7_719,mstatus:mstatus_718,ra:ra_702,s0:s0_703,s1:s1_704,s10:s10_708,s11:s11_709,s2:s2_695,s4:s4_706,s5:s5_697,s6:s6_707,s7:s7_698,s8:s8_699,s9:s9_700,sp:sp_694,t1:t1_720,t4:t4_721,t5:t5_722,t6:t6_723
	mstatus_194 = mstatus_718
	a2 = a2_714
	a0_208 = a0_716
	a3_211 = a3_710
	branch CONVERT(Mem625[s7_178 + -1780<i32>:byte], byte, word32) != 0<32> l230719A6
l23071CE4:
	mstatus_194 = mstatus_718
	a2 = a2_714
	a0_208 = a0_716
	a3_211 = a3_710
	branch a0_716 != 0<32> l230719FA
l23071CE8:
	a2 = a2_714
	mstatus_194 = mstatus_718
l23071B48:
	word32 a1_2039
	word32 s3_2041
	word32 a5_2040
	word32 s1_2038
	ra_162 = tcp_output(ra_162, s1_219, s0_100, a2, s7_178, mstatus_194, Mem625[sp_204 + 88<i32>:word32], Mem625[sp_204 + 104<i32>:word32], Mem625[sp_204 + 136<i32>:word32], Mem625[sp_204 + 148<i32>:word32], Mem625[sp_204 + 152<i32>:word32], Mem625[sp_204 + 168<i32>:word32], Mem625[sp_204 + 184<i32>:word32], Mem625[sp_204 + 200<i32>:word32], Mem625[sp_204 + 204<i32>:word32], Mem625[sp_204 + 216<i32>:word32], Mem625[sp_204 + 232<i32>:word32], Mem625[sp_204 + 264<i32>:word32], Mem625[sp_204 + 268<i32>:word32], Mem625[sp_204 + 280<i32>:word32], out s0_100, out s1_2038, out a0_208, out a1_2039, out a2, out a3_211, out a4_17, out a5_2040, out s2_222, out s3_2041, out s4_224, out s5_225, out s6_226, out s7_178, out s8_228, out s9_229, out s10_124, out s11_583, out mstatus_194)
l230719F6:
	s11_583 = Mem54[s0_100 + 12<i32>:int32]
l230719FA:
	s3_223 = s0_100
	s0_100 = s11_583
l230719BA:
	word32 s1_780 = Mem54[0x420268F8<32>:int32]
l230719C8:
	branch s1_780 != 0<32> l23071CEA
l23071CEA:
	word32 s1_788 = Mem785[a4_17 + 32<i32>:word32]
	branch Mem785[s2_222 + -1796<i32>:int32] - a4_17 <=u 240<i32> l23071D06
l23071D06:
	s0_100 = s1_788
	s1_780 = Mem785[s1_788 + 12<i32>:word32]
l23071CF6:
	word32 a4_798
	word32 a5_799
	word32 a3_803
	word32 a1_2014
	word32 a2_2015
	word32 a0_2013
	tcp_pcb_purge(ra_162, s1_788, a3_211, 240<i32>, mstatus_194, dwArg88, dwArg98, dwArgC8, out a0_2013, out a1_2014, out a2_2015, out a3_803, out a4_798, out a5_799)
	word32 s1_806 = Mem785[a5_799 + 12<i32>:word32]
	branch s0_100 != 0<32> l23071D0C
l23071D0C:
	Mem808[a5_799 + 12<i32>:word32] = s0_100
l23071D00:
	Mem810[0x420278F8<32>:word32] = a5_799
l23071D0E:
	word32 s5_813 = Mem812[s1_806 + 12<i32>:int32]
	word32 a0_2016
	word32 a2_2018
	word32 a5_2019
	word32 a1_2017
	tcp_free(s1_806, a3_803, a4_798, mstatus_194, out a0_2016, out a1_2017, out a2_2018, out a3_211, out a4_17, out a5_2019)
	s1_780 = s5_813
l230719CC:
	0<32> = dwArg010C
	a3Out = s2
	a4Out = a4_17
	mstatusOut = mstatus_194
	return dwLoc4C
tcp_slowtmr_exit:


word32 tcp_tmr(word32 ra, word32 s1, word32 a2, word32 s2, word32 s3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg010C, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_tcp_timer
// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +010C:[0..31]
// LiveOut: a3 a4 mstatus s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_tmr_entry:
l23071D1C:
	word32 a0_12
	word32 a3_15
	word32 mstatus_20
	word32 s1_23
	word32 s5_29
	word32 s7_31
	word32 ra_21 = tcp_fasttmr(ra, s1, a2, s2, s3, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, out s1_23, out a0_12, out a3_15, out s5_29, out s7_31, out mstatus_20)
	word32 a5_45 = CONVERT(Mem5[0x4200F660<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem46[0x4200F660<32>:byte] = SLICE(a5_45, byte, 0)
	branch (a5_45 & 1<32>) == 0<32> l23071D46
l23071D46:
	a3Out = a3_15
	a4Out = 0x4200F660<32>
	mstatusOut = mstatus_20
	return s1_23
l23071D3E:
l23071D42_thunk_tcp_slowtmr:
	word32 a3_55
	word32 a4_56
	word32 mstatus_60
	word32 s1_63 = tcp_slowtmr(ra_21, a0_12, dwArg10, a3_15, s5_29, s7_31, mstatus_20, dwArg08, dwArg18, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArg010C, out a3_55, out a4_56, out mstatus_60)
	a3Out = a3_55
	a4Out = a4_56
	mstatusOut = mstatus_60
	return s1_63
tcp_tmr_exit:


word32 tcp_get_next_optbyte(ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_parseopt.isra.0.part.1
// MayUse: 
// LiveOut: a0 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
tcp_get_next_optbyte_entry:
l23071D4C:
	word32 a5_6 = CONVERT(Mem0[0x4200F678<32>:uint16], uint16, word32)
	Mem8[0x4200F678<32>:word16] = SLICE(a5_6 + 1<i32>, word16, 0)
	word32 a4_10 = Mem8[0x4200F684<32>:int32]
	branch a4_10 == 0<32> l23071D76
l23071D6A:
	word32 a3_12 = CONVERT(Mem8[0x4200F680<32>:uint16], uint16, word32)
	branch a5_6 >=u a3_12 l23071D86
l23071D86:
	word32 a0_16 = CONVERT(Mem8[(a5_6 - a3_12 & 255<i32>) + a4_10:byte], byte, word32)
	a4Out = a4_10
	return a0_16
l23071D76:
	word32 a4_19 = Mem8[0x4200F67C<32>:int32]
	word32 a0_22 = CONVERT(Mem8[a5_6 + a4_19 + 20<i32>:byte], byte, word32)
	a4Out = a4_19
	return a0_22
tcp_get_next_optbyte_exit:


word32 tcp_oos_insert_segment(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg78, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0148, ptr32 & s0Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0078:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_oos_insert_segment_entry:
l23071D94:
	word32 s1_103 = Mem13[a5 + 16<i32>:word32]
	word32 a5_273
	word32 a0_23 = lwip_htons(CONVERT(Mem13[a5 + 12<i32>:byte], byte, word32) | CONVERT(Mem13[a5 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_273)
	word32 s2_105 = a1
	word32 a0_110 = a0_23 & 1<32>
	branch (a0_23 & 1<32>) != 0<32> l23071E1E
l23071E1E:
	word32 a5_278
	word32 a4_277
	word32 a1_275
	word32 a3_276
	word32 a0_274
	s1_103 = tcp_segs_free(ra, s0, a1, a3, a4, s4, mstatus, dwArgD8, out a0_274, out a1_275, out a3_276, out a4_277, out a5_278)
l23071DBA:
l23071DBE:
	word32 a4_42 = Mem41[s2_105 + 16<i32>:int32]
	word32 a2_44 = Mem41[0x4200F674<32>:int32]
	word32 a1_57 = CONVERT(Mem41[a4_42 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem41[a4_42 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem41[a4_42 + 4<i32>:byte], byte, word32) | CONVERT(Mem41[a4_42 + 5<i32>:byte], byte, word32) << 8<i32>))
	word32 a5_49 = CONVERT(Mem41[s1_103 + 8<i32>:uint16], uint16, word32) + a2_44
	word32 a3_60 = a5_49 - (CONVERT(Mem41[s2_105 + 8<i32>:uint16], uint16, word32) + a1_57)
	branch a3_60 >= 0<32> l23071E28
l23071E28:
	word32 a5_66
	branch (lwip_htons(CONVERT(Mem41[a4_42 + 12<i32>:byte], byte, word32) | CONVERT(Mem41[a4_42 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_66) & 1<32>) == 0<32> l23071E62
l23071E3C:
	word32 a5_75
	word32 a0_79 = CONVERT(SLICE(lwip_htons(1<32>, out a5_75) | (CONVERT(Mem41[a5_66 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem41[a5_66 + 12<i32>:byte], byte, word32)), word16, 0), word16, word32)
	Mem80[a5_75 + 12<i32>:byte] = SLICE(a0_79, byte, 0)
	Mem82[a5_75 + 13<i32>:byte] = SLICE(a0_79 >>u 8<i32>, byte, 0)
l23071E62:
	s0 = Mem84[s2_105:int32]
	word32 a1_288
	word32 a2_289
	word32 a4_291
	word32 a3_290
	word32 a5_292
	s1_103 = tcp_seg_free(ra, s2_105, a3_60, a4_42, s4, mstatus, dwArgE8, out a0_110, out a1_288, out a2_289, out a3_290, out a4_291, out a5_292)
	branch s0 == 0<32> l23071E24
l23071E24:
	s2_105 = 0<32>
l23071E6E:
	s2_105 = s0
l23071DF6:
	branch a5_49 - a1_57 <= 0<32> l23071E0C
l23071DFC:
	word32 a1_112 = CONVERT(SLICE(a1_57 - a2_44, word16, 0), word16, word32)
	Mem113[Mem41[a0_110 + 4<i32>:word32] + 8<i32>:word16] = SLICE(a1_112, word16, 0)
	word32 s8_287
	word32 s6_286
	word32 s4_284
	word32 s5_285
	word32 s3_283
	word32 a4_281
	word32 a5_282
	word32 a3_280
	word32 a2_279
	ra = pbuf_realloc(ra, s0, a0_110, a1_112, a3_60, a4_42, s2_105, 0x4200F000<32>, s4, mstatus, dwLoc0C, dwArg78, dwArgA8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0148, out s1_103, out a2_279, out a3_280, out a4_281, out a5_282, out s2_105, out s3_283, out s4_284, out s5_285, out s6_286, out s8_287, out mstatus)
l23071E0C:
	Mem148[s1_103:word32] = s2_105
	s0Out = s0
	mstatusOut = mstatus
	return ra
tcp_oos_insert_segment_exit:


word32 tcp_parseopt.isra.0.part.1(word32 a0, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
tcp_parseopt.isra.0.part.1_entry:
l23071E72:
	Mem21[0x4200F678<32>:word16] = 0<16>
	a0_156 = a0
l23071EA6:
	word32 a0_156
	word32 s0_37 = CONVERT(Mem36[0x4200F688<32>:uint16], uint16, word32)
	branch CONVERT(Mem36[0x4200F678<32>:uint16], uint16, word32) <u s0_37 l23071ECA
l23071ECA:
	a0_156 = tcp_get_next_optbyte(out a4)
	branch a0_156 == 1<32> l23071EA6
l23071ED2:
	branch CONVERT(SLICE(a0_156, byte, 0), byte, int32) == 0<32> l23071EB2
l23071EDA:
	branch a0_156 != 2<32> l23071F1C
l23071F1C:
	a0_156 = tcp_get_next_optbyte(out a4)
	branch a0_156 <=u 1<32> l23071EB2
l23071F24:
	Mem56[0x4200F678<32>:word16] = SLICE(CONVERT(Mem36[0x4200F678<32>:uint16], uint16, word32) + 0xFFFFFFFE<32> + a0_156, word16, 0)
l23071EDE:
	a0_156 = tcp_get_next_optbyte(out a4)
	branch a0_156 != 4<32> l23071EB2
l23071EE6:
	branch CONVERT(Mem36[0x4200F678<32>:uint16], uint16, word32) + 1<32> >= s0_37 l23071EB2
l23071EF0:
	word32 a4_183
	a0_156 = CONVERT(SLICE(tcp_get_next_optbyte(out a4) | (tcp_get_next_optbyte(out a4_183) << 0x18<32>) >>u 16<i32>, word16, 0), word16, word32)
	branch CONVERT(SLICE(a0_156 + -1<i32>, word16, 0), word16, word32) <=u 687<i32> l23071F16
l23071F12:
	a0_156 = 688<i32>
l23071F16:
	Mem86[a0:word16] = SLICE(a0_156, word16, 0)
l23071EB2:
	0<32> = dwArg0128
	s1Out = 0x4200F678<32>
	a0Out = a0_156
	a4Out = a4
	s2Out = 0x4200F000<32>
	s3Out = a0
	s4Out = dwArg78
	s5Out = 1<32>
	s6Out = 2<32>
	s7Out = 4<32>
	s8Out = s5
	return s4
tcp_parseopt.isra.0.part.1_exit:


word32 tcp_input_delayed_close(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_input_delayed_close_entry:
l23071F32:
	branch (CONVERT(Mem0[0x4200F670<32>:byte], byte, word32) & 0x10<32>) == 0<32> l23071F78
l23071F78:
	s1Out = s1
	a0Out = 0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23071F3E:
	word32 ra_23
	word32 a5_14 = CONVERT(Mem12[a0 + 26<i32>:uint16], uint16, word32)
	word32 s0_15 = a0
	word32 a5_16 = a5_14 & 0x10<32>
	ra_23 = ra
	branch (a5_14 & 0x10<32>) != 0<32> l23071F5A
l23071F4E:
	a5_16 = Mem12[a0 + 144<i32>:int32]
	ra_23 = ra
	branch a5_16 == 0<32> l23071F5A
l23071F54:
	word32 a2_26
	word32 s1_93
	word32 tp_94
	word32 a6_95
	word32 a7_96
	word32 s10_97
	word32 s11_98
	word32 s2_99
	word32 s3_100
	word32 s5_101
	word32 s6_102
	word32 s8_103
	word32 s9_104
	word32 t0_105
	word32 t1_106
	word32 t3_107
	word32 t4_108
	word32 t5_109
	word32 t6_110
	call a5_16 (retsize: 0;)
		uses: a0:Mem12[a0 + 16<i32>:word32],a1:0xFFFFFFF1<32>,a2:a2_26,a3:a3,a4:a4,a6:a6_95,a7:a7_96,mstatus:mstatus,ra:ra,s0:a0,s1:s1_93,s10:s10_97,s11:s11_98,s2:s2_99,s3:s3_100,s4:s4,s5:s5_101,s6:s6_102,s7:s7,s8:s8_103,s9:s9_104,t0:t0_105,t1:t1_106,t3:t3_107,t4:t4_108,t5:t5_109,t6:t6_110,tp:tp_94
		defs: a2:a2_26,a5:a5_21,a6:a6_95,a7:a7_96,ra:ra_23,s0:s0_22,s1:s1_93,s10:s10_97,s11:s11_98,s2:s2_99,s3:s3_100,s5:s5_101,s6:s6_102,s8:s8_103,s9:s9_104,t0:t0_105,t1:t1_106,t3:t3_107,t4:t4_108,t5:t5_109,t6:t6_110,tp:tp_94
l23071F5A:
	word32 a3_48
	word32 a4_49
	word32 mstatus_55
	word32 s10_57
	word32 s11_58
	word32 s2_59
	word32 s3_60
	word32 s4_61
	word32 s5_62
	word32 s6_63
	word32 s7_64
	word32 s8_65
	word32 s9_66
	word32 s1_207
	word32 a0_208
	word32 ra_56 = tcp_pcb_remove(ra_23, s0_15, a3, a4, a5_16, s4, s7, mstatus, dwArg38, dwArg48, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s1_207, out a0_208, out a3_48, out a4_49, out s2_59, out s3_60, out s4_61, out s5_62, out s6_63, out s7_64, out s8_65, out s9_66, out s10_57, out s11_58, out mstatus_55)
	word32 a3_77
	word32 a4_78
	word32 a0_209
	word32 a1_210
	word32 a2_211
	word32 a5_212
	s1Out = tcp_free(s0_15, a3_48, a4_49, mstatus_55, out a0_209, out a1_210, out a2_211, out a3_77, out a4_78, out a5_212)
	a0Out = 1<32>
	a2Out = dwArg10
	a3Out = a3_77
	a4Out = a4_78
	s2Out = s2_59
	s3Out = s3_60
	s4Out = s4_61
	s5Out = s5_62
	s6Out = s6_63
	s7Out = s7_64
	s8Out = s8_65
	s9Out = s9_66
	s10Out = s10_57
	s11Out = s11_58
	mstatusOut = mstatus_55
	return ra_56
tcp_input_delayed_close_exit:


word32 tcp_free_acked_segments.isra.3(word32 ra, word32 a0, word32 a1, word32 a4, word32 mstatus, word32 dwArgE8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
tcp_free_acked_segments.isra.3_entry:
l23071F7C:
	word32 s0_21 = a1
l23071F98:
	branch s0_21 == 0<32> l23071FE8
l23071F9A:
	word32 a5_41
	word32 a3_151
	word32 a0_38 = lwip_htonl(CONVERT(Mem26[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem26[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem26[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem26[a4 + 4<i32>:byte], byte, word32))), out a3_151, out a4, out a5_41)
	s0_21 = Mem26[a5_41 + 16<i32>:word32]
	word32 s1_44 = CONVERT(Mem26[s0_21 + 8<i32>:uint16], uint16, word32)
	word32 a5_152
	word32 a0_49 = lwip_htons(CONVERT(Mem26[a5_41 + 12<i32>:byte], byte, word32) | CONVERT(Mem26[a5_41 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_152)
	a5 = Mem26[0x4200F664<32>:int32]
	word32 a0_54 = CONVERT((a0_49 & 3<32>) != 0<32>, bool, word32)
	s5 = a0_38
	s1 = s1_44 - a5 + a0_38 + a0_54
	branch s1 <= 0<32> l23071FFC
l23071FFC:
	word32 s0_59 = Mem26[s1:word32]
	word32 a0_60 = pbuf_clen(a0_54)
	word32 a3_66 = CONVERT(Mem26[0x4200F66A<32>:uint16], uint16, word32)
	Mem68[a0:word16] = SLICE(CONVERT(Mem26[a0:uint16], uint16, word32) - a0_60, word16, 0)
	Mem73[0x4200F66A<32>:word16] = SLICE(CONVERT(Mem68[s0_59 + 8<i32>:uint16], uint16, word32) + a3_66, word16, 0)
	s0_21 = s1
	word32 a0_153
	word32 a2_154
	word32 a3_155
	s1 = tcp_seg_free(ra, s0_59, a3_66, 0x4200F66A<32>, 0x4200F000<32>, mstatus, dwArgE8, out a0_153, out a1, out a2_154, out a3_155, out a4, out a5)
l23071FE8:
	a0Out = s0_21
	a1Out = a1
	a2Out = dwArg48
	a4Out = a4
	a5Out = a5
	s2Out = a0
	s3Out = 0x4200F000<32>
	s4Out = dwArg04
	s5Out = s5
	return s1
tcp_free_acked_segments.isra.3_exit:


word32 tcp_receive(word32 ra, word32 s0, word32 s1, word32 a0, word32 a2, word32 a3, word32 s5, word32 s7, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s5:[0..31] s7:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_receive_entry:
l2307202C:
	word32 s5_115
	word32 a5_5 = CONVERT(Mem0[0x4200F668<32>:byte], byte, word32)
	word32 s3_113 = 0x4200F674<32>
	word32 s4_114 = 0x4200F68A<32>
	s5_115 = s5
	branch (a5_5 & 0x10<32>) == 0<32> l230721B6
l23072060:
	word32 a0_33 = Mem26[(a5_5 & 0x10<32>) + 84<i32>:word32]
	word32 a1_32 = Mem26[0x4200F674<32>:int32]
	word32 a6_35 = CONVERT(Mem26[a0_33 + 20<i32>:byte], byte, word32)
	a3 = CONVERT(Mem26[a0_33 + 96<i32>:uint16], uint16, word32)
	a0 = (a5_5 & 0x10<32>) - a1_32
	word32 a4_105 = Mem26[0x4200F664<32>:int32]
	s1 = 0x4200F664<32>
	branch a0 < 0<32> l230720AE
l23072084:
	branch (a5_5 & 0x10<32>) != a1_32 l23072090
l23072088:
	branch a2 - a4_105 < 0<32> l230720AE
l23072090:
	branch a2 != a4_105 l230720D8
l23072094:
	a0 = Mem26[0x4200F67C<32>:int32]
	branch a3 >=u (CONVERT(Mem26[a0 + 15<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem26[a0 + 14<i32>:byte], byte, word32)) l230720D8
l230720AE:
	word32 a0_55 = Mem26[0x4200F67C<32>:int32]
	a0 = CONVERT(Mem26[a0 + 98<i32>:uint16], uint16, word32)
	word32 a5_62 = CONVERT(Mem26[a0_55 + 15<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem26[a0_55 + 14<i32>:byte], byte, word32)
	Mem63[a0 + 96<i32>:word16] = SLICE(a5_62, word16, 0)
	branch a0 >=u a5_62 l230720D4
l230720D0:
	Mem64[a0 + 98<i32>:word16] = SLICE(a5_62, word16, 0)
l230720D4:
	Mem69[a1_32 + 84<i32>:word32] = a0
	Mem72[a4_105 + 88<i32>:word32] = a0
l230720D8:
	word32 a5_106
	word32 s0_319 = Mem74[a1_32 + 68<i32>:word32]
	word32 a5_77 = a4_105 - a1_32
	branch a5_77 > 0<32> l23072400
l23072400:
	word32 s0_81 = Mem74[a3 + 80<i32>:word32]
	branch a4_105 - a3 > 0<32> l23072550
l23072550:
	word32 s8_3094
	word32 a1_3093
	ra = tcp_send_empty_ack(ra, s0_81, s0_81, s7, mstatus, dwArg28, dwArg38, s5, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, out s1, out a0, out a1_3093, out a2, out a3, out a4_105, out a5_106, out s2, out s3_113, out s4_114, out s5_115, out s6, out s7, out s8_3094, out s9, out mstatus)
l2307240A:
	word32 a3_127 = CONVERT(Mem74[s0_81 + 26<i32>:uint16], uint16, word32)
	branch (a3_127 & 4<i32>) == 0<32> l23072426
l23072414:
	Mem130[s0_81 + 26<i32>:word16] = SLICE(a3_127 & 0xFFFFFFFB<32>, word16, 0)
	word32 a3_131 = CONVERT(Mem130[s0_81 + 74<i32>:uint16], uint16, word32)
	Mem132[s0_81 + 106<i32>:word16] = 0<16>
	Mem133[s0_81 + 72<i32>:word16] = SLICE(a3_131, word16, 0)
l23072426:
	word32 a3_136 = CONVERT(Mem135[s0_81 + 60<i32>:int16], int16, int32)
	word32 a2_137 = CONVERT(Mem135[s0_81 + 62<i32>:uint16], uint16, word32)
	Mem139[a4_105 + 68<i32>:word32] = s0_81
	Mem142[s0_81 + 64<i32>:word16] = SLICE((a3_136 >> 3<i32>) + a2_137, word16, 0)
	Mem143[s0_81 + 66<i32>:word16] = 0<16>
	word32 a4_144 = 3<32>
	branch a6_35 <=u 3<32> l230724A2
l23072442:
	word32 a5_167
	word32 a3_150 = CONVERT(Mem143[s0_81 + 72<i32>:uint16], uint16, word32)
	word32 a5_154 = CONVERT(SLICE(a5_77, word16, 0), word16, word32)
	branch a3_150 >=u CONVERT(Mem143[s0_81 + 74<i32>:uint16], uint16, word32) l2307248C
l2307248C:
	a4_144 = CONVERT(Mem143[s0_81 + 106<i32>:uint16], uint16, word32)
	word32 a5_158 = CONVERT(SLICE(a5_154 + a4_144, word16, 0), word16, word32)
	branch a5_158 <u a4_144 l23072506
l23072506:
	a5_158 = 0xFFFFFFF<32>
l2307249A:
	branch a5_158 >=u a3_150 l2307250A
l2307250A:
	Mem165[s0_81 + 106<i32>:word16] = SLICE(a5_158 - a3_150, word16, 0)
	a5_167 = CONVERT(Mem165[s0_81 + 50<i32>:uint16], uint16, word32) + a3_150
l2307249E:
	Mem168[s0_81 + 106<i32>:word16] = SLICE(a5_158, word16, 0)
l23072452:
	word32 a4_176 = CONVERT((CONVERT(Mem143[s0_81 + 26<i32>:uint16], uint16, word32) & 0xFFF800<32>) <u 1<i32>, bool, word32) + 1<32> + CONVERT(Mem143[s0_81 + 50<i32>:uint16], uint16, word32)
	word32 a2_177 = a4_176
	a4_144 = CONVERT(SLICE(a4_176, word16, 0), word16, word32)
	branch a5_154 >=u a4_144 l23072478
l23072476:
	a2_177 = a5_154
l23072478:
	a5_167 = a3_150 + a2_177
l2307247C:
	word32 a5_185 = a5_167 << 16<i32>
	word32 a5_186 = a5_185 >>u 16<i32>
	branch a5_185 >>u 16<i32> >=u a3_150 l23072486
l23072484:
	a5_186 = 0xFFFFFFFF<32>
l23072486:
	Mem193[s0_81 + 72<i32>:word16] = SLICE(a5_186, word16, 0)
l230724A2:
	word32 a0_227
	word32 s2_231
	word32 a1_237
	word32 a4_239
	word32 a2_3095
	word32 s5_3099
	word32 a5_3096
	word32 s4_3098
	word32 s3_3097
	tcp_free_acked_segments.isra.3(ra, Mem200[a1_32 + 112<i32>:word32] + 102<i32>, a1_32, a4_144, mstatus, dwArgB8, out a0_227, out a1_237, out a2_3095, out a4_239, out a5_3096, out s2_231, out s3_3097, out s4_3098, out s5_3099)
	Mem244[a0_227 + 112<i32>:word32] = Mem200[a1_237 + 108<i32>:word32]
	word32 a1_3100
	word32 a4_3101
	s1 = tcp_free_acked_segments.isra.3(ra, s2_231, a1_237, a4_239, mstatus, dwArgB8, out a0, out a1_3100, out a2, out a4_3101, out a5_106, out s2, out s3_113, out s4_114, out s5_115)
	word32 s0_262 = Mem244[a5_106 + 112<i32>:word32]
	Mem263[a0 + 108<i32>:word32] = s0_262
	Mem264[s0_262 + 28<i32>:byte] = 0<8>
	Mem267[s0_262 + 48<i32>:word16] = SLICE(0<32> - CONVERT(a5_106 <u 1<i32>, bool, word32), word16, 0)
	branch a0 != 0<32> l230724D2
l230724CE:
	Mem268[s0_262 + 104<i32>:word16] = 0<16>
l230724D2:
	Mem275[s0_262 + 100<i32>:word16] = CONVERT(Mem271[s0_262 + 100<i32>:uint16] + Mem271[0x4200F66A<32>:uint16], uint16, uint16)
	a4_105 = CONVERT(Mem275[s0_262 + 26<i32>:uint16], uint16, word32)
	a3 = a4_105 << 0x14<u32>
	branch a4_105 << 0x14<u32> >= 0<32> l23072146
l230724F0:
	branch a5_106 != 0<32> l23072548
l23072548:
	s2 = Mem275[s0_262 + 76<i32>:int32]
l230724F2:
	branch a0 != 0<32> l23072518
l23072518:
	s2 = Mem275[s0_262 + 76<i32>:int32]
l2307251E:
	a0 = s2 - lwip_htonl(CONVERT(Mem275[a4_105 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem275[a4_105 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem275[a4_105 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem275[a4_105 + 4<i32>:byte], byte, word32))), out a3, out a4_105, out a5_106)
	branch a0 > 0<32> l23072146
l23072546:
l230724F4:
	word32 a5_305 = CONVERT(Mem275[s0_262 + 26<i32>:uint16], uint16, word32)
	Mem309[s0_262 + 26<i32>:word16] = SLICE(a5_305 & 0xFF0007FF<32>, word16, 0)
	a4_105 = 0xFF0007FF<32>
	a5_106 = a5_305 & 0xFF0007FF<32>
l230720E2:
	a5_106 = CONVERT(Mem74[0x4200F68A<32>:uint16], uint16, word32)
	branch a5_106 != 0<32> l230723FA
l230720EA:
	s0_319 = Mem74[a0 + 88<i32>:word32]
	a3 = a3 + a2
	a5_106 = CONVERT(Mem74[s0_319 + 96<i32>:uint16], uint16, word32) + a0
	branch a5_106 != a3 l230723FA
l230720F8:
	a5_106 = CONVERT(Mem74[s0_319 + 48<i32>:int16], int16, int32)
	branch a5_106 < 0<32> l230723FA
l23072100:
	branch a1_32 != a4_105 l230723FA
l230723FA:
	Mem327[s0_319 + 67<i32>:byte] = 0<8>
	s5_115 = s5
l23072104:
	word32 a5_328 = CONVERT(Mem74[s0_319 + 67<i32>:byte], byte, word32)
	branch a5_328 == 255<i32> l23072116
l23072110:
	Mem331[s0_319 + 67<i32>:byte] = SLICE(a5_328 + 1<32>, byte, 0)
l23072116:
	a4_105 = CONVERT(Mem333[s0_319 + 67<i32>:byte], byte, word32)
	a5_106 = 3<32>
	branch a4_105 <=u 3<32> l2307213C
l2307213C:
	s5_115 = s5
	branch a4_105 != 3<32> l23072146
l23072120:
	word32 a4_336 = CONVERT(Mem333[s0_319 + 72<i32>:uint16], uint16, word32)
	a5_106 = CONVERT(SLICE(CONVERT(Mem333[s0_319 + 50<i32>:uint16], uint16, word32) + a4_336, word16, 0), word16, word32)
	branch a5_106 >=u a4_336 l23072136
l23072132:
	a5_106 = 0xFFFFFFF<32>
l23072136:
	Mem345[s0_319 + 72<i32>:word16] = SLICE(a5_106, word16, 0)
l23072140:
	s1 = tcp_rexmit_fast(0x4200F664<32>, a5_106, out a0, out a2, out a3, out a4_105, out a5_106, out s2, out s3_113, out s4_114)
	s5_115 = s5
l23072146:
	branch a2 == 0<32> l230721B6
l2307214A:
	word32 s0_379 = Mem374[a5_106 + 56<i32>:word32]
	s1 = Mem374[a4_105:word32]
	branch a5_106 - a4_105 >= 0<32> l230721B6
l23072154:
	word32 a3_384 = CONVERT(Mem374[s0_379 + 60<i32>:int16], int16, int32)
	word32 a4_386 = CONVERT(Mem374[0x420268FC<32>:uint16], uint16, word32)
	word32 a2_387 = a2 << 16<i32>
	word32 a1_390 = a3_384 >> 3<u32> << 16<i32>
	word32 a5_395 = CONVERT(SLICE(a4_386 - (a2_387 >>u 16<i32>) - (a1_390 >>u 16<i32>), word16, 0), word16, word32)
	word32 a5_399 = CONVERT(SLICE(a5_395 + a3_384, word16, 0), word16, int32)
	Mem401[s0_379 + 60<i32>:word16] = SLICE(a5_399, word16, 0)
	a0 = CONVERT(SLICE(a5_395, word16, 0), word16, int32)
	branch a0 >= 0<32> l23072194
l2307218A:
	a0 = CONVERT(SLICE((a2_387 >>u 16<i32>) - a4_386 + (a1_390 >>u 16<i32>), word16, 0), word16, int32)
l23072194:
	a3 = CONVERT(Mem401[s0_379 + 62<i32>:int16], int16, int32)
	Mem411[s0_379 + 52<i32>:word32] = 0<32>
	word32 a4_417 = CONVERT(SLICE(a3 - (a3 >> 2<u32>) + a0, word16, 0), word16, word32)
	Mem419[s0_379 + 62<i32>:word16] = SLICE(a4_417, word16, 0)
	Mem420[s0_379 + 64<i32>:word16] = SLICE((a5_399 >> 3<i32>) + a4_417, word16, 0)
l230721B6:
	word32 a4_1573
	word32 a5_1574
	word32 a5_1575
	word32 a2_430 = CONVERT(Mem429[s4_114:uint16], uint16, word32)
	word32 s0_1445 = Mem429[a3 + 36<i32>:word32]
	word32 a5_450 = Mem429[s3_113:int32]
	branch a2_430 == 0<32> l230729EA
l230721C4:
	branch CONVERT(Mem429[s0_1445 + 20<i32>:byte], byte, word32) >u 6<32> l230729EA
l230729EA:
	a4_1573 = a5_450 - a3
	branch a4_1573 < 0<32> l23072A00
l230729F2:
	a4_1573 = CONVERT(Mem429[s0_1445 + 40<i32>:uint16], uint16, word32)
	branch a5_450 + 1<32> - a3 - a4_1573 <= 0<32> l23072778
l23072A00:
	a5_1575 = CONVERT(Mem429[s0_1445 + 26<i32>:uint16], uint16, word32)
l230721CE:
	word32 a1_465 = a3 - a5_450
	word32 a4_1169 = a1_465 + -1<i32>
	branch a1_465 < 0xFFFFFFFF<32> l2307256A
l230721DA:
	a4_1169 = 1<32> - a5_450 - a2_430 + a3
	branch a4_1169 > 0<32> l2307256A
l2307256A:
	branch a5_450 - a3 >= 0<32> l2307223A
l23072570:
	Mem478[s0_1445 + 26<i32>:word16] = SLICE(CONVERT(Mem429[s0_1445 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
l230721E6:
	word32 a1_483 = CONVERT(SLICE(a1_465, word16, 0), word16, word32)
	Mem491[Mem429[a0 + 4<i32>:word32] + 8<i32>:word16] = SLICE(CONVERT(Mem429[0x4201B274<32>:uint16], uint16, word32) - a1_483, word16, 0)
	word32 a5_496 = CONVERT(SLICE(CONVERT(Mem491[a0 + 8<i32>:uint16], uint16, word32) - a1_483, word16, 0), word16, word32)
l2307220C:
	word32 a4_499 = CONVERT(Mem498[a0 + 10<i32>:uint16], uint16, word32)
	branch a4_499 <u a1_483 l23072558
l23072558:
	Mem504[a0 + 8<i32>:word16] = SLICE(a5_496, word16, 0)
	Mem505[a0 + 10<i32>:word16] = 0<16>
	a1_483 = CONVERT(SLICE(a1_483 - a4_499, word16, 0), word16, word32)
	a0 = Mem505[a0:word32]
l23072214:
	word32 a5_510
	word32 a3_3025
	pbuf_remove_header(a0, a1_483, a2_430, out a1_465, out a3_3025, out a4_1169, out a5_510)
	s1 = Mem498[a4_1169 + 16<i32>:word32]
	Mem518[s3_113:word32] = a5_510
	Mem519[a4_1169 + 4<i32>:byte] = SLICE(a5_510, byte, 0)
	Mem520[a4_1169 + 5<i32>:byte] = SLICE(a5_510 >>u 8<u32>, byte, 0)
	Mem523[a4_1169 + 6<i32>:byte] = SLICE(a5_510 >>u 0x10<u32>, byte, 0)
	Mem524[a4_1169 + 7<i32>:byte] = SLICE(a5_510 >>u 24<i32>, byte, 0)
l2307223A:
	word32 a5_528 = Mem527[s3_113:int32]
	word32 s0_531 = Mem527[a4_1169 + 36<i32>:word32]
	branch a5_528 - a4_1169 < 0<32> l230727A6
l23072248:
	word32 a2_1168 = CONVERT(Mem527[s0_531 + 40<i32>:uint16], uint16, word32)
	word32 a3_1173 = a5_528 + 1<i32> - a4_1169 - a2_1168
	branch a3_1173 > 0<32> l230727A6
l2307225A:
	branch a5_528 != a4_1169 l2307278E
l2307278E:
	s0_531 = Mem527[s1 + 116<i32>:word32]
	word32 s2_547 = 0<32>
	branch s1 != 0<32> l230727C2
l230727C2:
	word32 a3_583
	word32 a4_616
	word32 a1_652
	word32 a5_612
	word32 s1_859
	word32 a3_558 = CONVERT(Mem527[a2_1168 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem527[a2_1168 + 4<i32>:byte], byte, word32) | CONVERT(Mem527[a2_1168 + 6<i32>:byte], byte, word32) << 16<i32>
	word32 s1_551 = Mem527[a2_1168 + 16<i32>:word32]
	word32 a4_561 = CONVERT(Mem527[a2_1168 + 7<i32>:byte], byte, word32) << 24<i32> | a3_558
	branch a5_528 != a4_561 l23072816
l23072816:
	word32 a3_576
	branch s2_547 != 0<32> l23072834
l23072834:
	word32 a7_564 = Mem527[s2_547 + 16<i32>:int32]
	a1_465 = CONVERT(Mem527[a7_564 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem527[a7_564 + 4<i32>:byte], byte, word32) | CONVERT(Mem527[a7_564 + 6<i32>:byte], byte, word32) << 16<i32>
	a3_576 = a5_528 + -1<i32> - (CONVERT(Mem527[a7_564 + 7<i32>:byte], byte, word32) << 24<i32> | a1_465)
	branch a3_576 < 0<32> l230728C0
l2307285C:
	a3_576 = a5_528 + 1<i32> - a4_561
	branch a3_576 > 0<32> l230728C0
l23072864:
	word32 a0_591
	word32 a5_3068
	word32 a4_3067
	word32 s1_587
	s0_531 = tcp_seg_copy(s1_551, a1_465, a3_576, a4_561, mstatus, out s1_587, out a0_591, out a3_583, out a4_3067, out a5_3068)
	s4_114 = a0_591
	branch a0_591 == 0<32> l230727A6
l23072874:
	word32 a4_601 = Mem527[s2_547 + 16<i32>:int32]
	a5_612 = CONVERT(Mem527[a4_601 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem527[a4_601 + 4<i32>:byte], byte, word32) | CONVERT(Mem527[a4_601 + 5<i32>:byte], byte, word32) << 8<i32>) | CONVERT(Mem527[a4_601 + 7<i32>:byte], byte, word32) << 24<i32>
	word32 a1_614 = Mem527[s3_113:int32]
	a4_616 = CONVERT(Mem527[s2_547 + 8<i32>:uint16], uint16, word32) + a5_612 - a1_614
	branch a4_616 <= 0<32> l230728B6
l230728A4:
	word32 a0_619 = Mem527[s2_547 + 4<i32>:int32]
	word32 a1_620 = CONVERT(SLICE(a1_614 - a5_612, word16, 0), word16, word32)
	Mem621[s2_547 + 8<i32>:word16] = SLICE(a1_620, word16, 0)
	word32 a2_3069
	word32 s6_3072
	word32 s8_3073
	word32 s5_3071
	word32 s3_3070
	ra = pbuf_realloc(ra, s0_531, a0_619, a1_620, a3_583, a4_616, s2_547, s3_113, a0_591, mstatus, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_587, out a2_3069, out a3_583, out a4_616, out a5_612, out s2_547, out s3_3070, out s4_114, out s5_3071, out s6_3072, out s8_3073, out mstatus)
l230728B6:
	Mem650[s2_547:word32] = s4_114
	a1_652 = s1_587
l2307281A:
	a3_576 = a5_528 - a4_561
	branch a3_576 >= 0<32> l230728C0
l230728C0:
	word32 s1_657 = Mem527[a3_576:word32]
	s2_547 = s1_657
	branch a3_576 != 0<32> l230727C0
l230727C0:
l230728C8:
	branch a5_528 - a4_561 <= 0<32> l230727A6
l230728CE:
	word32 a5_3057
	branch (lwip_htons(CONVERT(Mem527[a2_1168 + 12<i32>:byte], byte, word32) | CONVERT(Mem527[a2_1168 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_3057) & 1<32>) != 0<32> l230727A6
l230728E4:
	word32 a3_679
	word32 a4_680
	word32 s1_683
	word32 a0_687
	word32 a5_3058
	s0_531 = tcp_seg_copy(s1_657, a1_465, a3_576, a4_561, mstatus, out s1_683, out a0_687, out a3_679, out a4_680, out a5_3058)
	Mem696[a0_687:word32] = s1_683
	branch a0_687 == 0<32> l230727A6
l230728F6:
	word32 a5_708 = CONVERT(Mem696[a4_680 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem696[a4_680 + 4<i32>:byte], byte, word32) | CONVERT(Mem696[a4_680 + 5<i32>:byte], byte, word32) << 8<i32>) | CONVERT(Mem696[a4_680 + 7<i32>:byte], byte, word32) << 24<i32>
	word32 a1_710 = Mem696[s3_113:int32]
	word32 a4_712 = CONVERT(Mem696[Mem696[a4_680 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + a5_708 - a1_710
	branch a4_712 <= 0<32> l23072934
l23072924:
	word32 a1_716 = CONVERT(SLICE(a1_710 - a5_708, word16, 0), word16, word32)
	Mem717[Mem696[a0_687 + 4<i32>:word32] + 8<i32>:word16] = SLICE(a1_716, word16, 0)
	word32 a5_3063
	word32 s5_3064
	word32 s6_3065
	word32 a3_3061
	word32 a4_3062
	word32 a2_3060
	word32 s1_3059
	word32 s8_3066
	ra = pbuf_realloc(ra, s0_531, a0_687, a1_716, a3_679, a4_712, s1_657, s3_113, s4_114, mstatus, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_3059, out a2_3060, out a3_3061, out a4_3062, out a5_3063, out s2_547, out s3_113, out s4_114, out s5_3064, out s6_3065, out s8_3066, out mstatus)
l23072934:
	word32 a4_751 = Mem750[s3_113:int32]
	s0_531 = Mem750[a4_751 + 36<i32>:word32]
	word32 a4_757 = CONVERT(Mem750[s0_531 + 40<i32>:uint16], uint16, word32)
	word32 a5_758 = CONVERT(Mem750[s4_114:uint16], uint16, word32) + a4_751 - a4_751 - a4_757
	branch a5_758 <= 0<32> l230727A6
l2307294C:
	word32 a5_760 = Mem750[a5_758 + 16<i32>:word32]
	word32 a5_766
	word32 a0_765 = lwip_htons(CONVERT(Mem750[a5_760 + 12<i32>:byte], byte, word32) | CONVERT(Mem750[a5_760 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_766)
	word32 a0_767 = a0_765 & 1<32>
	branch (a0_765 & 1<32>) == 0<32> l230729A4
l23072964:
	word32 a5_769 = Mem750[a5_766 + 16<i32>:word32]
	word32 s2_773 = CONVERT(Mem750[a5_769 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem750[a5_769 + 12<i32>:byte], byte, word32)
	word32 a5_3084
	word32 a5_3085
	word32 a0_787 = CONVERT(SLICE(s2_773 & 0xFC0000FF<32> | lwip_htons(lwip_htons(s2_773, out a5_3084) & 62<i32>, out a5_3085), word16, 0), word16, word32)
	Mem788[a4_757 + 12<i32>:byte] = SLICE(a0_787, byte, 0)
	Mem790[a4_757 + 13<i32>:byte] = SLICE(a0_787 >>u 8<i32>, byte, 0)
	s2_547 = s2_773 & 0xFC0000FF<32>
	a0_767 = a0_787 >>u 8<i32>
l230729A4:
	word32 a3_793 = Mem792[s3_113:int32]
	s0_531 = Mem792[a3_793 + 36<i32>:word32]
	word32 a5_800 = CONVERT(Mem792[s0_531 + 40<i32>:uint16], uint16, word32) - a3_793 + a3_793
	Mem801[a4_757 + 8<i32>:word16] = SLICE(a5_800, word16, 0)
	word32 a5_815
	word32 s4_829
	word32 s1_3074
	word32 a2_3075
	word32 a3_3076
	word32 s8_3082
	word32 a4_3077
	word32 s2_3078
	word32 s6_3081
	word32 s5_3080
	word32 s3_3079
	ra = pbuf_realloc(ra, s0_531, a0_767, CONVERT(Mem801[a5_800 + 8<i32>:uint16], uint16, word32), a3_793, a4_757, s2_547, s3_113, s4_114, mstatus, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_3074, out a2_3075, out a3_3076, out a4_3077, out a5_815, out s2_3078, out s3_3079, out s4_829, out s5_3080, out s6_3081, out s8_3082, out mstatus)
	word32 a5_841 = Mem801[a5_815 + 16<i32>:word32]
	word32 a5_3083
	Mem851[s4_829:word16] = SLICE(CONVERT(Mem801[a5_815 + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem801[a5_841 + 12<i32>:byte], byte, word32) | CONVERT(Mem801[a5_841 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_3083) & 3<32>) != 0<32>, bool, word32), word16, 0)
l23072822:
	word32 a0_863
	s0_531 = tcp_seg_copy(s1_551, a1_465, a3_576, a4_561, mstatus, out s1_859, out a0_863, out a3_583, out a4_616, out a5_612)
	branch a0_863 == 0<32> l230727A6
l23072830:
	Mem872[a0_863 + 116<i32>:word32] = s0_531
l230727E4:
	word32 a4_875 = CONVERT(Mem527[0x4201B274<32>:uint16], uint16, word32)
	branch CONVERT(Mem527[s1_551 + 8<i32>:uint16], uint16, word32) >=u a4_875 l230727A6
l230727F8:
	word32 a0_887
	s0_531 = tcp_seg_copy(s1_551, a1_465, a3_558, a4_875, mstatus, out s1_859, out a0_887, out a3_583, out a4_616, out a5_612)
	branch a0_887 == 0<32> l230727A6
l23072802:
	branch s2_547 == 0<32> l23072812
l23072812:
	Mem896[a0_887 + 116<i32>:word32] = s0_531
l23072806:
	Mem897[s2_547:word32] = a0_887
l2307280A:
	a1_652 = s1_859
l2307280C:
	ra = tcp_oos_insert_segment(ra, s0_531, a1_652, a3_583, a4_616, a5_612, s4_114, mstatus, dwArg48, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArg0118, out s0_531, out mstatus)
l23072798:
	word32 a0_975
	word32 s1_3045
	word32 a5_3048
	word32 a3_3046
	word32 a4_3047
	s0_531 = tcp_seg_copy(s1, a1_465, a3_1173, a4_1169, mstatus, out s1_3045, out a0_975, out a3_3046, out a4_3047, out a5_3048)
	Mem984[a0_975 + 116<i32>:word32] = s0_531
l230727A6:
	0<32> = dwArg0128
l230727BC_thunk_tcp_send_empty_ack:
	word32 a0_1055
	word32 a3_1058
	word32 a4_1059
	word32 mstatus_1063
	word32 s1_1065
	word32 s2_1066
	word32 s3_1067
	word32 s4_1068
	word32 s5_1069
	word32 s6_1070
	word32 s7_1071
	word32 s8_1072
	word32 s9_1073
	word32 a1_3090
	word32 a5_3092
	word32 a2_3091
	word32 ra_1064 = tcp_send_empty_ack(ra, dwArgE4, s0_531, s7, mstatus, s5, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s1_1065, out a0_1055, out a1_3090, out a2_3091, out a3_1058, out a4_1059, out a5_3092, out s2_1066, out s3_1067, out s4_1068, out s5_1069, out s6_1070, out s7_1071, out s8_1072, out s9_1073, out mstatus_1063)
	s0Out = <invalid>
	s1Out = s1_1065
	a0Out = a0_1055
	a3Out = a3_1058
	a4Out = a4_1059
	s2Out = s2_1066
	s3Out = s3_1067
	s4Out = s4_1068
	s5Out = s5_1069
	s6Out = s6_1070
	s7Out = s7_1071
	s8Out = s8_1072
	s9Out = s9_1073
	mstatusOut = mstatus_1063
	return ra_1064
l2307225E:
	word32 a5_1084 = Mem527[0x4201B27C<32>:word32]
	word32 s2_1083 = CONVERT(Mem527[0x4201B274<32>:uint16], uint16, word32)
	word32 a5_3026
	word32 a0_1094 = CONVERT((lwip_htons(CONVERT(Mem527[a5_1084 + 12<i32>:byte], byte, word32) | CONVERT(Mem527[a5_1084 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_3026) & 3<32>) != 0<32>, bool, word32) + s2_1083
	word32 a5_1096 = CONVERT(Mem527[s0_531 + 40<i32>:uint16], uint16, word32)
	word32 a0_1097 = CONVERT(SLICE(a0_1094, word16, 0), word16, word32)
	Mem1098[s4_114:word16] = SLICE(a0_1097, word16, 0)
	branch a5_1096 >=u a0_1097 l2307233E
l23072298:
	word32 s1_1099 = Mem1098[a5_1096 + 16<i32>:word32]
	word32 a5_1105
	branch (lwip_htons(CONVERT(Mem1098[a5_1096 + 12<i32>:byte], byte, word32) | CONVERT(Mem1098[a5_1096 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1105) & 1<32>) == 0<32> l230722EA
l230722AE:
	word32 s2_1111 = CONVERT(Mem1098[a5_1105 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1098[a5_1105 + 12<i32>:byte], byte, word32)
	word32 a5_3028
	word32 a5_3029
	word32 a0_1116 = lwip_htons(lwip_htons(s2_1111, out a5_3028) & 62<i32>, out a5_3029)
	s1_1099 = Mem1098[a4_1169 + 16<i32>:word32]
	word32 a0_1124 = CONVERT(SLICE(s2_1111 & 0xFC0000FF<32> | a0_1116, word16, 0), word16, word32)
	Mem1125[a4_1169 + 12<i32>:byte] = SLICE(a0_1124, byte, 0)
	Mem1127[a4_1169 + 13<i32>:byte] = SLICE(a0_1124 >>u 8<i32>, byte, 0)
	s2_1083 = s2_1111 & 0xFC0000FF<32>
l230722EA:
	word32 a5_1130 = CONVERT(Mem1129[s0_531 + 40<i32>:uint16], uint16, word32)
	Mem1132[s1_1099 + 8<i32>:word16] = SLICE(a5_1130, word16, 0)
	word32 s1_1133 = Mem1132[a5_1130 + 16<i32>:word32]
	word32 a5_3027
	word32 a0_1138 = lwip_htons(CONVERT(Mem1132[a5_1130 + 12<i32>:byte], byte, word32) | CONVERT(Mem1132[a5_1130 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_3027)
	branch (a0_1138 & 2<32>) == 0<32> l23072312
l23072308:
	Mem1143[s1_1133 + 8<i32>:word16] = SLICE(CONVERT(Mem1132[s1_1133 + 8<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l23072312:
	word32 a5_1166
	word32 s2_3031
	word32 s8_3034
	word32 s5_3032
	word32 s6_3033
	word32 s1_3030
	ra = pbuf_realloc(ra, s0_531, a0_1138 & 2<32>, CONVERT(Mem1145[s1_1133 + 8<i32>:uint16], uint16, word32), a3_1173, a4_1169, s2_1083, s3_113, s4_114, mstatus, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_3030, out a2_1168, out a3_1173, out a4_1169, out a5_1166, out s2_3031, out s3_113, out s4_114, out s5_3032, out s6_3033, out s8_3034, out mstatus)
	s2_1083 = CONVERT(Mem1145[Mem1145[a5_1166 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem1145[a5_1166 + 12<i32>:byte], byte, word32) | CONVERT(Mem1145[a5_1166 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1096) & 3<32>) != 0<32>, bool, word32)
	Mem1201[s4_114:word16] = SLICE(s2_1083, word16, 0)
l2307233E:
	word32 s0_1204 = Mem1203[a5_1096 + 116<i32>:word32]
	branch a5_1096 == 0<32> l2307258A
l23072344:
	word32 s1_1205 = Mem1203[a5_1096 + 16<i32>:word32]
	word32 a5_1211
	word32 a0_1210 = lwip_htons(CONVERT(Mem1203[a5_1096 + 12<i32>:byte], byte, word32) | CONVERT(Mem1203[a5_1096 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1211)
	word32 a0_1212 = a0_1210 & 1<32>
	branch (a0_1210 & 1<32>) != 0<32> l23072586
l23072586:
	s0_1204 = Mem1214[a0_1212 + 116<i32>:word32]
	branch a0_1212 != 0<32> l2307257E
l2307257E:
	word32 a0_1217 = Mem1214[a5_1211:word32]
	Mem1218[a5_1211 + 116<i32>:word32] = s0_1204
	word32 a1_3055
	tcp_seg_free(ra, a0_1217, a3_1173, a4_1169, s4_114, mstatus, dwArgD8, out a0_1212, out a1_3055, out a2_1168, out a3_1173, out a4_1169, out a5_1211)
l2307235C:
	word32 s5_1233 = Mem1203[s0_1204 + 116<i32>:int32]
l23072360:
	word32 a1_1236 = Mem1235[s3_113:int32]
	word32 a4_1239 = CONVERT(Mem1235[s4_114:uint16], uint16, word32) + a1_1236
	branch s5_1233 == 0<32> l230723F4
l2307236E:
	word32 a3_1241 = Mem1235[s5_1233 + 16<i32>:int32]
	word32 a5_1251 = CONVERT(Mem1235[a3_1241 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem1235[a3_1241 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem1235[a3_1241 + 4<i32>:byte], byte, word32) | CONVERT(Mem1235[a3_1241 + 5<i32>:byte], byte, word32) << 8<i32>))
	a2_1168 = a4_1239 - (CONVERT(Mem1235[s5_1233 + 8<i32>:uint16], uint16, word32) + a5_1251)
	branch a2_1168 >= 0<32> l230725F2
l230725F2:
	word32 a5_1260
	branch (lwip_htons(CONVERT(Mem1235[a3_1241 + 12<i32>:byte], byte, word32) | CONVERT(Mem1235[a3_1241 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1260) & 1<32>) == 0<32> l23072668
l23072606:
	word32 a5_1268
	branch (lwip_htons(CONVERT(Mem1235[a5_1260 + 12<i32>:byte], byte, word32) | CONVERT(Mem1235[a5_1260 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1268) & 2<32>) != 0<32> l23072668
l2307261C:
	word32 a5_1277
	word32 a0_1281 = CONVERT(SLICE(CONVERT(Mem1235[a5_1268 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1235[a5_1268 + 12<i32>:byte], byte, word32) | lwip_htons(1<32>, out a5_1277), word16, 0), word16, word32)
	Mem1282[a5_1277 + 12<i32>:byte] = SLICE(a0_1281, byte, 0)
	Mem1284[a5_1277 + 13<i32>:byte] = SLICE(a0_1281 >>u 8<i32>, byte, 0)
	word32 a5_3054
	Mem1296[s4_114:word16] = SLICE(CONVERT(Mem1284[Mem1284[a5_1277 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem1284[a5_1277 + 12<i32>:byte], byte, word32) | CONVERT(Mem1284[a5_1277 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_3054) & 3<32>) != 0<32>, bool, word32), word16, 0)
l23072668:
	s2_1083 = Mem1298[s5_1233:int32]
	word32 a0_3049
	word32 a1_3050
	word32 a5_3053
	word32 a3_3051
	word32 a4_3052
	s1_1205 = tcp_seg_free(ra, s5_1233, a3_1241, a4_1239, s4_114, mstatus, dwArgD8, out a0_3049, out a1_3050, out a2_1168, out a3_3051, out a4_3052, out a5_3053)
	s5_1233 = s2_1083
l2307239C:
	word32 a4_1319 = a4_1239 - a5_1251
	branch a4_1319 <= 0<32> l230723F4
l230723A2:
	word32 a5_1320 = a5_1251 - a1_1236
	Mem1322[s1_1205 + 8<i32>:word16] = SLICE(a5_1320, word16, 0)
	word32 s1_1323 = Mem1322[a5_1320 + 16<i32>:word32]
	word32 a5_3037
	word32 a0_1328 = lwip_htons(CONVERT(Mem1322[a5_1320 + 12<i32>:byte], byte, word32) | CONVERT(Mem1322[a5_1320 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_3037)
	branch (a0_1328 & 2<32>) == 0<32> l230723C8
l230723BE:
	Mem1333[s1_1323 + 8<i32>:word16] = SLICE(CONVERT(Mem1322[s1_1323 + 8<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
l230723C8:
	word32 a5_1352
	word32 a4_3040
	word32 s2_3041
	word32 s6_3042
	word32 s8_3043
	word32 s1_3038
	word32 a3_3039
	ra = pbuf_realloc(ra, s0_1204, a0_1328 & 2<32>, CONVERT(Mem1335[s1_1323 + 8<i32>:uint16], uint16, word32), a3_1241, a4_1319, s2_1083, s3_113, s4_114, mstatus, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_3038, out a2_1168, out a3_3039, out a4_3040, out a5_1352, out s2_3041, out s3_113, out s4_114, out s5_1233, out s6_3042, out s8_3043, out mstatus)
	word32 a5_3044
	Mem1387[s4_114:word16] = SLICE(CONVERT(Mem1335[Mem1335[a5_1352 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32) + CONVERT((lwip_htons(CONVERT(Mem1335[a5_1352 + 12<i32>:byte], byte, word32) | CONVERT(Mem1335[a5_1352 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_3044) & 3<32>) != 0<32>, bool, word32), word16, 0)
l230723F4:
	Mem1390[s0_1204 + 116<i32>:word32] = s5_1233
l2307258A:
	word32 a3_1395 = CONVERT(Mem1394[s4_114:uint16], uint16, word32)
	word32 a5_1404 = CONVERT(Mem1394[s0_1204 + 40<i32>:uint16], uint16, word32) - a3_1395
	Mem1406[Mem1394[s3_113:int32] + a3_1395 + 36<i32>:word32] = s0_1204
	Mem1407[s0_1204 + 40<i32>:word16] = SLICE(a5_1404, word16, 0)
	word32 a5_1417
	word32 a1_3035
	word32 a4_3036
	tcp_update_rcv_ann_wnd(s0_1204, a2_1168, a3_1395, out a1_3035, out a3, out a4_3036, out a5_1417)
	word32 s1_1419 = Mem1407[a5_1417 + 4<i32>:word32]
	word32 a4_1420 = CONVERT(Mem1407[a5_1417 + 8<i32>:uint16], uint16, word32)
	branch a4_1420 == 0<32> l230725BA
l230725AE:
	Mem1422[0x4200F66C<32>:word32] = a5_1417
	Mem1423[s1_1419 + 4<i32>:word32] = 0<32>
	a4_1420 = 0x4200F000<32>
l230725BA:
	s1 = Mem1425[a5_1417 + 16<i32>:word32]
	word32 a5_3056
	word32 a0_1431 = lwip_htons(CONVERT(Mem1425[a5_1417 + 12<i32>:byte], byte, word32) | CONVERT(Mem1425[a5_1417 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_3056)
	a0 = a0_1431 & 1<32>
	branch (a0_1431 & 1<32>) == 0<32> l230725E4
l230725D0:
	word32 a4_1436 = CONVERT(Mem1425[0x4200F670<32>:byte], byte, word32)
	Mem1438[0x4200F670<32>:byte] = SLICE(a4_1436 | 32<i32>, byte, 0)
	a4_1420 = a4_1436 | 32<i32>
l230725E4:
	s2 = 0x4200F000<32>
	s5_115 = 4<32>
	s6 = 7<32>
l23072732:
	s0_1445 = Mem1444[s1 + 116<i32>:word32]
	branch s1 == 0<32> l2307275A
l23072736:
	a3 = CONVERT(Mem1444[a4_1420 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem1444[a4_1420 + 4<i32>:byte], byte, word32) | CONVERT(Mem1444[a4_1420 + 6<i32>:byte], byte, word32) << 16<i32>
	s1 = Mem1444[a4_1420 + 16<i32>:word32]
	word32 a5_1457 = CONVERT(Mem1444[a4_1420 + 7<i32>:byte], byte, word32) << 24<i32> | a3
	s0_1445 = Mem1444[a3 + 36<i32>:word32]
	branch a5_1457 == a3 l23072676
l23072676:
	Mem1460[s3_113:word32] = a5_1457
	word32 s7_1463 = CONVERT(Mem1460[s1 + 8<i32>:uint16], uint16, word32)
	word32 a5_1467
	word32 a0_1466 = lwip_htons(CONVERT(Mem1460[a4_1420 + 12<i32>:byte], byte, word32) | CONVERT(Mem1460[a4_1420 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1467)
	word32 s0_1468 = Mem1460[a5_1467 + 36<i32>:word32]
	Mem1473[CONVERT((a0_1466 & 3<32>) != 0<32>, bool, word32) + (s7_1463 + a5_1467) + 36<i32>:word32] = s0_1468
	word32 a5_1480
	lwip_htons(CONVERT(Mem1473[a5_1467 + 12<i32>:byte], byte, word32) | CONVERT(Mem1473[a5_1467 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1480)
	s7 = CONVERT(Mem1473[Mem1473[a5_1480 + 16<i32>:word32] + 8<i32>:uint16], uint16, word32)
	word32 a5_3086
	Mem1494[s0_1468 + 40<i32>:word16] = SLICE(CONVERT(Mem1473[s0_1468 + 40<i32>:uint16], uint16, word32) - (CONVERT((lwip_htons(CONVERT(Mem1473[a5_1480 + 12<i32>:byte], byte, word32) | CONVERT(Mem1473[a5_1480 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_3086) & 3<32>) != 0<32>, bool, word32) + s7), word16, 0)
	word32 a1_1498
	word32 a3_1499
	word32 a5_3087
	word32 a4_1500
	word32 a0_1497 = tcp_update_rcv_ann_wnd(s0_1468, a2_1168, a3, out a1_1498, out a3_1499, out a4_1500, out a5_3087)
	word32 s1_1503 = Mem1494[a1_1498 + 4<i32>:word32]
	word32 a5_1504 = CONVERT(Mem1494[a1_1498 + 8<i32>:uint16], uint16, word32)
	branch a5_1504 == 0<32> l230726F6
l230726E6:
	a5_1504 = Mem1494[a0_1497:word32]
	branch a0_1497 == 0<32> l2307276C
l2307276C:
	Mem1506[a1_1498:word32] = a5_1504
l230726EE:
	pbuf_cat(a0_1497, a1_1498, a4_1500)
l230726F2:
	Mem1508[s1_1503 + 4<i32>:word32] = 0<32>
l230726F6:
	word32 a5_1518
	branch (lwip_htons(CONVERT(Mem1511[a5_1504 + 12<i32>:byte], byte, word32) | CONVERT(Mem1511[a5_1504 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1518) & 1<32>) == 0<32> l23072728
l2307270C:
	Mem1526[0x4200F670<32>:byte] = SLICE(CONVERT(Mem1511[0x4200F670<32>:byte], byte, word32) | 32<i32>, byte, 0)
	a4_1500 = 0x4200F670<32>
	a5_1518 = CONVERT(Mem1526[s0_1468 + 20<i32>:byte], byte, word32)
	branch a5_1518 != 4<32> l23072728
l23072724:
	Mem1536[s0_1468 + 20<i32>:byte] = 7<8>
l23072728:
	word32 s1_1539 = Mem1538[a5_1518:word32]
	Mem1542[a5_1518 + 116<i32>:word32] = s0_1468
	word32 a1_3088
	word32 a5_3089
	s1 = tcp_seg_free(ra, s1_1539, a3_1499, a4_1500, 0x4200F000<32>, mstatus, dwArgD8, out a0, out a1_3088, out a2_1168, out a3, out a4_1420, out a5_3089)
l2307275A:
	word32 a5_1572 = CONVERT(Mem1444[s0_1445 + 26<i32>:uint16], uint16, word32)
	a4_1573 = a5_1572 & 1<i32>
	branch (a5_1572 & 1<i32>) == 0<32> l23072770
l23072770:
	a5_1574 = a5_1572 | 1<i32>
l23072764:
	a5_1575 = a5_1572 & 0xFFFFFFFE<32>
l23072766:
	a5_1574 = a5_1575 | 2<i32>
l23072774:
	Mem1581[s0_1445 + 26<i32>:word16] = SLICE(a5_1574, word16, 0)
l23072778:
	0<32> = dwArg0128
	s0Out = <invalid>
	s1Out = s1
	a0Out = a0
	a3Out = a3
	a4Out = a4_1573
	s2Out = s2
	s3Out = s3_113
	s4Out = dwArg78
	s5Out = s5_115
	s6Out = s6
	s7Out = s7
	s8Out = s5
	s9Out = s9
	mstatusOut = mstatus
	return ra
tcp_receive_exit:


word32 tcp_input(word32 ra, word32 s0, word32 s2, word32 s3, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArg010C, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188, word32 dwArg01A8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +010C:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31] Stack +01A8:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp t2
tcp_input_entry:
l23072A06:
	word32 a5_32 = CONVERT(Mem30[0x42026886<32>:uint16], uint16, word32)
	Mem36[0x42026886<32>:word16] = SLICE(a5_32 + 1<32>, word16, 0)
	word32 a0_37 = Mem36[a5_32 + 5<32>:word32]
	Mem40[0x4200F67C<32>:word32] = a5_32 + 1<32>
	word32 sp_1303 = fp + -80<i32>
	word32 a4_120 = 0x420267F0<32>
	word32 s10_1133 = 0x420267F0<32>
	branch CONVERT(Mem40[a0_37 + 10<i32>:uint16], uint16, word32) >u 0x13<32> l23072A5A
l23072A5A:
	word32 a3_5653
	word32 a5_5654
	branch ip4_addr_isbroadcast_u32(Mem40[0x4202692C<32>:int32], Mem40[0x42026918<32>:int32], out a3_5653, out a4_120, out a5_5654) != 0<32> l23072A84
l23072A74:
	a4_120 = 224<i32>
	branch (Mem40[0x4202692C<32>:int32] & 240<i32>) != 224<i32> l23072A9A
l23072A9A:
	word32 s6_1000 = 0x42027000<32>
	word32 a0_62
	word32 s2_71
	word32 s4_73
	word32 s3_5658
	word32 s5_5659
	word32 a2_5655
	word32 a6_5657
	word32 a3_5656
	word32 s1_123
	word32 s0_69 = ip_chksum_pseudo(a0_37, 6<32>, CONVERT(Mem40[a0_37 + 8<i32>:uint16], uint16, word32), 0x42026928<32>, 0x4202692C<32>, out s1_123, out a0_62, out a2_5655, out a3_5656, out a4_120, out a6_5657, out s2_71, out s3_5658, out s4_73, out s5_5659)
	branch a0_62 == 0<32> l23072AC6
l23072AC6:
	word32 a5_80 = Mem78[s2_71 + 1660<i32>:int32]
	word32 s2_1097 = s2_71 + 1660<i32>
	word32 a5_5660
	word32 a1_88 = lwip_htons(CONVERT(Mem78[a5_80 + 12<i32>:byte], byte, word32) | CONVERT(Mem78[a5_80 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_5660) >>u 0xA<u32> & 252<i32>
	branch s0_69 >=u a1_88 l23072A4E
l23072AEA:
	a4_120 = CONVERT(SLICE(a1_88, word16, 0), word16, word32)
	branch CONVERT(Mem78[s1_123 + 8<i32>:uint16], uint16, word32) <u a4_120 l23072A4E
l23072AF8:
	word32 a1_135
	word32 a5_94 = a4_120 + -20<i32> << 16<i32>
	word32 a3_96 = CONVERT(Mem78[s1_123 + 10<i32>:uint16], uint16, word32)
	Mem102[0x4200F688<32>:word16] = SLICE(a5_94 >>u 16<i32>, word16, 0)
	Mem103[0x4200F684<32>:word32] = 0<32>
	dwLoc4C = 0x4200F688<32>
	branch a3_96 <u a4_120 l23072C9C
l23072C9C:
	word32 a1_5676
	word32 a5_5679
	word32 a4_5678
	word32 a3_5677
	pbuf_remove_header(s1_123, 0x14<32>, 0x4200F688<32>, out a1_5676, out a3_5677, out a4_5678, out a5_5679)
	word32 s0_113 = CONVERT(Mem104[s1_123 + 10<i32>:uint16], uint16, word32)
	word32 s7_115 = CONVERT(Mem104[0x4200F688<32>:uint16], uint16, word32)
	Mem117[0x4200F680<32>:word16] = SLICE(s0_113, word16, 0)
	word32 a3_5681
	word32 a5_5682
	word32 a1_5680
	word32 a0_118 = pbuf_remove_header(s1_123, s0_113, 0x4200F688<32>, out a1_5680, out a3_5681, out a4_120, out a5_5682)
	s1_123 = Mem117[a0_118:word32]
	word32 a5_126 = CONVERT(Mem117[a0_118 + 10<i32>:uint16], uint16, word32)
	word32 s3_127 = CONVERT(SLICE(s7_115 - s0_113, word16, 0), word16, word32)
	branch a5_126 <u s3_127 l23072A4E
l23072CCC:
	word32 a0_128 = Mem117[a5_126 + 4<i32>:word32]
	Mem130[0x4200F684<32>:word32] = a5_126
	word32 a5_5866
	word32 a3_5864
	word32 a4_5865
	pbuf_remove_header(a0_128, s3_127, 0x4200F688<32>, out a1_135, out a3_5864, out a4_5865, out a5_5866)
	Mem139[s1_123 + 8<i32>:word16] = SLICE(s0_113 + CONVERT(Mem130[s1_123 + 8<i32>:uint16], uint16, word32) - s7_115, word16, 0)
l23072B2E:
	Mem141[0x4200F680<32>:word16] = SLICE(a5_94 >>u 16<i32>, word16, 0)
	word32 a4_5684
	word32 a5_5685
	word32 a3_5683
	pbuf_remove_header(s1_123, a1_88, 0x4200F688<32>, out a1_135, out a3_5683, out a4_5684, out a5_5685)
l23072B38:
	word32 s0_149 = Mem148[s2_71 + 1660<i32>:int32]
	word32 a5_5867
	word32 a0_157 = lwip_htons(CONVERT(Mem148[s0_149:byte], byte, word32) | CONVERT(Mem148[s0_149 + 1<i32>:byte], byte, word32) << 8<i32>, out a5_5867)
	Mem159[s0_149:byte] = SLICE(a0_157, byte, 0)
	Mem161[s0_149 + 1<i32>:byte] = SLICE(a0_157 >>u 8<i32>, byte, 0)
	word32 s0_162 = Mem161[s2_71 + 1660<i32>:int32]
	word32 a5_5868
	word32 a0_167 = lwip_htons(CONVERT(Mem161[s0_162 + 2<i32>:byte], byte, word32) | CONVERT(Mem161[s0_162 + 3<i32>:byte], byte, word32) << 8<i32>, out a5_5868)
	Mem169[s0_162 + 2<i32>:byte] = SLICE(a0_167, byte, 0)
	Mem171[s0_162 + 3<i32>:byte] = SLICE(a0_167 >>u 8<i32>, byte, 0)
	word32 s0_172 = Mem171[s2_71 + 1660<i32>:int32]
	word32 a5_5871
	word32 a4_5870
	word32 a3_5869
	word32 a0_183 = lwip_htonl(CONVERT(Mem171[s0_172 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem171[s0_172 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem171[s0_172 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem171[s0_172 + 4<i32>:byte], byte, word32))), out a3_5869, out a4_5870, out a5_5871)
	Mem188[s0_172 + 5<i32>:byte] = SLICE(a0_183 >>u 8<u32>, byte, 0)
	Mem190[s0_172 + 6<i32>:byte] = SLICE(a0_183 >>u 0x10<u32>, byte, 0)
	Mem192[s0_172 + 4<i32>:byte] = SLICE(a0_183, byte, 0)
	Mem193[s0_172 + 7<i32>:byte] = SLICE(a0_183 >>u 0x18<u32>, byte, 0)
	word32 s0_194 = Mem193[s2_71 + 1660<i32>:int32]
	Mem195[0x4200F674<32>:word32] = a0_183
	word32 a3_5872
	word32 a5_5874
	word32 a4_5873
	word32 a0_207 = lwip_htonl(CONVERT(Mem195[s0_194 + 11<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem195[s0_194 + 10<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem195[s0_194 + 9<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem195[s0_194 + 8<i32>:byte], byte, word32))), out a3_5872, out a4_5873, out a5_5874)
	Mem212[s0_194 + 9<i32>:byte] = SLICE(a0_207 >>u 8<u32>, byte, 0)
	Mem214[s0_194 + 10<i32>:byte] = SLICE(a0_207 >>u 0x10<u32>, byte, 0)
	Mem216[s0_194 + 8<i32>:byte] = SLICE(a0_207, byte, 0)
	Mem217[s0_194 + 11<i32>:byte] = SLICE(a0_207 >>u 0x18<u32>, byte, 0)
	word32 s0_218 = Mem217[s2_71 + 1660<i32>:int32]
	Mem219[0x4200F664<32>:word32] = a0_207
	word32 a5_5875
	word32 a0_225 = lwip_htons(CONVERT(Mem219[s0_218 + 14<i32>:byte], byte, word32) | CONVERT(Mem219[s0_218 + 15<i32>:byte], byte, word32) << 8<i32>, out a5_5875)
	word32 a5_227 = Mem219[s2_71 + 1660<i32>:int32]
	Mem228[s0_218 + 14<i32>:byte] = SLICE(a0_225, byte, 0)
	Mem230[s0_218 + 15<i32>:byte] = SLICE(a0_225 >>u 8<i32>, byte, 0)
	word32 a5_5876
	word32 a0_235 = lwip_htons(CONVERT(Mem230[a5_227 + 12<i32>:byte], byte, word32) | CONVERT(Mem230[a5_227 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_5876)
	Mem239[0x4200F668<32>:byte] = SLICE(a0_235 & 255<i32> & 63<i32>, byte, 0)
	word32 s11_1134 = 0x4200F674<32>
	word32 s5_1100 = 0x4200F664<32>
	a4_120 = a0_235 & 255<i32>
	word32 a3_243 = CONVERT(Mem239[s1_123 + 8<i32>:uint16], uint16, word32)
	word32 s7_1001 = 0x4200F668<32>
	branch (a0_235 & 255<i32> & 3<i32>) == 0<32> l23072CE8
l23072CE8:
	Mem246[0x4200F68A<32>:word16] = SLICE(a3_243, word16, 0)
l23072C64:
	word32 a5_248 = a3_243 + 1<i32> << 16<i32>
	Mem250[0x4200F68A<32>:word16] = SLICE(a5_248 >>u 16<i32>, word16, 0)
	branch a5_248 >>u 16<i32> <u a3_243 l23072A4E
l23072C74:
	word32 a6_253 = Mem252[0x42026904<32>:int32]
	word32 s3_1098 = 0x42027000<32>
	word32 t4_256 = Mem252[s4_73 + 4<i32>:int32]
	word32 a3_1014 = Mem252[s2_71 + 1660<i32>:int32]
	word32 t6_259 = Mem252[s4_73 + 16<i32>:int32]
	word32 t5_260 = Mem252[s4_73 + 20<i32>:int32]
	word32 s0_2313 = a6_253
	word32 a0_262 = 0<32>
l23072C90:
	branch s0_2313 != 0<32> l23072CEE
l23072CEE:
	word32 t3_265 = CONVERT(Mem252[s0_2313 + 8<i32>:byte], byte, word32)
	branch t3_265 == 0<32> l23072D04
l23072CF6:
	branch t3_265 != (CONVERT(Mem252[t4_256 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>) l23072E1C
l23072D04:
	branch CONVERT(Mem252[s0_2313 + 24<i32>:uint16], uint16, word32) != (CONVERT(Mem252[a3_1014 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[a3_1014:byte], byte, word32)) l23072E1C
l23072D1A:
	word32 a5_283 = CONVERT(Mem252[a3_1014 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[a3_1014 + 2<i32>:byte], byte, word32)
	branch CONVERT(Mem252[s0_2313 + 22<i32>:uint16], uint16, word32) != a5_283 l23072E1C
l23072D30:
	s0_2313 = Mem252[a5_283 + 4<i32>:word32]
	branch a5_283 != t6_259 l23072E1C
l23072D36:
	s0_2313 = Mem252[a5_283:word32]
	branch a5_283 != t5_260 l23072E1C
l23072E1C:
	a0_262 = s0_2313
	s0_2313 = Mem252[s0_2313 + 12<i32>:word32]
l23072D3C:
	branch a0_262 == 0<32> l23072E10
l23072E10:
	Mem303[0x4202689A<32>:word16] = SLICE(CONVERT(Mem252[0x4202689A<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23072D3E:
	word32 s0_304 = Mem252[a5_283 + 12<i32>:word32]
	Mem308[0x42027904<32>:word32] = s0_304
	Mem309[a5_283 + 12<i32>:word32] = a0_262
	Mem313[s0_304 + 12<i32>:word32] = a6_253
l23072D4A:
	word32 a0_1085 = CONVERT(Mem319[s1_123 + 8<i32>:uint16], uint16, word32)
	Mem326[0x4200F66C<32>:word32] = 0<32>
	Mem327[0x4200F670<32>:byte] = 0<8>
	Mem328[0x4200F66A<32>:word16] = 0<16>
	Mem329[0x4201B26C<32>:word32] = 0<32>
	Mem330[0x4201B274<32>:word16] = SLICE(a0_1085, word16, 0)
	Mem331[s1_123 + 4<i32>:word32] = 0x4201B26C<32>
	Mem333[a3_1014 + 16<i32>:word32] = 0x4201B26C<32>
	word32 a5_322 = 0x4201B26C<32>
	word32 s4_1033 = 0x4200F670<32>
	word32 s8_1102 = 0x4200F66A<32>
	word32 s9_1002 = 0x4200F66C<32>
	branch (a0_235 & 255<i32> & 8<32>) == 0<32> l23072D98
l23072D8C:
	word32 a5_350 = CONVERT(Mem346[s1_123 + 13<i32>:byte], byte, word32)
	Mem352[s1_123 + 13<i32>:byte] = SLICE(a5_350 | 1<i32>, byte, 0)
	a5_322 = a5_350 | 1<i32>
l23072D98:
	word32 a4_1015
	word32 s0_1041 = Mem354[a5_322 + 120<i32>:word32]
	word32 s1_1096 = 0x42027000<32>
	branch a5_322 == 0<32> l230730C4
l23072DA2:
	word32 a2_5687
	ra = tcp_process_refused_data(ra, 0x42027000<32>, s0_1041, 0x42027000<32>, 0x4200F670<32>, 0x4200F668<32>, mstatus, dwLoc48, s6, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, s11, s5, s3, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, out s0_1041, out s1_1096, out a0_1085, out a2_5687, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out s10_1133, out s11_1134, out mstatus)
	branch a0_1085 == 0xFFFFFFF3<32> l23072DC4
l23072DAE:
	s0_1041 = Mem354[0x6B<32>:word32]
	a4_1015 = 0x4200F000<32>
	branch false l230730C4
l23072DBC:
	branch CONVERT(Mem354[0x4200F68A<32>:uint16], uint16, word32) == 0<32> l230730C4
l230730C4:
	word32 s0_1966
	word32 a5_1346
	word32 a5_1344
	a4_1015 = CONVERT(Mem354[s7_1001:byte], byte, word32)
	Mem422[s1_1096 + 2320<i32>:word32] = s0_1041
	branch (a4_1015 & 4<i32>) == 0<32> l23073144
l23073144:
	s10_1133 = a4_1015 & 2<i32>
	a5_1344 = CONVERT(Mem422[s0_1041 + 26<i32>:uint16], uint16, word32)
	branch (a4_1015 & 2<i32>) == 0<32> l23073166
l23073150:
	a0_1085 = 1<32>
	a3_1014 = CONVERT(Mem422[s0_1041 + 20<i32>:byte], byte, word32) + 0xFFFFFFFE<32> & 255<i32>
	branch a3_1014 <=u 1<32> l23073166
l23073166:
	word32 a5_431 = a5_1344 & 0x10<32>
	branch (a5_1344 & 0x10<32>) != 0<32> l23073174
l2307316A:
	a5_431 = Mem422[0x420268FC<32>:int32]
	Mem436[a5_431 + 32<i32>:word32] = s0_1041
l23073174:
	Mem442[dwArg94 + 162<i32>:word16] = 0<16>
	s0_1041 = dwArg94
	branch CONVERT(Mem442[a5_431:uint16], uint16, word32) == 0<32> l23073194
l23073180:
	tcp_parseopt.isra.0.part.1(dwArg94 + 50<i32>, dwArgD8, out s1_1096, out a0_1085, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102)
	dwLoc4C = a4_1015
	s0_1041 = dwArg74
l23073194:
	a3_1014 = 7<32>
	word32 a5_474 = CONVERT(Mem470[s0_1041 + 20<i32>:byte], byte, word32) + 0xFFFFFFFE<32> & 255<i32>
	branch a5_474 >u 7<32> l230730FC
l230731A4:
	word32 a5_1045
	word32 a3_590
	word32 s1_591
	word32 a5_593
	word32 a5_597
	word32 a4_585
	a3_1014 = 0x230C3774<32>
	word32 a5_479 = Mem470[(a5_474 << 2<i32>) + 0x230C3774<32>:word32]
	switch (a5_479) { l230731B4 l230732EA l230733E8 l230733F0 l23073496 l230733E8 l230734CE l23073508 }
l23073508:
	ra = tcp_receive(ra, s0_1041, s1_1096, s0_1041, 0x4200F68A<32>, 0x230C3774<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwLoc08, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	branch (CONVERT(Mem470[s7_1001:byte], byte, word32) & 0x10<32>) == 0<32> l230730FC
l23073518:
	s0_1041 = Mem470[a4_1015 + 80<i32>:word32]
	word32 a5_546 = Mem470[s5_1100:int32]
	branch a4_1015 != a5_546 l230730FC
l23073522:
	s0_1041 = Mem470[a5_546 + 108<i32>:word32]
	branch a5_546 != 0<32> l230730FC
l23073528:
	Mem550[s4_1033:byte] = SLICE(CONVERT(Mem470[s4_1033:byte], byte, word32) | 16<i32>, byte, 0)
l230734CE:
	ra = tcp_receive(ra, s0_1041, s1_1096, s0_1041, 0x4200F68A<32>, 0x230C3774<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwLoc08, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	branch (CONVERT(Mem470[s7_1001:byte], byte, word32) & 0x10<32>) == 0<32> l230730FC
l230734DE:
	s0_1041 = Mem470[a4_1015 + 80<i32>:word32]
	word32 a5_582 = Mem470[s5_1100:int32]
	branch a4_1015 != a5_582 l230730FC
l230734E8:
	s0_1041 = Mem470[a5_582 + 108<i32>:word32]
	branch a5_582 != 0<32> l230730FC
l230734EE:
	word32 a0_5831
	word32 a1_5832
	word32 a5_5834
	word32 a2_5833
	s1_591 = tcp_pcb_purge(ra, s0_1041, a3_1014, s4_1033, mstatus, dwArg88, dwArg98, dwArgC8, out a0_5831, out a1_5832, out a2_5833, out a3_590, out a4_585, out a5_5834)
	a5_593 = Mem470[s3_1098 + -1788<i32>:int32]
	branch s0_1041 == a5_593 l23073430
l230734FC:
	branch a5_593 == 0<32> l23073448
l230734FE:
	a5_597 = Mem470[a4_585 + 12<i32>:word32]
	branch s0_1041 == a4_585 l2307343E
l23073504:
	a5_593 = a4_585
l23073496:
	ra = tcp_receive(ra, s0_1041, s1_1096, s0_1041, 0x4200F68A<32>, 0x230C3774<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwLoc08, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	branch (CONVERT(Mem470[s4_1033:byte], byte, word32) & 32<i32>) == 0<32> l230730FC
l230734A8:
	Mem633[s0_1041 + 26<i32>:word16] = SLICE(CONVERT(Mem470[s0_1041 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
	word32 a5_5822
	word32 a0_5819
	word32 a1_5820
	word32 a2_5821
	s1_591 = tcp_pcb_purge(ra, s0_1041, a3_1014, s4_1033, mstatus, dwArg88, dwArg98, dwArgC8, out a0_5819, out a1_5820, out a2_5821, out a3_590, out a4_585, out a5_5822)
	a5_593 = Mem633[s3_1098 + -1788<i32>:int32]
	branch s0_1041 == a5_593 l23073430
l230734C2:
	branch a5_593 == 0<32> l23073448
l230734C4:
	a5_597 = Mem633[a4_585 + 12<i32>:word32]
	branch s0_1041 == a4_585 l2307343E
l230734CA:
	a5_593 = a4_585
l230733F0:
	ra = tcp_receive(ra, s0_1041, s1_1096, s0_1041, 0x4200F68A<32>, 0x230C3774<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwLoc08, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	branch (CONVERT(Mem470[s4_1033:byte], byte, word32) & 32<i32>) == 0<32> l23073478
l23073478:
	branch (CONVERT(Mem470[s7_1001:byte], byte, word32) & 0x10<32>) == 0<32> l230730FC
l23073482:
	s0_1041 = Mem470[a4_1015 + 80<i32>:word32]
	word32 a5_682 = Mem470[s5_1100:int32]
	branch a4_1015 != a5_682 l230730FC
l2307348C:
	s0_1041 = Mem470[a5_682 + 108<i32>:word32]
	branch a5_682 != 0<32> l230730FC
l23073492:
	a5_1045 = 6<32>
l23073400:
	word32 a4_685 = CONVERT(Mem470[s7_1001:byte], byte, word32)
	word32 a5_686 = CONVERT(Mem470[s0_1041 + 26<i32>:uint16], uint16, word32)
	a4_1015 = a4_685 & 0x10<32>
	branch (a4_685 & 0x10<32>) == 0<32> l2307346C
l2307340C:
	s0_1041 = Mem470[a3_1014 + 80<i32>:word32]
	a4_1015 = Mem470[s5_1100:int32]
	branch a3_1014 != a4_1015 l2307346C
l23073416:
	s0_1041 = Mem470[a4_1015 + 108<i32>:word32]
	branch a4_1015 != 0<32> l2307346C
l2307346C:
	Mem694[s0_1041 + 26<i32>:word16] = SLICE(a5_686 | 2<i32>, word16, 0)
	a5_1045 = 8<32>
l2307341A:
	Mem697[s0_1041 + 26<i32>:word16] = SLICE(a5_686 | 2<i32>, word16, 0)
	word32 a2_5837
	word32 a1_5836
	word32 a5_5838
	word32 a0_5835
	s1_591 = tcp_pcb_purge(ra, s0_1041, a3_1014, s4_1033, mstatus, dwArg88, dwArg98, dwArgC8, out a0_5835, out a1_5836, out a2_5837, out a3_590, out a4_585, out a5_5838)
	a5_593 = Mem697[s3_1098 + -1788<i32>:int32]
	branch s0_1041 != a5_593 l23073446
l23073446:
	branch a5_593 != 0<32> l23073438
l23073438:
	a5_597 = Mem697[a4_585 + 12<i32>:word32]
	branch s0_1041 != a4_585 l23073444
l23073444:
	a5_593 = a4_585
l2307343E:
	s0_1041 = Mem715[a4_585 + 12<i32>:word32]
	Mem718[a4_585 + 12<i32>:word32] = a5_597
l23073430:
	s0_1041 = Mem720[a5_593 + 12<i32>:word32]
	Mem723[s3_1098 + 2308<i32>:word32] = a5_593
l23073448:
	Mem726[0x4202790C<32>:byte] = 1<8>
	Mem729[s0_1041 + 20<i32>:byte] = 0xA<8>
	word32 a4_731 = Mem729[0x420268F8<32>:int32]
	Mem732[0x420278F8<32>:word32] = s0_1041
	Mem733[a4_731 + 12<i32>:word32] = s0_1041
	word32 a2_5823
	s0_1041 = tcp_timer_needed(s1_591, a3_590, mstatus, dwLoc0C, out s1_1096, out a0_1085, out a2_5823, out a3_1014, out a4_1015, out s8_1102)
l230733E8:
	ra = tcp_receive(ra, s0_1041, s1_1096, s0_1041, 0x4200F68A<32>, 0x230C3774<32>, s5_1100, s7_1001, mstatus, dwLoc28, dwLoc18, dwLoc08, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
l230732EA:
	a4_1015 = a4_1015 & 0x10<32>
	branch a4_1015 == 0<32> l230733D0
l230733D0:
	branch (a4_1015 & 2<i32>) == 0<32> l230730FC
l230733D4:
	s0_1041 = Mem470[a5_479 + 36<i32>:word32]
	a4_1015 = Mem470[s11_1134:int32]
	branch a5_479 + 0xFFFFFFFF<32> != a4_1015 l230730FC
l230733E0:
	word32 a5_5863
	s0_1041 = tcp_rexmit(s1_1096, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out a5_5863, out s2_1097, out s3_1098, out s4_1033, out s8_1102)
l230732EE:
	word32 a1_839 = Mem470[s5_1100:int32]
	word32 s0_840 = Mem470[a4_1015 + 68<i32>:word32]
	word32 a5_842 = a1_839 + -1<i32> - a4_1015
	branch a5_842 < 0<32> l23073394
l230732FE:
	s0_840 = Mem470[a5_842 + 80<i32>:word32]
	branch a1_839 - a5_842 > 0<32> l23073394
l23073394:
	word32 a5_5851
	ra = tcp_rst(ra, s0_840, a1_839, Mem470[s11_1134:int32] + CONVERT(Mem470[0x4200F68A<32>:uint16], uint16, word32), s7_1001, mstatus, dwLoc08, dwArg08, dwArg28, dwArg38, s7, s5, dwArg68, dwArg78, dwArgA8, dwArgD8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out a5_5851, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
l23073308:
	Mem920[s0_840 + 20<i32>:byte] = 4<8>
	s0_1966 = Mem920[0x80<32>:word32]
	branch true l2307331A
l2307331A:
	word32 a5_922 = Mem920[0x1C<32>:word32]
	branch a5_922 == 0<32> l23073312
l2307331E:
	word32 s0_928 = Mem920[a0_1085 + 16<i32>:word32]
	word32 s5_958
	word32 a2_968
	word32 t2_977
	call a5_922 (retsize: 0;)
		uses: a1:s0_928,a2:0<32>,mstatus:mstatus_514,ra:ra_484,s0:s0_928,s1:s1_485,s10:a4_419 & 2<i32>,s11:s11_816,s2:s2_846,s3:s3_931,s4:s4_935,s5:s5_488,s6:s6_873,s7:s7_498,s8:s8_939,s9:s9_947,Stack +0000:dwLoc50,Stack +0008:dwLoc48,Stack +0028:dwLoc28,Stack +0038:dwLoc18,Stack +0044:dwLoc0C,Stack +0048:dwLoc08,Stack +0054:dwArg04,Stack +0058:dwArg08,Stack +0068:dwArg18,Stack +0074:dwArg24,Stack +0078:dwArg28,Stack +007C:dwArg2C,Stack +0084:0x4201B26C<32>,Stack +0088:dwArg38,Stack +00A8:dwArg58,Stack +00B8:dwArg68,Stack +00BC:dwArg6C,Stack +00C4:dwArg74,Stack +00C8:dwArg78,Stack +00CC:dwArg7C,Stack +00D8:dwArg88,Stack +00DC:dwArg8C,Stack +00E4:dwArg94,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +010C:dwArgBC,Stack +0118:dwArgC8,Stack +0128:dwArgD8,Stack +0138:dwArgE8,t2:t2_977
		defs: a0:a0_966,a2:a2_968,a3:a3_969,a4:a4_964,mstatus:mstatus_978,ra:ra_955,s0:s0_951,s1:s1_952,s10:s10_954,s11:s11_963,s3:s3_956,s4:s4_957,s5:s5_958,s7:s7_960,s9:s9_962,sp:sp_949,t2:t2_977
	branch a0_1085 == 0<32> l23073330
l23073330:
	word32 a4_5858
	word32 a3_5857
	ra = tcp_receive(ra, s0_1966, s1_1096, s0_1966, a2_968, a3_1014, s5_958, s7_1001, mstatus, Mem920[sp_1303 + 40<i32>:word32], Mem920[sp_1303 + 56<i32>:word32], Mem920[sp_1303 + 72<i32>:word32], Mem920[sp_1303 + 104<i32>:word32], Mem920[sp_1303 + 120<i32>:word32], Mem920[sp_1303 + 136<i32>:word32], Mem920[sp_1303 + 152<i32>:word32], Mem920[sp_1303 + 168<i32>:word32], Mem920[sp_1303 + 184<i32>:word32], Mem920[sp_1303 + 200<i32>:word32], Mem920[sp_1303 + 216<i32>:word32], Mem920[sp_1303 + 228<i32>:word32], Mem920[sp_1303 + 232<i32>:word32], Mem920[sp_1303 + 248<i32>:word32], Mem920[sp_1303 + 264<i32>:word32], Mem920[sp_1303 + 280<i32>:word32], Mem920[sp_1303 + 296<i32>:word32], Mem920[sp_1303 + 312<i32>:word32], out s0_1041, out s1_1096, out a0_1085, out a3_5857, out a4_5858, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	word32 a5_1008 = CONVERT(Mem920[s8_1102:uint16], uint16, word32)
	branch a5_1008 == 0<32> l23073342
l2307333C:
	Mem1010[s8_1102:word16] = SLICE(a5_1008 + 0xFFFFFFFF<32>, word16, 0)
l23073342:
	word32 a5_1013 = CONVERT(Mem1012[s0_1041 + 50<i32>:uint16], uint16, word32)
	a3_1014 = a5_1013 << 1<u32>
	a4_1015 = a5_1013 << 2<u32>
	word32 a5_1017 = 0x100011C<32>
	word32 a2_1018 = a5_1013 << 1<u32>
	branch a5_1013 << 1<u32> >=u 0x100011C<32> l2307335C
l2307335A:
	a2_1018 = 0x100011C<32>
l2307335C:
	word32 a5_1024
	branch a5_1013 << 2<u32> >=u a2_1018 l2307338A
l2307338A:
	branch a5_1013 << 1<u32> <=u 0x100011C<32> l23073366
l2307338E:
	a5_1024 = a5_1013 << 0x11<u32>
l23073360:
	a5_1024 = a5_1013 << 0x12<u32>
l23073364:
	a5_1017 = a5_1024 >>u 16<i32>
l23073366:
	Mem1032[s0_1041 + 72<i32>:word16] = SLICE(a5_1017, word16, 0)
l2307336A:
	branch (CONVERT(Mem1038[s4_1033:byte], byte, word32) & 32<i32>) == 0<32> l230730FC
l23073376:
	Mem1044[s0_1041 + 26<i32>:word16] = SLICE(CONVERT(Mem1038[s0_1041 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
	a5_1045 = 7<32>
l23073384:
	Mem1048[s0_1041 + 20<i32>:byte] = SLICE(a5_1045, byte, 0)
l23073328:
	branch a0_1085 == 0xFFFFFFF3<32> l23072DDA
l2307332E:
l230731B4:
	word32 a5_1050 = a4_1015 & 18<i32>
	a3_1014 = 0x12<32>
	branch a5_1050 != 0x12<32> l23073290
l230731BE:
	s0_1041 = Mem470[a5_1050 + 68<i32>:word32]
	a3_1014 = Mem470[s5_1100:int32]
	branch a5_1050 + 1<32> != a3_1014 l23073290
l23073290:
	a4_1015 = a4_1015 & 0x10<32>
	branch a4_1015 == 0<32> l230730FC
l23073296:
	word32 a4_5861
	word32 a5_5862
	ra = tcp_rst(ra, s0_1041, Mem470[s5_1100:int32], Mem470[s11_1134:int32] + CONVERT(Mem470[0x4200F68A<32>:uint16], uint16, word32), s7_1001, mstatus, dwLoc08, dwArg08, dwArg28, dwArg38, s7, s5, dwArg68, dwArg78, dwArgA8, dwArgD8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_5861, out a5_5862, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out mstatus)
	a4_1015 = CONVERT(Mem470[s0_1041 + 66<i32>:byte], byte, word32)
	branch a4_1015 >u 5<32> l230730FC
l230732DE:
	Mem1114[s0_1041 + 48<i32>:word16] = 0<16>
	ra = tcp_rexmit_rto(ra, s1_1096, a4_1015, 5<32>, s7_1001, mstatus, s10, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_1041, out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1097, out s3_1098, out s4_1033, out s5_1100, out s6_1000, out s7_1001, out s8_1102, out s9_1002, out s10_1133, out s11_1134, out mstatus)
l230731CA:
	word32 a4_1145 = Mem470[s11_1134:int32]
	Mem1146[a5_1050 + 0x45<32>:word32] = s0_1041
	Mem1148[a4_1145 + 37<i32>:word32] = s0_1041
	Mem1149[a4_1145 + 45<i32>:word32] = s0_1041
	word32 a3_1150 = Mem1149[s2_1097:int32]
	s2_1097 = CONVERT(Mem1149[s0_1041 + 50<i32>:uint16], uint16, word32)
	word32 a5_1153 = CONVERT(Mem1149[a3_1150 + 15<i32>:byte], byte, word32)
	word32 a2_1154 = CONVERT(Mem1149[a3_1150 + 14<i32>:byte], byte, word32)
	Mem1155[a4_1145 + 0x53<32>:word32] = s0_1041
	word32 a5_1157 = a5_1153 << 8<i32> | a2_1154
	Mem1158[s0_1041 + 96<i32>:word16] = SLICE(a5_1157, word16, 0)
	Mem1160[s0_1041 + 98<i32>:word16] = SLICE(a5_1157, word16, 0)
	Mem1162[s0_1041 + 20<i32>:byte] = 4<8>
	word32 a3_5853
	word32 a3_5856
	word32 a4_5854
	word32 a2_5852
	word32 a5_5855
	word32 a0_1174 = tcp_eff_send_mss_netif(s2_1097, ip4_route(s0_1041 + 4<i32>, 4<32>, out a2_5852, out a3_5853, out a4_5854, out a5_5855), out a3_5856)
	Mem1178[s0_1041 + 50<i32>:word16] = SLICE(a0_1174, word16, 0)
	word32 a0_1181 = 0x100011C<32>
	word32 a3_1182 = a0_1174 << 1<u32>
	branch a0_1174 << 1<u32> >=u 0x100011C<32> l2307322E
l2307322C:
	a3_1182 = 0x100011C<32>
l2307322E:
	word32 a0_1188
	branch a0_1174 << 2<u32> >=u a3_1182 l23073276
l23073276:
	branch a0_1174 << 1<u32> <=u 0x100011C<32> l23073238
l2307327A:
	a0_1188 = a0_1174 << 0x11<u32>
l23073232:
	a0_1188 = a0_1174 << 0x12<u32>
l23073236:
	a0_1181 = a0_1188 >>u 16<i32>
l23073238:
	word32 a0_1204
	word32 a5_1198 = CONVERT(Mem1178[s0_1041 + 102<i32>:uint16], uint16, word32)
	Mem1200[s0_1041 + 72<i32>:word16] = SLICE(a0_1181, word16, 0)
	word32 s0_1201 = Mem1200[a0_1181 + 112<i32>:word32]
	Mem1203[s0_1201 + 102<i32>:word16] = SLICE(a5_1198 + 0xFFFFFFFF<32>, word16, 0)
	branch a0_1181 != 0<32> l23073280
l23073280:
	a0_1204 = Mem1203[a5_1198 + 0xFFFFFFFF<32>:word32]
	Mem1205[a5_1198 + 0x6F<32>:word32] = s0_1201
l2307324A:
	a0_1204 = Mem1203[a5_1198 + 0xFFFFFFFF<32>:word32]
	Mem1208[a5_1198 + 0x6B<32>:word32] = Mem1203[a0_1181 + 108<i32>:word32]
l23073250:
	word32 a2_5860
	word32 a1_5859
	word32 a5_1238
	s1_1096 = tcp_seg_free(ra, a0_1204, a3_1182, a0_1174 << 1<u32>, s4_1033, mstatus, dwArgB8, out a0_1085, out a1_5859, out a2_5860, out a3_1014, out a4_1015, out a5_1238)
	s0_1041 = Mem1232[a5_1238 + 112<i32>:word32]
	branch a5_1238 != 0<32> l23073286
l23073286:
	Mem1242[s0_1041 + 48<i32>:word16] = 0<16>
	Mem1243[s0_1041 + 66<i32>:byte] = 0<8>
l23073258:
	Mem1245[s0_1041 + 48<i32>:word16] = 0xFFFF<16>
l2307325E:
	word32 a5_1248 = Mem1247[s0_1041 + 136<i32>:int32]
	branch a5_1248 == 0<32> l2307313E
l23073266:
	word32 s0_1250 = Mem1247[a0_1085 + 16<i32>:word32]
	word32 t2_1331
	call a5_1248 (retsize: 0;)
		uses: a1:s0_1250,a2:0<32>,mstatus:mstatus_514,ra:ra_484,s0:s0_1250,s1:s1_1239,s10:a4_419 & 2<i32>,s11:s11_816,s2:s2_1152,s3:s3_931,s4:s4_935,s5:s5_488,s6:s6_873,s7:s7_498,s8:s8_939,s9:s9_947,Stack +0000:dwLoc50,Stack +0008:dwLoc48,Stack +0028:dwLoc28,Stack +0038:dwLoc18,Stack +0044:dwLoc0C,Stack +0048:dwLoc08,Stack +0054:dwArg04,Stack +0058:dwArg08,Stack +0068:dwArg18,Stack +0074:dwArg24,Stack +0078:dwArg28,Stack +007C:dwArg2C,Stack +0084:0x4201B26C<32>,Stack +0088:dwArg38,Stack +00A8:dwArg58,Stack +00B8:dwArg68,Stack +00BC:dwArg6C,Stack +00C4:dwArg74,Stack +00C8:dwArg78,Stack +00CC:dwArg7C,Stack +00D8:dwArg88,Stack +00DC:dwArg8C,Stack +00E4:dwArg94,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +010C:dwArgBC,Stack +0118:dwArgC8,Stack +0128:dwArgD8,Stack +0138:dwArgE8,t2:t2_1331
		defs: a0:a0_1320,a3:a3_1323,a4:a4_1318,mstatus:mstatus_1332,ra:ra_1309,s0:s0_1305,s1:s1_1306,s10:s10_1308,s11:s11_1317,s2:s2_1307,s3:s3_1310,s4:s4_1311,s5:s5_1312,s6:s6_1313,s7:s7_1314,s8:s8_1315,s9:s9_1316,sp:sp_1303,t2:t2_1331
	branch a0_1085 != 0xFFFFFFF3<32> l2307313E
l23073274:
l230730D2:
	a4_1015 = CONVERT(Mem422[s0_1041 + 20<i32>:byte], byte, word32)
	branch a4_1015 != 2<32> l23073124
l23073124:
	s0_1041 = Mem422[a4_1015 + 36<i32>:word32]
	word32 a5_1338 = Mem422[s11_1134:int32]
	branch a4_1015 == a5_1338 l230730E6
l2307312E:
	word32 a5_1339 = a5_1338 - a4_1015
	branch a5_1339 < 0<32> l230730FC
l23073134:
	a4_1015 = CONVERT(Mem422[s0_1041 + 40<i32>:uint16], uint16, word32)
	branch a5_1339 - a4_1015 > 0<32> l230730FC
l2307313E:
	a5_1344 = CONVERT(Mem1343[s0_1041 + 26<i32>:uint16], uint16, word32)
l23073160:
	a5_1346 = a5_1344 | 2<i32>
l230730DC:
	s0_1041 = Mem422[a4_1015 + 80<i32>:word32]
	branch a4_1015 != Mem422[s5_1100:int32] l230730FC
l230730E6:
	Mem1353[s4_1033:byte] = SLICE(CONVERT(Mem422[s4_1033:byte], byte, word32) | 8<i32>, byte, 0)
	a5_1346 = CONVERT(Mem1353[s0_1041 + 26<i32>:uint16], uint16, word32) & 0xFFFFFFFE<32>
l230730F8:
	Mem1360[s0_1041 + 26<i32>:word16] = SLICE(a5_1346, word16, 0)
l230730FC:
	branch (CONVERT(Mem1374[s4_1033:byte], byte, word32) & 8<32>) == 0<32> l23073536
l23073536:
	branch CONVERT(Mem1374[s8_1102:uint16], uint16, word32) == 0<32> l23073546
l2307353C:
	word32 a5_1392 = Mem1374[s0_1041 + 128<i32>:int32]
	branch a5_1392 != 0<32> l23073566
l23073566:
	word32 s0_1406 = Mem1374[a0_1085 + 16<i32>:word32]
	word32 t2_1643
	call a5_1392 (retsize: 0;)
		uses: a1:s0_1406,mstatus:mstatus_1591,ra:ra_1463,s0:s0_1406,s1:s1_1408,s10:s10_1439,s11:s11_1572,s2:s2_1421,s3:s3_1481,s4:s4_1361,s5:s5_1499,s6:s6_1517,s7:s7_1535,s8:s8_1377,s9:s9_1553,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +002C:dwArg2C,Stack +0034:0x4201B26C<32>,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0094:dwArg94,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +FFFFFFB0:dwLoc50,Stack +FFFFFFB8:dwLoc48,Stack +FFFFFFD8:dwLoc28,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,t2:t2_1643
		defs: a0:a0_1632,a3:a3_1635,a4:a4_1630,mstatus:mstatus_1644,ra:ra_1621,s0:s0_1617,s1:s1_1618,s4:s4_1623,s7:s7_1626,s8:s8_1627,s9:s9_1628,sp:sp_1615,t2:t2_1643
	branch a0_1085 != 0xFFFFFFF3<32> l23073542
l23073572:
l23073542:
	Mem1648[s8_1102:word16] = 0<16>
l23073546:
	word32 a2_5798
	word32 s2_1705
	word32 s10_1703
	word32 s3_1706
	word32 s5_1708
	word32 s6_1709
	word32 s8_1711
	word32 s11_1704
	ra = tcp_input_delayed_close(ra, s0_1041, a3_1014, a4_1015, s4_1033, s7_1001, mstatus, Mem1691[sp_1303 + 56<i32>:word32], Mem1691[sp_1303 + 72<i32>:word32], Mem1691[sp_1303 + 104<i32>:word32], Mem1691[sp_1303 + 120<i32>:word32], Mem1691[sp_1303 + 136<i32>:word32], Mem1691[sp_1303 + 152<i32>:word32], Mem1691[sp_1303 + 168<i32>:word32], Mem1691[sp_1303 + 172<i32>:word32], Mem1691[sp_1303 + 184<i32>:word32], Mem1691[sp_1303 + 200<i32>:word32], Mem1691[sp_1303 + 232<i32>:word32], Mem1691[sp_1303 + 236<i32>:word32], Mem1691[sp_1303 + 248<i32>:word32], out s1_1096, out a0_1085, out a2_5798, out a3_1014, out a4_1015, out s2_1705, out s3_1706, out s4_1033, out s5_1708, out s6_1709, out s7_1001, out s8_1711, out s9_1002, out s10_1703, out s11_1704, out mstatus)
	branch a0_1085 != 0<32> l23072DDA
l23073550:
	word32 a2_1720 = Mem1691[s9_1002:int32]
	branch a2_1720 == 0<32> l23073592
l23073556:
	branch (CONVERT(Mem1691[s0_1041 + 26<i32>:uint16], uint16, word32) & 0x10<32>) == 0<32> l23073576
l23073576:
	word32 a5_1723 = Mem1691[s0_1041 + 132<i32>:int32]
	branch a5_1723 == 0<32> l230735C4
l230735C4:
	ra = tcp_recv_null(ra, s1_1096, s0_1041, a2_1720, 0<32>, s4_1033, s7_1001, mstatus, Mem1691[sp_1303:word32], Mem1691[sp_1303 + 20<i32>:word32], Mem1691[sp_1303 + 40<i32>:word32], Mem1691[sp_1303 + 56<i32>:word32], Mem1691[sp_1303 + 72<i32>:word32], Mem1691[sp_1303 + 88<i32>:word32], Mem1691[sp_1303 + 104<i32>:word32], Mem1691[sp_1303 + 120<i32>:word32], Mem1691[sp_1303 + 132<i32>:word32], Mem1691[sp_1303 + 136<i32>:word32], Mem1691[sp_1303 + 152<i32>:word32], Mem1691[sp_1303 + 168<i32>:word32], Mem1691[sp_1303 + 172<i32>:word32], Mem1691[sp_1303 + 184<i32>:word32], Mem1691[sp_1303 + 188<i32>:word32], Mem1691[sp_1303 + 200<i32>:word32], Mem1691[sp_1303 + 216<i32>:word32], Mem1691[sp_1303 + 232<i32>:word32], Mem1691[sp_1303 + 236<i32>:word32], Mem1691[sp_1303 + 248<i32>:word32], Mem1691[sp_1303 + 252<i32>:word32], Mem1691[sp_1303 + 264<i32>:word32], Mem1691[sp_1303 + 280<i32>:word32], Mem1691[sp_1303 + 296<i32>:word32], out s1_1096, out a0_1085, out a3_1014, out a4_1015, out s2_1705, out s3_1706, out s4_1033, out s5_1708, out s6_1709, out s7_1001, out s8_1711, out s9_1002, out s10_1703, out s11_1704, out mstatus)
l23073580:
	word32 t2_1783
	call a5_1723 (retsize: 0;)
		uses: mstatus:mstatus_1700,ra:ra_1701,s0:Mem1691[a0_1692 + 16<i32>:word32],s1:s1_1702,s10:s10_1703,s11:s11_1704,s2:s2_1705,s3:s3_1706,s4:s4_1707,s5:s5_1708,s6:s6_1709,s7:s7_1710,s8:s8_1711,s9:s9_1712,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +002C:dwArg2C,Stack +0034:0x4201B26C<32>,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0094:dwArg94,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +FFFFFFB0:dwLoc50,Stack +FFFFFFB8:dwLoc48,Stack +FFFFFFD8:dwLoc28,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,t2:t2_1783
		defs: a0:a0_1772,a3:a3_1775,a4:a4_1770,mstatus:mstatus_1784,ra:ra_1761,s0:s0_1757,s1:s1_1758,s10:s10_1760,s11:s11_1769,s2:s2_1759,s3:s3_1762,s4:s4_1763,s5:s5_1764,s6:s6_1765,s7:s7_1766,s8:s8_1767,s9:s9_1768,sp:sp_1755,t2:t2_1783
l23073584:
	branch a0_1085 == 0xFFFFFFF3<32> l23072DDA
l2307358A:
	branch a0_1085 == 0<32> l23073592
l2307358C:
	Mem1792[Mem1691[s9_1002:int32] + 120<i32>:word32] = s0_1041
l23073592:
	word32 a5_1796 = CONVERT(Mem1795[s4_1033:byte], byte, word32)
	branch (a5_1796 & 32<i32>) == 0<32> l230735AC
l2307359C:
	s0_1041 = Mem1795[(a5_1796 & 32<i32>) + 120<i32>:word32]
	branch (a5_1796 & 32<i32>) == 0<32> l230735CA
l230735CA:
	word32 a5_1799 = CONVERT(Mem1795[s0_1041 + 40<i32>:uint16], uint16, word32)
	a4_1015 = 0xFFF810<32>
	branch a5_1799 == 0xFFF810<32> l230735DE
l230735D8:
	Mem1803[s0_1041 + 40<i32>:word16] = SLICE(a5_1799 + 1<32>, word16, 0)
l230735DE:
	word32 a5_1806 = Mem1805[s0_1041 + 132<i32>:int32]
	branch a5_1806 == 0<32> l230735AC
l230735E4:
	word32 s0_1809 = Mem1805[a0_1085 + 16<i32>:word32]
	word32 t2_1880
	call a5_1806 (retsize: 0;)
		uses: a1:s0_1809,a2:0<32>,a3:0<32>,mstatus:mstatus_1847,ra:ra_1823,s0:s0_1809,s1:s1_1814,s10:s10_1820,s11:s11_1844,s2:s2_1817,s3:s3_1826,s4:s4_1793,s5:s5_1830,s6:s6_1833,s7:s7_1836,s8:s8_1839,s9:s9_1842,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +002C:dwArg2C,Stack +0034:0x4201B26C<32>,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0094:dwArg94,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +FFFFFFB0:dwLoc50,Stack +FFFFFFB8:dwLoc48,Stack +FFFFFFD8:dwLoc28,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,t2:t2_1880
		defs: a0:a0_1869,a3:a3_1872,a4:a4_1867,mstatus:mstatus_1881,ra:ra_1858,s0:s0_1854,s1:s1_1855,s4:s4_1860,s7:s7_1863,s9:s9_1865,sp:sp_1852,t2:t2_1880
	branch a0_1085 != 0xFFFFFFF3<32> l230735AC
l230735F4:
l230735A0:
	word32 a4_1884 = CONVERT(Mem1795[(a5_1796 & 32<i32>) + 13<i32>:byte], byte, word32)
	Mem1886[(a5_1796 & 32<i32>) + 13<i32>:byte] = SLICE(a4_1884 | 32<i32>, byte, 0)
	a4_1015 = a4_1884 | 32<i32>
l230735AC:
	Mem1891[s1_1096 + 2320<i32>:word32] = 0<32>
	word32 s11_5830
	word32 s2_5824
	word32 s6_5827
	word32 s10_5829
	word32 s3_5825
	word32 s5_5826
	word32 s8_5828
	word32 a2_1908
	word32 s7_1923
	ra = tcp_input_delayed_close(ra, s0_1041, a3_1014, a4_1015, s4_1033, s7_1001, mstatus, Mem1891[sp_1303 + 56<i32>:word32], Mem1891[sp_1303 + 72<i32>:word32], Mem1891[sp_1303 + 104<i32>:word32], Mem1891[sp_1303 + 120<i32>:word32], Mem1891[sp_1303 + 136<i32>:word32], Mem1891[sp_1303 + 152<i32>:word32], Mem1891[sp_1303 + 168<i32>:word32], Mem1891[sp_1303 + 172<i32>:word32], Mem1891[sp_1303 + 184<i32>:word32], Mem1891[sp_1303 + 200<i32>:word32], Mem1891[sp_1303 + 232<i32>:word32], Mem1891[sp_1303 + 236<i32>:word32], Mem1891[sp_1303 + 248<i32>:word32], out s1_1096, out a0_1085, out a2_1908, out a3_1014, out a4_1015, out s2_5824, out s3_5825, out s4_1033, out s5_5826, out s6_5827, out s7_1923, out s8_5828, out s9_1002, out s10_5829, out s11_5830, out mstatus)
	branch a0_1085 != 0<32> l23072DDA
l230735BA:
	word32 s0_5839
	word32 a1_5840
	word32 s11_5850
	word32 s5_5845
	word32 s10_5849
	word32 s7_5847
	word32 s2_5843
	word32 a2_5841
	word32 s3_5844
	word32 s8_5848
	word32 a5_5842
	word32 s6_5846
	ra = tcp_output(ra, s1_1096, s0_1041, a2_1908, s7_1923, mstatus, Mem1891[sp_1303 + 88<i32>:word32], Mem1891[sp_1303 + 104<i32>:word32], Mem1891[sp_1303 + 136<i32>:word32], Mem1891[sp_1303 + 148<i32>:word32], Mem1891[sp_1303 + 152<i32>:word32], Mem1891[sp_1303 + 168<i32>:word32], Mem1891[sp_1303 + 184<i32>:word32], Mem1891[sp_1303 + 200<i32>:word32], Mem1891[sp_1303 + 204<i32>:word32], Mem1891[sp_1303 + 216<i32>:word32], Mem1891[sp_1303 + 232<i32>:word32], Mem1891[sp_1303 + 264<i32>:word32], Mem1891[sp_1303 + 268<i32>:word32], Mem1891[sp_1303 + 280<i32>:word32], out s0_5839, out s1_1096, out a0_1085, out a1_5840, out a2_5841, out a3_1014, out a4_1015, out a5_5842, out s2_5843, out s3_5844, out s4_1033, out s5_5845, out s6_5846, out s7_5847, out s8_5848, out s9_1002, out s10_5849, out s11_5850, out mstatus)
l2307355E:
	word32 s6_5807
	word32 s5_5806
	word32 s8_5808
	word32 a0_5799
	word32 a7_5804
	word32 s2_5805
	word32 a4_5802
	word32 a1_5800
	word32 a5_5803
	word32 a2_5801
	ra = pbuf_free(ra, a2_1720, a3_1014, a4_1015, s4_1033, mstatus, Mem1691[sp_1303 + 296<i32>:word32], out s0_1966, out s1_1096, out a0_5799, out a1_5800, out a2_5801, out a3_1014, out a4_5802, out a5_5803, out a7_5804, out s2_5805, out s3_1098, out s4_1033, out s5_5806, out s6_5807, out s8_5808, out mstatus)
l23073312:
	word32 s7_5816
	word32 s5_5814
	word32 s6_5815
	word32 s11_5818
	word32 s2_5812
	word32 a1_5810
	word32 s3_5813
	word32 s0_5809
	word32 s10_5817
	word32 a5_5811
	ra = tcp_abort(ra, s1_1096, s0_1966, a3_1014, s3_1098, s4_1033, s7_1001, mstatus, Mem1999[sp_1303:word32], Mem1999[sp_1303 + 4<i32>:word32], Mem1999[sp_1303 + 40<i32>:word32], Mem1999[sp_1303 + 56<i32>:word32], Mem1999[sp_1303 + 72<i32>:word32], Mem1999[sp_1303 + 88<i32>:word32], Mem1999[sp_1303 + 116<i32>:word32], Mem1999[sp_1303 + 120<i32>:word32], Mem1999[sp_1303 + 136<i32>:word32], Mem1999[sp_1303 + 152<i32>:word32], Mem1999[sp_1303 + 156<i32>:word32], Mem1999[sp_1303 + 168<i32>:word32], Mem1999[sp_1303 + 184<i32>:word32], Mem1999[sp_1303 + 216<i32>:word32], Mem1999[sp_1303 + 220<i32>:word32], Mem1999[sp_1303 + 232<i32>:word32], Mem1999[sp_1303 + 264<i32>:word32], out s0_5809, out s1_1096, out a0_1085, out a1_5810, out a3_1014, out a4_1015, out a5_5811, out s2_5812, out s3_5813, out s4_1033, out s5_5814, out s6_5815, out s7_5816, out s9_1002, out s10_5817, out s11_5818, out mstatus)
l23073106:
	word32 a5_2029 = Mem1374[s0_1041 + 144<i32>:int32]
	branch a5_2029 == 0<32> l23073112
l2307310C:
	word32 t2_2060
	call a5_2029 (retsize: 0;)
		uses: a1:0xFFFFFFF2<32>,mstatus:mstatus_1591,ra:ra_1463,s0:Mem1374[a0_1393 + 16<i32>:word32],s1:s1_1408,s10:s10_1439,s11:s11_1572,s2:s2_1421,s3:s3_1481,s4:s4_1361,s5:s5_1499,s6:s6_1517,s7:s7_1535,s8:s8_1377,s9:s9_1553,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +002C:dwArg2C,Stack +0034:0x4201B26C<32>,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0074:dwArg74,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0094:dwArg94,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +FFFFFFB0:dwLoc50,Stack +FFFFFFB8:dwLoc48,Stack +FFFFFFD8:dwLoc28,Stack +FFFFFFE8:dwLoc18,Stack +FFFFFFF4:dwLoc0C,Stack +FFFFFFF8:dwLoc08,t2:t2_2060
		defs: a3:a3_2052,a4:a4_2047,a5:a5_2048,mstatus:mstatus_2061,ra:ra_2038,s0:s0_2034,s4:s4_2040,s7:s7_2043,sp:sp_2032,t2:t2_2060
l23073112:
	word32 s8_5792
	word32 s6_5790
	word32 s10_5793
	word32 s7_5791
	word32 s11_5794
	word32 s3_5788
	word32 s1_5785
	word32 s5_5789
	word32 a0_5786
	word32 s2_5787
	word32 a3_2079
	word32 a4_2080
	ra = tcp_pcb_remove(ra, s0_1041, a3_1014, a4_1015, a5_2029, s4_1033, s7_1001, mstatus, Mem1374[sp_1303 + 72<i32>:word32], Mem1374[sp_1303 + 88<i32>:word32], Mem1374[sp_1303 + 120<i32>:word32], Mem1374[sp_1303 + 132<i32>:word32], Mem1374[sp_1303 + 136<i32>:word32], Mem1374[sp_1303 + 152<i32>:word32], Mem1374[sp_1303 + 168<i32>:word32], Mem1374[sp_1303 + 184<i32>:word32], Mem1374[sp_1303 + 188<i32>:word32], Mem1374[sp_1303 + 200<i32>:word32], Mem1374[sp_1303 + 216<i32>:word32], Mem1374[sp_1303 + 248<i32>:word32], Mem1374[sp_1303 + 252<i32>:word32], Mem1374[sp_1303 + 264<i32>:word32], out s1_5785, out a0_5786, out a3_2079, out a4_2080, out s2_5787, out s3_5788, out s4_1033, out s5_5789, out s6_5790, out s7_5791, out s8_5792, out s9_1002, out s10_5793, out s11_5794, out mstatus)
	word32 a1_5795
	word32 a5_5797
	word32 a2_5796
	s1_1096 = tcp_free(s0_1041, a3_2079, a4_2080, mstatus, out a0_1085, out a1_5795, out a2_5796, out a3_1014, out a4_1015, out a5_5797)
l23072DC4:
	branch CONVERT(Mem354[s0_1041 + 42<i32>:uint16], uint16, word32) != 0<32> l23072DD0
l23072DCA:
	word32 s3_5692
	word32 s6_5694
	word32 s7_5695
	word32 s5_5693
	word32 s8_5696
	word32 a1_5688
	word32 a2_5689
	word32 a5_5690
	word32 s2_5691
	ra = tcp_send_empty_ack(ra, s0_1041, s0_1041, s7_1001, mstatus, dwArg08, dwArg18, dwArg38, s5, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, out s1_1096, out a0_1085, out a1_5688, out a2_5689, out a3_1014, out a4_1015, out a5_5690, out s2_5691, out s3_5692, out s4_1033, out s5_5693, out s6_5694, out s7_5695, out s8_5696, out s9_1002, out mstatus)
l23072DD0:
	Mem2152[s10_1133 + 154<i32>:word16] = SLICE(CONVERT(Mem354[s10_1133 + 154<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23072DDA:
	Mem2160[s1_1096 + 2320<i32>:word32] = 0<32>
	Mem2164[s9_1002:word32] = 0<32>
	branch a0_1085 == 0<32> l23072DF2
l23072DE8:
	word32 mstatus_5724
	word32 s5_5721
	word32 a4_5716
	word32 a7_5717
	word32 s3_5719
	word32 s4_5720
	word32 s6_5722
	word32 s8_5723
	word32 a3_5715
	word32 a2_5714
	word32 a1_5713
	word32 s0_5710
	word32 s2_5718
	word32 s1_5711
	word32 a0_5712
	word32 a5_2190
	pbuf_free(ra, a0_1085, a3_1014, a4_1015, s4_1033, mstatus, dwArgD8, out s0_5710, out s1_5711, out a0_5712, out a1_5713, out a2_5714, out a3_5715, out a4_5716, out a5_2190, out a7_5717, out s2_5718, out s3_5719, out s4_5720, out s5_5721, out s6_5722, out s8_5723, out mstatus_5724)
	Mem2208[a5_2190 + 4<i32>:word32] = 0<32>
l23072DF2:
	0<32> = dwArg010C
	return dwLoc4C
l23072C92:
	word32 a0_2225 = Mem252[0x420268F8<32>:int32]
l23072EF6:
	word32 a2_2296
	word32 a1_2290
	word32 a2_2264
	branch a0_2225 != 0<32> l23072E22
l23072E22:
	word32 a6_2228 = CONVERT(Mem252[a0_2225 + 8<i32>:byte], byte, word32)
	branch a6_2228 == 0<32> l23072E38
l23072E2A:
	branch a6_2228 != (CONVERT(Mem252[t4_256 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>) l23072EF4
l23072E38:
	branch CONVERT(Mem252[a0_2225 + 24<i32>:uint16], uint16, word32) != (CONVERT(Mem252[a3_1014 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[a3_1014:byte], byte, word32)) l23072EF4
l23072E4E:
	branch CONVERT(Mem252[a0_2225 + 22<i32>:uint16], uint16, word32) != (CONVERT(Mem252[a3_1014 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem252[a3_1014 + 2<i32>:byte], byte, word32)) l23072EF4
l23072E64:
	branch t6_259 != Mem252[a0_2225 + 4<i32>:int32] l23072EF4
l23072E6C:
	branch t5_260 != Mem252[a0_2225:int32] l23072EF4
l23072EF4:
	a0_2225 = Mem252[a0_2225 + 12<i32>:word32]
l23072E74:
	branch (a0_235 & 255<i32> & 4<i32>) != 0<32> l23072ED2
l23072E7A:
	a2_2264 = CONVERT(Mem252[0x4200F68A<32>:uint16], uint16, word32)
	branch (a0_235 & 255<i32> & 2<i32>) == 0<32> l23072EB2
l23072EB2:
	a4_120 = a0_235 & 255<i32> & 1<32>
	branch a4_120 == 0<32> l23072EC0
l23072EB6:
	Mem2268[Mem252[0x420268FC<32>:int32] + 32<i32>:word32] = a0_2225
l23072E84:
	word32 a7_2272 = Mem252[0x4200F674<32>:int32]
	a0_2225 = Mem252[(a0_235 & 255<i32>) + 36<i32>:word32]
	a4_120 = a7_2272 - (a0_235 & 255<i32>)
	branch a4_120 < 0<32> l23072EC0
l23072E92:
	a4_120 = a4_120 - CONVERT(Mem252[a0_2225 + 40<i32>:uint16], uint16, word32)
	branch a4_120 > 0<32> l23072EC0
l23072EC0:
	branch a2_2264 == 0<32> l23072ED2
l23072EC2:
	Mem2282[a0_2225 + 26<i32>:word16] = SLICE(CONVERT(Mem2279[a0_2225 + 26<i32>:uint16], uint16, word32) | 2<i32>, word16, 0)
l23072E9C:
	a1_2290 = Mem252[0x4200F664<32>:int32]
	a2_2296 = a2_2264 + a7_2272
l23072EF8:
	word32 t0_2298 = Mem252[0x42026900<32>:int32]
	s7_1001 = 0<32>
	word32 t6_2300 = 0<32>
	word32 a5_2301 = t0_2298
l23072F06:
	branch a5_2301 != 0<32> l23072F10
l23072F10:
	word32 t2_2304 = CONVERT(Mem252[a5_2301 + 8<i32>:byte], byte, word32)
	branch t2_2304 == 0<32> l23072F26
l23072F18:
	branch t2_2304 != (CONVERT(Mem252[t4_256 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>) l23072F4C
l23072F26:
	s0_2313 = CONVERT(Mem252[a3_1014 + 2<i32>:byte], byte, word32)
	branch CONVERT(Mem252[a5_2301 + 22<i32>:uint16], uint16, word32) != (CONVERT(Mem252[a3_1014 + 3<i32>:byte], byte, word32) << 8<i32> | s0_2313) l23072F4C
l23072F3C:
	word32 a6_2318 = Mem252[a5_2301:int32]
	branch t5_260 == a6_2318 l23072F52
l23072F52:
	s7_1001 = a5_2301
l23072F44:
	branch a6_2318 != 0<32> l23072F4C
l23072F48:
	s7_1001 = a5_2301
	t6_2300 = a0_2225
l23072F4C:
	a0_2225 = a5_2301
	a5_2301 = Mem252[a5_2301 + 12<i32>:word32]
l23072F08:
	branch s7_1001 == 0<32> l230735F8
l230735F8:
	word32 a5_5686
	branch (lwip_htons(CONVERT(Mem252[a3_1014 + 12<i32>:byte], byte, word32) | CONVERT(Mem252[a3_1014 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_5686) & 4<32>) != 0<32> l23072ED2
l23073616:
	word32 a0_2356 = CONVERT(Mem252[0x4200F68A<32>:uint16], uint16, word32)
	Mem2358[0x42026894<32>:word16] = SLICE(CONVERT(Mem252[0x42026894<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a2_2363 = Mem2358[0x4200F674<32>:int32]
	a1_2290 = Mem2358[0x4200F664<32>:int32]
	Mem2369[0x4202688A<32>:word16] = SLICE(CONVERT(Mem2358[0x4202688A<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	a2_2296 = a2_2363 + a0_2356
l23072F0C:
	a0_2225 = t6_2300
l23072F54:
	branch a0_2225 == 0<32> l23072FAC
l23072FAC:
	Mem2398[0x4202689A<32>:word16] = SLICE(CONVERT(Mem252[0x4202689A<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23072F56:
	word32 a5_2400 = Mem252[s7_1001 + 12<i32>:int32]
	Mem2405[0x42027900<32>:word32] = s7_1001
	Mem2406[a5_2400 + 12<i32>:word32] = a0_2225
	Mem2411[s7_1001 + 12<i32>:word32] = t0_2298
l23072F64:
	branch (a0_235 & 255<i32> & 4<i32>) != 0<32> l23072ED2
l23072F6A:
	branch (a0_235 & 255<i32> & 16<i32>) == 0<32> l23072FB8
l23072FB8:
	a4_120 = a0_235 & 255<i32> & 2<32>
	branch a4_120 == 0<32> l23072ED2
l23072FBC:
	word32 a3_5726
	word32 a5_5727
	word32 a1_5725
	word32 s1_2491
	word32 s4_2492
	word32 s8_2493
	word32 a0_2498
	word32 s10_2501
	word32 s11_2502
	word32 s3_2504
	word32 s5_2505
	word32 s6_2506
	word32 s9_2508
	word32 s2_2503
	word32 ra_2489 = tcp_alloc(ra, s1_123, CONVERT(Mem2421[s7_1001 + 21<i32>:byte], byte, word32), a1_135, a3_1014, a4_120, 0x42027000<32>, s4_73, s7_1001, mstatus, dwLoc48, s6, dwLoc28, dwLoc18, dwArg04, dwArg08, dwArg28, dwArg2C, dwArg38, s5, s3, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgB8, out s1_2491, out a0_2498, out a1_5725, out a3_5726, out a4_120, out a5_5727, out s2_2503, out s3_2504, out s4_2492, out s5_2505, out s6_2506, out s7_1001, out s8_2493, out s9_2508, out s10_2501, out s11_2502, out mstatus)
	branch a0_2498 != 0<32> l23072FE6
l23072FE6:
	word32 a4_2514 = Mem2421[s2_2503:int32]
	Mem2515[Mem2421[s4_2492 + 20<i32>:int32]:word32] = a0_2498
	Mem2517[Mem2515[s4_2492 + 16<i32>:int32] + 4<i32>:word32] = a0_2498
	Mem2519[a0_2498 + 22<i32>:word16] = SLICE(CONVERT(Mem2517[s7_1001 + 22<i32>:uint16], uint16, word32), word16, 0)
	word32 a3_2521 = CONVERT(Mem2519[a4_2514:byte], byte, word32)
	Mem2524[a0_2498 + 24<i32>:word16] = SLICE(CONVERT(Mem2519[a4_2514 + 1<i32>:byte], byte, word32) << 8<i32> | a3_2521, word16, 0)
	Mem2526[a0_2498 + 20<i32>:byte] = 3<8>
	word32 a5_2527 = Mem2526[s11_2502:int32]
	Mem2529[a5_2527 + 0x25<32>:word32] = a0_2498
	Mem2530[a5_2527 + 0x2D<32>:word32] = a0_2498
	word32 a0_2531 = tcp_next_iss(a0_2498)
	word32 a5_2534 = Mem2530[s11_2502:int32]
	Mem2535[a0_2531 + 88<i32>:word32] = a0_2498
	Mem2536[a0_2531 + 80<i32>:word32] = a0_2498
	Mem2538[a0_2531 + 68<i32>:word32] = a0_2498
	Mem2539[a0_2531 + 92<i32>:word32] = a0_2498
	Mem2540[a5_2534 + 0x53<32>:word32] = a0_2498
	word32 a5_2541 = Mem2540[s7_1001 + 16<i32>:int32]
	Mem2542[a0_2498 + 124<i32>:word32] = s7_1001
	Mem2543[a5_2541 + 16<i32>:word32] = a0_2498
	Mem2546[a0_2498 + 9<i32>:byte] = SLICE(CONVERT(Mem2543[s7_1001 + 9<i32>:byte], byte, word32) & 0xC<32>, byte, 0)
	Mem2548[a0_2498 + 8<i32>:byte] = SLICE(CONVERT(Mem2546[s7_1001 + 8<i32>:byte], byte, word32), byte, 0)
	word32 a5_2549 = Mem2548[s3_2504 + -1788<i32>:int32]
	Mem2550[s3_2504 + 2308<i32>:word32] = a0_2498
	Mem2551[a5_2549 + 12<i32>:word32] = a0_2498
	word32 a4_5732
	word32 s8_5733
	word32 a2_5730
	word32 a3_5731
	word32 s1_5728
	word32 a0_5729
	tcp_timer_needed(s1_2491, a3_2521, mstatus, dwLoc0C, out s1_5728, out a0_5729, out a2_5730, out a3_5731, out a4_5732, out s8_5733)
	Mem2565[0x4202790C<32>:byte] = 1<8>
	word32 s0_2566 = dwArg94
	branch CONVERT(Mem2565[0x42027000<32>:uint16], uint16, word32) == 0<32> l23073076
l2307306E:
	word32 s3_5748
	word32 s6_5751
	word32 s4_5749
	word32 s1_5745
	word32 s8_5752
	word32 s5_5750
	word32 a4_5747
	word32 a0_5746
	s0_2566 = tcp_parseopt.isra.0.part.1(dwArg94 + 50<i32>, dwArgD8, out s1_5745, out a0_5746, out a4_5747, out s2_2503, out s3_5748, out s4_5749, out s5_5750, out s6_5751, out s7_1001, out s8_5752)
l23073076:
	word32 a4_2588 = Mem2565[s2_2503:int32]
	word32 s2_2594 = CONVERT(Mem2565[s0_2566 + 50<i32>:uint16], uint16, word32)
	word32 a5_2596 = CONVERT(Mem2565[a4_2588 + 15<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem2565[a4_2588 + 14<i32>:byte], byte, word32)
	Mem2597[s0_2566 + 96<i32>:word16] = SLICE(a5_2596, word16, 0)
	Mem2598[s0_2566 + 98<i32>:word16] = SLICE(a5_2596, word16, 0)
	word32 a2_5734
	word32 a4_5736
	word32 a5_5737
	word32 a3_5735
	word32 a3_2611
	Mem2613[s0_2566 + 50<i32>:word16] = SLICE(tcp_eff_send_mss_netif(s2_2594, ip4_route(s0_2566 + 4<i32>, a5_2596, out a2_5734, out a3_5735, out a4_5736, out a5_5737), out a3_2611), word16, 0)
	word32 a1_5738
	word32 s8_5744
	word32 s2_5741
	word32 a4_5739
	word32 a5_5740
	word32 s6_5743
	word32 s5_5742
	word32 a0_2618
	word32 a3_2621
	word32 s0_2628
	word32 s3_2631
	word32 s4_2632
	ra = tcp_enqueue_flags(ra_2489, s0_2566, 0x12<32>, a3_2611, mstatus, s0, dwArg38, s5, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_2628, out s1_123, out a0_2618, out a1_5738, out a2_2264, out a3_2621, out a4_5739, out a5_5740, out s2_5741, out s3_2631, out s4_2632, out s5_5742, out s6_5743, out s8_5744, out mstatus)
	branch a0_2618 == 0<32> l230730C0
l230730C0:
	a0_2225 = s0_2628
l23072ECE:
	word32 s10_5783
	word32 s9_5782
	word32 s11_5784
	word32 s2_5775
	word32 s5_5778
	word32 s6_5779
	word32 s3_5776
	word32 a5_5774
	word32 s8_5781
	word32 s4_5777
	word32 s7_5780
	word32 a2_5772
	word32 a1_5771
	word32 a3_5773
	word32 s0_5768
	word32 a0_5770
	word32 s1_5769
	tcp_output(ra, s1_123, a0_2225, a2_2264, s7_1001, mstatus, dwArg08, dwArg18, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, out s0_5768, out s1_5769, out a0_5770, out a1_5771, out a2_5772, out a3_5773, out a4_120, out a5_5774, out s2_5775, out s3_5776, out s4_5777, out s5_5778, out s6_5779, out s7_5780, out s8_5781, out s9_5782, out s10_5783, out s11_5784, out mstatus)
l230730B6:
	word32 s10_5766
	word32 s11_5767
	word32 s2_5759
	word32 a5_5758
	word32 s3_5760
	word32 a3_5757
	word32 s6_5763
	word32 s7_5764
	word32 s9_5765
	word32 s4_5761
	word32 s5_5762
	word32 a1_5756
	word32 s1_5754
	word32 a0_5755
	word32 s0_5753
	tcp_abandon(ra, s1_123, s0_2628, a3_2621, s3_2631, s4_2632, s7_1001, mstatus, dwLoc50, 0x4200F688<32>, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg24, dwArg28, dwArg38, s5, s3, dwArg58, dwArg68, dwArg88, dwArg8C, dwArg98, dwArgB8, out s0_5753, out s1_5754, out a0_5755, out a1_5756, out a3_5757, out a4_120, out a5_5758, out s2_5759, out s3_5760, out s4_5761, out s5_5762, out s6_5763, out s7_5764, out s9_5765, out s10_5766, out s11_5767, out mstatus)
l23072FC8:
	Mem2723[s10_2501 + 160<i32>:word16] = SLICE(CONVERT(Mem2421[s10_2501 + 160<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a5_2724 = Mem2723[s7_1001 + 24<i32>:int32]
	branch a5_2724 == 0<32> l23072ED2
l23072FDA:
	word32 t2_2756
	call a5_2724 (retsize: 0;)
		uses: a0:Mem2723[s7_2507 + 16<i32>:int32],a1:0<32>,a2:0xFFFFFFFF<32>,mstatus:mstatus_2500,ra:ra_2489,s0:a0_2498,s1:s1_2491,s10:s10_2501,s11:s11_2502,s2:s2_2503,s3:s3_2504,s4:s4_2492,s5:s5_2505,s6:s6_2506,s7:s7_2507,s8:s8_2493,s9:s9_2508,Stack +0000:dwLoc50,Stack +0008:dwLoc48,Stack +0028:dwLoc28,Stack +0038:dwLoc18,Stack +0044:dwLoc0C,Stack +0048:dwLoc08,Stack +0054:dwArg04,Stack +0058:dwArg08,Stack +0068:dwArg18,Stack +006C:dwArg1C,Stack +0074:dwArg24,Stack +0078:dwArg28,Stack +007C:dwArg2C,Stack +0084:dwArg34,Stack +0088:dwArg38,Stack +00A8:dwArg58,Stack +00B8:dwArg68,Stack +00BC:dwArg6C,Stack +00C4:dwArg74,Stack +00C8:dwArg78,Stack +00CC:dwArg7C,Stack +00D8:dwArg88,Stack +00DC:dwArg8C,Stack +00E4:dwArg94,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +010C:dwArgBC,Stack +0118:dwArgC8,Stack +011C:dwArgCC,Stack +0128:dwArgD8,Stack +0138:dwArgE8,Stack +013C:dwArgEC,Stack +015C:dwArg010C,Stack +0178:dwArg0128,Stack +0198:dwArg0148,Stack +01B8:dwArg0168,Stack +01D8:dwArg0188,Stack +01F8:dwArg01A8,t2:t2_2756
		defs: a4:a4_2743,mstatus:mstatus_2757,t2:t2_2756
l23072F70:
	a2_2296 = Mem2421[0x4200F674<32>:int32] + CONVERT(Mem2421[0x4200F68A<32>:uint16], uint16, word32)
	a1_2290 = Mem2421[0x4200F664<32>:int32]
l23072EAC:
	word32 s8_5708
	word32 s9_5709
	word32 a3_5700
	word32 s5_5705
	word32 s3_5703
	word32 a5_5701
	word32 s4_5704
	word32 s6_5706
	word32 s7_5707
	word32 a0_5699
	word32 s1_5698
	word32 s0_5697
	word32 s2_5702
	tcp_rst(ra, s0_2313, a1_2290, a2_2296, s7_1001, mstatus, dwLoc08, dwArg08, dwArg28, dwArg38, s7, s5, dwArg68, dwArg78, dwArgA8, dwArgD8, out s0_5697, out s1_5698, out a0_5699, out a3_5700, out a4_120, out a5_5701, out s2_5702, out s3_5703, out s4_5704, out s5_5705, out s6_5706, out s7_5707, out s8_5708, out s9_5709, out mstatus)
l23072ABA:
	Mem2833[0x4202688C<32>:word16] = SLICE(CONVERT(Mem78[0x4202688C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23072A84:
	Mem2838[0x42026894<32>:word16] = SLICE(CONVERT(Mem40[0x42026894<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23072A4E:
	Mem2843[0x4202688E<32>:word16] = SLICE(CONVERT(Mem2840[0x4202688E<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23072A8E:
	Mem2848[0x4202688A<32>:word16] = SLICE(CONVERT(Mem2845[0x4202688A<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23072ED2:
	0<32> = dwArg010C
l23072EF0_thunk_pbuf_free:
	word32 s8_5674
	word32 a7_5668
	word32 s6_5673
	word32 s5_5672
	word32 mstatus_5675
	word32 s2_5669
	word32 s3_5670
	word32 a3_5665
	word32 s4_5671
	word32 a1_5663
	word32 s0_5661
	word32 a5_5667
	word32 a2_5664
	word32 a4_5666
	word32 a0_5662
	word32 s1_2886
	pbuf_free(dwLoc08, dwLoc4C, s2, a4_120, dwArg0168, mstatus, dwArg0128, out s0_5661, out s1_2886, out a0_5662, out a1_5663, out a2_5664, out a3_5665, out a4_5666, out a5_5667, out a7_5668, out s2_5669, out s3_5670, out s4_5671, out s5_5672, out s6_5673, out s8_5674, out mstatus_5675)
	return s1_2886
tcp_input_exit:


word32 tcp_trigger_input_pcb_close(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_close
// MayUse: 
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
tcp_trigger_input_pcb_close_entry:
l23073668:
	word32 a4_6 = CONVERT(Mem0[0x4200F670<32>:byte], byte, word32)
	Mem8[0x4200F670<32>:byte] = SLICE(a4_6 | 16<i32>, byte, 0)
	a5Out = 0x4200F670<32>
	return a4_6 | 16<i32>
tcp_trigger_input_pcb_close_exit:


word32 tcp_seg_add_chksum(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_split_unsent_seg
//      altcp_tcp_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a1 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
tcp_seg_add_chksum_entry:
l2307367E:
	word32 a0_9 = a0 + CONVERT(Mem0[a2:uint16], uint16, word32)
	word32 a5_10 = a0_9 >>u 0x10<u32>
	word32 a0_13 = CONVERT(SLICE(a0_9 + (a0_9 >>u 0x10<u32>), word16, 0), word16, word32)
	branch (a1 & 1<32>) == 0<32> l230736AA
l23073692:
	a4 = CONVERT(Mem0[a3:byte], byte, word32)
	Mem18[a3:byte] = SLICE(1<32> - a4, byte, 0)
	a5_10 = a0_13 << 8<u32>
	a0_13 = CONVERT(SLICE(a0_13 >>u 8<i32> | a0_13 << 8<u32>, word16, 0), word16, word32)
l230736AA:
	Mem26[a2:word16] = SLICE(a0_13, word16, 0)
	a4Out = a4
	a5Out = a5_10
	return a1 & 1<32>
tcp_seg_add_chksum_exit:


word32 tcp_create_segment(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_split_unsent_seg
//      tcp_send_fin
//      altcp_tcp_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_create_segment_entry:
l230736B0:
	word32 s1_112
	word32 a1_107
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 s0_103
	word32 s5_130 = a0
	word32 s2_125 = a1
	word32 s3_126 = a2
	word32 a0_31
	word32 a3_34
	word32 a4_35
	word32 a2_216
	word32 a5_217
	word32 s1_36 = memp_malloc(a4 << 2<u32>, 4<32>, a3, a4, mstatus, out a0_31, out a2_216, out a3_34, out a4_35, out a5_217)
	branch a0_31 != 0<32> l230736F4
l230736F4:
	Mem40[a0_31 + 13<i32>:byte] = SLICE(a4_35, byte, 0)
	Mem41[a0_31:word32] = 0<32>
	Mem42[a0_31 + 4<i32>:word32] = a1
	word32 a5_43 = CONVERT(Mem42[a1 + 8<i32>:uint16], uint16, word32)
	Mem45[a0_31 + 10<i32>:word16] = 0<16>
	Mem47[a0_31 + 8<i32>:word16] = SLICE(a5_43 - (s1_36 & 4<32>), word16, 0)
	Mem48[a0_31 + 12<i32>:byte] = 0<8>
	s1_112 = s1_36 & 4<32>
	word32 a3_54
	word32 a5_56
	word32 a2_218
	word32 a4_219
	branch pbuf_add_header(a1, 0x14<32>, out a1_107, out a2_218, out a3_54, out a4_219, out a5_56) == 0<32> l2307373A
l2307373A:
	word32 s0_57 = Mem48[a5_56 + 4<i32>:word32]
	word32 s2_58 = Mem48[a5_56 + 4<i32>:int32]
	Mem59[s0_57 + 16<i32>:word32] = s2_58
	word32 a5_225
	word32 a0_61 = lwip_htons(CONVERT(Mem59[a0 + 22<i32>:uint16], uint16, word32), out a5_225)
	Mem63[s2_58:byte] = SLICE(a0_61, byte, 0)
	Mem65[s2_58 + 1<i32>:byte] = SLICE(a0_61 >>u 8<i32>, byte, 0)
	word32 s2_67 = Mem65[s0_57 + 16<i32>:int32]
	word32 a5_226
	word32 a0_68 = lwip_htons(CONVERT(Mem65[a0 + 24<i32>:uint16], uint16, word32), out a5_226)
	Mem70[s2_67 + 2<i32>:byte] = SLICE(a0_68, byte, 0)
	Mem72[s2_67 + 3<i32>:byte] = SLICE(a0_68 >>u 8<i32>, byte, 0)
	word32 s2_73 = Mem72[s0_57 + 16<i32>:int32]
	word32 a5_227
	word32 a0_75 = lwip_htonl(a3, out a3_109, out a4_110, out a5_227)
	Mem80[s2_73 + 4<i32>:byte] = SLICE(a0_75, byte, 0)
	Mem81[s2_73 + 5<i32>:byte] = SLICE(a0_75 >>u 8<u32>, byte, 0)
	Mem84[s2_73 + 7<i32>:byte] = SLICE(a0_75 >>u 24<i32>, byte, 0)
	Mem86[s2_73 + 6<i32>:byte] = SLICE(a0_75 >>u 0x10<u32>, byte, 0)
	s2_125 = Mem86[s0_57 + 16<i32>:int32]
	word32 a0_91 = lwip_htons(((s1_36 & 4<32>) >>u 2<u32>) + 5<32> << 12<i32> | a2, out a5_111)
	Mem93[s2_125 + 12<i32>:byte] = SLICE(a0_91, byte, 0)
	Mem95[s2_125 + 13<i32>:byte] = SLICE(a0_91 >>u 8<i32>, byte, 0)
	s0_103 = Mem95[a5_111 + 16<i32>:word32]
	Mem97[a5_111 + 18<i32>:byte] = 0<8>
	Mem98[a5_111 + 19<i32>:byte] = 0<8>
l2307371E:
	word32 a4_101 = CONVERT(Mem48[0x42026898<32>:uint16], uint16, word32)
	Mem105[0x42026898<32>:word16] = SLICE(a4_101 + 1<32>, word16, 0)
	s0_103 = 0<32>
	word32 a0_228
	word32 a2_229
	s1_112 = tcp_seg_free(ra, a0_31, a3_54, a4_101 + 1<32>, a3, mstatus, dwArgD8, out a0_228, out a1_107, out a2_229, out a3_109, out a4_110, out a5_111)
l230736DA:
	word32 a0_220
	word32 a2_221
	word32 a7_222
	word32 s4_223
	word32 s8_224
	ra = pbuf_free(ra, a1, a3_34, a4_35, a3, mstatus, dwArgF8, out s0_103, out s1_112, out a0_220, out a1_107, out a2_221, out a3_109, out a4_110, out a5_111, out a7_222, out s2_125, out s3_126, out s4_223, out s5_130, out s6, out s8_224, out mstatus)
l230736E0:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_112
	a0Out = s0_103
	a1Out = a1_107
	a2Out = dwArg0100
	a3Out = a3_109
	a4Out = a4_110
	a5Out = a5_111
	s2Out = s2_125
	s3Out = s3_126
	s4Out = dwArg78
	s5Out = s5_130
	s6Out = s6
	s8Out = s5
	mstatusOut = mstatus
	return ra
tcp_create_segment_exit:


word32 tcp_output_alloc_header_common.constprop.6(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_output_alloc_header.constprop.5
//      tcp_rst
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_output_alloc_header_common.constprop.6_entry:
l230737BA:
	word32 a0_39
	word32 s0_44
	word32 s3_51
	word32 s4_52
	word32 mstatus_55
	word32 s5_57
	word32 s6_58
	word32 a1_188
	word32 a2_189
	word32 a7_190
	word32 s2_191
	word32 s8_192
	word32 s1_167
	word32 a5_107
	word32 a4_162
	word32 a3_161
	word32 ra_56 = pbuf_alloc(ra, s0, a2, 162<i32>, CONVERT(SLICE(a1 + 0x14<32>, word16, 0), word16, word32), 640<i32>, a3, a4, mstatus, dwLoc2C, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_44, out s1_167, out a0_39, out a1_188, out a2_189, out a3_161, out a4_162, out a5_107, out a7_190, out s2_191, out s3_51, out s4_52, out s5_57, out s6_58, out s8_192, out mstatus_55)
	branch a0_39 == 0<32> l23073880
l230737EE:
	word32 a5_193
	word32 a0_68 = lwip_htons(a3_161, out a5_193)
	Mem70[s0_44:byte] = SLICE(a0_68, byte, 0)
	Mem72[s0_44 + 1<i32>:byte] = SLICE(a0_68 >>u 8<i32>, byte, 0)
	word32 a5_194
	word32 a0_74 = lwip_htons(s6_58, out a5_194)
	Mem77[s0_44 + 2<i32>:byte] = SLICE(a0_74, byte, 0)
	Mem78[s0_44 + 4<i32>:byte] = SLICE(s1_167, byte, 0)
	Mem80[s0_44 + 5<i32>:byte] = SLICE(s1_167 >>u 8<u32>, byte, 0)
	Mem83[s0_44 + 3<i32>:byte] = SLICE(a0_74 >>u 8<i32>, byte, 0)
	Mem84[s0_44 + 6<i32>:byte] = SLICE(s1_167 >>u 0x10<u32>, byte, 0)
	Mem85[s0_44 + 7<i32>:byte] = SLICE(s1_167 >>u 24<i32>, byte, 0)
	word32 a5_195
	word32 a0_87 = lwip_htonl(s5_57, out a3_161, out a4_162, out a5_195)
	Mem92[s0_44 + 8<i32>:byte] = SLICE(a0_87, byte, 0)
	Mem93[s0_44 + 9<i32>:byte] = SLICE(a0_87 >>u 8<u32>, byte, 0)
	Mem96[s0_44 + 11<i32>:byte] = SLICE(a0_87 >>u 24<i32>, byte, 0)
	Mem98[s0_44 + 10<i32>:byte] = SLICE(a0_87 >>u 0x10<u32>, byte, 0)
	word32 a5_196
	word32 a0_100 = lwip_htons(s4_52 | 0x5000000<32>, out a5_196)
	Mem102[s0_44 + 12<i32>:byte] = SLICE(a0_100, byte, 0)
	Mem104[s0_44 + 13<i32>:byte] = SLICE(a0_100 >>u 8<i32>, byte, 0)
	word32 a0_106 = lwip_htons(s3_51, out a5_107)
	Mem108[s0_44 + 14<i32>:byte] = SLICE(a0_106, byte, 0)
	Mem110[s0_44 + 15<i32>:byte] = SLICE(a0_106 >>u 8<i32>, byte, 0)
	Mem111[s0_44 + 16<i32>:byte] = 0<8>
	Mem112[s0_44 + 17<i32>:byte] = 0<8>
	Mem113[s0_44 + 18<i32>:byte] = 0<8>
	Mem114[s0_44 + 19<i32>:byte] = 0<8>
	s1_167 = s1_167 >>u 24<i32>
l23073880:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_167
	a3Out = a3_161
	a4Out = a4_162
	a5Out = a5_107
	s2Out = a0_39
	s3Out = s3_51
	s4Out = dwArg78
	s5Out = s5_57
	s6Out = s6_58
	s8Out = s5
	mstatusOut = mstatus_55
	return ra_56
tcp_output_alloc_header_common.constprop.6_exit:


word32 tcp_output_alloc_header.constprop.5(word32 ra, word32 a0, word32 a1, word32 a2, word32 mstatus, word32 dwArg04, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_output
//      tcp_keepalive
//      tcp_zero_window_probe
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_output_alloc_header.constprop.5_entry:
l23073896:
	word32 a0_13 = Mem7[a0 + 36<i32>:word32]
	word32 a3_20
	word32 mstatus_25
	word32 s0_27
	word32 s1_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s8_34
	word32 a4_21
	word32 a5_22
	word32 ra_26 = tcp_output_alloc_header_common.constprop.6(ra, a0, a1, a2, CONVERT(Mem7[a0 + 22<i32>:uint16], uint16, word32), CONVERT(Mem7[a0 + 24<i32>:uint16], uint16, word32), mstatus, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_27, out s1_28, out a3_20, out a4_21, out a5_22, out s2_29, out s3_30, out s4_31, out s5_32, out s6_33, out s8_34, out mstatus_25)
	branch a0_13 == 0<32> l230738BE
l230738B4:
	a4_21 = CONVERT(Mem7[s0_27 + 42<i32>:uint16], uint16, word32)
	a5_22 = a5_22 + a4_21
	Mem45[a5_22 + 44<i32>:word32] = Mem7[a5_22 + 36<i32>:word32]
l230738BE:
	s1Out = s1_28
	a0Out = a0_13
	a3Out = a3_20
	a4Out = a4_21
	a5Out = a5_22
	s2Out = s2_29
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s8Out = s8_34
	mstatusOut = mstatus_25
	return ra_26
tcp_output_alloc_header.constprop.5_exit:


word32 tcp_output_control_segment(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 s6, word32 s7, word32 mstatus, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_rst
//      tcp_output
//      tcp_keepalive
//      tcp_zero_window_probe
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s6:[0..31] s7:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_output_control_segment_entry:
l230738C6:
	word32 a3_110
	word32 a4_111
	word32 a0_30
	word32 s0_116 = a1
	word32 s4_120 = a2
	branch a0 == 0<32> l23073950
l230738DE:
	word32 a0_24 = CONVERT(Mem15[a0 + 8<i32>:byte], byte, word32)
	branch a0_24 == 0<32> l23073950
l23073950:
	word32 a5_248
	word32 a2_247
	a0_30 = ip4_route(a2, a5, out a2_247, out a3_110, out a4_111, out a5_248)
l230738E4:
	word32 a5_249
	a0_30 = netif_get_by_index(a0_24, out a4_111, out a5_249)
	a3_110 = a3
l230738E8:
	branch a0_30 == 0<32> l23073938
l230738EE:
	word32 a4_106
	word32 a3_105
	word32 a0_54
	word32 a6_60
	word32 s1_62
	word32 s2_63
	word32 s3_64
	word32 s4_65
	word32 s5_66
	word32 a2_256
	word32 a4_258
	word32 a3_257
	word32 s0_61 = ip_chksum_pseudo(a1, 6<32>, CONVERT(Mem41[a1 + 8<i32>:uint16], uint16, word32), a2, a3, out s1_62, out a0_54, out a2_256, out a3_257, out a4_258, out a6_60, out s2_63, out s3_64, out s4_65, out s5_66)
	Mem70[s3_64 + 16<i32>:byte] = SLICE(a0_54, byte, 0)
	Mem72[s3_64 + 17<i32>:byte] = SLICE(a0_54 >>u 8<i32>, byte, 0)
	branch s1_62 == 0<32> l23073958
l23073958:
	a4_106 = 0<32>
	a3_105 = 255<i32>
l23073910:
	a3_105 = CONVERT(Mem72[s1_62 + 11<i32>:byte], byte, word32)
	a4_106 = CONVERT(Mem72[s1_62 + 10<i32>:byte], byte, word32)
l23073918:
	Mem87[0x42026884<32>:word16] = SLICE(CONVERT(Mem72[0x42026884<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s1_259
	word32 a0_260
	word32 a1_261
	word32 a5_262
	word32 a7_263
	word32 s2_264
	word32 s3_265
	word32 s5_266
	word32 s6_267
	word32 s8_268
	ra = ip4_output_if(ra, s0_61, s1_62, s0_61, s4_65, s2_63, a3_105, a4_106, 6<32>, a6_60, s4_65, s5_66, s6, s7, out s0_116, out s1_259, out a0_260, out a1_261, out a3_110, out a4_111, out a5_262, out a7_263, out s2_264, out s3_265, out s4_120, out s5_266, out s6_267, out s7, out s8_268, out s9)
l23073938:
	word32 s0_250
	word32 a1_252
	word32 a0_251
	word32 a7_254
	word32 a2_253
	word32 s8_255
	word32 a3_156
	word32 a4_157
	word32 a5_158
	word32 s1_159
	word32 s2_160
	word32 s3_161
	word32 s4_164
	word32 s5_165
	word32 s6_166
	word32 mstatus_173
	word32 ra_174 = pbuf_free(ra, s0_116, a3_110, a4_111, s4_120, mstatus, dwArgF8, out s0_250, out s1_159, out a0_251, out a1_252, out a2_253, out a3_156, out a4_157, out a5_158, out a7_254, out s2_160, out s3_161, out s4_164, out s5_165, out s6_166, out s8_255, out mstatus_173)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_159
	a0Out = s3_161
	a3Out = a3_156
	a4Out = a4_157
	a5Out = a5_158
	s2Out = s2_160
	s3Out = s3_161
	s4Out = s4_164
	s5Out = s5_165
	s6Out = s6_166
	s7Out = s7
	s8Out = dwArg58
	s9Out = s9
	mstatusOut = mstatus_173
	return ra_174
tcp_output_control_segment_exit:


word32 tcp_write(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg19, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_write
//      altcp_tcp_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..15] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0019:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a1 a2 a3 a5 mstatus ra s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_write_entry:
l23073960:
	word32 s2_30 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l230739D4
l23073980:
	word32 a5_32 = CONVERT(Mem29[a0 + 98<i32>:uint16], uint16, word32)
	word32 a4_33 = CONVERT(Mem29[a0 + 50<i32>:uint16], uint16, word32)
	a5 = a5_32 >>u 1<i32>
	word32 a7_35 = a5_32 >>u 1<i32>
	branch a4_33 >=u a5_32 >>u 1<i32> l23073992
l23073990:
	a7_35 = a4_33
l23073992:
	word32 s8_38 = a7_35 << 0x10<u32>
	word32 s8_162 = s8_38 >>u 0x10<u32>
	branch s8_38 >>u 0x10<u32> != 0<32> l230739A0
l2307399E:
	s8_162 = a4_33
l230739A0:
	s2_30 = 0xFFFFFFF0<32>
	branch a1 == 0<32> l230739D4
l230739A4:
	a5 = CONVERT(Mem29[a0 + 20<i32>:byte], byte, word32)
	word32 a4_101 = 7<32>
	branch a5 == 7<32> l230739BC
l230739AE:
	a5 = a5 + 0xFFFFFFFE<32> & 255<i32>
	a4_101 = 2<32>
	s2_30 = 0xFFFFFFF5<32>
	branch a5 >u 2<32> l230739D4
l230739BC:
	branch a2 == 0<32> l23073A12
l230739BE:
	branch CONVERT(Mem29[a0 + 100<i32>:uint16], uint16, word32) >=u a2 l230739F4
l230739F4:
	a4_101 = CONVERT(Mem29[a0 + 102<i32>:uint16], uint16, word32)
	a5 = 0xF<32>
	branch a4_101 <=u 0xF<32> l23073A12
l23073A12:
	word32 s1_114
	word32 s11_356
	word32 s2_106
	word32 a0_70 = Mem29[s1 + 108<i32>:word32]
	word32 s5_270 = CONVERT(Mem29[a0_70 + 102<i32>:uint16], uint16, word32)
	s1_114 = s1
	branch s1 == 0<32> l23073C00
l23073C00:
	s11_356 = 0<32>
	s7 = 0<32>
	s2_106 = 0<32>
	s1_114 = s1
l23073A1C:
	s11_356 = s1_1179
	s1_114 = Mem29[s1_1179:word32]
	s1_1179 = s1_114
	branch s1_114 != 0<32> l23073A1C
l23073A22:
	s7 = CONVERT(Mem29[a0_70 + 104<i32>:uint16], uint16, word32)
	word32 t1_81 = CONVERT(Mem29[s1_1179 + 13<i32>:byte], byte, word32)
	a4_101 = CONVERT(Mem29[s1_1179 + 8<i32>:uint16], uint16, word32)
	s2_106 = 0<32>
	branch s7 == 0<32> l23073A72
l23073A34:
	word32 a4_91 = s8_162 - a4_101 - (t1_81 << 2<i32> & 4<i32>)
	word32 t1_92 = s7
	branch a2 >=u s7 l23073A4A
l23073A48:
	t1_92 = a2
l23073A4A:
	word32 s2_103 = a4_91
	a4_101 = CONVERT(SLICE(a4_91, word16, 0), word16, word32)
	branch CONVERT(SLICE(t1_92, word16, 0), word16, word32) >=u a4_101 l23073A5E
l23073A5C:
	s2_103 = t1_92
l23073A5E:
	word32 s2_105 = s2_103 << 16<i32>
	s2_106 = s2_105 >>u 0x10<u32>
	s7 = CONVERT(SLICE(s7 - (s2_105 >>u 0x10<u32>), word16, 0), word16, word32)
	s1_114 = s1_1179
l23073A72:
	word16 wLoc5C_894 = SLICE(a3, word16, 0)
	s3 = a2
	word32 s0_147 = a0_70
	word32 s10_149 = s2_106
	word32 s4_150 = 0<32>
	word32 s9_151 = 0<32>
	word16 wLoc5A_577 = SLICE(s8_162, word16, 0)
l23073B7C:
	branch s10_149 <u s3 l23073A86
l23073A86:
	word32 a3_158 = s3 - s10_149
	word32 a4_159 = a3_158
	word32 a3_161 = CONVERT(SLICE(a3_158, word16, 0), word16, word32)
	word32 dwLoc5C_592 = SEQ(wLoc5A_577, wLoc5C_894)
	branch s8_162 >=u a3_161 l23073A98
l23073A94:
	a4_159 = CONVERT(wLoc5A_577, word16, word32)
l23073A98:
	word32 a0_185
	word32 a4_188
	word32 a5_189
	word32 s5_203
	word32 s6_204
	word32 s8_1160
	word32 s1_1156
	word32 a2_1157
	word32 a7_1158
	word32 s2_1159
	word32 a3_187
	ra = pbuf_alloc(ra, s0_147, s1_114, 182<i32>, s8_162, 640<i32>, a3_161, a4_159, mstatus, dwLoc5C_592, dwLoc1C, s1, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s0_147, out s1_1156, out a0_185, out a1, out a2_1157, out a3_187, out a4_188, out a5_189, out a7_1158, out s2_1159, out s3, out s4_150, out s5_203, out s6_204, out s8_1160, out mstatus)
	s6 = s6_204 >>u 0x10<u32>
	branch a0_185 == 0<32> l23073B0C
l23073ABC:
	0<32> = dwArg84
	word32 a6_213 = CONVERT(Mem175[a0_185 + 10<i32>:uint16], uint16, word32)
	Mem214[a0_185 + 8<i32>:word16] = SLICE(a4_188, word16, 0)
	Mem215[a0_185 + 10<i32>:word16] = SLICE(a4_188, word16, 0)
	word32 a0_222
	word32 a2_1161
	word32 a4_1162
	word32 s1_230 = lwip_chksum_copy(Mem215[a0_185 + 4<i32>:word32], a5_189 + s10_149, s6_204 >>u 0x10<u32>, out a0_222, out a2_1161, out a4_1162)
	word32 a4_244
	word32 a5_1163
	tcp_seg_add_chksum(a0_222, s6_204 >>u 0x10<u32>, fp + -66<i32>, fp + -67<i32>, out a4_244, out a5_1163)
	s7 = CONVERT(SLICE(a6_213 - (s6_204 >>u 0x10<u32>), word16, 0), word16, word32)
	branch CONVERT(SLICE(s5_203 + pbuf_clen(s1_230), word16, 0), word16, word32) <=u 0x10<32> l23073B36
l23073B36:
	word32 a0_259
	word32 a2_1177
	word32 s1_1176
	word32 a4_1178
	ra = tcp_create_segment(ra, dwArg19, s1_230, 0<32>, fp + -67<i32> + s10_149, 0<32>, mstatus, dwArg78, dwArg98, dwArgC8, out s0_147, out s1_1176, out a0_259, out a1, out a2_1177, out a3_187, out a4_1178, out a5, out s2_106, out s3, out s4_150, out s5_270, out s6, out s8_162, out mstatus)
	s1_114 = a0_259
	branch a0_259 == 0<32> l23073B0C
l23073B4A:
	Mem286[a0_259 + 10<i32>:word16] = 0<16>
	Mem288[a0_259 + 12<i32>:byte] = 0<8>
	word32 a4_289 = CONVERT(Mem288[a0_259 + 13<i32>:byte], byte, word32)
	Mem291[a0_259 + 13<i32>:byte] = SLICE(a4_289 | 4<i32>, byte, 0)
	a4_101 = a4_289 | 4<i32>
	branch s4_150 == 0<32> l23073BFC
l23073BFC:
	s4_150 = a0_259
l23073B6A:
	Mem295[s9_151:word32] = a0_259
l23073B6E:
	s10_149 = CONVERT(SLICE(s10_149 + s6, word16, 0), word16, word32)
	s9_151 = a0_259
l23073B06:
	word32 a2_1166
	word32 s1_1164
	word32 a4_1167
	word32 s8_1172
	word32 a0_1165
	word32 a5_1168
	word32 a7_1169
	word32 s2_1170
	word32 s5_1171
	ra = pbuf_free(ra, s1_230, fp + -67<i32>, a4_244, s4_150, mstatus, dwArgC8, out s0_147, out s1_1164, out a0_1165, out a1, out a2_1166, out a3_187, out a4_1167, out a5_1168, out a7_1169, out s2_1170, out s3, out s4_150, out s5_1171, out s6, out s8_1172, out mstatus)
l23073B0C:
	Mem333[s0_147 + 26<i32>:word16] = SLICE(CONVERT(Mem330[s0_147 + 26<i32>:uint16], uint16, word32) | 128<i32>, word16, 0)
	word32 a4_336 = CONVERT(Mem333[0x42026890<32>:uint16], uint16, word32)
	Mem338[0x42026890<32>:word16] = SLICE(a4_336 + 1<32>, word16, 0)
	a5 = 0x420267F0<32>
	branch s4_150 == 0<32> l230739D2
l23073B2E:
	word32 a0_1173
	word32 a4_1175
	word32 a3_1174
	tcp_segs_free(ra, s0_147, s4_150, a3_187, a4_336 + 1<32>, s4_150, mstatus, dwArg98, out a0_1173, out a1, out a3_1174, out a4_1175, out a5)
l23073B80:
	branch s2_106 == 0<32> l23073B9E
l23073B84:
	word32 s10_359 = Mem164[s11_356 + 4<i32>:int32]
	s6 = s11_356 + 12<i32>
	word32 s9_361 = s11_356 + 10<i32>
l23073B90:
	branch s10_359 != 0<32> l23073C08
l23073C08:
	Mem367[s10_359 + 8<i32>:word16] = SLICE(CONVERT(Mem363[s10_359 + 8<i32>:uint16], uint16, word32) + s2_106, word16, 0)
	branch Mem367[s10_359:int32] != 0<32> l23073C4A
l23073C18:
	word32 a4_369 = CONVERT(Mem367[s10_359 + 10<i32>:uint16], uint16, word32)
	word32 a0_370 = Mem367[s10_359 + 4<i32>:int32]
	0<32> = dwArg04
	word32 a0_375
	word32 a2_1153
	word32 a4_1154
	s1_114 = lwip_chksum_copy(a0_370 + a4_369, a1, s2_106, out a0_375, out a2_1153, out a4_1154)
	word32 a4_1155
	a1 = tcp_seg_add_chksum(a0_375, s2_106, s9_361, s6, out a4_1155, out a5)
	Mem403[s11_356 + 13<i32>:byte] = SLICE(CONVERT(Mem367[s11_356 + 13<i32>:byte], byte, word32) | 4<i32>, byte, 0)
	Mem406[s10_359 + 10<i32>:word16] = SLICE(CONVERT(Mem403[s10_359 + 10<i32>:uint16], uint16, word32) + s2_106, word16, 0)
l23073C4A:
	s10_359 = Mem408[s10_359:int32]
l23073B94:
	a4_101 = CONVERT(Mem363[s11_356 + 8<i32>:uint16], uint16, word32)
	Mem412[s11_356 + 8<i32>:word16] = SLICE(s2_106 + a4_101, word16, 0)
l23073B9E:
	Mem422[s0_147 + 104<i32>:word16] = SLICE(s7, word16, 0)
	branch s11_356 != 0<32> l23073C50
l23073C50:
	Mem429[s11_356:word32] = s4_150
l23073BA6:
	Mem430[s0_147 + 108<i32>:word32] = s4_150
l23073BAA:
	word32 s0_444 = Mem443[a5 + 92<i32>:word32]
	word32 a2_445 = CONVERT(Mem443[s0_444 + 100<i32>:uint16], uint16, word32)
	Mem456[s0_444 + 102<i32>:word16] = SLICE(s5_270, word16, 0)
	a5 = a5 + s3
	Mem463[a5 + 92<i32>:word32] = s0_444
	s3 = a2_445 - s3
	Mem464[s0_444 + 100<i32>:word16] = SLICE(s3, word16, 0)
	s2_30 = 0<32>
	branch s1_114 == 0<32> l230739D4
l23073BC6:
	branch a5 == 0<32> l230739D4
l23073BCC:
	s7 = a4_101 & 2<i32>
	branch s7 != 0<32> l230739D4
l23073BD6:
	word32 a0_493 = CONVERT(SLICE(lwip_htons(8<32>, out a5) | (CONVERT(Mem464[a5 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem464[a5 + 12<i32>:byte], byte, word32)), word16, 0), word16, word32)
	Mem494[a5 + 12<i32>:byte] = SLICE(a0_493, byte, 0)
	Mem496[a5 + 13<i32>:byte] = SLICE(a0_493 >>u 8<i32>, byte, 0)
l230739FE:
	Mem501[0x42026890<32>:word16] = SLICE(CONVERT(Mem29[0x42026890<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l230739C6:
	word32 a5_504 = CONVERT(Mem503[a0 + 26<i32>:uint16], uint16, word32)
	Mem506[a0 + 26<i32>:word16] = SLICE(a5_504 | 128<i32>, word16, 0)
	a5 = a5_504 | 128<i32>
l230739D2:
	s2_30 = 0xFFFFFFFF<32>
l230739D4:
	a0Out = s2_30
	a1Out = a1
	a2Out = dwArg011C
	a3Out = dwArg08
	a5Out = a5
	s2Out = s2_30
	s3Out = s3
	s4Out = dwArgDC
	s5Out = s4
	s6Out = s6
	s7Out = s7
	s8Out = dwArgBC
	mstatusOut = mstatus
	return dwArg68
tcp_write_exit:


void tcp_split_unsent_seg(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 s5, word32 s8, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s5:[0..31] s8:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_split_unsent_seg_entry:
l23073C56:
	branch s0 != 0<32> l23073C7C
l23073C7C:
	branch a1 == 0<32> l23073C8A
l23073C80:
	word32 s6_29 = CONVERT(Mem26[s0 + 8<i32>:uint16], uint16, word32)
	branch a1 <u s6_29 l23073CA4
l23073CA4:
	word32 s7_36 = CONVERT(SLICE(s6_29 - a1, word16, 0), word16, word32)
	word32 a0_47
	word32 s1_53
	word32 s3_59
	word32 a1_649
	word32 a2_650
	word32 a4_651
	word32 s0_648
	word32 a5_652
	word32 a7_653
	word32 s2_654
	word32 s5_655
	word32 s6_656
	word32 s8_657
	word32 mstatus_197
	word32 a3_183
	word32 s4_205
	word32 ra_198 = pbuf_alloc(ra, s0, a1, 182<i32>, CONVERT(SLICE(s7_36 + ((CONVERT(Mem26[s0 + 13<i32>:byte], byte, word32) & 251<i32>) << 2<u32> & 4<i32>), word16, 0), word16, word32), 640<i32>, a3, a4, mstatus, dwLoc4C, dwLoc0C, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_648, out s1_53, out a0_47, out a1_649, out a2_650, out a3_183, out a4_651, out a5_652, out a7_653, out s2_654, out s3_59, out s4_205, out s5_655, out s6_656, out s8_657, out mstatus_197)
	word32 s5_191 = a0_47
	branch a0_47 == 0<32> l23073EB8
l23073CDC:
	word32 a0_83
	word32 s1_90
	word32 s2_91
	word32 a4_94
	word32 s3_97
	word32 a1_658
	word32 a2_659
	word32 a5_660
	word32 s8_661
	pbuf_copy_partial(a0_47, Mem26[a0_47 + 4<i32>:int32] + s3_59, s7_36, CONVERT(SLICE(CONVERT(Mem26[a0_47 + 8<i32>:uint16] - Mem26[Mem26[a0_47 + 4<i32>:word32] + 8<i32>:uint16], uint16, uint16) + s1_53, word16, 0), word16, word32), out s1_90, out a0_83, out a1_658, out a2_659, out a3_183, out a4_94, out a5_660, out s2_91, out s3_97, out s4_205, out s8_661)
	branch a0_83 != s7_36 l23073EB8
l23073D00:
	word32 s3_132
	word32 a5_121
	word32 a4_122
	word32 a2_662
	word32 a4_664
	word32 a5_665
	word32 a3_663
	tcp_seg_add_chksum(CONVERT(SLICE(~inet_chksum(Mem26[a0_47 + 4<i32>:int32] + s3_97, a0_83, a4_94, out a2_662, out a3_663, out a4_664, out a5_665), word16, 0), word16, word32), a0_83, fp + -50<i32>, fp + -51<i32>, out a4_122, out a5_121)
	word32 a5_666
	word32 a0_128 = lwip_htons(CONVERT(Mem26[a5_121 + 12<i32>:byte], byte, word32) | CONVERT(Mem26[a5_121 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_666)
	word32 a2_131 = a0_128 & 255<i32> & 8<i32>
	branch a2_131 != 0<32> l23073E78
l23073E78:
	s3_132 = a0_128 & 255<i32> & 55<i32>
	a2_131 = 8<32>
l23073D40:
	s3_132 = a0_128 & 255<i32> & 63<i32>
l23073D44:
	branch (s3_132 & 1<i32>) == 0<32> l23073D52
l23073D4A:
	a2_131 = a2_131 | 1<i32>
l23073D52:
	word32 a0_180
	word32 a4_184
	word32 s1_187
	word32 s2_188
	word32 s3_189
	word32 s6_199
	word32 a3_667
	word32 a4_668
	word32 s0_670
	word32 a5_669
	word32 a1_671
	word32 a2_672
	word32 a5_673
	word32 s4_674
	word32 s8_675
	ra_198 = tcp_create_segment(ra_198, s2_91, a0_47, a2_131, s1_90 + lwip_htonl(CONVERT(Mem148[a4_122 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem148[a4_122 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem148[a4_122 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem148[a4_122 + 4<i32>:byte], byte, word32))), out a3_667, out a4_668, out a5_669), s4_205, mstatus_197, dwArg88, dwArgA8, dwArgD8, out s0_670, out s1_187, out a0_180, out a1_671, out a2_672, out a3_183, out a4_184, out a5_673, out s2_188, out s3_189, out s4_674, out s5_191, out s6_199, out s8_675, out mstatus_197)
	s4_205 = a0_180
	branch a0_180 == 0<32> l23073EB8
l23073EB8:
	word32 a4_209 = CONVERT(Mem208[0x42026890<32>:uint16], uint16, word32)
	Mem211[0x42026890<32>:word16] = SLICE(a4_209 + 1<32>, word16, 0)
	branch s5_191 == 0<32> l23073C78
l23073ECE:
	word32 s0_689
	word32 s1_690
	word32 a0_691
	word32 a1_692
	word32 a4_695
	word32 a2_693
	word32 a7_697
	word32 a3_694
	word32 s3_699
	word32 a5_696
	word32 s2_698
	word32 s4_700
	word32 s5_701
	word32 s6_702
	word32 s8_703
	word32 mstatus_704
	pbuf_free(ra_198, s5_191, a3_183, a4_209 + 1<32>, s4_205, mstatus_197, dwArgD8, out s0_689, out s1_690, out a0_691, out a1_692, out a2_693, out a3_694, out a4_695, out a5_696, out a7_697, out s2_698, out s3_699, out s4_700, out s5_701, out s6_702, out s8_703, out mstatus_704)
l23073D8C:
	Mem247[a0_180 + 10<i32>:word16] = 0<16>
	Mem250[a0_180 + 12<i32>:byte] = 0<8>
	Mem253[a0_180 + 13<i32>:byte] = SLICE(CONVERT(Mem250[a0_180 + 13<i32>:byte], byte, word32) | 4<i32>, byte, 0)
	word32 a0_258 = CONVERT(Mem253[s2_188 + 102<i32>:uint16], uint16, word32) - pbuf_clen(a0_180)
	Mem259[s2_188 + 102<i32>:word16] = SLICE(a0_258, word16, 0)
	word32 s0_260 = Mem259[a0_258 + 4<i32>:word32]
	word32 s1_269
	word32 s2_277
	word32 s3_278
	word32 s4_279
	word32 s8_681
	word32 mstatus_682
	word32 s5_679
	word32 s6_680
	word32 a3_677
	word32 a5_678
	word32 a2_676
	word32 a4_268
	pbuf_realloc(ra_198, s0_260, a0_258, CONVERT(CONVERT(Mem259[a0_258 + 8<i32>:uint16] + SLICE(s1_187 - s6_199, word16, 0), uint16, uint16), uint16, word32), a3_183, a4_184, s2_188, s3_189, a0_180, mstatus_197, s8, s5, dwArg78, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArg0118, out s1_269, out a2_676, out a3_677, out a4_268, out a5_678, out s2_277, out s3_278, out s4_279, out s5_679, out s6_680, out s8_681, out mstatus_682)
	Mem292[Mem259[a4_268 + 16<i32>:word32] + 8<i32>:word16] = SLICE(s1_269 + CONVERT(Mem259[s0_260 + 8<i32>:uint16], uint16, word32), word16, 0)
	word32 s1_296 = CONVERT(Mem292[a4_268 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem292[a4_268 + 12<i32>:byte], byte, word32)
	word32 a5_683
	word32 a0_298 = lwip_htons(s3_278, out a5_683)
	word32 a5_303 = CONVERT(SLICE(s1_296 | a0_298, word16, 0), word16, word32)
	Mem304[a4_268 + 12<i32>:byte] = SLICE(a5_303, byte, 0)
	Mem306[a4_268 + 13<i32>:byte] = SLICE(a5_303 >>u 8<i32>, byte, 0)
	word32 s0_307 = Mem306[a0_298 + 4<i32>:word32]
	Mem312[s2_277 + 102<i32>:word16] = SLICE(pbuf_clen(a0_298) + CONVERT(Mem306[s2_277 + 102<i32>:uint16], uint16, word32), word16, 0)
	word32 s3_313 = Mem312[s0_307 + 4<i32>:int32]
	Mem314[s0_307 + 10<i32>:word16] = 0<16>
	Mem315[s0_307 + 12<i32>:byte] = 0<8>
	word32 s1_320 = CONVERT(CONVERT(Mem315[s3_313 + 8<i32>:uint16] - Mem315[s0_307 + 8<i32>:uint16], uint16, uint16), uint16, word32)
l23073E2E:
	word32 a1_323 = CONVERT(Mem315[s3_313 + 10<i32>:uint16], uint16, word32)
	branch a1_323 <u s1_320 l23073E80
l23073E80:
	s3_313 = Mem315[s3_313:int32]
	s1_320 = CONVERT(SLICE(s1_320 - a1_323, word16, 0), word16, word32)
	branch s3_313 != 0<32> l23073E2E
l23073E36:
l23073E3E:
	word32 a3_685
	word32 a4_686
	word32 a5_687
	word32 a5_688
	word32 a2_684
	tcp_seg_add_chksum(CONVERT(SLICE(~inet_chksum(Mem315[s3_313 + 4<i32>:int32] + s1_320, CONVERT(SLICE(CONVERT(Mem315[s3_313 + 10<i32>:uint16], uint16, word32) - s1_320, word16, 0), word16, word32), a4_268, out a2_684, out a3_685, out a4_686, out a5_687), word16, 0), word16, word32), CONVERT(SLICE(CONVERT(Mem315[s3_313 + 10<i32>:uint16], uint16, word32) - s1_320, word16, 0), word16, word32), s0_307 + 10<i32>, s0_307 + 12<i32>, out a4_268, out a5_688)
	s3_313 = Mem315[s3_313:int32]
	s1_320 = 0<32>
	branch s3_313 != 0<32> l23073E3E
l23073E76:
l23073E8E:
	word32 a0_370 = pbuf_clen(Mem315[s4_279 + 4<i32>:int32])
	word32 a5_375 = CONVERT(Mem315[s2_277 + 102<i32>:uint16], uint16, word32)
	Mem377[s2_277 + 102<i32>:word16] = SLICE(a0_370 + a5_375, word16, 0)
	word32 s0_378 = Mem377[a5_375:word32]
	Mem379[s4_279:word32] = a5_375
	Mem380[s0_378:word32] = s4_279
	branch Mem380[s4_279:int32] != 0<32> l23073C88
l23073EB2:
	Mem382[s2_277 + 104<i32>:word16] = 0<16>
l23073C88:
l23073C78:
l23073C8A:
	return
tcp_split_unsent_seg_exit:


word32 tcp_enqueue_flags(word32 ra, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg24, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
//      tcp_send_fin
//      altcp_tcp_connect
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_enqueue_flags_entry:
l23073ED6:
	word32 a0_117
	word32 a5_114
	word32 a4_127
	word32 a4_6 = a1 >>u 1<u32> & 1<32>
	word32 a0_25
	word32 a4_28
	word32 a5_304
	word32 a7_305
	word32 s4_306
	word32 s8_307
	word32 a2_303
	word32 a3_197
	word32 a1_185
	word32 mstatus_214
	word32 s0_101
	word32 s1_100
	word32 s2_230
	word32 s3_234
	word32 s5_240
	word32 s6_246
	word32 ra_220 = pbuf_alloc(ra, a0, a1, 182<i32>, a4_6 << 2<u32>, 640<i32>, a3, a4_6, mstatus, dwLoc1C, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_101, out s1_100, out a0_25, out a1_185, out a2_303, out a3_197, out a4_28, out a5_304, out a7_305, out s2_230, out s3_234, out s4_306, out s5_240, out s6_246, out s8_307, out mstatus_214)
	word32 a2_191 = dwArgA4
	branch a0_25 != 0<32> l23073F30
l23073F30:
	word32 a0_55
	word32 s4_308
	word32 s8_309
	word32 a5_60
	ra_220 = tcp_create_segment(ra_220, Mem22[a3_197 + 92<i32>:word32], a0_25, s1_100, a3_197, a4_28, mstatus_214, dwArgB8, dwArgD8, dwArg0108, out s0_101, out s1_100, out a0_55, out a1_185, out a2_191, out a3_197, out a4_127, out a5_60, out s2_230, out s3_234, out s4_308, out s5_240, out s6_246, out s8_309, out mstatus_214)
	branch a0_55 == 0<32> l23073F04
l23073F3E:
	s0_101 = Mem22[a5_60 + 108<i32>:word32]
	branch a5_60 != 0<32> l23073F78
l23073F78:
	a5_60 = Mem22[a4_127:word32]
	branch a4_127 != 0<32> l23073F76
l23073F76:
l23073F7C:
	Mem86[a0_55:word32] = a5_60
l23073F42:
	Mem87[a0_55 + 108<i32>:word32] = s0_101
l23073F44:
	Mem90[s0_101 + 104<i32>:word16] = 0<16>
	branch s2_230 == 0<32> l23073F52
l23073F4C:
	s0_101 = Mem90[a5_60 + 92<i32>:word32]
	Mem96[a5_60 + 0x5D<32>:word32] = s0_101
l23073F52:
	s1_100 = s1_100 & 1<32>
	branch (s1_100 & 1<32>) == 0<32> l23073F62
l23073F56:
	Mem105[s0_101 + 26<i32>:word16] = SLICE(CONVERT(Mem102[s0_101 + 26<i32>:uint16], uint16, word32) | 32<i32>, word16, 0)
l23073F62:
	word32 a0_111 = pbuf_clen(Mem109[a0_55 + 4<i32>:word32])
	a5_114 = CONVERT(Mem109[s0_101 + 102<i32>:uint16], uint16, word32)
	Mem116[s0_101 + 102<i32>:word16] = SLICE(a0_111 + a5_114, word16, 0)
	a0_117 = 0<32>
l23073F04:
	Mem123[s0_101 + 26<i32>:word16] = SLICE(CONVERT(Mem22[s0_101 + 26<i32>:uint16], uint16, word32) | 128<i32>, word16, 0)
	word32 a4_126 = CONVERT(Mem123[0x42026890<32>:uint16], uint16, word32)
	Mem128[0x42026890<32>:word16] = SLICE(a4_126 + 1<32>, word16, 0)
	a0_117 = 0xFFFFFFFF<32>
	a5_114 = 0x420267F0<32>
	a4_127 = a4_126 + 1<32>
l23073F24:
	s0Out = s0_101
	s1Out = s1_100
	a0Out = a0_117
	a1Out = a1_185
	a2Out = a2_191
	a3Out = a3_197
	a4Out = a4_127
	a5Out = a5_114
	s2Out = s2_230
	s3Out = s3_234
	s4Out = dwArg04
	s5Out = s5_240
	s6Out = s6_246
	s8Out = dwLoc1C
	mstatusOut = mstatus_214
	return ra_220
tcp_enqueue_flags_exit:


word32 tcp_send_fin(word32 ra, word32 s1, word32 a3, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg38, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_close_shutdown_fin
// MayUse:  a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a2 a3 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_send_fin_entry:
l23073F80:
	word32 a0_12 = Mem11[s1 + 108<i32>:word32]
	branch s1 != 0<32> l23073FA4
l23073FA4:
	branch a5 != 0<32> l23073FA2
l23073FA2:
l23073FA8:
	word32 a5_24
	branch (lwip_htons(CONVERT(Mem11[a5 + 12<i32>:byte], byte, word32) | CONVERT(Mem11[a5 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_24) & 7<32>) != 0<32> l23073F90
l23073FBE:
	word32 s0_30 = CONVERT(Mem11[a5_24 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem11[a5_24 + 12<i32>:byte], byte, word32)
	word32 a5_33
	word32 a0_32 = lwip_htons(1<32>, out a5_33)
	word32 s1_34 = Mem11[a5_33 + 16<i32>:word32]
	word32 a0_37 = CONVERT(SLICE(a0_32 | s0_30, word16, 0), word16, word32)
	Mem38[a5_33 + 12<i32>:byte] = SLICE(a0_37, byte, 0)
	Mem40[a5_33 + 13<i32>:byte] = SLICE(a0_37 >>u 8<i32>, byte, 0)
	Mem47[a0_12 + 26<i32>:word16] = SLICE(CONVERT(Mem40[a0_12 + 26<i32>:uint16], uint16, word32) | 32<i32>, word16, 0)
	0<32> = dwArg38
	s0Out = s0
	s1Out = s1_34
	a0Out = 0<32>
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	s2Out = a0_12
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
l23073F90:
	0<32> = dwArg38
l23073F9E_thunk_tcp_enqueue_flags:
	word32 a0_68
	word32 a1_69
	word32 a2_70
	word32 a3_71
	word32 mstatus_76
	word32 s0_78
	word32 s1_79
	word32 s2_80
	word32 s3_81
	word32 s4_82
	word32 s5_83
	word32 s6_84
	word32 s8_85
	word32 a4_205
	word32 a5_206
	word32 ra_77 = tcp_enqueue_flags(ra, a0_12, 1<32>, a3, mstatus, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_78, out s1_79, out a0_68, out a1_69, out a2_70, out a3_71, out a4_205, out a5_206, out s2_80, out s3_81, out s4_82, out s5_83, out s6_84, out s8_85, out mstatus_76)
	s0Out = s0_78
	s1Out = s1_79
	a0Out = a0_68
	a1Out = a1_69
	a2Out = a2_70
	a3Out = a3_71
	s2Out = s2_80
	s3Out = s3_81
	s4Out = s4_82
	s5Out = s5_83
	s6Out = s6_84
	s8Out = s8_85
	mstatusOut = mstatus_76
	return ra_77
tcp_send_fin_exit:


word32 tcp_rexmit_rto_prepare(word32 s1, word32 a4, word32 a5, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
//      tcp_rexmit_rto
// MayUse:  a4:[0..31] a5:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
tcp_rexmit_rto_prepare_entry:
l23073FFE:
	word32 a5_25
	word32 a3_109 = 1<32>
	branch s1 != 0<32> l2307401A
l2307401A:
	s1 = Mem13[a5:word32]
	a4 = CONVERT(Mem13[a4 + 14<i32>:byte], byte, word32)
	branch a5 != 0<32> l23074014
l23074014:
	s1 = a5
	branch a4 != 1<32> l23074010
l23074024:
	a3_109 = 1<32>
	a5_25 = 0xFFFFFFFA<32>
	branch a4 != 1<32> l23074096
l2307402C:
	Mem29[0xFFFFFFFA<32>:word32] = s1
	word32 a0_30 = Mem29[0x6A<32>:word32]
	Mem31[a0_30 + 112<i32>:word32] = 0<32>
	Mem33[0x66<32>:word32] = a0_30
	Mem36[a0_30 + 26<i32>:word16] = SLICE(CONVERT(Mem33[a0_30 + 26<i32>:uint16], uint16, word32) | 0xFFF800<32>, word16, 0)
	word32 a5_51
	word32 a0_48 = lwip_htonl(CONVERT(Mem36[0xFFF807<32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem36[0xFFF806<32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem36[0xFFF805<32>:byte], byte, word32) << 8<i32> | CONVERT(Mem36[0xFFF804<32>:byte], byte, word32))), out a3_109, out a4, out a5_51)
	s1 = Mem36[a5_51 + 16<i32>:word32]
	s3 = CONVERT(Mem36[s1 + 8<i32>:uint16], uint16, word32)
	s2 = a0_48 + s3
	word32 a5_134
	Mem65[CONVERT((lwip_htons(CONVERT(Mem36[a5_51 + 12<i32>:byte], byte, word32) | CONVERT(Mem36[a5_51 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_134) & 3<32>) != 0<32>, bool, word32) + s2 + 76<i32>:word32] = a0_30
	Mem66[a0_30 + 52<i32>:word32] = 0<32>
	s0 = a0_30
	a5_25 = 0<32>
l23074010:
	a5_25 = 0xFFFFFFFA<32>
l23074096:
	s1Out = s1
	a0Out = a5_25
	a2Out = dwArg48
	a3Out = a3_109
	a4Out = a4
	a5Out = a5_25
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0
tcp_rexmit_rto_prepare_exit:


word32 tcp_rexmit(word32 s1, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
//      tcp_rexmit_fast
// MayUse:  s1:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
tcp_rexmit_entry:
l230740A6:
	word32 a0_14 = Mem13[s1 + 112<i32>:word32]
	word32 a5_15 = 0xFFFFFFFA<32>
	branch s1 == 0<32> l23074100
l230740B8:
	s1 = Mem13[0xFFFFFFFE<32>:word32]
	a4 = 1<32>
	a3 = CONVERT(Mem13[8<32>:byte], byte, word32)
	a5_15 = 0xFFFFFFFA<32>
	branch a3 != 1<32> l23074100
l230740C6:
	word32 s1_20 = Mem13[0xFFFFFFFA<32>:word32]
	Mem23[0x6A<32>:word32] = a0_14
	s0 = a0_14
	s2 = a0_14 + 108<i32>
l230740D0:
	branch Mem23[s2:int32] != 0<32> l23074110
l23074110:
	word32 a4_41
	word32 a5_161
	word32 a3_160
	word32 a0_39 = lwip_htonl(CONVERT(Mem23[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem23[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem23[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem23[a4 + 4<i32>:byte], byte, word32))), out a3_160, out a4_41, out a5_161)
	s1_20 = Mem23[a4_41 + 16<i32>:word32]
	s3 = a0_39
	word32 a5_162
	branch a0_39 - lwip_htonl(CONVERT(Mem23[a4_41 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem23[a4_41 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem23[a4_41 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem23[a4_41 + 4<i32>:byte], byte, word32))), out a3, out a4, out a5_162) >= 0<32> l230740D6
l2307415E:
	s2 = Mem23[s2:int32]
l230740D6:
	word32 a5_63 = Mem23[s2:int32]
	Mem66[a5_63:word32] = s1_20
	Mem67[s2:word32] = s1_20
	s1 = Mem67[a5_63:word32]
	branch a5_63 != 0<32> l230740E8
l230740E4:
	Mem71[a0_14 + 104<i32>:word16] = 0<16>
l230740E8:
	word32 a5_74 = CONVERT(Mem73[a0_14 + 66<i32>:byte], byte, word32)
	a4 = 255<i32>
	branch a5_74 == 255<i32> l230740FA
l230740F4:
	Mem77[a0_14 + 66<i32>:byte] = SLICE(a5_74 + 1<32>, byte, 0)
l230740FA:
	Mem79[a0_14 + 52<i32>:word32] = 0<32>
	a5_15 = 0<32>
l23074100:
	s1Out = s1
	a0Out = a5_15
	a3Out = a3
	a4Out = a4
	a5Out = a5_15
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0
tcp_rexmit_exit:


word32 tcp_rexmit_fast(word32 s1, word32 a5, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
// MayUse:  a5:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3
// Preserved: s0 sp
tcp_rexmit_fast_entry:
l23074164:
	word32 a0_15 = Mem0[a5 + 112<i32>:word32]
	branch a5 == 0<32> l230741CE
l230741CE:
	a0Out = a0_15
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s1
l23074168:
	word32 a5_11 = CONVERT(Mem10[a0_15 + 26<i32>:uint16], uint16, word32)
	word32 a5_13 = a5_11 & 4<32>
	branch (a5_11 & 4<32>) != 0<32> l230741C6
l23074178:
	word32 s8_128
	word32 s0_25 = tcp_rexmit(s1, out s1, out a0_15, out a3, out a4, out a5_13, out s2, out s3, out s4, out s8_128)
	branch a0_15 != 0<32> l230741C6
l2307417E:
	word32 a4_28 = CONVERT(Mem10[s0_25 + 72<i32>:uint16], uint16, word32)
	word32 a5_29 = CONVERT(Mem10[s0_25 + 96<i32>:uint16], uint16, word32)
	branch a4_28 >=u a5_29 l2307418C
l2307418A:
	a5_29 = a4_28
l2307418C:
	word32 a4_35 = CONVERT(Mem10[s0_25 + 50<i32>:uint16], uint16, word32)
	word32 a5_37 = CONVERT(SLICE(a5_29, word16, 0), word16, word32) >> 1<i32>
	Mem38[s0_25 + 74<i32>:word16] = SLICE(a5_37, word16, 0)
	a3 = a4_35 << 1<u32>
	branch a5_37 >=u a4_35 << 1<u32> l230741A6
l230741A2:
	Mem40[s0_25 + 74<i32>:word16] = SLICE(a4_35 << 1<u32>, word16, 0)
l230741A6:
	word32 a5_46 = CONVERT(Mem45[s0_25 + 74<i32>:uint16], uint16, word32)
	Mem47[s0_25 + 48<i32>:word16] = 0<16>
	a4 = a4_35 + 3<32> + a5_46
	word32 a5_49 = CONVERT(Mem47[s0_25 + 26<i32>:uint16], uint16, word32)
	Mem50[s0_25 + 72<i32>:word16] = SLICE(a4, word16, 0)
	Mem52[s0_25 + 26<i32>:word16] = SLICE(a5_49 | 4<i32>, word16, 0)
	a5_13 = a5_49 | 4<i32>
l230741C6:
	a0Out = a0_15
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_13
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s1
tcp_rexmit_fast_exit:


word32 tcp_rst(word32 ra, word32 s0, word32 a1, word32 a2, word32 s7, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_abort
//      tcp_close
//      tcp_tmr
//      tcp_input
// MayUse:  a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_rst_entry:
l230741D0:
	word32 a3_29
	word32 a4_30
	word32 a3_43
	word32 a4_44
	word32 a5_45
	word32 mstatus_48
	word32 s0_50
	word32 s1_51
	word32 s2_52
	word32 s3_53
	word32 s4_54
	word32 s5_55
	word32 s6_56
	word32 s8_57
	word32 a5_173
	word32 ra_49 = tcp_output_alloc_header_common.constprop.6(ra, dwArg94, 0<32>, lwip_htonl(a1, out a3_29, out a4_30, out a5_173), a3_29, a4_30, mstatus, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s0_50, out s1_51, out a3_43, out a4_44, out a5_45, out s2_52, out s3_53, out s4_54, out s5_55, out s6_56, out s8_57, out mstatus_48)
	branch a2 == 0<32> l2307421C
l2307421C:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_51
	a0Out = a2
	a3Out = a3_43
	a4Out = a4_44
	a5Out = a5_45
	s2Out = s2_52
	s3Out = s3_53
	s4Out = s4_54
	s5Out = s5_55
	s6Out = s6_56
	s7Out = s7
	s8Out = s8_57
	s9Out = s9
	mstatusOut = mstatus_48
	return ra_49
l23074204:
	0<32> = dwArg0128
l23074218_thunk_tcp_output_control_segment:
	word32 a0_80
	word32 a3_83
	word32 a4_84
	word32 a5_85
	word32 mstatus_88
	word32 s0_90
	word32 s1_91
	word32 s2_92
	word32 s3_93
	word32 s4_94
	word32 s5_95
	word32 s6_96
	word32 s8_97
	word32 s7_105
	word32 s9_106
	word32 ra_89 = tcp_output_control_segment(ra_49, s0_50, a2, s1_51, s2_52, a5_45, s6_56, s7, mstatus_48, dwArgF8, dwArg0128, out s0_90, out s1_91, out a0_80, out a3_83, out a4_84, out a5_85, out s2_92, out s3_93, out s4_94, out s5_95, out s6_96, out s7_105, out s8_97, out s9_106, out mstatus_88)
	s0Out = s0_90
	s1Out = s1_91
	a0Out = a0_80
	a3Out = a3_83
	a4Out = a4_84
	a5Out = a5_85
	s2Out = s2_92
	s3Out = s3_93
	s4Out = s4_94
	s5Out = s5_95
	s6Out = s6_96
	s7Out = s7_105
	s8Out = s8_97
	s9Out = s9_106
	mstatusOut = mstatus_88
	return ra_89
tcp_rst_exit:


word32 tcp_send_empty_ack(word32 ra, word32 s0, word32 a0, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_receive
//      tcp_input
//      tcp_output
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
tcp_send_empty_ack_entry:
l2307422A:
	word32 a5_116
	word32 a0_108
	word32 a0_19
	word32 a5_24
	word32 a5_176
	word32 a4_175
	word32 a3_174
	word32 a3_112
	word32 a4_114
	word32 mstatus_121
	word32 s1_125
	word32 s2_127
	word32 s3_129
	word32 s4_131
	word32 s5_133
	word32 s6_135
	word32 s8_139
	word32 ra_123 = tcp_output_alloc_header.constprop.5(ra, a0, 0<32>, lwip_htonl(Mem7[a0 + 80<i32>:word32], out a3_174, out a4_175, out a5_176), mstatus, s0, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s1_125, out a0_19, out a3_112, out a4_114, out a5_24, out s2_127, out s3_129, out s4_131, out s5_133, out s6_135, out s8_139, out mstatus_121)
	branch a0_19 != 0<32> l2307425A
l2307425A:
	word32 s0_58
	word32 a5_177
	ra_123 = tcp_output_control_segment(ra_123, a0, a0_19, a0, a0 + 4<i32>, a5_24, s6_135, s7, mstatus_121, dwArgE8, dwArg0118, out s0_58, out s1_125, out a0_108, out a3_112, out a4_114, out a5_177, out s2_127, out s3_129, out s4_131, out s5_133, out s6_135, out s7, out s8_139, out s9, out mstatus_121)
	word32 a5_75 = CONVERT(Mem7[s0_58 + 26<i32>:uint16], uint16, word32)
	branch a0_108 == 0<32> l23074278
l23074278:
	a5_116 = a5_75 & 0xFFFFFFFC<32>
l2307426E:
	a5_116 = a5_75 | 3<i32>
l23074272:
	Mem80[s0_58 + 26<i32>:word16] = SLICE(a5_116, word16, 0)
l23074244:
	word32 a5_81 = CONVERT(Mem7[a0 + 26<i32>:uint16], uint16, word32)
	Mem84[a0 + 26<i32>:word16] = SLICE(a5_81 | 3<i32>, word16, 0)
	a0_108 = 0xFFFFFFFE<32>
	a5_116 = a5_81 | 3<i32>
l23074252:
	word32 a1_110
	s1Out = s1_125
	a0Out = a0_108
	a1Out = a1_110
	a2Out = dwArg10
	a3Out = a3_112
	a4Out = a4_114
	a5Out = a5_116
	s2Out = s2_127
	s3Out = s3_129
	s4Out = s4_131
	s5Out = s5_133
	s6Out = s6_135
	s7Out = s7
	s8Out = s8_139
	s9Out = s9
	mstatusOut = mstatus_121
	return ra_123
tcp_send_empty_ack_exit:


word32 tcp_output(word32 ra, word32 s1, word32 a0, word32 a2, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_close_shutdown_fin
//      tcp_pcb_remove
//      tcp_fasttmr
//      tcp_tmr
//      tcp_input
//      tcp_rexmit_rto
//      lwip_netconn_do_write
//      altcp_tcp_output
//      altcp_tcp_connect
//      altcp_tcp_recved
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_output_entry:
l2307427C:
	word32 a5_5 = Mem0[0x42026910<32>:int32]
	branch a5_5 == a0 l230747AC
l230747AC:
	s0Out = s0
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23074288:
	word32 a5_1514
	word32 a0_1478
	word32 s2_1570
	word32 a0_35 = Mem34[s1 + 108<i32>:word32]
	word32 s0_36 = a0_35
	branch s1 != 0<32> l230742D4
l230742D4:
	word32 a0_43
	s6 = CONVERT(Mem34[a0_35 + 72<i32>:uint16], uint16, word32)
	s2_1570 = CONVERT(Mem34[a0_35 + 96<i32>:uint16], uint16, word32)
	s5 = a0_35 + 4<i32>
	word32 a0_40 = CONVERT(Mem34[a0_35 + 8<i32>:byte], byte, word32)
	branch a0_40 == 0<32> l23074362
l23074362:
	word32 a3_1747
	word32 a2_1746
	a0_43 = ip4_route(a2, a5_5, out a2_1746, out a3_1747, out a4, out a5_1514)
l230742E6:
	a0_43 = netif_get_by_index(a0_40, out a4, out a5_1514)
l230742EA:
	word32 s4_226 = a0_43
	branch a0_43 == 0<32> l230747B0
l230747B0:
	a0_1478 = 0xFFFFFFFC<32>
l230742F0:
	word32 s0_56 = Mem34[a5_1514:word32]
	branch a5_1514 != 0<32> l230742F8
l230742F4:
	Mem58[a5_1514:word32] = s0_56
l230742F8:
	word32 s3_61 = s6
	branch s2_1570 >=u s6 l23074300
l230742FE:
	s3_61 = s2_1570
l23074300:
	word32 s1_70 = Mem69[a4 + 16<i32>:word32]
	word32 s3_72 = s3_61 << 16<i32>
	word32 a3_1748
	word32 a5_1749
	word32 a0_84 = lwip_htonl(CONVERT(Mem69[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem69[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem69[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem69[a4 + 4<i32>:byte], byte, word32))), out a3_1748, out a4, out a5_1749)
	s3 = s3_72 >>u 0x10<u32>
	s0_36 = Mem69[a4 + 68<i32>:word32]
	branch s3_72 >>u 0x10<u32> >=u a0_84 + (CONVERT(Mem69[s1_70 + 8<i32>:uint16], uint16, word32) - a4) l2307436A
l2307436A:
	s2_1570 = Mem69[s0_36 + 112<i32>:int32]
	Mem93[s0_36 + 161<i32>:byte] = 0<8>
	branch s2_1570 != 0<32> l23074390
l23074390:
	word32 a5_96 = Mem93[s2_1570:int32]
	branch a5_96 != 0<32> l2307438E
l2307438E:
	s2_1570 = a5_96
l23074396:
l23074376:
	s9 = 0xF<32>
	s7 = 2<32>
	word32 s8_101 = 1<32>
	s6 = 0x420267F0<32>
	s10 = 0x42027000<32>
	s11 = 0x2040000<32>
l2307470A:
	word32 s1_107 = Mem106[a4 + 16<i32>:word32]
	word32 a3_119
	word32 a5_121
	word32 a0_123 = lwip_htonl(CONVERT(Mem106[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem106[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem106[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem106[a4 + 4<i32>:byte], byte, word32))), out a3_119, out a4, out a5_121) - a5_121
	word32 a5_124 = CONVERT(Mem106[s1_107 + 8<i32>:uint16], uint16, word32)
	branch s3 <u a0_123 + a5_124 l2307478C
l2307473A:
	word32 a5_133
	word32 a0_132 = lwip_htons(CONVERT(Mem106[a5_124 + 12<i32>:byte], byte, word32) | CONVERT(Mem106[a5_124 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_133)
	word32 s0_134 = Mem106[a5_133 + 112<i32>:word32]
	branch a5_133 == 0<32> l23074398
l23074752:
	word32 a5_135 = CONVERT(Mem106[s0_134 + 26<i32>:uint16], uint16, word32)
	a4 = a5_135 & 68<i32>
	branch (a5_135 & 68<i32>) != 0<32> l23074398
l2307475E:
	s0_134 = Mem106[(a5_135 & 68<i32>) + 108<i32>:word32]
	branch (a5_135 & 68<i32>) == 0<32> l23074774
l23074762:
	a4 = Mem106[a3_119:word32]
	branch a3_119 != 0<32> l23074398
l23074768:
	a4 = CONVERT(Mem106[s0_134 + 50<i32>:uint16], uint16, word32)
	branch CONVERT(Mem106[a4 + 8<i32>:uint16], uint16, word32) >=u a4 l23074398
l23074774:
	a4 = CONVERT(Mem106[s0_134 + 100<i32>:uint16], uint16, word32)
	branch a4 == 0<32> l23074398
l2307477C:
	a4 = CONVERT(Mem106[s0_134 + 102<i32>:uint16], uint16, word32)
	branch s9 <u a4 l23074398
l23074784:
	a5_124 = a5_135 & 160<i32>
	branch (a5_135 & 160<i32>) != 0<32> l23074398
l23074398:
	word32 a5_167
	word32 a5_151 = CONVERT(Mem106[s0_134 + 20<i32>:byte], byte, word32)
	branch a5_151 == s7 l230743CA
l230743A0:
	word32 a0_172 = CONVERT(SLICE(lwip_htons(0x10<32>, out a5_167) | a5_167, word16, 0), word16, word32)
	Mem173[a4 + 12<i32>:byte] = SLICE(a0_172, byte, 0)
	Mem175[a4 + 13<i32>:byte] = SLICE(a0_172 >>u 8<i32>, byte, 0)
	s0_134 = dwArg94
	a0_132 = a0_172 >>u 8<i32>
	a5_151 = a5_167
l230743CA:
	word32 a5_179 = CONVERT(Mem177[a5_151 + 14<i32>:byte], byte, word32)
	branch a5_179 != s8_101 l230745AC
l230743D4:
	word32 a5_194
	word32 a4_1750
	word32 a3_192
	word32 a0_191 = lwip_htonl(a0_132, out a3_192, out a4_1750, out a5_194)
	Mem197[a5_194 + 8<i32>:byte] = SLICE(a0_191, byte, 0)
	Mem198[a5_194 + 9<i32>:byte] = SLICE(a0_191 >>u 8<u32>, byte, 0)
	Mem201[a5_194 + 10<i32>:byte] = SLICE(a0_191 >>u 0x10<u32>, byte, 0)
	Mem202[a5_194 + 11<i32>:byte] = SLICE(a0_191 >>u 24<i32>, byte, 0)
	word32 s1_203 = Mem202[a5_194 + 16<i32>:word32]
	word32 a5_207
	word32 a0_206 = lwip_htons(CONVERT(Mem202[dwArg94 + 42<i32>:uint16], uint16, word32), out a5_207)
	Mem209[a5_207 + 14<i32>:byte] = SLICE(a0_206, byte, 0)
	Mem211[a5_207 + 15<i32>:byte] = SLICE(a0_206 >>u 8<i32>, byte, 0)
	word32 a4_212 = CONVERT(Mem211[dwArg94 + 42<i32>:uint16], uint16, word32)
	word32 s0_213 = Mem211[a5_207 + 36<i32>:word32]
	Mem215[a5_207 + a4_212 + 44<i32>:word32] = s0_213
	branch (CONVERT(Mem215[s1_203 + 13<i32>:byte], byte, word32) & 1<32>) == 0<32> l23074440
l23074424:
	word32 a5_243
	word32 a3_1751
	Mem245[lwip_htonl(tcp_eff_send_mss_netif(688<i32>, s4_226, out a3_1751) | 0x2040000<32>, out a3_192, out a4_212, out a5_243) + 20<i32>:word32] = a5_243
	s0_213 = dwArg94
l23074440:
	word32 a5_248 = CONVERT(Mem247[s0_213 + 48<i32>:int16], int16, int32)
	branch a5_248 >= 0<32> l2307444C
l23074448:
	Mem249[s0_213 + 48<i32>:word16] = 0<16>
l2307444C:
	word32 s0_252 = Mem251[a5_248 + 52<i32>:word32]
	branch a5_248 != 0<32> l2307447A
l23074450:
	Mem260[Mem251[0x420268FC<32>:int32] + 52<i32>:word32] = s0_252
	word32 a4_1754
	Mem278[lwip_htonl(CONVERT(Mem260[a4_212 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem260[a4_212 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem260[a4_212 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem260[a4_212 + 4<i32>:byte], byte, word32))), out a3_192, out a4_1754, out a5_248) + 56<i32>:word32] = s0_252
l2307447A:
	word32 a4_287 = Mem280[a3_192 + 4<i32>:word32]
	word32 a5_291 = CONVERT(SLICE(a5_248 - a3_192, word16, 0), word16, word32)
	word32 a3_292 = CONVERT(Mem280[a4_287 + 10<i32>:uint16], uint16, word32) - a5_291
	Mem293[a4_287 + 10<i32>:word16] = SLICE(a3_292, word16, 0)
	word32 a4_295 = CONVERT(Mem293[a3_292 + 8<i32>:uint16], uint16, word32)
	word32 a5_296 = a4_295 - a5_291
	Mem297[a3_292 + 8<i32>:word16] = SLICE(a5_296, word16, 0)
	word32 s1_299 = Mem297[a4_295 + 4<i32>:word32]
	Mem300[a5_296 + 4<i32>:word32] = a4_295
	Mem301[a5_296 + 16<i32>:byte] = 0<8>
	Mem302[a5_296 + 17<i32>:byte] = 0<8>
	word32 a5_303 = CONVERT(Mem302[s1_299 + 13<i32>:byte], byte, word32)
	word32 a5_304 = a5_303 & 4<32>
	branch (a5_303 & 4<32>) != 0<32> l230744C6
l230744B4:
	s1_299 = Mem302[(a5_303 & 4<32>) + 16<i32>:word32]
	lwip_htons(CONVERT(Mem302[(a5_303 & 4<32>) + 12<i32>:byte], byte, word32) | CONVERT(Mem302[(a5_303 & 4<32>) + 13<i32>:byte], byte, word32) << 8<i32>, out a5_304)
l230744C6:
	word32 a6_314 = Mem302[s1_299 + 4<i32>:int32]
	word32 a0_342
	word32 s1_350
	word32 s4_353
	word32 s5_354
	word32 s6_355
	word32 a5_1755
	word32 s3_1756
	word32 a4_346
	word32 s0_349 = ip_chksum_pseudo_partial(a6_314, 6<32>, dwLoc48, lwip_htons(CONVERT(Mem323[a5_304 + 12<i32>:byte], byte, word32) | CONVERT(Mem323[a5_304 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_1755) >>u 0xA<u32> & 252<i32>, a6_314, dwArgD8, out s1_350, out a0_342, out a4_346, out s3_1756, out s4_353, out s5_354, out s6_355)
	word32 a7_360 = 0<32>
	branch CONVERT(Mem323[s1_350 + 12<i32>:byte], byte, word32) == 0<32> l2307451A
l23074504:
	word32 a5_361 = CONVERT(Mem323[s1_350 + 10<i32>:uint16], uint16, word32)
	Mem362[s1_350 + 12<i32>:byte] = 0<8>
	Mem367[s1_350 + 10<i32>:word16] = SLICE(a5_361 >>u 8<i32> | a5_361 << 8<u32>, word16, 0)
	a7_360 = 1<32>
	a4_346 = a5_361 << 8<u32>
l2307451A:
	word32 a0_377 = CONVERT(Mem372[s1_350 + 10<i32>:uint16] + SLICE(~a0_342, word16, 0), uint16, uint16)
	word32 a5_382 = CONVERT(SLICE(~((a0_377 >>u 0x10<u32>) + a0_377), word16, 0), word16, word32)
	Mem383[a4_346 + 16<i32>:byte] = SLICE(a5_382, byte, 0)
	Mem385[a4_346 + 17<i32>:byte] = SLICE(a5_382 >>u 8<i32>, byte, 0)
	Mem393[s6_355 + 148<i32>:word16] = SLICE(CONVERT(Mem385[s6_355 + 148<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	dwLoc4C = a7_360
	word32 a7_425
	word32 s1_428
	word32 a3_1766
	word32 s0_1765
	ra = ip4_output_if(ra, s0_349, Mem393[a0_377 + 4<i32>:word32], a0_377, s0_349, s5_354, CONVERT(Mem393[s0_349 + 11<i32>:byte], byte, word32), CONVERT(Mem393[s0_349 + 10<i32>:byte], byte, word32), 6<32>, s4_353, s4_353, s5_354, s6_355, s7, out s0_1765, out s1_428, out a0_1478, out a1, out a3_1766, out a4, out a5_179, out a7_425, out s2_1570, out s3, out s4_226, out s5, out s6, out s7, out s8_101, out s9)
	s0_134 = dwLoc28
	branch a7_425 == 0<32> l23074580
l2307456C:
	word32 a5_445 = CONVERT(Mem402[s1_428 + 10<i32>:uint16], uint16, word32)
	Mem446[s1_428 + 12<i32>:byte] = SLICE(s8_101, byte, 0)
	a5_179 = a5_445 >>u 8<i32> | a5_445 << 8<u32>
	Mem450[s1_428 + 10<i32>:word16] = SLICE(a5_179, word16, 0)
	a4 = a5_445 << 8<u32>
l23074580:
	branch a0_1478 == 0<32> l230745AC
l230745AC:
	Mem460[a5_179 + 108<i32>:word32] = s0_134
	branch CONVERT(Mem460[s0_134 + 20<i32>:byte], byte, word32) == s7 l230745C2
l230745B8:
	Mem466[s0_134 + 26<i32>:word16] = SLICE(CONVERT(Mem460[s0_134 + 26<i32>:uint16], uint16, word32) & 0xFFFFFFFC<32>, word16, 0)
l230745C2:
	word32 s1_472 = Mem471[a4 + 16<i32>:word32]
	word32 a4_485
	word32 a3_1752
	word32 a5_1753
	lwip_htonl(CONVERT(Mem471[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem471[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem471[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem471[a4 + 4<i32>:byte], byte, word32))), out a3_1752, out a4_485, out a5_1753)
	word32 a3_487 = CONVERT(Mem471[s1_472 + 8<i32>:uint16], uint16, word32)
	word32 s1_488 = Mem471[a4_485 + 16<i32>:word32]
	word32 a5_504 = a5_499 + a3_487
	word32 a5_499
	word32 a0_505 = CONVERT((lwip_htons(CONVERT(Mem493[a4_485 + 12<i32>:byte], byte, word32) | CONVERT(Mem493[a4_485 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_499) & 3<32>) != 0<32>, bool, word32) + a5_504
	word32 s0_506 = Mem493[a5_504 + 80<i32>:word32]
	word32 a5_507 = a5_504 - a0_505
	branch a5_507 >= 0<32> l23074616
l23074614:
	Mem508[a0_505 + 80<i32>:word32] = s0_506
l23074616:
	a4 = CONVERT(Mem510[s1_488 + 8<i32>:uint16], uint16, word32)
	word32 s1_513 = Mem510[a5_507 + 16<i32>:word32]
	dwLoc4C = a4
	word32 a5_521
	branch CONVERT((lwip_htons(CONVERT(Mem515[a5_507 + 12<i32>:byte], byte, word32) | CONVERT(Mem515[a5_507 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_521) & 3<32>) != 0<32>, bool, word32) + a4 == 0<32> l230747A4
l230747A4:
	word32 a0_1757
	word32 a5_1760
	word32 a2_1758
	word32 a3_1759
	s1_513 = tcp_seg_free(ra, s1_513, a3_487, a4, s4_226, mstatus, dwArgB8, out a0_1757, out a1, out a2_1758, out a3_1759, out a4, out a5_1760)
l2307463C:
	Mem557[s1_513:word32] = 0<32>
	word32 s0_558 = Mem557[a5_521 + 112<i32>:word32]
	branch a5_521 != 0<32> l2307464A
l2307464A:
	s1_513 = Mem557[a4 + 16<i32>:word32]
	word32 a5_1763
	word32 a3_1761
	word32 a4_1762
	word32 a0_570 = lwip_htonl(CONVERT(Mem557[a4 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem557[a4 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem557[a4 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem557[a4 + 4<i32>:byte], byte, word32))), out a3_1761, out a4_1762, out a5_1763)
	word32 a4_582 = Mem557[s2_1570 + 16<i32>:int32]
	dwLoc4C = a0_570
	a3_604 = a3_595
	word32 a3_595
	word32 a5_1764
	branch a3_595 - lwip_htonl(CONVERT(Mem583[a4_582 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem583[a4_582 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem583[a4_582 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem583[a4_582 + 4<i32>:byte], byte, word32))), out a3_595, out a4, out a5_1764) < 0<32> l230746FC
l230746FC:
	word32 a3_604
	branch a4 != 0<32> l230746A6
l230746A6:
	word32 a3_619
	word32 a5_1768
	word32 a4_1767
	word32 a0_618 = lwip_htonl(CONVERT(Mem607[a3_604 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem607[a3_604 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem607[a3_604 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem607[a3_604 + 4<i32>:byte], byte, word32))), out a3_619, out a4_1767, out a5_1768)
	s1_513 = Mem607[a3_619 + 16<i32>:word32]
	dwLoc4C = a0_618
	word32 a5_1769
	branch dwArg94 - lwip_htonl(CONVERT(Mem623[a3_619 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem623[a3_619 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem623[a3_619 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem623[a3_619 + 4<i32>:byte], byte, word32))), out a3_604, out a4, out a5_1769) >= 0<32> l23074700
l230746FA:
l23074700:
	word32 a5_644 = Mem643[a4:word32]
	Mem647[a4:word32] = s1_513
	Mem648[s1_513:word32] = a5_644
l230746A0:
	Mem649[s2_1570:word32] = s1_513
l23074644:
	Mem650[s1_513 + 112<i32>:word32] = s0_558
l23074646:
	s2_1570 = s1_513
l23074706:
	s0_36 = Mem654[s1_513 + 108<i32>:word32]
	branch s1_513 == 0<32> l23074790
l23074582:
	word32 a5_657 = CONVERT(Mem455[dwLoc28 + 26<i32>:uint16], uint16, word32)
	Mem659[dwLoc28 + 26<i32>:word16] = SLICE(a5_657 | 128<i32>, word16, 0)
	a5_1514 = a5_657 | 128<i32>
l2307478C:
	s0_36 = Mem106[a5_124 + 108<i32>:word32]
	branch a5_124 != 0<32> l23074794
l23074790:
	Mem664[s0_36 + 104<i32>:word16] = 0<16>
l23074336:
	word32 a5_665 = CONVERT(Mem69[s0_36 + 96<i32>:uint16], uint16, word32)
	branch a5_665 != s3_72 >>u 0x10<u32> l23074354
l2307433E:
	s0_36 = Mem69[a5_665 + 112<i32>:word32]
	branch a5_665 != 0<32> l23074354
l23074342:
	branch CONVERT(Mem69[s0_36 + 161<i32>:byte], byte, word32) != 0<32> l23074354
l23074348:
	Mem669[s0_36 + 160<i32>:word16] = 0x100<16>
	Mem670[s0_36 + 162<i32>:byte] = 0<8>
l23074354:
	branch (CONVERT(Mem672[s0_36 + 26<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l23074794
l2307435E:
	a0_35 = s0_36
l230742AA:
	s2_1570 = s2
	branch (CONVERT(Mem34[a0_35 + 26<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l23074794
l23074794:
	word32 a5_680 = CONVERT(Mem679[s0_36 + 26<i32>:uint16], uint16, word32)
	Mem683[s0_36 + 26<i32>:word16] = SLICE(a5_680 & -129<i32>, word16, 0)
	a0_1478 = 0<32>
	a5_1514 = a5_680 & -129<i32>
l2307458E:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a0_1478
	a1Out = a1
	a2Out = dwArg01A8
	a3Out = s2
	a4Out = a4
	a5Out = a5_1514
	s2Out = s2_1570
	s3Out = s3
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArg0148
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return dwLoc08
l230742B4:
	0<32> = dwArg010C
l230742D0_thunk_tcp_send_empty_ack:
	word32 a0_736
	word32 a1_737
	word32 a2_738
	word32 a3_739
	word32 a4_740
	word32 a5_741
	word32 mstatus_744
	word32 s1_746
	word32 s2_747
	word32 s3_748
	word32 s4_749
	word32 s5_750
	word32 s6_751
	word32 s7_752
	word32 s8_753
	word32 s9_754
	word32 ra_745 = tcp_send_empty_ack(dwLoc08, dwArgCC, a0_35, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s1_746, out a0_736, out a1_737, out a2_738, out a3_739, out a4_740, out a5_741, out s2_747, out s3_748, out s4_749, out s5_750, out s6_751, out s7_752, out s8_753, out s9_754, out mstatus_744)
	s0Out = dwArgCC
	s1Out = s1_746
	a0Out = a0_736
	a1Out = a1_737
	a2Out = a2_738
	a3Out = a3_739
	a4Out = a4_740
	a5Out = a5_741
	s2Out = s2_747
	s3Out = s3_748
	s4Out = s4_749
	s5Out = s5_750
	s6Out = s6_751
	s7Out = s7_752
	s8Out = s8_753
	s9Out = s9_754
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus_744
	return ra_745
tcp_output_exit:


word32 tcp_rexmit_rto_commit(word32 ra, word32 s1, word32 a0, word32 a2, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
//      tcp_rexmit_rto
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_rexmit_rto_commit_entry:
l230747B4:
	word32 a5_5 = CONVERT(Mem0[a0 + 66<i32>:byte], byte, word32)
	branch a5_5 == 255<i32> l230747C6
l230747C0:
	Mem8[a0 + 66<i32>:byte] = SLICE(a5_5 + 1<32>, byte, 0)
l230747C6:
l230747C6_thunk_tcp_output:
	word32 a0_22
	word32 a2_24
	word32 a3_25
	word32 a4_26
	word32 s0_29
	word32 s1_30
	word32 s2_31
	word32 s4_32
	word32 s5_33
	word32 s6_34
	word32 s8_35
	word32 s10_39
	word32 s11_40
	word32 s3_41
	word32 s7_42
	word32 s9_43
	word32 mstatus_50
	word32 a1_96
	word32 a5_97
	word32 ra_28 = tcp_output(ra, s1, a0, a2, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_29, out s1_30, out a0_22, out a1_96, out a2_24, out a3_25, out a4_26, out a5_97, out s2_31, out s3_41, out s4_32, out s5_33, out s6_34, out s7_42, out s8_35, out s9_43, out s10_39, out s11_40, out mstatus_50)
	s0Out = s0_29
	s1Out = s1_30
	a0Out = a0_22
	a2Out = a2_24
	a3Out = a3_25
	a4Out = a4_26
	s2Out = s2_31
	s3Out = s3_41
	s4Out = s4_32
	s5Out = s5_33
	s6Out = s6_34
	s7Out = s7_42
	s8Out = s8_35
	s9Out = s9_43
	s10Out = s10_39
	s11Out = s11_40
	mstatusOut = mstatus_50
	return ra_28
tcp_rexmit_rto_commit_exit:


word32 tcp_rexmit_rto(word32 ra, word32 s1, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_rexmit_rto_entry:
l230747CA:
	word32 a0_13
	word32 a3_15
	word32 a4_16
	word32 s1_19
	word32 s4_20
	word32 s8_21
	word32 s2_24
	word32 s3_25
	word32 a2_140
	word32 a5_141
	word32 s0_23 = tcp_rexmit_rto_prepare(s1, a4, a5, out s1_19, out a0_13, out a2_140, out a3_15, out a4_16, out a5_141, out s2_24, out s3_25, out s4_20, out s8_21)
	branch a0_13 != 0<32> l230747E4
l230747E4:
	s0Out = s0
	s1Out = s1_19
	a0Out = a0_13
	a3Out = a3_15
	a4Out = a4_16
	s2Out = s2_24
	s3Out = s3_25
	s4Out = s4_20
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8_21
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l230747D8:
l230747E0_thunk_tcp_rexmit_rto_commit:
	word32 a0_35
	word32 a3_38
	word32 a4_39
	word32 mstatus_43
	word32 s0_45
	word32 s1_46
	word32 s10_47
	word32 s11_48
	word32 s2_49
	word32 s3_50
	word32 s4_51
	word32 s5_52
	word32 s6_53
	word32 s7_54
	word32 s8_55
	word32 s9_56
	word32 a2_142
	word32 ra_44 = tcp_rexmit_rto_commit(ra, s1_19, s0_23, dwArg10, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_45, out s1_46, out a0_35, out a2_142, out a3_38, out a4_39, out s2_49, out s3_50, out s4_51, out s5_52, out s6_53, out s7_54, out s8_55, out s9_56, out s10_47, out s11_48, out mstatus_43)
	s0Out = s0_45
	s1Out = s1_46
	a0Out = a0_35
	a3Out = a3_38
	a4Out = a4_39
	s2Out = s2_49
	s3Out = s3_50
	s4Out = s4_51
	s5Out = s5_52
	s6Out = s6_53
	s7Out = s7_54
	s8Out = s8_55
	s9Out = s9_56
	s10Out = s10_47
	s11Out = s11_48
	mstatusOut = mstatus_43
	return ra_44
tcp_rexmit_rto_exit:


void tcp_keepalive(word32 ra, word32 s0, word32 a0, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_keepalive_entry:
l230747EC:
	word32 a0_20
	word32 a5_25
	word32 mstatus_28
	word32 s6_35
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 s1_127
	word32 a3_128
	word32 a4_129
	word32 s2_130
	word32 s3_131
	word32 s4_132
	word32 s5_133
	word32 s8_134
	word32 ra_29 = tcp_output_alloc_header.constprop.5(ra, a0, 0<32>, lwip_htonl(Mem7[a0 + 80<i32>:word32] + 0xFFFFFFFF<32>, out a3_124, out a4_125, out a5_126), mstatus, s0, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s1_127, out a0_20, out a3_128, out a4_129, out a5_25, out s2_130, out s3_131, out s4_132, out s5_133, out s6_35, out s8_134, out mstatus_28)
	branch a0_20 == 0<32> l2307481C
l2307481C:
	return
l23074808:
l23074818_thunk_tcp_output_control_segment:
	word32 s0_135
	word32 s1_136
	word32 a0_137
	word32 a3_138
	word32 a4_139
	word32 a5_140
	word32 s2_141
	word32 s3_142
	word32 s4_143
	word32 s5_144
	word32 s6_145
	word32 s7_146
	word32 s8_147
	word32 s9_148
	word32 mstatus_149
	tcp_output_control_segment(ra_29, a0, a0_20, dwArg10, a0 + 4<i32>, a5_25, s6_35, s7, mstatus_28, dwArgF8, dwArg0128, out s0_135, out s1_136, out a0_137, out a3_138, out a4_139, out a5_140, out s2_141, out s3_142, out s4_143, out s5_144, out s6_145, out s7_146, out s8_147, out s9_148, out mstatus_149)
	return
tcp_keepalive_exit:


void tcp_zero_window_probe(word32 ra, word32 a0, word32 s4, word32 s7, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_tmr
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_zero_window_probe_entry:
l23074826:
	word32 s2_17 = Mem15[a0 + 108<i32>:int32]
	branch s2_17 == 0<32> l23074940
l23074940:
l2307483C:
	word32 a5_19 = CONVERT(Mem15[a0 + 162<i32>:byte], byte, word32)
	branch a5_19 == 255<i32> l2307484E
l23074848:
	Mem22[a0 + 162<i32>:byte] = SLICE(a5_19 + 1<32>, byte, 0)
l2307484E:
	word32 a5_25 = Mem24[s2_17 + 16<i32>:int32]
	word32 s0_28 = 0<32>
	word32 a5_353
	branch (lwip_htons(CONVERT(Mem24[a5_25 + 12<i32>:byte], byte, word32) | CONVERT(Mem24[a5_25 + 13<i32>:byte], byte, word32) << 8<i32>, out a5_353) & 1<32>) == 0<32> l23074872
l2307486A:
	s0_28 = CONVERT(CONVERT(Mem24[s2_17 + 8<i32>:uint16], uint16, word32) <u 1<i32>, bool, word32)
l23074872:
	word32 a4_40 = Mem24[s2_17 + 16<i32>:int32]
	word32 a4_356
	word32 s1_354
	word32 a0_62
	word32 mstatus_70
	word32 s6_77
	word32 a3_355
	word32 a5_357
	word32 s3_358
	word32 s4_359
	word32 s5_360
	word32 s8_361
	word32 s2_114
	word32 ra_71 = tcp_output_alloc_header.constprop.5(ra, a0, s0_28 ^ 1<i32>, CONVERT(Mem24[a4_40 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem24[a4_40 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem24[a4_40 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem24[a4_40 + 4<i32>:byte], byte, word32))), mstatus, s4, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s1_354, out a0_62, out a3_355, out a4_356, out a5_357, out s2_114, out s3_358, out s4_359, out s5_360, out s6_77, out s8_361, out mstatus_70)
	word32 s3_120 = a0_62
	branch a0_62 == 0<32> l23074952
l23074952:
l23074942:
	return
l230748A0:
	word32 s4_97 = Mem24[a0_62 + 4<i32>:int32]
	branch s0_28 == 0<32> l23074922
l23074922:
	word32 a0_98 = Mem24[s2_114 + 4<i32>:int32]
	word32 s1_362
	word32 a0_363
	word32 a1_364
	word32 a2_365
	word32 a3_366
	word32 a4_367
	word32 a5_368
	word32 s4_369
	word32 s8_370
	pbuf_copy_partial(a0_98, s4_97 + 20<i32>, 1<32>, CONVERT(CONVERT(Mem24[a0_98 + 8<i32>:uint16] - Mem24[s2_114 + 8<i32>:uint16], uint16, uint16), uint16, word32), out s1_362, out a0_363, out a1_364, out a2_365, out a3_366, out a4_367, out a5_368, out s2_114, out s3_120, out s4_369, out s8_370)
l230748A6:
	word32 a5_371
	word32 a5_140 = CONVERT(SLICE(CONVERT(SLICE((CONVERT(Mem24[s4_97 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem24[s4_97 + 12<i32>:byte], byte, word32)) & 0xFC0000FF<32>, word16, 0), word16, int32) | lwip_htons(0x11<32>, out a5_371), word16, 0), word16, word32)
	Mem141[s4_97 + 12<i32>:byte] = SLICE(a5_140, byte, 0)
	Mem143[s4_97 + 13<i32>:byte] = SLICE(a5_140 >>u 8<i32>, byte, 0)
l230748D6:
	word32 a4_146 = Mem145[s2_114 + 16<i32>:int32]
	word32 a5_160
	word32 a3_372
	word32 a4_373
	word32 a0_157 = lwip_htonl(CONVERT(Mem145[a4_146 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem145[a4_146 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem145[a4_146 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem145[a4_146 + 4<i32>:byte], byte, word32))), out a3_372, out a4_373, out a5_160)
	word32 s1_161 = Mem145[a5_160 + 80<i32>:word32]
	word32 a5_163 = a5_160 - (a0_157 + 1<32>)
	branch a5_163 >= 0<32> l23074906
l23074904:
	Mem164[a0_157 + 0x51<32>:word32] = s1_161
l23074906:
l2307491E_thunk_tcp_output_control_segment:
	word32 s0_374
	word32 s1_375
	word32 a0_376
	word32 a3_377
	word32 a4_378
	word32 a5_379
	word32 s2_380
	word32 s3_381
	word32 s4_382
	word32 s5_383
	word32 s6_384
	word32 s7_385
	word32 s8_386
	word32 s9_387
	word32 mstatus_388
	tcp_output_control_segment(ra_71, s1_161, s3_120, dwArg48, s1_161 + 4<i32>, a5_163, s6_77, s7, mstatus_70, dwArgF8, dwArg0128, out s0_374, out s1_375, out a0_376, out a3_377, out a4_378, out a5_379, out s2_380, out s3_381, out s4_382, out s5_383, out s6_384, out s7_385, out s8_386, out s9_387, out mstatus_388)
	return
tcp_zero_window_probe_exit:


word32 sys_timeout_abs(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_cyclic_timer
//      sys_timeout
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 s0 s1 s8
// Trashed: a0 a2 a3 a4 a5 s0 s1 s8 t3 tp
// Preserved: sp
sys_timeout_abs_entry:
l23074956:
	word32 s0_28 = a0
	word32 a0_19
	word32 a5_20
	word32 a3_22
	word32 a2_21
	word32 a4_23
	word32 s1_24 = memp_malloc(s1, 0xB<32>, a3, a4, mstatus, out a0_19, out a2_21, out a3_22, out a4_23, out a5_20)
	branch a0_19 == 0<32> l23074986
l2307496A:
	a4_23 = Mem14[a5_20:word32]
	Mem30[a0_19:word32] = 0<32>
	Mem31[a1 + 8<i32>:word32] = a0_19
	Mem32[dwArg44 + 12<i32>:word32] = a0_19
	Mem33[a1 + 4<i32>:word32] = a0_19
	a2_21 = dwArg44
	s0_28 = a1
	branch a5_20 != 0<32> l2307498E
l2307498E:
	word32 a5_34 = Mem33[a3_22 + 4<i32>:word32]
	a3_22 = a1 - a3_22
	branch a3_22 >= 0<32> l2307499E
l2307499E:
	word32 a5_38 = Mem33[a4_23:word32]
	branch a4_23 == 0<32> l230749AC
l230749A2:
	a4_23 = Mem33[a3_22 + 4<i32>:word32]
	a3_22 = a1 - a3_22
	branch a3_22 >= 0<32> l2307499C
l2307499C:
l230749AC:
	Mem47[a4_23:word32] = a0_19
	Mem49[a0_19:word32] = a5_38
l23074998:
	Mem50[a5_34:word32] = a0_19
l23074984:
	Mem53[a0_19:word32] = a4_23
l23074986:
	s1Out = s1_24
	a0Out = a0_19
	a2Out = a2_21
	a3Out = a3_22
	a4Out = a4_23
	s8Out = a2
	return s0_28
sys_timeout_abs_exit:


void lwip_cyclic_timer(word32 ra, word32 s1, word32 a5, word32 mstatus, word32 dwArg44)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0044:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s8 t3 tp
// Preserved: sp
lwip_cyclic_timer_entry:
l230749B2:
	word32 a0_7 = Mem5[a5 + 4<i32>:word32]
	word32 a4_14
	call a5 (retsize: 0;)
		uses: a0:a0_7,a5:a5,mstatus:mstatus,ra:ra,s1:s1,Stack +0084:a0_7,Stack +008C:ra
		defs: a4:a4_14
	word32 a5_64
	word32 a3_27 = Mem8[0x4200F68C<32>:int32] + a4_14 - sys_now(out a5_64)
	branch a3_27 < 0<32> l230749E2
l230749E0:
l230749E2:
l230749E6_thunk_sys_timeout_abs:
	word32 s1_65
	word32 a0_66
	word32 a2_67
	word32 a3_68
	word32 a4_69
	word32 s8_70
	sys_timeout_abs(s1, 0x230749B2<32>, a3_27, a4_14, mstatus, dwArg44, out s1_65, out a0_66, out a2_67, out a3_68, out a4_69, out s8_70)
	return
lwip_cyclic_timer_exit:


word32 sys_timeout(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
//      tcp_timer_needed
//      tcpip_tcp_timer
//      sntp_recv
//      sntp_request
//      sntp_dns_found
//      sntp_init
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 s0 s1 s8
// Trashed: a0 a2 a3 a4 a5 s0 s1 s8 t3 tp
// Preserved: sp
sys_timeout_entry:
l230749EA:
	word32 a5_48
	sys_now(out a5_48)
l23074A06_thunk_sys_timeout_abs:
	word32 a0_26
	word32 a2_27
	word32 a3_28
	word32 a4_29
	word32 s1_32
	word32 s8_33
	word32 s0_31 = sys_timeout_abs(s1, a1, a3, a4, mstatus, dwArg44, out s1_32, out a0_26, out a2_27, out a3_28, out a4_29, out s8_33)
	s1Out = s1_32
	a0Out = a0_26
	a2Out = a2_27
	a3Out = a3_28
	a4Out = a4_29
	s8Out = s8_33
	return s0_31
sys_timeout_exit:


word32 tcp_timer_needed(word32 s1, word32 a3, word32 mstatus, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_listen_with_backlog_and_err
//      tcp_input
//      altcp_tcp_connect
//      altcp_tcp_bind
// MayUse:  a3:[0..31] mstatus:[0..31] s1:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 s0 s1 s8
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s8 t3 tp
// Preserved: sp
tcp_timer_needed_entry:
l23074A0A:
	word32 a4_10 = Mem0[0x4200F694<32>:int32]
	branch a4_10 != 0<32> l23074A42
l23074A18:
	branch Mem0[0x42026904<32>:int32] != 0<32> l23074A2C
l23074A22:
	a4_10 = Mem0[0x420268F8<32>:int32]
	branch a4_10 == 0<32> l23074A42
l23074A42:
	s1Out = s1
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4_10
	s8Out = s8
	return s0
l23074A2C:
	Mem17[1<32>:word32] = 0x4200F694<32>
l23074A3E_thunk_sys_timeout:
	word32 a0_25
	word32 a2_26
	word32 a3_27
	word32 a4_28
	word32 s1_31
	word32 s8_32
	word32 s0_30 = sys_timeout(s1, 0x23074A44<32>, a3, 1<32>, mstatus, dwArg44, out s1_31, out a0_25, out a2_26, out a3_27, out a4_28, out s8_32)
	s1Out = s1_31
	a0Out = a0_25
	a2Out = a2_26
	a3Out = a3_27
	a4Out = a4_28
	s8Out = s8_32
	return s0_30
tcp_timer_needed_exit:


void tcpip_tcp_timer(word32 ra, word32 s1, word32 a2, word32 s2, word32 s3, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArgFC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00FC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_tcp_timer_entry:
l23074A44:
	word32 a3_15
	word32 a4_16
	word32 mstatus_20
	word32 s1_23 = tcp_tmr(ra, s1, a2, s2, s3, s7, mstatus, dwLoc08, dwArg00, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg54, dwArg58, dwArg5C, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArgFC, out a3_15, out a4_16, out mstatus_20)
	branch Mem5[0x42026904<32>:int32] != 0<32> l23074A60
l23074A56:
	branch Mem5[0x420268F8<32>:int32] == 0<32> l23074A76
l23074A76:
	Mem47[0x4200F694<32>:word32] = 0<32>
	return
l23074A60:
l23074A72_thunk_sys_timeout:
	word32 a4_154
	word32 s8_155
	word32 a2_152
	word32 a3_153
	word32 s1_150
	word32 a0_151
	sys_timeout(s1_23, 0x23074A44<32>, a3_15, a4_16, mstatus_20, dwArg44, out s1_150, out a0_151, out a2_152, out a3_153, out a4_154, out s8_155)
	return
tcpip_tcp_timer_exit:


word32 sys_timeouts_init(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg38, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 s8 t3 tp
// Preserved: s0 sp
sys_timeouts_init_entry:
l23074A84:
l23074AA2:
	a0_64 = a0
	a4_65 = a4
	a3_66 = a3
	word32 s1_34
	word32 s8_63
	word32 a2_62
	branch s1_34 != sys_timeout(Mem13[a0_64:word32] + 8<32>, 0x230749B2<32>, a3_66, a4_65, mstatus, dwArg34, out s1_34, out a0, out a2_62, out a3, out a4, out s8_63) l23074AA2
l23074AB4:
	0<32> = dwArg38
	a1Out = 0x230749B2<32>
	a3Out = a3
	a4Out = a4
	return a0
sys_timeouts_init_exit:


word32 sys_untimeout(word32 a0, word32 a1, word32 mstatus, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sntp_recv
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31]
// LiveOut: a3 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 tp
// Preserved: sp
sys_untimeout_entry:
l23074AC0:
	word32 a5_19 = Mem0[0x4200F690<32>:int32]
	word32 a2_17 = 0<32>
	branch a5_19 != 0<32> l23074ADC
l23074ADC:
	word32 a5_12 = Mem0[0x4200F000<32>:word32]
	branch Mem0[a5_19 + 8<i32>:int32] != a0 l23074AD6
l23074AE6:
	branch Mem0[a5_12 + 12<i32>:int32] != a1 l23074AD6
l23074AD6:
	a2_17 = a5_12
	branch false l23074AD0
l23074ADA:
	a5_19 = 0x4200F000<32>
l23074AEE:
	branch a2_17 != 0<32> l23074AD2
l23074AD2:
	Mem21[0x4200F000<32>:word32] = a2_17
l23074AF0:
	Mem24[0x4200F000<32>:word32] = 0x4200F690<32>
l23074AF2:
l23074AF6_thunk_memp_free:
	word32 a3_37
	word32 a4_81
	word32 a5_82
	word32 a0_79
	word32 a2_80
	word32 s1_39 = memp_free(0xB<32>, a5_12, 0x4200F690<32>, 0x4200F000<32>, mstatus, out a0_79, out a2_80, out a3_37, out a4_81, out a5_82)
	a3Out = a3_37
	return s1_39
l23074AD0:
	a3Out = 0x4200F690<32>
	return s1
sys_untimeout_exit:


word32 sys_check_timeouts(word32 ra, word32 s0, word32 s1, word32 a1, word32 mstatus, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_thread
// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31]
// LiveOut: a1 a3 a4 a5 s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s2 s3 s4 s8 t3
// Preserved: mstatus ra s1 sp tp
sys_check_timeouts_entry:
l23074AFA:
	word32 a5_17
	word32 s2_18 = sys_now(out a5_17)
	word32 s3_19 = 0x4200F000<32>
	word32 s4_20 = 0x4200F000<32>
	s1_43 = s1
l23074B16:
	word32 mstatus_74
	word32 a3_69
	word32 a1_67
	word32 s1_43
	word32 a4_23 = Mem22[a1:word32]
	branch a1 == 0<32> l23074B42
l23074B1E:
	a1 = Mem22[a5_17 + 4<i32>:word32]
	a3 = s2_18 - a5_17
	branch a3 < 0<32> l23074B42
l23074B42:
	a1Out = a1
	a3Out = a3
	a4Out = a4_23
	a5Out = a5_17
	s2Out = s2_18
	s3Out = s3_19
	return s1
sys_check_timeouts_exit:
l23074B28:
	Mem42[a3:word32] = a4_23
	a1 = Mem42[s1_43 + 12<i32>:word32]
	Mem46[s4_20 + 1676<i32>:word32] = a5_17
	word32 a2_123
	word32 a4_124
	word32 a0_122
	s1_43 = memp_free(0xB<32>, a1, a3, a4_23, mstatus, out a0_122, out a2_123, out a3, out a4_124, out a5_17)
	branch s0 == 0<32> l23074B16
l23074B3C:
	word32 tp_75
	call s0 (retsize: 0;)
		uses: a0:s1_53,a1:a1_67,a3:a3_69,mstatus:mstatus_74,ra:ra_57,s0:s0_39,s1:s1_53,s2:s2_26,s3:s3_56,s4:s4_45,tp:tp_75
		defs: a1:a1_67,a3:a3_69,a5:a5_68,mstatus:mstatus_74,ra:ra_62,s0:s0_63,s1:s1_64,s2:s2_59,s3:s3_60,s4:s4_61,tp:tp_75
	a1 = a1_67
	mstatus = mstatus_74
	a3 = a3_69


word32 sys_timeouts_sleeptime(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_thread
// MayUse:  a5:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a5
// Preserved: s0 sp
sys_timeouts_sleeptime_entry:
l23074B52:
	word32 a0_11 = 0xFFFFFFFF<32>
	branch a5 == 0<32> l23074B78
l23074B66:
	word32 a5_13
	a0_11 = Mem10[a5_13 + 4<i32>:word32] - sys_now(out a5_13)
	branch a0_11 >= 0<32> l23074B78
l23074B76:
	a0_11 = 0<32>
l23074B78:
	return a0_11
sys_timeouts_sleeptime_exit:


word32 udp_init(word32 a0, word32 a2, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut: a0 a2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
udp_init_entry:
l23074B80:
	word32 a0_8
	word32 a1_30
	word32 a2_31
	word32 a3_32
	word32 a4_33
	word32 a5_34
	word32 s4_35
	word32 s8_36
	bl_rand(a0, a2, out a0_8, out a1_30, out a2_31, out a3_32, out a4_33, out a5_34, out s4_35, out s8_36)
	word32 a0_22 = CONVERT(SLICE(a0_8, word14, 0), word14, word32)
	Mem25[0x4200FCC2<32>:word16] = SLICE(a0_22 + 0xFC000000<32>, word16, 0)
	a2Out = dwArg10
	return a0_22 + 0xFC000000<32>
udp_init_exit:


word32 udp_input(word32 ra, word32 a0, word32 a1, word32 a2, word32 s5, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgE4, word32 dwArgE8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_input_entry:
l23074B9E:
	word32 a4_113
	Mem26[0x4202686E<32>:word16] = SLICE(CONVERT(Mem22[0x4202686E<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a3_211 = CONVERT(Mem26[a0 + 10<i32>:uint16], uint16, word32)
	branch a3_211 >u 7<32> l23074BFA
l23074BFA:
	word32 s3_218 = Mem26[a0 + 4<i32>:int32]
	word32 a5_782
	word32 a3_781
	word32 a0_40 = ip4_addr_isbroadcast_u32(Mem26[0x4202692C<32>:int32], Mem26[0x42026918<32>:int32], out a3_781, out a4_113, out a5_782)
	word32 a5_783
	word32 a0_50 = lwip_htons(CONVERT(Mem26[s3_218:byte], byte, word32) | CONVERT(Mem26[s3_218 + 1<i32>:byte], byte, word32) << 8<i32>, out a5_783)
	word32 a5_784
	word32 a0_57 = lwip_htons(CONVERT(Mem26[s3_218 + 2<i32>:byte], byte, word32) | CONVERT(Mem26[s3_218 + 3<i32>:byte], byte, word32) << 8<i32>, out a5_784)
	word32 a7_60 = Mem26[0x42026914<32>:int32]
	word32 s1_216 = a0
	word32 s5_220 = a1
	word32 s0_215 = 0x420267F0<32>
	word32 s4_219 = 0x42026918<32>
	word32 t3_61 = Mem26[0x4202691C<32>:int32]
	a3_211 = Mem26[0x4202692C<32>:int32]
	word32 t4_63 = Mem26[0x42026928<32>:int32]
	word32 a5_120 = a7_60
	word32 s2_108 = 0<32>
	word32 a6_128 = 0<32>
l23074C5E:
	branch a5_120 != 0<32> l23074C70
l23074C70:
	a4_113 = CONVERT(Mem26[a5_120 + 18<i32>:uint16], uint16, word32)
	branch a4_113 != a0_57 l23074CD4
l23074C78:
	a2 = CONVERT(Mem26[a5_120 + 8<i32>:byte], byte, word32)
	branch a2 == 0<32> l23074C8C
l23074C7E:
	a4_113 = CONVERT(Mem26[t3_61 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
	branch a2 != a4_113 l23074CD4
l23074C8C:
	a5_120 = Mem26[a4_113:word32]
	branch a0_40 == 0<32> l23074CCE
l23074CCE:
	branch a4_113 == 0<32> l23074CA6
l23074CD0:
	branch a4_113 == a3_211 l23074CA6
l23074C92:
	branch a4_113 == 0<32> l23074CA6
l23074C94:
	branch a3_211 == 0xFFFFFFFF<32> l23074CA6
l23074C98:
	a2 = (a4_113 ^ a3_211) & Mem26[a1 + 8<i32>:int32]
	branch a2 != 0<32> l23074CD4
l23074CA6:
	word32 a2_93 = CONVERT(Mem26[a5_120 + 16<i32>:byte], byte, word32)
	a2 = a2_93 & 4<32>
	branch (a2_93 & 4<32>) != 0<32> l23074CDC
l23074CAE:
	branch s2_108 == 0<32> l23074CCA
l23074CB2:
	branch a0_40 == 0<32> l23074CDA
l23074CB6:
	branch a3_211 != 0xFFFFFFFF<32> l23074CDA
l23074CDA:
	branch a4_113 != 0<32> l23074CCA
l23074CBA:
	a2 = Mem26[a1 + 4<i32>:int32]
	branch Mem26[s2_108:int32] == a2 l23074CDC
l23074CC6:
	branch a2 != a4_113 l23074CDC
l23074CCA:
	s2_108 = a5_120
l23074CDC:
	a4_113 = CONVERT(Mem26[a5_120 + 20<i32>:uint16], uint16, word32)
	branch a4_113 != a0_50 l23074CD4
l23074CE4:
	a5_120 = Mem26[a4_113 + 4<i32>:word32]
	branch a4_113 == 0<32> l23074CEC
l23074CE8:
	branch a4_113 != t4_63 l23074CD4
l23074CD4:
	a6_128 = a5_120
	a5_120 = Mem26[a5_120 + 12<i32>:word32]
l23074CEC:
	branch a6_128 == 0<32> l23074D42
l23074D42:
	Mem149[0x42026882<32>:word16] = SLICE(CONVERT(Mem26[0x42026882<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23074CF0:
	a5_120 = Mem26[a4_113 + 12<i32>:word32]
	Mem160[0x42027914<32>:word32] = a5_120
	Mem161[a6_128 + 12<i32>:word32] = a4_113
	Mem170[a5_120 + 12<i32>:word32] = a7_60
l23074CFE:
	s2_108 = a5_120
l23074C60:
	branch s2_108 != 0<32> l23074D00
l23074C64:
	branch Mem26[a1 + 4<i32>:int32] == a3_211 l23074D00
l23074D00:
	branch (CONVERT(Mem185[s3_218 + 7<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem185[s3_218 + 6<i32>:byte], byte, word32)) == 0<32> l23074D4E
l23074D0E:
	word32 a6_802
	word32 a0_208
	s0_215 = ip_chksum_pseudo(a0, 0x11<32>, CONVERT(Mem185[a0 + 8<i32>:uint16], uint16, word32), 0x42026928<32>, 0x4202692C<32>, out s1_216, out a0_208, out a2, out a3_211, out a4_113, out a6_802, out s2_108, out s3_218, out s4_219, out s5_220)
	branch a0_208 == 0<32> l23074D4E
l23074D4E:
	word32 a1_800
	word32 a5_801
	branch pbuf_remove_header(s1_216, 8<32>, a2, out a1_800, out a3_211, out a4_113, out a5_801) != 0<32> l23074D36
l23074D58:
	branch s2_108 == 0<32> l23074D8C
l23074D8C:
	branch a0_40 != 0<32> l23074DB8
l23074D90:
	a4_113 = 224<i32>
	branch (Mem185[s4_219 + 20<i32>:int32] & 240<i32>) == 224<i32> l23074DB8
l23074DA0:
	word32 s4_804
	word32 s2_803
	word32 a4_276
	ra = icmp_dest_unreach(ra, s0_215, s1_216, pbuf_header_force(s1_216, CONVERT(SLICE(CONVERT(Mem185[s4_219 + 12<i32>:uint16], uint16, word32) + 8<32>, word16, 0), word16, int32), a2, out a4_276), a4_276, a0_50, mstatus, dwLoc2C, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_215, out s1_216, out a3_211, out a4_113, out s2_803, out s4_804, out mstatus)
l23074DB8:
	Mem352[s0_215 + 140<i32>:word16] = SLICE(CONVERT(Mem185[s0_215 + 140<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23074D5C:
	word32 t1_353 = Mem185[s2_108 + 32<i32>:int32]
	branch t1_353 == 0<32> l23074C6C
l23074D64:
	word32 a0_355 = Mem185[s2_108 + 36<i32>:int32]
	0<32> = dwArg0128
	word32 s1_379
	word32 s9_403
	call t1_353 (retsize: 0;)
		uses: a0:a0_355,a1:s2_243,a2:dwArgB8,a3:0x42026928<32>,a4:a0_50,a6:dwArg98,mstatus:mstatus,ra:ra,s0:dwArgE4,s1:s1_225,s2:s2_243,s3:s3_368,s4:dwArg78,s5:s5_369,s6:a0_40,s7:a0_50,s8:s5,s9:s9_403,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0068:dwArg68,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +0098:dwArg98,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00E4:dwArgE4,Stack +00E8:dwArgE8,Stack +0100:dwArg0100,Stack +0104:dwArg0104,Stack +0128:dwArg0128,Stack +FFFFFFD4:dwLoc2C,t3:dwArg38,tp:dwArg0104
		defs: s1:s1_379,s9:s9_403
	return s1_379
l23074D2C:
	Mem406[s0_215 + 132<i32>:word16] = SLICE(CONVERT(Mem185[s0_215 + 132<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23074D36:
	Mem411[s0_215 + 130<i32>:word16] = SLICE(CONVERT(Mem408[s0_215 + 130<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23074C6C:
	a0 = s1_216
l23074BCE:
	Mem418[0x42026876<32>:word16] = SLICE(CONVERT(Mem26[0x42026876<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a4_419 = CONVERT(Mem418[0x42026872<32>:uint16], uint16, word32)
	Mem421[0x42026872<32>:word16] = SLICE(a4_419 + 1<32>, word16, 0)
	a4_113 = a4_419 + 1<32>
l23074BE2:
	0<32> = dwArg0128
l23074BF6_thunk_pbuf_free:
	word32 a2_788
	word32 a1_787
	word32 a7_792
	word32 s2_793
	word32 s8_798
	word32 s5_796
	word32 mstatus_799
	word32 s6_797
	word32 a5_791
	word32 s4_795
	word32 s3_794
	word32 s1_465
	word32 s0_785
	word32 a4_790
	word32 a0_786
	word32 a3_789
	pbuf_free(ra, a0, a3_211, a4_113, dwArg78, mstatus, dwArg0128, out s0_785, out s1_465, out a0_786, out a1_787, out a2_788, out a3_789, out a4_790, out a5_791, out a7_792, out s2_793, out s3_794, out s4_795, out s5_796, out s6_797, out s8_798, out mstatus_799)
	return s1_465
udp_input_exit:


word32 udp_bind(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_server_init
//      dns_init
//      dhcp_inc_pcb_refcount
//      udp_sendto
//      udp_connect
//      lwip_netconn_do_bind
//      dhcp_server_start
//      iperf_server_udp
//      sntp_init
//      bl_cipstart
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5 a6 t3
// Preserved: a2 a7 sp t1 t4
udp_bind_entry:
l23074DC4:
	branch a1 != 0<32> l23074DD0
l23074DC8:
	a1 = 0x230CBADC<32>
l23074DD0:
	word32 a0_109 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l23074E22
l23074DD4:
	a5 = Mem0[0x42026914<32>:int32]
	a3 = 0x42027000<32>
	word32 a0_14 = a5
l23074DDE:
	word32 t3_17
	branch a0_14 != 0<32> l23074E24
l23074E24:
	branch a0_14 == a0 l23074E2C
l23074E2C:
	t3_17 = 1<32>
l23074E28:
	a0_14 = Mem0[a0_14 + 12<i32>:word32]
l23074DE0:
	t3_17 = 0<32>
l23074DE2:
	branch a2 != 0<32> l23074E84
l23074E84:
	branch a5 != 0<32> l23074E56
l23074E56:
	branch a5 == a0 l23074E82
l23074E5A:
	branch (CONVERT(Mem0[a0 + 9<i32>:byte], byte, word32) & 4<32>) == 0<32> l23074E6A
l23074E62:
	branch (CONVERT(Mem0[a5 + 9<i32>:byte], byte, word32) & 4<32>) != 0<32> l23074E82
l23074E6A:
	word32 a0_34 = CONVERT(Mem0[a5 + 18<i32>:uint16], uint16, word32)
	branch a0_34 != a2 l23074E82
l23074E72:
	word32 a6_39 = Mem0[a1:int32]
	a5 = Mem0[a0_34:word32]
	branch a0_34 == a6_39 l23074E4C
l23074E7C:
	branch a6_39 == 0<32> l23074E4C
l23074E80:
	branch a0_34 == 0<32> l23074E4C
l23074E82:
	a5 = Mem0[a5 + 12<i32>:word32]
l23074E86:
l23074DE4:
	a2 = CONVERT(Mem0[0x4200ECC2<32>:uint16], uint16, word32)
	word32 a6_48 = 0x4000000<32>
l23074DF6:
	branch a2 == 0xFFFFFFF<32> l23074E30
l23074E30:
	a2 = 0xC000000<32>
l23074DFA:
	a2 = CONVERT(SLICE(a2 + 1<32>, word16, 0), word16, word32)
l23074E00:
	word32 a7_59 = a5
l23074E02:
	branch a7_59 != 0<32> l23074E34
l23074E34:
	branch CONVERT(Mem0[a7_59 + 18<i32>:uint16], uint16, word32) != a2 l23074E50
l23074E50:
	a7_59 = Mem0[a7_59 + 12<i32>:int32]
l23074E3C:
	a6_48 = CONVERT(SLICE(a6_48 + 0xFFFFFFFF<32>, word16, 0), word16, word32)
	branch a6_48 != 0<32> l23074DF6
l23074E48:
	Mem74[0x4200ECC2<32>:word16] = SLICE(a2, word16, 0)
l23074E4C:
	a3Out = 0x42027000<32>
	a4Out = <invalid>
	a5Out = a5
	return 0xFFFFFFF8<32>
l23074E06:
	Mem76[0x4200ECC2<32>:word16] = SLICE(a2, word16, 0)
l23074E0A:
	Mem87[a0 + 18<i32>:word16] = SLICE(a2, word16, 0)
	Mem88[a5:word32] = a0
	branch t3_17 != 0<32> l23074E20
l23074E16:
	a5 = Mem88[0x42026914<32>:int32]
	Mem107[0x42027914<32>:word32] = a0
	Mem108[a5 + 12<i32>:word32] = a0
l23074E20:
	a0_109 = 0<32>
l23074E22:
	a3Out = a3
	a4Out = <invalid>
	a5Out = a5
	return a0_109
udp_bind_exit:


word32 udp_sendto_if_src_chksum(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_sendto_if_chksum
//      udp_sendto_if_src
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_if_src_chksum_entry:
l23074E88:
	word32 s5_176
	word32 s7_26 = 0xFFFFFFF0<32>
	s5_176 = s5
	branch a0 == 0<32> l23074EE0
l23074EA4:
	s5_176 = s5
	branch a1 == 0<32> l23074EE0
l23074EA6:
	s5_176 = s5
	branch a2 == 0<32> l23074EE0
l23074EA8:
	s5_176 = s5
	branch a7 == 0<32> l23074EE0
l23074EAC:
	s5_176 = s5
	branch a4 == 0<32> l23074EE0
l23074EAE:
	word32 s8_154 = a5
	s1 = a0
	word32 s4_159 = a7
	word32 s0_171 = a6
	s5_176 = a4
	s9 = a3
	s3 = a2
	s2 = a1
	branch CONVERT(Mem25[a0 + 18<i32>:uint16], uint16, word32) == 0<32> l23074ED4
l23074ED4:
	word32 a0_46 = udp_bind(a0, a0, 0<32>, out a3, out a4, out a5)
	s7_26 = a0_46
	branch a0_46 == 0<32> l23074EC4
l23074EC4:
	a4 = CONVERT(Mem25[a1 + 8<i32>:uint16], uint16, word32)
	a5 = 0xFFFFFF7<32>
	branch a4 <=u 0xFFFFFF7<32> l23074EFC
l23074EFC:
	word32 s6_102
	word32 a3_64
	word32 a4_65
	word32 a5_593
	word32 a1_591
	word32 a2_592
	branch pbuf_add_header(a1, 8<32>, out a1_591, out a2_592, out a3_64, out a4_65, out a5_593) == 0<32> l23075012
l23075012:
	s6_102 = a1
l23074F08:
	word32 a7_596
	word32 a0_77
	word32 s6_597
	word32 a2_595
	word32 a1_594
	ra = pbuf_alloc(ra, a6, a0, 162<i32>, 8<32>, 640<i32>, a3_64, a4_65, mstatus, s8, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_171, out s1, out a0_77, out a1_594, out a2_595, out a3, out a4, out a5, out a7_596, out s2, out s3, out s4_159, out s5_176, out s6_597, out s8_154, out mstatus)
	s6_102 = a0_77
	branch a0_77 == 0<32> l23074ED0
l23074F1A:
	branch CONVERT(Mem25[s2 + 8<i32>:uint16], uint16, word32) == 0<32> l23074F26
l23074F20:
	pbuf_chain(a0_77, s2, a3, a4, mstatus)
l23074F26:
	word32 s7_114 = Mem25[s6_102 + 4<i32>:int32]
	word32 a5_598
	word32 a0_115 = lwip_htons(CONVERT(Mem25[s1 + 18<i32>:uint16], uint16, word32), out a5_598)
	Mem117[s7_114:byte] = SLICE(a0_115, byte, 0)
	Mem119[s7_114 + 1<i32>:byte] = SLICE(a0_115 >>u 8<i32>, byte, 0)
	word32 a5_599
	word32 a0_123 = lwip_htons(a3, out a5_599)
	Mem125[s7_114 + 2<i32>:byte] = SLICE(a0_123, byte, 0)
	Mem127[s7_114 + 3<i32>:byte] = SLICE(a0_123 >>u 8<i32>, byte, 0)
	Mem128[s7_114 + 6<i32>:byte] = 0<8>
	Mem129[s7_114 + 7<i32>:byte] = 0<8>
	branch (CONVERT(Mem129[s1 + 16<i32>:byte], byte, word32) & 8<32>) == 0<32> l23074F78
l23074F5C:
	branch (Mem129[s3:int32] & 240<i32>) != 224<i32> l23074F78
l23074F6C:
	Mem139[s6_102 + 13<i32>:byte] = SLICE(CONVERT(Mem129[s6_102 + 13<i32>:byte], byte, word32) | 4<i32>, byte, 0)
l23074F78:
	word32 a5_600
	word32 a0_143 = lwip_htons(CONVERT(Mem141[s6_102 + 8<i32>:uint16], uint16, word32), out a5_600)
	Mem146[s7_114 + 4<i32>:byte] = SLICE(a0_143, byte, 0)
	Mem148[s7_114 + 5<i32>:byte] = SLICE(a0_143 >>u 8<i32>, byte, 0)
	branch (CONVERT(Mem148[s1 + 16<i32>:byte], byte, word32) & 1<32>) != 0<32> l23074FCC
l23074F92:
	word32 a0_164
	word32 a2_152 = CONVERT(Mem148[s6_102 + 8<i32>:uint16], uint16, word32)
	branch s8_154 == 0<32> l23075016
l23075016:
	word32 a3_613
	word32 a2_612
	word32 a6_615
	word32 a4_614
	word32 s2_616
	s0_171 = ip_chksum_pseudo(s6_102, 0x11<32>, a2_152, s4_159, s3, out s1, out a0_164, out a2_612, out a3_613, out a4_614, out a6_615, out s2_616, out s3, out s4_159, out s5_176)
l23074F9A:
	word32 a0_191
	word32 a4_601
	word32 s0_198 = ip_chksum_pseudo_partial(s6_102, 0x11<32>, a2_152, 8<32>, s4_159, dwArgF8, out s1, out a0_191, out a4_601, out s3, out s4_159, out s5_176, out s6_102)
	word32 a0_209 = a0_191 + (s0_198 >>u 16<i32>)
	s0_171 = s0_198 >>u 16<i32>
	a0_164 = CONVERT(SLICE(a0_209 + (a0_209 >>u 0x10<u32>), word16, 0), word16, word32)
l23074FBC:
	branch a0_164 != 0<32> l23074FC2
l23074FBE:
	a0_164 = 0xFFFFFFF<32>
l23074FC2:
	Mem220[s7_114 + 6<i32>:byte] = SLICE(a0_164, byte, 0)
	Mem222[s7_114 + 7<i32>:byte] = SLICE(a0_164 >>u 8<i32>, byte, 0)
l23074FCC:
	word32 a3_233
	branch (Mem226[s3:int32] & 240<i32>) != 224<i32> l23075024
l23075024:
	a3_233 = CONVERT(Mem226[s1 + 11<i32>:byte], byte, word32)
l23074FDC:
	a3_233 = CONVERT(Mem226[s1 + 29<i32>:byte], byte, word32)
l23074FE0:
	word32 a0_272
	word32 a4_276
	word32 s4_285
	word32 s6_287
	ra = ip4_output_if_src(ra, s0_171, s1, s6_102, s4_159, s3, a3_233, CONVERT(Mem226[s1 + 10<i32>:byte], byte, word32), 0x11<32>, s5_176, s4_159, s5_176, s6_102, s7_114, out s1, out a0_272, out a3, out a4_276, out s2, out s3, out s4_285, out s5_176, out s6_287)
	s7_26 = a0_272
	branch s6_287 == s2 l23074FFE
l23074FF8:
	word32 a1_604
	word32 s8_611
	word32 s6_610
	word32 s4_609
	word32 a5_607
	word32 a7_608
	word32 a4_606
	word32 a2_605
	word32 s0_602
	word32 a0_603
	ra = pbuf_free(ra, s6_287, a3, a4_276, s4_285, mstatus, dwArgF8, out s0_602, out s1, out a0_603, out a1_604, out a2_605, out a3, out a4_606, out a5_607, out a7_608, out s2, out s3, out s4_609, out s5_176, out s6_610, out s8_611, out mstatus)
l23074FFE:
	word32 a4_338 = CONVERT(Mem226[0x4202686C<32>:uint16], uint16, word32)
	Mem340[0x4202686C<32>:word16] = SLICE(a4_338 + 1<32>, word16, 0)
	a5 = 0x420267F0<32>
	a4 = a4_338 + 1<32>
l23074ED0:
	s7_26 = 0xFFFFFFFF<32>
l23074EE0:
	0<32> = dwArg0128
	s0Out = s4
	s1Out = s1
	a0Out = s7_26
	a2Out = dwArgB8
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg78
	s5Out = s5_176
	s7Out = s7_26
	s8Out = s5
	s9Out = s9
	mstatusOut = mstatus
	return ra
udp_sendto_if_src_chksum_exit:


word32 udp_sendto_if_chksum(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_sendto_chksum
//      udp_sendto_if
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_if_chksum_entry:
l2307502A:
	branch a0 == 0<32> l2307505A
l2307502C:
	branch a1 == 0<32> l2307505A
l2307502E:
	branch a2 == 0<32> l2307505A
l23075030:
	branch a4 == 0<32> l2307505A
l2307505A:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s7Out = s7
	s8Out = s8
	s9Out = s9
	mstatusOut = mstatus
	return ra
l23075032:
	word32 a7_14
	word32 a7_9 = Mem0[a0:int32]
	branch a7_9 == 0<32> l23075046
l2307503A:
	branch (a7_9 & 240<i32>) != 224<i32> l2307504E
l2307504E:
	branch a7_9 != Mem0[a4 + 4<i32>:int32] l2307505E
l2307505E:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFFC<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s7Out = s7
	s8Out = s8
	s9Out = s9
	mstatusOut = mstatus
	return ra
l23075056:
	a7_14 = a0
l23075046:
	a7_14 = a4 + 4<i32>
l2307504A:
l2307504A_thunk_udp_sendto_if_src_chksum:
	word32 a0_47
	word32 a2_48
	word32 s0_50
	word32 s4_51
	word32 s7_52
	word32 s8_53
	word32 a3_57
	word32 a4_58
	word32 a5_59
	word32 s1_60
	word32 s2_61
	word32 s3_62
	word32 s5_63
	word32 s9_64
	word32 mstatus_73
	word32 ra_66 = udp_sendto_if_src_chksum(ra, a0, a1, a2, a3, a4, a5, a6, a7_14, s8, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_50, out s1_60, out a0_47, out a2_48, out a3_57, out a4_58, out a5_59, out s2_61, out s3_62, out s4_51, out s5_63, out s7_52, out s8_53, out s9_64, out mstatus_73)
	s0Out = s0_50
	s1Out = s1_60
	a0Out = a0_47
	a2Out = a2_48
	a3Out = a3_57
	a4Out = a4_58
	a5Out = a5_59
	s2Out = s2_61
	s3Out = s3_62
	s4Out = s4_51
	s5Out = s5_63
	s7Out = s7_52
	s8Out = s8_53
	s9Out = s9_64
	mstatusOut = mstatus_73
	return ra_66
udp_sendto_if_chksum_exit:


word32 udp_sendto_chksum(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_send_chksum
//      udp_sendto
//      lwip_netconn_do_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s3 s4 s5 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_chksum_entry:
l23075062:
	branch a0 == 0<32> l23075114
l23075064:
	branch a1 == 0<32> l23075114
l23075066:
	branch a2 == 0<32> l23075114
l23075114:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s9Out = s9
	mstatusOut = mstatus
	return ra
l23075068:
	word32 a3_242
	word32 a0_40
	word32 s0_22 = a0
	word32 a0_23 = CONVERT(Mem21[a0 + 8<i32>:byte], byte, word32)
	branch a0_23 == 0<32> l230750B6
l230750B6:
	word32 a2_32 = Mem21[a5:word32]
	word32 a5_34 = a5 & 240<i32>
	branch (a5 & 240<i32>) == 224<i32> l230750CC
l230750CC:
	word32 a0_35 = CONVERT(Mem21[a0 + 28<i32>:byte], byte, word32)
	branch a0_35 == 0<32> l230750FA
l230750FA:
	s0_22 = Mem21[(a5 & 240<i32>) + 24<i32>:word32]
	branch (a5 & 240<i32>) == 0<32> l230750C4
l230750FE:
	branch (a5 & 240<i32>) == Mem21[0x230CBAE0<32>:int32] l230750C4
l2307510A:
	word32 a4_355
	word32 a3_354
	a0_40 = ip4_route(a2_32, a5 & 240<i32>, out a2_32, out a3_354, out a4_355, out a5_34)
l230750D2:
	word32 a4_353
	a0_40 = netif_get_by_index(a0_35, out a4_353, out a5_34)
l230750D6:
	branch a0_40 == 0<32> l230750C4
l230750C4:
	word32 a4_351
	word32 a5_352
	word32 a2_350
	a0_40 = ip4_route(a2_32, a5_34, out a2_350, out a3_242, out a4_351, out a5_352)
l2307508A:
	word32 a5_349
	word32 a4_348
	a0_40 = netif_get_by_index(a0_23, out a4_348, out a5_349)
	a3_242 = a3
l2307508E:
	branch a0_40 != 0<32> l230750D8
l230750D8:
l230750F6_thunk_udp_sendto_if_chksum:
	word32 a0_112
	word32 a2_114
	word32 a3_115
	word32 a4_116
	word32 a5_117
	word32 mstatus_120
	word32 s0_122
	word32 s1_123
	word32 s3_125
	word32 s4_126
	word32 s5_127
	word32 s9_131
	word32 s8_358
	word32 s2_356
	word32 s7_357
	word32 ra_121 = udp_sendto_if_chksum(ra, s0_22, a1, dwArg48, a3, a0_40, a4, dwArg28, s4, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_122, out s1_123, out a0_112, out a2_114, out a3_115, out a4_116, out a5_117, out s2_356, out s3_125, out s4_126, out s5_127, out s7_357, out s8_358, out s9_131, out mstatus_120)
	s0Out = s0_122
	s1Out = s1_123
	a0Out = a0_112
	a2Out = a2_114
	a3Out = a3_115
	a4Out = a4_116
	a5Out = a5_117
	s3Out = s3_125
	s4Out = s4_126
	s5Out = s5_127
	s9Out = s9_131
	mstatusOut = mstatus_120
	return ra_121
l23075090:
	word32 a4_141 = CONVERT(Mem21[0x4202687A<32>:uint16], uint16, word32)
	Mem144[0x4202687A<32>:word16] = SLICE(a4_141 + 1<32>, word16, 0)
	s0Out = s1
	s1Out = a2
	a0Out = 0xFFFFFFFC<32>
	a2Out = dwArg48
	a3Out = a3_242
	a4Out = a4_141 + 1<32>
	a5Out = 0x420267F0<32>
	s3Out = a3
	s4Out = dwArg04
	s5Out = a5
	s9Out = s9
	mstatusOut = mstatus
	return ra
udp_sendto_chksum_exit:


word32 udp_send_chksum(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_send_chksum_entry:
l23075118:
	branch a0 == 0<32> l2307512C
l2307511E:
	branch a1 == 0<32> l2307512C
l2307512C:
	a0Out = 0xFFFFFFF0<32>
	a4Out = a2
	a5Out = a3
	mstatusOut = mstatus
	return s0
l23075120:
	word32 a3_11 = CONVERT(Mem0[a0 + 20<i32>:uint16], uint16, word32)
l23075128_thunk_udp_sendto_chksum:
	word32 a0_16
	word32 a4_20
	word32 a5_21
	word32 mstatus_24
	word32 s0_26
	word32 s9_137
	word32 s5_136
	word32 s3_134
	word32 s4_135
	word32 a3_133
	word32 a2_132
	word32 s1_131
	udp_sendto_chksum(ra, a0, a1, a0 + 4<i32>, a3_11, a2, a3, s4, mstatus, dwArg14, dwArg28, dwArg48, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_26, out s1_131, out a0_16, out a2_132, out a3_133, out a4_20, out a5_21, out s3_134, out s4_135, out s5_136, out s9_137, out mstatus_24)
	a0Out = a0_16
	a4Out = a4_20
	a5Out = a5_21
	mstatusOut = mstatus_24
	return s0_26
udp_send_chksum_exit:


word32 udp_sendto(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
//      udp_send
//      iperf_server_udp_recv_fn
//      sntp_dns_found
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s0 s1 s3 s4 s5 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_entry:
l23075130:
l23075134_thunk_udp_sendto_chksum:
	word32 a0_13
	word32 a2_15
	word32 a3_16
	word32 a4_17
	word32 mstatus_21
	word32 s0_23
	word32 s1_24
	word32 s3_26
	word32 s4_27
	word32 s5_28
	word32 s9_32
	word32 a5_62
	word32 ra_22 = udp_sendto_chksum(ra, a0, a1, a2, a3, 0<32>, 0<32>, s4, mstatus, dwArg14, dwArg28, dwArg48, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_23, out s1_24, out a0_13, out a2_15, out a3_16, out a4_17, out a5_62, out s3_26, out s4_27, out s5_28, out s9_32, out mstatus_21)
	s0Out = s0_23
	s1Out = s1_24
	a0Out = a0_13
	a2Out = a2_15
	a3Out = a3_16
	a4Out = a4_17
	s3Out = s3_26
	s4Out = s4_27
	s5Out = s5_28
	s9Out = s9_32
	mstatusOut = mstatus_21
	return ra_22
udp_sendto_exit:


word32 udp_send(word32 ra, word32 a0, word32 a1, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_send_data
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_send_entry:
l23075138:
	branch a0 == 0<32> l23075148
l2307513A:
	branch a1 == 0<32> l23075148
l23075148:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	s3Out = s3
	mstatusOut = mstatus
	return ra
l2307513C:
	word32 a3_7 = CONVERT(Mem0[a0 + 20<i32>:uint16], uint16, word32)
l23075144_thunk_udp_sendto:
	word32 a0_12
	word32 a2_14
	word32 a3_15
	word32 a4_16
	word32 mstatus_20
	word32 s1_23
	word32 s3_25
	word32 s9_137
	word32 s5_136
	word32 s0_134
	word32 s4_135
	word32 ra_21 = udp_sendto(ra, a0, a1, a0 + 4<i32>, a3_7, s4, mstatus, dwArg14, dwArg28, dwArg48, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_134, out s1_23, out a0_12, out a2_14, out a3_15, out a4_16, out s3_25, out s4_135, out s5_136, out s9_137, out mstatus_20)
	s1Out = s1_23
	a0Out = a0_12
	a2Out = a2_14
	a3Out = a3_15
	a4Out = a4_16
	s3Out = s3_25
	mstatusOut = mstatus_20
	return ra_21
udp_send_exit:


word32 udp_sendto_if(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_network_changed
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 mstatus ra s2 s3 s4 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_if_entry:
l2307514C:
l23075150_thunk_udp_sendto_if_chksum:
	word32 a3_17
	word32 a4_18
	word32 mstatus_22
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 s7_31
	word32 s8_32
	word32 s0_58
	word32 s1_59
	word32 a0_60
	word32 a2_61
	word32 a5_62
	word32 s5_63
	word32 s9_64
	word32 ra_23 = udp_sendto_if_chksum(ra, a0, a1, a2, a3, a4, 0<32>, 0<32>, s8, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_58, out s1_59, out a0_60, out a2_61, out a3_17, out a4_18, out a5_62, out s2_26, out s3_27, out s4_28, out s5_63, out s7_31, out s8_32, out s9_64, out mstatus_22)
	a3Out = a3_17
	a4Out = a4_18
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	s7Out = s7_31
	s8Out = s8_32
	mstatusOut = mstatus_22
	return ra_23
udp_sendto_if_exit:


word32 udp_sendto_if_src(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 mstatus ra s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_sendto_if_src_entry:
l23075154:
l2307515A_thunk_udp_sendto_if_src_chksum:
	word32 s4_20
	word32 a3_26
	word32 a4_27
	word32 s2_30
	word32 s3_31
	word32 mstatus_42
	word32 s0_58
	word32 s1_59
	word32 a0_60
	word32 a2_61
	word32 a5_62
	word32 s5_63
	word32 s7_64
	word32 s8_65
	word32 s9_66
	word32 ra_35 = udp_sendto_if_src_chksum(ra, a0, a1, a2, a3, a4, 0<32>, 0<32>, a5, s8, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_58, out s1_59, out a0_60, out a2_61, out a3_26, out a4_27, out a5_62, out s2_30, out s3_31, out s4_20, out s5_63, out s7_64, out s8_65, out s9_66, out mstatus_42)
	a3Out = a3_26
	a4Out = a4_27
	s2Out = s2_30
	s3Out = s3_31
	s4Out = s4_20
	mstatusOut = mstatus_42
	return ra_35
udp_sendto_if_src_exit:


word32 udp_bind_netif(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
udp_bind_netif_entry:
l2307515E:
	word32 a5_3 = 0<32>
	branch a1 == 0<32> l2307516C
l23075162:
	a5_3 = CONVERT(Mem0[a1 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
l2307516C:
	Mem12[a0 + 8<i32>:byte] = SLICE(a5_3, byte, 0)
	return a5_3
udp_bind_netif_exit:


word32 udp_connect(word32 a0, word32 a1, word32 a2, word32 dwArg38, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_inc_pcb_refcount
//      lwip_netconn_do_connect
//      bl_cipstart
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..15] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 a5 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 t3 tp
// Preserved: s0 sp
udp_connect_entry:
l23075172:
	branch a0 == 0<32> l230751DA
l23075176:
	branch a1 == 0<32> l230751DA
l230751DA:
	a3Out = a3
	a4Out = a4
	a5Out = 0xFFFFFFF0<32>
	s2Out = s2
	return 0xFFFFFFF0<32>
l23075178:
	word32 a4_106
	word32 a3_101
	word32 a5_17 = CONVERT(Mem16[a0 + 18<i32>:uint16], uint16, word32)
	branch a5_17 == 0<32> l230751B8
l230751B8:
	word32 a5_144
	word32 a0_24 = udp_bind(a0, a0, 0<32>, out a3_101, out a4_106, out a5_144)
	a5_17 = a0_24
	branch a0_24 == 0<32> l2307518E
l2307518E:
	Mem37[a0 + 20<i32>:word16] = SLICE(a2, word16, 0)
	Mem38[a5_17 + 4<i32>:word32] = a0
	Mem41[a0 + 16<i32>:byte] = SLICE(CONVERT(Mem38[a0 + 16<i32>:byte], byte, word32) | 4<i32>, byte, 0)
	a3_101 = Mem41[0x42026914<32>:int32]
	a4_106 = a3_101
l230751AC:
	branch a4_106 != 0<32> l230751D2
l230751D2:
	branch a4_106 == a0 l230751B4
l230751D6:
	a4_106 = Mem41[a4_106 + 12<i32>:word32]
l230751AE:
	Mem50[a3_101 + 12<i32>:word32] = a0
	Mem52[0x42027914<32>:word32] = a0
l230751B4:
	a5_17 = 0<32>
l230751C4:
	0<32> = dwArg38
	a3Out = a3_101
	a4Out = a4_106
	a5Out = a5_17
	s2Out = a2
	return a5_17
udp_connect_exit:


word32 udp_disconnect(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_disconnect
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
udp_disconnect_entry:
l230751DE:
	branch a0 == 0<32> l230751F6
l230751E0:
	word32 a5_5 = CONVERT(Mem0[a0 + 16<i32>:byte], byte, word32)
	Mem6[a0 + 4<i32>:word32] = 0<32>
	Mem7[a0 + 20<i32>:word16] = 0<16>
	Mem9[a0 + 8<i32>:byte] = 0<8>
	Mem10[a0 + 16<i32>:byte] = SLICE(a5_5 & 0xFFFFFFFB<32>, byte, 0)
	a5 = a5_5 & 0xFFFFFFFB<32>
l230751F6:
	return a5
udp_disconnect_exit:


void udp_recv(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_server_init
//      dns_init
//      dhcp_inc_pcb_refcount
//      lwip_netconn_do_newconn
//      dhcp_server_start
//      iperf_server_udp
//      sntp_init
//      bl_cipstart
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
udp_recv_entry:
l230751F8:
	branch a0 == 0<32> l230751FE
l230751FA:
	Mem5[a1 + 32<i32>:word32] = a0
	Mem7[a2 + 36<i32>:word32] = a0
l230751FE:
	return
udp_recv_exit:


word32 udp_remove(word32 a0, word32 a3, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_server_init
//      dhcp_dec_pcb_refcount
//      lwip_netconn_do_delconn
//      dhcp_server_stop
//      iperf_server_udp
//      bl_cipstart
//      bl_cipclose
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
udp_remove_entry:
l23075200:
	word32 a1_14 = a0
	branch a0 == 0<32> l2307522E
l2307522E:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l23075204:
	word32 a5_13 = Mem0[0x42026914<32>:int32]
	branch a5_13 != a0 l2307521E
l2307521E:
	branch a5_13 == 0<32> l23075216
l23075220:
	word32 a5_11 = Mem0[0x4202700C<32>:word32]
	branch false l23075216
l23075224:
	branch a0 != 0x42027000<32> l2307521C
l2307521C:
	a5_13 = 0x42027000<32>
l23075228:
	a1_14 = Mem0[0x4202700C<32>:word32]
	Mem15[0x4202700C<32>:word32] = a5_11
l23075210:
	Mem17[0x42027914<32>:word32] = a5_13
l23075216:
l23075218_thunk_memp_free:
	word32 a5_27
	word32 a0_28
	word32 a2_29
	word32 a3_30
	word32 a4_31
	word32 s1_32 = memp_free(1<32>, a1_14, a3, 0x42027000<32>, mstatus, out a0_28, out a2_29, out a3_30, out a4_31, out a5_27)
	a0Out = a0_28
	a2Out = a2_29
	a3Out = a3_30
	a4Out = a4_31
	a5Out = a5_27
	return s1_32
udp_remove_exit:


word32 udp_new(word32 ra, word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_server_init
//      dhcp_inc_pcb_refcount
//      udp_new_ip_type
//      dhcp_server_start
//      iperf_server_udp
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
udp_new_entry:
l23075230:
	word32 a0_13
	word32 a2_63
	word32 a3_16
	word32 a4_17
	word32 a5_14
	word32 s1_18 = memp_malloc(s1, 1<32>, a3, a4, mstatus, out a0_13, out a2_63, out a3_16, out a4_17, out a5_14)
	branch a0_13 == 0<32> l23075254
l23075240:
	word32 t1_64
	word32 a0_65
	word32 a1_66
	word32 a2_67
	word32 a5_68
	ra = memset(ra, a0_13, 0<32>, 40<i32>, out t1_64, out a0_65, out a1_66, out a2_67, out a3_16, out a4_17, out a5_68)
	Mem33[a0_13 + 11<i32>:byte] = 0xFF<8>
	Mem34[a0_13 + 29<i32>:byte] = 0xFF<8>
	a5_14 = 0xFFFFFFFF<32>
l23075254:
	s1Out = s1_18
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_14
	return ra
udp_new_exit:


word32 udp_new_ip_type(word32 ra, word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_init
//      lwip_netconn_do_newconn
//      sntp_init
//      bl_cipstart
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: sp
udp_new_ip_type_entry:
l2307525E:
l2307525E_thunk_udp_new:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 s1_12
	word32 ra_15 = udp_new(ra, s1, a3, a4, mstatus, out s1_12, out a3_9, out a4_10, out a5_11)
	s1Out = s1_12
	a3Out = a3_9
	a4Out = a4_10
	a5Out = a5_11
	return ra_15
udp_new_ip_type_exit:


word32 udp_netif_ip_addr_changed(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_remove
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a5
// Preserved: sp
udp_netif_ip_addr_changed_entry:
l23075262:
	branch a0 == 0<32> l23075278
l23075264:
	branch a5 == 0<32> l23075278
l23075268:
	branch a1 == 0<32> l23075278
l2307526A:
	branch a5 == 0<32> l23075278
l2307526E:
	a5 = Mem0[0x42026914<32>:int32]
l23075276:
	branch a5 != 0<32> l2307527A
l2307527A:
	word32 a5_14 = Mem13[a3:word32]
	branch a3 != a4 l23075286
l23075282:
	Mem18[a4:word32] = a5_14
l23075286:
	a5 = Mem20[a5_14 + 12<i32>:word32]
l23075278:
	return a5
udp_netif_ip_addr_changed_exit:


void ethernet_input(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s3, word32 s4, word32 s5, word32 s6, word32 s8, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg94, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgAC, word32 dwArgB0, word32 dwArgB4, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
ethernet_input_entry:
l2307528A:
	word32 a4_194
	word32 s0_15 = a0
	branch CONVERT(Mem11[a0 + 10<i32>:uint16], uint16, word32) >u 0xE<32> l230752B4
l230752B4:
	branch CONVERT(Mem11[a0 + 15<i32>:byte], byte, word32) != 0<32> l230752C6
l230752BC:
	Mem21[a0 + 15<i32>:byte] = SLICE(CONVERT(Mem11[a1 + 68<i32>:byte], byte, word32) + 1<32>, byte, 0)
l230752C6:
	word32 a5_29 = CONVERT(Mem23[a0:byte], byte, word32)
	s0_15 = Mem23[a0 + 4<i32>:word32]
	word32 s1_28 = CONVERT(Mem23[a0 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem23[a0 + 12<i32>:byte], byte, word32)
	a4_194 = a5_29 & 1<i32>
	branch (a5_29 & 1<i32>) == 0<32> l23075302
l230752DE:
	word32 a5_42
	a4_194 = 1<32>
	branch a5_29 != 1<32> l23075346
l23075346:
	word32 a5_485
	word32 a1_484
	branch memcmp(a0, 0x230CBAEC<32>, 6<32>, out a1_484, out a2, out a3, out a4_194, out a5_485) != 0<32> l23075302
l23075356:
	a5_42 = CONVERT(Mem23[s0_15 + 13<i32>:byte], byte, word32) | 8<i32>
l230752E4:
	branch CONVERT(Mem23[a0 + 1<i32>:byte], byte, word32) != 0<32> l23075302
l230752EA:
	a4_194 = CONVERT(Mem23[a0 + 2<i32>:byte], byte, word32)
	branch a4_194 != 94<i32> l23075302
l230752F6:
	a5_42 = CONVERT(Mem23[s0_15 + 13<i32>:byte], byte, word32) | 16<i32>
l230752FE:
	Mem50[s0_15 + 13<i32>:byte] = SLICE(a5_42, byte, 0)
l23075302:
	branch s1_28 == 8<32> l23075360
l23075360:
	branch (CONVERT(Mem57[a1 + 65<i32>:byte], byte, word32) & 8<32>) == 0<32> l2307533E
l23075368:
	word32 a5_506
	word32 a1_505
	branch pbuf_remove_header(s0_15, 0xE<32>, a2, out a1_505, out a3, out a4_194, out a5_506) != 0<32> l2307533E
l23075372:
	ip4_input(ra, s0_15, s0_15, a1, a3, s3, s4, s5, s6, s8, s10, s11, mstatus, s0, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg3C, dwArg58, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA4, dwArgA8, dwArgAC, dwArgB8, dwArgC0, dwArgC4, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168)
l23075308:
	branch s1_28 != 1544<i32> l230752A0
l23075310:
	branch (CONVERT(Mem57[a1 + 65<i32>:byte], byte, word32) & 8<32>) == 0<32> l2307533E
l23075318:
	word32 a4_503
	word32 a5_504
	word32 a1_502
	branch pbuf_remove_header(s0_15, 0xE<32>, a2, out a1_502, out a3, out a4_503, out a5_504) == 0<32> l23075388
l23075388:
	etharp_input(ra, s1_28, a1, a3, a1, s4, mstatus, s0, dwLoc08, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, dwArg54, dwArg58, dwArg68, s1, ra, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB0, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0148, dwArg0188)
l23075322:
	Mem184[0x42026812<32>:word16] = SLICE(CONVERT(Mem57[0x42026812<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l230752A0:
	Mem190[0x42026818<32>:word16] = SLICE(CONVERT(Mem187[0x42026818<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23075334:
	word32 a4_193 = CONVERT(Mem192[0x4202680E<32>:uint16], uint16, word32)
	Mem195[0x4202680E<32>:word16] = SLICE(a4_193 + 1<32>, word16, 0)
	a4_194 = a4_193 + 1<32>
l2307533E:
	word32 a1_489
	word32 a0_488
	word32 s0_486
	word32 s1_487
	word32 s2_495
	word32 a7_494
	word32 a4_492
	word32 a5_493
	word32 a2_490
	word32 a3_491
	word32 s4_497
	word32 s5_498
	word32 s8_500
	word32 mstatus_501
	word32 s3_496
	word32 s6_499
	pbuf_free(ra, s0_15, a3, a4_194, s4, mstatus, dwArg0118, out s0_486, out s1_487, out a0_488, out a1_489, out a2_490, out a3_491, out a4_492, out a5_493, out a7_494, out s2_495, out s3_496, out s4_497, out s5_498, out s6_499, out s8_500, out mstatus_501)
l2307537A:
	0<32> = dwArg38
	return
ethernet_input_exit:


word32 ethernet_output(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 dwArg38, word32 dwArg58, word32 dwArg74, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_request
//      etharp_output_to_arp_index
//      etharp_query
//      etharp_output
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ethernet_output_entry:
l23075392:
	word32 a5_170
	word32 a0_26 = lwip_htons(a4, out a5_170)
	word32 a3_34
	word32 a1_171
	word32 a2_172
	word32 a4_173
	word32 a5_174
	branch pbuf_add_header(a1, 0xE<32>, out a1_171, out a2_172, out a3_34, out a4_173, out a5_174) != 0<32> l230753F8
l230753F8:
	word32 a4_40 = CONVERT(Mem25[0x420267FA<32>:uint16], uint16, word32)
	Mem43[0x420267FA<32>:word16] = SLICE(a4_40 + 1<32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = a0_26
	a3Out = a3_34
	a4Out = a4_40 + 1<32>
	s2Out = a1
	s3Out = a0
	s4Out = a2
	return ra
l230753BC:
	word32 s0_50 = Mem25[a1 + 4<i32>:int32]
	Mem53[s0_50 + 12<i32>:byte] = SLICE(a0_26, byte, 0)
	Mem55[s0_50 + 13<i32>:byte] = SLICE(a0_26 >>u 8<i32>, byte, 0)
	word32 a1_175
	word32 a2_176
	word32 a3_177
	word32 a4_178
	word32 a5_179
	word32 a6_180
	word32 a7_181
	memcpy(s0_50, a3_34, 6<32>, out a1_175, out a2_176, out a3_177, out a4_178, out a5_179, out a6_180, out a7_181)
	word32 a4_73
	word32 a3_78
	word32 a1_182
	word32 a2_183
	word32 a5_184
	word32 a6_185
	word32 a7_186
	memcpy(s0_50 + 6<i32>, a2, 6<32>, out a1_182, out a2_183, out a3_78, out a4_73, out a5_184, out a6_185, out a7_186)
	word32 t1_87 = Mem55[a0 + 24<i32>:int32]
	0<32> = dwArg0128
	word32 s3_96
	word32 a4_98
	word32 a3_99
	word32 ra_100
	word32 s1_101
	word32 s2_102
	word32 s4_103
	word32 s0_106
	word32 t1_107
	word32 a7_112
	word32 a6_113
	word32 t0_114
	word32 t4_115
	word32 t5_116
	word32 t6_117
	call t1_87 (retsize: 0;)
		uses: a0:a0,a1:a1,a2:dwArg0100,a3:a3_78,a4:a4_73,a6:a6_113,a7:a7_112,ra:ra,s0:dwArgE4,s1:a0_26 >>u 8<i32>,s2:a1,s3:a0,s4:a2,s8:dwArg58,Stack +0038:dwArg38,Stack +0058:dwArg58,Stack +0074:dwArg74,Stack +00E4:dwArgE4,Stack +0100:dwArg0100,Stack +0104:dwArg0104,Stack +0128:dwArg0128,t0:t0_114,t1:t1_107,t3:dwArg38,t4:t4_115,t5:t5_116,t6:t6_117,tp:dwArg0104
		defs: a3:a3_99,a4:a4_98,a6:a6_113,a7:a7_112,ra:ra_100,s0:s0_106,s1:s1_101,s2:s2_102,s3:s3_96,s4:s4_103,t0:t0_114,t1:t1_107,t4:t4_115,t5:t5_116,t6:t6_117
	s0Out = s0_106
	s1Out = s1_101
	a3Out = a3_99
	a4Out = a4_98
	s2Out = s2_102
	s3Out = s3_96
	s4Out = s4_103
	return ra_100
ethernet_output_exit:


word32 netconn_apimsg(word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArgB8, word32 dwArgF8, word32 dwArg0138, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_close_shutdown
//      netconn_new_with_proto_and_callback
//      netconn_prepare_delete
//      netconn_getaddr
//      netconn_bind
//      netconn_connect
//      netconn_disconnect
//      netconn_listen_with_backlog
//      netconn_tcp_recvd
//      netconn_send
//      netconn_write_vectors_partly
//      netconn_recv_tcp_pbuf_flags
//      netconn_join_leave_group
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netconn_apimsg_entry:
l2307541C:
	word32 a3_19
	word32 a4_20
	word32 a5_21
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 s5_29
	word32 s6_30
	word32 a0_16
	word32 s0_24 = tcpip_send_msg_wait_sem(Mem0[a2:word32], a2 + 0xC<32>, a4, a5, mstatus, dwArg04, dwArgB8, dwArgF8, dwArg0138, out s1_25, out a0_16, out a3_19, out a4_20, out a5_21, out s2_26, out s3_27, out s4_28, out s5_29, out s6_30)
	branch a0_16 != 0<32> l23075432
l2307542E:
	a0_16 = CONVERT(Mem11[s0_24 + 4<i32>:int8], int8, int32)
l23075432:
	a0Out = a0_16
	a2Out = dwArg10
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_21
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	s5Out = s5_29
	s6Out = s6_30
	return s1_25
netconn_apimsg_exit:


void netconn_close_shutdown(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_recv_tcp_pbuf_flags
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_close_shutdown_entry:
l2307543A:
	branch a0 == 0<32> l23075460
l23075460:
	return
l2307543C:
	word32 a5_12
	sys_now(out a5_12)
	word32 a0_94
	word32 a2_95
	word32 a3_96
	word32 a4_97
	word32 a5_98
	word32 s2_99
	word32 s3_100
	word32 s4_101
	word32 s5_102
	word32 s6_103
	netconn_apimsg(a2, a4, a5_12, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_94, out a2_95, out a3_96, out a4_97, out a5_98, out s2_99, out s3_100, out s4_101, out s5_102, out s6_103)
	return
netconn_close_shutdown_exit:


word32 netconn_new_with_proto_and_callback(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_socket
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0044:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_new_with_proto_and_callback_entry:
l23075464:
	word32 a2_20
	word32 a5_23
	word32 s3_168
	word32 a4_101
	word32 a3_100
	word32 s2_147
	word32 a0_27 = netconn_alloc(ra, a0, a3, a4, mstatus, dwLoc40, dwLoc3C, dwLoc08, dwArg44, dwArgB8, dwArgF8, dwArg0138, out a2_20, out a3_100, out a4_101, out a5_23, out s2_147, out s3_168)
	word32 s0_104 = a0_27
	branch a0_27 == 0<32> l230754C2
l2307547A:
	word32 a0_40
	word32 a2_169
	word32 a5_170
	word32 s3_171
	word32 s4_172
	word32 s6_173
	netconn_apimsg(a2_20, a4_101, a5_23, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_40, out a2_169, out a3_100, out a4_101, out a5_170, out s2_147, out s3_171, out s4_172, out s5, out s6_173)
	branch a0_40 == 0<32> l230754C2
l23075490:
	sys_mbox_valid(a0_27 + 16<i32>)
	sys_mbox_valid(a0_27 + 20<i32>)
	sys_sem_valid(a0_27 + 12<i32>)
	word32 a3_74
	word32 a4_75
	word32 s1_79
	word32 a5_174
	word32 s4_175
	word32 s0_78 = sys_sem_free(a0_27 + 12<i32>, a3_100, mstatus, dwArg0118, dwArg0158, out s1_79, out a3_74, out a4_75, out a5_174, out s4_175)
	word32 a3_87
	word32 a4_88
	word32 a0_176
	word32 a2_177
	word32 a5_178
	word32 s4_179
	sys_mbox_free(s1_79, a3_74, a4_75, mstatus, dwArg0108, dwArg0148, out a0_176, out a2_177, out a3_87, out a4_88, out a5_178, out s4_179)
	word32 a0_180
	word32 a2_181
	word32 a5_182
	memp_free(7<32>, s0_78, a3_87, a4_88, mstatus, out a0_180, out a2_181, out a3_100, out a4_101, out a5_182)
	s2_147 = a0_27 + 12<i32>
	s0_104 = 0<32>
l230754C2:
	a3Out = a3_100
	a4Out = a4_101
	s2Out = s2_147
	s5Out = s5
	return s0_104
netconn_new_with_proto_and_callback_exit:


word32 netconn_prepare_delete(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_close
//      netconn_delete
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_prepare_delete_entry:
l230754D0:
	branch a0 == 0<32> l230754F2
l230754F2:
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return s1
l230754D2:
	word32 a5_10
	sys_now(out a5_10)
	word32 a0_18
	word32 a3_21
	word32 a4_22
	word32 a5_23
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 a2_100
	word32 s6_101
	word32 s1_26 = netconn_apimsg(a2, a4, a5_10, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_18, out a2_100, out a3_21, out a4_22, out a5_23, out s2_27, out s3_28, out s4_29, out s5_30, out s6_101)
	a0Out = a0_18
	a3Out = a3_21
	a4Out = a4_22
	a5Out = a5_23
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	return s1_26
netconn_prepare_delete_exit:


word32 netconn_delete(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg68, word32 dwArgA8, word32 dwArgE8, word32 dwArg0138, word32 dwArg0178, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free_socket
//      lwip_accept
//      lwip_socket
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 a5 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netconn_delete_entry:
l230754F6:
	word32 s1_10 = 0<32>
	branch a0 == 0<32> l23075512
l23075502:
	word32 a0_16
	netconn_prepare_delete(a0, a2, a4, mstatus, dwArg68, dwArgA8, dwArgE8, out a0_16, out a3, out a4, out a5, out s2, out s3, out s4, out s5)
	s1_10 = a0_16
	branch a0_16 != 0<32> l23075512
l2307550C:
	s1_10 = netconn_free(a0, a3, mstatus, dwArg0138, dwArg0178, out a3, out a4, out a5, out s4)
l23075512:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return s1_10
netconn_delete_exit:


word32 netconn_getaddr(word32 a0, word32 a1, word32 a2, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_accept
//      lwip_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a2 a4 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_getaddr_entry:
l2307551E:
	branch a0 == 0<32> l2307554A
l2307554A:
	a2Out = a2
	a4Out = a4
	s2Out = s2
	s3Out = s3
	return 0xFFFFFFF0<32>
l23075520:
	branch a1 == 0<32> l2307554E
l23075526:
	branch a2 == 0<32> l2307554E
l2307554E:
	a2Out = a2
	a4Out = a4
	s2Out = s2
	s3Out = s3
	return 0xFFFFFFF0<32>
l23075528:
	word32 a0_22
	word32 a2_24
	word32 a4_26
	word32 s2_31
	word32 s3_32
	word32 s6_127
	word32 s5_126
	word32 s4_125
	word32 a5_124
	word32 a3_123
	netconn_apimsg(a2, a4, a0, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_22, out a2_24, out a3_123, out a4_26, out a5_124, out s2_31, out s3_32, out s4_125, out s5_126, out s6_127)
	a2Out = a2_24
	a4Out = a4_26
	s2Out = s2_31
	s3Out = s3_32
	return a0_22
netconn_getaddr_exit:


word32 netconn_bind(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_bind
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_bind_entry:
l23075550:
	branch a0 == 0<32> l2307557C
l2307557C:
	a3Out = a3
	return 0xFFFFFFF0<32>
l23075552:
	branch a1 != 0<32> l23075560
l23075558:
l23075560:
	word32 a0_28
	word32 a3_31
	word32 a2_107
	word32 a4_108
	word32 a5_109
	word32 s2_110
	word32 s3_111
	word32 s4_112
	word32 s5_113
	word32 s6_114
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_28, out a2_107, out a3_31, out a4_108, out a5_109, out s2_110, out s3_111, out s4_112, out s5_113, out s6_114)
	a3Out = a3_31
	return a0_28
netconn_bind_exit:


word32 netconn_connect(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_connect
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_connect_entry:
l23075580:
	branch a0 == 0<32> l230755AC
l230755AC:
	a3Out = a3
	return 0xFFFFFFF0<32>
l23075582:
	branch a1 != 0<32> l23075590
l23075588:
l23075590:
	word32 a0_28
	word32 a3_31
	word32 a2_107
	word32 a4_108
	word32 a5_109
	word32 s2_110
	word32 s3_111
	word32 s4_112
	word32 s5_113
	word32 s6_114
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_28, out a2_107, out a3_31, out a4_108, out a5_109, out s2_110, out s3_111, out s4_112, out s5_113, out s6_114)
	a3Out = a3_31
	return a0_28
netconn_connect_exit:


word32 netconn_disconnect(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_connect
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_disconnect_entry:
l230755B0:
	branch a0 == 0<32> l230755CC
l230755CC:
	a3Out = a3
	return 0xFFFFFFF0<32>
l230755B2:
	word32 a0_16
	word32 a3_19
	word32 a2_89
	word32 a4_90
	word32 a5_91
	word32 s2_92
	word32 s3_93
	word32 s4_94
	word32 s5_95
	word32 s6_96
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_16, out a2_89, out a3_19, out a4_90, out a5_91, out s2_92, out s3_93, out s4_94, out s5_95, out s6_96)
	a3Out = a3_19
	return a0_16
netconn_disconnect_exit:


word32 netconn_listen_with_backlog(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_listen
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_listen_with_backlog_entry:
l230755D0:
	branch a0 == 0<32> l230755EC
l230755EC:
	a3Out = a3
	s2Out = s2
	return 0xFFFFFFF0<32>
l230755D2:
	word32 a0_16
	word32 a3_19
	word32 s2_25
	word32 a2_90
	word32 a4_91
	word32 a5_92
	word32 s3_93
	word32 s4_94
	word32 s5_95
	word32 s6_96
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_16, out a2_90, out a3_19, out a4_91, out a5_92, out s2_25, out s3_93, out s4_94, out s5_95, out s6_96)
	a3Out = a3_19
	s2Out = s2_25
	return a0_16
netconn_listen_with_backlog_exit:


void netconn_tcp_recvd(word32 a0, word32 a2, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recv_tcp
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_tcp_recvd_entry:
l230755F0:
	branch a0 == 0<32> l23075620
l23075620:
	return
l230755F2:
	word32 a4_6 = CONVERT(Mem0[a0:byte], byte, word32)
	branch (a4_6 & 240<i32>) != 0x10<32> l23075624
l23075624:
	return
l23075604:
	word32 a0_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a5_100
	word32 s2_101
	word32 s3_102
	word32 s4_103
	word32 s5_104
	word32 s6_105
	netconn_apimsg(a2, a4_6 & 240<i32>, a0, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_96, out a2_97, out a3_98, out a4_99, out a5_100, out s2_101, out s3_102, out s4_103, out s5_104, out s6_105)
	return
netconn_tcp_recvd_exit:


word32 netconn_send(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a4Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a3 a4 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_send_entry:
l23075626:
	branch a0 == 0<32> l23075644
l23075644:
	a4Out = a4
	s4Out = s4
	return a3
l23075628:
	word32 a3_21
	word32 a4_22
	word32 s4_29
	word32 a0_92
	word32 a2_93
	word32 a5_94
	word32 s2_95
	word32 s3_96
	word32 s5_97
	word32 s6_98
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_92, out a2_93, out a3_21, out a4_22, out a5_94, out s2_95, out s3_96, out s4_29, out s5_97, out s6_98)
	a4Out = a4_22
	s4Out = s4_29
	return a3_21
netconn_send_exit:


word32 netconn_write_vectors_partly(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_write_partly
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_write_vectors_partly_entry:
l23075648:
	branch a0 == 0<32> l230756F8
l230756F8:
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return 0xFFFFFFF0<32>
l2307564A:
	word32 a0_10 = 0xFFFFFFFA<32>
	branch (CONVERT(Mem0[a0:byte], byte, word32) & 240<i32>) != 0x10<32> l23075692
l2307565C:
	word32 t1_12 = Mem0[a0 + 28<i32>:int32]
	branch (CONVERT((CONVERT(Mem0[a0 + 36<i32>:byte], byte, word32) & 2<32> | a3 & 4<i32>) != 0<32>, bool, word32) | t1_12) == 0<32> l23075694
l23075676:
	branch a4 != 0<32> l23075694
l23075694:
	word32 a7_23 = a1 + 4<i32>
	word32 a0_24 = 0<32>
	word32 a5_25 = 0<32>
l2307568A:
	branch a0_24 < a2 l2307567C
l2307567C:
	word32 t3_30 = Mem0[a7_23:int32]
	a7_23 = a7_23 + 8<32>
	a5_25 = a5_25 + t3_30
	branch a5_25 <u t3_30 l230756FC
l230756FC:
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return 0xFFFFFFFA<32>
l23075688:
	a0_24 = a0_24 + 1<32>
l2307568E:
	branch a5_25 != 0<32> l230756A8
l230756A8:
	branch a5_25 >= 0<32> l230756B8
l230756AC:
	a0_10 = 0xFFFFFFFA<32>
	branch a4 == 0<32> l23075692
l230756B0:
	a5_25 = 0x7FFFFFFF<32>
l230756B8:
	branch t1_12 == 0<32> l230756F4
l230756F4:
l230756D6:
	sys_now(out a5_25)
l230756DC:
	word32 a5_99
	word32 s2_103
	word32 s3_104
	word32 s4_105
	word32 s5_106
	word32 s6_297
	word32 a4_296
	word32 a2_294
	word32 a3_295
	word32 a0_117
	netconn_apimsg(a2, a4, a5_25, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_117, out a2_294, out a3_295, out a4_296, out a5_99, out s2_103, out s3_104, out s4_105, out s5_106, out s6_297)
	branch a0_117 != 0<32> l230756A0
l230756EC:
	branch a4 == 0<32> l2307569E
l2307569E:
	a0_117 = 0<32>
l230756EE:
	Mem119[a5_99:word32] = a4
l230756A0:
	s2Out = s2_103
	s3Out = s3_104
	s4Out = s4_105
	s5Out = s5_106
	s8Out = dwArgD4
	return a0_117
l23075690:
	a0_10 = 0<32>
l23075692:
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return a0_10
l2307567A:
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	return 0xFFFFFFFA<32>
netconn_write_vectors_partly_exit:


word32 netconn_write_partly(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg58, word32 dwArg98, word32 dwArgD8, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_send
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_write_partly_entry:
l23075700:
	word32 s2_28
	word32 s3_29
	word32 s4_30
	word32 s5_31
	word32 s8_33
	word32 a0_16 = netconn_write_vectors_partly(a0, fp + 0xFFFFFFE8<32>, 1<32>, a3, a4, mstatus, dwArg58, dwArg98, dwArgD8, out s2_28, out s3_29, out s4_30, out s5_31, out s8_33)
	s2Out = s2_28
	s3Out = s3_29
	s4Out = s4_30
	s5Out = s5_31
	s8Out = s8_33
	return a0_16
netconn_write_partly_exit:


word32 netconn_err(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_accept
//      netconn_recv_data
//      netconn_recv_tcp_pbuf_flags
//      lwip_netconn_do_send
//      lwip_netconn_do_write
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
netconn_err_entry:
l23075716:
	word32 s1_10 = 0<32>
	branch a0 == 0<32> l23075734
l23075722:
	word32 a2_50
	word32 a4_51
	sys_arch_protect(a4, mstatus, out a2_50, out a4_51)
	s1_10 = CONVERT(Mem9[a0 + 8<i32>:int8], int8, int32)
	Mem20[a0 + 8<i32>:byte] = 0<8>
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5)
l23075734:
	a0Out = s1_10
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1_10
netconn_err_exit:


word32 netconn_accept(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg34, word32 dwArg54, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_accept
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0054:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_accept_entry:
l23075740:
	word32 s0_104
	word32 sp_102 = fp + -48<i32>
	branch a1 != 0<32> l23075760
l23075760:
	Mem15[a1:word32] = 0<32>
	branch a0 == 0<32> l2307574E
l23075768:
	word32 a0_22
	word32 a2_23
	word32 s1_24 = netconn_err(a0, a3, a4, mstatus, out a0_22, out a2_23, out a3, out a4, out a5)
	s0_104 = a0_22
	branch a0_22 != 0<32> l23075750
l23075776:
	branch sys_mbox_valid(s1_24 + 20<i32>) != 0<32> l23075786
l23075786:
	a5 = CONVERT(Mem29[s1_24 + 36<i32>:byte], byte, word32)
	a4 = a5 & 1<i32>
	branch (a5 & 1<i32>) != 0<32> l23075782
l23075790:
	word32 s2_106
	word32 a0_109
	word32 s3_51
	branch (a5 & 2<32>) == 0<32> l230757B8
l230757B8:
	word32 s1_297
	word32 a1_298
	word32 a5_299
	word32 s4_300
	s0_104 = sys_arch_mbox_fetch(s1_24 + 20<i32>, fp + -36<i32>, a2_23, a3, a5 & 1<i32>, mstatus, dwArg34, dwArgA8, dwArgE8, out s1_297, out a0_109, out a1_298, out a3, out a4, out a5_299, out s2_106, out s3_51, out s4_300)
	a5 = 0xFFFFFFFF<32>
	branch a0_109 != 0xFFFFFFFF<32> l230757A2
l230757C8:
	s0_104 = 0xFFFFFFFD<32>
l23075794:
	word32 s4_303
	word32 a1_302
	word32 s1_301
	s0_104 = sys_arch_mbox_tryfetch(s1_24 + 20<i32>, fp + -36<i32>, a3, a5 & 1<i32>, a5 & 2<32>, mstatus, dwLoc2C, dwArg54, dwArgC8, dwArg0108, out s1_301, out a0_109, out a1_302, out a3, out a4, out s2_106, out s3_51, out s4_303)
	a5 = 0xFFFFFFFF<32>
	branch a0_109 == 0xFFFFFFFF<32> l230757E0
l230757E0:
	s0_104 = 0xFFFFFFF9<32>
l230757A2:
	word32 s1_90 = Mem29[0x2B<32>:word32]
	branch true l230757CC
l230757CC:
	word32 a5_113
	word32 a6_117
	word32 a7_118
	word32 s4_119
	word32 s8_120
	word32 t0_121
	word32 t1_122
	word32 t4_123
	word32 t5_124
	word32 t6_125
	call 0xFFFFFFFF<32> (retsize: 0;)
		uses: a0:s1_90,a1:1<32>,a2:0<32>,a3:a3_100,a4:a4_99,a5:a5_113,a6:a6_117,a7:a7_118,mstatus:mstatus,ra:ra,s0:s0_95,s1:s1_90,s2:s2_96,s3:s3_97,s4:s4_119,s8:s8_120,Stack +0004:dwLoc2C,Stack +0064:dwArg34,Stack +0084:dwArg54,Stack +00D8:dwArgA8,Stack +00F8:dwArgC8,Stack +0118:dwArgE8,Stack +0138:dwArg0108,t0:t0_121,t1:t1_122,t4:t4_123,t5:t5_124,t6:t6_125
		defs: a0:a0_109,a3:a3_116,a5:a5_113,a6:a6_117,a7:a7_118,mstatus:mstatus_115,ra:ra_103,s0:s0_104,s2:s2_106,s4:s4_119,s8:s8_120,sp:sp_102,t0:t0_121,t1:t1_122,t4:t4_123,t5:t5_124,t6:t6_125
l230757A6:
	branch lwip_netconn_is_err_msg(a0_109, sp_102 + 11<i32>, out a4, out a5) == 0<32> l230757D6
l230757D6:
	branch a5 == 0<32> l23075782
l230757DA:
	Mem137[s2_106:word32] = a5
l230757B2:
	s0_104 = CONVERT(Mem29[sp_102 + 11<i32>:int8], int8, int32)
l23075782:
	s0_104 = 0xFFFFFFF1<32>
l2307574E:
	s0_104 = 0xFFFFFFF0<32>
l23075750:
	0<32> = dwArg0128
	a0Out = s0_104
	a3Out = a3
	a4Out = a4
	a5Out = a5
	mstatusOut = mstatus
	return ra
netconn_accept_exit:


word32 netconn_recv_data(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArgA8, word32 dwArgB4, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_recv_udp_raw_netbuf_flags
//      netconn_recv_tcp_pbuf_flags
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_recv_data_entry:
l230757E4:
	word32 a5_101
	branch a1 != 0<32> l23075806
l23075806:
	Mem16[a1:word32] = 0<32>
	branch a0 == 0<32> l230757F4
l2307580C:
	s2 = a0 + 16<i32>
	s3 = a1
	branch sys_mbox_valid(a0 + 16<i32>) != 0<32> l2307582C
l2307582C:
	word32 s1_126
	word32 a0_111
	word32 s0_102
	word32 a5_25 = CONVERT(Mem16[a0 + 36<i32>:byte], byte, word32)
	word32 a5_27 = a5_25 & 3<32>
	word32 a2_28 = a2 & 4<i32> | a5_25 & 3<32>
	branch a2_28 != 0<32> l23075840
l2307583A:
	a5_27 = CONVERT(Mem16[a0 + 8<i32>:int8], int8, int32)
	branch a5_27 == 0<32> l2307588C
l2307588C:
	word32 s4_412
	word32 a4_410
	word32 a5_411
	s0_102 = sys_arch_mbox_fetch(a0 + 16<i32>, fp + -36<i32>, a2_28, a3, a4, mstatus, dwArg34, dwArgA8, dwArgE8, out s1_126, out a0_111, out a1, out a3, out a4_410, out a5_411, out s2, out s3, out s4_412)
	a4 = 0xFFFFFFFF<32>
	a5_101 = 0xFFFFFFFD<32>
	branch a0_111 != 0xFFFFFFFF<32> l2307584E
l2307589E:
l23075840:
	word32 a4_72
	word32 s4_409
	s0_102 = sys_arch_mbox_tryfetch(a0 + 16<i32>, fp + -36<i32>, a3, a4, a5_27, mstatus, dwLoc2C, 0<32>, dwArgC8, dwArg0108, out s1_126, out a0_111, out a1, out a3, out a4_72, out s2, out s3, out s4_409)
	branch a0_111 == 0xFFFFFFFF<32> l23075876
l23075876:
	word32 a0_91
	word32 a5_414
	word32 a2_413
	netconn_err(s0_102, a3, a4_72, mstatus, out a0_91, out a2_413, out a3, out a4, out a5_414)
	a5_101 = a0_91
	branch a0_91 != 0<32> l230757F6
l23075880:
	branch (CONVERT(Mem16[s0_102 + 36<i32>:byte], byte, word32) & 1<32>) != 0<32> l23075828
l23075888:
	a5_101 = 0xFFFFFFF9<32>
l2307584E:
	word32 a5_104 = CONVERT(Mem16[s0_102:byte], byte, word32)
	a4 = 0x10<32>
	word32 a5_108 = a5_104 & 240<i32>
	branch (a5_104 & 240<i32>) != 0x10<32> l230758B8
l230758B8:
l2307585E:
	a1 = fp + -37<i32>
	branch lwip_netconn_is_err_msg(a0_111, fp + -37<i32>, out a4, out a5_108) == 0<32> l230758A0
l230758A0:
l230758A2:
	word32 a2_118 = CONVERT(Mem16[a5_108 + 8<i32>:uint16], uint16, word32)
	word32 s0_119 = Mem16[a5_108 + 44<i32>:word32]
	branch a5_108 == 0<32> l230758B0
l230758AA:
	word32 a6_152
	word32 a7_153
	word32 s4_154
	word32 s8_155
	word32 t0_156
	word32 t1_157
	word32 t4_158
	word32 t5_159
	word32 t6_160
	call a5_108 (retsize: 0;)
		uses: a0:s0_119,a1:1<32>,a2:a2_118,a3:a3_135,a4:a4_133,a6:a6_152,a7:a7_153,mstatus:mstatus,ra:ra,s0:s0_119,s1:s1_126,s2:s2_128,s3:s3_130,s4:s4_154,s8:s8_155,Stack +0004:dwLoc2C,Stack +000B:bLoc25,Stack +0044:dwArg14,Stack +0064:dwArg34,Stack +00D8:dwArgA8,Stack +00E4:dwArgB4,Stack +00F8:dwArgC8,Stack +0118:dwArgE8,Stack +0138:dwArg0108,t0:t0_156,t1:t1_157,t4:t4_158,t5:t5_159,t6:t6_160
		defs: a1:a1_143,a3:a3_151,a4:a4_149,a5:a5_144,a6:a6_152,a7:a7_153,mstatus:mstatus_150,ra:ra_138,s2:s2_141,s3:s3_142,s4:s4_154,s8:s8_155,t0:t0_156,t1:t1_157,t4:t4_158,t5:t5_159,t6:t6_160
l230758B0:
	Mem166[s3:word32] = a5_108
l23075868:
	a5_101 = CONVERT(bLoc25, int8, int32)
	a4 = 0xFFFFFFF1<32>
	branch a5_101 != 0xFFFFFFF1<32> l230757F6
l23075872:
	a5_101 = 0<32>
l2307581E:
	word32 a0_171
	word32 a2_407
	word32 a5_408
	netconn_err(a0, a3, a4, mstatus, out a0_171, out a2_407, out a3, out a4, out a5_408)
	a5_101 = a0_171
	branch a0_171 != 0<32> l230757F6
l23075828:
	a5_101 = 0xFFFFFFF5<32>
l230757F4:
	a5_101 = 0xFFFFFFF0<32>
l230757F6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	a0Out = a5_101
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5_101
	s2Out = s2
	s3Out = s3
	mstatusOut = mstatus
	return ra
netconn_recv_data_exit:


word32 netconn_recv_udp_raw_netbuf_flags(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArgA8, word32 dwArgB4, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recvfrom_udp_raw.isra.6
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_recv_udp_raw_netbuf_flags_entry:
l230758BC:
	branch a0 == 0<32> l230758D0
l230758BE:
	word32 a5_5 = CONVERT(Mem0[a0:byte], byte, word32)
	a4 = 0x10<32>
	a5 = a5_5 & 240<i32>
	branch (a5_5 & 240<i32>) == 0x10<32> l230758D0
l230758D0:
	a0Out = 0xFFFFFFF0<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	mstatusOut = mstatus
	return ra
l230758CC:
l230758CC_thunk_netconn_recv_data:
	word32 a1_14
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 s2_23
	word32 a0_34
	word32 mstatus_35
	word32 s3_118
	word32 s0_116
	word32 a2_117
	word32 ra_36 = netconn_recv_data(ra, a0, a1, a2, a3, 0x10<32>, mstatus, dwArg14, dwArg34, dwArgA8, dwArgB4, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s0_116, out a0_34, out a1_14, out a2_117, out a3_16, out a4_17, out a5_18, out s2_23, out s3_118, out mstatus_35)
	a0Out = a0_34
	a1Out = a1_14
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_23
	mstatusOut = mstatus_35
	return ra_36
netconn_recv_udp_raw_netbuf_flags_exit:


word32 netconn_recv_data_tcp(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_recv_tcp_pbuf_flags
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a5 mstatus ra s0 s1 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_recv_data_tcp_entry:
l230758D4:
	word32 sp_129 = fp + -80<i32>
	word32 s0_157 = a0
	word32 s3_119 = a1
	word32 s2_118 = a2
	word32 s1_115 = 0xFFFFFFF5<32>
	branch sys_mbox_valid(a0 + 0x10<32>) == 0<32> l23075980
l230758F0:
	word32 a5_23 = CONVERT(Mem16[a0 + 36<i32>:byte], byte, word32)
	word32 a4_139 = CONVERT(SLICE(a5_23, byte, 0), byte, int32)
	branch a4_139 >= 0<32> l23075924
l23075924:
	word32 a0_51
	word32 a1_382
	word32 s2_40
	ra = netconn_recv_data(ra, a0, a1, a2, a3, a4_139, mstatus, dwLoc3C, dwLoc1C, dwArg58, dwArg64, dwArg78, dwArg98, dwArgB8, dwArgD8, out s0_157, out a0_51, out a1_382, out a2, out a3, out a4_139, out a5, out s2_40, out s3_119, out mstatus)
	s1_115 = a0_51
	branch a0_51 != 0<32> l23075980
l23075932:
	a5 = s2_40 & 8<i32>
	s3_119 = Mem16[s3_119:int32]
	branch (s2_40 & 8<i32>) != 0<32> l23075966
l2307593C:
	a4_139 = 1<32>
	branch s3_119 == 0<32> l23075946
l23075942:
	a4_139 = CONVERT(Mem16[s3_119 + 8<i32>:uint16], uint16, word32)
l23075946:
	word32 a5_61 = CONVERT(Mem16[s0_157:byte], byte, word32)
	a3 = 0x10<32>
	a5 = a5_61 & 240<i32>
	branch (a5_61 & 240<i32>) != 0x10<32> l23075966
l23075954:
	word32 a0_383
	s1_115 = netconn_apimsg(a2, a4_139, a5_61 & 240<i32>, mstatus, dwLoc4C, dwArg68, dwArgA8, dwArgE8, out a0_383, out a2, out a3, out a4_139, out a5, out s2_40, out s3_119, out s4, out s5, out s6)
l23075966:
	branch s3_119 != 0<32> l23075980
l2307596A:
	s2_118 = s2_40 & 16<i32>
	branch s2_118 == 0<32> l23075906
l23075972:
	word32 a5_102 = CONVERT(Mem101[s0_157 + 36<i32>:byte], byte, word32)
	Mem105[s0_157 + 36<i32>:byte] = SLICE(a5_102 | -128<i32>, byte, 0)
	a5 = a5_102 | -128<i32>
l230758FE:
	Mem107[a0 + 36<i32>:byte] = SLICE(a5_23 & 127<i32>, byte, 0)
	a5 = a5_23 & 127<i32>
l23075906:
	word32 s0_111 = Mem110[a5 + 44<i32>:word32]
	branch a5 == 0<32> l23075912
l2307590A:
	word32 a6_144
	word32 a7_145
	word32 s8_147
	word32 t1_148
	word32 t4_149
	word32 t5_150
	word32 t6_151
	word32 tp_152
	call a5 (retsize: 0;)
		uses: a0:s0_111,a1:1<32>,a2:0<32>,a3:a3_125,a4:a4_139,a5:a5_138,a6:a6_144,a7:a7_145,mstatus:mstatus_123,ra:ra_120,s0:s0_111,s1:s1_115,s2:s2_118,s3:s3_119,s4:s4_146,s5:s5_153,s6:s6_154,s8:s8_147,Stack +0004:dwLoc4C,Stack +0014:dwLoc3C,Stack +0034:dwLoc1C,Stack +00A8:dwArg58,Stack +00B4:dwArg64,Stack +00B8:dwArg68,Stack +00C8:dwArg78,Stack +00E8:dwArg98,Stack +00F8:dwArgA8,Stack +0108:dwArgB8,Stack +0128:dwArgD8,Stack +0138:dwArgE8,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
		defs: a2:a2_137,a3:a3_140,a4:a4_139,a5:a5_138,a6:a6_144,a7:a7_145,mstatus:mstatus_143,s3:s3_134,s4:s4_146,s5:s5_153,s6:s6_154,s8:s8_147,sp:sp_129,t1:t1_148,t4:t4_149,t5:t5_150,t6:t6_151,tp:tp_152
l23075912:
	s0_157 = Mem110[a5 + 4<i32>:word32]
	branch a5 != 0<32> l23075990
l23075990:
	netconn_close_shutdown(s0_157, a2, a4_139, mstatus, Mem110[sp_129 + 120<i32>:word32], Mem110[sp_129 + 184<i32>:word32], Mem110[sp_129 + 248<i32>:word32])
l23075916:
	word32 a0_193
	word32 a4_381
	word32 a3_380
	netconn_err(s0_157, a3, a4_139, mstatus, out a0_193, out a2, out a3_380, out a4_381, out a5)
	branch a0_193 != 0<32> l23075980
l23075920:
l23075980:
	s0Out = s0_157
	s1Out = dwLoc4C
	a0Out = dwLoc4C
	a2Out = a2
	a5Out = a5
	s3Out = s3_119
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return dwLoc08
netconn_recv_data_tcp_exit:


word32 netconn_recv_tcp_pbuf_flags(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recv_tcp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a5 mstatus ra s0 s1 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_recv_tcp_pbuf_flags_entry:
l2307599C:
	branch a0 == 0<32> l230759B0
l2307599E:
	word32 a5_5 = CONVERT(Mem0[a0:byte], byte, word32)
	a5 = a5_5 & 240<i32>
	branch (a5_5 & 240<i32>) != 0x10<32> l230759B0
l230759B0:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a2Out = a2
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
l230759AC:
l230759AC_thunk_netconn_recv_data_tcp:
	word32 a0_14
	word32 s0_17
	word32 s1_18
	word32 s3_20
	word32 a2_24
	word32 a5_26
	word32 mstatus_29
	word32 s4_30
	word32 s5_37
	word32 s6_38
	word32 ra_16 = netconn_recv_data_tcp(ra, a0, a1, a2, a3, mstatus, dwArg58, dwArg64, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, out s0_17, out s1_18, out a0_14, out a2_24, out a5_26, out s3_20, out s4_30, out s5_37, out s6_38, out mstatus_29)
	s0Out = s0_17
	s1Out = s1_18
	a0Out = a0_14
	a2Out = a2_24
	a5Out = a5_26
	s3Out = s3_20
	s4Out = s4_30
	s5Out = s5_37
	s6Out = s6_38
	mstatusOut = mstatus_29
	return ra_16
netconn_recv_tcp_pbuf_flags_exit:


word32 netconn_join_leave_group(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_close
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a2 a4 a5 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_join_leave_group_entry:
l230759B4:
	branch a0 == 0<32> l230759EC
l230759EC:
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return a2
l230759B6:
	branch a1 != 0<32> l230759C4
l230759BC:
l230759C4:
	branch a2 != 0<32> l230759CE
l230759C6:
	a2 = 0x230CBADC<32>
l230759CE:
	word32 a2_43
	word32 a4_45
	word32 a5_46
	word32 s2_50
	word32 s3_51
	word32 s4_52
	word32 a0_129
	word32 a3_130
	word32 s5_131
	word32 s6_132
	netconn_apimsg(a2, a4, a5, mstatus, dwLoc3C, dwArg78, dwArgB8, dwArgF8, out a0_129, out a2_43, out a3_130, out a4_45, out a5_46, out s2_50, out s3_51, out s4_52, out s5_131, out s6_132)
	a4Out = a4_45
	a5Out = a5_46
	s2Out = s2_50
	s3Out = s3_51
	s4Out = s4_52
	return a2_43
netconn_join_leave_group_exit:


word32 netconn_gethostbyname(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 mstatus, word32 dwArg98, word32 dwArgD8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_gethostbyname
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a3 a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_gethostbyname_entry:
l230759F0:
	word32 s0_36 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l23075A38
l230759FA:
	branch a1 == 0<32> l23075A38
l230759FC:
	word32 a0_21
	word32 a2_23
	word32 a5_26
	word32 s3_149
	s1 = sys_sem_new(ra, a3, fp + -37<i32>, a0, mstatus, dwLoc20, s0, ra, dwArgD8, dwArg0118, dwArg0158, out a0_21, out a2_23, out a3, out a4, out a5_26, out s2, out s3_149)
	byte bLoc25_96 = SLICE(a0_21, byte, 0)
	s0_36 = a0_21
	branch a0_21 != 0<32> l23075A38
l23075A1A:
	word32 a0_41
	word32 a3_44
	word32 s1_150
	word32 a4_151
	word32 a5_152
	word32 s3_153
	word32 s4_154
	word32 s5_155
	word32 s6_156
	tcpip_send_msg_wait_sem(fp + -32<i32>, a2_23, a4, a5_26, mstatus, s0, dwArg98, dwArgD8, dwArg0118, out s1_150, out a0_41, out a3_44, out a4_151, out a5_152, out s2, out s3_153, out s4_154, out s5_155, out s6_156)
	word32 a5_157
	word32 s4_158
	s0_36 = sys_sem_free(a0_41, a3_44, mstatus, dwArg0128, dwArg0168, out s1, out a3, out a4, out a5_157, out s4_158)
	branch s0_36 != 0<32> l23075A38
l23075A34:
	s0_36 = CONVERT(bLoc25_96, byte, int32)
l23075A38:
	a0Out = s0_36
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	s2Out = s2
	return s1
netconn_gethostbyname_exit:


void lwip_netconn_do_dns_found(word32 a0, word32 a1, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_dns_found_entry:
l23075A42:
	branch a1 != 0<32> l23075A52
l23075A52:
	Mem7[a5:byte] = 0<8>
	Mem11[a4:word32] = a5
l23075A46:
	Mem13[a5:byte] = 0xFA<8>
	a4 = 0xFFFFFFFA<32>
l23075A4C:
l23075A4E_thunk_sys_sem_signal:
	word32 s3_62
	word32 s4_63
	word32 s2_61
	word32 a3_60
	word32 a1_59
	word32 s1_58
	word32 s5_64
	word32 s6_65
	word32 s8_66
	sys_sem_signal(a0, a4, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_58, out a1_59, out a3_60, out s2_61, out s3_62, out s4_63, out s5_64, out s6_65, out s8_66)
	return
lwip_netconn_do_dns_found_exit:


void recv_udp(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 s5, word32 mstatus, word32 dwArg38, word32 dwArg78, word32 dwArgC8, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
recv_udp_entry:
l23075A5E:
	branch a0 != 0<32> l23075A88
l23075A88:
	branch sys_mbox_valid(a0 + 16<i32>) == 0<32> l23075A72
l23075A9A:
	word32 a0_31
	word32 a2_260
	word32 a5_261
	memp_malloc(a0, 6<32>, a3, a4, mstatus, out a0_31, out a2_260, out a3, out a4, out a5_261)
	branch a0_31 == 0<32> l23075A72
l23075AA4:
	Mem39[a0_31:word32] = a2
	Mem40[a0_31 + 4<i32>:word32] = a2
	word32 a5_41 = 0<32>
	branch a3 == 0<32> l23075AB6
l23075AB2:
	a5_41 = Mem40[a3:int32]
l23075AB6:
	Mem45[a5_41 + 8<i32>:word32] = a0_31
	Mem47[a0_31 + 12<i32>:word16] = SLICE(a4, word16, 0)
	word32 a0_57
	word32 a3_60
	word32 a4_61
	word32 s1_66
	word32 s2_67
	word32 s3_68
	word32 s5_70
	word32 a1_262
	word32 a5_263
	word32 a7_264
	word32 s4_265
	word32 s6_266
	word32 s0_65 = sys_mbox_trypost(a0 + 16<i32>, a4, a5_41, mstatus, dwLoc2C, CONVERT(Mem47[a2 + 8<i32>:uint16], uint16, word32), dwArgC8, dwArg0108, dwArg0148, out s1_66, out a0_57, out a1_262, out a3_60, out a4_61, out a5_263, out a7_264, out s2_67, out s3_68, out s4_265, out s5_70, out s6_266)
	branch a0_57 == 0<32> l23075AE4
l23075AE4:
	word32 t1_81 = Mem54[s1_66 + 44<i32>:int32]
	branch t1_81 == 0<32> l23075B02
l23075B02:
	0<32> = dwArg0128
	return
l23075AEC:
	0<32> = dwArg0128
	call t1_81 (retsize: 0;)
		uses: a0:s1_66,a1:0<32>,a2:dwArg0100,a3:a3_60,a4:a4_61,mstatus:mstatus,ra:ra,s0:dwArgE4,s1:s1_66,s2:s2_67,s3:s3_68,s4:dwArg78,s5:s5_70,s8:s5,Stack +0038:dwArg38,Stack +0078:dwArg78,Stack +00C8:dwArgC8,Stack +00E4:dwArgE4,Stack +0100:dwArg0100,Stack +0104:dwArg0104,Stack +0108:dwArg0108,Stack +0128:dwArg0128,Stack +0148:dwArg0148,Stack +FFFFFFD4:dwLoc2C,t3:dwArg38,tp:dwArg0104
	return
l23075ACE:
	0<32> = dwArg0128
l23075AE0_thunk_netbuf_delete:
	word32 a2_267
	word32 a3_268
	word32 a4_269
	word32 a5_270
	netbuf_delete(ra, s0_65, a3_60, a4_61, dwArg78, mstatus, dwArg0108, out a2_267, out a3_268, out a4_269, out a5_270)
	return
l23075A72:
	0<32> = dwArg0128
l23075A84_thunk_pbuf_free:
	word32 s0_244
	word32 s1_245
	word32 a0_246
	word32 a1_247
	word32 a2_248
	word32 a3_249
	word32 a4_250
	word32 a5_251
	word32 a7_252
	word32 s2_253
	word32 s3_254
	word32 s4_255
	word32 s5_256
	word32 s6_257
	word32 s8_258
	word32 mstatus_259
	pbuf_free(ra, a2, a3, a4, dwArg78, mstatus, dwArg0128, out s0_244, out s1_245, out a0_246, out a1_247, out a2_248, out a3_249, out a4_250, out a5_251, out a7_252, out s2_253, out s3_254, out s4_255, out s5_256, out s6_257, out s8_258, out mstatus_259)
	return
recv_udp_exit:


word32 setup_tcp(word32 s0, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_connected
//      lwip_netconn_do_newconn
//      accept_function
//      lwip_netconn_do_connect
// MayUse:  s0:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2
// Preserved: s0 sp
setup_tcp_entry:
l23075B14:
	tcp_arg(s0, Mem7[s0 + 4<i32>:word32])
	tcp_recv(s0, 0x230761A2<32>)
	tcp_sent(s0, 0x23076138<32>)
	tcp_poll(s0, 0x2307603C<32>, 2<32>)
l23075B60_thunk_tcp_err:
	tcp_err(s0, 0x23075BD2<32>)
	a1Out = 0x23075BD2<32>
	return s0
setup_tcp_exit:


void lwip_netconn_do_connected(word32 ra, word32 s1, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
lwip_netconn_do_connected_entry:
l23075B64:
	word32 sp_3 = fp + 0xFFFFFFF0<32>
	branch a0 == 0<32> l23075BC4
l23075B72:
	word32 a0_14 = Mem11[s1 + 40<i32>:word32]
	branch s1 == 0<32> l23075B80
l23075B76:
	Mem16[s1 + 4<i32>:byte] = SLICE(a2, byte, 0)
	a0_14 = Mem16[a5 + 40<i32>:word32]
	s1 = s1 + 0xC<32>
l23075B80:
	word32 a4_24 = 0x10<32>
	branch (CONVERT(Mem22[a0_14:byte], byte, word32) & 240<i32>) != 0x10<32> l23075B96
l23075B90:
	branch a2 != 0<32> l23075B96
l23075B92:
	word32 a1_225
	setup_tcp(a0_14, out a1_225)
l23075B96:
	word32 a5_33 = CONVERT(Mem22[a0_14 + 36<i32>:byte], byte, word32)
	Mem34[a0_14 + 40<i32>:word32] = 0<32>
	Mem35[a0_14 + 1<i32>:byte] = 0<8>
	Mem38[a0_14 + 36<i32>:byte] = SLICE(a5_33 & 0xFFFFFFFB<32>, byte, 0)
	word32 s2_36 = a5_33 & 4<i32>
	word32 a5_37 = a5_33 & 0xFFFFFFFB<32>
	word32 s0_39 = Mem38[(a5_33 & 0xFFFFFFFB<32>) + 44<i32>:word32]
	branch (a5_33 & 0xFFFFFFFB<32>) == 0<32> l23075BB8
l23075BB0:
	word32 s8_116
	word32 s6_115
	word32 s5_114
	word32 s3_112
	word32 s4_113
	word32 a7_111
	word32 a3_109
	word32 a6_110
	word32 t0_117
	word32 t1_118
	word32 t3_119
	word32 t4_120
	word32 t5_121
	word32 t6_122
	call a5_33 & 0xFFFFFFFB<32> (retsize: 0;)
		uses: a0:s0_39,a1:2<32>,a2:0<32>,a3:a3_109,a4:a4_58,a5:a5_33 & 0xFFFFFFFB<32>,a6:a6_110,a7:a7_111,mstatus:mstatus,ra:ra,s0:s0_39,s1:s1_46,s2:a5_33 & 4<i32>,s3:s3_112,s4:s4_113,s5:s5_114,s6:s6_115,s8:s8_116,t0:t0_117,t1:t1_118,t3:t3_119,t4:t4_120,t5:t5_121,t6:t6_122
		defs: a3:a3_109,a4:a4_58,a5:a5_56,a6:a6_110,a7:a7_111,s1:s1_52,s2:s2_53,s3:s3_112,s4:s4_113,s5:s5_114,s6:s6_115,s8:s8_116,sp:sp_49,t0:t0_117,t1:t1_118,t3:t3_119,t4:t4_120,t5:t5_121,t6:t6_122
l23075BB8:
	branch s2_36 != 0<32> l23075BC4
l23075BBE:
	word32 a3_228
	word32 s1_226
	word32 a1_227
	word32 s4_231
	word32 s5_232
	word32 s3_230
	word32 s2_229
	word32 s8_234
	word32 s6_233
	sys_sem_signal(s1, a4_24, a5_37, mstatus, Mem38[sp_3 + 8<i32>:word32], Mem38[sp_3 + 36<i32>:word32], Mem38[sp_3 + 164<i32>:word32], Mem38[sp_3 + 280<i32>:word32], Mem38[sp_3 + 344<i32>:word32], Mem38[sp_3 + 408<i32>:word32], out s1_226, out a1_227, out a3_228, out s2_229, out s3_230, out s4_231, out s5_232, out s6_233, out s8_234)
l23075BC4:
	0<32> = dwArg38
	return
lwip_netconn_do_connected_exit:


void err_tcp(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra sp
err_tcp_entry:
l23075BD2:
	word32 a2_557
	word32 a4_558
	sys_arch_protect(a4, mstatus, out a2_557, out a4_558)
	word32 a5_26 = CONVERT(Mem19[a0 + 36<i32>:byte], byte, word32)
	word32 s2_144 = CONVERT(Mem19[a0 + 1<i32>:byte], byte, word32)
	Mem28[a0 + 4<i32>:word32] = 0<32>
	Mem30[a0 + 36<i32>:byte] = SLICE(a5_26 | 1<i32>, byte, 0)
	Mem31[a0 + 8<i32>:byte] = SLICE(a1, byte, 0)
	Mem32[a0 + 1<i32>:byte] = 0<8>
	word32 s1_108 = a1
	word32 a5_36
	word32 a4_35
	word32 a3_34 = sys_arch_unprotect(a3, mstatus, out a4_35, out a5_36)
	branch a5_36 == 0<32> l23075C14
l23075C0C:
	call a5_36 (retsize: 0;)
		uses: a3:a3_34,mstatus:mstatus
		defs: a3:a3_41,a4:a4_42,a5:a5_43
l23075C14:
	word32 s4_67
	word32 s3_66
	word32 s0_46 = Mem32[a5_36 + 44<i32>:word32]
	s3_66 = s3
	s4_67 = s4
	branch a5_36 == 0<32> l23075C20
l23075C18:
	word32 tp_285
	word32 t5_283
	word32 t6_284
	word32 t0_280
	word32 t4_282
	word32 t1_281
	word32 s6_279
	word32 a7_277
	word32 s5_278
	call a5_36 (retsize: 0;)
		uses: a0:s0_46,a1:0<32>,a2:0<32>,a3:a3_57,a4:a4_56,a7:a7_277,mstatus:mstatus,ra:ra,s0:s0_46,s1:a1,s2:s2_27,s3:s3,s4:s4,s5:s5_278,s6:s6_279,t0:t0_280,t1:t1_281,t4:t4_282,t5:t5_283,t6:t6_284,tp:tp_285
		defs: a3:a3_75,a4:a4_70,a5:a5_68,a7:a7_277,mstatus:mstatus_74,ra:ra_60,s1:s1_62,s2:s2_65,s3:s3_66,s4:s4_67,s5:s5_278,s6:s6_279,t0:t0_280,t1:t1_281,t4:t4_282,t5:t5_283,t6:t6_284,tp:tp_285
l23075C20:
	word32 s0_120 = Mem32[a5_36 + 44<i32>:word32]
	branch a5_36 == 0<32> l23075C2C
l23075C24:
	word32 tp_294
	word32 t6_293
	word32 t5_292
	word32 t4_291
	word32 t1_290
	word32 t0_289
	word32 s6_288
	word32 s5_287
	word32 a7_286
	call a5_36 (retsize: 0;)
		uses: a0:s0_78,a1:2<32>,a2:0<32>,a3:a3_89,a4:a4_88,a7:a7_286,mstatus:mstatus_87,ra:ra_82,s0:s0_78,s1:s1_83,s2:s2_84,s3:s3_85,s4:s4_86,s5:s5_287,s6:s6_288,t0:t0_289,t1:t1_290,t4:t4_291,t5:t5_292,t6:t6_293,tp:tp_294
		defs: a7:a7_286,mstatus:mstatus_106,s0:s0_93,s1:s1_94,s2:s2_97,s5:s5_287,s6:s6_288,t0:t0_289,t1:t1_290,t4:t4_291,t5:t5_292,t6:t6_293,tp:tp_294
l23075C2C:
	word32 a5_109 = s1_108 + 15<i32>
	word32 a5_110 = a5_109 & 255<i32>
	word32 a4_111 = 2<32>
	branch (a5_109 & 255<i32>) >u 2<32> l23075C4C
l23075C3C:
	a4_111 = 0x230C37C4<32>
	a5_110 = ((a5_109 & 255<i32>) << 2<i32>) + 0x230C37C4<32>
l23075C4C:
	word32 s4_121 = s0_120 + 16<i32>
	branch sys_mbox_valid(s4_121) == 0<32> l23075C60
l23075C58:
	word32 s5_565
	word32 s6_566
	word32 a0_559
	word32 a1_560
	word32 a3_561
	word32 a7_562
	word32 s3_563
	word32 s4_564
	s0_120 = sys_mbox_trypost(s4_121, a4_111, a5_110, mstatus, s4, s3, dwArgD8, dwArg0118, dwArg0158, out s1_108, out a0_559, out a1_560, out a3_561, out a4_111, out a5_110, out a7_562, out s2_144, out s3_563, out s4_564, out s5_565, out s6_566)
l23075C60:
	word32 s4_158 = s0_120 + 20<i32>
	branch sys_mbox_valid(s4_158) == 0<32> l23075C74
l23075C6C:
	word32 s3_573
	word32 s4_574
	word32 s5_575
	word32 s6_576
	word32 a0_567
	word32 a1_568
	word32 a3_569
	word32 a4_570
	word32 a5_571
	word32 a7_572
	s0_120 = sys_mbox_trypost(s4_158, a4_111, a5_110, mstatus, s4, s3, dwArgD8, dwArg0118, dwArg0158, out s1_108, out a0_567, out a1_568, out a3_569, out a4_570, out a5_571, out a7_572, out s2_144, out s3_573, out s4_574, out s5_575, out s6_576)
l23075C74:
	branch s2_144 == 1<32> l23075C86
l23075C7A:
	branch (s2_144 + -3<i32> & 255<i32>) >u 1<32> l23075CC8
l23075C86:
	word32 a5_203 = CONVERT(Mem32[s0_120 + 36<i32>:byte], byte, word32)
	Mem205[s0_120 + 36<i32>:byte] = SLICE(a5_203 & -5<i32>, byte, 0)
	branch (a5_203 & 4<32>) != 0<32> l23075CC8
l23075CC8:
	return
l23075C96:
	branch s2_144 != 4<32> l23075CA0
l23075C9E:
	s1_108 = 0<32>
l23075CA0:
	Mem228[(a5_203 & 4<32>) + 4<i32>:byte] = SLICE(s1_108, byte, 0)
	word32 s0_229 = Mem228[(a5_203 & 4<32>) + 40<i32>:word32]
	word32 a5_230 = Mem228[s1_108:word32]
	word32 s1_231 = s1_108 + 0xC<32>
	sys_sem_valid(s1_231)
	Mem234[s0_229 + 40<i32>:word32] = 0<32>
l23075CC4_thunk_sys_sem_signal:
	word32 s6_584
	word32 s8_585
	word32 s3_581
	word32 s4_582
	word32 s5_583
	word32 s1_577
	word32 a1_578
	word32 a3_579
	word32 s2_580
	sys_sem_signal(s1_231, 4<32>, a5_230, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_577, out a1_578, out a3_579, out s2_580, out s3_581, out s4_582, out s5_583, out s6_584, out s8_585)
	return
err_tcp_exit:


word32 lwip_netconn_do_writemore(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a5, word32 s5, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      poll_tcp
//      sent_tcp
//      lwip_netconn_do_write
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +0128:[0..31]
// LiveOut: a5 mstatus ra s0 s1 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_writemore_entry:
l23075CD8:
	word32 a4_170
	word32 a5_169
	word32 s6_394
	word32 s3_401
	word32 s5_393
	word32 s1_390
	word32 s3_160 = CONVERT(Mem23[a5 + 28<i32>:byte], byte, word32)
	word32 sp_277 = fp + -48<i32>
	word32 s4_146 = CONVERT(Mem23[Mem23[a5 + 40<i32>:word32] + 36<i32>:byte], byte, word32) & 2<i32> | s3_160 & 4<i32>
	word32 a0_138 = Mem23[(s3_160 & 4<i32>) + 28<i32>:word32]
	branch (s3_160 & 4<i32>) == 0<32> l23075D3A
l23075D0A:
	a0_138 = sys_now(out a5_169) - a5_169
	branch a0_138 < a5_169 l23075D3A
l23075D3A:
	word32 s5_147 = 0x10000000<32>
	s7 = 0xFFFFFFF<32>
	word32 s8_148 = 1<32>
l23075D42:
	word32 s2_100
	word32 a4_49 = Mem44[a3 + 16<i32>:word32]
	word32 a1_53 = a1 + a3
	word32 a5_54 = Mem44[Mem44[a1:word32] + 4<i32>:word32] - a3
	branch a5_54 <u s5_147 l23075DB6
l23075DB6:
	s2_100 = CONVERT(SLICE(a5_54, word16, 0), word16, word32)
l23075D54:
	s3_160 = s3_160 | 2<i32>
	s2_100 = s7
l23075D5A:
	word32 a3_66 = CONVERT(Mem44[a0_138 + 100<i32>:uint16], uint16, word32)
	branch a3_66 >=u s2_100 l23075DC8
l23075DC8:
	branch s2_100 != s7 l23075DD0
l23075DCC:
	branch a5_54 >=u s5_147 l23075DE2
l23075D64:
	branch s4_146 == 0<32> l23075DC0
l23075DC0:
	s3_160 = s3_160 | 2<i32>
l23075D68:
	branch a3_66 != 0<32> l23075DC4
l23075DC4:
	s2_100 = a3_66
l23075DD0:
	branch CONVERT(SLICE(a5_54, word16, 0), word16, word32) != s2_100 l23075DE8
l23075DDA:
	branch s8_148 >=u CONVERT(Mem44[a4_49 + 12<i32>:uint16], uint16, word32) l23075DE8
l23075DE2:
	s3_160 = s3_160 | 2<i32>
l23075DE8:
	word32 a5_154
	ra = tcp_write(ra, s1, a0_138, a1_53, s2_100, s3_160, mstatus, s8, dwLoc17, dwArg28, dwArg48, s7, s5, dwArg68, dwArg88, dwArg98, dwArgC8, out a0_138, out a1, out a2, out a3, out a5_154, out s2_100, out s3_160, out s4_146, out s5_147, out s6, out s7, out s8_148, out mstatus)
	s1 = a0_138
	branch a0_138 != 0<32> l23075E36
l23075E36:
	a5_169 = a0_138 + 1<i32> & 255<i32>
	a4_170 = 1<32>
	branch a5_169 >u 1<32> l23075D22
l23075E44:
	s1 = 0xFFFFFFFF<32>
l23075DF4:
	word32 a5_174 = a5_154 + s2_100
	Mem175[a5_174 + 24<i32>:word32] = Mem44[a5_154 + 24<i32>:word32]
	word32 a4_177 = Mem175[a5_174 + 16<i32>:word32]
	s2_100 = s2_100 + a5_174
	Mem179[a4_177 + 16<i32>:word32] = s2_100
	word32 a5_182 = Mem179[a3 + 16<i32>:word32]
	a4_170 = Mem179[a4_177 + 4<i32>:word32]
	branch a3 != a4_170 l23075E30
l23075E12:
	Mem186[a5_182 + 12<i32>:word16] = SLICE(CONVERT(Mem179[a5_182 + 12<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
	a4_170 = CONVERT(Mem186[a5_182 + 12<i32>:uint16], uint16, word32)
	branch a4_170 == 0<32> l23075E30
l23075E24:
	word32 a5_189 = Mem186[a4_170 + 8<i32>:word32]
	Mem191[a4_170 + 0x10<32>:word32] = a5_189
	Mem193[a5_189 + 16<i32>:word32] = 0<32>
	a4_170 = a4_170 + 8<32>
l23075E30:
	branch s6 != 0<32> l23075D42
l23075E34:
l23075E46:
	branch s4_146 != 0<32> l23075D72
l23075D6A:
	a4_170 = Mem44[a5_54 + 24<i32>:word32]
	s1 = 0xFFFFFFF9<32>
	branch a5_54 == 0<32> l23075D72
l23075D70:
	s1 = 0<32>
l23075D72:
	word32 a5_211 = Mem203[Mem203[a4_170 + 24<i32>:word32] + 20<i32>:word32]
	branch a4_170 >=u a5_211 l23075E4A
l23075E4A:
	word32 a5_216 = 0xFFFAC0<32>
	branch CONVERT(Mem213[a4_170 + 100<i32>:uint16], uint16, word32) <=u 0xFFFAC0<32> l23075E64
l23075E5A:
	a4_170 = CONVERT(Mem213[a4_170 + 102<i32>:uint16], uint16, word32)
	a5_216 = 7<32>
	branch a4_170 <=u 7<32> l23075D94
l23075E64:
	word32 s0_222 = Mem213[a5_216 + 44<i32>:word32]
	branch a5_216 == 0<32> l23075D94
l23075E68:
	word32 a3_295
	word32 s9_299
	word32 s10_302
	word32 s11_303
	call a5_216 (retsize: 0;)
		uses: a0:s0_222,a1:3<32>,a2:0<32>,a3:a3_295,a4:a4_271,a5:a5_220,mstatus:mstatus_297,ra:ra_227,s0:s0_222,s1:s1_232,s10:s10_302,s11:s11_303,s2:s2_237,s3:s3_242,s4:s4_247,s5:s5_250,s6:s6_255,s7:s7_262,s8:s8_267,s9:s9_299,Stack +0019:dwLoc17,Stack +0058:dwArg28,Stack +0078:dwArg48,Stack +0098:dwArg68,Stack +00B8:dwArg88,Stack +00C8:dwArg98,Stack +00F8:dwArgC8
		defs: a0:a0_289,a2:a2_291,a3:a3_295,a4:a4_290,mstatus:mstatus_297,ra:ra_279,s1:s1_280,s10:s10_302,s11:s11_303,s4:s4_283,s7:s7_286,s9:s9_299,sp:sp_277
l23075D7C:
	word32 s0_307 = Mem203[a5_211 + 44<i32>:word32]
	branch a5_211 == 0<32> l23075D88
l23075D80:
	word32 a3_329
	word32 s9_333
	word32 s10_336
	word32 s11_337
	call a5_211 (retsize: 0;)
		uses: a0:s0_307,a1:3<32>,a2:0<32>,a3:a3_329,a4:a4_207,a5:a5_211,mstatus:mstatus_331,ra:ra_228,s0:s0_307,s1:s1_233,s10:s10_336,s11:s11_337,s2:s2_238,s3:s3_243,s4:s4_248,s5:s5_251,s6:s6_256,s7:s7_263,s8:s8_268,s9:s9_333,Stack +0019:dwLoc17,Stack +0058:dwArg28,Stack +0078:dwArg48,Stack +0098:dwArg68,Stack +00B8:dwArg88,Stack +00C8:dwArg98,Stack +00F8:dwArgC8
		defs: a0:a0_323,a2:a2_325,a3:a3_329,a4:a4_324,mstatus:mstatus_331,ra:ra_313,s0:s0_312,s1:s1_314,s10:s10_336,s11:s11_337,s4:s4_317,s7:s7_320,s9:s9_333,sp:sp_311
l23075D88:
	Mem345[s0_307 + 36<i32>:byte] = SLICE(CONVERT(Mem203[s0_307 + 36<i32>:byte], byte, word32) | 16<i32>, byte, 0)
l23075D94:
	branch s1 != 0<32> l23075E72
l23075E72:
	a5_169 = 0xFFFFFFFF<32>
	branch s1 != 0xFFFFFFFF<32> l23075D22
l23075E78:
	word32 s4_392
	word32 s0_963
	word32 a3_966
	word32 a5_967
	word32 s8_969
	word32 s9_970
	word32 s10_971
	word32 s11_972
	word32 s2_968
	word32 a2_965
	word32 a1_964
	ra = tcp_output(ra, s1, a0_138, a2, s7, mstatus, Mem356[sp_277 + 88<i32>:word32], Mem356[sp_277 + 104<i32>:word32], Mem356[sp_277 + 136<i32>:word32], Mem356[sp_277 + 148<i32>:word32], Mem356[sp_277 + 152<i32>:word32], Mem356[sp_277 + 168<i32>:word32], Mem356[sp_277 + 184<i32>:word32], Mem356[sp_277 + 200<i32>:word32], Mem356[sp_277 + 204<i32>:word32], Mem356[sp_277 + 216<i32>:word32], Mem356[sp_277 + 232<i32>:word32], Mem356[sp_277 + 264<i32>:word32], Mem356[sp_277 + 268<i32>:word32], Mem356[sp_277 + 280<i32>:word32], out s0_963, out s1_390, out a0_138, out a1_964, out a2_965, out a3_966, out a4_170, out a5_967, out s2_968, out s3_401, out s4_392, out s5_393, out s6_394, out s7, out s8_969, out s9_970, out s10_971, out s11_972, out mstatus)
	a5_169 = 0xFFFFFFFC<32>
	branch a0_138 == 0xFFFFFFFC<32> l23075DB2
l23075E84:
	branch s4_392 == 0<32> l23075E92
l23075E88:
	a5_169 = Mem356[0x14<32>:word32]
l23075D96:
	word32 s1_416 = 1<32>
	branch a4_170 == Mem356[Mem356[a4_170 + 24<i32>:word32] + 20<i32>:word32] l23075DA6
l23075DA2:
	s1_416 = CONVERT(s4_146 != 0<32>, bool, word32)
l23075DA6:
	word32 s2_957
	word32 s4_958
	word32 s9_960
	word32 s11_962
	word32 s10_961
	word32 s8_959
	word32 a5_956
	word32 s0_952
	word32 a2_954
	word32 a3_955
	word32 a1_953
	ra = tcp_output(ra, s1_416, a0_138, a2, s7, mstatus, Mem356[sp_277 + 88<i32>:word32], Mem356[sp_277 + 104<i32>:word32], Mem356[sp_277 + 136<i32>:word32], Mem356[sp_277 + 148<i32>:word32], Mem356[sp_277 + 152<i32>:word32], Mem356[sp_277 + 168<i32>:word32], Mem356[sp_277 + 184<i32>:word32], Mem356[sp_277 + 200<i32>:word32], Mem356[sp_277 + 204<i32>:word32], Mem356[sp_277 + 216<i32>:word32], Mem356[sp_277 + 232<i32>:word32], Mem356[sp_277 + 264<i32>:word32], Mem356[sp_277 + 268<i32>:word32], Mem356[sp_277 + 280<i32>:word32], out s0_952, out s1_390, out a0_138, out a1_953, out a2_954, out a3_955, out a4_170, out a5_956, out s2_957, out s3_401, out s4_958, out s5_393, out s6_394, out s7, out s8_959, out s9_960, out s10_961, out s11_962, out mstatus)
	a5_169 = 0xFFFFFFFC<32>
	branch a0_138 != 0xFFFFFFFC<32> l23075E8E
l23075E8E:
	branch s1_390 != 0<32> l23075D20
l23075DB2:
	a5_169 = 0xFFFFFFFC<32>
	s1 = 0xFFFFFFFC<32>
l23075D1A:
	a4_170 = Mem23[a5_169 + 24<i32>:word32]
l23075D1C:
	s1 = 0xFFFFFFF9<32>
	branch a5_169 == 0<32> l23075D22
l23075D20:
	s1 = 0<32>
l23075D22:
	word32 s0_475 = Mem471[a5_169 + 40<i32>:word32]
	word32 a5_480 = Mem471[a0_138:word32]
	Mem482[a5_480 + 4<i32>:byte] = SLICE(s1, byte, 0)
	Mem483[s0_475 + 40<i32>:word32] = 0<32>
	Mem484[s0_475 + 1<i32>:byte] = 0<8>
	word32 a1_947
	word32 s2_949
	word32 s4_950
	word32 s8_951
	word32 a3_948
	sys_sem_signal(a0_138 + 0xC<32>, a4_170, a5_480, mstatus, Mem484[sp_277 + 8<i32>:word32], Mem484[sp_277 + 36<i32>:word32], Mem484[sp_277 + 164<i32>:word32], Mem484[sp_277 + 280<i32>:word32], Mem484[sp_277 + 344<i32>:word32], Mem484[sp_277 + 408<i32>:word32], out s1_390, out a1_947, out a3_948, out s2_949, out s3_401, out s4_950, out s5_393, out s6_394, out s8_951)
l23075E92:
	0<32> = dwArg0128
	s0Out = s4
	s1Out = s1_390
	a5Out = a5_169
	s3Out = s3_401
	s4Out = dwArg78
	s5Out = s5_393
	s6Out = s6_394
	s7Out = s7
	s8Out = s5
	mstatusOut = mstatus
	return ra
lwip_netconn_do_writemore_exit:


word32 lwip_netconn_do_close_internal(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 a5, word32 s3, word32 s4, word32 s6, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      poll_tcp
//      sent_tcp
//      lwip_netconn_do_delconn
//      lwip_netconn_do_close
// MayUse:  a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a5 mstatus ra s0 s1 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_close_internal_entry:
l23075EAC:
	word32 s4_33
	word32 sp_296 = fp + 0xFFFFFFE0<32>
	word32 a5_24 = CONVERT(Mem19[a5 + 8<i32>:byte], byte, word32)
	branch a5_24 == 3<32> l23075F00
l23075ED6:
	branch (a5_24 & 1<i32>) == 0<32> l23075EF2
l23075EDA:
	word32 a4_28 = CONVERT(Mem19[s0 + 20<i32>:byte], byte, word32)
	a3 = 1<32>
	branch (a4_28 + -5<i32> & 255<i32>) <=u 1<32> l23075F00
l23075EEC:
	branch a4_28 == 8<32> l23075F00
l23075EF2:
	s4_33 = 0<32>
	branch (a5_24 & 2<i32>) == 0<32> l23075F0A
l23075EF8:
	branch (CONVERT(Mem19[s0 + 26<i32>:uint16], uint16, word32) & 0x10<32>) == 0<32> l23075F0A
l23075F00:
	tcp_arg(s0, 0<32>)
	s4_33 = 1<32>
l23075F0A:
	word32 a5_125
	word32 mstatus_128
	word32 ra_129
	word32 s3_134
	word32 s5_136
	word32 s6_137
	word32 s7_138
	word32 a4_124
	word32 a3_123
	word32 s4_135
	word32 s1_130
	word32 a0_120
	branch CONVERT(Mem19[s0 + 20<i32>:byte], byte, word32) != 1<32> l23075F2C
l23075F2C:
	branch (a5_24 & 1<i32>) == 0<32> l23075F40
l23075F30:
	tcp_recv(s0, 0<32>)
	tcp_accept(s0, 0<32>)
l23075F40:
	branch (a5_24 & 2<i32>) == 0<32> l23075F4C
l23075F44:
	tcp_sent(s0, 0<32>)
l23075F4C:
	branch s4_33 == 0<32> l23075F20
l23075F50:
	tcp_poll(s0, 0<32>, 0<32>)
	tcp_err(s0, 0<32>)
	a2 = 0<32>
l23075F14:
	tcp_accept(s0, 0<32>)
	branch s4_33 != 0<32> l23075F62
l23075F62:
	word32 a1_986
	word32 s8_988
	word32 s10_990
	word32 s2_987
	word32 s9_989
	word32 s11_991
	ra_129 = tcp_close(ra, s0, a2, a3, s4_33, s7, mstatus, dwLoc0C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, out s1_130, out a0_120, out a1_986, out a3_123, out a4_124, out a5_125, out s2_987, out s3_134, out s4_135, out s5_136, out s6_137, out s7_138, out s8_988, out s9_989, out s10_990, out s11_991, out mstatus_128)
l23075F20:
	ra_129 = tcp_shutdown(ra, s0, a5_24 & 1<i32>, a5_24 & 2<i32>, s4_33, s7, mstatus, dwLoc10, dwLoc0C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, out s1_130, out a0_120, out a3_123, out a4_124, out a5_125, out s3_134, out s4_135, out s5_136, out s6_137, out s7_138, out mstatus_128)
l23075F68:
	word32 s1_202
	word32 s2_192 = a0_120
	branch a0_120 == 0<32> l23075F9A
l23075F6C:
	a5_125 = 0xFFFFFFFF<32>
	branch a0_120 != 0xFFFFFFFF<32> l23075F9A
l23075F72:
	s5_136 = Mem19[s1_130 + 28<i32>:int32]
	branch s5_136 > 0<32> l23075F80
l23075F7A:
	s5_136 = 0x1000388<32>
l23075F80:
	word32 a5_200
	word32 a0_199 = sys_now(out a5_200)
	a5_125 = Mem19[a5_200 + 12<i32>:word32]
	s1_202 = Mem19[a5_200 + 40<i32>:word32]
	branch a0_199 - a5_125 < s5_136 l23076002
l23076002:
	branch s3_134 == 0<32> l23076014
l23076006:
	tcp_sent(s0, 0x23076138<32>)
l23076014:
	tcp_poll(s0, 0x2307603C<32>, 1<32>)
	tcp_err(s0, 0x23075BD2<32>)
	tcp_arg(s0, s1_202)
l23075F8E:
	branch s4_135 == 0<32> l23075F9A
l23075F92:
	word32 s1_974
	word32 a0_975
	word32 s9_978
	word32 s2_977
	word32 a1_976
	word32 s11_980
	word32 s10_979
	ra_129 = tcp_abort(ra_129, s1_202, s0, a3_123, s3_134, s4_135, s7_138, mstatus_128, s6, s4, dwArg08, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, s1, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgB8, dwArgBC, dwArgC8, dwArgE8, out s0, out s1_974, out a0_975, out a1_976, out a3_123, out a4_124, out a5_125, out s2_977, out s3_134, out s4_135, out s5_136, out s6_137, out s7_138, out s9_978, out s10_979, out s11_980, out mstatus_128)
	s2_192 = 0<32>
l23075F9A:
	word32 s1_270 = Mem19[a5_125 + 40<i32>:word32]
	word32 a5_272 = Mem19[s0:word32]
	Mem275[a5_272 + 4<i32>:byte] = SLICE(s2_192, byte, 0)
	Mem276[s1_270 + 40<i32>:word32] = 0<32>
	Mem277[s1_270 + 1<i32>:byte] = 0<8>
	word32 s0_278 = s0 + 0xC<32>
	branch s2_192 != 0<32> l23075FE4
l23075FB0:
	branch s4_135 == 0<32> l23075FC4
l23075FB4:
	word32 s1_280 = Mem277[a5_272 + 44<i32>:word32]
	Mem281[s1_280 + 4<i32>:word32] = 0<32>
	branch a5_272 == 0<32> l23075FC4
l23075FBC:
	call a5_272 (retsize: 0;)
		uses: a0:s1_280,a1:4<32>,a2:0<32>,a3:a3_294,a5:a5_272,mstatus:mstatus_292,ra:ra_289,s0:s0_278,s1:s1_280,s2:s2_273,s3:s3_285,s4:s4_279,s5:s5_290,s6:s6_286,s7:s7_293,Stack +0010:dwLoc10,Stack +0014:dwLoc0C,Stack +0028:dwArg08,Stack +0038:dwArg18,Stack +0048:dwArg28,Stack +0058:dwArg38,Stack +0068:dwArg48,Stack +0074:dwArg54,Stack +0078:dwArg58,Stack +0098:dwArg78,Stack +009C:dwArg7C,Stack +00A8:dwArg88,Stack +00AC:dwArg8C,Stack +00B8:dwArg98,Stack +00BC:dwArg9C,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +00DC:dwArgBC,Stack +00E8:dwArgC8,Stack +00EC:dwArgCC,Stack +00F8:dwArgD8,Stack +00FC:dwArgDC,Stack +0108:dwArgE8,Stack +0118:dwArgF8,Stack +0128:dwArg0108
		defs: a3:a3_308,a4:a4_307,a5:a5_305,mstatus:mstatus_315,ra:ra_300,s0:s0_301,s2:s2_302,s3:s3_298,s4:s4_303,s5:s5_304,s6:s6_299,s7:s7_316,sp:sp_296
l23075FC4:
	branch s6_137 == 0<32> l23075FD4
l23075FC8:
	word32 s1_329 = Mem328[a5_272 + 44<i32>:word32]
	branch a5_272 == 0<32> l23075FD4
l23075FCC:
	call a5_272 (retsize: 0;)
		uses: a0:s1_329,a1:0<32>,a2:0<32>,a3:a3_341,a5:a5_327,mstatus:mstatus_339,ra:ra_334,s0:s0_335,s1:s1_329,s2:s2_336,s3:s3_333,s4:s4_337,s5:s5_338,s6:s6_326,s7:s7_340,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0054:dwArg54,Stack +0058:dwArg58,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +FFFFFFF0:dwLoc10,Stack +FFFFFFF4:dwLoc0C
		defs: a3:a3_355,a4:a4_354,a5:a5_352,mstatus:mstatus_362,ra:ra_347,s0:s0_348,s2:s2_349,s3:s3_345,s4:s4_350,s5:s5_351,s6:s6_346,s7:s7_363,sp:sp_343
l23075FD4:
	branch s3_134 == 0<32> l23075FE4
l23075FD8:
	word32 s1_376 = Mem328[a5_272 + 44<i32>:word32]
	branch a5_272 == 0<32> l23075FE4
l23075FDC:
	call a5_272 (retsize: 0;)
		uses: a0:s1_376,a1:2<32>,a2:0<32>,a3:a3_388,a5:a5_374,mstatus:mstatus_386,ra:ra_381,s0:s0_382,s1:s1_376,s2:s2_383,s3:s3_373,s4:s4_384,s5:s5_385,s6:s6_380,s7:s7_387,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0048:dwArg48,Stack +0054:dwArg54,Stack +0058:dwArg58,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +FFFFFFF0:dwLoc10,Stack +FFFFFFF4:dwLoc0C
		defs: a4:a4_401,a5:a5_399,mstatus:mstatus_409,ra:ra_394,s0:s0_395,s7:s7_410,sp:sp_390
l23075FE4:
	word32 a1_981
	word32 s2_983
	word32 s8_985
	word32 s4_984
	word32 a3_982
	sys_sem_signal(s0_278, a4_124, a5_272, mstatus_128, Mem431[sp_296 + 8<i32>:word32], Mem431[sp_296 + 36<i32>:word32], Mem431[sp_296 + 164<i32>:word32], Mem431[sp_296 + 280<i32>:word32], Mem431[sp_296 + 344<i32>:word32], Mem431[sp_296 + 408<i32>:word32], out s1_202, out a1_981, out a3_982, out s2_983, out s3_134, out s4_984, out s5_136, out s6_137, out s8_985)
l23075FEC:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_202
	a5Out = a5_125
	s3Out = s3_134
	s4Out = dwArg04
	s5Out = s5_136
	s6Out = s6_137
	s7Out = s7_138
	s8Out = s4
	mstatusOut = mstatus_128
	return ra_129
lwip_netconn_do_close_internal_exit:


void poll_tcp(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
poll_tcp_entry:
l2307603C:
	word32 a5_9 = CONVERT(Mem7[a0 + 1<i32>:byte], byte, word32)
	word32 s0_11 = a0
	branch a5_9 != 1<32> l23076094
l23076094:
	branch a5_9 != 4<32> l23076052
l2307609A:
	word32 a5_256
	ra = lwip_netconn_do_close_internal(ra, a0, s1, a2, a3, a5_9, s3, s4, s6, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArgF8, out s0_11, out s1, out a5_256, out s3, out s4, out s5, out s6, out s7, out s8, out mstatus)
l2307604E:
	word32 a5_255
	ra = lwip_netconn_do_writemore(ra, s1, a1, a2, a3, a5_9, s5, s6, s7, s8, mstatus, dwArg18, dwArg38, dwArg58, dwArg78, dwArg88, dwArgB8, dwArg0118, out s0_11, out s1, out a5_255, out s3, out s4, out s5, out s6, out s7, out s8, out mstatus)
l23076052:
	word32 a5_84 = CONVERT(Mem7[s0_11 + 36<i32>:byte], byte, word32)
	branch (a5_84 & 16<i32>) == 0<32> l2307608A
l2307605C:
	word32 s0_86 = Mem7[(a5_84 & 16<i32>) + 4<i32>:word32]
	branch (a5_84 & 16<i32>) == 0<32> l2307608A
l23076060:
	branch CONVERT(Mem7[(a5_84 & 16<i32>) + 100<i32>:uint16], uint16, word32) <=u 0xFFFAC0<32> l2307608A
l2307606E:
	word32 a3_90 = CONVERT(Mem7[(a5_84 & 16<i32>) + 102<i32>:uint16], uint16, word32)
	branch a3_90 >u 7<32> l2307608A
l23076078:
	Mem93[s0_86 + 36<i32>:byte] = SLICE(a5_84 & 0xFFFFFFEF<32>, byte, 0)
	word32 s0_94 = Mem93[(a5_84 & 0xFFFFFFEF<32>) + 44<i32>:word32]
	branch (a5_84 & 0xFFFFFFEF<32>) == 0<32> l2307608A
l23076082:
	word32 a6_123
	word32 a7_124
	word32 s10_125
	word32 s11_126
	word32 s2_127
	word32 s9_130
	word32 t0_131
	word32 t1_132
	word32 t3_133
	word32 t4_134
	word32 t5_135
	word32 t6_136
	word32 tp_137
	call a5_84 & 0xFFFFFFEF<32> (retsize: 0;)
		uses: a0:s0_94,a1:2<32>,a2:0<32>,a3:a3_90,a6:a6_123,a7:a7_124,mstatus:mstatus_103,ra:ra_98,s0:s0_94,s1:s1_99,s10:s10_125,s11:s11_126,s2:s2_127,s3:s3_100,s4:s4_102,s5:s5_105,s6:s6_101,s7:s7_104,s8:s8_106,s9:s9_130,Stack +0008:dwLoc08,Stack +0018:dwArg08,Stack +0028:dwArg18,Stack +0038:dwArg28,Stack +0048:dwArg38,Stack +0054:dwArg44,Stack +0058:dwArg48,Stack +0068:dwArg58,Stack +0078:dwArg68,Stack +007C:dwArg6C,Stack +0088:dwArg78,Stack +008C:dwArg7C,Stack +0098:dwArg88,Stack +009C:dwArg8C,Stack +00A8:dwArg98,Stack +00B8:dwArgA8,Stack +00BC:dwArgAC,Stack +00C8:dwArgB8,Stack +00CC:dwArgBC,Stack +00D8:dwArgC8,Stack +00DC:dwArgCC,Stack +00E8:dwArgD8,Stack +00F8:dwArgE8,Stack +0108:dwArgF8,Stack +0128:dwArg0118,t0:t0_131,t1:t1_132,t3:t3_133,t4:t4_134,t5:t5_135,t6:t6_136,tp:tp_137
		defs: a6:a6_123,a7:a7_124,s10:s10_125,s11:s11_126,s2:s2_127,s9:s9_130,t0:t0_131,t1:t1_132,t3:t3_133,t4:t4_134,t5:t5_135,t6:t6_136,tp:tp_137
l2307608A:
	return
poll_tcp_exit:


void recv_raw(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
recv_raw_entry:
l230760A0:
	branch a0 == 0<32> l23076134
l23076134:
	return
l230760A2:
	branch sys_mbox_valid(a0 + 16<i32>) == 0<32> l230760E2
l230760C4:
	word32 a3_34
	word32 a4_35
	word32 mstatus_39
	word32 s1_41
	word32 s3_43
	word32 s4_44
	word32 a0_55
	word32 s2_263
	word32 s5_264
	word32 s6_265
	word32 ra_40 = pbuf_clone(ra, s0, 0<32>, 640<i32>, a2, a3, a4, mstatus, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s1_41, out a0_55, out a3_34, out a4_35, out s2_263, out s3_43, out s4_44, out s5_264, out s6_265, out mstatus_39)
	branch a0_55 == 0<32> l230760E2
l230760D2:
	word32 a0_58
	word32 a3_61
	word32 a4_62
	word32 a2_266
	word32 a5_267
	memp_malloc(s1_41, 6<32>, a3_34, a4_35, mstatus_39, out a0_58, out a2_266, out a3_61, out a4_62, out a5_267)
	branch a0_58 != 0<32> l230760F4
l230760F4:
	Mem66[a0_58:word32] = a0_55
	Mem67[a0_58 + 4<i32>:word32] = a0_55
	Mem71[Mem67[0x42026928<32>:int32] + 8<i32>:word32] = a0_58
	word32 a5_72 = CONVERT(Mem71[s3_43 + 16<i32>:byte], byte, word32)
	Mem73[a0_58 + 12<i32>:word16] = SLICE(a5_72, word16, 0)
	word32 a2_74 = CONVERT(Mem73[a0_55 + 8<i32>:uint16], uint16, word32)
	word32 a0_77
	word32 a3_80
	word32 a4_81
	word32 a5_82
	word32 s4_89
	word32 s1_268
	word32 a1_269
	word32 a7_270
	word32 s2_271
	word32 s3_272
	word32 s5_273
	word32 s6_274
	word32 s0_85 = sys_mbox_trypost(s4_44, a4_62, a5_72, mstatus_39, dwLoc2C, a2_74, dwArgC8, dwArg0108, dwArg0148, out s1_268, out a0_77, out a1_269, out a3_80, out a4_81, out a5_82, out a7_270, out s2_271, out s3_272, out s4_89, out s5_273, out s6_274)
	branch a0_77 == 0<32> l23076128
l23076128:
	word32 s1_101 = Mem76[a5_82 + 44<i32>:word32]
	branch a5_82 == 0<32> l230760E2
l2307612C:
	call a5_82 (retsize: 0;)
		uses: a0:s1_101,a4:a4_81,a5:a5_82,mstatus:mstatus_39,Stack +0004:dwLoc2C,Stack +0084:a2_74,Stack +00F8:dwArgC8,Stack +0138:dwArg0108,Stack +0178:dwArg0148
l23076120:
	word32 a2_291
	word32 a3_292
	word32 a4_293
	word32 a5_294
	netbuf_delete(ra_40, s0_85, a3_80, a4_81, s4_89, mstatus_39, dwArgD8, out a2_291, out a3_292, out a4_293, out a5_294)
l230760DC:
	word32 s0_275
	word32 s1_276
	word32 a0_277
	word32 a1_278
	word32 a2_279
	word32 a3_280
	word32 a4_281
	word32 a5_282
	word32 a7_283
	word32 s2_284
	word32 s3_285
	word32 s4_286
	word32 s5_287
	word32 s6_288
	word32 s8_289
	word32 mstatus_290
	pbuf_free(ra_40, a0_55, a3_61, a4_62, s4_44, mstatus_39, dwArgF8, out s0_275, out s1_276, out a0_277, out a1_278, out a2_279, out a3_280, out a4_281, out a5_282, out a7_283, out s2_284, out s3_285, out s4_286, out s5_287, out s6_288, out s8_289, out mstatus_290)
l230760E2:
	0<32> = dwArg0128
	return
recv_raw_exit:


void sent_tcp(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
sent_tcp_entry:
l23076138:
	branch a0 == 0<32> l2307619E
l2307619E:
	return
l2307613A:
	word32 a5_12 = CONVERT(Mem11[a0 + 1<i32>:byte], byte, word32)
	word32 s1_16 = a2
	branch a5_12 != 1<32> l23076192
l23076192:
	branch a5_12 != 4<32> l23076154
l23076198:
	word32 s0_294
	ra = lwip_netconn_do_close_internal(ra, a0, a2, a2, a3, a5_12, s3, s4, s6, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArgF8, out s0_294, out s1_16, out a5_12, out s3, out s4, out s5, out s6, out s7, out s8, out mstatus)
l23076150:
	word32 s0_293
	ra = lwip_netconn_do_writemore(ra, a2, a1, a2, a3, a5_12, s5, s6, s7, s8, mstatus, dwArg18, dwArg38, dwArg58, dwArg78, dwArg88, dwArgB8, dwArg0118, out s0_293, out s1_16, out a5_12, out s3, out s4, out s5, out s6, out s7, out s8, out mstatus)
l23076154:
	word32 s0_87 = Mem11[a5_12 + 4<i32>:word32]
	branch a5_12 == 0<32> l23076186
l23076158:
	word32 a3_88 = CONVERT(Mem11[a5_12 + 100<i32>:uint16], uint16, word32)
	branch a3_88 <=u 0xFFFAC0<32> l23076186
l23076166:
	branch CONVERT(Mem11[a5_12 + 102<i32>:uint16], uint16, word32) >u 7<32> l23076186
l23076170:
	word32 a5_93 = CONVERT(Mem11[s0_87 + 36<i32>:byte], byte, word32)
	Mem95[s0_87 + 36<i32>:byte] = SLICE(a5_93 & 0xFFFFFFEF<32>, byte, 0)
	word32 s0_96 = Mem95[(a5_93 & 0xFFFFFFEF<32>) + 44<i32>:word32]
	branch (a5_93 & 0xFFFFFFEF<32>) == 0<32> l23076186
l2307617E:
	word32 a5_115
	word32 a4_116
	word32 tp_120
	word32 a6_126
	word32 a7_127
	word32 s10_128
	word32 s11_129
	word32 s2_130
	word32 s9_133
	word32 t0_134
	word32 t1_135
	word32 t3_136
	word32 t4_137
	word32 t5_138
	word32 t6_139
	call a5_93 & 0xFFFFFFEF<32> (retsize: 0;)
		uses: a0:s0_96,a1:2<32>,a2:s1_97,a3:a3_88,a4:a4_116,a5:a5_115,a6:a6_126,a7:a7_127,mstatus:mstatus_105,ra:ra_101,s0:s0_96,s1:s1_97,s10:s10_128,s11:s11_129,s2:s2_130,s3:s3_102,s4:s4_104,s5:s5_107,s6:s6_103,s7:s7_106,s8:s8_108,s9:s9_133,Stack +0008:dwLoc08,Stack +0018:dwArg08,Stack +0028:dwArg18,Stack +0038:dwArg28,Stack +0048:dwArg38,Stack +0054:dwArg44,Stack +0058:dwArg48,Stack +0068:dwArg58,Stack +0078:dwArg68,Stack +007C:dwArg6C,Stack +0088:dwArg78,Stack +008C:dwArg7C,Stack +0098:dwArg88,Stack +009C:dwArg8C,Stack +00A8:dwArg98,Stack +00B8:dwArgA8,Stack +00BC:dwArgAC,Stack +00C8:dwArgB8,Stack +00CC:dwArgBC,Stack +00D8:dwArgC8,Stack +00DC:dwArgCC,Stack +00E8:dwArgD8,Stack +00F8:dwArgE8,Stack +0108:dwArgF8,Stack +0128:dwArg0118,t0:t0_134,t1:t1_135,t3:t3_136,t4:t4_137,t5:t5_138,t6:t6_139,tp:tp_120
		defs: a4:a4_116,a5:a5_115,a6:a6_126,a7:a7_127,s10:s10_128,s11:s11_129,s2:s2_130,s9:s9_133,t0:t0_134,t1:t1_135,t3:t3_136,t4:t4_137,t5:t5_138,t6:t6_139,tp:tp_120
l23076186:
	return
sent_tcp_exit:


void recv_tcp(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 s2, word32 s7, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s7:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
recv_tcp_entry:
l230761A2:
	branch a0 == 0<32> l230761C8
l230761B2:
	branch sys_mbox_valid(a0 + 16<i32>) != 0<32> l230761EA
l230761EA:
	word32 a2_26
	branch a2 == 0<32> l2307620C
l2307620C:
	a2_26 = 0<32>
l230761EC:
	a2_26 = CONVERT(Mem13[a2 + 8<i32>:uint16], uint16, word32)
l230761F0:
	word32 a0_41
	word32 a4_45
	word32 a5_46
	word32 s1_302
	word32 a1_303
	word32 a3_304
	word32 a7_305
	word32 s2_306
	word32 s3_307
	word32 s4_308
	word32 s5_309
	word32 s6_310
	sys_mbox_trypost(a0 + 16<i32>, a4, a5, mstatus, dwLoc2C, a2_26, dwArgC8, dwArg0108, dwArg0148, out s1_302, out a0_41, out a1_303, out a3_304, out a4_45, out a5_46, out a7_305, out s2_306, out s3_307, out s4_308, out s5_309, out s6_310)
	branch a0_41 != 0<32> l23076218
l23076218:
l230761FE:
	word32 s1_66 = Mem34[a5_46 + 44<i32>:word32]
	branch a5_46 == 0<32> l230761C6
l23076202:
	call a5_46 (retsize: 0;)
		uses: a0:s1_66,a4:a4_45,a5:a5_46,mstatus:mstatus,Stack +0004:dwLoc2C,Stack +0084:a2_32,Stack +00F8:dwArgC8,Stack +0138:dwArg0108,Stack +0178:dwArg0148
l230761C4:
	branch a2 != 0<32> l230761D8
l230761D8:
	word32 a4_98
	word32 a3_101
	word32 mstatus_104
	word32 s0_106
	word32 s4_112
	word32 s7_282
	word32 s3_281
	word32 a5_280
	word32 a0_279
	word32 s1_278
	word32 s9_283
	word32 s10_284
	word32 s11_285
	word32 s0_286
	word32 s1_287
	word32 a0_288
	word32 a1_289
	word32 a2_290
	word32 a3_291
	word32 a4_292
	word32 a5_293
	word32 a7_294
	word32 s2_295
	word32 s3_296
	word32 s4_297
	word32 s5_298
	word32 s6_299
	word32 s8_300
	word32 mstatus_301
	pbuf_free(tcp_recved(ra, a0, a1, CONVERT(Mem13[a2 + 8<i32>:uint16], uint16, word32), s7, mstatus, s2, dwArg28, dwArg38, dwArg58, ra, dwArg68, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, out s0_106, out s1_278, out a0_279, out a3_101, out a4_98, out a5_280, out s3_281, out s4_112, out s7_282, out s9_283, out s10_284, out s11_285, out mstatus_104), s0_106, a3_101, a4_98, s4_112, mstatus_104, dwArgF8, out s0_286, out s1_287, out a0_288, out a1_289, out a2_290, out a3_291, out a4_292, out a5_293, out a7_294, out s2_295, out s3_296, out s4_297, out s5_298, out s6_299, out s8_300, out mstatus_301)
l230761C6:
l230761C8:
	0<32> = dwArg0128
	return
recv_tcp_exit:


word32 lwip_netconn_is_err_msg(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_accept
//      netconn_recv_data
//      netconn_drain
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
lwip_netconn_is_err_msg_entry:
l2307621C:
	word32 a5_10
	word32 a5_11
	branch a0 != 0x230CBAFA<32> l23076234
l23076234:
	branch a0 != 0x230CBAFC<32> l23076244
l23076244:
	a4 = 0x230CBAFB<32>
	a5_10 = 0<32>
	branch a0 != 0x230CBAFB<32> l23076230
l23076252:
	a5_11 = 0xFFFFFFF1<32>
l23076240:
	a5_11 = 0xFFFFFFF2<32>
l23076228:
	a5_11 = 0xFFFFFFF3<32>
l2307622A:
	Mem17[a1:byte] = SLICE(a5_11, byte, 0)
	a5_10 = 1<32>
l23076230:
	a4Out = a4
	a5Out = a5_10
	return a5_10
lwip_netconn_is_err_msg_exit:


void lwip_netconn_do_newconn(word32 ra, word32 s1, word32 a1, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra s10 s11 s7 s9 sp
lwip_netconn_do_newconn_entry:
l23076256:
	word32 a0_10 = Mem9[s1:word32]
	Mem11[a0_10 + 4<i32>:byte] = 0<8>
	word32 s0_101 = a0_10
	word32 s1_14 = Mem11[a5 + 4<i32>:word32]
	branch a5 != 0<32> l230762C0
l2307626A:
	word32 a5_106
	word32 a5_15 = CONVERT(Mem11[s1_14:byte], byte, word32)
	branch (a5_15 & 240<i32>) == 32<i32> l230762D0
l230762D0:
	word32 a4_24
	word32 s1_27
	word32 a3_269
	udp_new_ip_type(ra, s1_14, a3, 32<i32>, mstatus, out s1_27, out a3_269, out a4_24, out a5_106)
	Mem31[4<i32>:word32] = s1_27
	a0_10 = 0<32>
	s0_101 = Mem31[a4_24:word32]
	a4 = Mem31[a5_106 + 4<i32>:word32]
	branch a5_106 == 0<32> l2307630A
l230762DE:
	a4 = 34<i32>
	branch CONVERT(Mem31[a4:byte], byte, word32) != 34<i32> l230762F0
l230762EA:
	Mem37[a5_106 + 16<i32>:byte] = 1<8>
	a4 = 1<32>
l230762F0:
	udp_recv(0<32>, 0x23075A5E<32>, Mem39[4<32>:word32])
l2307627A:
	branch (a5_15 & 240<i32>) == 64<i32> l2307629C
l2307629C:
	word32 a2_50
	Mem59[a0_10 + 4<i32>:word32] = raw_new_ip_type(ra, CONVERT(Mem11[a0_10 + 8<i32>:byte], byte, word32), a3, 64<i32>, mstatus, out a0_10, out a2_50, out a4, out a5_106)
	s0_101 = Mem59[a2_50:word32]
	word32 a2_61 = Mem59[a0_10 + 4<i32>:word32]
	branch a0_10 == 0<32> l2307630A
l230762AE:
	raw_recv(a0_10, 0x230760A0<32>, a2_61)
l23076282:
	a4 = 0x10<32>
	branch (a5_15 & 240<i32>) != 0x10<32> l23076302
l23076302:
	a5 = 0xFFFFFFFA<32>
l23076288:
	word32 a0_71
	word32 s1_82
	word32 s7_276
	word32 s8_277
	word32 s9_278
	word32 s4_274
	word32 s6_275
	word32 a1_270
	word32 a3_271
	word32 s2_272
	word32 s3_273
	tcp_new_ip_type(ra, s1_14, a1, a3, 0x10<32>, s3, s4, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgF8, out s1_82, out a0_71, out a1_270, out a3_271, out a4, out a5_106, out s2_272, out s3_273, out s4_274, out s6_275, out s7_276, out s8_277, out s9_278, out mstatus)
	Mem100[a0_71 + 4<i32>:word32] = s1_82
	s0_101 = Mem100[a0_71:word32]
	a0_10 = Mem100[a5_106 + 4<i32>:word32]
	branch a5_106 == 0<32> l2307630A
l23076296:
	word32 a1_279
	a0_10 = setup_tcp(s0_101, out a1_279)
l230762BA:
	s0_101 = Mem108[a5_106:word32]
	a5 = Mem108[a5_106 + 4<i32>:word32]
	branch a5 == 0<32> l2307630A
l2307630A:
	a5 = 0xFFFFFFFF<32>
l23076304:
	Mem115[s0_101 + 4<i32>:byte] = SLICE(a5, byte, 0)
l230762C0:
	word32 a0_130 = a0_10 + 0xC<32>
l230762CC_thunk_sys_sem_signal:
	word32 s5_286
	word32 s6_287
	word32 s8_288
	word32 a1_281
	word32 s3_284
	word32 s4_285
	word32 a3_282
	word32 s2_283
	word32 s1_280
	sys_sem_signal(a0_130, a4, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_280, out a1_281, out a3_282, out s2_283, out s3_284, out s4_285, out s5_286, out s6_287, out s8_288)
	return
lwip_netconn_do_newconn_exit:


word32 netconn_alloc(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg38, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_new_with_proto_and_callback
//      accept_function
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0038:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
netconn_alloc_entry:
l2307630E:
	word32 s2_16 = a1
	word32 a0_20
	word32 a2_199
	word32 a4_110
	word32 a5_112
	word32 a3_111
	word32 s1_25 = memp_malloc(a0, 7<32>, a3, a4, mstatus, out a0_20, out a2_199, out a3_111, out a4_110, out a5_112)
	word32 s0_119 = a0_20
	branch a0_20 == 0<32> l230763A2
l23076326:
	Mem28[a0_20 + 8<i32>:byte] = 0<8>
	Mem29[a0_20:byte] = SLICE(s1_25, byte, 0)
	Mem30[a0_20 + 4<i32>:word32] = 0<32>
	word32 a5_31 = 32<i32>
	branch (s1_25 & 240<i32>) == 32<i32> l2307634C
l2307633E:
	a5_31 = 64<i32>
	branch (s1_25 & 240<i32>) == 64<i32> l2307637A
l2307637A:
l23076346:
	a5_31 = 0x10<32>
	branch (s1_25 & 240<i32>) != 0x10<32> l2307636E
l2307634C:
l23076350:
	word32 a0_55
	word32 a5_60
	word32 a2_208
	word32 s4_209
	sys_mbox_new(ra, a3_111, a4_110, a5_31, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out a0_55, out a2_208, out a3_111, out a4_110, out a5_60, out s2_16, out s3, out s4_209)
	branch a0_55 != 0<32> l2307636E
l2307635C:
	word32 a0_71
	word32 a2_202
	word32 a5_203
	word32 s1_78 = sys_sem_new(ra, a3_111, a4_110, a5_60, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_71, out a2_202, out a3_111, out a4_110, out a5_203, out s2_16, out s3)
	branch a0_71 == 0<32> l2307637E
l2307637E:
	sys_mbox_set_invalid(a0_20 + 20<i32>)
	Mem87[a0_20 + 1<i32>:byte] = 0<8>
	Mem88[0x17<32>:word32] = a0_20
	Mem89[a0_20 + 44<i32>:word32] = s2_16
	Mem90[a0_20 + 40<i32>:word32] = 0<32>
	Mem91[a0_20 + 28<i32>:word32] = 0<32>
	Mem92[a0_20 + 32<i32>:word32] = 0<32>
	Mem93[a0_20 + 36<i32>:byte] = 0<8>
	a5_112 = 0xFFFFFFFF<32>
l23076368:
	word32 a0_204
	word32 a2_205
	word32 a5_206
	word32 s4_207
	sys_mbox_free(s1_78, a3_111, a4_110, mstatus, dwArg0138, dwArg0178, out a0_204, out a2_205, out a3_111, out a4_110, out a5_206, out s4_207)
l2307636E:
	word32 a0_200
	word32 a2_201
	memp_free(7<32>, a0_20, a3_111, a4_110, mstatus, out a0_200, out a2_201, out a3_111, out a4_110, out a5_112)
	s0_119 = 0<32>
l230763A2:
	0<32> = dwArg38
	a2Out = dwArg10
	a3Out = a3_111
	a4Out = a4_110
	a5Out = a5_112
	s2Out = s2_16
	s3Out = s3
	return s0_119
netconn_alloc_exit:


word32 netconn_free(word32 a0, word32 a3, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_delete
//      netconn_drain
//      accept_function
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
netconn_free_entry:
l230763B0:
	sys_mbox_valid(a0 + 0x10<32>)
	sys_mbox_valid(a0 + 20<i32>)
	word32 a3_23
	word32 a4_24
	word32 s1_28
	word32 s4_29
	word32 a5_57
	word32 s0_27 = sys_sem_free(a0 + 12<i32>, a3, mstatus, dwArg0148, dwArg0188, out s1_28, out a3_23, out a4_24, out a5_57, out s4_29)
	sys_sem_set_invalid(s1_28)
l230763E4_thunk_memp_free:
	word32 a5_39
	word32 a3_42
	word32 a4_43
	word32 a0_58
	word32 a2_59
	word32 s1_44 = memp_free(7<32>, s0_27, a3_23, a4_24, mstatus, out a0_58, out a2_59, out a3_42, out a4_43, out a5_39)
	a3Out = a3_42
	a4Out = a4_43
	a5Out = a5_39
	s4Out = s4_29
	return s1_44
netconn_free_exit:


word32 netconn_drain(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_drain
//      lwip_netconn_do_delconn
//      lwip_netconn_do_close
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netconn_drain_entry:
l230763E8:
	word32 s1_101 = a0 + 16<i32>
	word32 s0_10 = a0
	branch sys_mbox_valid(a0 + 16<i32>) == 0<32> l2307641E
l23076402:
l23076406:
	word32 a0_30
	word32 a4_34
	word32 s2_40
	word32 s4_42
	word32 a1_516
	s0_10 = sys_arch_mbox_tryfetch(s1_101, fp + -36<i32>, a3, a4, a5, mstatus, dwLoc2C, dwArg54, dwArgC8, dwArg0108, out s1_101, out a0_30, out a1_516, out a3, out a4_34, out s2_40, out s3, out s4_42)
	branch a0_30 != s2_40 l23076438
l23076438:
	branch (CONVERT(Mem17[s0_10:byte], byte, word32) & 240<i32>) != s3 l23076458
l23076458:
	word32 a2_515
	s1_101 = netbuf_delete(ra, a0_30, a3, a4_34, s4_42, mstatus, dwArgD8, out a2_515, out a3, out a4, out a5)
l23076446:
	word32 a0_64 = lwip_netconn_is_err_msg(a0_30, fp + -37<i32>, out a4, out a5)
	branch a0_64 != 0<32> l23076406
l23076450:
	word32 s8_526
	word32 s2_522
	word32 a0_518
	word32 s4_524
	word32 s5_525
	word32 s3_523
	word32 a2_520
	word32 a7_521
	word32 a1_519
	word32 s0_517
	ra = pbuf_free(ra, a0_64, a3, a4, s4_42, mstatus, dwArgF8, out s0_517, out s1_101, out a0_518, out a1_519, out a2_520, out a3, out a4, out a5, out a7_521, out s2_522, out s3_523, out s4_524, out s5_525, out s6, out s8_526, out mstatus)
l23076412:
	word32 a2_510
	word32 a0_509
	s1_101 = sys_mbox_free(s1_101, a3, a4_34, mstatus, dwArg0118, dwArg0158, out a0_509, out a2_510, out a3, out a4, out a5, out s4)
	sys_mbox_set_invalid(s1_101)
l2307641E:
	word32 s0_107 = s0_10 + 0x14<32>
	word32 a0_109 = sys_mbox_valid(s0_107)
	branch a0_109 != 0<32> l23076482
l23076482:
	word32 a0_120
	word32 a4_124
	word32 s1_129
	word32 s2_130
	word32 s4_512
	word32 a1_511
	s0_107 = sys_arch_mbox_tryfetch(s0_107, fp + -36<i32>, a3, a4, a5, mstatus, dwLoc2C, dwArg54, dwArgC8, dwArg0108, out s1_129, out a0_120, out a1_511, out a3, out a4_124, out s2_130, out s3, out s4_512)
	branch a0_120 != s2_130 l2307645E
l2307645E:
	branch lwip_netconn_is_err_msg(a0_120, fp + -37<i32>, out a4, out a5) != 0<32> l23076482
l2307646A:
	word32 a3_180
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg8 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg40 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg84 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg108 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg172 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg216 = <invalid>
	word32 a0_151
	word32 s3_155
	word32 a5_160
	word32 mstatus_161
	word32 a4_162
	word32 a3_163
	word32 s4_166
	word32 s1_542
	word32 s7_543
	ra = netconn_drain(ra, s1_129, a3_163, a4_162, a5_160, s7, mstatus_161, stackArg8, stackArg24, stackArg40, dwArg14, stackArg72, stackArg84, stackArg88, stackArg104, stackArg108, stackArg120, stackArg136, stackArg168, stackArg172, stackArg184, stackArg200, stackArg216, dwArgC8, dwArgD8, dwArg0118, dwArgF8, dwArg0158, out s0_107, out s1_542, out a0_151, out a3_163, out a4_162, out a5_160, out s3_155, out s4_166, out s6, out s7_543, out mstatus_161)
	word32 s1_175 = Mem119[a0_151 + 4<i32>:word32]
	mstatus = mstatus_161
	a3_180 = a3_163
	branch a0_151 == 0<32> l2307647C
l23076474:
	word32 s10_554
	word32 s3_550
	word32 a1_546
	word32 s11_555
	word32 s5_552
	word32 s9_553
	word32 s4_551
	word32 a5_548
	word32 s2_549
	word32 a4_547
	word32 a0_545
	ra = tcp_abort(ra, s1_175, a0_151, a3_163, s3_155, s4_166, s7, mstatus_161, dwLoc30, dwLoc2C, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArgA8, dwArgAC, dwArgB8, dwArgD8, out s0_107, out s1_175, out a0_545, out a1_546, out a3_180, out a4_547, out a5_548, out s2_549, out s3_550, out s4_551, out s5_552, out s6, out s7, out s9_553, out s10_554, out s11_555, out mstatus)
	Mem206[s1_175 + 4<i32>:word32] = 0<32>
l2307647C:
	word32 s4_544
	netconn_free(s1_175, a3_180, mstatus, dwArg0118, dwArg0158, out a3, out a4, out a5, out s4_544)
l2307648E:
	word32 a2_514
	word32 a0_513
	s1_101 = sys_mbox_free(s0_107, a3, a4_124, mstatus, dwArg0118, dwArg0158, out a0_513, out a2_514, out a3, out a4, out a5, out s4)
	sys_mbox_set_invalid(s0_107)
	a0_109 = s0_107
l2307642A:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_101
	a0Out = a0_109
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
netconn_drain_exit:


void accept_function(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg18, word32 dwArgD8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0018:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
accept_function_entry:
l2307649C:
	branch a0 != 0<32> l230764BC
l230764BC:
	branch sys_mbox_valid(a0 + 20<i32>) == 0<32> l230764AA
l230764CC:
	branch a1 != 0<32> l230764EE
l230764EE:
	word32 a3_117
	word32 a4_118
	word32 s3_125
	word32 s2_137
	word32 s1_123
	word32 a5_119
	word32 s0_21 = Mem13[a1 + 44<i32>:word32]
	word32 a4_28
	word32 a5_29
	word32 s2_31
	word32 s3_36
	word32 a2_339
	word32 a3_340
	word32 a0_33 = netconn_alloc(ra, CONVERT(Mem13[s0_21:byte], byte, word32), a3, a4, mstatus, dwLoc20, dwLoc1C, dwArg18, s3, dwArgD8, dwArg0118, dwArg0158, out a2_339, out a3_340, out a4_28, out a5_29, out s2_31, out s3_36)
	branch a0_33 != 0<32> l2307651C
l2307651C:
	Mem41[a0_33 + 4<i32>:word32] = s3_36
	word32 a1_350
	setup_tcp(s0_21, out a1_350)
	word32 a0_47
	word32 a7_352
	word32 a1_351
	word32 s2_353
	word32 s4_354
	word32 s5_355
	word32 s6_356
	word32 s0_55 = sys_mbox_trypost(s2_31, a4_28, a5_29, mstatus, dwLoc1C, s3, dwArgD8, dwArg0118, dwArg0158, out s1_123, out a0_47, out a1_351, out a3_117, out a4_118, out a5_119, out a7_352, out s2_353, out s3_125, out s4_354, out s5_355, out s6_356)
	s2_137 = a0_47
	branch a0_47 == 0<32> l2307650E
l23076530:
	word32 s1_71 = Mem41[s0_55 + 4<i32>:word32]
	tcp_arg(s0_55, 0<32>)
	tcp_recv(s0_55, 0<32>)
	tcp_sent(s0_55, 0<32>)
	tcp_poll(s0_55, 0<32>, 0<32>)
	tcp_err(s0_55, 0<32>)
	Mem86[s1_71 + 4<i32>:word32] = 0<32>
	word32 a3_90
	word32 a0_363
	word32 a2_364
	word32 a4_365
	word32 a5_366
	word32 s4_367
	word32 s1_94 = sys_mbox_free(s1_71 + 16<i32>, a3_117, a4_118, mstatus, dwArg0128, dwArg0168, out a0_363, out a2_364, out a3_90, out a4_365, out a5_366, out s4_367)
	sys_mbox_set_invalid(s1_71 + 16<i32>)
	word32 a3_368
	word32 a4_369
	word32 a5_370
	word32 s4_371
	netconn_free(s1_94, a3_90, mstatus, dwArg0128, dwArg0168, out a3_368, out a4_369, out a5_370, out s4_371)
l230764FC:
	word32 a0_114
	word32 a1_357
	word32 a7_358
	word32 s2_359
	word32 s4_360
	word32 s5_361
	word32 s6_362
	sys_mbox_trypost(s2_31, a4_28, a5_29, mstatus, dwLoc1C, s3, dwArgD8, dwArg0118, dwArg0158, out s1_123, out a0_114, out a1_357, out a3_117, out a4_118, out a5_119, out a7_358, out s2_359, out s3_125, out s4_360, out s5_361, out s6_362)
	s2_137 = 0xFFFFFFFF<32>
	branch a0_114 != 0<32> l230764AC
l2307650E:
	word32 s0_140 = Mem139[a5_119 + 44<i32>:word32]
	branch a5_119 == 0<32> l230764AC
l23076512:
	word32 a5_165
	word32 tp_169
	word32 a7_170
	word32 s5_171
	word32 s6_172
	word32 t0_173
	word32 t1_174
	word32 t4_175
	word32 t5_176
	word32 t6_177
	call a5_119 (retsize: 0;)
		uses: a0:s0_140,a1:0<32>,a2:0<32>,a3:a3_150,a4:a4_149,a5:a5_165,a7:a7_170,mstatus:mstatus,ra:ra,s0:s0_140,s1:s1_145,s2:s2_146,s3:s3_147,s5:s5_171,s6:s6_172,Stack +0000:dwLoc20,Stack +0004:dwLoc1C,Stack +0038:dwArg18,Stack +00F8:dwArgD8,Stack +0138:dwArg0118,Stack +0148:dwArg0128,Stack +0178:dwArg0158,Stack +0188:dwArg0168,t0:t0_173,t1:t1_174,t4:t4_175,t5:t5_176,t6:t6_177,tp:tp_169
		defs: a5:a5_165,a7:a7_170,s5:s5_171,s6:s6_172,t0:t0_173,t1:t1_174,t4:t4_175,t5:t5_176,t6:t6_177,tp:tp_169
l230764D0:
	word32 a0_182
	word32 a4_186
	word32 a5_187
	word32 s5_348
	word32 s6_349
	word32 s2_345
	word32 s4_347
	word32 s3_346
	word32 a1_342
	word32 a7_344
	word32 a3_343
	word32 s1_341
	sys_mbox_trypost(a0 + 20<i32>, a4, a5, mstatus, dwLoc1C, s3, dwArgD8, dwArg0118, dwArg0158, out s1_341, out a0_182, out a1_342, out a3_343, out a4_186, out a5_187, out a7_344, out s2_345, out s3_346, out s4_347, out s5_348, out s6_349)
	branch a0_182 != 0<32> l230764AA
l230764E0:
	word32 s0_205 = Mem13[a5_187 + 44<i32>:word32]
	branch a5_187 == 0<32> l230764AA
l230764E4:
	call a5_187 (retsize: 0;)
		uses: a0:s0_205,a4:a4_186,a5:a5_187,mstatus:mstatus,Stack +0004:dwLoc1C,Stack +0084:s3,Stack +00F8:dwArgD8,Stack +0138:dwArg0118,Stack +0178:dwArg0158
l230764AA:
l230764AC:
	return
accept_function_exit:


void lwip_netconn_do_delconn(word32 ra, word32 s0, word32 a0, word32 a3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_delconn_entry:
l2307657A:
	word32 a5_110
	word32 a0_10 = Mem7[a0:word32]
	word32 a5_11 = CONVERT(Mem7[a0_10 + 1<i32>:byte], byte, word32)
	word32 a4_111 = a5_11 & 253<i32>
	branch (a5_11 & 253<i32>) == 0<32> l230765BA
l2307658E:
	a4_111 = 3<32>
	branch a5_11 != 3<32> l2307659C
l23076594:
	word32 a5_14 = CONVERT(Mem7[a0_10 + 36<i32>:byte], byte, word32)
	a5_11 = a5_14 & 4<32>
	branch (a5_14 & 4<32>) != 0<32> l230765BA
l230765BA:
	Mem17[a0 + 4<i32>:byte] = 0<8>
	word32 a4_33
	word32 s1_40
	word32 s3_44
	word32 s4_45
	word32 s6_47
	word32 s0_620
	word32 a0_29
	word32 a3_100
	word32 s7_116
	word32 ra_108 = netconn_drain(ra, a0_10, a3, a4_111, a5_11, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg34, dwArg38, dwArg44, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0148, out s0_620, out s1_40, out a0_29, out a3_100, out a4_33, out a5_110, out s3_44, out s4_45, out s6_47, out s7_116, out mstatus)
	word32 s0_58 = Mem17[a4_33:word32]
	a4_111 = Mem17[a0_29 + 4<i32>:word32]
	branch a0_29 == 0<32> l2307660C
l230765C8:
	word32 a5_60 = CONVERT(Mem17[a4_111:byte], byte, word32)
	a5_110 = a5_60 & 240<i32>
	branch (a5_60 & 240<i32>) == 32<i32> l23076626
l23076626:
	Mem63[a0_29 + 36<i32>:word32] = 0<32>
	word32 a2_630
	udp_remove(a0_29, 32<i32>, mstatus, out a0_29, out a2_630, out a3_100, out a4_111, out a5_110)
l230765D8:
	branch (a5_60 & 240<i32>) == 64<i32> l23076602
l23076602:
	a0_29 = raw_remove(a0_29, 64<i32>, a5_60 & 240<i32>, mstatus, out a3_100, out a4_111, out a5_110)
l230765E0:
	a3_100 = 0x10<32>
	branch (a5_60 & 240<i32>) != 0x10<32> l23076606
l23076606:
	Mem87[a5_110 + 4<i32>:word32] = 0<32>
l2307660C:
	word32 s0_91 = Mem90[a0_29:word32]
	word32 a0_109 = Mem90[a5_110 + 44<i32>:word32]
	branch a5_110 == 0<32> l23076618
l23076612:
	word32 a6_117
	word32 a7_118
	word32 s1_119
	word32 s10_120
	word32 s11_121
	word32 s2_122
	word32 s3_123
	word32 s4_124
	word32 s5_125
	word32 s6_126
	word32 s8_127
	word32 s9_128
	word32 t0_129
	word32 t1_130
	word32 t3_131
	word32 t4_132
	word32 t5_133
	word32 t6_134
	word32 tp_135
	call a5_110 (retsize: 0;)
		uses: a0:a0_93,a1:0<32>,a2:0<32>,a3:a3_100,a6:a6_117,a7:a7_118,mstatus:mstatus_37,ra:ra_38,s0:s0_91,s1:s1_119,s10:s10_120,s11:s11_121,s2:s2_122,s3:s3_123,s4:s4_124,s5:s5_125,s6:s6_126,s7:s7_48,s8:s8_127,s9:s9_128,Stack +0008:dwLoc08,Stack +0018:dwArg08,Stack +0020:dwArg10,Stack +0028:dwArg18,Stack +0038:dwArg28,Stack +0044:dwArg34,Stack +0048:dwArg38,Stack +0054:dwArg44,Stack +0058:dwArg48,Stack +0064:dwArg54,Stack +0068:dwArg58,Stack +006C:dwArg5C,Stack +0078:dwArg68,Stack +0088:dwArg78,Stack +008C:dwArg7C,Stack +0098:dwArg88,Stack +009C:dwArg8C,Stack +00A8:dwArg98,Stack +00AC:dwArg9C,Stack +00B8:dwArgA8,Stack +00C8:dwArgB8,Stack +00CC:dwArgBC,Stack +00D8:dwArgC8,Stack +00DC:dwArgCC,Stack +00E8:dwArgD8,Stack +00EC:dwArgDC,Stack +00F8:dwArgE8,Stack +0108:dwArgF8,Stack +0118:dwArg0108,Stack +0128:dwArg0118,Stack +0158:dwArg0148,t0:t0_129,t1:t1_130,t3:t3_131,t4:t4_132,t5:t5_133,t6:t6_134,tp:tp_135
		defs: a0:a0_109,a3:a3_113,a4:a4_111,a5:a5_110,a6:a6_117,a7:a7_118,mstatus:mstatus_115,ra:ra_108,s1:s1_119,s10:s10_120,s11:s11_121,s2:s2_122,s3:s3_123,s4:s4_124,s5:s5_125,s6:s6_126,s7:s7_116,s8:s8_127,s9:s9_128,t0:t0_129,t1:t1_130,t3:t3_131,t4:t4_132,t5:t5_133,t6:t6_134,tp:tp_135
l23076618:
	word32 s0_138 = Mem90[a0_109:word32]
	a0_10 = Mem90[a5_110 + 44<i32>:word32]
	branch a5_110 == 0<32> l230765A2
l2307661E:
	word32 a6_159
	word32 a7_160
	word32 s1_161
	word32 s10_162
	word32 s11_163
	word32 s2_164
	word32 s3_165
	word32 s4_166
	word32 s5_167
	word32 s6_168
	word32 s8_169
	word32 s9_170
	word32 t0_171
	word32 t1_172
	word32 t3_173
	word32 t4_174
	word32 t5_175
	word32 t6_176
	word32 tp_177
	call a5_110 (retsize: 0;)
		uses: a0:a0_140,a1:2<32>,a2:0<32>,a3:a3_145,a6:a6_159,a7:a7_160,mstatus:mstatus_144,ra:ra_143,s0:s0_138,s1:s1_161,s10:s10_162,s11:s11_163,s2:s2_164,s3:s3_165,s4:s4_166,s5:s5_167,s6:s6_168,s7:s7_146,s8:s8_169,s9:s9_170,Stack +0008:dwArg08,Stack +0010:dwArg10,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0034:dwArg34,Stack +0038:dwArg38,Stack +0044:dwArg44,Stack +0048:dwArg48,Stack +0054:dwArg54,Stack +0058:dwArg58,Stack +005C:dwArg5C,Stack +0068:dwArg68,Stack +0078:dwArg78,Stack +007C:dwArg7C,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00BC:dwArgBC,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +0118:dwArg0118,Stack +0148:dwArg0148,Stack +FFFFFFF8:dwLoc08,t0:t0_171,t1:t1_172,t3:t3_173,t4:t4_174,t5:t5_175,t6:t6_176,tp:tp_177
		defs: a0:a0_151,a4:a4_153,a5:a5_152,a6:a6_159,a7:a7_160,mstatus:mstatus_157,s1:s1_161,s10:s10_162,s11:s11_163,s2:s2_164,s3:s3_165,s4:s4_166,s5:s5_167,s6:s6_168,s8:s8_169,s9:s9_170,t0:t0_171,t1:t1_172,t3:t3_173,t4:t4_174,t5:t5_175,t6:t6_176,tp:tp_177
l230765E6:
	Mem179[a4_111 + 1<i32>:byte] = 4<8>
	Mem181[s0_58 + 8<i32>:byte] = 3<8>
	Mem183[Mem181[3<32>:word32] + 40<i32>:word32] = 3<32>
l230765FE_thunk_lwip_netconn_do_close_internal:
	word32 mstatus_640
	word32 s3_634
	word32 s8_639
	word32 s5_636
	word32 s4_635
	word32 s7_638
	word32 s6_637
	word32 a5_633
	word32 s1_632
	word32 s0_631
	lwip_netconn_do_close_internal(ra_108, s0, s1_40, dwArg10, 0x10<32>, 3<32>, s3_44, s4_45, s6_47, s7_116, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg54, dwArg58, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, out s0_631, out s1_632, out a5_633, out s3_634, out s4_635, out s5_636, out s6_637, out s7_638, out s8_639, out mstatus_640)
	return
l2307659C:
	Mem219[a0 + 4<i32>:byte] = 0xFB<8>
	a5_110 = 0xFFFFFFFB<32>
l230765A2:
	word32 a0_225 = sys_sem_valid(a0_10 + 0xC<32>)
	branch a0_225 == 0<32> l23076634
l23076634:
	return
l230765AC:
l230765B6_thunk_sys_sem_signal:
	word32 s6_628
	word32 s8_629
	word32 a1_622
	word32 s5_627
	word32 a3_623
	word32 s2_624
	word32 s4_626
	word32 s3_625
	word32 s1_621
	sys_sem_signal(a0_225 + 0xC<32>, a4_111, a5_110, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_621, out a1_622, out a3_623, out s2_624, out s3_625, out s4_626, out s5_627, out s6_628, out s8_629)
	return
lwip_netconn_do_delconn_exit:


void lwip_netconn_do_bind(word32 s1, word32 a1, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg24, word32 dwArg34, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_bind_entry:
l2307663C:
	word32 a0_19 = Mem7[a4:word32]
	word32 a5_11 = 0xFFFFFFFA<32>
	word32 a4_12 = Mem7[a0_19 + 4<i32>:word32]
	branch a0_19 == 0<32> l2307666C
l2307664C:
	word32 a5_13 = CONVERT(Mem7[a4_12:byte], byte, word32)
	branch (a5_13 & 240<i32>) == 32<i32> l23076688
l23076688:
	word32 a3_119
	word32 a5_120
	a0_19 = udp_bind(a0_19, a1, CONVERT(Mem7[a0_19 + 12<i32>:uint16], uint16, word32), out a3_119, out a4_12, out a5_120)
l2307665C:
	a4_12 = 64<i32>
	branch (a5_13 & 240<i32>) == 64<i32> l2307667E
l2307667E:
	a0_19 = raw_bind(a0_19, a1)
l23076664:
	a4_12 = 0x10<32>
	branch (a5_13 & 240<i32>) == 0x10<32> l23076694
l23076694:
	a0_19 = tcp_bind(s1, a0_19, a1, CONVERT(Mem7[a0_19 + 12<i32>:uint16], uint16, word32), a5_13 & 240<i32>, mstatus, dwArg14, dwArg34, out a4_12)
l23076684:
	a5_11 = a0_19
l2307666A:
	a5_11 = 0xFFFFFFFA<32>
l2307666C:
	Mem58[Mem7[a0_19:word32] + 4<i32>:byte] = SLICE(a5_11, byte, 0)
	word32 a0_63 = a0_19 + 0xC<32>
l2307667A_thunk_sys_sem_signal:
	word32 s8_129
	word32 s5_127
	word32 s6_128
	word32 s3_125
	word32 s4_126
	word32 a3_123
	word32 s2_124
	word32 s1_121
	word32 a1_122
	sys_sem_signal(a0_63, a4_12, a5_11, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_121, out a1_122, out a3_123, out s2_124, out s3_125, out s4_126, out s5_127, out s6_128, out s8_129)
	return
lwip_netconn_do_bind_exit:


void lwip_netconn_do_connect(word32 ra, word32 s0, word32 a1, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_connect_entry:
l230766A0:
	word32 a0_100
	word32 a0_11 = Mem9[a4:word32]
	word32 s0_104 = a0_11
	word32 a4_101 = Mem9[a0_11 + 4<i32>:word32]
	branch a0_11 == 0<32> l2307675A
l2307675A:
	a0_100 = 0xFFFFFFF1<32>
l230766B0:
	word32 a5_15 = CONVERT(Mem9[a4_101:byte], byte, word32)
	a5 = a5_15 & 240<i32>
	branch (a5_15 & 240<i32>) == 32<i32> l23076736
l23076736:
	s0_104 = Mem9[a1 + 8<i32>:word32]
	word32 a3_213
	word32 s2_214
	a0_100 = udp_connect(a0_11, a1, CONVERT(Mem9[a0_11 + 12<i32>:uint16], uint16, word32), dwArg28, out a3_213, out a4_101, out a5, out s2_214)
l230766C0:
	branch (a5_15 & 240<i32>) == 64<i32> l2307671C
l2307671C:
	s0_104 = Mem9[a1 + 8<i32>:word32]
	a0_100 = raw_connect(a0_11, a1, a4_101, out a4_101, out a5)
l230766C8:
	a0_100 = 0xFFFFFFFA<32>
	branch (a5_15 & 240<i32>) != 0x10<32> l23076722
l230766D0:
	a5 = CONVERT(Mem9[a4_101 + 1<i32>:byte], byte, word32)
	branch a5 == 3<32> l2307675E
l2307675E:
	a0_100 = 0xFFFFFFF7<32>
l230766DA:
	a0_100 = 0xFFFFFFF6<32>
	branch a5 != 0<32> l23076722
l230766DE:
	word32 a1_46
	word32 s1_60
	s0_104 = tcp_connect(ra, 3<32>, setup_tcp(a0_11, out a1_46), a1_46, CONVERT(Mem9[Mem9[a5:word32] + 12<i32>:uint16], uint16, word32), 0x23075B64<32>, s7, mstatus, s0, dwArg14, dwArg28, dwArg38, dwArg64, dwArg68, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s1_60, out a0_100, out a4_101, out a5, out mstatus)
	branch a0_100 != 0<32> l23076722
l230766FC:
	word32 a4_86 = CONVERT(Mem9[a5 + 36<i32>:byte], byte, word32)
	Mem87[a5 + 1<i32>:byte] = SLICE(s1_60, byte, 0)
	s0_104 = Mem87[a5:word32]
	branch (a4_86 & 2<32>) == 0<32> l23076742
l23076742:
	Mem92[a5 + 36<i32>:byte] = SLICE(CONVERT(Mem87[a5 + 36<i32>:byte], byte, word32) & 0xFFFFFFFB<32>, byte, 0)
	Mem94[Mem92[a5:word32] + 40<i32>:word32] = a5
	return
l2307670C:
	word32 a4_99 = CONVERT(Mem87[a5 + 36<i32>:byte], byte, word32)
	Mem102[a5 + 36<i32>:byte] = SLICE(a4_99 | 4<i32>, byte, 0)
	a0_100 = 0xFFFFFFFB<32>
	a4_101 = a4_99 | 4<i32>
l23076722:
	Mem105[s0_104 + 4<i32>:byte] = SLICE(a0_100, byte, 0)
	word32 a0_111 = a0_100 + 0xC<32>
l23076732_thunk_sys_sem_signal:
	word32 s1_215
	word32 a1_216
	word32 a3_217
	word32 s2_218
	word32 s3_219
	word32 s4_220
	word32 s5_221
	word32 s6_222
	word32 s8_223
	sys_sem_signal(a0_111, a4_101, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_215, out a1_216, out a3_217, out s2_218, out s3_219, out s4_220, out s5_221, out s6_222, out s8_223)
	return
lwip_netconn_do_connect_exit:


void lwip_netconn_do_disconnect(word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_disconnect_entry:
l23076762:
	word32 a5_14
	word32 a0_9 = Mem7[a4:word32]
	branch (CONVERT(Mem7[a4:byte], byte, word32) & 240<i32>) != 32<i32> l23076794
l23076794:
	Mem15[a0_9 + 4<i32>:byte] = 0xFA<8>
	a5_14 = 0xFFFFFFFA<32>
l2307677C:
	a4 = Mem7[a0_9 + 4<i32>:word32]
	a5_14 = udp_disconnect(a0_9)
	Mem18[a0_9 + 4<i32>:byte] = 0<8>
l23076786:
l23076790_thunk_sys_sem_signal:
	word32 s6_78
	word32 s5_77
	word32 s4_76
	word32 s3_75
	word32 s2_74
	word32 a3_73
	word32 a1_72
	word32 s1_71
	word32 s8_79
	sys_sem_signal(a0_9 + 0xC<32>, a4, a5_14, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_71, out a1_72, out a3_73, out s2_74, out s3_75, out s4_76, out s5_77, out s6_78, out s8_79)
	return
lwip_netconn_do_disconnect_exit:


void lwip_netconn_do_listen(word32 ra, word32 s0, word32 s1, word32 a4, word32 a5, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[24..31] s1:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_listen_entry:
l2307679C:
	word32 a5_146
	word32 a0_100 = Mem9[a5:word32]
	byte bLoc11_197 = SLICE(s0, byte, 24)
	word32 a5_13 = Mem9[a0_100 + 4<i32>:word32]
	branch a0_100 == 0<32> l23076874
l230767AC:
	word32 a4_14 = CONVERT(Mem9[a5_13:byte], byte, word32)
	a4 = a4_14 & 240<i32>
	branch (a4_14 & 240<i32>) != 0x10<32> l23076878
l23076878:
	a5_146 = 0xFFFFFFF0<32>
l230767BA:
	word32 a5_18 = CONVERT(Mem9[a5_13 + 1<i32>:byte], byte, word32)
	branch a5_18 != 0<32> l23076868
l23076868:
	a4 = 2<32>
	branch a5_18 != 2<32> l23076874
l23076874:
	a5_146 = 0xFFFFFFF5<32>
l2307686E:
	bLoc11_197 = 0<8>
l230767C0:
	branch CONVERT(Mem9[a0_100 + 20<i32>:byte], byte, word32) == 0<32> l230767CE
l230767CE:
	word32 a5_28
	word32 a3_32
	word32 a2_27
	a0_100 = tcp_listen_with_backlog_and_err(s1, a0_100, fp + 0xFFFFFFEF<32>, 0x10<32>, a4_14 & 240<i32>, mstatus, dwArg14, dwArg18, out a2_27, out a3_32, out a4, out a5_28)
	word32 s1_34 = a0_100
	branch a0_100 == 0<32> l23076840
l230767DE:
	word32 a0_37 = sys_mbox_valid(a0_100 + 0x10<32>)
	branch a0_37 == 0<32> l230767F8
l230767E8:
	word32 a0_40
	s1_34 = sys_mbox_free(a0_37 + 0x10<32>, a3_32, a4, mstatus, dwArg0128, dwArg0168, out a0_40, out a2_27, out a3_32, out a4, out a5_28, out s4)
	sys_mbox_set_invalid(a0_40 + 0x10<32>)
	a0_37 = a0_40 + 0x10<32>
l230767F8:
	bLoc11_197 = 0<8>
	a0_100 = sys_mbox_valid(a0_37 + 0x14<32>)
	branch a0_100 != 0<32> l23076816
l23076806:
	word32 a4_356
	word32 s2_358
	word32 a5_357
	word32 s3_359
	s1_34 = sys_mbox_new(ra, a3_32, a4, a5_28, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out a0_100, out a2_27, out a3_32, out a4_356, out a5_357, out s2_358, out s3_359, out s4)
	bLoc11_197 = SLICE(a0_100, byte, 0)
l23076816:
	word32 a5_85 = CONVERT(bLoc11_197, byte, int32)
	branch a5_85 != 0<32> l2307685A
l2307685A:
	word32 a5_105
	word32 s11_372
	word32 s8_369
	word32 s9_370
	word32 s10_371
	word32 s3_364
	word32 s6_367
	word32 s7_368
	word32 s4_365
	word32 s5_366
	word32 s2_363
	word32 s1_360
	word32 a1_361
	word32 a3_362
	tcp_close(ra, s1_34, a2_27, a3_32, s4, s7, mstatus, dwLoc0C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, dwArg64, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, out s1_360, out a0_100, out a1_361, out a3_362, out a4, out a5_105, out s2_363, out s3_364, out s4_365, out s5_366, out s6_367, out s7_368, out s8_369, out s9_370, out s10_371, out s11_372, out mstatus)
	Mem129[a5_105 + 4<i32>:word32] = 0<32>
l2307681C:
	Mem132[a5_85 + 1<i32>:byte] = 2<8>
	Mem134[s1_34 + 4<i32>:word32] = a5_85
	tcp_arg(a0_100, Mem134[a0_100 + 4<i32>:word32])
	a4 = tcp_accept(a0_100, 0x2307649C<32>)
l230767C6:
	a5_146 = 0xFFFFFFFA<32>
l230767C8:
	bLoc11_197 = SLICE(a5_146, byte, 0)
l23076840:
	word32 a5_153 = CONVERT(bLoc11_197, byte, word32)
	Mem158[Mem152[a0_100:word32] + 4<i32>:byte] = SLICE(a5_153, byte, 0)
	word32 a1_348
	word32 s2_350
	word32 s1_347
	word32 a3_349
	word32 s3_351
	word32 s4_352
	word32 s8_355
	word32 s5_353
	word32 s6_354
	sys_sem_signal(a0_100 + 0xC<32>, a4, a5_153, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_347, out a1_348, out a3_349, out s2_350, out s3_351, out s4_352, out s5_353, out s6_354, out s8_355)
	return
lwip_netconn_do_listen_exit:


void lwip_netconn_do_send(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 s5, word32 s6, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra s7 s9 sp
lwip_netconn_do_send_entry:
l2307687C:
	word32 a3_287
	word32 a2_286
	word32 a0_113
	word32 a4_103
	word32 a5_118
	netconn_err(Mem7[a0:word32], a3, a4, mstatus, out a0_113, out a2_286, out a3_287, out a4_103, out a5_118)
	word32 s0_123 = a0
	branch a0_113 != 0<32> l230768C4
l2307688C:
	s0_123 = Mem7[a5_118:word32]
	a0_113 = 0xFFFFFFF5<32>
	word32 a7_23 = Mem7[a5_118 + 4<i32>:int32]
	branch a7_23 == 0<32> l230768C4
l23076898:
	word32 a5_24 = CONVERT(Mem7[a5_118:byte], byte, word32)
	a5_118 = a5_24 & 240<i32>
	branch (a5_24 & 240<i32>) == 32<i32> l230768DC
l230768DC:
	word32 a6_27 = Mem7[s0_123 + 8<i32>:int32]
	word32 a4_28 = CONVERT(Mem7[a6_27 + 14<i32>:byte], byte, word32)
	word32 a1_30 = Mem7[a6_27:int32]
	word32 a5_32 = CONVERT(Mem7[a6_27 + 16<i32>:uint16], uint16, word32)
	branch a6_27 == 8<32> l230768FA
l230768F4:
	branch Mem7[a6_27 + 8<i32>:int32] != 0<32> l23076906
l23076906:
	word32 s5_302
	word32 s9_303
	word32 a3_299
	word32 s4_301
	word32 s3_300
	word32 a2_298
	word32 s1_297
	udp_sendto_chksum(ra, a7_23, a1_30, a6_27 + 8<i32>, CONVERT(Mem7[a6_27 + 12<i32>:uint16], uint16, word32), a4_28 & 2<32>, a5_32, s4, mstatus, dwArg04, dwArg18, dwArg38, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_123, out s1_297, out a0_113, out a2_298, out a3_299, out a4_103, out a5_118, out s3_300, out s4_301, out s5_302, out s9_303, out mstatus)
l230768FA:
	s0_123 = udp_send_chksum(ra, a7_23, a1_30, a4_28 & 2<32>, a5_32, s4, mstatus, dwArg04, dwArg18, dwArg38, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out a0_113, out a4_103, out a5_118, out mstatus)
l230768A8:
	a4_103 = 64<i32>
	branch (a5_24 & 240<i32>) != 64<i32> l230768C4
l230768B0:
	word32 a2_106 = (a5_24 & 240<i32>) + 8<i32>
	word32 a5_108 = Mem7[a1:word32]
	branch a2_106 == 0<32> l230768C0
l230768BC:
	a5_108 = Mem7[a5_108 + 8<i32>:word32]
	branch a5_108 != 0<32> l230768D6
l230768D6:
	s0_123 = raw_sendto(ra, a7_23, a1, a2_106, a5_108, s4, s5, s6, s7, mstatus, s0, dwArg14, dwArg28, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out a0_113, out a4_103, out a5_118, out mstatus)
l230768C0:
	s0_123 = raw_send(ra, a7_23, a1, a5_108, s4, s5, s6, s7, mstatus, s0, dwArg14, dwArg28, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out a0_113, out a4_103, out a5_118, out mstatus)
l230768C4:
	Mem180[s0_123 + 4<i32>:byte] = SLICE(a0_113, byte, 0)
	word32 a0_185 = a0_113 + 0xC<32>
l230768D2_thunk_sys_sem_signal:
	word32 s8_296
	word32 s5_294
	word32 s6_295
	word32 s2_291
	word32 s4_293
	word32 s3_292
	word32 s1_288
	word32 a3_290
	word32 a1_289
	sys_sem_signal(a0_185, a4_103, a5_118, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_288, out a1_289, out a3_290, out s2_291, out s3_292, out s4_293, out s5_294, out s6_295, out s8_296)
	return
lwip_netconn_do_send_exit:


void lwip_netconn_do_recv(word32 ra, word32 s1, word32 a4, word32 a5, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArg38, word32 dwArg48, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_recv_entry:
l23076912:
	word32 a0_17 = Mem15[a5:word32]
	Mem18[a0_17 + 4<i32>:byte] = 0<8>
	word32 a5_21 = Mem18[a4 + 4<i32>:word32]
	branch a4 != 0<32> l23076942
l23076942:
	word32 a5_22 = CONVERT(Mem18[a5_21:byte], byte, word32)
	a4 = 0x10<32>
	a5_21 = a5_22 & 240<i32>
	branch (a5_22 & 240<i32>) != 0x10<32> l2307692C
l23076950:
	a0_17 = Mem18[s1 + 8<i32>:word32]
	word32 s3_26 = 0x10000000<32>
	word32 s4_27 = 0xFFFFFFF<32>
	s1_28 = s1
l23076958:
	word32 s1_28
	word32 s2_29 = s1_28
	branch s1_28 <u s3_26 l23076960
l2307695E:
	s2_29 = s4_27
l23076960:
	word32 s10_234
	word32 s11_235
	word32 s0_231
	word32 a3_232
	word32 s9_233
	ra = tcp_recved(ra, s1_28 - s2_29, a0_17, CONVERT(SLICE(s2_29, word16, 0), word16, word32), s7, mstatus, dwLoc10, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgE8, dwArgEC, dwArgF8, out s0_231, out s1_28, out a0_17, out a3_232, out a4, out a5_21, out s3_26, out s4_27, out s7, out s9_233, out s10_234, out s11_235, out mstatus)
	branch s1_28 != 0<32> l23076958
l23076974:
l2307692C:
	word32 a0_93 = a0_17 + 0xC<32>
l2307693E_thunk_sys_sem_signal:
	word32 s5_228
	word32 s6_229
	word32 s8_230
	word32 s4_227
	word32 s3_226
	word32 s2_225
	word32 a3_224
	word32 s1_222
	word32 a1_223
	sys_sem_signal(a0_93, a4, a5_21, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_222, out a1_223, out a3_224, out s2_225, out s3_226, out s4_227, out s5_228, out s6_229, out s8_230)
	return
lwip_netconn_do_recv_exit:


void lwip_netconn_do_write(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s5, word32 s6, word32 s7, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgC8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_write_entry:
l23076976:
	word32 a3_169
	word32 a2_168
	word32 a0_14
	word32 a5_20
	word32 a4_19
	word32 s1_16 = netconn_err(Mem7[a0:word32], a3, a4, mstatus, out a0_14, out a2_168, out a3_169, out a4_19, out a5_20)
	word32 s0_21 = Mem7[a5_20:word32]
	branch a0_14 != 0<32> l230769BC
l23076988:
	word32 a4_22 = CONVERT(Mem7[a5_20:byte], byte, word32)
	a0_14 = 0xFFFFFFFA<32>
	a4_19 = a4_22 & 240<i32>
	branch (a4_22 & 240<i32>) != 0x10<32> l230769BC
l23076998:
	a4_19 = CONVERT(Mem7[a5_20 + 1<i32>:byte], byte, word32)
	branch a4_19 != 0<32> l230769BA
l230769BA:
	a0_14 = 0xFFFFFFFB<32>
l2307699E:
	a5_20 = Mem7[a4_19 + 4<i32>:word32]
	a0_14 = 0xFFFFFFF5<32>
	branch a4_19 == 0<32> l230769BC
l230769BC:
	Mem32[s0_21 + 4<i32>:byte] = SLICE(a0_14, byte, 0)
	word32 a0_37 = a5_20 + 12<i32>
l230769CA_thunk_sys_sem_signal:
	word32 a3_172
	word32 a1_171
	word32 s1_170
	word32 s2_173
	word32 s3_174
	word32 s4_175
	word32 s5_176
	word32 s6_177
	word32 s8_178
	sys_sem_signal(a0_37, a4_19, a5_20, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_170, out a1_171, out a3_172, out s2_173, out s3_174, out s4_175, out s5_176, out s6_177, out s8_178)
	return
l230769A4:
	Mem65[a5_20 + 1<i32>:byte] = 1<8>
	Mem67[Mem65[a5_20:word32] + 40<i32>:word32] = a5_20
l230769B6_thunk_lwip_netconn_do_writemore:
	word32 s0_179
	word32 s1_180
	word32 a5_181
	word32 s3_182
	word32 s4_183
	word32 s5_184
	word32 s6_185
	word32 s7_186
	word32 s8_187
	word32 mstatus_188
	lwip_netconn_do_writemore(ra, s1_16, a1, dwArg10, 0x10<32>, a5_20, s5, s6, s7, s8, mstatus, dwArg28, dwArg48, dwArg68, dwArg88, dwArg98, dwArgC8, dwArg0128, out s0_179, out s1_180, out a5_181, out s3_182, out s4_183, out s5_184, out s6_185, out s7_186, out s8_187, out mstatus_188)
	return
lwip_netconn_do_write_exit:


void lwip_netconn_do_getaddr(word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_getaddr_entry:
l230769CE:
	word32 a5_19
	word32 a0_15 = Mem0[a5:word32]
	word32 a5_6 = Mem0[a5 + 4<i32>:word32]
	branch a5_6 == 0<32> l23076A16
l230769D4:
	word32 a5_10
	branch CONVERT(Mem0[a0_15 + 16<i32>:byte], byte, word32) == 0<32> l23076A1E
l23076A1E:
	a5_10 = Mem0[a5_6 + 4<i32>:word32]
l230769DC:
	a5_10 = Mem0[a5_6:word32]
l230769DE:
	Mem14[a5_10:word32] = a4
	a0_15 = Mem14[a4:word32]
	Mem16[a0_15 + 4<i32>:byte] = 0<8>
	word32 a5_18 = CONVERT(Mem16[a4:byte], byte, word32)
	a5_19 = a5_18 & 240<i32>
	branch (a5_18 & 240<i32>) == 32<i32> l23076A3C
l23076A3C:
	a4 = CONVERT(Mem16[a0_15 + 16<i32>:byte], byte, word32)
	branch a4 == 0<32> l23076A50
l23076A50:
	word32 a4_22 = CONVERT(Mem16[(a5_18 & 240<i32>) + 16<i32>:byte], byte, word32)
	a4 = a4_22 & 4<32>
	branch (a4_22 & 4<32>) == 0<32> l23076A16
l23076A58:
	a0_15 = Mem16[(a4_22 & 4<32>) + 12<i32>:word32]
	a5_19 = CONVERT(Mem16[(a5_18 & 240<i32>) + 20<i32>:uint16], uint16, word32)
l23076A44:
	a0_15 = Mem16[a4 + 12<i32>:word32]
	a5_19 = CONVERT(Mem16[(a5_18 & 240<i32>) + 18<i32>:uint16], uint16, word32)
l230769F6:
	branch (a5_18 & 240<i32>) == 64<i32> l23076A22
l23076A22:
	a5_19 = CONVERT(Mem16[a0_15 + 16<i32>:byte], byte, word32)
	branch a5_19 == 0<32> l23076A16
l23076A28:
	a0_15 = Mem16[a5_19 + 12<i32>:word32]
	a4 = CONVERT(Mem16[Mem16[a4 + 4<i32>:word32] + 16<i32>:byte], byte, word32)
	Mem33[a5_19:word16] = SLICE(a4, word16, 0)
l230769FE:
	branch (a5_18 & 240<i32>) != 0x10<32> l23076A34
l23076A04:
	a4 = CONVERT(Mem16[a0_15 + 16<i32>:byte], byte, word32)
	branch a4 != 0<32> l23076A60
l23076A60:
	a5_19 = CONVERT(Mem16[(a5_18 & 240<i32>) + 22<i32>:uint16], uint16, word32)
l23076A0C:
	a4 = 1<32>
	branch CONVERT(Mem16[(a5_18 & 240<i32>) + 20<i32>:byte], byte, word32) >u 1<32> l23076A68
l23076A68:
	a5_19 = CONVERT(Mem16[(a5_18 & 240<i32>) + 24<i32>:uint16], uint16, word32)
l23076A64:
	a0_15 = Mem16[a4 + 12<i32>:word32]
l23076A4A:
	Mem47[a4:word16] = SLICE(a5_19, word16, 0)
l23076A16:
	Mem50[a0_15 + 4<i32>:byte] = 0xF5<8>
	a5_19 = 0xFFFFFFF5<32>
l23076A34:
	word32 a0_54 = Mem53[a0_15:word32]
l23076A38_thunk_sys_sem_signal:
	word32 s4_134
	word32 s8_137
	word32 s5_135
	word32 s6_136
	word32 s1_129
	word32 s3_133
	word32 s2_132
	word32 a1_130
	word32 a3_131
	sys_sem_signal(a0_54 + 0xC<32>, a4, a5_19, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_129, out a1_130, out a3_131, out s2_132, out s3_133, out s4_134, out s5_135, out s6_136, out s8_137)
	return
lwip_netconn_do_getaddr_exit:


void lwip_netconn_do_close(word32 ra, word32 s0, word32 s1, word32 a0, word32 a4, word32 a5, word32 s3, word32 s4, word32 s6, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_close_entry:
l23076A6E:
	word32 a4_122
	word32 a0_12 = Mem7[a4 + 4<i32>:word32]
	branch a4 == 0<32> l23076AA4
l23076A7C:
	branch (CONVERT(Mem7[a0_12:byte], byte, word32) & 240<i32>) != 0x10<32> l23076AA4
l23076A8A:
	word32 a4_16 = CONVERT(Mem7[a0 + 8<i32>:byte], byte, word32)
	word32 a3_18 = CONVERT(Mem7[a0_12 + 1<i32>:byte], byte, word32)
	branch a4_16 == 3<32> l23076A9E
l23076A98:
	branch a3_18 == 2<32> l23076AA4
l23076A9E:
	branch a3_18 != 3<32> l23076AB6
l23076AB6:
	branch a3_18 != 1<32> l23076AC0
l23076AC0:
	branch (a4_16 & 1<32>) == 0<32> l23076AC8
l23076AC4:
	word32 a0_334
	word32 s0_333
	word32 a4_335
	ra = netconn_drain(ra, a0_12, a3_18, a4_16 & 1<32>, a5, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg34, dwArg38, dwArg44, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0148, out s0_333, out s1, out a0_334, out a3_18, out a4_335, out a5, out s3, out s4, out s6, out s7, out mstatus)
l23076AC8:
	Mem68[a5 + 1<i32>:byte] = 4<8>
	Mem70[Mem68[a5:word32] + 40<i32>:word32] = a5
l23076ADC_thunk_lwip_netconn_do_close_internal:
	word32 mstatus_345
	word32 s7_343
	word32 s8_344
	word32 s5_341
	word32 s6_342
	word32 s4_340
	word32 s3_339
	word32 s1_337
	word32 a5_338
	word32 s0_336
	lwip_netconn_do_close_internal(ra, s0, s1, dwArg10, a3_18, a5, s3, s4, s6, s7, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg54, dwArg58, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, out s0_336, out s1_337, out a5_338, out s3_339, out s4_340, out s5_341, out s6_342, out s7_343, out s8_344, out mstatus_345)
	return
l23076ABC:
	a4_122 = 0xFFFFFFFB<32>
l23076AA4:
	a4_122 = 0xFFFFFFF5<32>
l23076AA6:
	Mem128[a0 + 4<i32>:byte] = SLICE(a4_122, byte, 0)
l23076AB2_thunk_sys_sem_signal:
	word32 a3_326
	word32 a1_325
	word32 s1_324
	word32 s2_327
	word32 s3_328
	word32 s6_331
	word32 s4_329
	word32 s5_330
	word32 s8_332
	sys_sem_signal(a0_12 + 0xC<32>, a4_122, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_324, out a1_325, out a3_326, out s2_327, out s3_328, out s4_329, out s5_330, out s6_331, out s8_332)
	return
lwip_netconn_do_close_exit:


void lwip_netconn_do_join_leave_group(word32 ra, word32 s1, word32 a0, word32 a1, word32 a4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgC8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra s7 s9 sp
lwip_netconn_do_join_leave_group_entry:
l23076AE0:
	Mem10[a0 + 4<i32>:byte] = 0xF5<8>
	word32 a0_11 = Mem10[0xFFFFFFF5<32>:word32]
	word32 a5_14 = Mem10[a4 + 4<i32>:word32]
	branch a4 == 0<32> l23076B16
l23076AF4:
	a4 = 32<i32>
	branch (CONVERT(Mem10[a5_14:byte], byte, word32) & 240<i32>) != 32<i32> l23076B2A
l23076B2A:
	Mem19[a0_11 + 4<i32>:byte] = 0xFA<8>
	a5_14 = 0xFFFFFFFA<32>
l23076B04:
	word32 a5_20 = CONVERT(Mem10[a0_11 + 17<i32>:byte], byte, word32)
	word32 a0_21 = Mem10[a0_11 + 12<i32>:word32]
	word32 s0_23 = Mem10[a1 + 8<i32>:word32]
	branch a5_20 != 0<32> l23076B24
l23076B24:
	s0_23 = igmp_leavegroup(ra, s1, a0_21, a5_20, s7, mstatus, dwArg08, dwArg18, dwArg28, dwArg48, dwArg68, dwArg88, dwArg98, dwArgC8, out a0_11, out a4, out a5_14, out mstatus)
l23076B0E:
	a0_11 = igmp_joingroup(ra, a0_21, a5_20, s7, mstatus, dwArg08, dwArg18, dwArg28, out a4, out a5_14, out mstatus)
l23076B12:
	Mem82[s0_23 + 4<i32>:byte] = SLICE(a0_11, byte, 0)
l23076B16:
	word32 a0_90 = a0_11 + 0xC<32>
l23076B20_thunk_sys_sem_signal:
	word32 s6_167
	word32 s8_168
	word32 s4_165
	word32 s5_166
	word32 s2_163
	word32 s3_164
	word32 a1_161
	word32 a3_162
	word32 s1_160
	sys_sem_signal(a0_90, a4, a5_14, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_160, out a1_161, out a3_162, out s2_163, out s3_164, out s4_165, out s5_166, out s6_167, out s8_168)
	return
lwip_netconn_do_join_leave_group_exit:


void lwip_netconn_do_gethostbyname(word32 ra, word32 s1, word32 a1, word32 s2, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
lwip_netconn_do_gethostbyname_entry:
l23076B32:
	word32 a0_24
	word32 a5_34
	word32 s1_47
	word32 mstatus_51
	word32 s4_145
	word32 s3_144
	word32 s2_143
	word32 a4_142
	word32 a3_141
	word32 s0_140
	dns_gethostbyname_addrtype(ra, Mem9[Mem9[a1 + 4<i32>:word32]:word32], a1, Mem9[s1 + 12<i32>:word32], s2, s5, s6, s8, mstatus, dwLoc08, dwArg0C, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgD8, dwArg0118, dwArg0158, out s0_140, out s1_47, out a0_24, out a3_141, out a4_142, out a5_34, out s2_143, out s3_144, out s4_145, out mstatus_51)
	Mem53[s1_47:byte] = SLICE(a0_24, byte, 0)
	word32 a4_55 = CONVERT(Mem53[a5_34:int8], int8, int32)
	branch a4_55 == 0xFFFFFFFB<32> l23076B70
l23076B70:
	return
l23076B62:
l23076B6C_thunk_sys_sem_signal:
	word32 s1_146
	word32 a1_147
	word32 a3_148
	word32 s2_149
	word32 s3_150
	word32 s4_151
	word32 s5_152
	word32 s6_153
	word32 s8_154
	sys_sem_signal(a0_24, a4_55, 0xFFFFFFFB<32>, mstatus_51, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_146, out a1_147, out a3_148, out s2_149, out s3_150, out s4_151, out s5_152, out s6_153, out s8_154)
	return
lwip_netconn_do_gethostbyname_exit:


word32 err_to_errno(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recv_tcp
//      lwip_accept
//      lwip_bind
//      lwip_close
//      lwip_connect
//      lwip_listen
//      lwip_recv
//      lwip_sendto
//      lwip_send
//      lwip_setsockopt
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
err_to_errno_entry:
l23076B7A:
	word32 a5_5 = a0 + 16<i32> & 255<i32>
	branch a5_5 >u 0x10<32> l23076B9A
l23076B9A:
	a4Out = <invalid>
	a5Out = a5_5
	return 5<32>
l23076B88:
	word32 a0_13 = Mem0[0x230C37D0<32> - (a0 << 2<u32>):word32]
	a4Out = <invalid>
	a5Out = a0 << 2<u32>
	return a0_13
err_to_errno_exit:


word32 netbuf_delete(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0108, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free_socket
//      lwip_recvfrom_udp_raw.isra.6
//      recv_udp
//      recv_raw
//      netconn_drain
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0108:[0..31]
// LiveOut: a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: a6 a7 mstatus ra s0 s2 s3 s4 s5 s6 s8 sp t0 t1 t3 t4 t5 t6
netbuf_delete_entry:
l23076B9E:
	branch a0 == 0<32> l23076BC4
l23076BC4:
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return s1
l23076BA0:
	word32 a1_21 = a0
	word32 a0_6 = Mem0[a0:word32]
	branch a0_6 == 0<32> l23076BC6
l23076BC6:
l23076BA6:
	word32 s0_130
	word32 s1_131
	word32 a0_132
	word32 a2_133
	word32 a5_134
	word32 a7_135
	word32 s2_136
	word32 s3_137
	word32 s4_138
	word32 s5_139
	word32 s6_140
	word32 s8_141
	pbuf_free(ra, a0_6, a3, a4, s4, mstatus, dwArg0108, out s0_130, out s1_131, out a0_132, out a1_21, out a2_133, out a3, out a4, out a5_134, out a7_135, out s2_136, out s3_137, out s4_138, out s5_139, out s6_140, out s8_141, out mstatus)
	Mem43[a1_21 + 4<i32>:word32] = 0<32>
	Mem44[a1_21:word32] = 0<32>
l23076BC0:
l23076BC0_thunk_memp_free:
	word32 a5_52
	word32 a2_54
	word32 a3_55
	word32 a4_56
	word32 a0_142
	word32 s1_57 = memp_free(6<32>, a1_21, a3, a4, mstatus, out a0_142, out a2_54, out a3_55, out a4_56, out a5_52)
	a2Out = a2_54
	a3Out = a3_55
	a4Out = a4_56
	a5Out = a5_52
	return s1_57
netbuf_delete_exit:


word32 netbuf_alloc(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg24, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netbuf_alloc_entry:
l23076BCA:
	branch a0 != 0<32> l23076BDA
l23076BDA:
	word32 s0_19 = a0
	word32 a0_10 = Mem8[a0:word32]
	branch a0_10 == 0<32> l23076BEE
l23076BE6:
	word32 a5_201
	word32 a7_202
	word32 s2_203
	word32 s3_204
	word32 a2_200
	word32 a0_199
	word32 s4_205
	word32 s5_206
	word32 s6_207
	word32 s8_208
	ra = pbuf_free(ra, a0_10, a3, a4, s4, mstatus, dwArg0108, out s0_19, out s1, out a0_199, out a1, out a2_200, out a3, out a4, out a5_201, out a7_202, out s2_203, out s3_204, out s4_205, out s5_206, out s6_207, out s8_208, out mstatus)
l23076BEE:
	word32 a0_119
	word32 a0_55
	word32 a3_57
	word32 a4_58
	word32 s0_60
	word32 s2_66
	word32 s4_68
	word32 mstatus_71
	word32 s8_198
	word32 s6_197
	word32 s5_196
	word32 s3_195
	word32 a7_194
	word32 a5_193
	word32 a2_192
	word32 a1_191
	word32 s1_190
	word32 ra_72 = pbuf_alloc(ra, s0_19, s1, 182<i32>, a1, 640<i32>, a3, a4, mstatus, dwLoc1C, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_60, out s1_190, out a0_55, out a1_191, out a2_192, out a3_57, out a4_58, out a5_193, out a7_194, out s2_66, out s3_195, out s4_68, out s5_196, out s6_197, out s8_198, out mstatus_71)
	Mem80[a0_55:word32] = s0_60
	branch a0_55 == 0<32> l23076BD0
l23076BD0:
	a0_119 = 0<32>
l23076BFE:
	Mem82[a0_55 + 4<i32>:word32] = s0_60
	a0_119 = Mem82[a0_55 + 4<i32>:word32]
l23076BD2:
	s0Out = s0_60
	a0Out = a0_119
	a3Out = a3_57
	a4Out = a4_58
	s2Out = s2_66
	s4Out = s4_68
	mstatusOut = mstatus_71
	return ra_72
l23076BCC:
	s0Out = s0
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s4Out = s4
	mstatusOut = mstatus
	return ra
netbuf_alloc_exit:


word32 netbuf_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0118, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0118:[0..31]
// LiveOut: a2 mstatus s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netbuf_free_entry:
l23076C04:
	branch a0 == 0<32> l23076C2E
l23076C2E:
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	mstatusOut = mstatus
	return a2
l23076C06:
	word32 s0_17 = a0
	word32 a0_10 = Mem8[a0:word32]
	branch a0_10 == 0<32> l23076C16
l23076C12:
	word32 s1_127
	word32 a0_128
	word32 a1_129
	word32 a2_130
	word32 a3_131
	word32 a4_132
	word32 a5_133
	word32 a7_134
	word32 s6_135
	word32 s8_136
	pbuf_free(ra, a0_10, a3, a4, s4, mstatus, dwArg0118, out s0_17, out s1_127, out a0_128, out a1_129, out a2_130, out a3_131, out a4_132, out a5_133, out a7_134, out s2, out s3, out s4, out s5, out s6_135, out s8_136, out mstatus)
l23076C16:
	Mem41[s0_17 + 4<i32>:word32] = 0<32>
	Mem42[s0_17:word32] = 0<32>
	Mem43[s0_17 + 14<i32>:byte] = 0<8>
	Mem44[s0_17 + 16<i32>:word16] = 0<16>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	mstatusOut = mstatus
	return dwArg10
netbuf_free_exit:


word32 icmp_input(word32 ra, word32 a0, word32 a1, word32 a3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s9 sp
icmp_input_entry:
l23076C30:
	word32 s1_458
	Mem28[0x4202683A<32>:word16] = SLICE(CONVERT(Mem22[0x4202683A<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s7_30 = Mem28[0x42026920<32>:int32]
	word32 a4_26 = 0x13<32>
	word32 s0_108 = a0
	branch (CONVERT(Mem28[s7_30:byte], byte, word32) & 0xF<32>) << 2<i32> <=u 0x13<32> l23076E60
l23076C76:
	a3 = CONVERT(Mem28[a0 + 10<i32>:uint16], uint16, word32)
	a4_26 = 3<32>
	branch a3 <=u 3<32> l23076E60
l23076C80:
	word32 a0_39 = Mem28[7<32>:word32]
	word32 a4_250 = CONVERT(Mem28[3<32>:byte], byte, word32)
	branch a4_250 == 0<32> l23076E20
l23076C8A:
	a3 = 8<32>
	branch a4_250 != 8<32> l23076E4A
l23076E4A:
	Mem44[0x42026848<32>:word16] = SLICE(CONVERT(Mem28[0x42026848<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem47[0x4202683E<32>:word16] = SLICE(CONVERT(Mem44[0x4202683E<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23076C90:
	word32 a4_125 = 224<i32>
	a3 = a0_39 & 240<i32>
	branch (a0_39 & 240<i32>) == 224<i32> l23076D2C
l23076C9E:
	s4 = a1
	word32 a5_705
	branch ip4_addr_isbroadcast_u32(a0_39, a1, out a3, out a4_125, out a5_705) != 0<32> l23076D2C
l23076CA8:
	a4_26 = CONVERT(Mem28[a0 + 8<i32>:uint16], uint16, word32)
	branch a4_26 <=u 7<32> l23076E60
l23076E60:
	word32 s2_82
	word32 s6_688
	word32 mstatus_690
	word32 s8_689
	word32 s0_677
	word32 a3_681
	word32 a4_682
	word32 a1_679
	word32 a2_680
	word32 s4_686
	word32 a0_678
	word32 s3_685
	word32 a5_683
	word32 s5_687
	word32 a7_684
	pbuf_free(ra, a0, a3, a4_26, s4, mstatus, dwArgF8, out s0_677, out s1_458, out a0_678, out a1_679, out a2_680, out a3_681, out a4_682, out a5_683, out a7_684, out s2_82, out s3_685, out s4_686, out s5_687, out s6_688, out s8_689, out mstatus_690)
	Mem99[s2_82 + 82<i32>:word16] = SLICE(CONVERT(Mem28[s2_82 + 82<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23076CB2:
	word32 a0_101
	word32 a3_104
	word32 a4_105
	word32 s1_109
	word32 s2_110
	s0_108 = inet_chksum_pbuf(a0, a4_26, out s1_109, out a0_101, out a3_104, out a4_105, out s2_110, out s4)
	branch a0_101 == 0<32> l23076CE0
l23076CE0:
	word32 s6_119 = 0x42026918<32>
	word32 s3_120 = CONVERT(SLICE(s1_109, word16, 0), word16, word32)
	word32 a2_123
	word32 a1_706
	word32 a5_707
	branch pbuf_add_header(s0_108, s1_109 + 142<i32>, out a1_706, out a2_123, out a3, out a4_125, out a5_707) == 0<32> l23076E3A
l23076E3A:
	word32 a1_737
	word32 a5_738
	branch pbuf_remove_header(s0_108, s1_109 + 142<i32>, a2_123, out a1_737, out a3, out a4_125, out a5_738) == 0<32> l23076D68
l23076E44:
l23076CFC:
	word32 a5_134 = CONVERT(Mem28[s0_108 + 8<i32>:uint16], uint16, word32)
	word32 a1_137 = CONVERT(SLICE(a5_134 + s3_120, word16, 0), word16, word32)
	branch a1_137 <u a5_134 l23076D2C
l23076D0C:
	word32 a0_140
	word32 s1_146
	word32 a1_739
	word32 a2_740
	word32 a5_741
	word32 a7_742
	word32 s2_743
	word32 s3_744
	word32 s5_745
	word32 s6_746
	word32 s8_747
	ra = pbuf_alloc(ra, s0_108, s1_109, 142<i32>, a1_137, 640<i32>, a3, a4_125, mstatus, dwLoc2C, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_108, out s1_146, out a0_140, out a1_739, out a2_740, out a3, out a4_125, out a5_741, out a7_742, out s2_743, out s3_744, out s4, out s5_745, out s6_746, out s8_747, out mstatus)
	branch a0_140 == 0<32> l23076D2C
l23076D1C:
	word32 a4_166 = CONVERT(Mem28[a0_140 + 10<i32>:uint16], uint16, word32)
	branch a4_166 >=u s1_146 + 8<i32> l23076D3E
l23076D3E:
	word32 a2_175
	word32 a1_748
	word32 a3_749
	word32 a4_750
	word32 a5_751
	word32 a6_752
	word32 a7_753
	memcpy(Mem28[a0_140 + 4<i32>:word32], s7_30, s1_146, out a1_748, out a2_175, out a3_749, out a4_750, out a5_751, out a6_752, out a7_753)
	word32 a1_754
	word32 a5_755
	branch pbuf_remove_header(a0_140, s1_146, a2_175, out a1_754, out a3, out a4_166, out a5_755) == 0<32> l23076D56
l23076D56:
	word32 a0_193
	word32 s1_770
	word32 s2_771
	word32 s3_772
	word32 s0_196 = pbuf_copy(a0_140, s0_108, out s1_770, out a0_193, out a3, out a4_166, out s2_771, out s3_772, out s4)
	branch a0_193 != 0<32> l23076D52
l23076D60:
	word32 s5_229
	word32 s0_773
	word32 a0_774
	word32 a1_775
	word32 a2_776
	word32 a3_777
	word32 a4_778
	word32 a5_779
	word32 a7_780
	word32 s8_781
	ra = pbuf_free(ra, s0_196, a3, a4_166, s4, mstatus, dwArgF8, out s0_773, out s1_109, out a0_774, out a1_775, out a2_776, out a3_777, out a4_778, out a5_779, out a7_780, out s2_110, out s3_120, out s4, out s5_229, out s6_119, out s8_781, out mstatus)
	s0_108 = s5_229
l23076D68:
	word32 s5_245 = Mem28[s0_108 + 4<i32>:int32]
	word32 a1_767
	word32 a2_768
	word32 a5_769
	branch pbuf_add_header(s0_108, s1_109, out a1_767, out a2_768, out a3, out a4_250, out a5_769) != 0<32> l23076E20
l23076D76:
	word32 a5_277
	word32 a5_253 = Mem28[s6_119 + 20<i32>:int32]
	word32 s0_254 = Mem28[s1_109 + 4<i32>:word32]
	Mem256[s1_109 + 12<i32>:byte] = SLICE(a5_253, byte, 0)
	Mem257[s1_109 + 13<i32>:byte] = SLICE(a5_253 >>u 8<u32>, byte, 0)
	Mem260[s1_109 + 14<i32>:byte] = SLICE(a5_253 >>u 0x10<u32>, byte, 0)
	Mem261[s1_109 + 15<i32>:byte] = SLICE(a5_253 >>u 24<i32>, byte, 0)
	word32 a5_262 = Mem261[s6_119 + 16<i32>:int32]
	Mem264[s1_109 + 16<i32>:byte] = SLICE(a5_262, byte, 0)
	Mem265[s1_109 + 17<i32>:byte] = SLICE(a5_262 >>u 8<u32>, byte, 0)
	Mem268[s1_109 + 18<i32>:byte] = SLICE(a5_262 >>u 0x10<u32>, byte, 0)
	Mem269[s1_109 + 19<i32>:byte] = SLICE(a5_262 >>u 24<i32>, byte, 0)
	word32 a5_270 = CONVERT(Mem269[s5_245 + 3<i32>:byte], byte, word32)
	word32 a4_271 = CONVERT(Mem269[s5_245 + 2<i32>:byte], byte, word32)
	Mem272[s5_245:byte] = 0<8>
	word32 a5_274 = a5_270 << 8<i32> | a4_271
	branch a5_274 <=u 0xFFFFFF7<32> l23076E46
l23076E46:
	a5_277 = a5_274 + 8<32>
l23076DCC:
	a5_277 = a5_274 + 9<32>
l23076DCE:
	word32 a5_280 = a5_277 << 16<i32>
	Mem283[s5_245 + 2<i32>:byte] = SLICE(a5_280 >>u 16<i32>, byte, 0)
	Mem285[s5_245 + 3<i32>:byte] = SLICE(a5_280 >>u 24<i32>, byte, 0)
	Mem288[s1_109 + 8<i32>:byte] = 0xFF<8>
	Mem292[s1_109 + 10<i32>:byte] = 0<8>
	Mem293[s1_109 + 11<i32>:byte] = 0<8>
	word32 a2_782
	word32 a3_783
	word32 a4_784
	word32 a5_785
	word32 a0_296 = inet_chksum(s1_109, s3_120, 0xFFFFFF7<32>, out a2_782, out a3_783, out a4_784, out a5_785)
	Mem302[s1_109 + 10<i32>:byte] = SLICE(a0_296, byte, 0)
	Mem304[s1_109 + 11<i32>:byte] = SLICE(a0_296 >>u 8<i32>, byte, 0)
	Mem313[s2_110 + 72<i32>:word16] = SLICE(CONVERT(Mem304[s2_110 + 72<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s1_786
	word32 a0_787
	word32 a1_788
	word32 a5_789
	word32 a7_790
	word32 s2_791
	word32 s3_792
	word32 s4_793
	word32 s5_794
	word32 s6_795
	word32 s7_796
	word32 s8_797
	word32 s9_798
	ra = ip4_output_if(ra, s0_254, s1_109, s0_254, 0x4202692C<32>, 0<32>, 255<i32>, 0<32>, 1<32>, s4, s4, s5_245, s6_119, s7_30, out s0_108, out s1_786, out a0_787, out a1_788, out a3, out a4_250, out a5_789, out a7_790, out s2_791, out s3_792, out s4_793, out s5_794, out s6_795, out s7_796, out s8_797, out s9_798)
l23076E20:
	0<32> = dwArg0128
l23076E36_thunk_pbuf_free:
	word32 s1_382
	word32 s0_722
	word32 a0_723
	word32 a1_724
	word32 a2_725
	word32 a3_726
	word32 a4_727
	word32 a5_728
	word32 a7_729
	word32 s2_730
	word32 s3_731
	word32 s4_732
	word32 s5_733
	word32 s6_734
	word32 s8_735
	word32 mstatus_736
	pbuf_free(ra, s0_108, a3, a4_250, dwArg78, mstatus, dwArg0128, out s0_722, out s1_382, out a0_723, out a1_724, out a2_725, out a3_726, out a4_727, out a5_728, out a7_729, out s2_730, out s3_731, out s4_732, out s5_733, out s6_734, out s8_735, out mstatus_736)
	return s1_382
l23076D52:
l23076D28:
	word32 s1_756
	word32 a0_757
	word32 a1_758
	word32 a2_759
	word32 a5_760
	word32 a7_761
	word32 s2_762
	word32 s3_763
	word32 s5_764
	word32 s6_765
	word32 s8_766
	ra = pbuf_free(ra, a0_140, a3, a4_166, s4, mstatus, dwArgF8, out s0_108, out s1_756, out a0_757, out a1_758, out a2_759, out a3, out a4_125, out a5_760, out a7_761, out s2_762, out s3_763, out s4, out s5_764, out s6_765, out s8_766, out mstatus)
l23076D2C:
	word32 s0_691
	word32 a3_695
	word32 a4_696
	word32 a2_694
	word32 a7_698
	word32 s3_699
	word32 a5_697
	word32 s5_701
	word32 s6_702
	word32 s4_700
	word32 s8_703
	word32 s2_459
	word32 a1_693
	word32 a0_692
	word32 mstatus_704
	pbuf_free(ra, s0_108, a3, a4_125, s4, mstatus, dwArgF8, out s0_691, out s1_458, out a0_692, out a1_693, out a2_694, out a3_695, out a4_696, out a5_697, out a7_698, out s2_459, out s3_699, out s4_700, out s5_701, out s6_702, out s8_703, out mstatus_704)
	Mem476[s2_459 + 92<i32>:word16] = SLICE(CONVERT(Mem28[s2_459 + 92<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23076CBA:
	word32 s3_489
	word32 s0_708
	word32 a0_709
	word32 a1_710
	word32 a2_711
	word32 a3_712
	word32 a4_713
	word32 a5_714
	word32 a7_715
	word32 s2_716
	word32 s4_717
	word32 s5_718
	word32 s6_719
	word32 s8_720
	word32 mstatus_721
	pbuf_free(ra, s0_108, a3_104, a4_105, s4, mstatus, dwArgF8, out s0_708, out s1_458, out a0_709, out a1_710, out a2_711, out a3_712, out a4_713, out a5_714, out a7_715, out s2_716, out s3_489, out s4_717, out s5_718, out s6_719, out s8_720, out mstatus_721)
	Mem505[s3_489 + 80<i32>:word16] = SLICE(CONVERT(Mem28[s3_489 + 80<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l23076CCA:
	0<32> = dwArg0128
	return s1_458
icmp_input_exit:


word32 icmp_dest_unreach(word32 ra, word32 s0, word32 s1, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
//      udp_input
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
icmp_dest_unreach_entry:
l23076E72:
	word32 a0_26
	word32 s0_31
	word32 s3_38
	word32 s5_44
	word32 s6_45
	word32 a1_259
	word32 a2_260
	word32 a5_261
	word32 a7_262
	word32 s8_263
	word32 s4_135
	word32 s1_166
	word32 s2_167
	word32 mstatus_180
	word32 a3_163
	word32 a4_164
	word32 ra_130 = pbuf_alloc(ra, s0, s1, 162<i32>, 36<i32>, 640<i32>, a3, a4, mstatus, dwLoc3C, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_31, out s1_166, out a0_26, out a1_259, out a2_260, out a3_163, out a4_164, out a5_261, out a7_262, out s2_167, out s3_38, out s4_135, out s5_44, out s6_45, out s8_263, out mstatus_180)
	branch a0_26 == 0<32> l23076F36
l23076E96:
	word32 a0_51 = Mem22[s0_31 + 4<i32>:word32]
	word32 s2_53 = Mem22[s3_38 + 4<i32>:int32]
	Mem54[s0_31:byte] = 3<8>
	Mem55[s0_31 + 1<i32>:byte] = SLICE(s4_135, byte, 0)
	Mem56[s0_31 + 4<i32>:byte] = 0<8>
	Mem57[s0_31 + 5<i32>:byte] = 0<8>
	Mem58[s0_31 + 6<i32>:byte] = 0<8>
	Mem59[s0_31 + 7<i32>:byte] = 0<8>
	word32 a2_69
	word32 a6_71
	word32 a1_264
	word32 a3_265
	word32 a4_266
	word32 a5_267
	word32 a7_268
	memcpy(Mem59[a0_51 + 4<i32>:word32] + 8<32>, Mem59[s3_38 + 4<i32>:int32], 0x1C<32>, out a1_264, out a2_69, out a3_265, out a4_266, out a5_267, out a6_71, out a7_268)
	word32 s1_132 = a0_51
	word32 a2_269
	word32 a5_270
	word32 a4_126
	word32 a3_125
	branch ip4_route(a2_69, CONVERT(Mem59[s2_53 + 15<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem59[s2_53 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem59[s2_53 + 12<i32>:byte], byte, word32)) | CONVERT(Mem59[s2_53 + 14<i32>:byte], byte, word32) << 16<i32>), out a2_269, out a3_125, out a4_126, out a5_270) == 0<32> l23076F30
l23076EEE:
	Mem96[s0_31 + 2<i32>:byte] = 0<8>
	Mem97[s0_31 + 3<i32>:byte] = 0<8>
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a5_285
	word32 a0_100 = inet_chksum(s0_31, CONVERT(Mem97[a0_51 + 10<i32>:uint16], uint16, word32), a4_126, out a2_282, out a3_283, out a4_284, out a5_285)
	Mem106[s0_31 + 2<i32>:byte] = SLICE(a0_100, byte, 0)
	Mem109[s0_31 + 3<i32>:byte] = SLICE(a0_100 >>u 8<i32>, byte, 0)
	Mem115[0x42026838<32>:word16] = SLICE(CONVERT(Mem109[0x42026838<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s0_286
	word32 a0_287
	word32 a1_288
	word32 a5_289
	word32 a7_290
	word32 s2_291
	word32 s3_292
	word32 s5_293
	word32 s6_294
	word32 s7_295
	word32 s8_296
	word32 s9_297
	ra_130 = ip4_output_if(ra_130, s0_31, a0_51, a0_51, 0<32>, fp + -36<i32>, 255<i32>, 0<32>, 1<32>, a6_71, s4_135, s5_44, s6_45, s7, out s0_286, out s1_132, out a0_287, out a1_288, out a3_125, out a4_126, out a5_289, out a7_290, out s2_291, out s3_292, out s4_135, out s5_293, out s6_294, out s7_295, out s8_296, out s9_297)
l23076F30:
	word32 s0_271
	word32 a0_272
	word32 a1_273
	word32 a2_274
	word32 a5_275
	word32 a7_276
	word32 s3_277
	word32 s4_278
	word32 s5_279
	word32 s6_280
	word32 s8_281
	ra_130 = pbuf_free(ra_130, s1_132, a3_125, a4_126, s4_135, mstatus_180, dwArgE8, out s0_271, out s1_166, out a0_272, out a1_273, out a2_274, out a3_163, out a4_164, out a5_275, out a7_276, out s2_167, out s3_277, out s4_278, out s5_279, out s6_280, out s8_281, out mstatus_180)
l23076F36:
	s0Out = dwArg0158
	s1Out = s1_166
	a3Out = a3_163
	a4Out = a4_164
	s2Out = s2_167
	s4Out = dwArgF4
	mstatusOut = mstatus_180
	return ra_130
icmp_dest_unreach_exit:


word32 dhcp_server_option_find(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_server_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a4
// Trashed: a0 a1 a4 a5
// Preserved: sp
dhcp_server_option_find_entry:
l23076F46:
	word32 a1_5 = a1 + a0
l23076F4C:
	branch a0 >=u a1_5 l23076F58
l23076F50:
	word32 a5_10 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a5_10 != 255<i32> l23076F5C
l23076F5C:
	branch a5_10 == a2 l23076F5A
l23076F60:
	a0 = a0 + (CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) + 2<32>)
l23076F58:
	a0 = 0<32>
l23076F5A:
	a1Out = a1_5
	a4Out = 255<i32>
	return a0
dhcp_server_option_find_exit:


word32 dhcp_client_find_by_ip.isra.0(word32 a1, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_server_recv
// MayUse:  a1:[0..31]
// LiveOut: a0 a1 a3 a4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s8 t0 t1 t3 t4 t5 t6
// Preserved: s0 sp
dhcp_client_find_by_ip.isra.0_entry:
l23076F6A:
	word32 a4_13
	word32 a5_14
	word32 a1_16
	word32 a3_18
	word32 a7_80
	word32 a2_78
	word32 a6_79
	memcpy(fp + 0xFFFFFFEC<32>, a1, 4<32>, out a1_16, out a2_78, out a3_18, out a4_13, out a5_14, out a6_79, out a7_80)
	word32 a0_28 = fp + 0xFFFFFFEC<32>
l23076F7E:
	branch a0_28 != 0<32> l23076F88
l23076F88:
	a0_28 = Mem11[a4_13 + 12<i32>:word32]
	branch a5_14 == a4_13 l23076F80
l23076F8E:
	a0_28 = Mem11[a0_28:word32]
l23076F80:
	a1Out = a1_16
	a3Out = a3_18
	a4Out = a4_13
	s8Out = dwLoc1C
	return a0_28
dhcp_client_find_by_ip.isra.0_exit:


void dhcp_server_recv(word32 ra, word32 s1, word32 a0, word32 a2, word32 a5, word32 s3, word32 s4, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg38, word32 dwArg44, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
dhcp_server_recv_entry:
l23076F92:
	word32 a0_819
	word32 a3_162 = Mem25[a5:word32]
	word32 a4_100 = CONVERT(Mem25[a2 + 10<i32>:uint16], uint16, word32)
	word32 s0_34 = a2
	branch a4_100 >u 43<i32> l23076FDE
l23076FDE:
	word32 a0_43
	word32 s5_1328
	word32 s1_1321
	word32 a1_1322
	word32 s3_1327
	word32 a5_1324
	word32 s2_1326
	word32 a7_1325
	word32 s8_1330
	word32 s6_1329
	word32 a2_1323
	ra = pbuf_alloc(ra, a2, a0, 182<i32>, 1500<i32>, 640<i32>, a3_162, a4_100, mstatus, a5, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_34, out s1_1321, out a0_43, out a1_1322, out a2_1323, out a3_162, out a4_100, out a5_1324, out a7_1325, out s2_1326, out s3_1327, out s4, out s5_1328, out s6_1329, out s8_1330, out mstatus)
	branch a0_43 == 0<32> l23076FBE
l23076FF6:
	a4_100 = CONVERT(Mem32[a0_43 + 8<i32>:uint16], uint16, word32)
	branch a4_100 <u CONVERT(Mem32[s0_34 + 8<i32>:uint16], uint16, word32) l23076FBE
l23077002:
	word32 s4_76
	word32 a4_79
	word32 a3_83
	word32 s1_102
	word32 s8_1342
	word32 a7_1340
	word32 a5_1339
	word32 a2_1338
	word32 s3_1341
	word32 s0_1335
	word32 s2_1333
	word32 a0_1332
	word32 s1_1331
	word32 s3_1334
	word32 a1_1337
	word32 a0_1336
	word32 s6_109
	word32 s5_108
	word32 s2_103
	ra = pbuf_free(ra, pbuf_copy(a0_43, s0_34, out s1_1331, out a0_1332, out a3_83, out a4_79, out s2_1333, out s3_1334, out s4_76), a3_83, a4_79, s4_76, mstatus, dwArgE8, out s0_1335, out s1_102, out a0_1336, out a1_1337, out a2_1338, out a3_162, out a4_100, out a5_1339, out a7_1340, out s2_103, out s3_1341, out s4, out s5_108, out s6_109, out s8_1342, out mstatus)
	word32 s0_118 = Mem32[s2_103 + 4<i32>:int32]
	word32 s3_120 = CONVERT(Mem32[s0_118:byte], byte, word32)
	branch s3_120 != 1<32> l23077234
l2307701C:
	a4_100 = 0x63538263<32>
	branch (CONVERT(Mem32[s0_118 + 239<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem32[s0_118 + 237<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem32[s0_118 + 236<i32>:byte], byte, word32)) | CONVERT(Mem32[s0_118 + 238<i32>:byte], byte, word32) << 16<i32>)) != 0x63538263<32> l23077234
l23077044:
	word32 s8_133 = CONVERT(Mem32[s0_118 + 2<i32>:byte], byte, word32)
	branch s8_133 >u 6<32> l23077234
l2307704E:
	word32 s4_139 = CONVERT(Mem32[s2_103 + 8<i32>:uint16], uint16, word32) + -240<i32> << 16<i32>
	s4 = s4_139 >>u 0x10<u32>
	word32 a1_1343
	word32 a0_143 = dhcp_server_option_find(s0_118 + 240<i32>, s4_139 >>u 0x10<u32>, 53<i32>, out a1_1343, out a4_100)
	branch a0_143 == 0<32> l23077234
l23077070:
	word32 a4_411
	word32 a3_399
	word32 s3_208
	word32 a1_413
	word32 a1_305
	word32 a5_147 = CONVERT(Mem32[a0_143 + 2<i32>:byte], byte, word32)
	branch a5_147 != s3_120 l23077238
l23077238:
	branch a5_147 != 3<32> l23077330
l23077330:
	a4_100 = 7<32>
	branch a5_147 != 7<32> l23077234
l23077336:
	word32 s3_150 = Mem32[s1_102 + 12<i32>:int32]
	s4 = 0<32>
l23077340:
	branch s3_150 == 0<32> l23077234
l23077344:
	word32 a1_1491
	word32 a2_1492
	word32 a5_1493
	word32 a0_160 = memcmp(s3_150 + 4<i32>, s0_118 + 28<i32>, CONVERT(Mem32[s0_118 + 2<i32>:byte], byte, word32), out a1_1491, out a2_1492, out a3_162, out a4_100, out a5_1493)
	word32 a5_166 = Mem32[s3_150:int32]
	branch a0_160 != 0<32> l2307736E
l2307736E:
	s4 = s3_150
	s3_150 = Mem32[a5_166:int32]
l23077358:
	word32 s1_169 = Mem32[a4_100 + 12<i32>:word32]
	branch a4_100 != s3_150 l23077368
l23077368:
	Mem171[s4:word32] = a5_166
l2307735E:
	Mem172[a5_166 + 12<i32>:word32] = s1_169
l23077360:
	word32 s6_1500
	word32 s8_1501
	word32 a5_1496
	word32 s5_1499
	word32 a7_1497
	word32 s3_1498
	word32 a1_1495
	word32 s1_1494
	mem_free(s3_150, a3_162, a4_100, s2_103, s3_150, s4, mstatus, a5, dwLoc38, dwLoc1C, dwArg44, dwArg64, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s1_1494, out a1_1495, out a3_162, out a4_100, out a5_1496, out a7_1497, out s2_103, out s3_1498, out s4, out s5_1499, out s6_1500, out s8_1501)
l2307723E:
	s3_208 = Mem32[s1_102 + 12<i32>:int32]
l23077246:
	word32 a1_220
	branch s3_208 != 0<32> l2307731C
l2307731C:
	word32 a3_1408
	word32 a2_1407
	word32 a5_1410
	word32 a4_1409
	branch memcmp(s3_208 + 4<i32>, s0_118 + 28<i32>, s8_133, out a1_220, out a2_1407, out a3_1408, out a4_1409, out a5_1410) == 0<32> l23077376
l2307732A:
	s3_208 = Mem32[s3_208:int32]
l2307724A:
	word32 a4_1411
	word32 a1_230
	word32 a0_229 = dhcp_server_option_find(s0_118 + 240<i32>, s4_139 >>u 0x10<u32>, 50<i32>, out a1_230, out a4_1411)
	branch a0_229 == 0<32> l23077284
l23077258:
	word32 a3_1431
	word32 a4_1432
	word32 a0_236 = dhcp_client_find_by_ip.isra.0(a0_229 + 2<i32>, out a1_230, out a3_1431, out a4_1432, out s8_133)
	s3_208 = a0_236
	branch a0_236 == 0<32> l23077284
l23077268:
	word32 a4_1435
	word32 a5_1436
	word32 a3_1434
	word32 a2_1433
	branch memcmp(a0_236 + 4<32>, s0_118 + 28<i32>, CONVERT(Mem32[s0_118 + 2<i32>:byte], byte, word32), out a1_220, out a2_1433, out a3_1434, out a4_1435, out a5_1436) == 0<32> l23077376
l23077376:
	Mem265[s3_208 + 16<i32>:word32] = 0x80510100<32>
	Mem268[s0_118:byte] = 2<8>
	Mem269[s0_118 + 3<i32>:byte] = 0<8>
	Mem270[s0_118 + 8<i32>:byte] = 0<8>
	Mem271[s0_118 + 9<i32>:byte] = 0<8>
	word32 a4_1440
	word32 a5_1441
	word32 a7_1443
	word32 a6_1442
	word32 a3_1439
	word32 a1_1437
	word32 a2_1438
	memcpy(s0_118 + 20<i32>, a1_220 + 4<32>, 4<32>, out a1_1437, out a2_1438, out a3_1439, out a4_1440, out a5_1441, out a6_1442, out a7_1443)
	Mem292[s0_118 + 237<i32>:byte] = 0x82<8>
	Mem294[s0_118 + 236<i32>:byte] = 0x63<8>
	Mem295[s0_118 + 239<i32>:byte] = 0x63<8>
	Mem296[s0_118 + 44<i32>:byte] = 0<8>
	Mem297[s0_118 + 108<i32>:byte] = 0<8>
	Mem298[s0_118 + 238<i32>:byte] = 0x53<8>
	word32 a2_1444
	word32 a5_1447
	word32 a6_1448
	word32 a7_1449
	word32 a4_1446
	word32 a3_1445
	memcpy(s0_118 + 16<i32>, s3_208 + 12<i32>, 4<32>, out a1_305, out a2_1444, out a3_1445, out a4_1446, out a5_1447, out a6_1448, out a7_1449)
	Mem316[s0_118 + 240<i32>:byte] = 0x35<8>
	Mem319[s0_118 + 241<i32>:byte] = 1<8>
	Mem320[s0_118 + 242<i32>:byte] = 5<8>
l23077278:
	word32 a2_1451
	word32 a5_1453
	word32 a4_1452
	word32 a0_1450
	puts(0x230C3814<32>, out a0_1450, out a1_230, out a2_1451, out a4_1452, out a5_1453, out s4, out s8_133)
l23077284:
	Mem335[s0_118:byte] = 2<8>
	Mem336[s0_118 + 3<i32>:byte] = 0<8>
	Mem337[s0_118 + 8<i32>:byte] = 0<8>
	Mem338[s0_118 + 9<i32>:byte] = 0<8>
	word32 a2_1413
	word32 a1_1412
	word32 a3_1414
	word32 a4_1415
	word32 a6_1417
	word32 a5_1416
	word32 a7_1418
	memcpy(s0_118 + 20<i32>, a1_230 + 4<32>, 4<32>, out a1_1412, out a2_1413, out a3_1414, out a4_1415, out a5_1416, out a6_1417, out a7_1418)
	Mem359[s0_118 + 237<i32>:byte] = 0x82<8>
	Mem361[s0_118 + 238<i32>:byte] = 0x53<8>
	Mem362[s0_118 + 236<i32>:byte] = 0x63<8>
	Mem363[s0_118 + 239<i32>:byte] = 0x63<8>
	Mem366[s0_118 + 44<i32>:byte] = 0<8>
	Mem367[s0_118 + 108<i32>:byte] = 0<8>
	word32 a1_372
	word32 a0_1420
	word32 a5_1424
	word32 a3_1422
	word32 a4_1423
	word32 a2_1421
	word32 t1_1419
	ra = memset(ra, s0_118 + 16<i32>, 0<32>, 4<32>, out t1_1419, out a0_1420, out a1_372, out a2_1421, out a3_1422, out a4_1423, out a5_1424)
	Mem381[s0_118 + 240<i32>:byte] = 0x35<8>
	Mem383[s0_118 + 241<i32>:byte] = 1<8>
	Mem385[s0_118 + 242<i32>:byte] = 6<8>
	Mem387[s0_118 + 243<i32>:byte] = 0x36<8>
	Mem389[s0_118 + 244<i32>:byte] = 4<8>
	word32 a1_1425
	word32 a5_1428
	word32 a7_1430
	word32 a6_1429
	word32 a4_1427
	word32 a2_1426
	memcpy(s0_118 + 245<i32>, a1_372 + 4<32>, 4<32>, out a1_1425, out a2_1426, out a3_399, out a4_1427, out a5_1428, out a6_1429, out a7_1430)
	Mem408[s0_118 + 249<i32>:byte] = 0xFF<8>
	a4_411 = CONVERT(Mem408[s2_103 + 8<i32>:uint16], uint16, word32)
	branch a4_411 <=u 250<i32> l23077222
l23077316:
	a1_413 = 250<i32>
l23077078:
	word32 s3_414 = Mem32[s1_102 + 12<i32>:int32]
l23077080:
	word32 a1_426
	branch s3_414 != 0<32> l230770D8
l230770D8:
	word32 a5_1347
	word32 a4_1346
	word32 a3_1345
	word32 a2_1344
	branch memcmp(s3_414 + 4<i32>, s0_118 + 28<i32>, s8_133, out a1_426, out a2_1344, out a3_1345, out a4_1346, out a5_1347) == 0<32> l23077114
l230770E6:
	s3_414 = Mem32[s3_414:int32]
l23077084:
	word32 a4_1349
	word32 a1_1348
	word32 a0_435 = dhcp_server_option_find(s0_118 + 240<i32>, s4_139 >>u 0x10<u32>, 50<i32>, out a1_1348, out a4_1349)
	branch a0_435 == 0<32> l230770A4
l23077096:
	word32 a4_1351
	word32 a3_1350
	word32 a0_443 = dhcp_client_find_by_ip.isra.0(a0_435 + 2<i32>, out a1_426, out a3_1350, out a4_1351, out s8_133)
	s3_414 = a0_443
	branch a0_443 != 0<32> l23077114
l230770A4:
l230770A8:
	word32 s8_1403
	word32 a3_468
	word32 a4_469
	word32 a1_1402
	word32 a0_465 = dhcp_client_find_by_ip.isra.0(s1_102 + 24<i32>, out a1_1402, out a3_468, out a4_469, out s8_1403)
	branch a0_465 == 0<32> l230770EC
l230770EC:
	word32 a0_487
	word32 a7_1367
	word32 a5_1366
	word32 a1_1365
	word32 s3_1368
	mem_malloc(ra, s0_118, 0x14<32>, a3_468, a4_469, s2_103, mstatus, s4, dwLoc0C, s3, dwArgA8, dwArgC8, dwArgE8, dwArg0108, dwArg0148, out a0_487, out a1_1365, out a3_162, out a4_100, out a5_1366, out a7_1367, out s2_103, out s3_1368, out s4, out s5_108, out s6_109, out s8_133)
	s3_414 = a0_487
	branch a0_487 == 0<32> l23077234
l230770F8:
	word32 a5_515
	word32 a3_1398
	word32 a6_1400
	word32 a7_1401
	word32 a4_1399
	word32 a2_1397
	memcpy(a0_487 + 4<32>, s0_118 + 28<i32>, CONVERT(Mem486[s0_118 + 2<i32>:byte], byte, word32), out a1_426, out a2_1397, out a3_1398, out a4_1399, out a5_515, out a6_1400, out a7_1401)
	Mem528[a0_487 + 12<i32>:word32] = a5_515
	word32 s1_529 = Mem528[a5_515 + 12<i32>:word32]
	Mem530[a0_487:word32] = a5_515
	Mem531[s1_529 + 12<i32>:word32] = a0_487
l23077114:
	Mem535[s3_414 + 16<i32>:word32] = 0x80510100<32>
	Mem539[s0_118:byte] = 2<8>
	Mem540[s0_118 + 3<i32>:byte] = 0<8>
	Mem541[s0_118 + 8<i32>:byte] = 0<8>
	Mem542[s0_118 + 9<i32>:byte] = 0<8>
	word32 a7_1358
	word32 a4_1355
	word32 a3_1354
	word32 a2_1353
	word32 a1_1352
	word32 a6_1357
	word32 a5_1356
	memcpy(s0_118 + 20<i32>, a1_426 + 4<32>, 4<32>, out a1_1352, out a2_1353, out a3_1354, out a4_1355, out a5_1356, out a6_1357, out a7_1358)
	Mem563[s0_118 + 237<i32>:byte] = 0x82<8>
	Mem565[s0_118 + 236<i32>:byte] = 0x63<8>
	Mem566[s0_118 + 239<i32>:byte] = 0x63<8>
	Mem567[s0_118 + 44<i32>:byte] = 0<8>
	Mem568[s0_118 + 108<i32>:byte] = 0<8>
	Mem569[s0_118 + 238<i32>:byte] = 0x53<8>
	word32 a7_1364
	word32 a4_1361
	word32 a3_1360
	word32 a2_1359
	word32 a6_1363
	word32 a5_1362
	memcpy(s0_118 + 16<i32>, s3_414 + 12<i32>, 4<32>, out a1_305, out a2_1359, out a3_1360, out a4_1361, out a5_1362, out a6_1363, out a7_1364)
	Mem588[s0_118 + 240<i32>:byte] = 0x35<8>
	Mem589[s0_118 + 241<i32>:byte] = 1<8>
	Mem590[s0_118 + 242<i32>:byte] = 2<8>
l23077184:
	Mem594[s0_118 + 243<i32>:byte] = 0x36<8>
	Mem595[s0_118 + 244<i32>:byte] = 4<8>
	word32 a6_1459
	word32 a7_1460
	word32 a5_1458
	word32 a4_1457
	word32 a3_1456
	word32 a2_1455
	word32 a1_1454
	memcpy(s0_118 + 245<i32>, a1_305 + 4<32>, 4<32>, out a1_1454, out a2_1455, out a3_1456, out a4_1457, out a5_1458, out a6_1459, out a7_1460)
	Mem615[s0_118 + 249<i32>:byte] = 0x33<8>
	Mem625[s0_118 + 250<i32>:byte] = 4<8>
	word32 a1_631
	word32 a4_1463
	word32 a7_1466
	word32 a6_1465
	word32 a5_1464
	word32 a3_1462
	word32 a2_1461
	memcpy(s0_118 + 251<i32>, fp + -52<i32>, 4<32>, out a1_631, out a2_1461, out a3_1462, out a4_1463, out a5_1464, out a6_1465, out a7_1466)
	Mem642[s0_118 + 255<i32>:byte] = 1<8>
	Mem643[s0_118 + 256<i32>:byte] = 4<8>
	word32 a1_651
	word32 a5_1470
	word32 a7_1472
	word32 a6_1471
	word32 a4_1469
	word32 a2_1467
	word32 a3_1468
	memcpy(s0_118 + 257<i32>, a1_631 + 8<32>, 4<32>, out a1_651, out a2_1467, out a3_1468, out a4_1469, out a5_1470, out a6_1471, out a7_1472)
	Mem662[s0_118 + 261<i32>:byte] = 6<8>
	Mem663[s0_118 + 262<i32>:byte] = 4<8>
	word32 a1_671
	word32 a4_1475
	word32 a5_1476
	word32 a7_1478
	word32 a6_1477
	word32 a3_1474
	word32 a2_1473
	memcpy(s0_118 + 263<i32>, a1_651 + 4<32>, 4<32>, out a1_671, out a2_1473, out a3_1474, out a4_1475, out a5_1476, out a6_1477, out a7_1478)
	Mem682[s0_118 + 267<i32>:byte] = 3<8>
	Mem683[s0_118 + 268<i32>:byte] = 4<8>
	word32 a1_1479
	word32 a5_1482
	word32 a6_1483
	word32 a7_1484
	word32 a4_1481
	word32 a2_1480
	memcpy(s0_118 + 269<i32>, a1_671 + 4<32>, 4<32>, out a1_1479, out a2_1480, out a3_399, out a4_1481, out a5_1482, out a6_1483, out a7_1484)
	Mem702[s0_118 + 273<i32>:byte] = 0xFF<8>
	s4 = 1<32>
	s3_208 = 4<32>
	a4_411 = CONVERT(Mem702[s2_103 + 8<i32>:uint16], uint16, word32)
	branch a4_411 <=u 274<i32> l23077222
l23077218:
	a1_413 = 274<i32>
l2307721C:
	word32 s4_1490
	word32 a2_1486
	word32 a5_1488
	word32 s3_1489
	word32 a3_1487
	word32 s1_1485
	ra = pbuf_realloc(ra, s0_118, s2_103, a1_413, a3_399, a4_411, s2_103, s3_208, s4, mstatus, s4, s1, dwArg88, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0128, out s1_1485, out a2_1486, out a3_1487, out a4_411, out a5_1488, out s2_103, out s3_1489, out s4_1490, out s5_108, out s6_109, out s8_133, out mstatus)
l23077222:
	word32 s3_1404
	word32 s7_1405
	word32 s8_1406
	ra = udp_sendto_if(ra, s5_108, s2_103, fp + -56<i32>, s6_109, a4_411, s8_133, mstatus, s4, dwArg38, s9, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out a3_162, out a4_100, out s2_103, out s3_1404, out s4, out s7_1405, out s8_1406, out mstatus)
l23077234:
	a0_819 = s2_103
l230770B2:
	word32 a4_1370
	word32 a5_1371
	word32 a3_1369
	word32 a0_821 = lwip_htonl(a0_465, out a3_1369, out a4_1370, out a5_1371)
	word32 s1_826 = Mem486[a0_821 + 20<i32>:word32]
	word32 s3_825 = a0_821 + 1<i32>
	word32 a4_1373
	word32 a3_1372
	word32 a5_1374
	word32 a0_827 = lwip_htonl(a0_821, out a3_1372, out a4_1373, out a5_1374)
	branch a0_827 >=u a0_821 + 1<i32> l230770CE
l230770C6:
	s1_826 = Mem486[a0_827 + 16<i32>:word32]
	word32 a3_1378
	word32 a5_1380
	word32 a4_1379
	s3_825 = lwip_htonl(a0_827, out a3_1378, out a4_1379, out a5_1380)
l230770CE:
	word32 a5_1377
	word32 a4_1376
	word32 a3_1375
	Mem844[lwip_htonl(s3_825, out a3_1375, out a4_1376, out a5_1377) + 24<i32>:word32] = s1_826
l23076FBE:
	a0_819 = s0_34
l23076FC0:
	word32 s6_1394
	word32 s5_1393
	word32 s8_1395
	word32 a1_1384
	word32 s4_1392
	word32 a5_1388
	word32 s0_1381
	word32 mstatus_1396
	word32 s2_1390
	word32 s3_1391
	word32 a7_1389
	word32 a3_1386
	word32 a4_1387
	word32 a2_1385
	word32 a0_1383
	word32 s1_1382
	pbuf_free(ra, a0_819, a3_162, a4_100, s4, mstatus, dwArgE8, out s0_1381, out s1_1382, out a0_1383, out a1_1384, out a2_1385, out a3_1386, out a4_1387, out a5_1388, out a7_1389, out s2_1390, out s3_1391, out s4_1392, out s5_1393, out s6_1394, out s8_1395, out mstatus_1396)
	0<32> = dwArg0198
	return
dhcp_server_recv_exit:


word32 dhcp_server_start(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg74, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcpd_start
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0074:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_server_start_entry:
l230773EA:
	word32 a5_19 = Mem5[0x4200F698<32>:int32]
l23077404:
	word32 a0_121
	branch a5_19 != 0<32> l23077428
l23077428:
	word32 a5_22 = Mem17[a4 + 4<i32>:word32]
	branch a4 != a0 l2307743E
l2307743E:
	a5_19 = Mem17[a5_22:word32]
l2307742E:
	Mem26[a4 + 16<i32>:word32] = a5_22
	Mem28[a4 + 20<i32>:word32] = a5_22
	Mem30[a4 + 24<i32>:word32] = a5_22
l23077406:
	word32 a0_47
	word32 s2_57
	word32 s3_58
	word32 s4_59
	word32 s8_268
	word32 s6_267
	word32 s5_266
	word32 a7_265
	word32 a5_264
	word32 a4_263
	word32 a1_262
	mem_malloc(ra, s0, 0x1C<32>, a3, a4, 0x4200F698<32>, mstatus, dwLoc0C, dwArg14, dwArg74, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0168, out a0_47, out a1_262, out a3, out a4_263, out a5_264, out a7_265, out s2_57, out s3_58, out s4_59, out s5_266, out s6_267, out s8_268)
	branch a0_47 != 0<32> l23077442
l23077442:
	word32 a0_72
	word32 a3_75
	word32 a4_76
	word32 a5_272
	word32 a2_271
	word32 a1_270
	word32 t1_269
	word32 ra_78 = memset(ra, a0_47, 0<32>, 0x1C<32>, out t1_269, out a0_72, out a1_270, out a2_271, out a3_75, out a4_76, out a5_272)
	word32 a5_81 = Mem17[s2_57:int32]
	Mem82[a0_47 + 4<i32>:word32] = s4_59
	Mem83[a0_47 + 12<i32>:word32] = 0<32>
	Mem84[a5_81:word32] = a0_47
	Mem86[s2_57:word32] = a0_47
	Mem87[a5_81 + 16<i32>:word32] = a0_47
	word32 a5_88 = Mem87[s3_58:int32]
	Mem89[a5_88 + 20<i32>:word32] = a0_47
	word32 s1_90 = Mem89[a5_88:word32]
	Mem91[a5_88 + 24<i32>:word32] = a0_47
	word32 a4_274
	word32 s1_273
	word32 a5_275
	ra = udp_new(ra_78, s1_90, a3_75, a4_76, mstatus, out s1_273, out a3, out a4_274, out a5_275)
	Mem102[a0_72 + 8<i32>:word32] = a0_47
	branch a0_72 == 0<32> l23077416
l23077472:
	Mem107[a0_72 + 9<i32>:byte] = SLICE(CONVERT(Mem102[a0_72 + 9<i32>:byte], byte, word32) | 32<i32>, byte, 0)
	word32 a4_276
	word32 a5_277
	word32 a0_110 = udp_bind(a0_72, 0x230CBADC<32>, 67<i32>, out a3, out a4_276, out a5_277)
	udp_recv(a0_110, 0x23076F92<32>, Mem107[a0_110 + 8<i32>:word32])
l2307743A:
	a0_121 = 0<32>
l23077416:
	a0_121 = 0xFFFFFFFF<32>
l23077418:
	a0Out = a0_121
	a3Out = a3
	return ra
dhcp_server_start_exit:


void dhcp_server_stop(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg94, word32 dwArgAC, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
dhcp_server_stop_entry:
l230774A2:
	word32 s0_13 = Mem6[0x4200F698<32>:int32]
	word32 s1_12 = 0x4200F698<32>
l230774B6:
	branch s0_13 != 0<32> l230774C8
l230774C8:
	word32 s0_16 = Mem11[0x4200F004<32>:word32]
	branch a0 == 0x4200F000<32> l230774D2
l230774D2:
	word32 s0_18 = Mem11[a0 + 8<i32>:word32]
	branch a0 == 0<32> l230774DA
l230774D6:
	word32 a0_240
	word32 a2_241
	word32 a5_242
	s1_12 = udp_remove(a0, a3, mstatus, out a0_240, out a2_241, out a3, out a4, out a5_242)
l230774DA:
	Mem33[s1_12:word32] = 0<32>
	word32 s1_228
	word32 a1_229
	word32 a3_230
	word32 a4_231
	word32 a5_232
	word32 a7_233
	word32 s2_234
	word32 s3_235
	word32 s4_236
	word32 s5_237
	word32 s6_238
	word32 s8_239
	mem_free(s0_18, a3, a4, s2, s3, s4, mstatus, s0, dwLoc08, dwArg14, ra, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s1_228, out a1_229, out a3_230, out a4_231, out a5_232, out a7_233, out s2_234, out s3_235, out s4_236, out s5_237, out s6_238, out s8_239)
l230774CE:
	s0_13 = Mem11[s0_16:word32]
l230774B8:
	word32 a2_212
	word32 s5_220
	word32 a3_213
	word32 a4_214
	word32 a5_215
	word32 s6_221
	word32 s2_217
	word32 a7_216
	word32 s4_219
	word32 s3_218
	word32 a1_211
	word32 a0_210
	word32 s1_209
	word32 s7_222
	word32 s8_223
	word32 s9_224
	word32 s10_225
	word32 s11_226
	word32 t4_227
	printf(ra, 0x230C3840<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_209, out a0_210, out a1_211, out a2_212, out a3_213, out a4_214, out a5_215, out a7_216, out s2_217, out s3_218, out s4_219, out s5_220, out s6_221, out s7_222, out s8_223, out s9_224, out s10_225, out s11_226, out t4_227)
l230774E6:
	return
dhcp_server_stop_exit:


void dhcpd_start(word32 ra, word32 s0, word32 s1, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
dhcpd_start_entry:
l230774F0:
	word32 a0_324
	word32 mstatus_27
	word32 s1_30
	word32 s3_34
	word32 s7_38
	word32 ra_28 = dhcp_stop(ra, s0, s3, s4, s7, mstatus, dwLoc2C, s2, dwLoc18, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, out s1_30, out s3_34, out s7_38, out mstatus_27)
	word32 s1_57
	word32 s0_56 = set_if(ra_28, s1_30, 0x230C388C<32>, 0x230B2104<32>, 0x230C387C<32>, s3_34, s7_38, mstatus_27, dwLoc38, s2, s0, dwLoc0C, dwLoc08, dwArg08, dwArg10, dwArg14, dwArg18, dwArg1C, dwArg38, dwArg48, dwArg68, dwArgE8, out s1_57)
	word32 mstatus_84
	word32 s3_487
	word32 s2_486
	word32 a1_485
	word32 ra_311 = netif_set_up(ra_28, s0_56, s1_57, mstatus_27, dwLoc38, dwLoc30, dwLoc1C, dwArg18, dwArg28, dwArg48, s3, s1, dwArg68, dwArg70, dwArg74, dwArg88, dwArg98, dwArgC8, dwArg0148, out a1_485, out s2_486, out s3_487, out mstatus_84)
	word32 a2_489
	word32 a3_490
	word32 a4_491
	word32 a5_492
	word32 a1_488
	word32 a6_493
	word32 a7_494
	memcpy(fp + -52<i32>, s0_56 + -1908<i32>, 0xE<32>, out a1_488, out a2_489, out a3_490, out a4_491, out a5_492, out a6_493, out a7_494)
	word32 a1_495
	word32 a2_496
	word32 a4_497
	word32 a5_498
	word32 a3_124
	word32 a0_127 = strchr(fp + -52<i32>, 46<i32>, out a1_495, out a2_496, out a3_124, out a4_497, out a5_498)
	word32 dwLoc28_408 = CONVERT(SLICE(s2, word16, 0), word16, uint32)
	branch a0_127 != 0<32> l23077566
l23077566:
	word32 a1_499
	word32 a2_500
	word32 a4_501
	word32 a5_502
	word32 a0_138 = strchr(a0_127 + 1<32>, 46<i32>, out a1_499, out a2_500, out a3_124, out a4_501, out a5_502)
	branch a0_138 == 0<32> l2307754A
l23077572:
	word32 a1_503
	word32 a2_504
	word32 a4_505
	word32 a5_506
	word32 a0_149 = strchr(a0_138 + 1<32>, 46<i32>, out a1_503, out a2_504, out a3_124, out a4_505, out a5_506)
	branch a0_149 == 0<32> l2307754A
l2307757E:
	word32 a3_186
	word32 s3_217
	word32 s2_241
	word32 a3_256
	word32 a3_278
	word32 a4_279
	word32 s1_282
	word32 a0_298
	word32 s0_507
	word32 s1_508
	word32 a0_509
	word32 a1_510
	word32 a2_511
	word32 a4_512
	word32 a5_513
	word32 s2_514
	word32 s3_515
	word32 s4_516
	word32 s5_517
	word32 s6_518
	word32 s7_519
	word32 s8_520
	word32 s9_521
	word32 s10_522
	word32 s11_523
	word32 a0_524
	word32 a4_525
	word32 a5_526
	word32 s4_527
	word32 s8_528
	word32 s1_529
	word32 a0_530
	word32 a1_531
	word32 a2_532
	word32 a3_533
	word32 a4_534
	word32 a5_535
	word32 a7_536
	word32 s2_537
	word32 s4_538
	word32 s5_539
	word32 s6_540
	word32 s7_541
	word32 s8_542
	word32 s9_543
	word32 s10_544
	word32 s11_545
	word32 t4_546
	word32 s0_547
	word32 s1_548
	word32 a0_549
	word32 a1_550
	word32 a2_551
	word32 a4_552
	word32 a5_553
	word32 s3_554
	word32 s4_555
	word32 s5_556
	word32 s6_557
	word32 s7_558
	word32 s8_559
	word32 s9_560
	word32 s10_561
	word32 s11_562
	word32 a0_563
	word32 a4_564
	word32 a5_565
	word32 s4_566
	word32 s8_567
	word32 a0_568
	word32 a1_569
	word32 a2_570
	word32 a5_571
	word32 a7_572
	word32 s2_573
	word32 s3_574
	word32 s4_575
	word32 s5_576
	word32 s6_577
	word32 s7_578
	word32 s8_579
	word32 s9_580
	word32 s10_581
	word32 s11_582
	word32 t4_583
	ra_311 = dhcp_server_start(printf(sprintf(printf(sprintf(ra_311, a0_149 + 1<i32>, 0x230C7894<32>, dwLoc28_408, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, out s0_507, out s1_508, out a0_509, out a1_510, out a2_511, out a4_512, out a5_513, out s2_514, out s3_515, out s4_516, out s5_517, out s6_518, out s7_519, out s8_520, out s9_521, out s10_522, out s11_523), 0x230C38C0<32>, a3_186, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_529, out a0_530, out a1_531, out a2_532, out a3_533, out a4_534, out a5_535, out a7_536, out s2_537, out s3_217, out s4_538, out s5_539, out s6_540, out s7_541, out s8_542, out s9_543, out s10_544, out s11_545, out t4_546), ip4addr_aton(fp + -52<i32>, fp + -60<i32>, out a0_524, out a3_186, out a4_525, out a5_526, out s4_527, out s8_528), s3_217 + -1900<i32>, dwLoc28_408, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, out s0_547, out s1_548, out a0_549, out a1_550, out a2_551, out a4_552, out a5_553, out s2_241, out s3_554, out s4_555, out s5_556, out s6_557, out s7_558, out s8_559, out s9_560, out s10_561, out s11_562), s2_241 + -1856<i32>, a3_256, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_282, out a0_568, out a1_569, out a2_570, out a3_278, out a4_279, out a5_571, out a7_572, out s2_573, out s3_574, out s4_575, out s5_576, out s6_577, out s7_578, out s8_579, out s9_580, out s10_581, out s11_582, out t4_583), ip4addr_aton(fp + -52<i32>, fp + -56<i32>, out a0_563, out a3_256, out a4_564, out a5_565, out s4_566, out s8_567), s1_282, a3_278, a4_279, mstatus_84, dwLoc2C, dwArg34, dwArg88, dwArgA8, dwArgC8, dwArgE8, dwArg0128, out a0_298, out a3_124)
	branch a0_298 == 0<32> l23077558
l230775D6:
	a0_324 = 0x230C38D8<32>
l2307754A:
	a0_324 = 0x230C389C<32>
l23077554:
	word32 s1_584
	word32 a0_585
	word32 a1_586
	word32 a2_587
	word32 a3_588
	word32 a4_589
	word32 a5_590
	word32 a7_591
	word32 s2_592
	word32 s3_593
	word32 s4_594
	word32 s5_595
	word32 s6_596
	word32 s7_597
	word32 s8_598
	word32 s9_599
	word32 s10_600
	word32 s11_601
	word32 t4_602
	printf(ra_311, a0_324, a3_124, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_584, out a0_585, out a1_586, out a2_587, out a3_588, out a4_589, out a5_590, out a7_591, out s2_592, out s3_593, out s4_594, out s5_595, out s6_596, out s7_597, out s8_598, out s9_599, out s10_600, out s11_601, out t4_602)
l23077558:
	return
dhcpd_start_exit:


void iperf_server_udp_entry(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg44, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipus_test_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
iperf_server_udp_entry_entry:
l230775E0:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 a0_17
	word32 a1_18
	word32 s1_25
	word32 s4_28
	word32 a1_82
	word32 a2_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a6_88
	word32 s2_89
	word32 s3_90
	word32 s8_91
	pvPortMalloc(ra, s1, strlen(a0, out a1_82, out a2_83, out a3_9, out a4_10, out a5_11) + 1<32>, a3_9, a4_10, a5_11, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_25, out a0_17, out a1_18, out a2_84, out a3_85, out a4_86, out a5_87, out a6_88, out s2_89, out s3_90, out s4_28, out s8_91)
	word32 a4_35
	word32 a5_36
	strcpy(a0_17, a1_18, out a4_35, out a5_36)
l23077610_thunk_aos_task_new:
	aos_task_new(ra, s1_25, 0x230776B0<32>, dwArg44, 0x1000000<32>, a4_35, a5_36, s4_28, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
iperf_server_udp_entry_exit:


void iperf_client_udp_entry(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg44, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipu_test_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
iperf_client_udp_entry_entry:
l23077614:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 a0_17
	word32 a1_18
	word32 s1_25
	word32 s4_28
	word32 a1_82
	word32 a2_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a6_88
	word32 s2_89
	word32 s3_90
	word32 s8_91
	pvPortMalloc(ra, s1, strlen(a0, out a1_82, out a2_83, out a3_9, out a4_10, out a5_11) + 4<32>, a3_9, a4_10, a5_11, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_25, out a0_17, out a1_18, out a2_84, out a3_85, out a4_86, out a5_87, out a6_88, out s2_89, out s3_90, out s4_28, out s8_91)
	word32 a4_35
	word32 a5_36
	strcpy(a0_17, a1_18, out a4_35, out a5_36)
l23077644_thunk_aos_task_new:
	aos_task_new(ra, s1_25, 0x23077A16<32>, dwArg44, 0x1000000<32>, a4_35, a5_36, s4_28, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
iperf_client_udp_entry_exit:


void iperf_server_entry(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg44, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ips_test_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
iperf_server_entry_entry:
l23077648:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 a0_17
	word32 a1_18
	word32 s1_25
	word32 s4_28
	word32 a1_82
	word32 a2_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a6_88
	word32 s2_89
	word32 s3_90
	word32 s8_91
	pvPortMalloc(ra, s1, strlen(a0, out a1_82, out a2_83, out a3_9, out a4_10, out a5_11) + 4<32>, a3_9, a4_10, a5_11, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_25, out a0_17, out a1_18, out a2_84, out a3_85, out a4_86, out a5_87, out a6_88, out s2_89, out s3_90, out s4_28, out s8_91)
	word32 a4_35
	word32 a5_36
	strcpy(a0_17, a1_18, out a4_35, out a5_36)
l23077678_thunk_aos_task_new:
	aos_task_new(ra, s1_25, 0x23077C90<32>, dwArg44, 0x1000000<32>, a4_35, a5_36, s4_28, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
iperf_server_entry_exit:


void iperf_client_tcp_entry(word32 ra, word32 s1, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg44, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipc_test_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
iperf_client_tcp_entry_entry:
l2307767C:
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 a0_17
	word32 a1_18
	word32 s1_25
	word32 s4_28
	word32 a1_82
	word32 a2_83
	word32 a2_84
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 a6_88
	word32 s2_89
	word32 s3_90
	word32 s8_91
	pvPortMalloc(ra, s1, strlen(a0, out a1_82, out a2_83, out a3_9, out a4_10, out a5_11) + 4<32>, a3_9, a4_10, a5_11, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_25, out a0_17, out a1_18, out a2_84, out a3_85, out a4_86, out a5_87, out a6_88, out s2_89, out s3_90, out s4_28, out s8_91)
	word32 a4_35
	word32 a5_36
	strcpy(a0_17, a1_18, out a4_35, out a5_36)
l230776AC_thunk_aos_task_new:
	aos_task_new(ra, s1_25, 0x23077EE8<32>, dwArg44, 0x1000000<32>, a4_35, a5_36, s4_28, mstatus, dwArg04, dwArg20, dwArg24, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
iperf_client_tcp_entry_exit:


void iperf_server_udp(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg5C, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
iperf_server_udp_entry:
l230776B0:
	branch a0 != 0<32> l230776C0
l230776BC:
	word32 a5_326
	user_vAssertCalled(a4, mstatus, out a5_326)
l230776C0:
	word32 a2_173
	word32 a5_176
	word32 s1_177
	word32 a3_23
	word32 s1_26
	word32 a5_325
	word32 a4_324
	word32 ra_139 = udp_new(ra, a0, a3, a4, mstatus, out s1_26, out a3_23, out a4_324, out a5_325)
	branch a0 != 0<32> l230776E4
l230776E4:
	word32 a0_136
	word32 s4_329
	word32 a3_328
	word32 a0_327
	word32 s8_330
	word32 s0_127 = ipaddr_addr(s1_26, out a0_327, out a3_328, out s4_329, out s8_330)
	word32 a4_331
	word32 a5_332
	word32 a3_118
	branch udp_bind(s0_127, fp + -84<i32>, 0x1000389<32>, out a3_118, out a4_331, out a5_332) == 0<32> l23077710
l23077710:
	word32 s1_349
	word32 a0_350
	word32 a1_351
	word32 a2_352
	word32 a3_353
	word32 a4_354
	word32 a5_355
	word32 a7_356
	word32 s2_357
	word32 s3_358
	word32 s4_359
	word32 s5_360
	word32 s6_361
	word32 s7_362
	word32 s8_363
	word32 s9_364
	word32 s10_365
	word32 s11_366
	word32 t4_367
	word32 t1_368
	word32 a0_369
	word32 a1_370
	word32 a2_371
	word32 a5_372
	word32 a4_117
	ra_139 = memset(printf(ra_139, 0x230C3AB4<32>, a3_118, dwLoc58, dwLoc38, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_349, out a0_350, out a1_351, out a2_352, out a3_353, out a4_354, out a5_355, out a7_356, out s2_357, out s3_358, out s4_359, out s5_360, out s6_361, out s7_362, out s8_363, out s9_364, out s10_365, out s11_366, out t4_367), fp + -80<i32>, 0<32>, 64<i32>, out t1_368, out a0_369, out a1_370, out a2_371, out a3_118, out a4_117, out a5_372)
	udp_recv(s0_127, 0x2307775E<32>, fp + -80<i32>)
	word32 a5_105 = 0xFFFFFFFF<32>
	word32 a2_106 = fp + -80<i32>
l23077746:
	branch a5_105 == 0<32> l23077754
l23077754:
	word32 s1_384
	word32 a0_385
	word32 a1_386
	word32 s2_387
	word32 s3_388
	word32 s4_389
	s0_127 = vTaskDelay(1000<i32>, a2_106, a3_118, a4_117, a5_105, mstatus, dwLoc3C, dwLoc38, dwArgD8, dwArg0118, out s1_384, out a0_385, out a1_386, out a2_106, out a3_118, out a4_117, out a5_105, out s2_387, out s3_388, out s4_389)
l2307774A:
	a0_136 = 0x230C3AD4<32>
l230776FC:
	a0_136 = 0x230C3AA4<32>
l23077704:
	word32 a3_150
	word32 s1_390
	word32 a0_391
	word32 a1_392
	word32 a2_393
	word32 a4_394
	word32 a5_395
	word32 a7_396
	word32 s2_397
	word32 s3_398
	word32 s4_399
	word32 s5_400
	word32 s6_401
	word32 s7_402
	word32 s8_403
	word32 s9_404
	word32 s10_405
	word32 s11_406
	word32 t4_407
	printf(ra_139, a0_136, a3_118, dwLoc58, dwLoc38, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_390, out a0_391, out a1_392, out a2_393, out a3_150, out a4_394, out a5_395, out a7_396, out s2_397, out s3_398, out s4_399, out s5_400, out s6_401, out s7_402, out s8_403, out s9_404, out s10_405, out s11_406, out t4_407)
	word32 a0_408
	word32 a3_409
	word32 a4_410
	s1_177 = udp_remove(s0_127, a3_150, mstatus, out a0_408, out a2_173, out a3_409, out a4_410, out a5_176)
l230776C8:
	word32 s5_341
	word32 s6_342
	word32 s7_343
	word32 s10_346
	word32 s8_344
	word32 s9_345
	word32 a3_335
	word32 s3_339
	word32 s4_340
	word32 a7_337
	word32 s2_338
	word32 a4_336
	word32 a1_334
	word32 a0_333
	word32 s11_347
	word32 t4_348
	printf(ra_139, 0x230C3A80<32>, a3_23, dwLoc58, dwLoc38, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_177, out a0_333, out a1_334, out a2_173, out a3_335, out a4_336, out a5_176, out a7_337, out s2_338, out s3_339, out s4_340, out s5_341, out s6_342, out s7_343, out s8_344, out s9_345, out s10_346, out s11_347, out t4_348)
l230776D4:
	word32 s0_373
	word32 s1_374
	word32 a0_375
	word32 a1_376
	word32 a2_377
	word32 a3_378
	word32 a4_379
	word32 a5_380
	word32 a6_381
	word32 s4_382
	word32 t3_383
	vPortFree(s1_177, a2_173, a5_176, mstatus, dwArgF8, dwArg0138, out s0_373, out s1_374, out a0_375, out a1_376, out a2_377, out a3_378, out a4_379, out a5_380, out a6_381, out s4_382, out t3_383)
	return
iperf_server_udp_exit:


void iperf_server_udp_recv_fn(word32 ra, word32 s1, word32 a0, word32 a2, word32 s3, word32 s5, word32 s6, word32 fflags, word32 frm, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg68, word32 dwArg98, word32 dwArg0144)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0098:[0..31] Stack +0144:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: fa0 fa5 fflags frm fs0 fs1 fs2 s10 s11 sp t2
iperf_server_udp_recv_fn_entry:
l2307775E:
	word32 s5_11 = a2
	word32 t1_768
	word32 a2_771
	word32 a4_773
	word32 a1_770
	word32 a3_772
	word32 a0_769
	word32 a5_774
	word32 ra_296 = memset(ra, fp + -96<i32>, 0<32>, 32<i32>, out t1_768, out a0_769, out a1_770, out a2_771, out a3_772, out a4_773, out a5_774)
	branch a2 == 0<32> l230778F4
l23077796:
	word32 a1_52
	word32 a5_56
	word32 a2_775
	word32 a3_776
	word32 a4_55
	word32 a0_51 = bl_timer_now_us(out a1_52, out a2_775, out a3_776, out a4_55, out a5_56)
	word32 s9_63 = Mem37[a0 + 24<i32>:int32]
	Mem64[a0_51 + 32<i32>:word32] = a0
	word32 s4_302 = a0_51
	branch s9_63 != 0<32> l230777A8
l230777A6:
	s9_63 = a0_51
l230777A8:
	word32 s0_69 = Mem64[a4_55 + 28<i32>:word32]
	Mem71[s0_69 + 24<i32>:word32] = s9_63
	branch a4_55 != 0<32> l230777B2
l230777B0:
	a4_55 = a0_51
l230777B2:
	word32 a5_111
	Mem76[a4_55 + 28<i32>:word32] = s0_69
	word32 s2_79 = CONVERT(Mem76[a2 + 8<i32>:uint16], uint16, word32)
	word32 s1_90 = s1 + (s2_79 + 54<i32>)
	word32 s0_89 = Mem76[a5_56 + 4<i32>:word32]
	Mem94[s1_90 + 48<i32>:word32] = s0_89
	word32 s2_93 = CONVERT(s1_90 <u s2_79 + 54<i32>, bool, word32) + a1_52
	Mem95[s0_89 + 52<i32>:word32] = s2_93
	Mem96[a5_56 + 5<32>:word32] = s0_89
	word32 a5_97 = Mem96[a2 + 4<i32>:int32]
	word32 a3_104 = CONVERT(Mem96[a5_97:byte], byte, word32) << 24<i32> | CONVERT(Mem96[a5_97 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem96[a5_97 + 3<i32>:byte], byte, word32)
	word32 s3_107 = CONVERT(Mem96[a5_97 + 2<i32>:byte], byte, word32) << 8<i32> | a3_104
	branch s3_107 >= 0<32> l23077914
l23077914:
	a5_111 = 0x7A11F<32>
	branch a0_51 - a4_55 <=u 0x7A11F<32> l230778DA
l23077924:
	word32 a0_122
	word32 a1_123
	word32 fflags_131
	word32 frm_132
	word32 s2_134
	word32 s5_799
	word32 a5_797
	word32 s4_798
	word32 a3_796
	word32 s7_801
	word32 s9_802
	word32 s6_800
	word32 fa0_803
	word32 s1_133 = __floatundisf(ra_296, s1_90, s2_93, fflags, frm, out a0_122, out a1_123, out a3_796, out a5_797, out s2_134, out s4_798, out s5_799, out s6_800, out s7_801, out s9_802, out fa0_803, out fflags_131, out frm_132)
	word32 a0_154 = a0_122 + s1_133
	word32 fs1_150 = Mem96[0x230C4AEC<32>:real32]
	word32 s0_152 = Mem96[a1_123 + 44<i32>:word32]
	Mem160[a0_154 + 40<i32>:word32] = s0_152
	word32 a1_158 = a1_123 + s2_134 + CONVERT(a0_154 <u s1_133, bool, word32)
	Mem161[a1_158 + 44<i32>:word32] = s0_152
	word32 fs2_162 = Mem161[0x230C4AF0<32>:real32]
	word32 a0_164
	word32 a3_167
	word32 a5_169
	word32 fa0_172
	word32 fflags_173
	word32 frm_174
	word32 s4_178
	word32 s9_183
	word32 s5_806
	word32 s2_805
	word32 a1_804
	word32 s6_807
	word32 s7_808
	__floatundisf(ra_296, a0_154, a1_158, fflags_131, frm_132, out a0_164, out a1_804, out a3_167, out a5_169, out s2_805, out s4_178, out s5_806, out s6_807, out s7_808, out s9_183, out fa0_172, out fflags_173, out frm_174)
	word32 fa5_194 = fa0_172 * fs1_150 / CONVERT(s4_178 - s9_183, word32, real32)
	word32 fs2_195 = fa5_194 * fs2_162
	word32 a5_197 = CONVERT(Mem161[a5_169 + 56<i32>:real32] < fa5_194, bool, word32)
	branch a5_197 == 0<32> l23077980
l2307797E:
	Mem198[s0_152 + 56<i32>:real32] = s0_152
l23077980:
	branch CONVERT(fa5_194 < Mem200[a5_197 + 60<i32>:real32], bool, word32) == 0<32> l2307798A
l23077988:
	Mem205[s0_152 + 60<i32>:real32] = s0_152
l2307798A:
	word32 fs0_209 = Mem208[a0_164 + 56<i32>:real32]
	word32 a1_825
	__extendsfdf2(ra_296, fa0_172, fflags_173, frm_174, out a1_825)
	word32 a1_826
	__extendsfdf2(ra_296, fs0_209, fflags_173, frm_174, out a1_826)
	word32 a1_241
	__extendsfdf2(ra_296, fs0_209, fflags_173, frm_174, out a1_241)
	word32 a1_250
	__extendsfdf2(ra_296, fs2_195, fflags_173, frm_174, out a1_250)
	0<32> = dwArg0144
	word32 a3_265
	word32 a5_289
	word32 a4_294
	word32 s0_827
	word32 s1_828
	word32 a0_829
	word32 a1_830
	word32 a2_831
	word32 a4_832
	word32 a5_833
	word32 a7_834
	word32 s2_835
	word32 s3_836
	word32 s4_837
	word32 s5_838
	word32 s6_839
	word32 s7_840
	word32 s8_841
	word32 s9_842
	word32 s10_843
	word32 s11_844
	word32 s1_845
	word32 a0_846
	word32 a1_847
	word32 a2_848
	word32 a7_849
	word32 s2_850
	word32 s6_851
	word32 s7_852
	word32 s8_853
	word32 s9_854
	word32 s10_855
	word32 s11_856
	word32 t4_857
	ra_296 = printf(snprintf(ra_296, fp + -96<i32>, 32<i32>, 0x230C3B24<32>, dwLoc78, s6, dwLoc2C, a1_250, a1_241, dwArg18, dwArg3C, out s0_827, out s1_828, out a0_829, out a1_830, out a2_831, out a3_265, out a4_832, out a5_833, out a7_834, out s2_835, out s3_836, out s4_837, out s5_838, out s6_839, out s7_840, out s8_841, out s9_842, out s10_843, out s11_844), 0x230C6978<32>, a3_265, a3_167, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_845, out a0_846, out a1_847, out a2_848, out a3_104, out a4_294, out a5_289, out a7_849, out s2_850, out s3_107, out s4_302, out s5_11, out s6_851, out s7_852, out s8_853, out s9_854, out s10_855, out s11_856, out t4_857)
	word32 s0_311 = Mem258[a4_294 + 20<i32>:word32]
	Mem313[a5_289 + 28<i32>:word32] = s0_311
	Mem315[48<i32>:word32] = s0_311
	word32 s0_316 = Mem315[0xC<32>:word32]
	Mem317[s0_316 + 52<i32>:word32] = 0<32>
	Mem318[s0_316 + 20<i32>:word32] = 0<32>
	Mem320[a4_294 + 12<i32>:word32] = s0_316
	a5_111 = a4_294
l230777FE:
	Mem322[a5_97 + 12<i32>:byte] = 0x80<8>
	Mem323[a5_97 + 13<i32>:byte] = 0<8>
	Mem324[a5_97 + 14<i32>:byte] = 0<8>
	Mem325[a5_97 + 15<i32>:byte] = 0<8>
	Mem326[a5_97 + 16<i32>:byte] = 0<8>
	Mem327[a5_97 + 17<i32>:byte] = 0<8>
	Mem328[a5_97 + 18<i32>:byte] = 0<8>
	Mem329[a5_97 + 19<i32>:byte] = 0<8>
	Mem331[a5_97 + 24<i32>:byte] = 0<8>
	Mem332[a5_97 + 25<i32>:byte] = 0<8>
	Mem334[a5_97 + 20<i32>:byte] = 0xFF<8>
	Mem336[a5_97 + 21<i32>:byte] = 0xFF<8>
	Mem338[a5_97 + 22<i32>:byte] = 0xFF<8>
	Mem339[a5_97 + 23<i32>:byte] = 0x80<8>
	Mem340[a5_97 + 26<i32>:byte] = 0<8>
	Mem341[a5_97 + 27<i32>:byte] = 0<8>
	Mem342[a5_97 + 28<i32>:byte] = 0<8>
	Mem343[a5_97 + 29<i32>:byte] = 0<8>
	Mem344[a5_97 + 30<i32>:byte] = 0<8>
	Mem345[a5_97 + 31<i32>:byte] = 0<8>
	Mem350[a5_97 + 32<i32>:byte] = 0xFF<8>
	Mem352[a5_97 + 33<i32>:byte] = 0xFF<8>
	Mem354[a5_97 + 34<i32>:byte] = 0xFF<8>
	Mem355[a5_97 + 35<i32>:byte] = 0x80<8>
	Mem358[a5_97 + 36<i32>:byte] = 0xFF<8>
	Mem360[a5_97 + 37<i32>:byte] = 0xFF<8>
	Mem362[a5_97 + 38<i32>:byte] = 0xFF<8>
	Mem363[a5_97 + 39<i32>:byte] = 0x80<8>
	Mem366[a5_97 + 40<i32>:byte] = 0xFF<8>
	Mem368[a5_97 + 41<i32>:byte] = 0xFF<8>
	Mem370[a5_97 + 42<i32>:byte] = 0xFF<8>
	Mem371[a5_97 + 43<i32>:byte] = 0x80<8>
	word32 s1_777
	word32 s4_390
	word32 s5_391
	word32 s6_392
	word32 s7_393
	word32 s8_394
	word32 s0_415
	word32 a1_779
	word32 a0_778
	word32 a2_780
	word32 a3_781
	word32 s2_785
	word32 a5_783
	word32 a4_782
	word32 a7_784
	word32 s11_789
	word32 s9_787
	word32 s10_788
	word32 s3_786
	word32 s1_791
	word32 a0_792
	word32 a2_793
	word32 a4_794
	word32 s9_795
	word32 t4_790
	ra_296 = udp_sendto(printf(ra_296, 0x230C3AF4<32>, 0xFFFFFF<32>, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, s3, out s1_777, out a0_778, out a1_779, out a2_780, out a3_781, out a4_782, out a5_783, out a7_784, out s2_785, out s3_786, out s4_390, out s5_391, out s6_392, out s7_393, out s8_394, out s9_787, out s10_788, out s11_789, out t4_790), s6_392, s5_391, s7_393, s8_394, s4_390, mstatus, dwLoc7C, dwLoc68, dwLoc48, dwLoc18, dwLoc08, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg98, out s0_415, out s1_791, out a0_792, out a2_793, out a3_104, out a4_794, out s3_107, out s4_302, out s5_11, out s9_795, out mstatus)
	Mem433[1<32>:word32] = s0_415
	a5_111 = 1<32>
l230778DA:
	word32 s0_436 = Mem435[a5_111 + 8<i32>:word32]
	word32 a4_437 = a5_111 + 1<i32>
	branch s3_107 == a4_437 l23077A10
l23077A10:
	branch a5_111 < s3_107 l23077A0A
l23077A14:
l230778E4:
	branch a5_111 < s3_107 l230779FE
l230779FE:
	s0_436 = Mem435[a4_437 + 16<i32>:word32]
	Mem443[s3_107 - a5_111 + (a4_437 + 0xFFFFFFFF<32>) + 16<i32>:word32] = s0_436
	a4_437 = a4_437 + 0xFFFFFFFF<32>
l23077A0A:
	Mem446[s0_436 + 8<i32>:word32] = s3_107
l230778E8:
	Mem449[a5_111 + 0x15<32>:word32] = Mem435[a5_111 + 20<i32>:word32]
l230778EE:
	word32 a3_814
	word32 a4_815
	word32 a2_813
	word32 s3_819
	word32 a5_816
	word32 a7_817
	word32 s2_818
	word32 s6_822
	word32 s8_823
	word32 s4_820
	word32 s5_821
	word32 s0_809
	word32 a0_811
	word32 a1_812
	word32 s1_810
	word32 mstatus_824
	pbuf_free(ra_296, s5_11, a3_104, a4_437, s4_302, mstatus, dwArg98, out s0_809, out s1_810, out a0_811, out a1_812, out a2_813, out a3_814, out a4_815, out a5_816, out a7_817, out s2_818, out s3_819, out s4_820, out s5_821, out s6_822, out s8_823, out mstatus_824)
l230778F4:
	return
iperf_server_udp_recv_fn_exit:


void iperf_client_udp(word32 ra, word32 s0, word32 s1, word32 s2, word32 s4, word32 s5, word32 s9, word32 s10, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s4:[0..31] s5:[0..63] s9:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa5 fflags frm fs0 fs1 fs2 fs3 fs4 fs5 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
iperf_client_udp_entry:
	word32 dwLoc98 = SLICE(qwLoc98, word32, 0)
	word32 dwLocD8 = SLICE(qwLocD8, word32, 0)
l23077A16:
	word32 a3_44
	word32 a4_45
	word32 a5_46
	word32 a0_1268
	word32 t1_1267
	word32 a1_1269
	word32 a2_1270
	word32 ra_47 = memset(ra, fp + -160<i32>, 0<32>, 64<i32>, out t1_1267, out a0_1268, out a1_1269, out a2_1270, out a3_44, out a4_45, out a5_46)
	word32 a0_52
	word32 a3_1273
	word32 a1_1272
	word32 s2_1276
	word32 a6_1275
	word32 s1_1271
	word32 a4_1274
	word32 s4_1277
	word32 s8_1278
	word32 s3_62
	word32 a5_57
	word32 a2_54
	pvPortMalloc(ra_47, s1, 1300<i32>, a3_44, a4_45, a5_46, mstatus, dwLocA0, dwLoc9C, SLICE(s5, word32, 32), dwArg58, dwArg98, out s1_1271, out a0_52, out a1_1272, out a2_54, out a3_1273, out a4_1274, out a5_57, out a6_1275, out s2_1276, out s3_62, out s4_1277, out s8_1278)
	word32 dwLoc58_1134 = s5
	branch a0_52 != 0<32> l23077A86
l23077A86:
	word32 a5_68 = 0<32>
l23077A8E:
	word32 a3_72 = a0_52 + a5_68
	Mem73[a3_72:byte] = SLICE(a5_68, byte, 0)
	a5_68 = a5_68 + 1<32>
	branch a5_68 != 1300<i32> l23077A8E
l23077A9C:
	word32 a2_584
	word32 a3_585
	word32 a4_586
	word32 a5_587
	word32 a3_84
	word32 s2_1290
	word32 s5_1291
	word32 a0_103 = lwip_socket(ra_47, 2<32>, 0x11<32>, a3_72, mstatus, dwLocAC, s10, s2, s1, dwLoc38, s9, s1, dwArg18, dwArg28, dwArg48, dwArg58, dwArg68, dwArg88, out a3_84, out s2_1290, out s5_1291)
	branch a0_103 >= 0<32> l23077AC2
l23077AC2:
	word32 t1_1292
	word32 a1_1294
	word32 a2_1295
	word32 a3_1296
	word32 a0_1293
	word32 a4_1297
	word32 a5_1298
	word32 ra_114 = memset(ra_47, fp + -192<i32>, 0<32>, 0x10<32>, out t1_1292, out a0_1293, out a1_1294, out a2_1295, out a3_1296, out a4_1297, out a5_1298)
	word32 a5_1299
	lwip_htons(0x100038A<32>, out a5_1299)
	word32 s4_1302
	word32 s8_1303
	word32 a3_1301
	word32 a0_1300
	ipaddr_addr(0x230B2104<32>, out a0_1300, out a3_1301, out s4_1302, out s8_1303)
	word32 a0_148
	word32 a3_151
	lwip_bind(a0_103, fp + -192<i32>, mstatus, dwLocAC, dwLoc98, s5, dwLoc18, out a0_148, out a3_151)
	branch a0_148 != 0xFFFFFFFF<32> l23077B12
l23077B12:
	word32 s2_186
	word32 s3_187
	word32 a4_1340
	word32 a5_1341
	word32 s8_1330
	word32 a1_1337
	word32 a2_1338
	word32 a3_1339
	word32 s9_1331
	word32 s11_1333
	word32 s10_1332
	word32 a0_1336
	word32 t4_1334
	word32 t1_1335
	word32 a1_1320
	word32 s5_1327
	word32 s6_1328
	word32 s7_1329
	word32 a2_1321
	word32 a4_1323
	word32 a3_1322
	word32 s4_1326
	word32 a5_1324
	word32 a7_1325
	word32 a0_1319
	word32 s1_183
	word32 ra_205 = memset(printf(ra_114, 0x230C3AB4<32>, a3_151, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, s1, dwLoc24, out s1_183, out a0_1319, out a1_1320, out a2_1321, out a3_1322, out a4_1323, out a5_1324, out a7_1325, out s2_186, out s3_187, out s4_1326, out s5_1327, out s6_1328, out s7_1329, out s8_1330, out s9_1331, out s10_1332, out s11_1333, out t4_1334), fp + -176<i32>, 0<32>, 0x10<32>, out t1_1335, out a0_1336, out a1_1337, out a2_1338, out a3_1339, out a4_1340, out a5_1341)
	word32 a5_1342
	lwip_htons(s2_186 + 905<i32>, out a5_1342)
	word32 a0_214
	word32 s8_1345
	word32 a3_1343
	word32 s4_1344
	word32 s0_222 = ipaddr_addr(s3_187, out a0_214, out a3_1343, out s4_1344, out s8_1345)
	word32 a5_1346
	word32 a0_233 = xTaskGetTickCount(out a5_1346)
	word32 fs3_236 = Mem232[0x230C4A7C<32>:real32]
	word32 fs5_238 = Mem232[0x230C49B4<32>:real32]
	word32 fs4_240 = 0<32>
	word32 fs2_241 = Mem232[0x230C49B8<32>:real32]
	word32 s11_243 = a0_233
	word32 s4_244 = 1<32>
	word32 s3_245 = 0<32>
	word32 s5_246 = 0<32>
	word32 s10_247 = 0<32>
	word32 s2_248 = s2_186 + 903<i32>
l23077B78:
	word32 a5_1383
	word32 a5_254 = xTaskGetTickCount(out a5_1383) - s11_243
	branch s2_248 >=u a5_254 l23077C36
l23077B86:
	word32 s10_264 = s10_247 + s3_245
	word32 fa0_284
	word32 s6_292
	word32 s7_293
	word32 s9_1382
	word32 s2_1379
	word32 s4_1380
	word32 s5_1381
	word32 a0_1375
	word32 a5_1378
	word32 a1_1376
	word32 a3_1377
	__floatundisf(ra_205, s10_264, s5_246 + (s10_247 >> 0x1F<u32>) + CONVERT(s10_264 <u s3_245, bool, word32), fflags, frm, out a0_1375, out a1_1376, out a3_1377, out a5_1378, out s2_1379, out s4_1380, out s5_1381, out s6_292, out s7_293, out s9_1382, out fa0_284, out fflags, out frm)
	word32 fs0_309 = CONVERT(s10_247, word32, real32) / fs5_238 / CONVERT(a5_254, word32, real32) * fs2_241 / fs2_241
	word32 fs1_313 = fa0_284 / fs5_238 / CONVERT(s7_293 - s6_292, word32, real32) * fs2_241 / fs2_241
	branch CONVERT(fs0_309 < fs3_236, bool, word32) == 0<32> l23077BD8
l23077BD4:
	fs3_236 = fs0_309
l23077BD8:
	branch CONVERT(fs4_240 < fs0_309, bool, word32) == 0<32> l23077BE2
l23077BDE:
	fs4_240 = fs0_309
l23077BE2:
	word32 a1_1415
	__extendsfdf2(ra_205, fs3_236, fflags, frm, out a1_1415)
	word32 a1_345
	word32 a0_344 = __extendsfdf2(ra_205, fs0_309, fflags, frm, out a1_345)
	word32 a1_353
	__extendsfdf2(ra_205, fs4_240, fflags, frm, out a1_353)
	word32 a1_362
	__extendsfdf2(ra_205, fs1_313, fflags, frm, out a1_362)
	dwLoc58_1134 = a1_345
	word32 a3_377
	word32 s9_393
	word32 s9_1445
	word32 t4_1446
	word32 s8_1444
	word32 s7_1443
	word32 s5_1441
	word32 s6_1442
	word32 a7_1438
	word32 s2_1439
	word32 s3_1440
	word32 a3_1435
	word32 a4_1436
	word32 a5_1437
	word32 a2_1434
	word32 s7_1428
	word32 s10_1430
	word32 s8_1429
	word32 a1_1433
	word32 s11_1431
	word32 a0_1432
	word32 s4_1425
	word32 s5_1426
	word32 s6_1427
	word32 s2_1423
	word32 s3_1424
	word32 a7_1422
	word32 a4_1420
	word32 a5_1421
	word32 a1_1418
	word32 a2_1419
	word32 s1_1416
	word32 a0_1417
	ra_205 = printf(snprintf(ra_205, fp + -160<i32>, 64<i32>, a0_344 + -1580<i32>, dwLocC8, dwLocA8, s4, a1_362, a1_353, dwLoc38, dwLoc14, out s0_222, out s1_1416, out a0_1417, out a1_1418, out a2_1419, out a3_377, out a4_1420, out a5_1421, out a7_1422, out s2_1423, out s3_1424, out s4_1425, out s5_1426, out s6_1427, out s7_1428, out s8_1429, out s9_393, out s10_1430, out s11_1431), s9_393 + -1672<i32>, a3_377, a0_344, dwLocB8, dwLoc70, dwLoc6C, a0_214, dwLoc24, out s1_183, out a0_1432, out a1_1433, out a2_1434, out a3_1435, out a4_1436, out a5_1437, out a7_1438, out s2_1439, out s3_1440, out s4_244, out s5_1441, out s6_1442, out s7_1443, out s8_1444, out s9_1445, out s10_247, out s11_243, out t4_1446)
l23077C36:
	word32 a3_1372
	word32 a4_1373
	word32 a5_1374
	Mem430[lwip_htonl(s4_244, out a3_1372, out a4_1373, out a5_1374):word32] = s0_222
	Mem431[s0_222 + 4<i32>:word32] = 0<32>
	Mem432[s0_222 + 8<i32>:word32] = 0<32>
l23077C46:
	word32 a0_445
	word32 a2_447
	word32 s4_459
	word32 s8_1384
	ra_205 = lwip_sendto(ra_205, s0_222, s1_183, mstatus, dwLocB8, dwLocA8, dwLoc98, s2, dwLoc6C, dwLoc68, dwLoc58_1134, dwLoc38, dwLoc28, dwLoc18, s1, out s0_222, out s1_183, out a0_445, out a2_447, out s2_248, out s3_245, out s4_459, out s5_246, out s8_1384, out mstatus)
	branch a0_445 <= 0<32> l23077C62
l23077C62:
	branch a0_445 == 0<32> l23077C5E
l23077C64:
	branch a0_445 == 0xFFFFFFFF<32> l23077C46
l23077C6A:
	word32 a2_475
	word32 a3_476
	word32 a4_477
	word32 a5_478
	word32 s3_1385
	lwip_close(ra_205, s1_183, a2_447, mstatus, dwLoc98, dwLoc68, dwLoc58_1134, dwLoc28, dwLoc18, s9, dwArg28, dwArg48, dwArg68, out a2_475, out a3_476, out a4_477, out a5_478, out s3_1385)
	word32 a3_500
	word32 s2_1392
	word32 s3_1393
	word32 s4_1394
	word32 a2_1389
	word32 a4_1390
	word32 a5_1391
	word32 a1_1388
	word32 s1_1386
	word32 a0_1387
	vTaskDelay(2000<i32>, a2_475, a3_476, a4_477, a5_478, mstatus, dwLocBC, dwLocB8, dwArg58, dwArg98, out s1_1386, out a0_1387, out a1_1388, out a2_1389, out a3_500, out a4_1390, out a5_1391, out s2_1392, out s3_1393, out s4_1394)
	word32 a5_516
	word32 a2_519
	word32 a3_520
	word32 a4_521
	word32 s5_1402
	word32 t4_1409
	word32 s6_1403
	word32 s8_1405
	word32 s7_1404
	word32 s11_1408
	word32 s9_1406
	word32 s10_1407
	word32 s2_1399
	word32 s3_1400
	word32 s4_1401
	word32 s1_1395
	word32 a7_1398
	word32 a0_1396
	word32 a1_1397
	printf(ra_205, 0x230C39F4<32>, a3_500, a0_445, dwLocB8, dwLoc70, dwLoc6C, a0_214, dwLoc24, out s1_1395, out a0_1396, out a1_1397, out a2_519, out a3_520, out a4_521, out a5_516, out a7_1398, out s2_1399, out s3_1400, out s4_1401, out s5_1402, out s6_1403, out s7_1404, out s8_1405, out s9_1406, out s10_1407, out s11_1408, out t4_1409)
	word32 s2_1414
	word32 a4_1412
	word32 a5_1413
	word32 a0_1410
	word32 a3_1411
	vTaskDelete(0<32>, a2_519, a3_520, a4_521, a5_516, mstatus, dwArg48, dwArg58, dwArg88, dwArg98, out a0_1410, out a3_1411, out a4_1412, out a5_1413, out s2_1414)
l23077C5C:
	s10_247 = s10_247 + a0_445
l23077C5E:
	s4_244 = s4_459 + 1<32>
l23077AFE:
	word32 a2_563
	word32 s1_568
	word32 s11_1362
	word32 t4_1363
	word32 s3_1364
	word32 s9_1360
	word32 s10_1361
	word32 s6_1357
	word32 s8_1359
	word32 s7_1358
	word32 a0_1347
	word32 s3_1354
	word32 s4_1355
	word32 s5_1356
	word32 a1_1348
	word32 a4_1350
	word32 a3_1349
	word32 s2_1353
	word32 a5_1351
	word32 a7_1352
	lwip_close(printf(ra_114, 0x230C3AA4<32>, a3_151, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, s1, dwLoc24, out s1_568, out a0_1347, out a1_1348, out a2_563, out a3_1349, out a4_1350, out a5_1351, out a7_1352, out s2_1353, out s3_1354, out s4_1355, out s5_1356, out s6_1357, out s7_1358, out s8_1359, out s9_1360, out s10_1361, out s11_1362, out t4_1363), s1_568, a2_563, mstatus, dwLoc98, dwLoc68, s5, dwLoc28, dwLoc18, s9, dwArg28, dwArg48, dwArg68, out a2_584, out a3_585, out a4_586, out a5_587, out s3_1364)
l23077AAC:
	word32 s1_1304
	word32 s4_1310
	word32 s11_1317
	word32 t4_1318
	word32 s5_1311
	word32 s7_1313
	word32 s6_1312
	word32 s10_1316
	word32 s8_1314
	word32 s9_1315
	word32 s3_1309
	word32 s2_1308
	word32 a0_1305
	word32 a1_1306
	word32 a7_1307
	printf(ra_47, 0x230C39BC<32>, a3_84, dwLocD8, dwLocB8, dwLoc70, dwLoc6C, s1, dwLoc24, out s1_1304, out a0_1305, out a1_1306, out a2_584, out a3_585, out a4_586, out a5_587, out a7_1307, out s2_1308, out s3_1309, out s4_1310, out s5_1311, out s6_1312, out s7_1313, out s8_1314, out s9_1315, out s10_1316, out s11_1317, out t4_1318)
l23077AB8:
	word32 a4_1369
	word32 s2_1370
	word32 s4_1371
	word32 s1_1365
	word32 a3_1368
	word32 a0_1366
	word32 a1_1367
	vTaskDelay(1000<i32>, a2_584, a3_585, a4_586, a5_587, mstatus, dwLocBC, dwLocB8, dwArg58, dwArg98, out s1_1365, out a0_1366, out a1_1367, out a2_54, out a3_1368, out a4_1369, out a5_57, out s2_1370, out s3_62, out s4_1371)
l23077A56:
	word32 a3_1284
	word32 a5_1286
	word32 a0_1281
	word32 s1_1280
	word32 a1_1282
	word32 s0_1279
	word32 a2_1283
	word32 a4_1285
	word32 t3_1289
	word32 s4_1288
	word32 a6_1287
	vPortFree(s3_62, a2_54, a5_57, mstatus, dwArg78, s0, out s0_1279, out s1_1280, out a0_1281, out a1_1282, out a2_1283, out a3_1284, out a4_1285, out a5_1286, out a6_1287, out s4_1288, out t3_1289)
l23077A5C:
	return
iperf_client_udp_exit:


void iperf_server(word32 ra, word32 s0, word32 a0, word32 s3, word32 s4, word32 s5, word32 s6, word32 s11, word32 fflags, word32 frm, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..63] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s11:[0..31] s3:[32..63] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
iperf_server_entry:
	uint16 wLoc8E_940 = SLICE(dwLoc90, uint16, 16)
l23077C90:
	word32 a2_607
	word32 a5_610
	word32 s1_611
	word32 a3_45
	word32 a4_46
	word32 a5_47
	word32 a2_1035
	word32 t1_1032
	word32 a0_1033
	word32 a1_1034
	word32 ra_48 = memset(ra, fp + -128<i32>, 0<32>, 32<i32>, out t1_1032, out a0_1033, out a1_1034, out a2_1035, out a3_45, out a4_46, out a5_47)
	word32 a0_53
	word32 a3_56
	word32 a1_1037
	word32 a5_1040
	word32 s4_1044
	word32 a2_1038
	word32 a4_1039
	word32 s8_1045
	word32 a6_1041
	word32 s2_1042
	word32 s3_1043
	word32 s1_1036
	pvPortMalloc(ra_48, a0, 0x1000450<32>, a3_45, a4_46, a5_47, mstatus, dwLoc90, dwLoc8C, SLICE(a0, word32, 32), dwArg68, s4, out s1_1036, out a0_53, out a1_1037, out a2_1038, out a3_56, out a4_1039, out a5_1040, out a6_1041, out s2_1042, out s3_1043, out s4_1044, out s8_1045)
	word32 dwLoc48_744 = a0
	word32 dwLoc4C_765 = SLICE(s3, word32, 32)
	branch a0_53 != 0<32> l23077D10
l23077D10:
	word32 a2_555
	word32 a5_558
	word32 s3_564
	word32 a3_74
	word32 s2_80
	word32 s5_1046
	word32 a0_93 = lwip_socket(ra_48, 1<32>, 0<32>, a3_56, mstatus, dwLoc9C, s6, dwLoc68, dwLoc38, dwLoc28, s5, dwArg18, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, out a3_74, out s2_80, out s5_1046)
	branch a0_93 >= 0<32> l23077D36
l23077D36:
	word32 a0_520
	word32 a5_1074
	lwip_htons(s2_80 + 905<i32>, out a5_1074)
	word32 a0_1076
	word32 a5_1081
	word32 a1_1077
	word32 a2_1078
	word32 a3_1079
	word32 a4_1080
	word32 t1_1075
	word32 ra_111 = memset(ra_48, fp + -152<i32>, 0<32>, 8<32>, out t1_1075, out a0_1076, out a1_1077, out a2_1078, out a3_1079, out a4_1080, out a5_1081)
	word32 a0_117
	word32 a3_120
	word32 s0_125 = lwip_bind(a0_93, fp + -160<i32>, mstatus, dwLoc9C, dwLoc88, a0, dwLoc08, out a0_117, out a3_120)
	branch a0_117 != 0xFFFFFFFF<32> l23077D78
l23077D78:
	word32 a0_143
	word32 s2_153
	s0_125 = lwip_listen(s0_125, 5<32>, mstatus, dwLoc8C, s6, 0<32>, s5, out a0_143, out a3_120, out s2_153)
	branch a0_143 != s2_153 l23077D8E
l23077D8E:
	word32 fs3_167 = Mem104[0x230C4A7C<32>:real32]
	word32 fs5_169 = Mem104[0x230C49B4<32>:real32]
	word32 fs4_171 = 0<32>
	word32 fs2_172 = Mem104[0x230C49B8<32>:real32]
l23077DAE:
	word32 ra_194 = lwip_accept(ra_111, s0_125, a3_120, mstatus, dwLocCC, 0x10<32>, dwLocA8, dwLoc68, dwLoc48_744, dwLoc2C, dwLoc28, dwLoc08, dwArg18, dwArg28, dwArg68, out mstatus)
	word32 a3_215
	word32 a2_1135
	word32 a4_1136
	word32 a5_1137
	word32 a0_212 = ip4addr_ntoa(out a2_1135, out a3_215, out a4_1136, out a5_1137)
	word32 a5_1138
	lwip_htons(CONVERT(wLoc8E_940, uint16, word32), out a5_1138)
	word32 s1_246
	word32 t4_1156
	word32 s11_1155
	word32 s10_1154
	word32 s9_1153
	word32 s8_1152
	word32 s6_1150
	word32 s7_1151
	word32 s4_1148
	word32 s5_1149
	word32 s3_1147
	word32 s2_1146
	word32 a3_1142
	word32 a4_1143
	word32 a5_1144
	word32 a7_1145
	word32 a0_1139
	word32 a1_1140
	word32 a2_1141
	ra_111 = printf(ra_194, 0x230C3A50<32>, a3_215, a0_212, dwLocA8, dwLoc60, dwLoc5C, 0<32>, dwLoc14, out s1_246, out a0_1139, out a1_1140, out a2_1141, out a3_1142, out a4_1143, out a5_1144, out a7_1145, out s2_1146, out s3_1147, out s4_1148, out s5_1149, out s6_1150, out s7_1151, out s8_1152, out s9_1153, out s10_1154, out s11_1155, out t4_1156)
	word32 s4_1158
	word32 s2_1157
	word32 s6_280
	word32 s1_275
	word32 s8_281
	lwip_setsockopt(s1_246, 6<32>, 1<32>, fp + -164<i32>, mstatus, dwLocCC, dwLoc4C_765, 0<32>, dwLoc18, s5, dwArg28, dwArg48, out s1_275, out s2_1157, out s4_1158, out s6_280, out s8_281)
	word32 a5_1159
	word32 s10_292 = xTaskGetTickCount(out a5_1159)
l23077DFE:
	word32 s11_295 = s6_280 + 1104<i32>
l23077E04:
	word32 a0_303
	word32 a2_305
	word32 s2_312
	word32 s4_314
	word32 s9_316
	s0_125 = lwip_recv(s1_275, s11_295, out s1_275, out a0_303, out a2_305, out a3_120, out s2_312, out s4_314, out s9_316)
	branch a0_303 <= 0<32> l23077EDC
l23077EDC:
	branch s1_275 < 0<32> l23077DAE
l23077EE0:
	word32 s3_1163
	word32 a5_1162
	word32 a4_1161
	word32 a2_1160
	s0_125 = lwip_close(ra_111, s1_275, a2_305, mstatus, dwLoc88, s5, dwLoc48_744, dwLoc18, dwLoc08, s5, dwArg38, dwArg58, dwArg78, out a2_1160, out a3_120, out a4_1161, out a5_1162, out s3_1163)
l23077E14:
	word32 s9_346 = s9_316 + a0_303
	word32 a5_1126
	word32 a5_350 = xTaskGetTickCount(out a5_1126) - s10_292
	branch s8_281 >=u a5_350 l23077E04
l23077E24:
	word32 s9_359 = s9_346 + s2_312
	word32 fa0_379
	word32 s5_386
	word32 s7_388
	word32 s9_1134
	word32 s2_1131
	word32 s4_1132
	word32 s6_1133
	word32 a0_1127
	word32 a1_1128
	word32 a3_1129
	word32 a5_1130
	__floatundisf(ra_111, s9_359, s4_314 + (s9_346 >> 0x1F<u32>) + CONVERT(s9_359 <u s2_312, bool, word32), fflags, frm, out a0_1127, out a1_1128, out a3_1129, out a5_1130, out s2_1131, out s4_1132, out s5_386, out s6_1133, out s7_388, out s9_1134, out fa0_379, out fflags, out frm)
	word32 fs0_405 = CONVERT(s9_346, word32, real32) / fs5_169 / CONVERT(a5_350, word32, real32) * fs2_172 / fs2_172
	word32 fs1_410 = fa0_379 / fs5_169 / CONVERT(s7_388 - s5_386, word32, real32) * fs2_172 / fs2_172
	branch CONVERT(fs0_405 < fs3_167, bool, word32) == 0<32> l23077E76
l23077E72:
	fs3_167 = fs0_405
l23077E76:
	branch CONVERT(fs4_171 < fs0_405, bool, word32) == 0<32> l23077E80
l23077E7C:
	fs4_171 = fs0_405
l23077E80:
	word32 a1_1164
	__extendsfdf2(ra_111, fs3_167, fflags, frm, out a1_1164)
	word32 a1_441
	word32 a0_440 = __extendsfdf2(ra_111, fs0_405, fflags, frm, out a1_441)
	word32 a1_449
	dwLocCC = __extendsfdf2(ra_111, fs4_171, fflags, frm, out a1_449)
	word32 a1_458
	__extendsfdf2(ra_111, fs1_410, fflags, frm, out a1_458)
	dwLoc48_744 = a1_441
	dwLoc4C_765 = a1_449
	word32 a3_474
	word32 t4_1197
	word32 s7_1194
	word32 s9_1195
	word32 s11_1196
	word32 s3_1191
	word32 s4_1192
	word32 s5_1193
	word32 a5_1188
	word32 a7_1189
	word32 s2_1190
	word32 a2_1185
	word32 a3_1186
	word32 a4_1187
	word32 s11_1182
	word32 a0_1183
	word32 a1_1184
	word32 s8_1179
	word32 s9_1180
	word32 s10_1181
	word32 s5_1176
	word32 s6_1177
	word32 s7_1178
	word32 s2_1173
	word32 s3_1174
	word32 s4_1175
	word32 a4_1170
	word32 a5_1171
	word32 a7_1172
	word32 a0_1167
	word32 a1_1168
	word32 a2_1169
	word32 s1_1166
	word32 s0_1165
	ra_111 = printf(snprintf(ra_111, fp + -128<i32>, 32<i32>, 0x230C39D4<32>, dwLocB8, dwLoc98, s0, a1_458, a1_449, dwLoc28, s11, out s0_1165, out s1_1166, out a0_1167, out a1_1168, out a2_1169, out a3_474, out a4_1170, out a5_1171, out a7_1172, out s2_1173, out s3_1174, out s4_1175, out s5_1176, out s6_1177, out s7_1178, out s8_1179, out s9_1180, out s10_1181, out s11_1182), 0x230C6978<32>, a3_474, a0_440, dwLocA8, dwLoc60, dwLoc5C, 0<32>, dwLoc14, out s1_275, out a0_1183, out a1_1184, out a2_1185, out a3_1186, out a4_1187, out a5_1188, out a7_1189, out s2_1190, out s3_1191, out s4_1192, out s5_1193, out s6_280, out s7_1194, out s8_281, out s9_1195, out s10_292, out s11_1196, out t4_1197)
l23077D84:
	a0_520 = 0x230C3A40<32>
l23077D64:
	a0_520 = 0x230C3A2C<32>
l23077D6C:
	word32 a2_532
	word32 s11_1122
	word32 t4_1123
	word32 a3_1124
	word32 a4_1125
	word32 s7_1118
	word32 s8_1119
	word32 s9_1120
	word32 s10_1121
	word32 s3_1114
	word32 s4_1115
	word32 s5_1116
	word32 s6_1117
	word32 a4_1110
	word32 a5_1111
	word32 a7_1112
	word32 s2_1113
	word32 s1_1106
	word32 a0_1107
	word32 a1_1108
	word32 a3_1109
	lwip_close(printf(ra_111, a0_520, a3_120, dwLocC8, dwLocA8, dwLoc60, dwLoc5C, 0<32>, dwLoc14, out s1_1106, out a0_1107, out a1_1108, out a2_532, out a3_1109, out a4_1110, out a5_1111, out a7_1112, out s2_1113, out s3_1114, out s4_1115, out s5_1116, out s6_1117, out s7_1118, out s8_1119, out s9_1120, out s10_1121, out s11_1122, out t4_1123), s0_125, a2_532, mstatus, dwLoc88, s5, a0, dwLoc18, dwLoc08, s5, dwArg38, dwArg58, dwArg78, out a2_555, out a3_1124, out a4_1125, out a5_558, out s3_564)
l23077D22:
	word32 a4_1086
	word32 s7_1092
	word32 t4_1097
	word32 s8_1093
	word32 s9_1094
	word32 s10_1095
	word32 s11_1096
	word32 s6_1091
	word32 a7_1087
	word32 s2_1088
	word32 s4_1089
	word32 s5_1090
	word32 s1_1082
	word32 a0_1083
	word32 a1_1084
	word32 a3_1085
	printf(ra_48, 0x230C3A1C<32>, a3_74, dwLocC8, dwLocA8, dwLoc60, dwLoc5C, dwLoc38, dwLoc14, out s1_1082, out a0_1083, out a1_1084, out a2_555, out a3_1085, out a4_1086, out a5_558, out a7_1087, out s2_1088, out s3_564, out s4_1089, out s5_1090, out s6_1091, out s7_1092, out s8_1093, out s9_1094, out s10_1095, out s11_1096, out t4_1097)
l23077D2E:
	word32 a4_1102
	word32 a6_1103
	word32 s4_1104
	word32 t3_1105
	word32 s0_1098
	word32 a0_1099
	word32 a1_1100
	word32 a3_1101
	vPortFree(s3_564, a2_555, a5_558, mstatus, dwArg88, dwArgC8, out s0_1098, out s1_611, out a0_1099, out a1_1100, out a2_607, out a3_1101, out a4_1102, out a5_610, out a6_1103, out s4_1104, out t3_1105)
l23077CD2:
	word32 s6_1056
	word32 a7_1051
	word32 s10_1060
	word32 s9_1059
	word32 s4_1054
	word32 a3_1049
	word32 s11_1061
	word32 t4_1062
	word32 s5_1055
	word32 s7_1057
	word32 s8_1058
	word32 a4_1050
	word32 s2_1052
	word32 s3_1053
	word32 a0_1047
	word32 a1_1048
	printf(ra_48, 0x230C3A10<32>, a3_56, dwLocC8, dwLocA8, dwLoc60, dwLoc5C, dwLoc38, dwLoc14, out s1_611, out a0_1047, out a1_1048, out a2_607, out a3_1049, out a4_1050, out a5_610, out a7_1051, out s2_1052, out s3_1053, out s4_1054, out s5_1055, out s6_1056, out s7_1057, out s8_1058, out s9_1059, out s10_1060, out s11_1061, out t4_1062)
l23077CDE:
	branch s1_611 == 0<32> l23077CE6
l23077CE0:
	word32 a6_1071
	word32 a0_1065
	word32 s4_1072
	word32 t3_1073
	word32 a5_1070
	word32 a1_1066
	word32 a2_1067
	word32 a3_1068
	word32 a4_1069
	word32 s0_1063
	word32 s1_1064
	vPortFree(s1_611, a2_607, a5_610, mstatus, dwArg88, dwArgC8, out s0_1063, out s1_1064, out a0_1065, out a1_1066, out a2_1067, out a3_1068, out a4_1069, out a5_1070, out a6_1071, out s4_1072, out t3_1073)
l23077CE6:
	return
iperf_server_exit:


void iperf_client_tcp(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s4, word32 s7, word32 s9, word32 s10, word32 fflags, word32 frm, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s3:[0..63] s4:[0..31] s7:[0..31] s9:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s2 s3 s4 s5 s6 s8 s9 t0 t1 t3 t4 t5 tp
// Preserved: sp
iperf_client_tcp_entry:
l23077EE8:
	word32 a3_45
	word32 a4_46
	word32 a5_47
	word32 a1_973
	word32 t1_971
	word32 a2_974
	word32 a0_972
	word32 ra_48 = memset(ra, fp + -128<i32>, 0<32>, 32<i32>, out t1_971, out a0_972, out a1_973, out a2_974, out a3_45, out a4_46, out a5_47)
	word32 dwLoc4C_907 = SLICE(s3, word32, 32)
	word32 a0_53
	word32 a2_55
	word32 a5_58
	word32 s3_980
	word32 s8_982
	word32 s4_981
	word32 s2_979
	word32 a6_978
	word32 s1_975
	word32 a4_977
	word32 a1_976
	word32 a3_493
	word32 s0_60 = pvPortMalloc(ra_48, s1, 0x1000450<32>, a3_45, a4_46, a5_47, mstatus, dwLoc80, dwLoc7C, dwLoc34, dwArg78, s0, out s1_975, out a0_53, out a1_976, out a2_55, out a3_493, out a4_977, out a5_58, out a6_978, out s2_979, out s3_980, out s4_981, out s8_982)
	branch a0_53 != 0<32> l23077F5A
l23077F5A:
	word32 a5_69 = 0<32>
l23077F62:
	Mem74[a0_53 + a5_69:byte] = SLICE(a5_69, byte, 0)
	a5_69 = a5_69 + 1<32>
	branch a5_69 != s0_60 + 1104<i32> l23077F62
l23077F70:
	word32 fs3_293 = Mem74[0x230C4A7C<32>:real32]
	word32 fs5_80 = Mem74[0x230C49B4<32>:real32]
	word32 fs4_298 = 0<32>
	word32 fs2_83 = Mem74[0x230C49B8<32>:real32]
l23077F90:
	word32 a2_539
	word32 a3_540
	word32 a4_541
	word32 a5_542
	word32 a3_96
	word32 s5_105
	word32 s2_1013
	branch lwip_socket(ra_48, 1<32>, 6<32>, a3_493, mstatus, dwLoc8C, s2, a0, dwLoc28, dwLoc18, s1, dwArg28, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, s4, out a3_96, out s2_1013, out s5_105) >= 0<32> l23077FB6
l23077FB6:
	word32 a5_994
	lwip_htons(0x1000389<32>, out a5_994)
	dwLoc28 = a0_125
	word32 a0_125
	word32 a0_147
	word32 a3_150
	word32 s4_996
	word32 s8_997
	word32 a3_995
	word32 s0_155 = lwip_connect(ipaddr_addr(s5_105, out a0_125, out a3_995, out s4_996, out s8_997), fp + -144<i32>, mstatus, dwLoc8C, s10, dwLoc38, s9, out a0_147, out a3_150)
	branch a0_147 != 0xFFFFFFFF<32> l23077FF6
l23077FF6:
	word32 s2_1022
	word32 s8_1028
	word32 s3_1023
	word32 a7_1021
	word32 a1_1016
	word32 s9_1029
	word32 t4_1032
	word32 s11_1031
	word32 s10_1030
	word32 s4_1024
	word32 s7_1027
	word32 s6_1026
	word32 s5_1025
	word32 a2_1017
	word32 a5_1020
	word32 a4_1019
	word32 a3_1018
	word32 a0_1015
	word32 s1_1014
	word32 ra_181 = printf(ra_48, 0x230C3978<32>, a3_150, dwLocB8, dwLoc98, s3, dwLoc4C_907, a0_125, dwLoc04, out s1_1014, out a0_1015, out a1_1016, out a2_1017, out a3_1018, out a4_1019, out a5_1020, out a7_1021, out s2_1022, out s3_1023, out s4_1024, out s5_1025, out s6_1026, out s7_1027, out s8_1028, out s9_1029, out s10_1030, out s11_1031, out t4_1032)
	word32 s1_211
	word32 s6_1033
	word32 s8_1034
	word32 s2_212
	word32 s4_214
	word32 s0_210 = lwip_setsockopt(s0_155, 6<32>, 1<32>, fp + -148<i32>, mstatus, dwLocBC, dwLoc3C, a0_125, dwLoc08, s1, dwArg38, dwArg58, out s1_211, out s2_212, out s4_214, out s6_1033, out s8_1034)
	word32 s8_227 = s1_211 + 903<i32>
	word32 a5_1035
	word32 s11_229 = xTaskGetTickCount(out a5_1035)
	word32 s10_230 = 0<32>
l2307802A:
	word32 a5_1074
	word32 a5_236 = xTaskGetTickCount(out a5_1074) - s11_229
	branch s8_227 >=u a5_236 l230780EC
l23078038:
	word32 s10_246 = s10_230 + s2_212
	word32 fa0_266
	word32 s6_274
	word32 s7_275
	word32 a3_1068
	word32 s9_1073
	word32 a5_1069
	word32 s2_1070
	word32 s4_1071
	word32 s5_1072
	word32 a1_1067
	word32 a0_1066
	__floatundisf(ra_181, s10_246, s4_214 + (s10_230 >> 0x1F<u32>) + CONVERT(s10_246 <u s2_212, bool, word32), fflags, frm, out a0_1066, out a1_1067, out a3_1068, out a5_1069, out s2_1070, out s4_1071, out s5_1072, out s6_274, out s7_275, out s9_1073, out fa0_266, out fflags, out frm)
	word32 fs0_291 = CONVERT(s10_230, word32, real32) / fs5_80 / CONVERT(a5_236, word32, real32) * fs2_83 / fs2_83
	word32 fs1_295 = fa0_266 / fs5_80 / CONVERT(s7_275 - s6_274, word32, real32) * fs2_83 / fs2_83
	branch CONVERT(fs0_291 < fs3_293, bool, word32) == 0<32> l2307808A
l23078086:
	fs3_293 = fs0_291
l2307808A:
	branch CONVERT(fs4_298 < fs0_291, bool, word32) == 0<32> l23078094
l23078090:
	fs4_298 = fs0_291
l23078094:
	word32 a1_1075
	__extendsfdf2(ra_181, fs3_293, fflags, frm, out a1_1075)
	word32 a1_327
	word32 a0_326 = __extendsfdf2(ra_181, fs0_291, fflags, frm, out a1_327)
	word32 a1_335
	dwLocBC = __extendsfdf2(ra_181, fs4_298, fflags, frm, out a1_335)
	word32 a1_344
	__extendsfdf2(ra_181, fs1_295, fflags, frm, out a1_344)
	word32 t4_1108
	word32 a1_1078
	word32 a3_360
	word32 s9_376
	word32 s5_1086
	word32 s3_1101
	word32 s9_1107
	word32 s8_1106
	word32 s4_1102
	word32 s5_1103
	word32 s6_1104
	word32 s7_1105
	word32 s2_1100
	word32 a7_1099
	word32 a5_1098
	word32 a4_1097
	word32 a3_1096
	word32 a2_1095
	word32 a1_1094
	word32 a0_1093
	word32 s1_1092
	word32 s11_1091
	word32 s6_1087
	word32 s7_1088
	word32 s8_1089
	word32 s10_1090
	word32 s4_1085
	word32 s3_1084
	word32 s2_1083
	word32 a2_1079
	word32 a4_1080
	word32 a5_1081
	word32 a7_1082
	word32 a0_1077
	word32 s1_1076
	printf(snprintf(ra_181, fp + -128<i32>, 32<i32>, 0x230C39D4<32>, dwLocA8, dwLoc88, dwLoc5C, a1_344, a1_335, dwLoc18, s7, out s0_210, out s1_1076, out a0_1077, out a1_1078, out a2_1079, out a3_360, out a4_1080, out a5_1081, out a7_1082, out s2_1083, out s3_1084, out s4_1085, out s5_1086, out s6_1087, out s7_1088, out s8_1089, out s9_376, out s10_1090, out s11_1091), s9_376 + -1672<i32>, a3_360, a0_326, dwLoc98, s3, dwLoc4C_907, a0_125, dwLoc04, out s1_1092, out a0_1093, out a1_1094, out a2_1095, out a3_1096, out a4_1097, out a5_1098, out a7_1099, out s2_1100, out s3_1101, out s4_1102, out s5_1103, out s6_1104, out s7_1105, out s8_1106, out s9_1107, out s10_230, out s11_229, out t4_1108)
	dwLocB8 = a0_326
	dwLoc38 = a1_327
	dwLoc3C = a1_335
l230780EC:
	word32 a0_421
	word32 a2_423
	word32 s5_1065
	word32 s3_1064
	ra_181 = lwip_send(s0_210, 0<32>, mstatus, dwLoc98, a0, dwLoc18, out s0_210, out a0_421, out a2_423, out s2_212, out s3_1064, out s4_214, out s5_1065, out s8_227, out mstatus)
	branch a0_421 <= 0<32> l23078100
l23078100:
	branch a0_421 == 0<32> l2307802A
l23078102:
	word32 a2_449
	word32 a3_450
	word32 a4_451
	word32 a5_452
	word32 s3_1109
	lwip_close(ra_181, s0_210, a2_423, mstatus, s10, s1, dwLoc38, dwLoc08, s9, s1, dwArg48, dwArg68, dwArg88, out a2_449, out a3_450, out a4_451, out a5_452, out s3_1109)
	word32 a3_474
	word32 s4_1118
	word32 s3_1117
	word32 s2_1116
	word32 a5_1115
	word32 a4_1114
	word32 a2_1113
	word32 s1_1110
	word32 a0_1111
	word32 a1_1112
	vTaskDelay(2000<i32>, a2_449, a3_450, a4_451, a5_452, mstatus, dwLoc9C, dwLoc98, dwArg78, s0, out s1_1110, out a0_1111, out a1_1112, out a2_1113, out a3_474, out a4_1114, out a5_1115, out s2_1116, out s3_1117, out s4_1118)
	word32 s10_1134
	word32 s11_1135
	word32 t4_1136
	word32 s7_1131
	word32 s8_1132
	word32 s9_1133
	word32 s4_1128
	word32 s5_1129
	word32 s6_1130
	word32 a7_1125
	word32 s2_1126
	word32 s3_1127
	word32 a5_1124
	word32 a4_1123
	word32 a2_1122
	word32 a1_1121
	word32 a0_1120
	word32 s1_1119
	ra_48 = printf(ra_181, 0x230C39A0<32>, a3_474, dwLocB8, dwLoc98, s3, dwLoc4C_907, a0_125, dwLoc04, out s1_1119, out a0_1120, out a1_1121, out a2_1122, out a3_493, out a4_1123, out a5_1124, out a7_1125, out s2_1126, out s3_1127, out s4_1128, out s5_1129, out s6_1130, out s7_1131, out s8_1132, out s9_1133, out s10_1134, out s11_1135, out t4_1136)
l230780FC:
	s10_230 = s10_230 + a0_421
l23077FE2:
	word32 a3_1039
	word32 a2_518
	word32 s3_1044
	word32 a1_1038
	word32 t4_1053
	word32 s11_1052
	word32 s10_1051
	word32 s9_1050
	word32 s8_1049
	word32 s4_1045
	word32 s5_1046
	word32 s6_1047
	word32 s7_1048
	word32 s2_1043
	word32 a7_1042
	word32 a5_1041
	word32 a4_1040
	word32 a0_1037
	word32 s1_1036
	ra_48 = printf(ra_48, 0x230C3964<32>, a3_150, dwLocB8, dwLoc98, s3, dwLoc4C_907, a0_125, dwLoc04, out s1_1036, out a0_1037, out a1_1038, out a2_518, out a3_1039, out a4_1040, out a5_1041, out a7_1042, out s2_1043, out s3_1044, out s4_1045, out s5_1046, out s6_1047, out s7_1048, out s8_1049, out s9_1050, out s10_1051, out s11_1052, out t4_1053)
	word32 s3_1054
	lwip_close(ra_48, s0_155, a2_518, mstatus, s10, s1, dwLoc38, dwLoc08, s9, s1, dwArg48, dwArg68, dwArg88, out a2_539, out a3_540, out a4_541, out a5_542, out s3_1054)
l23077FA0:
	word32 a1_1000
	word32 s5_1005
	word32 s3_1003
	word32 s1_998
	word32 s11_1011
	word32 s6_1006
	word32 s4_1004
	word32 s2_1002
	word32 a7_1001
	word32 a0_999
	word32 t4_1012
	word32 s7_1007
	word32 s10_1010
	word32 s9_1009
	word32 s8_1008
	ra_48 = printf(ra_48, 0x230C39BC<32>, a3_96, dwLocB8, dwLoc98, s3, dwLoc4C_907, dwLoc28, dwLoc04, out s1_998, out a0_999, out a1_1000, out a2_539, out a3_540, out a4_541, out a5_542, out a7_1001, out s2_1002, out s3_1003, out s4_1004, out s5_1005, out s6_1006, out s7_1007, out s8_1008, out s9_1009, out s10_1010, out s11_1011, out t4_1012)
l23077FAC:
	word32 s4_1063
	word32 s3_1062
	word32 s2_1061
	word32 a5_1060
	word32 a4_1059
	word32 a2_1058
	word32 a1_1057
	word32 a0_1056
	word32 s1_1055
	vTaskDelay(1000<i32>, a2_539, a3_540, a4_541, a5_542, mstatus, dwLoc9C, dwLoc98, dwArg78, s0, out s1_1055, out a0_1056, out a1_1057, out a2_1058, out a3_493, out a4_1059, out a5_1060, out s2_1061, out s3_1062, out s4_1063)
l23077F2A:
	word32 a5_990
	word32 a2_987
	word32 a0_985
	word32 s0_983
	word32 s4_992
	word32 t3_993
	word32 a6_991
	word32 a4_989
	word32 a3_988
	word32 a1_986
	word32 s1_984
	vPortFree(a0, a2_55, a5_58, mstatus, dwArg98, dwArgD8, out s0_983, out s1_984, out a0_985, out a1_986, out a2_987, out a3_988, out a4_989, out a5_990, out a6_991, out s4_992, out t3_993)
	return
iperf_client_tcp_exit:


void ipus_test_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgBC, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ipus_test_cmd_entry:
l2307811E:
	branch a2 != 1<32> l23078144
l23078144:
	branch a2 != 2<32> l2307814E
l2307814E:
l23078156_thunk_printf:
	word32 s1_188
	word32 a0_189
	word32 a1_190
	word32 a2_191
	word32 a3_192
	word32 a4_193
	word32 a5_194
	word32 a7_195
	word32 s2_196
	word32 s3_197
	word32 s4_198
	word32 s5_199
	word32 s6_200
	word32 s7_201
	word32 s8_202
	word32 s9_203
	word32 s10_204
	word32 s11_205
	word32 t4_206
	printf(ra, 0x230C3C68<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_188, out a0_189, out a1_190, out a2_191, out a3_192, out a4_193, out a5_194, out a7_195, out s2_196, out s3_197, out s4_198, out s5_199, out s6_200, out s7_201, out s8_202, out s9_203, out s10_204, out s11_205, out t4_206)
	return
l2307814A:
l23078124:
	word32 a0_170
	word32 a1_171
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	word32 a7_176
	word32 s2_177
	word32 s3_178
	word32 s4_179
	word32 s5_180
	word32 s6_181
	word32 s7_182
	word32 s8_183
	word32 s9_184
	word32 s10_185
	word32 s11_186
	word32 t4_187
	ra = printf(ra, 0x230C3C28<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_170, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175, out a7_176, out s2_177, out s3_178, out s4_179, out s5_180, out s6_181, out s7_182, out s8_183, out s9_184, out s10_185, out s11_186, out t4_187)
	a0 = 0x230B2104<32>
l23078140:
l23078140_thunk_iperf_server_udp_entry:
	iperf_server_udp_entry(ra, s1, a0, mstatus, dwArg04, dwArg20, dwArg24, dwArg44, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ipus_test_cmd_exit:


void ipu_test_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgBC, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ipu_test_cmd_entry:
l2307815A:
	branch a2 != 1<32> l23078180
l23078180:
	branch a2 != 2<32> l2307818A
l2307818A:
l23078192_thunk_printf:
	word32 s1_188
	word32 a0_189
	word32 a1_190
	word32 a2_191
	word32 a3_192
	word32 a4_193
	word32 a5_194
	word32 a7_195
	word32 s2_196
	word32 s3_197
	word32 s4_198
	word32 s5_199
	word32 s6_200
	word32 s7_201
	word32 s8_202
	word32 s9_203
	word32 s10_204
	word32 s11_205
	word32 t4_206
	printf(ra, 0x230C3C04<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_188, out a0_189, out a1_190, out a2_191, out a3_192, out a4_193, out a5_194, out a7_195, out s2_196, out s3_197, out s4_198, out s5_199, out s6_200, out s7_201, out s8_202, out s9_203, out s10_204, out s11_205, out t4_206)
	return
l23078186:
l23078160:
	word32 a0_170
	word32 a1_171
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	word32 a7_176
	word32 s2_177
	word32 s3_178
	word32 s4_179
	word32 s5_180
	word32 s6_181
	word32 s7_182
	word32 s8_183
	word32 s9_184
	word32 s10_185
	word32 s11_186
	word32 t4_187
	ra = printf(ra, 0x230C3BB0<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_170, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175, out a7_176, out s2_177, out s3_178, out s4_179, out s5_180, out s6_181, out s7_182, out s8_183, out s9_184, out s10_185, out s11_186, out t4_187)
	a0 = 0x230C3BF4<32>
l2307817C:
l2307817C_thunk_iperf_client_udp_entry:
	iperf_client_udp_entry(ra, s1, a0, mstatus, dwArg04, dwArg20, dwArg24, dwArg44, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ipu_test_cmd_exit:


void ipc_test_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgBC, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ipc_test_cmd_entry:
l23078196:
	branch a2 != 1<32> l230781BC
l230781BC:
	branch a2 != 2<32> l230781C6
l230781C6:
l230781CE_thunk_printf:
	word32 s1_188
	word32 a0_189
	word32 a1_190
	word32 a2_191
	word32 a3_192
	word32 a4_193
	word32 a5_194
	word32 a7_195
	word32 s2_196
	word32 s3_197
	word32 s4_198
	word32 s5_199
	word32 s6_200
	word32 s7_201
	word32 s8_202
	word32 s9_203
	word32 s10_204
	word32 s11_205
	word32 t4_206
	printf(ra, 0x230C3940<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_188, out a0_189, out a1_190, out a2_191, out a3_192, out a4_193, out a5_194, out a7_195, out s2_196, out s3_197, out s4_198, out s5_199, out s6_200, out s7_201, out s8_202, out s9_203, out s10_204, out s11_205, out t4_206)
	return
l230781C2:
l2307819C:
	word32 a0_170
	word32 a1_171
	word32 a2_172
	word32 a3_173
	word32 a4_174
	word32 a5_175
	word32 a7_176
	word32 s2_177
	word32 s3_178
	word32 s4_179
	word32 s5_180
	word32 s6_181
	word32 s7_182
	word32 s8_183
	word32 s9_184
	word32 s10_185
	word32 s11_186
	word32 t4_187
	ra = printf(ra, 0x230C38FC<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_170, out a1_171, out a2_172, out a3_173, out a4_174, out a5_175, out a7_176, out s2_177, out s3_178, out s4_179, out s5_180, out s6_181, out s7_182, out s8_183, out s9_184, out s10_185, out s11_186, out t4_187)
	a0 = 0x230C3BF4<32>
l230781B8:
l230781B8_thunk_iperf_client_tcp_entry:
	iperf_client_tcp_entry(ra, s1, a0, mstatus, dwArg04, dwArg20, dwArg24, dwArg44, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ipc_test_cmd_exit:


void ips_test_cmd(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgA8, word32 dwArgBC, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ips_test_cmd_entry:
l230781D2:
	branch a2 != 1<32> l230781F8
l230781F8:
	branch a2 != 2<32> l23078202
l23078202:
l2307820A_thunk_printf:
	word32 s1_159
	word32 a0_160
	word32 a1_161
	word32 a2_162
	word32 a3_163
	word32 a4_164
	word32 a5_165
	word32 a7_166
	word32 s2_167
	word32 s3_168
	word32 s4_169
	word32 s5_170
	word32 s6_171
	word32 s7_172
	word32 s8_173
	word32 s9_174
	word32 s10_175
	word32 s11_176
	word32 t4_177
	printf(ra, 0x230C3B8C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_159, out a0_160, out a1_161, out a2_162, out a3_163, out a4_164, out a5_165, out a7_166, out s2_167, out s3_168, out s4_169, out s5_170, out s6_171, out s7_172, out s8_173, out s9_174, out s10_175, out s11_176, out t4_177)
	return
l230781FE:
l230781D8:
	word32 a4_155
	word32 a2_154
	word32 a1_153
	word32 a0_152
	word32 a5_156
	word32 s4_157
	word32 s8_158
	s1 = puts(0x230C3B54<32>, out a0_152, out a1_153, out a2_154, out a4_155, out a5_156, out s4_157, out s8_158)
	a0 = 0x230C3BF4<32>
l230781F4:
l230781F4_thunk_iperf_server_entry:
	iperf_server_entry(ra, s1, a0, mstatus, dwArg04, dwArg20, dwArg24, dwArg44, dwArgA8, dwArgC8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0194)
	return
ips_test_cmd_exit:


void network_netutils_iperf_cli_register()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
network_netutils_iperf_cli_register_entry:
l2307820E:
	return
network_netutils_iperf_cli_register_exit:


word32 dirent_type(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      file_info
//      romfs_readdir
//      romfs_stat
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a4 a5
// Preserved: sp
dirent_type_entry:
l23078212:
	word32 a0_11
	word32 a5_5 = CONVERT(Mem0[a0 + 3<i32>:byte], byte, word32)
	branch (a5_5 & 7<32>) == 0<32> l2307822E
l2307822E:
	a0_11 = 0<32>
l2307821A:
	a0_11 = 2<32>
	branch (a5_5 & 7<32>) == 2<32> l23078230
l23078222:
	a0_11 = 3<32>
	branch (a5_5 & 7<32>) != 1<32> l23078230
l23078230:
	a5Out = <invalid>
	return a0_11
l2307822A:
	a5Out = <invalid>
	return 1<32>
dirent_type_exit:


word32 dirent_hardfh(word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      file_info
//      romfs_readdir
// MayUse:  a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
dirent_hardfh_entry:
l23078232:
	word32 a5_16 = a5 >>u 8<i32> & 0xFFFFF00<32>
	a5Out = a5_16
	return (a5 << 0x18<u32> | a5 >>u 0x18<u32> | a5 << 8<u32> & 0xFF0000<32> | a5_16) & 0xFFFFFFF0<32>
dirent_hardfh_exit:


word32 dirent_childaddr(word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dirent_file
//      romfs_opendir
// MayUse:  a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
dirent_childaddr_entry:
l2307825A:
	word32 a5_16 = a5 >>u 8<i32> & 0xFFFFF00<32>
	a5Out = a5_16
	return (a5 << 0x18<u32> | a5 >>u 0x18<u32> | a5 << 8<u32> & 0xFF0000<32> | a5_16) & 0xFFFFFFF0<32>
dirent_childaddr_exit:


word32 dirent_size(word32 a5, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      romfs_ioctl
//      romfs_read
//      romfs_lseek
//      romfs_stat
// MayUse:  a5:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
dirent_size_entry:
l23078282:
	a3Out = 0xFF0000<32>
	return a5 << 0x18<u32> | a5 >>u 0x18<u32> | a5 << 8<u32> & 0xFF0000<32> | a5 >>u 8<i32> & 0xFFFFF00<32>
dirent_size_exit:


void romfs_close(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
romfs_close_entry:
l230782A8:
	Mem4[a0 + 4<i32>:word32] = 0<32>
	Mem5[a0 + 8<i32>:word32] = 0<32>
	return
romfs_close_exit:


void romfs_ioctl(word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
romfs_ioctl_entry:
l230782B4:
	branch a0 == 0<32> l230782FE
l230782B8:
	branch a2 == 0<32> l230782FE
l230782BA:
	branch a1 != 1<32> l230782FE
l230782FE:
	return
l230782C2:
	word32 s2_20 = Mem19[a0 + 4<i32>:int32]
	word32 a5_27
	word32 a4_80
	word32 a3_79
	word32 a2_78
	word32 a1_77
	Mem34[(strlen(s2_20 + 16<i32>, out a1_77, out a2_78, out a3_79, out a4_80, out a5_27) + 0x10<32> & 0xFFFFFFF0<32>) + 0x10<32> + s2_20:word32] = a2
	word32 a3_81
	Mem40[dirent_size(a5_27, out a3_81) + 4<i32>:word32] = a2
	0<32> = dwArg38
	return
romfs_ioctl_exit:


void romfs_read(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
romfs_read_entry:
l23078302:
	word32 s3_19 = Mem17[a0 + 4<i32>:int32]
	word32 a5_29
	word32 a4_136
	word32 a3_135
	word32 a2_134
	word32 a1_133
	word32 a0_26 = strlen(s3_19 + 16<i32>, out a1_133, out a2_134, out a3_135, out a4_136, out a5_29)
	word32 a3_137
	word32 a0_34 = dirent_size(a5_29, out a3_137)
	word32 a2_38 = Mem17[a0 + 8<i32>:int32]
	branch a2_38 >=u a0_34 l23078384
l23078384:
l23078336:
	word32 a1_46 = (a0_26 + 16<i32> & 0xFFFFFFF0<32>) + 0x10<32> + a2_38 + s3_19
	branch a2_38 + a2 >=u a0_34 l23078372
l23078372:
	word32 a1_138
	word32 a2_139
	word32 a3_140
	word32 a4_141
	word32 a5_142
	word32 a6_143
	word32 a7_144
	memcpy(a1, a1_46, a0_34 - a2_38, out a1_138, out a2_139, out a3_140, out a4_141, out a5_142, out a6_143, out a7_144)
	Mem63[a0 + 8<i32>:word32] = a0_34
l2307834C:
	word32 a1_145
	word32 a2_146
	word32 a3_147
	word32 a4_148
	word32 a5_149
	word32 a6_150
	word32 a7_151
	memcpy(a1, a1_46, a2, out a1_145, out a2_146, out a3_147, out a4_148, out a5_149, out a6_150, out a7_151)
	Mem81[a0 + 8<i32>:word32] = Mem17[a0 + 8<i32>:int32] + a2
l2307835E:
	return
romfs_read_exit:


word32 file_info(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 s4, word32 dwArg18, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg3C, word32 dwArg7C, word32 dwArgCC, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dirent_file
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +003C:[0..31] Stack +007C:[0..31] Stack +00CC:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a5 ra s0 s1 s2 s3 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t3 t4 tp
// Preserved: s8 sp
file_info_entry:
l23078388:
	word32 a0_302
	word32 s2_172 = a0
	word32 s5_175 = a1
	word32 a5_160 = 64<i32>
	word32 a5_663
	word32 a2_660
	word32 a4_662
	word32 a1_659
	word32 a3_661
	branch strlen(a0, out a1_659, out a2_660, out a3_661, out a4_662, out a5_663) >u 64<i32> l230784E2
l230783B4:
	s3 = 0x4200F6A0<32>
	branch Mem23[0x4200F6A0<32>:int32] != s0 l230783D6
l230783C4:
	word32 a3_666
	word32 a4_667
	word32 a1_664
	word32 a2_665
	word32 a5_668
	s0 = s0 + ((strlen(s0 + 16<i32>, out a1_664, out a2_665, out a3_666, out a4_667, out a5_668) + 0x10<32> & 0xFFFFFFF0<32>) + 80<i32>)
l230783D6:
	s7 = 1<32>
l230783DA:
	word32 a0_211
	word32 s1_210
	word32 a5_194
	word32 a0_57 = dirent_type(s0, out a5_194)
	branch a0_57 != 1<32> l2307843A
l2307843A:
	branch a0_57 != 2<32> l2307846C
l2307846C:
	branch a0_57 == 0<32> l230784F2
l2307846E:
	branch Mem23[0x4200F560<32>:int32] == 0<32> l230784E6
l230784E6:
	word32 a5_698
	xTaskGetTickCount(out a5_698)
l2307847A:
	word32 a5_699
	xTaskGetTickCountFromISR(out a5_699)
l2307847E:
	word32 a5_712
	dirent_type(s0, out a5_712)
	word32 s5_106
	word32 s6_107
	word32 s1_128
	word32 s3_132
	word32 s9_738
	word32 s0_728
	word32 a5_731
	word32 s4_733
	word32 s5_734
	word32 s6_735
	word32 s8_737
	word32 s7_736
	word32 s2_732
	word32 a3_729
	word32 a4_730
	word32 a4_718
	word32 s3_721
	word32 s7_723
	word32 s8_724
	word32 s9_725
	word32 s11_727
	word32 s10_726
	word32 s4_722
	word32 a5_719
	word32 s2_720
	word32 s1_713
	word32 a0_714
	word32 a1_715
	word32 a3_717
	word32 a2_716
	word32 ra_126 = log_buf_out(bl_printk(ra, 0x230C3DB4<32>, 0x230C3DA8<32>, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_713, out a0_714, out a1_715, out a2_716, out a3_717, out a4_718, out a5_719, out s2_720, out s3_721, out s4_722, out s5_106, out s6_107, out s7_723, out s8_724, out s9_725, out s10_726, out s11_727), s0, 8<32>, 0<32>, s5_106, s6_107, s4, dwLoc20, dwLoc1C, dwLoc10, dwArg18, dwArg2C, dwArg3C, dwArgCC, out s0_728, out s1_128, out a3_729, out a4_730, out a5_731, out s2_732, out s3_132, out s4_733, out s5_734, out s6_735, out s7_736, out s8_737, out s9_738)
	branch Mem73[s3_132 + 1376<i32>:int32] == 0<32> l230784EC
l230784EC:
	word32 a5_700
	xTaskGetTickCount(out a5_700)
l230784C4:
	word32 a5_701
	xTaskGetTickCountFromISR(out a5_701)
l230784C8:
	word32 s8_708
	word32 s11_711
	word32 s9_709
	word32 s10_710
	word32 a1_703
	word32 a2_704
	word32 a3_705
	word32 s4_707
	word32 a4_706
	word32 a0_702
	ra = bl_printk(ra_126, 0x230C3DF8<32>, s1_128 + -600<i32>, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1, out a0_702, out a1_703, out a2_704, out a3_705, out a4_706, out a5_160, out s2_172, out s3, out s4_707, out s5_175, out s6, out s7, out s8_708, out s9_709, out s10_710, out s11_711)
l2307843E:
	word32 a4_687
	word32 a1_684
	word32 a3_686
	word32 a3_691
	word32 a4_692
	word32 a2_690
	word32 a5_688
	word32 a1_689
	word32 a2_685
	branch memcmp(a0, s0 + 16<i32>, strlen(a0, out a1_684, out a2_685, out a3_686, out a4_687, out a5_688), out a1_689, out a2_690, out a3_691, out a4_692, out a5_194) != 0<32> l230784F2
l23078452:
	word32 a1_693
	word32 a2_694
	word32 a3_695
	word32 a5_697
	word32 a4_696
	a5_194 = CONVERT(Mem23[strlen(a0, out a1_693, out a2_694, out a3_695, out a4_696, out a5_697) + s0 + 16<i32>:byte], byte, word32)
	branch a5_194 != 0<32> l230784F2
l23078460:
	s1_210 = Mem23[0x4200F6A0<32>:int32]
	a0_211 = dirent_hardfh(a5_194, out a5_160)
l230783E4:
	word32 a3_671
	word32 a2_670
	word32 a1_669
	word32 a4_672
	word32 a5_673
	word32 a4_677
	word32 a3_676
	word32 a1_674
	word32 a2_675
	branch memcmp(a0, s0 + 16<i32>, strlen(a0, out a1_669, out a2_670, out a3_671, out a4_672, out a5_673), out a1_674, out a2_675, out a3_676, out a4_677, out a5_194) != 0<32> l230784F2
l230783FA:
	word32 a4_682
	word32 a1_679
	word32 a3_681
	word32 a2_680
	word32 a5_683
	a5_194 = CONVERT(Mem23[strlen(a0, out a1_679, out a2_680, out a3_681, out a4_682, out a5_683) + s0 + 16<i32>:byte], byte, word32)
	branch a5_194 != 0<32> l230784F2
l230784F2:
	s6 = Mem23[0x4200F6A0<32>:int32]
	word32 a5_678
	s0 = s6 + dirent_hardfh(a5_194, out a5_678)
	branch s0 <u s1 l230783DA
l23078504:
	branch Mem23[0x4200F560<32>:int32] == 0<32> l2307853C
l2307853C:
	word32 a5_739
	xTaskGetTickCount(out a5_739)
l2307850E:
	word32 a5_740
	xTaskGetTickCountFromISR(out a5_740)
l23078512:
	word32 a4_745
	word32 a3_744
	word32 s8_747
	word32 s4_746
	word32 s10_749
	word32 s9_748
	word32 s11_750
	word32 a1_742
	word32 a2_743
	word32 a0_741
	ra = bl_printk(ra, 0x230C3E28<32>, 0x230C3DA8<32>, dwLoc38, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1, out a0_741, out a1_742, out a2_743, out a3_744, out a4_745, out a5_160, out s2_172, out s3, out s4_746, out s5_175, out s6, out s7, out s8_747, out s9_748, out s10_749, out s11_750)
l230784E2:
	a0_302 = 0xFFFFFFFF<32>
l2307840A:
	a0_211 = dirent_hardfh(a5_194, out a5_160)
	branch a0_211 == 0<32> l23078418
l23078412:
	s1_210 = Mem23[0x4200F6A0<32>:int32]
l23078416:
	s1 = s1_210 + a0_211
l23078418:
	Mem319[a1:word32] = s0
	Mem326[a2:word32] = s1
	a0_302 = 0<32>
l23078422:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1
	a0Out = a0_302
	a2Out = dwArg0138
	a5Out = a5_160
	s2Out = s2_172
	s3Out = s3
	s5Out = s5_175
	s6Out = s6
	s7Out = s7
	return ra
file_info_exit:


void romfs_closedir(word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
romfs_closedir_entry:
l23078542:
	branch a1 == 0<32> l23078556
l23078556:
	return
l23078544:
	word32 s1_52
	word32 a0_53
	word32 a2_54
	word32 a3_55
	word32 a4_56
	word32 a5_57
	word32 a6_58
	word32 t3_59
	aos_free(a1, a2, a5, mstatus, dwArg0148, dwArg0188, out s1_52, out a0_53, out a2_54, out a3_55, out a4_56, out a5_57, out a6_58, out t3_59)
	return
romfs_closedir_exit:


void romfs_lseek(word32 ra, word32 a0, word32 a1, word32 a5, word32 dwArg08, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
romfs_lseek_entry:
l2307855A:
	word32 a1_12 = 0xFFFFFFFF<32>
	branch a0 == 0<32> l23078588
l23078568:
	word32 a3_18
	word32 a0_17 = dirent_size(a5, out a3_18)
	word32 s0_21 = a1
	branch dwArg44 != 0<32> l23078592
l23078592:
	branch dwArg44 != 2<32> l230785C6
l230785C6:
	branch dwArg44 != 1<32> l230785D2
l230785D2:
	word32 s1_316
	word32 a0_317
	word32 a1_318
	word32 a2_319
	word32 a3_320
	word32 a4_321
	word32 a5_322
	word32 a7_323
	word32 s2_324
	word32 s3_325
	word32 s4_326
	word32 s5_327
	word32 s6_328
	word32 s7_329
	word32 s8_330
	word32 s9_331
	word32 s10_332
	word32 s11_333
	word32 t4_334
	printf(ra, 0x230C3E80<32>, a3_18, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_316, out a0_317, out a1_318, out a2_319, out a3_320, out a4_321, out a5_322, out a7_323, out s2_324, out s3_325, out s4_326, out s5_327, out s6_328, out s7_329, out s8_330, out s9_331, out s10_332, out s11_333, out t4_334)
l230785CC:
	s0_21 = Mem11[9<32>:word32]
	a1_12 = 0<32>
l23078598:
	branch true l230785AC
l230785AC:
	a1_12 = a0_17 + 0xFFFFFFFF<32>
l230785AE:
	branch a1_12 < 0<32> l230785B6
l2307859C:
	word32 s1_297
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a3_301
	word32 a4_302
	word32 a5_303
	word32 a7_304
	word32 s2_305
	word32 s3_306
	word32 s4_307
	word32 s5_308
	word32 s6_309
	word32 s7_310
	word32 s8_311
	word32 s9_312
	word32 s10_313
	word32 s11_314
	word32 t4_315
	printf(ra, 0x230C3E80<32>, a3_18, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_297, out a0_298, out a1_299, out a2_300, out a3_301, out a4_302, out a5_303, out a7_304, out s2_305, out s3_306, out s4_307, out s5_308, out s6_309, out s7_310, out s8_311, out s9_312, out s10_313, out s11_314, out t4_315)
l23078576:
	branch false l230785B2
l230785B2:
	branch a0_17 >=u a1_12 l230785E2
l230785E2:
	Mem84[a1_12 + 8<i32>:word32] = s0_21
l230785B6:
	word32 a0_279
	word32 a2_281
	word32 a3_282
	word32 a4_283
	word32 a5_284
	word32 s2_286
	word32 a7_285
	word32 s3_287
	word32 s4_288
	word32 a1_280
	word32 s1_278
	word32 s5_289
	word32 s6_290
	word32 s7_291
	word32 s8_292
	word32 s9_293
	word32 s10_294
	word32 s11_295
	word32 t4_296
	printf(ra, 0x230C3E80<32>, a3_18, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_278, out a0_279, out a1_280, out a2_281, out a3_282, out a4_283, out a5_284, out a7_285, out s2_286, out s3_287, out s4_288, out s5_289, out s6_290, out s7_291, out s8_292, out s9_293, out s10_294, out s11_295, out t4_296)
l2307857A:
	word32 t4_277
	word32 s10_275
	word32 s11_276
	word32 s8_273
	word32 s9_274
	word32 s6_271
	word32 s7_272
	word32 s4_269
	word32 s5_270
	word32 s2_267
	word32 s3_268
	word32 a5_265
	word32 a7_266
	word32 a3_263
	word32 a4_264
	word32 a1_261
	word32 a2_262
	word32 s1_259
	word32 a0_260
	printf(ra, 0x230C3E80<32>, a3_18, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_259, out a0_260, out a1_261, out a2_262, out a3_263, out a4_264, out a5_265, out a7_266, out s2_267, out s3_268, out s4_269, out s5_270, out s6_271, out s7_272, out s8_273, out s9_274, out s10_275, out s11_276, out t4_277)
l23078588:
	return
romfs_lseek_exit:


void romfs_readdir(word32 a1, word32 a5, word32 dwArg1C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31] Stack +001C:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t1 t3 tp
// Preserved: sp
romfs_readdir_entry:
l230785E6:
	branch a1 == 0<32> l230786C0
l230786C0:
	return
l230785E8:
	a1_70 = a1
l23078622:
	word32 a1_70
	word32 s0_41 = Mem40[a5 + 16<i32>:word32]
	branch a5 != 0<32> l2307867C
l2307867C:
	word32 s8_42 = Mem40[s0_41 + 12<i32>:int32]
	branch a5 >=u s8_42 l2307865E
l23078684:
	word32 s9_44 = Mem40[0x4200F6A0<32>:int32]
l2307868A:
	word32 s7_48 = Mem47[s0_41 + 16<i32>:int32]
	branch s7_48 >=u s8_42 l2307865E
l23078692:
	word32 a5_351
	word32 a0_52 = dirent_hardfh(a5, out a5_351)
	branch a0_52 == 0<32> l2307862A
l2307869C:
	branch s7_48 == 0<32> l2307865E
l2307865E:
l230786A0:
	branch dirent_type(s7_48, out a5) <=u 0xFFFFFFFE<32> l2307862A
l230786AC:
	Mem66[a0_52 + s9_44 + 16<i32>:word32] = s0_41
l23078626:
	Mem68[a5 + 16<i32>:word32] = Mem40[a5 + 8<i32>:word32]
l2307862A:
	word32 a5_81
	word32 a3_353
	word32 a4_354
	word32 a2_352
	a1_70 = strncpy(a1 + 25<i32>, a1_70 + 0x10<32>, 64<i32>, out a2_352, out a3_353, out a4_354, out a5_81)
	Mem90[Mem72[a1 + 41<i32>:word32] + 89<i32>:byte] = 0<8>
	word32 a5_100
	word32 a0_103 = dirent_hardfh(a5_81, out a5_100)
	branch a0_103 != 0<32> l230786B2
l230786B2:
	a5_100 = Mem90[0x4200F6A0<32>:int32]
	a0_103 = a0_103 + a5_100
l23078644:
l23078646:
	word32 s0_102 = Mem90[a5_100 + 24<i32>:word32]
	Mem104[a0_103 + 16<i32>:word32] = s0_102
	a5 = a5_100 & 0xFFFF00<32>
	branch a5 != 0x2E2E00<32> l230786BA
l230786BA:
	branch a5 != 0x2FFFE00<32> l23078658
l230786BE:
l23078652:
	a5 = CONVERT(Mem104[s0_102 + 27<i32>:byte], byte, word32)
	branch a5 == 0<32> l23078622
l23078658:
l23078660:
	0<32> = dwArg0128
	0<32> = dwArg1C
	return
romfs_readdir_exit:


word32 dirent_file(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 s4, word32 s6, word32 dwArg18, word32 dwArg4C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      romfs_opendir
//      romfs_stat
//      romfs_open
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] s6:[0..31] Stack +0018:[0..31] Stack +004C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 a5 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dirent_file_entry:
l230786C4:
	word32 a0_122
	word32 s0_171 = a0
	word32 s2_172 = a1
	word32 s1_162 = a2
	word32 s3_113 = 0x230C0000<32>
	word32 a4_776
	word32 a3_771
	word32 a5_773
	word32 a2_770
	word32 a1_769
	word32 a4_772
	word32 a3_775
	word32 a1_774
	word32 a5_120
	word32 a2_166
	branch strlen(a0, out a1_769, out a2_770, out a3_771, out a4_772, out a5_773) <u strlen(0x230BFB48<32>, out a1_774, out a2_166, out a3_775, out a4_776, out a5_120) l2307873A
l230786F4:
	word32 a0_204
	word32 ra_130
	word32 a2_783
	word32 a3_784
	word32 a5_781
	word32 a1_782
	word32 a3_779
	word32 a2_778
	word32 a1_777
	word32 a4_780
	word32 a4_785
	word32 a5_786
	branch memcmp(a0, 0x230BFB48<32>, strlen(0x230BFB48<32>, out a1_777, out a2_778, out a3_779, out a4_780, out a5_781), out a1_782, out a2_783, out a3_784, out a4_785, out a5_786) == 0<32> l23078744
l23078744:
	word32 a1_787
	word32 a5_791
	word32 a2_788
	word32 a3_789
	word32 a4_790
	s0_171 = a0 + strlen(0x230BFB48<32>, out a1_787, out a2_788, out a3_789, out a4_790, out a5_791)
	word32 a5_67 = CONVERT(Mem21[s0_171:byte], byte, word32)
	branch a5_67 == 47<i32> l23078776
l23078776:
	s0_171 = s0_171 + 1<32>
l2307875A:
	branch a5_67 == 0<32> l23078778
l23078778:
	a2_166 = 0x4200F000<32>
	word32 s4_109 = 0<32>
	s3_113 = 0x4200F6A0<32>
	word32 s7_110 = 1<32>
	s6_115 = s6
	ra_130 = ra
l230787B2:
	word32 s6_115
	a5_120 = CONVERT(Mem95[s0_171:byte], byte, word32)
	branch a5_120 == 0<32> l230788CE
l230787BA:
	word32 a5_102
	word32 a3_797
	word32 a4_798
	word32 a1_796
	word32 a0_103 = strchr(s0_171, 47<i32>, out a1_796, out a2_166, out a3_797, out a4_798, out a5_102)
	branch s4_109 != s7_110 l230787DE
l230787CA:
	s4_109 = Mem95[s3_113:int32]
	branch s6_115 == dirent_childaddr(a5_102, out a5_120) + s4_109 l230788F0
l230788F0:
	a0_122 = 0xFFFFFFFE<32>
l230787DC:
l230787DE:
	branch a0_103 != 0<32> l2307886E
l2307886E:
	word32 a2_802
	word32 t1_799
	word32 a0_800
	word32 a1_801
	word32 a3_803
	word32 a4_804
	word32 a5_805
	word32 ra_137 = memset(ra_130, fp + -116<i32>, 0<32>, 65<i32>, out t1_799, out a0_800, out a1_801, out a2_802, out a3_803, out a4_804, out a5_805)
	word32 a5_810
	word32 a3_808
	word32 a2_807
	word32 a1_806
	word32 a4_809
	word32 a6_811
	word32 a7_812
	memcpy(fp + -116<i32>, s0_171, a0_103 - s0_171, out a1_806, out a2_807, out a3_808, out a4_809, out a5_810, out a6_811, out a7_812)
	word32 a0_164
	word32 s5_174
	word32 a5_813
	ra_130 = file_info(ra_137, s0_171, s1_162, fp + -116<i32>, fp + -124<i32>, fp + -120<i32>, s4_109, dwLoc68, dwLoc54, s6, s4, s0, dwLoc04, dwArg4C, dwArg0118, out s0_171, out s1_162, out a0_164, out a2_166, out a5_813, out s2_172, out s3_113, out s5_174, out s6_115, out s7_110)
	branch a0_164 == 0<32> l230788C6
l230788C6:
	s0_171 = s5_174 + 1<i32>
	s4_109 = 1<32>
l23078892:
	branch Mem163[0x4200F560<32>:int32] == 0<32> l230788C0
l230788C0:
	word32 a5_840
	xTaskGetTickCount(out a5_840)
l2307889C:
	word32 a5_841
	xTaskGetTickCountFromISR(out a5_841)
l230788A0:
	a0_204 = 0x230C3D80<32>
l230787E2:
	word32 a3_816
	word32 a5_818
	word32 a4_817
	word32 a2_815
	word32 a1_814
	branch strlen(s0_171, out a1_814, out a2_815, out a3_816, out a4_817, out a5_818) <=u 64<i32> l23078824
l23078824:
	word32 a0_216
	word32 s7_822
	word32 s0_819
	word32 s6_821
	word32 s5_820
	word32 ra_230 = file_info(ra_130, s0_171, s1_162, s0_171, fp + -124<i32>, fp + -120<i32>, s4_109, dwLoc68, dwLoc54, s6, s4, s0, dwLoc04, dwArg4C, dwArg0118, out s0_819, out s1_162, out a0_216, out a2_166, out a5_120, out s2_172, out s3_113, out s5_820, out s6_821, out s7_822)
	branch a0_216 == 0<32> l230788CE
l230788CE:
	Mem248[s2_172:word32] = a5_120
	Mem251[a5_120:word32] = s1_162
	a0_122 = 0<32>
	s0_171 = dwArg64
l23078830:
	branch Mem163[0x4200F560<32>:int32] == 0<32> l23078868
l23078868:
	word32 a5_838
	xTaskGetTickCount(out a5_838)
l2307883A:
	word32 a5_839
	xTaskGetTickCountFromISR(out a5_839)
l2307883E:
	word32 s9_852
	word32 s10_853
	word32 s11_854
	word32 a4_846
	word32 s6_849
	word32 s8_851
	word32 s7_850
	word32 s5_848
	word32 s4_847
	word32 a0_843
	word32 a3_845
	word32 a1_844
	word32 s1_842
	bl_printk(ra_230, 0x230C3D2C<32>, 0x230C3DA8<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_842, out a0_843, out a1_844, out a2_166, out a3_845, out a4_846, out a5_120, out s2_172, out s3_113, out s4_847, out s5_848, out s6_849, out s7_850, out s8_851, out s9_852, out s10_853, out s11_854)
	s0_171 = dwLoc58
l230787F0:
	branch Mem163[0x4200F560<32>:int32] == 0<32> l2307881E
l2307881E:
	word32 a5_823
	xTaskGetTickCount(out a5_823)
l230787FA:
	word32 a5_824
	xTaskGetTickCountFromISR(out a5_824)
l230787FE:
	a0_204 = 0x230C3D08<32>
l2307875C:
	branch Mem21[0x4200F560<32>:int32] == 0<32> l23078770
l23078770:
	word32 a5_794
	xTaskGetTickCount(out a5_794)
l23078766:
	word32 a5_795
	xTaskGetTickCountFromISR(out a5_795)
l2307876A:
l2307870A:
	branch Mem21[0x4200F560<32>:int32] == 0<32> l2307873E
l2307873E:
	word32 a5_792
	xTaskGetTickCount(out a5_792)
l23078714:
	word32 a5_793
	xTaskGetTickCountFromISR(out a5_793)
l23078718:
l2307871C:
	a0_204 = 0x230C3CE0<32>
	ra_130 = ra
l23078736:
	word32 s8_834
	word32 s11_837
	word32 s10_836
	word32 s9_835
	word32 a3_828
	word32 s5_831
	word32 s7_833
	word32 s6_832
	word32 s4_830
	word32 a4_829
	word32 s1_825
	word32 a1_827
	word32 a0_826
	bl_printk(ra_130, a0_204, 0x230C3DA8<32>, dwLoc78, dwLoc58, dwLoc10, dwLoc0C, dwArg18, ra, out s1_825, out a0_826, out a1_827, out a2_166, out a3_828, out a4_829, out a5_120, out s2_172, out s3_113, out s4_830, out s5_831, out s6_832, out s7_833, out s8_834, out s9_835, out s10_836, out s11_837)
l2307873A:
	a0_122 = 0xFFFFFFFF<32>
l230788DA:
	s0Out = s0_171
	s1Out = dwArg0118
	a0Out = a0_122
	a2Out = a2_166
	a5Out = a5_120
	s2Out = s2_172
	s3Out = s3_113
	return dwArg0158
dirent_file_exit:


void romfs_opendir(word32 ra, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 s6, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg2C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s6:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
romfs_opendir_entry:
l230788F4:
	branch Mem12[0x4200F6A0<32>:int32] != 0<32> l23078950
l23078950:
	word32 a0_22
	word32 s1_30
	word32 s4_33
	word32 s3_305
	word32 s2_304
	word32 a5_303
	word32 a4_302
	word32 a3_301
	aos_malloc(ra, a1, 93<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_30, out a0_22, out a3_301, out a4_302, out a5_303, out s2_304, out s3_305, out s4_33)
	branch a0_22 != 0<32> l23078962
l23078962:
	word32 a0_53
	word32 a2_55
	word32 a5_58
	word32 s0_61
	word32 s1_62
	word32 s2_63
	word32 s3_315
	word32 a5_314
	word32 a4_313
	word32 a3_312
	word32 a2_311
	word32 a1_310
	word32 a0_309
	word32 t1_308
	dirent_file(memset(ra, a0_22, 0<32>, 93<i32>, out t1_308, out a0_309, out a1_310, out a2_311, out a3_312, out a4_313, out a5_314), a0_22, s1_30, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, s4_33, s6, dwLoc08, dwArg2C, dwArgF8, out s0_61, out s1_62, out a0_53, out a2_55, out a5_58, out s2_63, out s3_315)
	branch a0_53 != 0<32> l230789B0
l230789B0:
	word32 a2_318
	word32 a3_319
	word32 a0_317
	word32 s1_316
	word32 a4_320
	word32 a5_321
	word32 a6_322
	word32 t3_323
	aos_free(s0_61, a2_55, a5_58, mstatus, dwArg0138, dwArg0178, out s1_316, out a0_317, out a2_318, out a3_319, out a4_320, out a5_321, out a6_322, out t3_323)
l23078978:
	word32 a5_100
	word32 s2_95 = Mem12[s2_63:int32]
	branch s1_62 != s2_95 l230789A0
l230789A0:
	word32 a0_97 = dirent_childaddr(a5_58, out a5_100)
	branch a0_97 == 0<32> l2307895E
l230789A8:
	Mem102[dwArg04 + 8<i32>:word32] = s2_95 + a0_97
l23078982:
	word32 a1_324
	word32 a2_325
	word32 a3_326
	word32 a4_327
	Mem114[s1_62 + ((strlen(s1_62 + 16<i32>, out a1_324, out a2_325, out a3_326, out a4_327, out a5_100) + 0x10<32> & 0xFFFFFFF0<32>) + 80<i32>) + 8<i32>:word32] = dwArg04
l23078996:
	Mem119[dwArg04 + 16<i32>:word32] = 0<32>
	Mem121[a5_100 + 12<i32>:word32] = dwArg04
l2307895E:
l2307890C:
	branch Mem12[0x4200F560<32>:int32] == 0<32> l2307894A
l2307894A:
	word32 a5_306
	xTaskGetTickCount(out a5_306)
l23078916:
	word32 a5_307
	xTaskGetTickCountFromISR(out a5_307)
l2307891A:
	word32 s1_328
	word32 a0_329
	word32 a1_330
	word32 a2_331
	word32 a3_332
	word32 a4_333
	word32 a5_334
	word32 s2_335
	word32 s3_336
	word32 s4_337
	word32 s5_338
	word32 s6_339
	word32 s7_340
	word32 s8_341
	word32 s9_342
	word32 s10_343
	word32 s11_344
	bl_printk(ra, 0x230C3F38<32>, 0x230C3DA8<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_328, out a0_329, out a1_330, out a2_331, out a3_332, out a4_333, out a5_334, out s2_335, out s3_336, out s4_337, out s5_338, out s6_339, out s7_340, out s8_341, out s9_342, out s10_343, out s11_344)
l2307893C:
	return
romfs_opendir_exit:


void romfs_stat(word32 ra, word32 s0, word32 a1, word32 s2, word32 s4, word32 s6, word32 dwArg08, word32 dwArg2C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +002C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
romfs_stat_entry:
l230789B8:
	word32 a0_22
	word32 s1_31
	word32 s2_32
	word32 s0_263
	word32 s3_266
	word32 a5_265
	word32 a2_264
	word32 ra_29 = dirent_file(ra, s0, a1, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, s4, s6, dwLoc08, dwArg2C, dwArgF8, out s0_263, out s1_31, out a0_22, out a2_264, out a5_265, out s2_32, out s3_266)
	branch a0_22 == 0<32> l23078A1E
l23078A1E:
	branch s2_32 != Mem19[0x4200F6A0<32>:int32] l23078A32
l23078A32:
	word32 a5_107
	word32 a5_269
	word32 a0_55 = dirent_type(s2_32, out a5_269)
	branch a0_55 != 1<32> l23078A48
l23078A48:
	branch a0_55 != 2<32> l23078A5A
l23078A5A:
	branch Mem19[0x4200F560<32>:int32] == 0<32> l23078A8E
l23078A8E:
	word32 a5_288
	xTaskGetTickCount(out a5_288)
l23078A64:
	word32 a5_289
	xTaskGetTickCountFromISR(out a5_289)
l23078A68:
	word32 s1_290
	word32 a0_291
	word32 a1_292
	word32 a2_293
	word32 a3_294
	word32 a4_295
	word32 a5_296
	word32 s2_297
	word32 s3_298
	word32 s4_299
	word32 s5_300
	word32 s6_301
	word32 s7_302
	word32 s8_303
	word32 s9_304
	word32 s10_305
	word32 s11_306
	bl_printk(ra_29, 0x230C409C<32>, 0x230C3DA8<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_290, out a0_291, out a1_292, out a2_293, out a3_294, out a4_295, out a5_296, out s2_297, out s3_298, out s4_299, out s5_300, out s6_301, out s7_302, out s8_303, out s9_304, out s10_305, out s11_306)
l23078A4E:
	word32 a3_270
	Mem106[dirent_size(2<32>, out a3_270) + 16<i32>:word32] = s1_31
	a5_107 = 0x8000000<32>
l23078A3E:
	Mem108[s1_31 + 16<i32>:word32] = 0<32>
	a5_107 = 0x4000000<32>
l23078A44:
	Mem112[a5_107 + 4<i32>:word32] = s1_31
l23078A2C:
	Mem113[s1_31 + 16<i32>:word32] = 0<32>
l230789D6:
	branch Mem19[0x4200F560<32>:int32] == 0<32> l23078A18
l23078A18:
	word32 a5_267
	xTaskGetTickCount(out a5_267)
l230789E0:
	word32 a5_268
	xTaskGetTickCountFromISR(out a5_268)
l230789E4:
	word32 s6_282
	word32 s7_283
	word32 s8_284
	word32 s9_285
	word32 s10_286
	word32 s11_287
	word32 s5_281
	word32 s4_280
	word32 a4_276
	word32 s3_279
	word32 s2_278
	word32 a5_277
	word32 a3_275
	word32 s1_271
	word32 a2_274
	word32 a1_273
	word32 a0_272
	bl_printk(ra_29, 0x230C4070<32>, 0x230C3DA8<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_271, out a0_272, out a1_273, out a2_274, out a3_275, out a4_276, out a5_277, out s2_278, out s3_279, out s4_280, out s5_281, out s6_282, out s7_283, out s8_284, out s9_285, out s10_286, out s11_287)
l23078A0A:
	return
romfs_stat_exit:


void romfs_open(word32 ra, word32 a1, word32 s4, word32 s6, word32 dwArg1C, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31] s4:[0..31] s6:[0..31] Stack +001C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
romfs_open_entry:
l23078A94:
	word32 a0_219
	branch Mem0[0x4200F6A0<32>:int32] != 0<32> l23078AFA
l23078AFA:
	word32 a0_116
	word32 a3_618
	word32 a2_617
	word32 a4_619
	word32 a5_620
	word32 a1_616
	word32 a0_27 = strlen(a1, out a1_616, out a2_617, out a3_618, out a4_619, out a5_620)
	word32 a2_622
	word32 a1_621
	word32 a4_624
	word32 a5_625
	word32 a3_626
	word32 a4_627
	word32 a3_623
	word32 a5_628
	branch strncmp(a1, 0x230BFB48<32>, strlen(0x230BFB48<32>, out a1_621, out a2_622, out a3_623, out a4_624, out a5_625), out a3_626, out a4_627, out a5_628) != 0<32> l23078B48
l23078B48:
	branch Mem20[0x4200F560<32>:int32] == 0<32> l23078B7A
l23078B7A:
	word32 a5_635
	xTaskGetTickCount(out a5_635)
l23078B52:
	word32 a5_636
	xTaskGetTickCountFromISR(out a5_636)
l23078B56:
	a0_116 = 0x230C3E98<32>
l23078B22:
	word32 s0_161 = 0<32>
l23078B32:
	branch a0_27 != s0_161 l23078B80
l23078B80:
	word32 a4_81 = CONVERT(Mem20[a1 + s0_161:byte], byte, word32)
	branch (a4_81 + -97<i32> & 255<i32>) <=u 0x19<32> l23078BD4
l23078B94:
	branch (a4_81 + -65<i32> & 255<i32>) <=u 0x19<32> l23078BD0
l23078BA0:
	branch (a4_81 + -48<i32> & 255<i32>) <=u 9<32> l23078BD0
l23078BD0:
	branch a4_81 == 47<i32> l23078C2E
l23078BAC:
	branch a4_81 == 47<i32> l23078C2E
l23078C2E:
	branch s0_161 == 0<32> l23078C68
l23078C68:
	s4 = 0<32>
l23078C30:
	branch s0_161 != s4 l23078C6C
l23078C6C:
	s4 = s0_161
l23078C34:
	branch Mem20[0x4200F560<32>:int32] == 0<32> l23078C62
l23078C62:
	word32 a5_675
	xTaskGetTickCount(out a5_675)
l23078C3E:
	word32 a5_676
	xTaskGetTickCountFromISR(out a5_676)
l23078C42:
	a0_116 = 0x230C3EE8<32>
l23078B74:
	word32 a5_683
	word32 s10_692
	word32 s11_693
	word32 s2_684
	word32 s4_686
	word32 s5_687
	word32 s9_691
	word32 s6_688
	word32 s8_690
	word32 s7_689
	word32 s3_685
	word32 a1_679
	word32 a2_680
	word32 a4_682
	word32 a3_681
	word32 a0_678
	word32 s1_677
	ra = bl_printk(ra, a0_116, 0x230C3DA8<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_677, out a0_678, out a1_679, out a2_680, out a3_681, out a4_682, out a5_683, out s2_684, out s3_685, out s4_686, out s5_687, out s6_688, out s7_689, out s8_690, out s9_691, out s10_692, out s11_693)
l23078BB0:
	branch a4_81 == 95<i32> l23078BD4
l23078BB4:
	branch (a4_81 + -45<i32> & 255<i32>) <=u 1<32> l23078BD4
l23078BD4:
	s0_161 = s0_161 + 1<32>
l23078BC0:
	branch Mem20[0x4200F560<32>:int32] != 0<32> l23078BD8
l23078BD8:
	word32 a5_656
	xTaskGetTickCountFromISR(out a5_656)
l23078BCA:
	word32 a5_657
	xTaskGetTickCount(out a5_657)
l23078BDC:
	word32 s7_670
	word32 s8_671
	word32 s10_673
	word32 s11_674
	word32 s9_672
	word32 s3_666
	word32 s4_667
	word32 s6_669
	word32 s5_668
	word32 s1_658
	word32 a1_660
	word32 a2_661
	word32 s2_665
	word32 a3_662
	word32 a5_664
	word32 a4_663
	word32 a0_659
	ra = bl_printk(ra, 0x230C3EC0<32>, 0x230C3DA8<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_658, out a0_659, out a1_660, out a2_661, out a3_662, out a4_663, out a5_664, out s2_665, out s3_666, out s4_667, out s5_668, out s6_669, out s7_670, out s8_671, out s9_672, out s10_673, out s11_674)
l23078C00:
	branch Mem20[0x4200F560<32>:int32] == 0<32> l23078C70
l23078C70:
	word32 a5_637
	xTaskGetTickCount(out a5_637)
l23078C0A:
	word32 a5_638
	xTaskGetTickCountFromISR(out a5_638)
l23078C0E:
	a0_219 = 0x230C3F0C<32>
l23078B36:
	word32 a0_228
	word32 a5_233
	word32 s3_239
	word32 s0_631
	word32 a2_633
	word32 s2_634
	word32 s1_632
	dirent_file(ra, s0_161, a1, fp + -40<i32>, fp + -36<i32>, s4, s6, dwLoc18, dwArg1C, dwArgE8, out s0_631, out s1_632, out a0_228, out a2_633, out a5_233, out s2_634, out s3_239)
	branch a0_228 == 0<32> l23078C76
l23078C76:
	Mem257[s3_239 + 8<i32>:word32] = 0<32>
	Mem258[s3_239 + 4<i32>:word32] = a5_233
l23078B44:
l23078AAE:
	branch Mem20[0x4200F560<32>:int32] == 0<32> l23078AF4
l23078AF4:
	word32 a5_629
	xTaskGetTickCount(out a5_629)
l23078AB8:
	word32 a5_630
	xTaskGetTickCountFromISR(out a5_630)
l23078ABC:
	a0_219 = 0x230C3F38<32>
l23078ADA:
	word32 s10_654
	word32 s9_653
	word32 s8_652
	word32 a2_642
	word32 a1_641
	word32 s7_651
	word32 s11_655
	word32 s1_639
	word32 s3_647
	word32 s4_648
	word32 s5_649
	word32 a3_643
	word32 a5_645
	word32 a0_640
	word32 a4_644
	word32 s6_650
	word32 s2_646
	bl_printk(ra, a0_219, 0x230C3DA8<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_639, out a0_640, out a1_641, out a2_642, out a3_643, out a4_644, out a5_645, out s2_646, out s3_647, out s4_648, out s5_649, out s6_650, out s7_651, out s8_652, out s9_653, out s10_654, out s11_655)
l23078AE0:
	0<32> = dwArg0128
	return
romfs_open_exit:


word32 romfs_register(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg5C, word32 dwArg68, word32 dwArg84, word32 dwArg8C, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0084:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
romfs_register_entry:
l23078C82:
	word32 ra_150
	word32 s2_136
	word32 a0_23
	word32 s2_32
	word32 s5_42
	word32 s6_43
	word32 a3_422
	word32 s0_421
	word32 ra_39 = bl_mtd_open(ra, 0x230C3FB4<32>, a3, a4, a5, s3, mstatus, s2, s0, dwArg10, dwArg14, dwArg38, dwArg5C, dwArg84, dwArg98, dwArgD8, dwArgF8, dwArg0118, out s0_421, out a0_23, out a3_422, out s2_32, out s5_42, out s6_43)
	branch a0_23 == 0<32> l23078CF0
l23078CF0:
	word32 a0_165
	word32 a1_425
	word32 a3_427
	word32 a5_429
	word32 a4_428
	word32 a2_426
	word32 a0_424
	word32 t1_423
	word32 ra_60 = memset(ra_39, fp + -44<i32>, 0<32>, 0x1C<32>, out t1_423, out a0_424, out a1_425, out a2_426, out a3_427, out a4_428, out a5_429)
	word32 s1_70 = bl_mtd_info(Mem17[s2_32:int32], fp + -44<i32>)
	branch s1_70 != 0<32> l23078D3C
l23078D3C:
	word32 a2_89
	word32 a1_437
	word32 a3_438
	word32 a4_439
	word32 a5_440
	word32 a5_436
	word32 a2_433
	word32 a4_435
	word32 a3_434
	word32 a1_432
	branch memcmp(s1_70, 0x230C4034<32>, strlen(0x230C4034<32>, out a1_432, out a2_433, out a3_434, out a4_435, out a5_436), out a1_437, out a2_89, out a3_438, out a4_439, out a5_440) == 0<32> l23078D86
l23078D86:
	Mem96[0x4200F6A0<32>:word32] = a2_89
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 s1_444
	word32 s0_443
	word32 s2_445
	word32 s3_446
	word32 s4_447
	word32 s5_448
	word32 s6_449
	word32 s7_450
	word32 s8_451
	word32 s9_452
	ra_150 = aos_register_fs(log_buf_out(ra_60, a2_89, 64<i32>, 0<32>, s5_42, s6_43, s0, dwLoc10, dwLoc0C, dwArg00, dwArg28, dwArg3C, dwArg4C, dwArgDC, out s0_443, out s1_444, out a3_100, out a4_101, out a5_102, out s2_445, out s3_446, out s4_447, out s5_448, out s6_449, out s7_450, out s8_451, out s9_452), 0<32>, a3_100, a4_101, a5_102, mstatus, dwArg44, dwArg84, dwArgB8, dwArgF8, dwArg0138, out s2_136)
l23078D56:
	branch Mem17[0x4200F560<32>:int32] == 0<32> l23078D80
l23078D80:
	word32 a5_453
	xTaskGetTickCount(out a5_453)
l23078D60:
	word32 a5_454
	xTaskGetTickCountFromISR(out a5_454)
l23078D64:
	a0_165 = 0x230C4040<32>
l23078D08:
	branch Mem17[0x4200F560<32>:int32] == 0<32> l23078D36
l23078D36:
	word32 a5_441
	xTaskGetTickCount(out a5_441)
l23078D12:
	word32 a5_442
	xTaskGetTickCountFromISR(out a5_442)
l23078D16:
	a0_165 = 0x230C4008<32>
l23078D30:
	word32 s1_455
	word32 a0_456
	word32 a1_457
	word32 a2_458
	word32 a3_459
	word32 a4_460
	word32 a5_461
	word32 s3_462
	word32 s4_463
	word32 s5_464
	word32 s6_465
	word32 s7_466
	word32 s8_467
	word32 s9_468
	word32 s10_469
	word32 s11_470
	ra_150 = bl_printk(ra_60, a0_165, 0x230C3DA8<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_455, out a0_456, out a1_457, out a2_458, out a3_459, out a4_460, out a5_461, out s2_136, out s3_462, out s4_463, out s5_464, out s6_465, out s7_466, out s8_467, out s9_468, out s10_469, out s11_470)
l23078CAC:
	branch Mem17[0x4200F560<32>:int32] == 0<32> l23078CEA
l23078CEA:
	word32 a5_430
	xTaskGetTickCount(out a5_430)
l23078CB8:
	word32 a5_431
	xTaskGetTickCountFromISR(out a5_431)
l23078CBC:
	word32 s1_471
	word32 a0_472
	word32 a1_473
	word32 a2_474
	word32 a3_475
	word32 a4_476
	word32 a5_477
	word32 s3_478
	word32 s4_479
	word32 s5_480
	word32 s6_481
	word32 s7_482
	word32 s8_483
	word32 s9_484
	word32 s10_485
	word32 s11_486
	ra_150 = bl_printk(ra_39, 0x230C3FBC<32>, 0x230C3DA8<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_471, out a0_472, out a1_473, out a2_474, out a3_475, out a4_476, out a5_477, out s2_136, out s3_478, out s4_479, out s5_480, out s6_481, out s7_482, out s8_483, out s9_484, out s10_485, out s11_486)
l23078CDC:
l23078CDE:
	0<32> = dwArg0128
	s2Out = s2_136
	return ra_150
romfs_register_exit:


void _startup_sntp(word32 ra, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg34, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0034:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
_startup_sntp_entry:
l23078DBA:
	word32 a4_13
	word32 a0_75
	word32 a1_76
	word32 a2_77
	word32 a5_78
	word32 s4_79
	word32 s8_80
	word32 s1_14 = puts(0x230C40C4<32>, out a0_75, out a1_76, out a2_77, out a4_13, out a5_78, out s4_79, out s8_80)
	sntp_setoperatingmode(0<32>)
	sntp_init(ra, s1_14, a3, a4_13, sntp_setservername(0<32>, 0x230C40FC<32>), mstatus, dwArg00, dwArg08, dwArg34, dwArg50, dwArg54, dwArg78, dwArg9C)
l23078DE8_thunk_puts:
	word32 a0_81
	word32 a1_82
	word32 a2_83
	word32 a4_84
	word32 a5_85
	word32 s4_86
	word32 s8_87
	puts(0x230C4110<32>, out a0_81, out a1_82, out a2_83, out a4_84, out a5_85, out s4_86, out s8_87)
	return
_startup_sntp_exit:


void cmd_sntp_date(word32 ra, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
cmd_sntp_date_entry:
l23078DEC:
	word32 a0_166
	word32 a1_167
	word32 a2_168
	word32 a4_169
	word32 a5_170
	word32 s4_171
	word32 s8_172
	puts(0x230C414C<32>, out a0_166, out a1_167, out a2_168, out a4_169, out a5_170, out s4_171, out s8_172)
	word32 a0_173
	word32 a1_174
	word32 a2_175
	word32 a4_176
	word32 a5_177
	word32 s4_178
	word32 s8_179
	puts(0x230C4170<32>, out a0_173, out a1_174, out a2_175, out a4_176, out a5_177, out s4_178, out s8_179)
	utils_time_date_from_epoch(0x5E495321<32>, fp + -36<i32>)
	word32 a3_59
	word32 s1_180
	word32 a0_181
	word32 a1_182
	word32 a2_183
	word32 a4_184
	word32 a5_185
	word32 a7_186
	word32 s2_187
	word32 s3_188
	word32 s4_189
	word32 s5_190
	word32 s6_191
	word32 s7_192
	word32 s8_193
	word32 s9_194
	word32 s10_195
	word32 s11_196
	word32 t4_197
	word32 ra_62 = printf(ra, 0x230C41A4<32>, CONVERT(bLoc20, byte, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_180, out a0_181, out a1_182, out a2_183, out a3_59, out a4_184, out a5_185, out a7_186, out s2_187, out s3_188, out s4_189, out s5_190, out s6_191, out s7_192, out s8_193, out s9_194, out s10_195, out s11_196, out t4_197)
	word32 a2_79
	word32 a4_83
	word32 a0_198
	word32 a1_199
	word32 a5_200
	word32 s4_201
	word32 s8_202
	puts(0x230C41F4<32>, out a0_198, out a1_199, out a2_79, out a4_83, out a5_200, out s4_201, out s8_202)
	word32 a3_203
	utils_time_date_from_epoch(sntp_get_time(fp + -44<i32>, fp + -40<i32>, a2_79, a3_59, a4_83, mstatus, dwLoc08, out a3_203), fp + -36<i32>)
	word32 s1_204
	word32 a0_205
	word32 a1_206
	word32 a2_207
	word32 a3_208
	word32 a4_209
	word32 a5_210
	word32 a7_211
	word32 s2_212
	word32 s3_213
	word32 s4_214
	word32 s5_215
	word32 s6_216
	word32 s7_217
	word32 s8_218
	word32 s9_219
	word32 s10_220
	word32 s11_221
	word32 t4_222
	printf(ra_62, 0x230C41A4<32>, CONVERT(bLoc20, byte, word32), dwLoc38, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_204, out a0_205, out a1_206, out a2_207, out a3_208, out a4_209, out a5_210, out a7_211, out s2_212, out s3_213, out s4_214, out s5_215, out s6_216, out s7_217, out s8_218, out s9_219, out s10_220, out s11_221, out t4_222)
	return
cmd_sntp_date_exit:


void cmd_sntp_time(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
cmd_sntp_time_entry:
l23078E8E:
	word32 a3_16
	sntp_get_time(fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a2, a3, a4, mstatus, dwArg18, out a3_16)
	word32 s1_62
	word32 a0_63
	word32 a1_64
	word32 a2_65
	word32 a3_66
	word32 a4_67
	word32 a5_68
	word32 a7_69
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 s5_73
	word32 s6_74
	word32 s7_75
	word32 s8_76
	word32 s9_77
	word32 s10_78
	word32 s11_79
	word32 t4_80
	printf(ra, 0x230C4208<32>, a3_16, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_62, out a0_63, out a1_64, out a2_65, out a3_66, out a4_67, out a5_68, out a7_69, out s2_70, out s3_71, out s4_72, out s5_73, out s6_74, out s7_75, out s8_76, out s9_77, out s10_78, out s11_79, out t4_80)
	return
cmd_sntp_time_exit:


void cmd_sntp_start(word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
cmd_sntp_start_entry:
l23078EB2:
l23078EBC_thunk_tcpip_callback:
	word32 s1_36
	word32 a0_37
	word32 a3_38
	word32 a4_39
	word32 s2_40
	word32 s4_41
	word32 s6_42
	tcpip_callback(0x23078DBA<32>, 0<32>, a3, a4, mstatus, dwArgD8, dwArg0118, dwArg0158, out s1_36, out a0_37, out a3_38, out a4_39, out s2_40, out s4_41, out s6_42)
	return
cmd_sntp_start_exit:


void sntp_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
sntp_cli_init_entry:
l23078EC0:
	return
sntp_cli_init_exit:


void sntp_retry(word32 s1, word32 a3, word32 a4, word32 mstatus, word32 dwArg34)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sntp_recv
//      sntp_dns_found
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0034:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s8 t3 tp
// Preserved: s0 sp
sntp_retry_entry:
l23078EC4:
	word32 a3_20
	word32 s8_57
	word32 a4_56
	word32 a2_55
	word32 a0_54
	word32 s1_53
	sys_timeout(s1, 0x23079134<32>, a3, a4, mstatus, dwArg34, out s1_53, out a0_54, out a2_55, out a3_20, out a4_56, out s8_57)
	word32 s0_28 = Mem13[a3_20:word32]
	branch a3_20 << 1<u32> >u 0x249F0<32> l23078EFA
l23078EF4:
	branch a3_20 >=u a3_20 << 1<u32> l23078EFA
l23078EF8:
	Mem32[a3_20 << 1<u32>:word32] = s0_28
l23078EFA:
	return
sntp_retry_exit:


void sntp_recv(word32 ra, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sntp_recv_entry:
l23078F02:
	word32 s8_436
	word32 s7_435
	word32 s6_434
	word32 s5_433
	word32 s3_432
	word32 s2_431
	word32 a5_429
	word32 a7_430
	word32 a0_425
	word32 a1_426
	word32 a2_427
	word32 a4_428
	word32 s9_437
	word32 s10_438
	word32 s11_439
	word32 t4_440
	word32 s1_108
	word32 a3_104
	word32 s4_113
	word32 ra_107 = printf(ra, 0x230C4284<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_108, out a0_425, out a1_426, out a2_427, out a3_104, out a4_428, out a5_429, out a7_430, out s2_431, out s3_432, out s4_113, out s5_433, out s6_434, out s7_435, out s8_436, out s9_437, out s10_438, out s11_439, out t4_440)
	word32 a4_105 = CONVERT(Mem17[s1_108 + 8<i32>:uint16], uint16, word32)
	branch a4_105 != 48<i32> l23078F70
l23078F2A:
	word32 a0_46 = pbuf_get_at(s1_108, 0<32>, out a3_104, out a4_105)
	word32 a5_53 = CONVERT(Mem17[0x4200F6AC<32>:byte], byte, word32)
	branch a5_53 != 0<32> l23078F62
l23078F62:
	a4_105 = 1<32>
	branch a5_53 != 1<32> l23078F70
l23078F6A:
	branch (a0_46 & 7<32>) == 5<32> l23078F46
l23078F3E:
	branch (a0_46 & 7<32>) != 4<32> l23078F70
l23078F46:
	word32 a3_65
	word32 a4_469
	branch pbuf_get_at(s1_108, 1<32>, out a3_65, out a4_469) != 0<32> l2307907E
l2307907E:
	word32 a0_470
	word32 a1_471
	word32 a2_472
	word32 a5_473
	word32 s2_474
	word32 s3_475
	word32 s8_476
	pbuf_copy_partial(s1_108, fp + -40<i32>, 8<32>, 40<i32>, out s1_108, out a0_470, out a1_471, out a2_472, out a3_104, out a4_105, out a5_473, out s2_474, out s3_475, out s4_113, out s8_476)
l23078F52:
	word32 a0_477
	word32 a1_478
	word32 a2_479
	word32 a5_480
	word32 a7_481
	word32 s2_482
	word32 s3_483
	word32 s5_484
	word32 s6_485
	word32 s7_486
	word32 s8_487
	word32 s9_488
	word32 s10_489
	word32 s11_490
	word32 t4_491
	ra_107 = printf(ra_107, 0x230C4294<32>, a3_65, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_108, out a0_477, out a1_478, out a2_479, out a3_104, out a4_105, out a5_480, out a7_481, out s2_482, out s3_483, out s4_113, out s5_484, out s6_485, out s7_486, out s8_487, out s9_488, out s10_489, out s11_490, out t4_491)
l23078F70:
	word32 s0_135
	word32 a3_139
	word32 mstatus_156
	word32 a0_160
	word32 a3_165
	word32 a4_166
	word32 s1_169
	word32 s1_441
	word32 a0_442
	word32 a1_443
	word32 a2_444
	word32 a4_445
	word32 a5_446
	word32 a7_447
	word32 s2_448
	word32 s3_449
	word32 s4_450
	word32 s5_451
	word32 s6_452
	word32 s8_453
	word32 a1_454
	word32 a2_455
	word32 a5_456
	word32 a7_457
	word32 s2_458
	word32 s3_459
	word32 s4_460
	word32 s5_461
	word32 s6_462
	word32 s7_463
	word32 s8_464
	word32 s9_465
	word32 s10_466
	word32 s11_467
	word32 t4_468
	word32 ra_168 = printf(pbuf_free(ra_107, s1_108, a3_104, a4_105, s4_113, mstatus, dwArgF8, out s0_135, out s1_441, out a0_442, out a1_443, out a2_444, out a3_139, out a4_445, out a5_446, out a7_447, out s2_448, out s3_449, out s4_450, out s5_451, out s6_452, out s8_453, out mstatus_156), 0x230C42B8<32>, a3_139, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_169, out a0_160, out a1_454, out a2_455, out a3_165, out a4_166, out a5_456, out a7_457, out s2_458, out s3_459, out s4_460, out s5_461, out s6_462, out s7_463, out s8_464, out s9_465, out s10_466, out s11_467, out t4_468)
	branch s0_135 != 0<32> l23079090
l23079090:
	branch s0_135 != 1<32> l23079070
l23079096:
	branch CONVERT(Mem17[0x4200F6AC<32>:byte], byte, word32) != 0<32> l23079070
l230790A0:
	sntp_retry(s1_169, a3_165, a4_166, mstatus_156, dwArg04)
l23078F86:
	word32 a3_492
	word32 a4_493
	word32 a5_494
	word32 a0_199 = lwip_htonl(a0_160, out a3_492, out a4_493, out a5_494)
	word32 a3_208
	word32 a4_495
	word32 a5_496
	lwip_htonl(a0_199, out a3_208, out a4_495, out a5_496)
	word32 a3_219
	word32 a4_220
	word32 s1_223
	word32 s2_226
	word32 s3_227
	word32 a0_497
	word32 a1_498
	word32 a2_499
	word32 a5_500
	word32 a7_501
	word32 s4_502
	word32 s5_503
	word32 s6_504
	word32 s7_505
	word32 s8_506
	word32 s9_507
	word32 s10_508
	word32 s11_509
	word32 t4_510
	word32 ra_222 = printf(ra_168, 0x230C42C8<32>, a3_208, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_223, out a0_497, out a1_498, out a2_499, out a3_219, out a4_220, out a5_500, out a7_501, out s2_226, out s3_227, out s4_502, out s5_503, out s6_504, out s7_505, out s8_506, out s9_507, out s10_508, out s11_509, out t4_510)
	word32 a5_511
	vTaskEnterCritical(a4_220, mstatus_156, out a5_511)
	Mem241[s3_227:word32] = a0_199 + 0x7C558180<32>
	Mem242[s2_226:word32] = s1_223
	word32 a5_512
	Mem246[0x4200F6B8<32>:word32] = xTaskGetTickCount(out a5_512)
	word32 a1_249 = Mem246[s3_227:int32]
	word32 a0_253 = (Mem246[s2_226:int32] >>u 1000<i32>) + (a1_249 + 1000<i32>)
	bl_sys_time_update(a0_253, CONVERT((a1_249 >u 1000<i32>) + (a0_253 <u a1_249 + 1000<i32>), bool, bool))
	word32 a4_513
	word32 a5_514
	word32 s1_515
	word32 a0_516
	word32 a1_517
	word32 a2_518
	word32 a3_519
	word32 a4_520
	word32 a5_521
	word32 a7_522
	word32 s2_523
	word32 s3_524
	word32 s4_525
	word32 s5_526
	word32 s6_527
	word32 s7_528
	word32 s8_529
	word32 s9_530
	word32 s10_531
	word32 s11_532
	word32 t4_533
	printf(ra_222, 0x230C42D8<32>, vTaskExitCritical(a3_219, mstatus_156, out a4_513, out a5_514), dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_515, out a0_516, out a1_517, out a2_518, out a3_519, out a4_520, out a5_521, out a7_522, out s2_523, out s3_524, out s4_525, out s5_526, out s6_527, out s7_528, out s8_529, out s9_530, out s10_531, out s11_532, out t4_533)
	Mem296[0x4201B288<32>:byte] = SLICE(CONVERT(Mem246[0x4201B288<32>:byte], byte, word32) | 1<i32>, byte, 0)
	branch CONVERT(Mem296[0x4200F6AC<32>:byte], byte, word32) != 0<32> l23079070
l23079034:
	word32 a3_534
	sys_untimeout(0x23078EC4<32>, 0<32>, mstatus_156, out a3_534)
	word32 a3_317
	word32 s1_321 = sys_untimeout(0x23079134<32>, 0<32>, mstatus_156, out a3_317)
	Mem330[0x4200F6B4<32>:word32] = 0x3FFFA98<32>
	word32 s1_535
	word32 a0_536
	word32 a2_537
	word32 a3_538
	word32 a4_539
	word32 s8_540
	sys_timeout(s1_321, 0x23079134<32>, a3_317, 0x4200F000<32>, mstatus_156, dwArg14, out s1_535, out a0_536, out a2_537, out a3_538, out a4_539, out s8_540)
l23079070:
	0<32> = dwArg0128
	return
sntp_recv_exit:


void sntp_send_request(word32 ra, word32 s0, word32 s1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sntp_request
//      sntp_dns_found
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
sntp_send_request_entry:
l230790A8:
	word32 a1_129
	word32 a0_20
	word32 s2_31
	word32 s4_33
	word32 s0_197
	word32 a1_198
	word32 a2_199
	word32 a5_200
	word32 a7_201
	word32 s3_202
	word32 s5_203
	word32 s6_204
	word32 s8_205
	word32 s1_106
	word32 mstatus_120
	word32 a4_127
	word32 a3_103
	word32 ra_37 = pbuf_alloc(ra, s0, s1, 182<i32>, 48<i32>, 640<i32>, a3, a4, mstatus, s0, dwArg34, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0148, out s0_197, out s1_106, out a0_20, out a1_198, out a2_199, out a3_103, out a4_127, out a5_200, out a7_201, out s2_31, out s3_202, out s4_33, out s5_203, out s6_204, out s8_205, out mstatus_120)
	branch a0_20 == 0<32> l23079128
l23079128:
	a1_129 = 0x23079134<32>
l230790C6:
	word32 a0_48 = Mem16[s1_106 + 4<i32>:word32]
	word32 t1_206
	word32 a0_207
	word32 a1_208
	word32 a2_209
	word32 a3_210
	word32 a4_211
	word32 a5_212
	word32 ra_59 = memset(ra_37, s1_106, 0<32>, 48<i32>, out t1_206, out a0_207, out a1_208, out a2_209, out a3_210, out a4_211, out a5_212)
	Mem63[s1_106:byte] = 0x23<8>
	word32 a3_72
	word32 a4_73
	word32 mstatus_77
	word32 s0_79
	word32 s4_83
	word32 s1_213
	word32 a0_214
	word32 a2_215
	word32 s3_216
	word32 s5_217
	word32 s9_218
	word32 s0_219
	word32 a0_220
	word32 a1_221
	word32 a2_222
	word32 a4_223
	word32 a5_224
	word32 a7_225
	word32 s2_226
	word32 s3_227
	word32 s4_228
	word32 s5_229
	word32 s6_230
	word32 s8_231
	pbuf_free(udp_sendto(ra_59, Mem63[0x4200F6B0<32>:int32], a0_48, s2_31, 123<i32>, s4_33, mstatus_120, dwArg04, dwArg18, dwArg38, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_79, out s1_213, out a0_214, out a2_215, out a3_72, out a4_73, out s3_216, out s4_83, out s5_217, out s9_218, out mstatus_77), s0_79, a3_72, a4_73, s4_83, mstatus_77, dwArg0118, out s0_219, out s1_106, out a0_220, out a1_221, out a2_222, out a3_103, out a4_223, out a5_224, out a7_225, out s2_226, out s3_227, out s4_228, out s5_229, out s6_230, out s8_231, out mstatus_120)
	word32 a4_124 = CONVERT(Mem63[0x4201B288<32>:byte], byte, word32)
	Mem128[0x4201B288<32>:byte] = SLICE(a4_124 << 1<i32>, byte, 0)
	a4_127 = a4_124 << 1<i32>
	a1_129 = 0x23078EC4<32>
l23079114:
	0<32> = dwArg38
l23079124_thunk_sys_timeout:
	word32 s1_232
	word32 a0_233
	word32 a2_234
	word32 a3_235
	word32 a4_236
	word32 s8_237
	sys_timeout(s1_106, a1_129, a3_103, a4_127, mstatus_120, dwArg44, out s1_232, out a0_233, out a2_234, out a3_235, out a4_236, out s8_237)
	return
sntp_send_request_exit:


void sntp_request(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sntp_request_entry:
l23079134:
	word32 s0_12
	word32 s0_8 = Mem5[a0:word32]
	branch a0 == 0<32> l23079174
l23079174:
	s0_12 = Mem10[a5 + 4<i32>:word32]
	branch a5 != 0<32> l23079166
l23079146:
	Mem18[s0_8 + 4<i32>:word32] = 0<32>
	word32 a0_24
	word32 s2_229
	word32 s3_230
	word32 s4_231
	ra = dns_gethostbyname(ra, a0, fp + 0xFFFFFFEC<32>, 0<32>, s2, s5, s6, s8, mstatus, dwLoc18, dwLoc04, dwArg18, dwArg28, dwArg48, dwArg58, dwArg68, dwArg88, dwArg98, dwArgC8, dwArg0108, dwArg0148, out s0_12, out s1, out a0_24, out a3, out a4, out s2_229, out s3_230, out s4_231, out mstatus)
	branch a0_24 == 0xFFFFFFFB<32> l2307916C
l23079160:
	branch a0_24 != 0<32> l2307917A
l2307917A:
	word32 s1_232
	word32 a0_233
	word32 a2_234
	word32 a3_235
	word32 a4_236
	word32 s8_237
	sys_timeout(s1, 0x23078EC4<32>, a3, a4, mstatus, dwArg24, out s1_232, out a0_233, out a2_234, out a3_235, out a4_236, out s8_237)
l23079162:
	Mem79[0xFFFFFFFF<32>:word32] = s0_12
l23079166:
	sntp_send_request(ra, s0_12, s1, a3, a4, mstatus, dwLoc1C, dwLoc08, dwArg14, dwArg18, dwArg24, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128)
l2307916C:
	return
sntp_request_exit:


void sntp_dns_found(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sntp_dns_found_entry:
l23079190:
	branch a1 == 0<32> l230791A2
l230791A2:
l230791A4_thunk_sntp_retry:
	sntp_retry(s1, a3, a4, mstatus, dwArg34)
	return
l23079192:
	Mem23[0x4201B284<32>:word32] = a4
l2307919E_thunk_sntp_send_request:
	sntp_send_request(ra, s0, s1, a3, a4, mstatus, dwArg04, dwArg18, dwArg34, dwArg38, dwArg44, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0148)
	return
sntp_dns_found_exit:


void sntp_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg18, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _startup_sntp
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
sntp_init_entry:
l230791A8:
	word32 s0_8 = Mem5[a5:word32]
	branch a5 != 0<32> l23079248
l230791BA:
	word32 a3_18
	word32 s1_196
	word32 a4_197
	word32 a5_198
	word32 ra_21 = udp_new_ip_type(ra, s1, a3, a4, mstatus, out s1_196, out a3_18, out a4_197, out a5_198)
	Mem27[46<i32>:word32] = s0_8
	word32 a0_30
	word32 s1_199
	word32 a1_200
	word32 a2_201
	word32 a3_202
	word32 a4_203
	word32 a5_204
	word32 a7_205
	word32 s2_206
	word32 s3_207
	word32 s4_208
	word32 s5_209
	word32 s6_210
	word32 s7_211
	word32 s8_212
	word32 s9_213
	word32 s10_214
	word32 s11_215
	word32 t4_216
	printf(ra_21, 0x230C4268<32>, a3_18, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_199, out a0_30, out a1_200, out a2_201, out a3_202, out a4_203, out a5_204, out a7_205, out s2_206, out s3_207, out s4_208, out s5_209, out s6_210, out s7_211, out s8_212, out s9_213, out s10_214, out s11_215, out t4_216)
	branch a0_30 == 0<32> l23079248
l230791D6:
	udp_recv(a0_30, 0x23078F02<32>, 0<32>)
	word32 a5_57 = CONVERT(Mem27[0x4200F6AC<32>:byte], byte, word32)
	branch a5_57 != 0<32> l2307921E
l2307921E:
	branch a5_57 != 1<32> l23079248
l23079248:
	return
l23079224:
	Mem69[a0_30 + 9<i32>:byte] = SLICE(CONVERT(Mem27[a0_30 + 9<i32>:byte], byte, word32) | 32<i32>, byte, 0)
l23079244_thunk_udp_bind:
	word32 a3_229
	word32 a4_230
	word32 a5_231
	udp_bind(a0_30, 0x230CBADC<32>, dwArg10, out a3_229, out a4_230, out a5_231)
	return
l230791EE:
	Mem83[0x4200F6B4<32>:word32] = 0x3FFFA98<32>
	word32 a3_86
	word32 a4_87
	word32 a0_217
	word32 a1_218
	word32 a2_219
	word32 a5_220
	word32 s4_221
	word32 s8_222
	word32 s1_89 = bl_rand(a0_30, 0<32>, out a0_217, out a1_218, out a2_219, out a3_86, out a4_87, out a5_220, out s4_221, out s8_222)
l2307921A_thunk_sys_timeout:
	word32 s1_223
	word32 a0_224
	word32 a2_225
	word32 a3_226
	word32 a4_227
	word32 s8_228
	sys_timeout(s1_89, 0x23079134<32>, a3_86, a4_87, mstatus, dwArg44, out s1_223, out a0_224, out a2_225, out a3_226, out a4_227, out s8_228)
	return
sntp_init_exit:


void sntp_setoperatingmode(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _startup_sntp
// MayUse:  a0:[0..7]
// LiveOut:
// Trashed: a5
// Preserved: sp
sntp_setoperatingmode_entry:
l23079250:
	Mem5[0x4200F6AC<32>:byte] = SLICE(a0, byte, 0)
	return
sntp_setoperatingmode_exit:


word32 sntp_get_time(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg38, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_sntp_date
//      cmd_sntp_time
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
sntp_get_time_entry:
l2307925A:
	word32 a5_20
	vTaskEnterCritical(a4, mstatus, out a5_20)
	branch a5_20 != 0<32> l23079292
l23079292:
	word32 a5_69
	word32 a0_30 = xTaskGetTickCount(out a5_69) - Mem12[0x4200F6B8<32>:int32]
	word32 a5_32 = Mem12[0x4200F6A4<32>:int32]
	a3 = (a0_30 ^ 1000<i32>) + a2
	Mem36[a0:word32] = a3
	Mem39[(a0_30 | 1000<i32>) + (a5_32 >>u 1000<i32>):word32] = a1
l23079278:
	Mem40[a0:word32] = 0<32>
	Mem41[a1:word32] = 0<32>
l23079280:
	word32 a5_71
	word32 a4_70
	word32 a3_46 = vTaskExitCritical(a3, mstatus, out a4_70, out a5_71)
	0<32> = dwArg38
	a3Out = a3_46
	return 0<32>
sntp_get_time_exit:


word32 sntp_setservername(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _startup_sntp
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
sntp_setservername_entry:
l230792C6:
	branch a0 != 0<32> l230792D0
l230792C8:
	Mem6[0x4201B280<32>:word32] = a1
	a5 = 0x4201B000<32>
l230792D0:
	return a5
sntp_setservername_exit:


void utils_sha256_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
utils_sha256_init_entry:
l230792D2:
l230792D8_thunk_memset:
	word32 t1_16
	word32 a0_17
	word32 a1_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	memset(ra, a0, 0<32>, 108<i32>, out t1_16, out a0_17, out a1_18, out a2_19, out a3_20, out a4_21, out a5_22)
	return
utils_sha256_init_exit:


void utils_sha256_free(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
utils_sha256_free_entry:
l230792DC:
	a0_5 = a0
	branch a0 != 0<32> l230792EA
l230792EA:
	word32 a0_5
	branch a0_5 != a0 + 108<i32> l230792E4
l230792E4:
	Mem7[a0_5:byte] = 0<8>
	a0_5 = a0_5 + 1<32>
l230792EE:
l230792E2:
	return
utils_sha256_free_exit:


void utils_sha256_starts(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
utils_sha256_starts_entry:
l230792F0:
	Mem6[0x6A09E66F<32>:word32] = a0
	Mem9[0xBB67AE91<32>:word32] = a0
	Mem12[0x3C6EF382<32>:word32] = a0
	Mem15[0xA54FF54E<32>:word32] = a0
	Mem18[0x510E5297<32>:word32] = a0
	Mem21[0x9B0568A8<32>:word32] = a0
	Mem24[0x1F83D9CB<32>:word32] = a0
	Mem27[a0:word32] = 0<32>
	Mem28[a0 + 4<i32>:word32] = 0<32>
	Mem29[0x5BE0CD3D<32>:word32] = a0
	Mem30[a0 + 104<i32>:word32] = 0<32>
	return
utils_sha256_starts_exit:


word32 utils_sha256_process(word32 t1, word32 a0, word32 a1, word32 a3, word32 a7, ptr32 & a3Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_sha256_update
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a7:[0..31] t1:[0..31]
// LiveOut: a3 a7 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
utils_sha256_process_entry:
l2307934E:
	word32 s2_9 = a0 + 8<i32>
	word32 s3_10 = fp + -336<i32>
	word32 a4_26 = fp + -336<i32>
l23079382:
	word32 a5_30 = Mem29[a3:word32]
	a4_26 = a4_26 + 4<32>
	Mem34[a4_26 + 4092<i32>:word32] = a3
	branch a0 + 40<i32> != a5_30 + 4<32> l23079382
l23079390:
	word32 a4_116 = fp + -304<i32>
	a1_350 = a1
l2307939A:
	word32 a1_350
	a1_350 = a1_350 + 4<32>
	word32 a3_54 = CONVERT(Mem43[a1_350 + -2<i32>:byte], byte, word32)
	a4_116 = a4_116 + 4<32>
	word32 a5_120 = CONVERT(Mem43[a1_350:byte], byte, word32) << 24<i32> | CONVERT(Mem43[a1_350 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem43[a1_350 + -1<i32>:byte], byte, word32) | a3_54 << 8<i32>
	Mem57[a4_116 + 4092<i32>:word32] = a5_120
	word32 a3_113 = a3_54 << 8<i32>
	branch a1 + 64<i32> != a1_350 l2307939A
l230793C2:
	0<32> = dwLocCC
	word32 t3_401 = dwLoc0148
	word32 a6_274 = dwLoc0128
	word32 a2_101 = dwLoc6C
	word32 s1_448 = 0x230C42F4<32>
	word32 t6_70 = dwLoc0148
	word32 t4_71 = 0x230C42F4<32>
l230793E4:
	word32 a6_100 = a6_274 + (((((a7 >>u 6<u32> | a7 << 0x1A<u32>) ^ (a7 >>u 0xB<u32> | a7 << 0x15<u32>)) ^ (a7 << 7<u32> | a7 >>u 0x19<u32>)) + (Mem57[t4_71:int32] + Mem57[t6_70:int32])) + ((t1 ^ a1_350) & a7 ^ t1))
	t6_70 = t6_70 + 32<i32>
	t4_71 = t4_71 + 32<i32>
	word32 a5_121 = a5_120 + a6_100
	word32 t5_142 = ((a5_121 >>u 6<u32> | a5_121 << 0x1A<u32>) ^ (a5_121 >>u 0xB<u32> | a5_121 << 0x15<u32>) ^ (a5_121 << 7<u32> | a5_121 >>u 0x19<u32>)) + ((t1 + (Mem57[t4_71 + -28<i32>:int32] + Mem57[t6_70 + -28<i32>:int32])) + ((a7 ^ a1_350) & a5_121 ^ a1_350))
	word32 a6_123 = a6_100 + ((((a2_101 >>u 2<u32> | a2_101 << 0x1E<u32>) ^ (a2_101 >>u 0xD<u32> | a2_101 << 0x13<u32>)) ^ (a2_101 << 0xA<u32> | a2_101 >>u 0x16<u32>)) + ((a2_101 | a3_113) & a4_116 | a2_101 & a3_113))
	word32 a4_160 = a4_116 + t5_142
	word32 t5_180 = ((a4_160 >>u 6<u32> | a4_160 << 0x1A<u32>) ^ (a4_160 >>u 0xB<u32> | a4_160 << 0x15<u32>) ^ (a4_160 << 7<u32> | a4_160 >>u 0x19<u32>)) + ((a1_350 + (Mem57[t4_71 + -24<i32>:int32] + Mem57[t6_70 + -24<i32>:int32])) + ((a5_121 ^ a7) & a4_160 ^ a7))
	word32 t1_159 = ((a6_123 >>u 2<u32> | a6_123 << 0x1E<u32>) ^ (a6_123 >>u 0xD<u32> | a6_123 << 0x13<u32>) ^ (a6_123 << 0xA<u32> | a6_123 >>u 0x16<u32>)) + ((a6_123 | a2_101) & a3_113 | a6_123 & a2_101) + t5_142
	word32 a3_198 = a3_113 + t5_180
	word32 t5_218 = ((a3_198 >>u 6<u32> | a3_198 << 0x1A<u32>) ^ (a3_198 >>u 0xB<u32> | a3_198 << 0x15<u32>) ^ (a3_198 << 7<u32> | a3_198 >>u 0x19<u32>)) + ((a7 + (Mem57[t4_71 + -20<i32>:int32] + Mem57[t6_70 + -20<i32>:int32])) + ((a5_121 ^ a4_160) & a3_198 ^ a5_121))
	word32 a1_197 = ((t1_159 >>u 2<u32> | t1_159 << 0x1E<u32>) ^ (t1_159 >>u 0xD<u32> | t1_159 << 0x13<u32>) ^ (t1_159 << 0xA<u32> | t1_159 >>u 0x16<u32>)) + ((a6_123 | t1_159) & a2_101 | a6_123 & t1_159) + t5_180
	word32 a2_236 = a2_101 + t5_218
	word32 t5_256 = ((a2_236 >>u 6<u32> | a2_236 << 0x1A<u32>) ^ (a2_236 >>u 0xB<u32> | a2_236 << 0x15<u32>) ^ (a2_236 << 7<u32> | a2_236 >>u 0x19<u32>)) + ((a5_121 + (Mem57[t4_71 + -16<i32>:int32] + Mem57[t6_70 + -16<i32>:int32])) + ((a4_160 ^ a3_198) & a2_236 ^ a4_160))
	word32 a7_235 = ((a1_197 >>u 2<u32> | a1_197 << 0x1E<u32>) ^ (a1_197 >>u 0xD<u32> | a1_197 << 0x13<u32>) ^ (a1_197 << 0xA<u32> | a1_197 >>u 0x16<u32>)) + ((t1_159 | a1_197) & a6_123 | t1_159 & a1_197) + t5_218
	a6_274 = a6_123 + t5_256
	word32 t5_294 = ((a6_274 >>u 6<u32> | a6_274 << 0x1A<u32>) ^ (a6_274 >>u 0xB<u32> | a6_274 << 0x15<u32>) ^ (a6_274 << 7<u32> | a6_274 >>u 0x19<u32>)) + ((a4_160 + (Mem57[t4_71 + -12<i32>:int32] + Mem57[t6_70 + -12<i32>:int32])) + ((a3_198 ^ a2_236) & a6_274 ^ a3_198))
	a5_120 = ((a7_235 >>u 2<u32> | a7_235 << 0x1E<u32>) ^ (a7_235 >>u 0xD<u32> | a7_235 << 0x13<u32>) ^ (a7_235 << 0xA<u32> | a7_235 >>u 0x16<u32>)) + ((a1_197 | a7_235) & t1_159 | a1_197 & a7_235) + t5_256
	t1 = t1_159 + t5_294
	word32 t5_332 = ((t1 >>u 6<u32> | t1 << 0x1A<u32>) ^ (t1 >>u 0xB<u32> | t1 << 0x15<u32>) ^ (t1 << 7<u32> | t1 >>u 0x19<u32>)) + ((a3_198 + (Mem57[t4_71 + -8<i32>:int32] + Mem57[t6_70 + -8<i32>:int32])) + ((a2_236 ^ a6_274) & t1 ^ a2_236))
	a4_116 = ((a5_120 >>u 2<u32> | a5_120 << 0x1E<u32>) ^ (a5_120 >>u 0xD<u32> | a5_120 << 0x13<u32>) ^ (a5_120 << 0xA<u32> | a5_120 >>u 0x16<u32>)) + ((a7_235 | a5_120) & a1_197 | a7_235 & a5_120) + t5_294
	a1_350 = a1_197 + t5_332
	word32 t5_370 = ((a1_350 >>u 6<u32> | a1_350 << 0x1A<u32>) ^ (a1_350 >>u 0xB<u32> | a1_350 << 0x15<u32>) ^ (a1_350 << 7<u32> | a1_350 >>u 0x19<u32>)) + ((a2_236 + (Mem57[t4_71 + -4<i32>:int32] + Mem57[t6_70 + -4<i32>:int32])) + ((a6_274 ^ t1) & a1_350 ^ a6_274))
	a3_113 = ((a4_116 >>u 2<u32> | a4_116 << 0x1E<u32>) ^ (a4_116 >>u 0xD<u32> | a4_116 << 0x13<u32>) ^ (a4_116 << 0xA<u32> | a4_116 >>u 0x16<u32>)) + ((a5_120 | a4_116) & a7_235 | a5_120 & a4_116) + t5_332
	a7 = a7_235 + t5_370
	a2_101 = ((a3_113 >>u 2<u32> | a3_113 << 0x1E<u32>) ^ (a3_113 >>u 0xD<u32> | a3_113 << 0x13<u32>) ^ (a3_113 << 0xA<u32> | a3_113 >>u 0x16<u32>)) + ((a4_116 | a3_113) & a5_120 | a4_116 & a3_113) + t5_370
	branch t4_71 != 0x230C4334<32> l230793E4
l23079840:
l23079854:
	word32 s5_403 = Mem402[t3_401 + 56<i32>:int32]
	word32 t5_404 = Mem402[t3_401 + 4<i32>:int32]
	word32 t4_429 = ((s5_403 << 0xF<u32> | s5_403 >>u 0x11<u32>) ^ (s5_403 << 0xD<u32> | s5_403 >>u 0x13<u32>) ^ s5_403 >>u 0xA<u32>) + (Mem402[t3_401 + 36<i32>:int32] + Mem402[t3_401:int32]) + (((t5_404 >>u 7<u32> | t5_404 << 0x19<u32>) ^ (t5_404 << 0xE<u32> | t5_404 >>u 0x12<u32>)) ^ t5_404 >>u 3<u32>)
	word32 a6_456 = a6_274 + ((((((a7 >>u 6<u32> | a7 << 0x1A<u32>) ^ (a7 >>u 0xB<u32> | a7 << 0x15<u32>)) ^ (a7 << 7<u32> | a7 >>u 0x19<u32>)) + ((t1 ^ a1_350) & a7 ^ t1)) + Mem402[s1_448 + 64<i32>:int32]) + t4_429)
	word32 s6_405 = Mem402[t3_401 + 60<i32>:int32]
	word32 t6_486 = Mem402[t3_401 + 8<i32>:int32]
	word32 a5_484 = a5_120 + a6_456
	word32 s0_498 = ((s6_405 << 0xF<u32> | s6_405 >>u 0x11<u32>) ^ (s6_405 << 0xD<u32> | s6_405 >>u 0x13<u32>) ^ s6_405 >>u 0xA<u32>) + (t5_404 + Mem402[t3_401 + 40<i32>:int32]) + (((t6_486 >>u 7<u32> | t6_486 << 0x19<u32>) ^ (t6_486 << 0xE<u32> | t6_486 >>u 0x12<u32>)) ^ t6_486 >>u 3<u32>)
	word32 t5_517 = ((a7 ^ a1_350) & a5_484 ^ a1_350) + ((t1 + Mem402[s1_448 + 68<i32>:int32]) + s0_498) + (((a5_484 >>u 6<u32> | a5_484 << 0x1A<u32>) ^ (a5_484 >>u 0xB<u32> | a5_484 << 0x15<u32>)) ^ (a5_484 << 7<u32> | a5_484 >>u 0x19<u32>))
	word32 s7_452 = Mem402[t3_401 + 12<i32>:int32]
	word32 a6_485 = a6_456 + ((((a2_101 >>u 2<u32> | a2_101 << 0x1E<u32>) ^ (a2_101 >>u 0xD<u32> | a2_101 << 0x13<u32>)) ^ (a2_101 << 0xA<u32> | a2_101 >>u 0x16<u32>)) + ((a2_101 | a3_113) & a4_116 | a2_101 & a3_113))
	word32 a4_535 = a4_116 + t5_517
	word32 t2_558 = ((t4_429 << 0xF<u32> | t4_429 >>u 0x11<u32>) ^ (t4_429 << 0xD<u32> | t4_429 >>u 0x13<u32>) ^ t4_429 >>u 0xA<u32>) + (t6_486 + Mem402[t3_401 + 44<i32>:int32]) + (((s7_452 >>u 7<u32> | s7_452 << 0x19<u32>) ^ (s7_452 << 0xE<u32> | s7_452 >>u 0x12<u32>)) ^ s7_452 >>u 3<u32>)
	word32 t5_577 = ((a7 ^ a5_484) & a4_535 ^ a7) + ((a1_350 + Mem402[s1_448 + 72<i32>:int32]) + t2_558) + (((a4_535 >>u 6<u32> | a4_535 << 0x1A<u32>) ^ (a4_535 >>u 0xB<u32> | a4_535 << 0x15<u32>)) ^ (a4_535 << 7<u32> | a4_535 >>u 0x19<u32>))
	Mem600[t3_401 + 68<i32>:word32] = s0_498
	word32 t5_606 = Mem600[t3_401 + 16<i32>:int32]
	word32 t1_534 = ((a6_485 >>u 2<u32> | a6_485 << 0x1E<u32>) ^ (a6_485 >>u 0xD<u32> | a6_485 << 0x13<u32>) ^ (a6_485 << 0xA<u32> | a6_485 >>u 0x16<u32>)) + ((a2_101 | a6_485) & a3_113 | a2_101 & a6_485) + t5_517
	word32 a3_605 = a3_113 + t5_577
	word32 t0_619 = ((s0_498 << 0xF<u32> | s0_498 >>u 0x11<u32>) ^ (s0_498 << 0xD<u32> | s0_498 >>u 0x13<u32>) ^ s0_498 >>u 10<i32>) + (s7_452 + Mem600[t3_401 + 48<i32>:int32]) + (((t5_606 >>u 7<u32> | t5_606 << 0x19<u32>) ^ (t5_606 << 0xE<u32> | t5_606 >>u 0x12<u32>)) ^ t5_606 >>u 3<u32>)
	word32 s1_618 = Mem600[(t5_606 >>u 3<u32>) + 76<i32>:word32]
	Mem663[t3_401 + 72<i32>:word32] = t2_558
	word32 s7_667 = Mem663[t3_401 + 20<i32>:int32]
	word32 t6_637 = ((a5_484 ^ a4_535) & a3_605 ^ a5_484) + ((a7 + (t5_606 >>u 3<u32>)) + t0_619) + (((a3_605 >>u 6<u32> | a3_605 << 0x1A<u32>) ^ (a3_605 >>u 0xB<u32> | a3_605 << 0x15<u32>)) ^ (a3_605 << 7<u32> | a3_605 >>u 0x19<u32>))
	word32 a1_604 = ((t1_534 >>u 2<u32> | t1_534 << 0x1E<u32>) ^ (t1_534 >>u 0xD<u32> | t1_534 << 0x13<u32>) ^ (t1_534 << 0xA<u32> | t1_534 >>u 0x16<u32>)) + ((a6_485 | t1_534) & a2_101 | a6_485 & t1_534) + t5_577
	word32 t6_681 = ((t2_558 << 0xF<u32> | t2_558 >>u 0x11<u32>) ^ (t2_558 << 0xD<u32> | t2_558 >>u 0x13<u32>) ^ t2_558 >>u 0xA<u32>) + (t5_606 + Mem663[t3_401 + 52<i32>:int32]) + (((s7_667 >>u 7<u32> | s7_667 << 0x19<u32>) ^ (s7_667 << 0xE<u32> | s7_667 >>u 0x12<u32>)) ^ s7_667 >>u 3<u32>)
	word32 a2_655 = a2_101 + t6_637
	word32 t5_699 = ((a2_655 >>u 6<u32> | a2_655 << 0x1A<u32>) ^ (a2_655 >>u 0xB<u32> | a2_655 << 0x15<u32>) ^ (a2_655 << 7<u32> | a2_655 >>u 0x19<u32>)) + (((a4_535 ^ a3_605) & a2_655 ^ a4_535) + (a5_484 + (Mem663[s1_618 + 80<i32>:int32] + t6_681)))
	word32 s0_720 = Mem663[t3_401 + 24<i32>:int32]
	Mem724[t3_401 + 76<i32>:word32] = t0_619
	word32 a7_654 = ((a1_604 >>u 2<u32> | a1_604 << 0x1E<u32>) ^ (a1_604 >>u 0xD<u32> | a1_604 << 0x13<u32>) ^ (a1_604 << 0xA<u32> | a1_604 >>u 0x16<u32>)) + ((t1_534 | a1_604) & a6_485 | t1_534 & a1_604) + t6_637
	word32 t5_740 = ((t0_619 << 0xF<u32> | t0_619 >>u 0x11<u32>) ^ (t0_619 << 0xD<u32> | t0_619 >>u 0x13<u32>) ^ t0_619 >>u 0xA<u32>) + (s5_403 + s7_667) + (((s0_720 >>u 7<u32> | s0_720 << 0x19<u32>) ^ (s0_720 << 0xE<u32> | s0_720 >>u 0x12<u32>)) ^ s0_720 >>u 3<u32>)
	a6_274 = a6_485 + t5_699
	word32 t0_758 = ((a6_274 >>u 6<u32> | a6_274 << 0x1A<u32>) ^ (a6_274 >>u 0xB<u32> | a6_274 << 0x15<u32>) ^ (a6_274 << 7<u32> | a6_274 >>u 0x19<u32>)) + (((a3_605 ^ a2_655) & a6_274 ^ a3_605) + (a4_535 + (Mem724[s1_618 + 84<i32>:int32] + t5_740)))
	word32 t0_783 = Mem724[t3_401 + 28<i32>:int32]
	Mem785[t3_401 + 80<i32>:word32] = t6_681
	a5_120 = ((a7_654 >>u 2<u32> | a7_654 << 0x1E<u32>) ^ (a7_654 >>u 0xD<u32> | a7_654 << 0x13<u32>) ^ (a7_654 << 0xA<u32> | a7_654 >>u 0x16<u32>)) + ((a1_604 | a7_654) & t1_534 | a1_604 & a7_654) + t5_699
	word32 s6_800 = s6_405 + s0_720 + (((t6_681 << 0xF<u32> | t6_681 >>u 0x11<u32>) ^ (t6_681 << 0xD<u32> | t6_681 >>u 0x13<u32>)) ^ t6_681 >>u 0xA<u32>) + (((t0_783 >>u 7<u32> | t0_783 << 0x19<u32>) ^ (t0_783 << 0xE<u32> | t0_783 >>u 0x12<u32>)) ^ t0_783 >>u 3<u32>)
	t1 = t1_534 + t0_758
	word32 t6_818 = ((t1 >>u 6<u32> | t1 << 0x1A<u32>) ^ (t1 >>u 0xB<u32> | t1 << 0x15<u32>) ^ (t1 << 7<u32> | t1 >>u 0x19<u32>)) + (((a2_655 ^ a6_274) & t1 ^ a2_655) + (a3_605 + (Mem785[s1_618 + 88<i32>:int32] + s6_800)))
	word32 t2_842 = Mem785[t3_401 + 32<i32>:int32]
	Mem844[t3_401 + 84<i32>:word32] = t5_740
	Mem848[t3_401 + 64<i32>:word32] = t4_429
	word32 t4_861 = t4_429 + t0_783 + (((t5_740 << 0xF<u32> | t5_740 >>u 0x11<u32>) ^ (t5_740 << 0xD<u32> | t5_740 >>u 0x13<u32>)) ^ t5_740 >>u 0xA<u32>) + (((t2_842 >>u 7<u32> | t2_842 << 0x19<u32>) ^ (t2_842 << 0xE<u32> | t2_842 >>u 0x12<u32>)) ^ t2_842 >>u 3<u32>)
	a1_350 = a1_604 + t6_818
	word32 a2_867 = a2_655 + (Mem848[s1_618 + 92<i32>:int32] + t4_861) + ((a6_274 ^ t1) & a1_350 ^ a6_274)
	Mem868[t3_401 + 92<i32>:word32] = t4_861
	a4_116 = ((a5_120 >>u 2<u32> | a5_120 << 0x1E<u32>) ^ (a5_120 >>u 0xD<u32> | a5_120 << 0x13<u32>) ^ (a5_120 << 0xA<u32> | a5_120 >>u 0x16<u32>)) + ((a7_654 | a5_120) & a1_604 | a7_654 & a5_120) + t0_758
	Mem896[t3_401 + 88<i32>:word32] = s6_800
	word32 t4_880 = ((a1_350 >>u 6<u32> | a1_350 << 0x1A<u32>) ^ (a1_350 >>u 0xB<u32> | a1_350 << 0x15<u32>) ^ (a1_350 << 7<u32> | a1_350 >>u 0x19<u32>)) + a2_867
	a3_113 = ((a4_116 >>u 2<u32> | a4_116 << 0x1E<u32>) ^ (a4_116 >>u 0xD<u32> | a4_116 << 0x13<u32>) ^ (a4_116 << 0xA<u32> | a4_116 >>u 0x16<u32>)) + ((a5_120 | a4_116) & a7_654 | a5_120 & a4_116) + t6_818
	t3_401 = t3_401 + 32<i32>
	a7 = a7_654 + t4_880
	a2_101 = ((a3_113 >>u 2<u32> | a3_113 << 0x1E<u32>) ^ (a3_113 >>u 0xD<u32> | a3_113 << 0x13<u32>) ^ (a3_113 << 0xA<u32> | a3_113 >>u 0x16<u32>)) + ((a4_116 | a3_113) & a5_120 | a4_116 & a3_113) + t4_880
	s1_448 = s1_618 + 32<i32>
	branch dwLoc0148 + 192<i32> != t3_401 l23079854
l23079F64:
l23079F74:
	s2_9 = s2_9 + 4<32>
	Mem920[s2_9 + 4092<i32>:word32] = Mem913[s2_9:int32] + Mem913[s3_10:int32]
	s3_10 = s3_10 + 4<32>
	branch a0 + 40<i32> != s2_9 l23079F74
l23079F8A:
	a3Out = a3_113
	a7Out = a7
	return t1
utils_sha256_process_exit:


word32 utils_sha256_update.part.0(word32 t1, word32 a1, word32 a2, word32 a3, word32 a5, word32 a7, word32 dwArg48, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_sha256_update
//      utils_sha256_finish
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] t1:[0..31]
// LiveOut: a3 a5 a7 s0 s1 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
utils_sha256_update.part.0_entry:
l23079FB2:
	word32 a0_21 = Mem19[a5:word32]
	word32 a5_27 = a5 + a2
	Mem28[a5_27:word32] = a0_21
	word32 s2_24 = a1
	word32 s3_139 = a5 & 63<i32>
	word32 s0_29 = a2
	branch a5_27 >=u a2 l23079FDE
l23079FD8:
	Mem32[a5_27 + 5<32>:word32] = Mem28[a5_27 + 4<i32>:word32]
l23079FDE:
	branch (a5 & 63<i32>) == 0<32> l2307A010
l23079FE2:
	word32 s4_35 = 64<i32> - (a5 & 63<i32>)
	branch a2 <u s4_35 l2307A010
l23079FEE:
	s0_29 = a2 + -64<i32> + (a5 & 63<i32>)
	word32 a6_265
	word32 a7_45
	word32 a3_48
	word32 a4_263
	word32 a5_264
	word32 a2_262
	word32 a1_261
	t1 = utils_sha256_process(memcpy(a0_21 + 40<i32> + (a5 & 63<i32>), a1, s4_35, out a1_261, out a2_262, out a3_48, out a4_263, out a5_264, out a6_265, out a7_45), a0_21, a0_21 + 40<i32>, a3_48, a7_45, out a3, out a7)
	s2_24 = a1 + s4_35
	s3_139 = 0<32>
l2307A010:
	word32 s4_108 = s0_29
	word32 s6_81 = s2_24 + s0_29
l2307A026:
	word32 a1_85 = s6_81 - s4_108
	branch s4_108 >u 63<i32> l2307A01C
l2307A01C:
	t1 = utils_sha256_process(t1, a0_21, a1_85, a3, a7, out a3, out a7)
	s4_108 = s4_108 + -64<i32>
l2307A02E:
	word32 a2_110 = s0_29 >>u 6<u32>
	word32 a1_115 = (a2_110 << 6<u32>) + s2_24
	branch a2_110 + -64<i32> + s0_29 == 0<32> l2307A060
l2307A060:
	0<32> = dwArgA8
	s0Out = <invalid>
	s1Out = <invalid>
	a3Out = a3
	a5Out = -64<i32>
	a7Out = a7
	return t1
l2307A044:
	0<32> = dwArgA8
	word32 a0_140 = a0_21 + 40<i32> + s3_139
l2307A05C_thunk_memcpy:
	word32 a1_266
	word32 a5_144
	word32 a7_145
	word32 a3_148
	word32 a2_267
	word32 a4_268
	word32 a6_269
	word32 t1_151 = memcpy(a0_140, a1_115, dwArg48, out a1_266, out a2_267, out a3_148, out a4_268, out a5_144, out a6_269, out a7_145)
	s0Out = <invalid>
	s1Out = <invalid>
	a3Out = a3_148
	a5Out = a5_144
	a7Out = a7_145
	return t1_151
utils_sha256_update.part.0_exit:


word32 utils_sha256_update(word32 t1, word32 a1, word32 a2, word32 a3, word32 a5, word32 a7, word32 dwArg48, word32 dwArgA8, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      utils_sha256_finish
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] t1:[0..31]
// LiveOut: a3 a5 a7 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
utils_sha256_update_entry:
l2307A074:
	branch a2 == 0<32> l2307A07A
l2307A07A:
	a3Out = a3
	a5Out = a5
	a7Out = a7
	return t1
l2307A076:
l2307A076_thunk_utils_sha256_update.part.0:
	word32 a3_13
	word32 a5_15
	word32 a7_17
	word32 s0_82
	word32 s1_83
	word32 t1_27 = utils_sha256_update.part.0(t1, a1, a2, a3, a5, a7, dwArg48, dwArgA8, out s0_82, out s1_83, out a3_13, out a5_15, out a7_17)
	a3Out = a3_13
	a5Out = a5_15
	a7Out = a7_17
	return t1_27
utils_sha256_update_exit:


void utils_sha256_finish(word32 t1, word32 a2, word32 a5, word32 a7, word32 dwArg28, word32 dwArg88)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a2:[0..31] a5:[0..31] a7:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] t1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
utils_sha256_finish_entry:
l2307A07C:
	word32 a5_43
	word32 a5_17 = a5 << 3<i32> | a2 >>u 0x1D<u32>
	branch (a2 & 63<i32>) >u 55<i32> l2307A202
l2307A202:
	a5_43 = 120<i32>
l2307A0E4:
	a5_43 = 56<i32>
l2307A0E8:
	word32 a3_62
	word32 a5_64
	word32 a7_66
	word32 s0_94
	word32 s1_95
	word32 a7_234
	word32 a5_233
	word32 a3_232
	utils_sha256_update.part.0(utils_sha256_update(t1, 0x230C43F4<32>, a5_43 - (a2 & 63<i32>), a5_17 << 8<u32>, a5_43, a7, dwArg28, dwArg88, out a3_62, out a5_64, out a7_66), fp + 0xFFFFFFE8<32>, 8<32>, a3_62, a5_64, a7_66, dwArg28, dwArg88, out s0_94, out s1_95, out a3_232, out a5_233, out a7_234)
	Mem111[s1_95:byte] = SLICE(CONVERT(Mem38[s0_94 + 11<i32>:byte], byte, word32), byte, 0)
	word32 a5_112 = CONVERT(Mem111[s0_94 + 10<i32>:uint16], uint16, word32)
	Mem113[s1_95 + 1<i32>:byte] = SLICE(a5_112, byte, 0)
	Mem116[s1_95 + 2<i32>:byte] = SLICE(a5_112 >>u 8<i32>, byte, 0)
	word32 s0_117 = Mem116[(a5_112 >>u 8<i32>) + 8<i32>:word32]
	Mem118[s1_95 + 3<i32>:byte] = SLICE(a5_112 >>u 8<i32>, byte, 0)
	Mem120[s1_95 + 4<i32>:byte] = SLICE(CONVERT(Mem118[s0_117 + 15<i32>:byte], byte, word32), byte, 0)
	word32 a5_121 = CONVERT(Mem120[s0_117 + 14<i32>:uint16], uint16, word32)
	Mem122[s1_95 + 5<i32>:byte] = SLICE(a5_121, byte, 0)
	Mem125[s1_95 + 6<i32>:byte] = SLICE(a5_121 >>u 8<i32>, byte, 0)
	word32 s0_126 = Mem125[(a5_121 >>u 8<i32>) + 12<i32>:word32]
	Mem127[s1_95 + 7<i32>:byte] = SLICE(a5_121 >>u 8<i32>, byte, 0)
	Mem129[s1_95 + 8<i32>:byte] = SLICE(CONVERT(Mem127[s0_126 + 19<i32>:byte], byte, word32), byte, 0)
	word32 a5_130 = CONVERT(Mem129[s0_126 + 18<i32>:uint16], uint16, word32)
	Mem131[s1_95 + 9<i32>:byte] = SLICE(a5_130, byte, 0)
	Mem134[s1_95 + 10<i32>:byte] = SLICE(a5_130 >>u 8<i32>, byte, 0)
	word32 s0_135 = Mem134[(a5_130 >>u 8<i32>) + 16<i32>:word32]
	Mem136[s1_95 + 11<i32>:byte] = SLICE(a5_130 >>u 8<i32>, byte, 0)
	Mem138[s1_95 + 12<i32>:byte] = SLICE(CONVERT(Mem136[s0_135 + 23<i32>:byte], byte, word32), byte, 0)
	word32 a5_139 = CONVERT(Mem138[s0_135 + 22<i32>:uint16], uint16, word32)
	Mem140[s1_95 + 13<i32>:byte] = SLICE(a5_139, byte, 0)
	Mem143[s1_95 + 14<i32>:byte] = SLICE(a5_139 >>u 8<i32>, byte, 0)
	word32 s0_144 = Mem143[(a5_139 >>u 8<i32>) + 20<i32>:word32]
	Mem145[s1_95 + 15<i32>:byte] = SLICE(a5_139 >>u 8<i32>, byte, 0)
	Mem147[s1_95 + 16<i32>:byte] = SLICE(CONVERT(Mem145[s0_144 + 27<i32>:byte], byte, word32), byte, 0)
	word32 a5_148 = CONVERT(Mem147[s0_144 + 26<i32>:uint16], uint16, word32)
	Mem149[s1_95 + 17<i32>:byte] = SLICE(a5_148, byte, 0)
	Mem152[s1_95 + 18<i32>:byte] = SLICE(a5_148 >>u 8<i32>, byte, 0)
	word32 s0_153 = Mem152[(a5_148 >>u 8<i32>) + 24<i32>:word32]
	Mem154[s1_95 + 19<i32>:byte] = SLICE(a5_148 >>u 8<i32>, byte, 0)
	Mem156[s1_95 + 20<i32>:byte] = SLICE(CONVERT(Mem154[s0_153 + 31<i32>:byte], byte, word32), byte, 0)
	word32 a5_157 = CONVERT(Mem156[s0_153 + 30<i32>:uint16], uint16, word32)
	Mem158[s1_95 + 21<i32>:byte] = SLICE(a5_157, byte, 0)
	Mem161[s1_95 + 22<i32>:byte] = SLICE(a5_157 >>u 8<i32>, byte, 0)
	word32 s0_162 = Mem161[(a5_157 >>u 8<i32>) + 28<i32>:word32]
	Mem163[s1_95 + 23<i32>:byte] = SLICE(a5_157 >>u 8<i32>, byte, 0)
	Mem165[s1_95 + 24<i32>:byte] = SLICE(CONVERT(Mem163[s0_162 + 35<i32>:byte], byte, word32), byte, 0)
	word32 a5_166 = CONVERT(Mem165[s0_162 + 34<i32>:uint16], uint16, word32)
	Mem167[s1_95 + 25<i32>:byte] = SLICE(a5_166, byte, 0)
	Mem170[s1_95 + 26<i32>:byte] = SLICE(a5_166 >>u 8<i32>, byte, 0)
	Mem172[s1_95 + 27<i32>:byte] = SLICE(a5_166 >>u 8<i32>, byte, 0)
	word32 s0_173 = Mem172[(a5_166 >>u 8<i32>) + 104<i32>:word32]
	branch a5_166 >>u 8<i32> != 0<32> l2307A1F8
l2307A1DA:
	Mem175[s1_95 + 28<i32>:byte] = SLICE(CONVERT(Mem172[s0_173 + 39<i32>:byte], byte, word32), byte, 0)
	word32 a5_176 = CONVERT(Mem175[s0_173 + 38<i32>:uint16], uint16, word32)
	Mem177[s1_95 + 29<i32>:byte] = SLICE(a5_176, byte, 0)
	Mem180[s1_95 + 30<i32>:byte] = SLICE(a5_176 >>u 8<i32>, byte, 0)
	Mem182[s1_95 + 31<i32>:byte] = SLICE(a5_176 >>u 8<i32>, byte, 0)
l2307A1F8:
	return
utils_sha256_finish_exit:


word32 bl_printk(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dts_addr.part.2
//      bl_main_cfg_task_req
//      tc_blfdtdump
//      tc_fdt_wifi_module
//      cmd_blog_info_dump
//      cmd_blog_set_level
//      blog_port_output
//      blog_init
//      __bl_ble_sync_task
//      __recv_event
//      write_data
//      __ble_bytes_send
//      read_data
//      bl_ble_sync_start
//      __malloc
//      __free
//      pro_trans_read
//      ef_get_env_blob
//      ef_del_env
//      ef_set_env
//      psm_test_cmd
//      bl_dma_IRQHandler
//      bl_dma_irq_register
//      bl_dma_init
//      _irq_num_check.part.0
//      bl_irq_register
//      bl_irq_unregister
//      wait_trng4feed
//      sec_trng_IRQHandler
//      bl_sec_test
//      cmd_gpio_get
//      cmd_gpio_set
//      cmd_gpio_func
//      cmd_wdt_init
//      dev_uart_init
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      _dump_partition
//      hal_boot2_init
//      hal_board_cfg
//      bl_tsen_adc_get
//      bl_flash_config_update
//      _cb_led_trigger
//      _led_bloop_msg
//      _led_bloop_evt
//      loopset_led_trigger
//      file_info
//      dirent_file
//      romfs_opendir
//      romfs_stat
//      romfs_open
//      romfs_register
//      log_buf_out
//      bl_mtd_write
//      bloop_run
//      bl_sha_mutex_take
//      bl_sha_mutex_give
//      hal_hbn_init
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_printk_entry:
l2307A208:
	word32 a5_7 = CONVERT(Mem5[0x4200ECB8<32>:byte], byte, word32)
	word32 a5_22 = a5_7 & 255<i32>
	branch (a5_7 & 255<i32>) == 0<32> l2307A230
l2307A228:
	word32 a7_120
	word32 t4_121
	ra = vprint(ra, a0, fp + -28<i32>, dwArg08, dwArg28, a3, dwArg70, dwArg74, dwArg98, dwArgBC, out s1, out a0, out a1, out a2, out a3, out a4, out a5_22, out a7_120, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4_121)
l2307A230:
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_22
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
bl_printk_exit:


word32 log_buf_out(word32 ra, word32 a2, word32 a3, word32 a4, word32 s5, word32 s6, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg58, word32 dwArg6C, word32 dwArg7C, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tc_fdt_wifi_module
//      hal_board_cfg
//      file_info
//      romfs_register
//      bl_hbn_enter
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] s5:[0..31] s6:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +010C:[0..31]
// LiveOut: a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
log_buf_out_entry:
l2307A236:
	branch a3 <= 0<32> l2307A3FA
l2307A3FA:
	s0Out = s0
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	return ra
l2307A23A:
	word32 s2_200
	word32 s6_204
	word32 s9_118
	word32 s3_110
	word32 s7_205
	word32 a5_210 = 50<i32>
	word32 s1_10 = a4
	word32 a4_11 = a3 | 50<i32>
	word32 s0_221 = a2
	word32 s5_203 = a1
	word32 s8_206 = a3 ^ 50<i32>
	branch (a3 | 50<i32>) != 0<32> l2307A2B6
l2307A2B6:
	word32 s6_214 = 0<32>
	s3_110 = 0x4201B28C<32>
	s9_118 = 0x230C4000<32>
	word32 s10_123 = 0x230C4000<32>
	word32 s11_121 = 0x230C4000<32>
l2307A2CC:
	word32 s4_146
	word32 s2_105 = 0<32>
	branch s8_206 != s6_214 l2307A380
l2307A380:
	word32 a1_67
	word32 a0_60 = s3_110 + s2_105
	branch s1_10 == 1<32> l2307A368
l2307A368:
	a1_67 = s9_118 + 1076<i32>
l2307A392:
	a1_67 = s11_121 + 1084<i32>
	branch s1_10 == 2<32> l2307A370
l2307A39C:
	a1_67 = s10_123 + 1092<i32>
l2307A370:
	word32 a0_80
	word32 s2_92
	word32 s7_97
	word32 s5_797
	word32 a5_796
	word32 a4_795
	word32 a2_794
	word32 a1_793
	word32 s0_792
	word32 s8_799
	word32 s6_798
	ra = sprintf(ra, a0_60, a1_67, s6, dwLoc18, dwArg14, dwArg30, a3 | 50<i32>, dwArg58, dwArg7C, out s0_792, out s1_10, out a0_80, out a1_793, out a2_794, out a4_795, out a5_796, out s2_92, out s3_110, out s4_146, out s5_797, out s6_798, out s7_97, out s8_799, out s9_118, out s10_123, out s11_121)
	s2_105 = s2_92 + a0_80
	branch s7_97 == 0xFFFFFFCF<32> l2307A310
l2307A2D4:
	word32 a1_119
	word32 a0_112 = s3_110 + s2_105
	branch s1_10 == 1<32> l2307A2FA
l2307A2FA:
	a1_119 = s9_118 + 1076<i32>
l2307A2E6:
	a1_119 = s11_121 + 1084<i32>
	branch s1_10 == 2<32> l2307A302
l2307A2F0:
	a1_119 = s10_123 + 1092<i32>
l2307A302:
	word32 a0_132
	word32 a5_137
	word32 s2_144
	word32 s7_149
	word32 s8_791
	word32 a2_787
	word32 a1_786
	word32 a4_788
	word32 s5_789
	word32 s6_790
	word32 s0_785
	ra = sprintf(ra, a0_112, a1_119, s6, dwLoc18, dwArg14, dwArg30, a3 | 50<i32>, dwArg58, dwArg7C, out s0_785, out s1_10, out a0_132, out a1_786, out a2_787, out a4_788, out a5_137, out s2_144, out s3_110, out s4_146, out s5_789, out s6_790, out s7_149, out s8_791, out s9_118, out s10_123, out s11_121)
	s2_105 = s2_144 + a0_132
	branch a5_137 != s7_149 + 1<32> l2307A2D4
l2307A310:
	branch Mem42[0x4200F560<32>:int32] == 0<32> l2307A3A2
l2307A3A2:
	word32 a5_800
	xTaskGetTickCount(out a5_800)
l2307A31A:
	word32 a5_801
	xTaskGetTickCountFromISR(out a5_801)
l2307A31E:
	word32 a1_803
	word32 a5_806
	word32 s4_807
	word32 a3_805
	word32 a2_804
	word32 a0_802
	ra = bl_printk(ra, 0x230C445C<32>, s4_146, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_10, out a0_802, out a1_803, out a2_804, out a3_805, out a4_11, out a5_806, out s2_200, out s3_110, out s4_807, out s5_203, out s6_204, out s7_205, out s8_206, out s9_118, out s10_123, out s11_121)
	a5_210 = s6_204 + 1<i32>
	branch s6_204 < s8_206 l2307A2F6
l2307A2F6:
	s6_214 = s6_204 + 1<i32>
l2307A26E:
	s3_110 = 0x4201B000<32>
	s7_205 = 0x230C4000<32>
	s9_118 = 0x230C4000<32>
	word32 s8_219 = (a3 ^ 50<i32>) + 50<i32> + a2
	s6_204 = s6
	s2_200 = s2
l2307A280:
	branch s8_219 == s0_221 l2307A348
l2307A348:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a3Out = s2
	a4Out = a4_11
	a5Out = a5_210
	s2Out = s2_200
	s3Out = s3_110
	s4Out = dwArg0168
	s5Out = s5_203
	s6Out = s6_204
	s7Out = s7_205
	s8Out = dwArg0148
	s9Out = s9_118
	return dwLoc08
log_buf_out_exit:
l2307A284:
	word32 s6_240 = 0<32>
	word32 s10_242 = 1<32>
	word32 s11_243 = 2<32>
l2307A28C:
	word32 a1_258
	word32 a0_250 = s6_240 + 0x4201B28C<32>
	branch s1_10 == s10_242 l2307A3A8
l2307A3A8:
	a1_258 = s7_205 + 1076<i32>
l2307A2A4:
	a1_258 = s9_118 + 1084<i32>
	branch s1_10 == s11_243 l2307A3B0
l2307A2AC:
	a1_258 = 0x230C4444<32>
l2307A3B0:
	word32 a0_271
	word32 s0_279
	word32 s2_283
	word32 s4_285
	word32 s6_287
	word32 a5_772
	word32 a4_771
	word32 s3_773
	word32 s5_774
	word32 s8_775
	word32 a1_769
	word32 a2_770
	ra = sprintf(ra, a0_250, a1_258, s6, dwLoc18, dwArg14, dwArg30, a3 | 50<i32>, dwArg58, dwArg7C, out s0_279, out s1_10, out a0_271, out a1_769, out a2_770, out a4_771, out a5_772, out s2_283, out s3_773, out s4_285, out s5_774, out s6_287, out s7_205, out s8_775, out s9_118, out s10_242, out s11_243)
	s6_240 = s6_287 + a0_271
	branch s2_283 != 0xFFFFFFCF<32> l2307A28C
l2307A3C0:
	branch Mem42[0x4200F560<32>:int32] == 0<32> l2307A3F4
l2307A3F4:
	word32 a5_776
	xTaskGetTickCount(out a5_776)
l2307A3CA:
	word32 a5_777
	xTaskGetTickCountFromISR(out a5_777)
l2307A3CE:
	word32 s4_782
	word32 a3_781
	word32 s10_783
	word32 s11_784
	word32 a0_778
	word32 a1_779
	word32 a2_780
	ra = bl_printk(ra, 0x230C445C<32>, s4_285, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_10, out a0_778, out a1_779, out a2_780, out a3_781, out a4_11, out a5_210, out s2_200, out s3_110, out s4_782, out s5_203, out s6_204, out s7_205, out s8_219, out s9_118, out s10_783, out s11_784)
	s0_221 = s0_279 + 50<i32>


word32 utils_dns_domain_get(word32 a0, word32 a1, word32 a2, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5 a7 t1 t3
// Preserved: a3 a6 sp t4 t5
utils_dns_domain_get_entry:
l2307A3FE:
	word32 a7_12 = Mem0[a2:int32]
	word32 a4_11 = CONVERT(Mem0[a0:byte], byte, word32)
	word32 a5_19 = 0<32>
	word32 t1_14 = 1<32>
l2307A40E:
	branch a4_11 == 0<32> l2307A414
l2307A410:
	branch a7_12 > 0<32> l2307A41A
l2307A41A:
	Mem22[a1 + a5_19:byte] = SLICE(CONVERT(Mem16[a0 + t1_14:byte], byte, word32), byte, 0)
	a4_11 = a4_11 + 0xFFFFFFFF<32>
	word32 a3_23 = t1_14 + 1<i32>
	word32 a6_24 = a5_19 + 1<i32>
	a7_12 = a7_12 + 0xFFFFFFFF<32>
	branch a4_11 != 0<32> l2307A450
l2307A438:
	branch a7_12 == 0<32> l2307A450
l2307A43C:
	Mem28[a6_24 + a1:byte] = 0x2E<8>
	a4_11 = CONVERT(Mem28[a3_23 + a0:byte], byte, word32)
	a6_24 = a5_19 + 2<i32>
	a3_23 = t1_14 + 2<i32>
l2307A450:
	a5_19 = a6_24
	t1_14 = a3_23
l2307A414:
	Mem41[a5_19:word32] = a2
	a4Out = a4_11
	a5Out = a5_19
	return 0<32>
utils_dns_domain_get_exit:


void utils_list_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipc_host_init
//      bl_dma_init
//      bloop_init
//      utils_notifier_chain_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
utils_list_init_entry:
l2307A456:
	Mem4[a0:word32] = 0<32>
	Mem5[a0 + 4<i32>:word32] = 0<32>
	return
utils_list_init_exit:


void utils_list_push_back(word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
//      utils_notifier_chain_register
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
utils_list_push_back_entry:
l2307A460:
	word32 a0_10 = Mem0[a5:word32]
	branch a5 != 0<32> l2307A46E
l2307A46E:
	a0_10 = Mem0[a5 + 4<i32>:word32]
	Mem8[a1:word32] = a5
l2307A464:
	Mem9[a1:word32] = a0_10
l2307A466:
	Mem12[a1 + 4<i32>:word32] = a0_10
	Mem13[a1:word32] = 0<32>
	return
utils_list_push_back_exit:


word32 utils_list_pop_front(word32 a4, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tx_try_flush
//      bl_dma_IRQHandler
//      bloop_run
// MayUse:  a4:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
utils_list_pop_front_entry:
l2307A474:
	word32 a0_5 = Mem0[a5:word32]
	branch a5 == 0<32> l2307A47C
l2307A478:
	a5 = Mem0[a4:word32]
	Mem8[a4:word32] = a0_5
l2307A47C:
	a5Out = a5
	return a5
utils_list_pop_front_exit:


word32 utils_hexdump(word32 ra, word32 s1, word32 a1, word32 a3, word32 s10, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0198, ptr32 & s0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_mib
//      hexdump_cmd
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0198:[0..31]
// LiveOut: a2 a3 a4 ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t3 t4 tp
// Preserved: s8 sp
utils_hexdump_entry:
l2307A480:
	word32 s2_103 = a1
	word32 s1_35 = 0<32>
	branch (a1 & 15<i32>) == 0<32> l2307A4AC
l2307A4A8:
	s1_35 = 0x10<32> - (a1 & 15<i32>)
l2307A4AC:
	word32 s1_100 = s1_35 + a1
	word32 s0_199 = 0<32>
	word32 s6_107 = 0x230C4000<32>
	word32 s7_108 = 0x230BF000<32>
	word32 s8_109 = 0x230C4000<32>
l2307A4CA:
	branch s1_100 != s0_199 l2307A4EC
l2307A4EC:
	branch (s0_199 & 15<i32>) != 0<32> l2307A4FE
l2307A4F4:
	word32 s9_516
	word32 a5_510
	word32 s1_505
	word32 a0_506
	word32 a1_507
	word32 a2_508
	word32 a7_511
	word32 a4_509
	word32 s4_513
	word32 s3_512
	word32 s5_514
	word32 s6_515
	word32 t4_519
	word32 s10_517
	word32 s11_518
	ra = printf(ra, s6_107 + 1144<i32>, a3, s10, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_505, out a0_506, out a1_507, out a2_508, out a3, out a4_509, out a5_510, out a7_511, out s2_103, out s3_512, out s4_513, out s5_514, out s6_515, out s7_108, out s8_109, out s9_516, out s10_517, out s11_518, out t4_519)
l2307A4FE:
	word32 s3_104
	word32 s4_105
	word32 s10_101
	word32 s9_110
	word32 s11_102
	branch s0_199 >=u s2_103 l2307A53A
l2307A53A:
	word32 a5_523
	word32 a1_521
	word32 a0_520
	word32 a2_522
	word32 a7_524
	word32 t4_526
	word32 s5_525
	ra = printf(ra, s7_108 + -672<i32>, a3, s10, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_100, out a0_520, out a1_521, out a2_522, out a3, out a4, out a5_523, out a7_524, out s2_103, out s3_104, out s4_105, out s5_525, out s6_107, out s7_108, out s8_109, out s9_110, out s10_101, out s11_102, out t4_526)
l2307A502:
	word32 a5_530
	word32 a7_531
	word32 s5_532
	word32 t4_533
	word32 a2_529
	word32 a0_527
	word32 a1_528
	ra = printf(ra, s8_109 + 1092<i32>, a3, s10, dwLoc18, dwArg30, dwArg34, s1, dwArg7C, out s1_100, out a0_527, out a1_528, out a2_529, out a3, out a4, out a5_530, out a7_531, out s2_103, out s3_104, out s4_105, out s5_532, out s6_107, out s7_108, out s8_109, out s9_110, out s10_101, out s11_102, out t4_533)
l2307A512:
	word32 s5_143 = s0_199 + 1<i32>
	branch s11_102 != s9_110 l2307A536
l2307A51A:
	word32 s11_146 = s0_199 + -15<i32>
	word32 a5_147 = 0x11<32>
	branch s5_143 >=u s11_146 l2307A526
l2307A524:
	a5_147 = 1<32>
l2307A526:
	word32 s0_152 = s0_199 + 0xFFFFFFF0<32> + a5_147
l2307A52A:
	branch s11_146 != s0_152 l2307A544
l2307A544:
	word32 a0_155 = 32<i32>
	branch s11_146 >=u s2_103 l2307A562
l2307A54C:
	a0_155 = CONVERT(Mem29[s4_105 + s11_146:byte], byte, word32)
	branch (CONVERT(Mem29[a0_155 + s3_104:byte], byte, word32) & 151<i32>) == 0<32> l2307A56A
l2307A56A:
	a0_155 = 46<i32>
l2307A562:
	s0_152 = bl_putchar(s1_100, a0_155, out s4_105)
	s11_146 = s11_146 + 1<32>
l2307A52E:
	word32 s4_538
	word32 a5_537
	word32 a1_535
	word32 a2_536
	word32 a0_534
	s1_100 = puts(s10_101 + -1792<i32>, out a0_534, out a1_535, out a2_536, out a4, out a5_537, out s4_538, out s8_109)
l2307A536:
	s0_199 = s5_143
l2307A4CE:
	0<32> = dwArg0198
	s0Out = dwArg0158
	a2Out = dwArg2C
	a3Out = a3
	a4Out = a4
	s2Out = s2_103
	return ra
utils_hexdump_exit:


void utils_time_date_from_epoch(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_sys_time_now
//      cmd_sntp_date
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 a6
// Preserved: sp
utils_time_date_from_epoch_entry:
l2307A570:
	Mem25[a1 + 6<i32>:word16] = 0<16>
	Mem28[a1 + 2<i32>:byte] = SLICE(a0 & 60<i32>, byte, 0)
	Mem32[a1 + 1<i32>:byte] = SLICE(a0 >>u 60<i32> & 60<i32>, byte, 0)
	Mem38[a1:byte] = SLICE(a0 >>u 0xFFFE10<32> & 0x18<32>, byte, 0)
	Mem43[(a0 >>u 0x15000180<32>) + 12<i32>:word32] = a1
	Mem46[a1 + 3<i32>:byte] = SLICE(CONVERT(Mem43[(a0 >>u 0x15000180<32> & 7<32>) + fp + -20<i32>:byte], byte, word32), byte, 0)
	word32 a0_51 = (a0 >>u 0x1E13380<32>) + 1970<i32>
	Mem52[a0_51 + 8<i32>:word32] = a1
	word32 a4_50 = 1972<i32>
l2307A614:
	branch a4_50 <u a0_51 l2307A680
l2307A680:
	branch (a4_50 | 100<i32>) != 0<32> l2307A68C
l2307A686:
	branch (a4_50 | 400<i32>) != 0<32> l2307A696
l2307A68C:
	Mem65[a1 + 6<i32>:byte] = SLICE(CONVERT(Mem62[a1 + 6<i32>:byte], byte, word32) + 1<32>, byte, 0)
l2307A696:
	a4_50 = a4_50 + 4<32>
l2307A618:
	word32 a5_74 = (a0 >>u 0x15000180<32>) - CONVERT(Mem62[a1 + 6<i32>:byte], byte, word32)
	word32 a4_77 = (a5_74 >>u 365<i32>) + 1970<i32>
	Mem78[a4_77 + 8<i32>:word32] = a1
	word32 a5_80 = (a5_74 & 365<i32>) + 1<32>
	Mem81[a5_80 + 16<i32>:word32] = a1
	branch (a4_77 & 3<i32>) != 0<32> l2307A644
l2307A63A:
	branch (a4_77 & 100<i32>) != 0<32> l2307A64E
l2307A644:
	branch (a4_77 & 400<i32>) != 0<32> l2307A65A
l2307A64E:
	Mem97[a1 + 7<i32>:byte] = 1<8>
l2307A65A:
	Mem99[a1 + 5<i32>:byte] = 0<8>
	word32 a4_100 = 0<32>
l2307A662:
	word32 a3_104 = CONVERT(Mem103[a1 + 5<i32>:byte], byte, word32)
	word32 a2_107 = fp + a3_104
	branch a3_104 <=u 0xB<32> l2307A69A
l2307A69A:
	branch a4_100 >=u a5_80 l2307A66E
l2307A69E:
	word32 a2_111 = CONVERT(Mem103[a2_107 + -12<i32>:byte], byte, word32)
	Mem113[a1 + 5<i32>:byte] = SLICE(a3_104 + 1<32>, byte, 0)
	a4_100 = CONVERT(SLICE(a4_100 + a2_111, word16, 0), word16, word32)
l2307A66E:
	Mem126[a1 + 4<i32>:byte] = SLICE(a5_80 - (a4_100 - CONVERT(Mem103[a2_107 + -13<i32>:byte], byte, word32)), byte, 0)
	return
utils_time_date_from_epoch_exit:


void utils_getopt_init(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_cfg
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
utils_getopt_init_entry:
l2307A6B0:
	branch a0 == 0<32> l2307A6C8
l2307A6C8:
	return
l2307A6B2:
	Mem6[a0:word32] = 0<32>
	Mem7[5<32>:word32] = a0
	Mem9[a1 + 8<i32>:word32] = a0
	Mem10[a0 + 12<i32>:word32] = 0<32>
	Mem11[a0 + 16<i32>:word32] = 0<32>
	return
utils_getopt_init_exit:


word32 utils_getopt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & a0Out, ptr32 & a1Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_cfg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a1 ra s10 s11 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
utils_getopt_entry:
l2307A6CC:
	branch a0 == 0<32> l2307A720
l2307A6CE:
	word32 a0_6 = Mem0[a4 + 4<i32>:word32]
	branch a4 >= a1 l2307A822
l2307A6D8:
	word32 a2_13 = (a4 << 2<u32>) + a2
	word32 a6_14 = Mem0[a2_13:int32]
	branch a6_14 == 0<32> l2307A822
l2307A6E8:
	word32 t1_15 = CONVERT(Mem0[a6_14:byte], byte, word32)
	branch t1_15 == 45<i32> l2307A708
l2307A708:
	word32 t3_17 = CONVERT(Mem0[a6_14 + 1<i32>:byte], byte, word32)
	word32 a0_18 = 0xFFFFFFFF<32>
	branch t3_17 == 0<32> l2307A822
l2307A712:
	branch t3_17 != t1_15 l2307A724
l2307A716:
	a0_18 = CONVERT(Mem0[a6_14 + 2<i32>:byte], byte, word32)
	branch a0_18 != 0<32> l2307A724
l2307A724:
	word32 a5_26 = Mem24[a0_18 + 16<i32>:word32]
	branch a0_18 != 0<32> l2307A730
l2307A72C:
	Mem28[0x11<32>:word32] = a5_26
l2307A730:
	word32 t3_31 = Mem30[a5_26 + 16<i32>:int32]
	word32 a0_119 = CONVERT(Mem30[Mem30[a2_13:int32] + t3_31:byte], byte, word32)
	word32 t1_38 = CONVERT(a0_119 != 0<32>, bool, word32) + t3_31
	Mem39[a5_26 + 16<i32>:word32] = t1_38
	branch CONVERT(Mem39[t1_38 + Mem39[a2_13:word32]:byte], byte, word32) != 0<32> l2307A75A
l2307A752:
	Mem46[a4 + 5<32>:word32] = a5_26
	Mem47[a5_26 + 16<i32>:word32] = 0<32>
l2307A75A:
	branch (CONVERT(Mem52[a3:byte], byte, word32) + -43<i32> & 253<i32>) != 0<32> l2307A76A
l2307A768:
	a3 = a3 + 1<32>
l2307A76A:
	word32 a4_57 = 0<32>
l2307A76C:
	word32 a0_131
	word32 a3_117
	word32 a4_61 = a4_57 + a3
	word32 a2_59 = a4_57 + 1<i32>
	word32 t1_63 = CONVERT(Mem52[a4_61:byte], byte, word32)
	branch t1_63 == 0<32> l2307A7A2
l2307A7A2:
	branch a0_119 != 0<32> l2307A786
l2307A77A:
	branch a0_119 != t1_63 l2307A79E
l2307A79E:
	a4_57 = a2_59
l2307A77E:
	branch a0_119 != 58<i32> l2307A7A4
l2307A7A4:
	word32 t1_71 = CONVERT(Mem52[a2_59 + a3:byte], byte, word32)
	branch t1_71 != 58<i32> l2307A798
l2307A7B2:
	Mem77[a5_26:word32] = 0<32>
	word32 a4_100 = CONVERT(Mem77[a4_61 + 2<i32>:byte], byte, word32)
	branch a4_100 != t1_71 l2307A7C2
l2307A7C0:
	branch false l2307A7DA
l2307A7C2:
	word32 a5_83 = Mem77[a4_100 + 4<i32>:word32]
	Mem86[a5_83 + 4<i32>:word32] = a4_100 + 1<i32>
	word32 a4_95 = Mem86[(a4_100 << 2<i32>) + a2:word32]
	Mem96[a5_83 + 16<i32>:word32] = 0<32>
	Mem99[a4_95 + 58<i32>:word32] = a5_83
	a4_100 = a4_95 + 58<i32>
l2307A7DA:
	word32 a5_102 = Mem101[a4_100 + 4<i32>:word32]
	branch a1 >= a4_100 l2307A798
l2307A7E0:
	Mem114[a0_119 + 12<i32>:word32] = a5_102
	a3_117 = CONVERT(Mem114[a3:byte], byte, word32)
	a0_119 = 58<i32>
	branch a3_117 == 58<i32> l2307A798
l2307A7F2:
	branch Mem114[a5_102 + 8<i32>:word32] == 0<32> l2307A794
l2307A7F6:
	a0_131 = 0x230C44A4<32>
l2307A786:
	Mem134[a0_119 + 12<i32>:word32] = a5_26
	a3_117 = CONVERT(Mem134[a3:byte], byte, word32)
	branch a3_117 != 58<i32> l2307A808
l2307A808:
	branch Mem134[a5_26 + 8<i32>:word32] == 0<32> l2307A794
l2307A80C:
	a0_131 = 0x230C4484<32>
l2307A81C:
	word32 s2_572
	word32 t4_573
	word32 a3_568
	word32 a4_569
	word32 a5_570
	word32 a7_571
	word32 s1_565
	word32 a2_567
	word32 a0_566
	ra = printf(ra, a0_131, a3_117, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_565, out a0_566, out a1, out a2_567, out a3_568, out a4_569, out a5_570, out a7_571, out s2_572, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4_573)
l2307A794:
	a0_119 = 63<i32>
l2307A798:
	a0Out = a0_119
	a1Out = a1
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
l2307A71C:
	Mem196[a4 + 5<32>:word32] = a0_6
l2307A720:
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
l2307A6F4:
	branch CONVERT(Mem0[a3:byte], byte, word32) != 45<i32> l2307A822
l2307A822:
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
l2307A6FC:
	Mem200[a4 + 5<32>:word32] = a0_6
	Mem203[a4 + 1<32>:word32] = a0_6
	a0Out = 1<32>
	a1Out = a1
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
utils_getopt_exit:


word32 params_filter.isra.0.constprop.1(word32 a0, word32 a1, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_uint8_from_string
//      get_uint16_from_string
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a2 a3 a4
// Trashed: a0 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
params_filter.isra.0.constprop.1_entry:
l2307A824:
	word32 a3_12 = 0xA<32>
	branch CONVERT(Mem0[a0:byte], byte, word32) != 48<i32> l2307A846
l2307A832:
	branch (CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) & 223<i32>) != 88<i32> l2307A846
l2307A842:
	a0 = a0 + 2<32>
	a3_12 = 0x10<32>
l2307A846:
	word32 a5_13 = 0<32>
l2307A86A:
	word32 a4_20 = CONVERT(Mem0[a0:byte], byte, word32)
	branch a4_20 != 0<32> l2307A852
l2307A852:
	a2 = a4_20 + -48<i32> & 255<i32>
	a5_13 = a5_13 + a3_12
	branch a2 >u 9<32> l2307A876
l2307A876:
	branch a3_12 == 0xA<32> l2307A8A2
l2307A8A2:
	a2Out = a2
	a3Out = <invalid>
	a4Out = <invalid>
	return 0xFFFFFFFF<32>
l2307A87A:
	branch a3_12 != 0x10<32> l2307A868
l2307A87E:
	a2 = a4_20 + -97<i32> & 255<i32>
	branch a2 >u 5<32> l2307A890
l2307A890:
	a2 = a4_20 + -65<i32> & 255<i32>
	branch a2 >u 5<32> l2307A868
l2307A89C:
	a4_20 = a4_20 + -55<i32>
l2307A88A:
	a5_13 = a5_13 + -87<i32>
l2307A862:
	a5_13 = a5_13 + -48<i32>
l2307A866:
	a5_13 = a5_13 + a4_20
l2307A868:
	a0 = a0 + 1<32>
l2307A870:
	Mem49[a5_13:word32] = a1
	a2Out = a2
	a3Out = <invalid>
	a4Out = <invalid>
	return 0<32>
params_filter.isra.0.constprop.1_exit:


word32 get_bytearray_from_string(word32 a1, word32 a2, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blemesh_set_dev_uuid
//      blemesh_fault_set
//      ble_select_conn
//      ble_disconnect
//      ble_connect
//      ble_write
//      ble_unpair
//      ble_write_without_rsp
// MayUse:  a1:[0..31] a2:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
get_bytearray_from_string_entry:
l2307A8A6:
	word32 s1_15 = a0
	word32 s0_20 = 0<32>
	a1_23 = a1
l2307A8BA:
	word32 a1_23
	branch s0_20 < a2 l2307A8CC
l2307A8CC:
	word32 a2_114
	word32 a3_115
	word32 a4_116
	word32 a5_117
	strncpy(fp + -36<i32>, a1_23, 2<32>, out a2_114, out a3_115, out a4_116, out a5_117)
	word32 a2_118
	word32 a4_119
	word32 a5_120
	a0 = strtol(fp + -36<i32>, 0<32>, 0x10<32>, out a1_23, out a2_118, out a3, out a4_119, out a5_120)
	word32 a5_58 = a1 + s0_20
	Mem59[a5_58:byte] = SLICE(a0, byte, 0)
	s1_15 = Mem59[a5_58:word32]
	Mem63[a5_58 + 2<32>:word32] = s1_15
	s0_20 = s0_20 + 1<32>
l2307A8BE:
	0<32> = dwArg0128
	s1Out = s1_15
	a0Out = a0
	a3Out = a3
	s2Out = a2
	s3Out = a1
	return dwArgE4
get_bytearray_from_string_exit:


word32 get_uint8_from_string(word32 s0, word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blemesh_lpn_set
//      blemesh_net_send
//      blemesh_ivu_test
//      blemesh_fault_set
//      blemesh_pb
//      blemesh_iv_update
//      ble_set_tx_pwr
//      ble_security
//      ble_select_conn
//      ble_disconnect
//      ble_connect
//      ble_start_advertise
//      ble_set_adv_channel
//      ble_discover
//      ble_unpair
//      ble_start_scan
//      ble_write_without_rsp
// MayUse:  a0:[0..31] a1:[0..31] s0:[0..7]
// LiveOut: a0 a1 a3 a4 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t1 t3
// Preserved: sp
get_uint8_from_string_entry:
l2307A8F6:
	byte bLoc14_35 = SLICE(s0, byte, 0)
	word32 a3_16
	word32 a4_17
	word32 a2_53
	word32 a0_14 = params_filter.isra.0.constprop.1(Mem7[a0:word32], fp + 0xFFFFFFEC<32>, out a2_53, out a3_16, out a4_17)
	word32 a5_23 = 0<32>
	branch a0_14 != 0<32> l2307A910
l2307A90C:
	a5_23 = CONVERT(bLoc14_35, byte, word32)
l2307A910:
	Mem27[a1:byte] = SLICE(a5_23, byte, 0)
	a0Out = a0_14
	a1Out = fp + 0xFFFFFFEC<32>
	a3Out = a3_16
	a4Out = a4_17
	s8Out = dwLoc1C
	return a1
get_uint8_from_string_exit:


word32 get_uint16_from_string(word32 s0, word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blemesh_seg_send
//      blemesh_net_send
//      ble_start_advertise
//      ble_set_data_len
//      ble_subscribe
//      ble_write
//      ble_read
//      ble_discover
//      ble_conn_update
//      ble_start_scan
//      ble_write_without_rsp
// MayUse:  a0:[0..31] a1:[0..31] s0:[0..15]
// LiveOut: a0 a2 a3 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t1 t3
// Preserved: sp
get_uint16_from_string_entry:
l2307A91C:
	uint16 wLoc14_35 = SLICE(s0, uint16, 0)
	word32 a2_15
	word32 a3_16
	word32 a4_17
	word32 a0_14 = params_filter.isra.0.constprop.1(Mem7[a0:word32], fp + 0xFFFFFFEC<32>, out a2_15, out a3_16, out a4_17)
	word32 a5_23 = 0<32>
	branch a0_14 != 0<32> l2307A936
l2307A932:
	a5_23 = CONVERT(wLoc14_35, uint16, word32)
l2307A936:
	Mem27[a1:word16] = SLICE(a5_23, word16, 0)
	a0Out = a0_14
	a2Out = a2_15
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_23
	return a1
get_uint16_from_string_exit:


word32 Bl_F_fast.constprop.0(word32 ra, word32 a0, word32 a2, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C, word32 dwArgA4, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_wifi_psk_cal_fast_bin
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0198:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
Bl_F_fast.constprop.0_entry:
l2307A942:
	word32 a3_36
	word32 a5_325
	word32 a2_323
	word32 a4_324
	word32 a1_322
	strlen(a2, out a1_322, out a2_323, out a3_36, out a4_324, out a5_325)
	word32 a5_50
	word32 a2_53
	word32 a3_54
	word32 a7_329
	word32 a4_327
	word32 a6_328
	word32 a1_326
	memcpy(a0, a3_36, a4, out a1_326, out a2_53, out a3_54, out a4_327, out a5_50, out a6_328, out a7_329)
	word32 a4_63 = a0 + dwArgA4
	Mem64[a4_63:byte] = 0<8>
	Mem65[a4_63 + 3<i32>:byte] = SLICE(a5_50, byte, 0)
	Mem66[a4_63 + 1<i32>:byte] = 0<8>
	Mem67[a4_63 + 2<i32>:byte] = 0<8>
	word32 s1_77
	word32 s2_78
	word32 s3_79
	word32 s4_80
	word32 s5_88
	word32 ra_85 = bl_sha_mutex_take(ra, a2_53, a3_54, a4_63, mstatus, s4, s2, dwArg20, dwArg24, dwArg48, s3, dwArg6C, dwArgC8, dwArg0108, out s1_77, out s2_78, out s3_79, out s4_80, out s5_88)
	utils_hmac_sha1_fast(ra_85, 1<32>, s3_79, s4_80, s2_78)
	word32 a6_335
	word32 a7_336
	word32 a4_333
	word32 a5_334
	word32 a2_331
	word32 a3_332
	word32 a1_330
	memcpy(s5_88, s2_78, 0x14<32>, out a1_330, out a2_331, out a3_332, out a4_333, out a5_334, out a6_335, out a7_336)
	word32 s0_137 = 0xFFFFFF<32>
l2307A9BA:
	utils_hmac_sha1_fast(ra_85, 1<32>, s3_79, s4_80, s1_77)
	word32 a7_343
	word32 a5_341
	word32 a6_342
	word32 a3_339
	word32 a4_340
	word32 a1_337
	word32 a2_338
	memcpy(s2_78, s1_77, 0x14<32>, out a1_337, out a2_338, out a3_339, out a4_340, out a5_341, out a6_342, out a7_343)
	word32 a5_190 = 0<32>
l2307A9D8:
	word32 a3_193 = s5_88 + a5_190
	word32 a4_200 = CONVERT(Mem196[s1_77 + a5_190:byte], byte, word32) ^ CONVERT(Mem196[a3_193:byte], byte, word32)
	Mem201[a3_193:byte] = SLICE(a4_200, byte, 0)
	a5_190 = a5_190 + 1<32>
	branch a5_190 != 0x14<32> l2307A9D8
l2307A9F4:
	s0_137 = s0_137 + 0xFFFFFFFF<32>
	branch s0_137 != 0<32> l2307A9BA
l2307A9F8:
	word32 s1_219
	word32 s2_220
	word32 s3_221
	word32 ra_233 = bl_sha_mutex_give(ra_85, a4_200, mstatus, s4, s2, dwArg20, dwArg24, dwArg48, s3, dwArg6C, dwArgC8, dwArg0108, dwArg0148, out s1_219, out s2_220, out s3_221)
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_219
	s2Out = s2_220
	s3Out = s3_221
	s4Out = dwArgF4
	return ra_233
Bl_F_fast.constprop.0_exit:


void utils_wifi_psk_cal_fast_bin(word32 ra, word32 a0, word32 a1, word32 a2, word32 s3, word32 s4, word32 mstatus, word32 dwArg0C, word32 dwArg68, word32 dwArgA8, word32 dwArgE8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pmkCacheGeneratePSK
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] Stack +000C:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
utils_wifi_psk_cal_fast_bin_entry:
l2307AA10:
	word32 a1_184
	word32 a2_185
	word32 a3_186
	word32 a4_187
	word32 a5_188
	branch strlen(a0, out a1_184, out a2_185, out a3_186, out a4_187, out a5_188) >u 63<i32> l2307AA7A
l2307AA7A:
l2307AA30:
	branch a2 > 32<i32> l2307AA6C
l2307AA3A:
	word32 s0_50
	word32 s1_51
	word32 s2_54
	word32 s3_55
	word32 s4_56
	word32 ra_49 = Bl_F_fast.constprop.0(ra, fp + -68<i32>, a0, a2, a0, a1, s4, mstatus, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, s3, dwArg68, dwArgA8, dwArgE8, dwArg0138, out s0_50, out s1_51, out s2_54, out s3_55, out s4_56)
	word32 a1_189
	word32 a2_190
	word32 a3_191
	word32 a4_192
	word32 a5_193
	word32 a6_194
	word32 a7_195
	memcpy(s0_50 + 20<i32>, s0_50, 0xC<32>, out a1_189, out a2_190, out a3_191, out a4_192, out a5_193, out a6_194, out a7_195)
	word32 s0_196
	word32 s1_197
	word32 s2_198
	word32 s3_199
	word32 s4_200
	Bl_F_fast.constprop.0(ra_49, fp + -68<i32>, s2_54, s1_51, s2_54, s3_55, s4_56, mstatus, dwLoc40, dwLoc3C, dwLoc18, dwArg0C, s3, dwArg68, dwArgA8, dwArgE8, dwArg0138, out s0_196, out s1_197, out s2_198, out s3_199, out s4_200)
l2307AA6C:
	return
utils_wifi_psk_cal_fast_bin_exit:


word32 utils_tlv_bl_pack_auto(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_main_cfg_task_req
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
utils_tlv_bl_pack_auto_entry:
l2307AA7E:
	word32 a5_12
	branch a2 == 1<32> l2307AA90
l2307AA90:
	a4 = CONVERT(Mem0[a3:byte], byte, word32)
l2307AA84:
	branch a2 == 7<32> l2307AAA2
l2307AAA2:
l2307AA94:
	a5_12 = 0xFFFFFFFF<32>
	branch a1 <= 3<32> l2307AA8C
l2307AA9C:
	Mem18[a4:word32] = a0
	a5_12 = 4<32>
l2307AA8A:
	a5_12 = 0xFFFFFFFE<32>
l2307AA8C:
	return a5_12
utils_tlv_bl_pack_auto_exit:


void utils_tlv_bl_unpack_auto(word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cfg_start_req_handler
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
utils_tlv_bl_unpack_auto_entry:
l2307AAA6:
	branch a2 == 1<32> l2307AAB6
l2307AAB6:
	word32 a5_12
	branch a1 <= 3<32> l2307AACA
l2307AACA:
	a5_12 = 1<32>
l2307AABC:
	a5_12 = CONVERT(true, bool, word32)
l2307AAC4:
	Mem16[a3:byte] = SLICE(a5_12, byte, 0)
	return
l2307AAAC:
	branch a2 == 7<32> l2307AAD0
l2307AAD0:
	word32 a5_18 = 3<32>
	branch a1 <= 3<32> l2307AADE
l2307AADE:
	a5_18 = 0<32>
l2307AAD6:
l2307AADA:
	Mem25[a5_18:word32] = a3
	return
l2307AAB2:
	return
utils_tlv_bl_unpack_auto_exit:


void utils_hmac_sha1_fast(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_F_fast.constprop.0
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
utils_hmac_sha1_fast_entry:
l2307AAE4:
	word32 s5_165 = a5
	word32 s2_113 = a3
	word32 s1_111 = a4
	branch a4 <= 64<i32> l2307AB3E
l2307AB22:
	bl_sha_init(ra, fp + -196<i32>, 2<32>, 64<i32>, dwLoc8C)
	word32 a4_62
	word32 s2_68
	word32 s5_71
	word32 a1_473
	word32 a2_474
	word32 s3_475
	word32 s4_476
	bl_sha_update(fp + -196<i32>, a3, a4, a5, dwLoc88, out a1_473, out a2_474, out a4_62, out s2_68, out s3_475, out s4_476, out s5_71)
	word32 s0_477
	word32 s1_478
	word32 s4_479
	word32 s6_480
	ra = bl_sha_finish(s2_68, a4_62, s5_71, dwLocA8, out s0_477, out s1_478, out s2_113, out s4_479, out s5_165, out s6_480)
	s1_111 = 0x14<32>
l2307AB3E:
	word32 t1_460
	word32 a4_465
	word32 a5_466
	word32 a0_461
	word32 a1_462
	word32 a2_463
	word32 a3_464
	word32 ra_108 = memset(ra, fp + -288<i32>, 0<32>, 64<i32>, out t1_460, out a0_461, out a1_462, out a2_463, out a3_464, out a4_465, out a5_466)
	word32 a4_469
	word32 a5_470
	word32 a6_471
	word32 a7_472
	word32 a1_467
	word32 a2_468
	word32 a3_121
	memcpy(fp + -288<i32>, s2_113, s1_111, out a1_467, out a2_468, out a3_121, out a4_469, out a5_470, out a6_471, out a7_472)
l2307AB64:
	word32 a5_136 = Mem135[a3_121:word32]
	Mem140[a5_136 + 0x1000<32>:word32] = a3_121 ^ 0x36363636<32>
	word32 a3_141 = Mem140[a5_136 + 4<32>:int32]
	Mem143[a5_136 + 0x1004<32>:word32] = a3_141 ^ 0x36363636<32>
	a3_121 = a3_141 ^ 0x36363636<32>
	branch a5_136 + 8<32> != fp + -224<i32> l2307AB64
l2307AB7C:
	bl_sha_init(ra_108, fp + -196<i32>, 2<32>, a5_136 + 8<32>, dwLoc8C)
	word32 s2_481
	word32 s3_482
	word32 a2_168
	word32 a1_167
	word32 s5_179
	word32 s4_178
	word32 a4_170
	bl_sha_update(fp + -196<i32>, fp + -288<i32>, 64<i32>, s5_165, dwLoc88, out a1_167, out a2_168, out a4_170, out s2_481, out s3_482, out s4_178, out s5_179)
	word32 s3_184 = 0<32>
l2307AB92:
	branch s3_184 < a2 l2307AC2E
l2307AC2E:
	word32 s2_483
	bl_sha_update(fp + -196<i32>, a1_167, a2_168, s5_179, dwLoc88, out a1_167, out a2_168, out a4_170, out s2_483, out s3_184, out s4_178, out s5_179)
l2307AB96:
	word32 s1_228
	word32 s2_229
	word32 s4_231
	word32 s5_232
	word32 a2_489
	word32 a3_490
	word32 a4_491
	word32 a5_492
	word32 s6_485
	word32 t1_486
	word32 a0_487
	word32 a1_488
	word32 s0_484
	word32 ra_246 = memset(bl_sha_finish(s4_178, a4_170, s5_179, dwLocA8, out s0_484, out s1_228, out s2_229, out s4_231, out s5_232, out s6_485), fp + -288<i32>, 0<32>, 64<i32>, out t1_486, out a0_487, out a1_488, out a2_489, out a3_490, out a4_491, out a5_492)
	word32 a6_497
	word32 a7_498
	word32 a1_493
	word32 a2_494
	word32 a3_495
	word32 a5_496
	word32 a4_252
	memcpy(fp + -288<i32>, s2_229, s1_228, out a1_493, out a2_494, out a3_495, out a4_252, out a5_496, out a6_497, out a7_498)
l2307ABBC:
	word32 s0_269 = Mem268[a4_252:word32]
	Mem273[s0_269 + 0x1000<32>:word32] = a4_252 ^ 0x5C5C5C5C<32>
	word32 a4_274 = Mem273[s0_269 + 4<32>:int32]
	Mem276[s0_269 + 0x1004<32>:word32] = a4_274 ^ 0x5C5C5C5C<32>
	a4_252 = a4_274 ^ 0x5C5C5C5C<32>
	branch s0_269 + 8<32> != s4_231 l2307ABBC
l2307ABD4:
	bl_sha_init(ra_246, fp + -196<i32>, 2<32>, 0x5C5C5C5C<32>, dwLoc8C)
	word32 s3_508
	word32 s2_511
	word32 s1_510
	word32 s5_311
	word32 a4_323
	word32 s5_332
	word32 s0_347
	word32 s5_352
	word32 s6_353
	word32 s4_509
	word32 a1_505
	word32 a2_506
	word32 s2_507
	word32 s3_503
	word32 s4_504
	word32 s2_502
	word32 a4_501
	word32 a1_499
	word32 a2_500
	word32 s4_512
	bl_sha_finish(bl_sha_update(fp + -196<i32>, bl_sha_update(fp + -196<i32>, fp + -288<i32>, 64<i32>, s5_232, dwLoc88, out a1_499, out a2_500, out a4_501, out s2_502, out s3_503, out s4_504, out s5_311), 0x14<32>, s5_311, dwLoc88, out a1_505, out a2_506, out a4_323, out s2_507, out s3_508, out s4_509, out s5_332), a4_323, s5_332, dwLocA8, out s0_347, out s1_510, out s2_511, out s4_512, out s5_352, out s6_353)
	word32 a1_513
	word32 a2_514
	word32 a3_515
	word32 a4_516
	word32 a5_517
	word32 a6_518
	word32 a7_519
	memcpy(s5_352, s0_347, s6_353, out a1_513, out a2_514, out a3_515, out a4_516, out a5_517, out a6_518, out a7_519)
	return
utils_hmac_sha1_fast_exit:


word32 vfs_init(word32 ra, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0178, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
vfs_init_entry:
l2307AC46:
	word32 a4_22 = CONVERT(Mem5[0x4200F6BC<32>:byte], byte, word32)
	word32 a5_14 = 0<32>
	branch a4_22 == 1<32> l2307AC84
l2307AC62:
	word32 a0_31
	word32 a2_115
	word32 s1_24 = xQueueCreateMutexStatic(1<32>, 0x4201B48C<32>, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0108, dwArg0138, dwArg0178, out a0_31, out a2_115, out a3, out a4_22)
	Mem42[0x42027930<32>:word32] = a0_31
	a5_14 = 0xFFFFFFFF<32>
	branch a0_31 == 0<32> l2307AC84
l2307AC7C:
	ra = inode_init(ra, out a3, out a4_22)
	Mem54[0x4200F6BC<32>:byte] = SLICE(s1_24, byte, 0)
	a5_14 = 0<32>
l2307AC84:
	a3Out = a3
	a4Out = a4_22
	a5Out = a5_14
	return ra
vfs_init_exit:


word32 aos_open(word32 ra, word32 a0, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArg88, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      cat_cmd
//      hexdump_cmd
//      aos_event_service_init
//      at_serial_open
//      get_romfs_file_content
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_open_entry:
l2307AC90:
	word32 s0_107
	branch a0 == 0<32> l2307AD44
l2307AD44:
	s0_107 = 0xFFFFFFEA<32>
l2307ACA0:
	s2 = a0
	s3 = a1
	a5 = 1024<i32>
	word32 a2_26
	word32 a5_370
	word32 a1_369
	branch strlen(a0, out a1_369, out a2_26, out a3, out a4, out a5_370) >u 1024<i32> l2307AD48
l2307AD48:
	s0_107 = 0xFFFFFFE6<32>
l2307ACB0:
	word32 a0_33
	word32 s4_374
	word32 s8_375
	word32 a2_372
	word32 a5_373
	word32 a1_371
	xQueueSemaphoreTake(Mem15[0x42026930<32>:int32], 0xFFFFFFFF<32>, a2_26, a3, a4, 1024<i32>, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1, out a0_33, out a1_371, out a2_372, out a3, out a4, out a5_373, out s2, out s3, out s4_374, out s8_375)
	a5 = 1<32>
	branch a0_33 != 1<32> l2307AD4C
l2307AD4C:
	s0_107 = 0xFFFFFFFF<32>
l2307ACC4:
	word32 a0_51
	word32 a2_53
	word32 a4_55
	word32 a5_56
	word32 s3_62
	word32 s4_63
	inode_open(s2, dwArg88, out a0_51, out a2_53, out a4_55, out a5_56, out s3_62, out s4_63)
	branch a0_51 != 0<32> l2307ACEE
l2307ACEE:
	Mem73[a0_51 + 12<i32>:word32] = s3_62
	word32 a5_78
	word32 s4_96
	word32 a0_376
	word32 a1_377
	word32 a2_378
	word32 a7_379
	word32 s5_380
	word32 s8_381
	xQueueGenericSend(Mem73[s4_63 + -1744<i32>:int32], 0<32>, 0<32>, new_file(a0_51, a2_53, out a5_78), a5_78, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1, out a0_376, out a1_377, out a2_378, out a3, out a4, out a5, out a7_379, out s2, out s3, out s4_96, out s5_380, out s6, out s8_381)
	branch s1 == 0<32> l2307AD50
l2307AD50:
	s0_107 = 0xFFFFFFE9<32>
l2307AD06:
	word32 a0_121
	word32 s0_108 = Mem73[a5:word32]
	a3 = CONVERT(Mem73[s0_108 + 16<i32>:byte], byte, word32)
	a4 = 3<32>
	word32 a5_111 = Mem73[a5:word32]
	branch a3 != 3<32> l2307AD28
l2307AD28:
	branch a5_111 == 0<32> l2307AD32
l2307AD2A:
	word32 a5_123
	word32 tp_131
	word32 a7_132
	word32 s5_133
	word32 t1_135
	word32 t0_136
	word32 t2_137
	word32 t4_138
	word32 t5_139
	word32 t6_140
	call a5_111 (retsize: 0;)
		uses: a0:s0_108,a1:s1_93,a3:a3_124,a4:a4_129,a5:a5_123,a7:a7_132,mstatus:mstatus,ra:ra,s0:s0_108,s1:s1_93,s2:s2_94,s3:s3_95,s4:s4_96,s5:s5_133,s6:s6_134,Stack +0024:dwArg04,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +0118:dwArgF8,Stack +0158:dwArg0138,Stack +0198:dwArg0178,t0:t0_136,t1:t1_135,t2:t2_137,t4:t4_138,t5:t5_139,t6:t6_140,tp:tp_131
		defs: a0:a0_121,a3:a3_124,a4:a4_129,a5:a5_123,a7:a7_132,mstatus:mstatus_130,ra:ra_115,s1:s1_117,s2:s2_118,s3:s3_119,s5:s5_133,s6:s6_134,t0:t0_136,t1:t1_135,t2:t2_137,t4:t4_138,t5:t5_139,t6:t6_140,tp:tp_131
l2307AD14:
	branch a5_111 == 0<32> l2307AD32
l2307AD16:
	word32 a5_153
	word32 tp_161
	word32 a7_162
	word32 s5_163
	word32 t1_165
	word32 t0_166
	word32 t2_167
	word32 t4_168
	word32 t5_169
	word32 t6_170
	call a5_111 (retsize: 0;)
		uses: a0:s1_93,a1:s2_94,a2:s3_95,a3:a3_154,a4:a4_159,a5:a5_153,a7:a7_162,mstatus:mstatus,ra:ra,s0:s0_108,s1:s1_93,s2:s2_94,s3:s3_95,s4:s4_96,s5:s5_163,s6:s6_164,Stack +0024:dwArg04,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +0118:dwArgF8,Stack +0158:dwArg0138,Stack +0198:dwArg0178,t0:t0_166,t1:t1_165,t2:t2_167,t4:t4_168,t5:t5_169,t6:t6_170,tp:tp_161
		defs: a0:a0_151,a3:a3_154,a4:a4_159,a5:a5_153,a7:a7_162,mstatus:mstatus_160,ra:ra_145,s1:s1_147,s2:s2_148,s3:s3_149,s5:s5_163,s6:s6_164,t0:t0_166,t1:t1_165,t2:t2_167,t4:t4_168,t5:t5_169,t6:t6_170,tp:tp_161
l2307AD1E:
	s0_107 = a0_121
	branch a0_121 == 0<32> l2307AD32
l2307AD32:
l2307AD42_thunk_get_fd:
	word32 a5_188
	word32 a0_187 = get_fd(s1, out a5_188)
	s0Out = <invalid>
	s1Out = s1
	a0Out = a0_187
	a2Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = a5_188
	s2Out = s2
	s3Out = s3
	s6Out = s6
	mstatusOut = mstatus
	return ra
l2307AD22:
	a5 = del_file(s1)
l2307ACCC:
	word32 a0_382
	word32 a1_383
	word32 a2_384
	word32 a7_385
	word32 s4_386
	word32 s5_387
	word32 s8_388
	xQueueGenericSend(Mem15[s4_63 + -1744<i32>:int32], 0<32>, 0<32>, a4_55, a5_56, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1, out a0_382, out a1_383, out a2_384, out a3, out a4, out a5, out a7_385, out s2, out s3, out s4_386, out s5_387, out s6, out s8_388)
	s0_107 = 0xFFFFFFFE<32>
l2307ACDC:
	s0Out = <invalid>
	s1Out = s1
	a0Out = s0_107
	a2Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s6Out = s6
	mstatusOut = mstatus
	return ra
aos_open_exit:


word32 aos_close(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg38, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cat_cmd
//      hexdump_cmd
//      at_server_init
//      get_romfs_file_content
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0038:[0..31]
// LiveOut: a2 a4 a5 s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 sp
aos_close_entry:
l2307AD54:
	word32 sp_22 = fp + 0xFFFFFFF0<32>
	word32 a5_126
	branch get_file(a0, out a5_126) == 0<32> l2307AD9A
l2307AD64:
	word32 a0_17 = Mem11[a4:word32]
	word32 a4_20 = Mem11[a5_126:word32]
	word32 a5_21 = Mem11[a5_126 + 4<i32>:word32]
	branch a5_21 == 0<32> l2307AD74
l2307AD70:
	word32 a1_32
	word32 a6_109
	word32 s3_110
	word32 s4_111
	word32 s8_112
	word32 t3_113
	word32 a7_114
	word32 s5_115
	word32 t0_117
	word32 t1_118
	word32 t4_119
	word32 t5_120
	word32 t6_121
	call a5_21 (retsize: 0;)
		uses: a0:a0_17,a1:a1_32,a2:a2_30,a3:a3_33,a4:a4_20,a6:a6_109,a7:a7_114,mstatus:mstatus,ra:ra,s0:0<32>,s1:a0_17,s2:s2,s3:s3_110,s4:s4_111,s5:s5_115,s6:s6_116,s8:s8_112,t0:t0_117,t1:t1_118,t3:t3_113,t4:t4_119,t5:t5_120,t6:t6_121
		defs: a1:a1_32,a2:a2_30,a3:a3_33,a4:a4_28,a5:a5_29,a6:a6_109,a7:a7_114,s3:s3_110,s4:s4_111,s5:s5_115,s6:s6_116,s8:s8_112,sp:sp_22,t0:t0_117,t1:t1_118,t3:t3_113,t4:t4_119,t5:t5_120,t6:t6_121
l2307AD74:
	word32 a0_48
	word32 a1_183
	word32 a2_184
	word32 a3_185
	word32 a5_186
	word32 s4_187
	word32 s8_188
	xQueueSemaphoreTake(Mem11[0x42026930<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4_20, a5_21, mstatus, Mem11[sp_22 + 8<i32>:word32], Mem11[sp_22 + 36<i32>:word32], Mem11[sp_22 + 164<i32>:word32], Mem11[sp_22 + 280<i32>:word32], Mem11[sp_22 + 344<i32>:word32], out s1, out a0_48, out a1_183, out a2_184, out a3_185, out a4, out a5_186, out s2, out s3, out s4_187, out s8_188)
	a5_126 = 1<32>
	branch a0_48 != 1<32> l2307ADA8
l2307ADA8:
l2307AD88:
	word32 a0_189
	word32 a1_190
	word32 a2_191
	word32 a3_192
	word32 a7_193
	word32 s4_194
	word32 s5_195
	word32 s8_196
	xQueueGenericSend(Mem11[s2 + -1744<i32>:int32], 0<32>, 0<32>, a4, del_file(s1), mstatus, Mem11[sp_22 + 8<i32>:word32], Mem11[sp_22 + 36<i32>:word32], Mem11[sp_22 + 164<i32>:word32], Mem11[sp_22 + 280<i32>:word32], Mem11[sp_22 + 344<i32>:word32], Mem11[sp_22 + 408<i32>:word32], out s1, out a0_189, out a1_190, out a2_191, out a3_192, out a4, out a5_126, out a7_193, out s2, out s3, out s4_194, out s5_195, out s6, out s8_196)
l2307AD9A:
	0<32> = dwArg38
	a2Out = dwArg10
	a4Out = a4
	a5Out = a5_126
	s2Out = s2
	s3Out = s3
	s6Out = s6
	return s1
aos_close_exit:


word32 aos_read(word32 ra, word32 a0, word32 a1, word32 a4, word32 dwArg00, word32 dwArg44, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cat_cmd
//      console_cb_read
//      event_read_cb
//      at_serial_read
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a1 ra s0
// Trashed: a0 a1 a2 a4 a5 ra s0 t1 t3
// Preserved: sp
aos_read_entry:
l2307ADAC:
	word32 a0_13
	word32 a5_12
	branch get_file(a0, out a5_12) == 0<32> l2307ADCE
l2307ADCE:
	a0_13 = 0xFFFFFFFE<32>
l2307ADB8:
	word32 a0_14 = Mem9[a5_12:word32]
	s0 = a1
	word32 t1_19 = Mem9[a4 + 8<i32>:int32]
	branch t1_19 == 0<32> l2307ADD6
l2307ADD6:
	a0_13 = 0xFFFFFFFF<32>
l2307ADD0:
	s0Out = s0
	a0Out = a0_13
	a1Out = a1
	return ra
l2307ADC8:
	word32 ra_28
	word32 a1_29
	word32 a0_31
	word32 s0_33
	word32 t1_35
	call t1_19 (retsize: 0;)
		uses: a0:a0_14,a1:a1,a2:dwArg44,a4:a4,ra:ra,s0:s0_33,Stack +0000:dwArg00,Stack +0044:dwArg44,t1:t1_35,t3:dwArg00
		defs: a0:a0_31,a1:a1_29,ra:ra_28,s0:s0_33,t1:t1_35
	s0Out = s0_33
	a0Out = a0_31
	a1Out = a1_29
	return ra_28
aos_read_exit:


word32 aos_write(word32 ra, word32 a0, word32 a1, word32 a4, word32 dwArg00, word32 dwArg44, ptr32 & t1Out, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cli_putstr
//      at_serial_write
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a1 a4 a5 ra s0 t1
// Trashed: a0 a1 a2 a4 a5 ra s0 t1 t3
// Preserved: sp
aos_write_entry:
l2307ADDA:
	word32 a0_13
	word32 a5_12
	branch get_file(a0, out a5_12) == 0<32> l2307ADFC
l2307ADFC:
	a0_13 = 0xFFFFFFFE<32>
l2307ADE6:
	word32 a0_14 = Mem9[a5_12:word32]
	s0 = a1
	a5_12 = Mem9[a4:word32]
	t1 = Mem9[a4 + 12<i32>:int32]
	branch t1 == 0<32> l2307AE04
l2307AE04:
	a0_13 = 0xFFFFFFFF<32>
l2307ADFE:
	t1Out = t1
	s0Out = s0
	a0Out = a0_13
	a1Out = a1
	a4Out = a4
	a5Out = a5_12
	return ra
l2307ADF6:
	word32 ra_28
	word32 a1_29
	word32 a0_31
	word32 a5_32
	word32 s0_33
	word32 a4_34
	word32 t1_35
	call t1 (retsize: 0;)
		uses: a0:a0_14,a1:a1,a2:dwArg44,a4:a4,ra:ra,s0:s0_33,Stack +0000:dwArg00,Stack +0044:dwArg44,t1:t1_35,t3:dwArg00
		defs: a0:a0_31,a1:a1_29,a4:a4_34,a5:a5_32,ra:ra_28,s0:s0_33,t1:t1_35
	t1Out = t1_35
	s0Out = s0_33
	a0Out = a0_31
	a1Out = a1_29
	a4Out = a4_34
	a5Out = a5_32
	return ra_28
aos_write_exit:


word32 aos_ioctl(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 dwArg00, word32 dwArg44, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hexdump_cmd
//      aos_post_event
//      at_key_value_set
//      get_romfs_file_content
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 t1 t3
// Preserved: sp
aos_ioctl_entry:
l2307AE08:
	branch a0 < 0<32> l2307AE3E
l2307AE3E:
	s0Out = s0
	a0Out = 0xFFFFFFEA<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	return ra
l2307AE0C:
	word32 a0_14
	word32 a5_13
	branch get_file(a0, out a5_13) == 0<32> l2307AE42
l2307AE42:
	a0_14 = 0xFFFFFFFE<32>
l2307AE18:
	word32 t1_22
	word32 a0_16 = Mem11[a4:word32]
	s0 = dwArg44
	a3 = CONVERT(Mem11[a4 + 16<i32>:byte], byte, word32)
	a4 = 3<32>
	branch a3 != 3<32> l2307AE38
l2307AE38:
	t1_22 = Mem11[a5_13 + 16<i32>:int32]
l2307AE2A:
	t1_22 = Mem11[a5_13 + 68<i32>:int32]
l2307AE2E:
	branch t1_22 == 0<32> l2307AE4A
l2307AE4A:
	a0_14 = -71<i32>
l2307AE44:
	s0Out = s0
	a0Out = a0_14
	a2Out = a2
	a3Out = a3
	a4Out = a4
	return ra
l2307AE32:
	word32 a0_40
	word32 ra_41
	word32 a2_42
	word32 a4_44
	word32 s0_45
	word32 a3_46
	word32 a5_47
	word32 t1_48
	call t1_22 (retsize: 0;)
		uses: a0:a0_16,a1:a1,a2:a2,a3:a3_46,a4:3<32>,a5:a5_47,ra:ra,s0:s0_45,Stack +0000:dwArg00,Stack +0044:dwArg44,t1:t1_48,t3:dwArg00
		defs: a0:a0_40,a2:a2_42,a3:a3_46,a4:a4_44,a5:a5_47,ra:ra_41,s0:s0_45,t1:t1_48
	s0Out = s0_45
	a0Out = a0_40
	a2Out = a2_42
	a3Out = a3_46
	a4Out = a4_44
	return ra_41
aos_ioctl_exit:


word32 aos_stat(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArg88, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a5 mstatus ra s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_stat_entry:
l2307AE50:
	word32 sp_113 = fp + 0xFFFFFFE0<32>
	word32 s0_104 = 0xFFFFFFEA<32>
	branch a0 == 0<32> l2307AE80
l2307AE64:
	word32 a0_31
	word32 s1_39
	word32 s8_347
	word32 a5_344
	word32 s2_345
	word32 s4_346
	word32 a1_341
	word32 a2_342
	word32 a4_343
	s2 = xQueueSemaphoreTake(Mem17[0x42026930<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_39, out a0_31, out a1_341, out a2_342, out a3, out a4_343, out a5_344, out s2_345, out s3, out s4_346, out s8_347)
	branch a0_31 == 1<32> l2307AE94
l2307AE94:
	word32 a0_49
	word32 a2_51
	word32 a4_53
	word32 a5_54
	word32 s3_348
	word32 s4_349
	word32 s0_57 = inode_open(s1_39, dwArg88, out a0_49, out a2_51, out a4_53, out a5_54, out s3_348, out s4_349)
	branch a0_49 != 0<32> l2307AEAE
l2307AEAE:
	word32 a5_75
	word32 s1_90
	word32 s4_93
	word32 a0_350
	word32 a1_351
	word32 a4_352
	word32 a7_353
	word32 s8_354
	word32 a2_127
	xQueueGenericSend(Mem17[s0_57 + -1744<i32>:int32], 0<32>, 0<32>, new_file(a0_49, a2_51, out a5_75), a5_75, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_90, out a0_350, out a1_351, out a2_127, out a3, out a4_352, out a5, out a7_353, out s2, out s3, out s4_93, out s5, out s6, out s8_354)
	s0_104 = 0xFFFFFFFE<32>
	branch s3 == 0<32> l2307AE80
l2307AEC6:
	word32 a4_105 = CONVERT(Mem17[s5 + 16<i32>:byte], byte, word32)
	word32 a5_106 = 3<32>
	branch a4_105 != 3<32> l2307AEE6
l2307AED4:
	a5_106 = Mem17[Mem17[s5:int32] + 24<i32>:word32]
	branch a5_106 == 0<32> l2307AEE6
l2307AEDC:
	word32 a7_132
	word32 t1_134
	word32 t0_135
	word32 t2_136
	word32 t4_137
	word32 t5_138
	word32 t6_139
	call a5_106 (retsize: 0;)
		uses: a0:s3_92,a1:s1_90,a2:s4_93,a3:a3_84,a4:a4_105,a5:a5_109,a7:a7_132,mstatus:mstatus,ra:ra,s0:-71<i32>,s1:s1_90,s2:s2_91,s3:s3_92,s4:s4_93,s5:s5_94,s6:s6_133,Stack +0024:dwArg04,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +0118:dwArgF8,Stack +0158:dwArg0138,Stack +0198:dwArg0178,t0:t0_135,t1:t1_134,t2:t2_136,t4:t4_137,t5:t5_138,t6:t6_139
		defs: a2:a2_127,a3:a3_129,a4:a4_130,a5:a5_123,a7:a7_132,mstatus:mstatus_131,ra:ra_115,s2:s2_117,s5:s5_120,s6:s6_133,sp:sp_113,t0:t0_135,t1:t1_134,t2:t2_136,t4:t4_137,t5:t5_138,t6:t6_139
l2307AEE6:
	word32 a0_151
	word32 a4_155
	word32 s1_363
	word32 a1_364
	word32 a2_365
	word32 a5_366
	word32 s4_367
	word32 s8_368
	xQueueSemaphoreTake(Mem17[s2 + -1744<i32>:int32], 0xFFFFFFFF<32>, a2_127, a3, a4_105, a5_106, mstatus, Mem17[sp_113 + 8<i32>:word32], Mem17[sp_113 + 36<i32>:word32], Mem17[sp_113 + 164<i32>:word32], Mem17[sp_113 + 280<i32>:word32], Mem17[sp_113 + 344<i32>:word32], out s1_363, out a0_151, out a1_364, out a2_365, out a3, out a4_155, out a5_366, out s2, out s3, out s4_367, out s8_368)
	branch a0_151 != 1<32> l2307AE7E
l2307AEF6:
	word32 s1_369
	word32 a0_370
	word32 a1_371
	word32 a2_372
	word32 a4_373
	word32 a7_374
	word32 s4_375
	word32 s8_376
	s0_104 = xQueueGenericSend(Mem17[s2 + -1744<i32>:int32], 0<32>, 0<32>, a4_155, del_file(s3), mstatus, Mem17[sp_113 + 8<i32>:word32], Mem17[sp_113 + 36<i32>:word32], Mem17[sp_113 + 164<i32>:word32], Mem17[sp_113 + 280<i32>:word32], Mem17[sp_113 + 344<i32>:word32], Mem17[sp_113 + 408<i32>:word32], out s1_369, out a0_370, out a1_371, out a2_372, out a3, out a4_373, out a5, out a7_374, out s2, out s3, out s4_375, out s5, out s6, out s8_376)
l2307AE9C:
	word32 s1_355
	word32 a0_356
	word32 a1_357
	word32 a2_358
	word32 a4_359
	word32 a7_360
	word32 s4_361
	word32 s8_362
	xQueueGenericSend(Mem17[s0_57 + -1744<i32>:int32], 0<32>, 0<32>, a4_53, a5_54, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_355, out a0_356, out a1_357, out a2_358, out a3, out a4_359, out a5, out a7_360, out s2, out s3, out s4_361, out s5, out s6, out s8_362)
	s0_104 = 0xFFFFFFED<32>
l2307AE7E:
	a5 = 1<32>
	s0_104 = 0xFFFFFFFF<32>
l2307AE80:
	a0Out = s0_104
	a3Out = a3
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
aos_stat_exit:


word32 aos_opendir(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArg88, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_opendir_entry:
l2307AF0A:
	word32 s0_132
	word32 sp_105 = fp + 0xFFFFFFE0<32>
	branch a0 != 0<32> l2307AF1E
l2307AF1E:
	word32 a0_27
	word32 s1_35
	word32 s3_336
	word32 s4_337
	word32 s8_338
	word32 a4_333
	word32 a5_334
	word32 s2_335
	word32 a1_331
	word32 a2_332
	xQueueSemaphoreTake(Mem15[0x42026930<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_35, out a0_27, out a1_331, out a2_332, out a3, out a4_333, out a5_334, out s2_335, out s3_336, out s4_337, out s8_338)
	branch a0_27 != 1<32> l2307AF1A
l2307AF36:
	word32 a0_44
	word32 a2_46
	word32 a4_48
	word32 a5_49
	word32 s3_55
	word32 s4_339
	inode_open(s1_35, dwArg88, out a0_44, out a2_46, out a4_48, out a5_49, out s3_55, out s4_339)
	branch a0_44 != 0<32> l2307AF5E
l2307AF5E:
	word32 a5_70
	word32 s1_85
	word32 s2_86
	word32 s3_87
	word32 a4_342
	word32 a5_343
	word32 a7_344
	word32 a0_340
	word32 a1_341
	word32 s5_345
	word32 s6_346
	word32 s8_347
	word32 s4_111
	word32 a2_116
	word32 s0_84 = xQueueGenericSend(Mem15[s3_55 + -1744<i32>:int32], 0<32>, 0<32>, new_file(a0_44, a2_46, out a5_70), a5_70, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_85, out a0_340, out a1_341, out a2_116, out a3, out a4_342, out a5_343, out a7_344, out s2_86, out s3_87, out s4_111, out s5_345, out s6_346, out s8_347)
	branch s2_86 == 0<32> l2307AF1A
l2307AF74:
	word32 a4_120 = CONVERT(Mem15[s0_84 + 16<i32>:byte], byte, word32)
	word32 a5_100 = 3<32>
	branch a4_120 == 3<32> l2307AFA2
l2307AFA2:
	word32 s0_101 = Mem15[3<32>:word32]
	a5_100 = Mem15[0x27<32>:word32]
	branch a5_100 == 0<32> l2307AF7E
l2307AFA8:
	word32 s2_109
	word32 a0_112
	word32 tp_122
	word32 a7_123
	word32 s5_124
	word32 s6_125
	word32 t1_126
	word32 t0_127
	word32 t2_128
	word32 t4_129
	word32 t5_130
	word32 t6_131
	call a5_100 (retsize: 0;)
		uses: a0:s2_86,a1:s1_85,a2:a2_78,a3:a3_79,a4:a4_99,a5:a5_102,a7:a7_123,mstatus:mstatus,ra:ra,s0:s0_101,s1:s1_85,s2:s2_86,s3:s3_87,s4:s4_88,s5:s5_124,s6:s6_125,Stack +0024:dwArg04,Stack +00A4:dwArg84,Stack +00A8:dwArg88,Stack +0118:dwArgF8,Stack +0158:dwArg0138,Stack +0198:dwArg0178,t0:t0_127,t1:t1_126,t2:t2_128,t4:t4_129,t5:t5_130,t6:t6_131,tp:tp_122
		defs: a0:a0_112,a2:a2_116,a3:a3_115,a4:a4_120,a5:a5_114,a7:a7_123,mstatus:mstatus_121,ra:ra_106,s2:s2_109,s4:s4_111,s5:s5_124,s6:s6_125,sp:sp_105,t0:t0_127,t1:t1_126,t2:t2_128,t4:t4_129,t5:t5_130,t6:t6_131,tp:tp_122
	s0_132 = a0_112
	branch a0_112 == 0<32> l2307AF7E
l2307AFB2:
	word32 a5_380
	Mem136[get_fd(s2_109, out a5_380):word32] = a0_112
l2307AF7E:
	word32 a0_147
	word32 a4_151
	word32 s2_156
	word32 s4_158
	word32 s1_361
	word32 a1_362
	word32 a2_363
	word32 a5_364
	word32 s3_365
	word32 s8_366
	xQueueSemaphoreTake(Mem15[s4_111 + -1744<i32>:int32], 0xFFFFFFFF<32>, a2_116, a3, a4_120, a5_100, mstatus, Mem15[sp_105 + 8<i32>:word32], Mem15[sp_105 + 36<i32>:word32], Mem15[sp_105 + 164<i32>:word32], Mem15[sp_105 + 280<i32>:word32], Mem15[sp_105 + 344<i32>:word32], out s1_361, out a0_147, out a1_362, out a2_363, out a3, out a4_151, out a5_364, out s2_156, out s3_365, out s4_158, out s8_366)
	branch a0_147 != 1<32> l2307AF1A
l2307AF8E:
	word32 s1_367
	word32 a0_368
	word32 a1_369
	word32 a2_370
	word32 a4_371
	word32 a5_372
	word32 a7_373
	word32 s2_374
	word32 s3_375
	word32 s4_376
	word32 s5_377
	word32 s6_378
	word32 s8_379
	xQueueGenericSend(Mem15[s4_158 + -1744<i32>:int32], 0<32>, 0<32>, a4_151, del_file(s2_156), mstatus, Mem15[sp_105 + 8<i32>:word32], Mem15[sp_105 + 36<i32>:word32], Mem15[sp_105 + 164<i32>:word32], Mem15[sp_105 + 280<i32>:word32], Mem15[sp_105 + 344<i32>:word32], Mem15[sp_105 + 408<i32>:word32], out s1_367, out a0_368, out a1_369, out a2_370, out a3, out a4_371, out a5_372, out a7_373, out s2_374, out s3_375, out s4_376, out s5_377, out s6_378, out s8_379)
l2307AF3E:
	word32 s1_348
	word32 a0_349
	word32 a1_350
	word32 a2_351
	word32 a4_352
	word32 a5_353
	word32 a7_354
	word32 s2_355
	word32 s3_356
	word32 s4_357
	word32 s5_358
	word32 s6_359
	word32 s8_360
	s0_132 = xQueueGenericSend(Mem15[s3_55 + -1744<i32>:int32], 0<32>, 0<32>, a4_48, a5_49, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_348, out a0_349, out a1_350, out a2_351, out a3, out a4_352, out a5_353, out a7_354, out s2_355, out s3_356, out s4_357, out s5_358, out s6_359, out s8_360)
l2307AF1A:
	s0_132 = 0<32>
l2307AF4C:
	s0Out = s1
	a0Out = s0_132
	a3Out = a3
	mstatusOut = mstatus
	return ra
aos_opendir_exit:


word32 aos_closedir(word32 ra, word32 a0, word32 s2, word32 mstatus, word32 dwArg44, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0044:[0..31]
// LiveOut: a2 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra sp
aos_closedir_entry:
l2307AFBA:
	word32 sp_28 = fp + 0xFFFFFFE0<32>
	word32 s0_103 = 0xFFFFFFEA<32>
	branch a0 == 0<32> l2307B018
l2307AFC8:
	s0_103 = 0xFFFFFFFE<32>
	word32 a0_18 = get_file(Mem11[a0:word32], out a5)
	branch a0_18 == 0<32> l2307B018
l2307AFD6:
	word32 a0_21 = Mem16[a5:word32]
	word32 a4_22 = 3<32>
	word32 a3_24 = CONVERT(Mem16[a5 + 16<i32>:byte], byte, word32)
	word32 a2_25 = dwArg44
	branch a3_24 != 3<32> l2307AFF2
l2307AFE8:
	a5 = Mem16[Mem16[a5:word32] + 44<i32>:word32]
	branch a5 == 0<32> l2307AFF2
l2307AFEE:
	word32 a1_34
	word32 s3_119
	word32 tp_120
	word32 a7_121
	word32 s5_122
	word32 s6_123
	word32 t0_124
	word32 t1_125
	word32 t4_126
	word32 t5_127
	word32 t6_128
	call a5 (retsize: 0;)
		uses: a0:a0_21,a1:a1_34,a2:a2_38,a3:a3_37,a4:a4_36,a5:a5_35,a7:a7_121,mstatus:mstatus,ra:ra,s0:-71<i32>,s1:a0_18,s2:s2,s3:s3_119,s5:s5_122,s6:s6_123,Stack +0064:dwArg44,t0:t0_124,t1:t1_125,t4:t4_126,t5:t5_127,t6:t6_128,tp:tp_120
		defs: a1:a1_34,a2:a2_38,a3:a3_37,a4:a4_36,a5:a5_35,a7:a7_121,s3:s3_119,s5:s5_122,s6:s6_123,sp:sp_28,t0:t0_124,t1:t1_125,t4:t4_126,t5:t5_127,t6:t6_128,tp:tp_120
l2307AFF2:
	word32 a0_55
	word32 a4_59
	word32 s1_63
	word32 s2_64
	word32 s4_190
	word32 s8_191
	word32 a5_188
	word32 s3_189
	word32 a1_186
	word32 a3_187
	xQueueSemaphoreTake(Mem16[0x42026930<32>:int32], 0xFFFFFFFF<32>, a2_25, a3_24, a4_22, a5, mstatus, Mem16[sp_28 + 8<i32>:word32], Mem16[sp_28 + 36<i32>:word32], Mem16[sp_28 + 164<i32>:word32], Mem16[sp_28 + 280<i32>:word32], Mem16[sp_28 + 344<i32>:word32], out s1_63, out a0_55, out a1_186, out a2, out a3_187, out a4_59, out a5_188, out s2_64, out s3_189, out s4_190, out s8_191)
	a5 = 1<32>
	branch a0_55 != 1<32> l2307B026
l2307B026:
	s0_103 = 0xFFFFFFFF<32>
l2307B006:
	word32 s1_192
	word32 a0_193
	word32 a1_194
	word32 a3_195
	word32 a4_196
	word32 a7_197
	word32 s2_198
	word32 s3_199
	word32 s4_200
	word32 s5_201
	word32 s6_202
	word32 s8_203
	s0_103 = xQueueGenericSend(Mem16[s2_64 + -1744<i32>:int32], 0<32>, 0<32>, a4_59, del_file(s1_63), mstatus, Mem16[sp_28 + 8<i32>:word32], Mem16[sp_28 + 36<i32>:word32], Mem16[sp_28 + 164<i32>:word32], Mem16[sp_28 + 280<i32>:word32], Mem16[sp_28 + 344<i32>:word32], Mem16[sp_28 + 408<i32>:word32], out s1_192, out a0_193, out a1_194, out a2, out a3_195, out a4_196, out a5, out a7_197, out s2_198, out s3_199, out s4_200, out s5_201, out s6_202, out s8_203)
l2307B018:
	a2Out = a2
	a5Out = a5
	return s0_103
aos_closedir_exit:


word32 aos_readdir(word32 ra, word32 a0, word32 dwArg00, word32 dwArg44, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t1 t3
// Preserved: sp
aos_readdir_entry:
l2307B02A:
	branch a0 == 0<32> l2307B060
l2307B060:
	a0Out = 0<32>
	return ra
l2307B02C:
	word32 a5_12
	branch get_file(Mem7[a0:word32], out a5_12) == 0<32> l2307B058
l2307B03A:
	word32 a0_13 = Mem10[a5_12:word32]
	branch CONVERT(Mem10[a5_12 + 16<i32>:byte], byte, word32) != 3<32> l2307B058
l2307B046:
	word32 t1_17 = Mem10[Mem10[a5_12:word32] + 40<i32>:int32]
	branch t1_17 == 0<32> l2307B058
l2307B058:
	a0Out = 0<32>
	return ra
l2307B050:
	word32 a0_27
	word32 ra_28
	word32 a1_29
	word32 a5_30
	word32 a4_31
	word32 a3_32
	word32 t1_33
	call t1_17 (retsize: 0;)
		uses: a0:a0_13,a1:a1_29,a2:dwArg44,a3:a3_32,a4:a4_31,a5:a5_30,ra:ra,Stack +0000:dwArg00,Stack +0044:dwArg44,t1:t1_33,t3:dwArg00
		defs: a0:a0_27,a1:a1_29,a3:a3_32,a4:a4_31,a5:a5_30,ra:ra_28,t1:t1_33
	a0Out = a0_27
	return ra_28
aos_readdir_exit:


word32 new_file(word32 a0, word32 a2, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_stat
//      aos_opendir
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
new_file_entry:
l2307B064:
	word32 a5_10 = 0xC<32>
l2307B07C:
	word32 a4_18
	word32 a4_15 = Mem9[a2:word32]
	branch a2 != 0<32> l2307B09E
l2307B09E:
	a5_10 = a5_10 + 1<32>
	a4_18 = a4_15 + 0xC<32>
	branch a5_10 != 0x30<32> l2307B07C
l2307B0A6:
l2307B080:
	word32 a5_22 = a5_10 + 0<32>
	Mem27[a0:word32] = a5_22 + 0x4201B4DC<32>
	Mem28[a5_22 + 0x4201B4E0<32>:word32] = 0<32>
	Mem29[a5_22 + 0x4201B4E4<32>:word32] = 0<32>
	a4_18 = 0xC<32>
	a5_10 = inode_ref(a0)
l2307B094:
	a5Out = a5_10
	return a4_18
new_file_exit:


word32 del_file(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_close
//      aos_stat
//      aos_opendir
//      aos_closedir
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a2 a5
// Preserved: s0 sp
del_file_entry:
l2307B0AA:
	word32 a5_11 = inode_unref(Mem7[a0:word32])
	Mem13[a0:word32] = 0<32>
	return a5_11
del_file_exit:


word32 get_fd(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_opendir
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
get_fd_entry:
l2307B0C2:
	a5Out = 0xAAAAAAAB<32>
	return (a0 - 0x4201B4DC<32> >> 2<i32>) + 0xAAAAAAAD<32>
get_fd_exit:


word32 get_file(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_close
//      aos_ioctl
//      aos_closedir
//      aos_readdir
//      aos_poll
//      at_serial_write
//      at_serial_read
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
get_file_entry:
l2307B0DE:
	word32 a0_15
	word32 a5_12 = 59<i32>
	branch a0 >u 0xFFFFFFC3<32> l2307B100
l2307B100:
	a0_15 = 0<32>
l2307B0E8:
	a0_15 = a0 + 0xA<32>
	a5_12 = Mem0[a0 + 0xA<32>:word32]
	branch a0 == 0xA<32> l2307B102
l2307B102:
	a5Out = a5_12
	return a0_15
l2307B0FC:
	a5Out = a5_12
	return a5_12
get_file_exit:


word32 inode_init(word32 ra, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_init
// MayUse:  ra:[0..31]
// LiveOut: a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
inode_init_entry:
l2307B104:
	word32 a3_13
	word32 a4_14
	word32 t1_26
	word32 a0_27
	word32 a1_28
	word32 a2_29
	word32 a5_30
	word32 ra_16 = memset(ra, 0x4201B7AC<32>, 0<32>, 600<i32>, out t1_26, out a0_27, out a1_28, out a2_29, out a3_13, out a4_14, out a5_30)
	a3Out = a3_13
	a4Out = a4_14
	return ra_16
inode_init_exit:


word32 inode_alloc(ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      inode_reserve
// MayUse: 
// LiveOut: a0 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
inode_alloc_entry:
l2307B122:
	word32 a5_12 = 0x4201B7BC<32>
	word32 a0_10 = 0<32>
l2307B12E:
	branch CONVERT(Mem0[a5_12 + 0<i32>:byte], byte, word32) == 0<32> l2307B13E
l2307B134:
	a0_10 = a0_10 + 1<32>
	a5_12 = a5_12 + 0x14<32>
	branch a0_10 != 0x1E<32> l2307B12E
l2307B13C:
	a0_10 = 0xFFFFFFF4<32>
l2307B13E:
	a4Out = 0x1E<32>
	return a0_10
inode_alloc_exit:


word32 inode_open(word32 a0, word32 dwArgA8, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_open
//      aos_stat
//      aos_opendir
// MayUse:  a0:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a2 a4 a5 s0 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 tp
// Preserved: sp
inode_open_entry:
l2307B140:
	word32 s0_27 = 0x4201B7AC<32>
	a0_107 = a0
l2307B166:
	word32 a0_107
	word32 s2_29 = Mem21[s0_27 + 8<i32>:int32]
	word32 s3_30 = s0_27
	branch s2_29 != 0<32> l2307B18E
l2307B18E:
	branch CONVERT(Mem21[s0_27 + 16<i32>:byte], byte, word32) == 3<32> l2307B1A2
l2307B1A2:
	word32 a1_199
	word32 a2_200
	word32 a3_201
	word32 a4_202
	word32 a5_203
	word32 a3_204
	word32 a4_205
	word32 a5_206
	a0_107 = strncmp(s2_29, a0, strlen(s2_29, out a1_199, out a2_200, out a3_201, out a4_202, out a5_203), out a3_204, out a4_205, out a5_206)
	branch a0_107 != 0<32> l2307B196
l2307B1B4:
	word32 a1_210
	word32 a2_211
	word32 a3_212
	word32 a5_213
	a0_107 = strlen(a0_107, out a1_210, out a2_211, out a3_212, out a4, out a5_213) + a0
	a5 = CONVERT(Mem21[a0_107:byte], byte, word32)
	branch a5 != 47<i32> l2307B196
l2307B1C4:
l2307B196:
	s0_27 = Mem21[a0_107 + 8<i32>:word32]
	word32 a1_207
	word32 a2_208
	word32 a3_209
	a0_107 = strcmp(a0_107, a0, out a1_207, out a2_208, out a3_209, out a4, out a5)
	branch a0_107 != 0<32> l2307B170
l2307B1A0:
l2307B170:
	s0_27 = s0_27 + 0x14<32>
	branch s0_27 != 0x4201BA04<32> l2307B166
l2307B176:
	s3_30 = 0<32>
l2307B178:
	0<32> = dwArgA8
	a0Out = s3_30
	a2Out = dwArg48
	a4Out = a4
	a5Out = a5
	s3Out = s3_30
	s4Out = dwArg04
	return s1
inode_open_exit:


word32 inode_forearch_name(word32 ra, word32 a0, word32 a1, word32 a5, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ls_cmd
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a2 a5 s0
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
inode_forearch_name_entry:
l2307B1C6:
	word32 s3_19 = a0
	word32 s4_21 = a1
	word32 s2_22 = 0x4201BA04<32>
	word32 s1_23 = 0<32>
l2307B1E6:
	word32 s0_26 = Mem17[a5 + 8<i32>:word32]
	branch a5 == 0<32> l2307B1F4
l2307B1EA:
	word32 a0_43
	call s3_19 (retsize: 0;)
		uses: a0:s4_28,a1:s0_26,a5:a5_45,ra:ra_34,s0:s0_26,s1:s1_30 + 1<32>,s2:s2_33,s3:s3_32,s4:s4_28
		defs: a0:a0_43,a5:a5_45,ra:ra_42,s0:s0_37,s1:s1_38,s2:s2_39,s3:s3_40,s4:s4_41
	branch a0_43 != 0<32> l2307B1FA
l2307B1F4:
	branch s0_26 + 0x14<32> != s2_22 l2307B1E6
l2307B1FA:
	a2Out = dwArg48
	a5Out = a5
	return s1
inode_forearch_name_exit:


word32 inode_ref(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      new_file
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
inode_ref_entry:
l2307B20C:
	word32 a5_5 = CONVERT(Mem0[a0 + 17<i32>:byte], byte, word32)
	Mem7[a0 + 17<i32>:byte] = SLICE(a5_5 + 1<32>, byte, 0)
	return a5_5 + 1<32>
inode_ref_exit:


word32 inode_unref(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      del_file
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
inode_unref_entry:
l2307B218:
	word32 a5_5 = CONVERT(Mem0[a0 + 17<i32>:byte], byte, word32)
	branch a5_5 == 0<32> l2307B224
l2307B21E:
	Mem7[a0 + 17<i32>:byte] = SLICE(a5_5 + 0xFFFFFFFF<32>, byte, 0)
	a5_5 = a5_5 + 0xFFFFFFFF<32>
l2307B224:
	return a5_5
inode_unref_exit:


word32 inode_reserve(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_register_driver
//      aos_register_fs
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a4 a5 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
inode_reserve_entry:
l2307B226:
	branch a0 != 0<32> l2307B22E
l2307B22E:
	branch a1 == 0<32> l2307B228
l2307B230:
	Mem5[a1:word32] = 0<32>
	a4 = CONVERT(Mem5[a0:byte], byte, word32)
	branch a4 != 47<i32> l2307B228
l2307B240:
	word32 a4_145
	word32 a0_23 = inode_alloc(out a4_145)
	word32 s1_159 = a0
	word32 a5_27 = a0_23
	branch a0_23 < 0<32> l2307B2A0
l2307B25C:
	branch a0_23 > 0x1D<32> l2307B274
l2307B264:
l2307B274:
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 a0_50
	word32 s4_61
	word32 s8_219
	word32 s2_218
	word32 a6_217
	word32 a5_216
	word32 a3_215
	word32 a2_214
	word32 a1_213
	word32 a2_212
	word32 a1_211
	word32 s0_57 = pvPortMalloc(ra, a0, strlen(a0, out a1_211, out a2_212, out a3_38, out a4_39, out a5_40) + 1<32>, a3_38, a4_39, a5_40, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_159, out a0_50, out a1_213, out a2_214, out a3_215, out a4_145, out a5_216, out a6_217, out s2_218, out s3, out s4_61, out s8_219)
	s2 = a0_50
	a5_27 = 0xFFFFFFF4<32>
	branch a0_50 == 0<32> l2307B2A0
l2307B288:
	word32 a7_225
	word32 a6_224
	word32 a5_223
	word32 a3_222
	word32 a2_221
	word32 a1_220
	memcpy(a0_50, s1_159, s3, out a1_220, out a2_221, out a3_222, out a4_145, out a5_223, out a6_224, out a7_225)
	Mem82[s0_57 + 8<i32>:word32] = a0_50
	s2 = a0_50 + s3
	Mem84[s2:byte] = 0<8>
	Mem85[s4_61:word32] = s0_57
	a5_27 = 0<32>
l2307B2A0:
	a0Out = a5_27
	a4Out = a4_145
	a5Out = a5_27
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	return s1_159
l2307B228:
	a0Out = 0xFFFFFFEA<32>
	a4Out = a4
	a5Out = 0xFFFFFFEA<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s1
inode_reserve_exit:


word32 aos_register_driver(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg74, word32 dwArgB4, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dev_uart_init
//      vfs_device_init
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +00B4:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_register_driver_entry:
l2307B2B2:
	word32 s0_143
	word32 a0_32
	word32 a1_273
	word32 a2_274
	word32 a3_275
	word32 a4_276
	word32 a5_277
	word32 s3_278
	word32 s4_279
	word32 s8_280
	word32 s2_235
	word32 s1_118
	xQueueSemaphoreTake(Mem8[0x42026930<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_118, out a0_32, out a1_273, out a2_274, out a3_275, out a4_276, out a5_277, out s2_235, out s3_278, out s4_279, out s8_280)
	word32 a5_111 = 1<32>
	branch a0_32 != 1<32> l2307B324
l2307B2DE:
	word32 a4_53
	word32 a5_54
	word32 s4_58
	word32 a0_61
	word32 s2_63
	word32 s3_64
	word32 s1_57 = inode_reserve(ra, a0, fp + -36<i32>, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out a0_61, out a4_53, out a5_54, out s2_63, out s3_64, out s4_58)
	branch a0_61 != 0<32> l2307B2FC
l2307B2EC:
	Mem74[a5_54:word32] = s4_58
	Mem75[a5_54 + 16<i32>:byte] = SLICE(s2_63, byte, 0)
	Mem77[a5_54 + 4<i32>:word32] = s3_64
l2307B2FC:
	word32 a1_281
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 a5_285
	word32 a7_286
	word32 s3_287
	word32 s4_288
	word32 s5_289
	word32 s8_290
	word32 a0_120
	s0_143 = xQueueGenericSend(Mem79[s1_57 + -1744<i32>:int32], 0<32>, 0<32>, a4_53, a5_54, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_118, out a0_120, out a1_281, out a2_282, out a3_283, out a4_284, out a5_285, out a7_286, out s2_235, out s3_287, out s4_288, out s5_289, out s6, out s8_290)
	a5_111 = 1<32>
	branch a0_120 == 1<32> l2307B326
l2307B310:
	word32 a5_113 = Mem79[a0_120 + 8<i32>:word32]
	branch a0_120 == 0<32> l2307B31A
l2307B316:
	word32 s0_297
	word32 a1_298
	word32 a2_299
	word32 a3_300
	word32 a4_301
	word32 a5_302
	word32 a6_303
	word32 s4_304
	word32 t3_305
	vPortFree(a0_120, dwArgB4, a5_113, mstatus, dwArg0128, dwArg0168, out s0_297, out s1_118, out a0_120, out a1_298, out a2_299, out a3_300, out a4_301, out a5_302, out a6_303, out s4_304, out t3_305)
l2307B31A:
	word32 t1_291
	word32 a0_292
	word32 a1_293
	word32 a2_294
	word32 a3_295
	word32 a4_296
	ra = memset(ra, a0_120, 0<32>, 0x14<32>, out t1_291, out a0_292, out a1_293, out a2_294, out a3_295, out a4_296, out a5_111)
l2307B324:
	s0_143 = 0xFFFFFFFF<32>
l2307B326:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_118
	a0Out = s0_143
	a5Out = a5_111
	s2Out = s2_235
	s4Out = dwArg78
	s6Out = s6
	return ra
aos_register_driver_exit:


word32 aos_register_fs(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg74, word32 dwArgB4, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      romfs_register
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +00B4:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_register_fs_entry:
l2307B33A:
	word32 a0_30
	word32 s4_41
	word32 a4_267
	word32 a5_268
	word32 s3_269
	word32 a3_266
	word32 a2_265
	word32 a1_264
	word32 s1_263
	word32 s8_270
	word32 s2_227
	xQueueSemaphoreTake(Mem8[0x42026930<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_263, out a0_30, out a1_264, out a2_265, out a3_266, out a4_267, out a5_268, out s2_227, out s3_269, out s4_41, out s8_270)
	branch a0_30 != 1<32> l2307B3AA
l2307B364:
	word32 a5_51
	word32 a0_58
	word32 s2_60
	word32 s3_61
	word32 s4_271
	word32 a4_50
	word32 s1_54 = inode_reserve(ra, s4_41, fp + -36<i32>, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out a0_58, out a4_50, out a5_51, out s2_60, out s3_61, out s4_271)
	branch a0_58 != 0<32> l2307B382
l2307B370:
	Mem72[a5_51:word32] = s3_61
	Mem73[a5_51 + 16<i32>:byte] = 3<8>
	Mem75[a5_51 + 4<i32>:word32] = s2_60
	a4_50 = 3<32>
l2307B382:
	word32 s1_272
	word32 a1_273
	word32 a2_274
	word32 a3_275
	word32 a4_276
	word32 a5_277
	word32 a7_278
	word32 s3_279
	word32 s4_280
	word32 s5_281
	word32 s6_282
	word32 s8_283
	word32 a0_118
	xQueueGenericSend(Mem77[s1_54 + -1744<i32>:int32], 0<32>, 0<32>, a4_50, a5_51, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_272, out a0_118, out a1_273, out a2_274, out a3_275, out a4_276, out a5_277, out a7_278, out s2_227, out s3_279, out s4_280, out s5_281, out s6_282, out s8_283)
	branch a0_118 == 1<32> l2307B3AC
l2307B396:
	word32 a5_111 = Mem77[a0_118 + 8<i32>:word32]
	branch a0_118 == 0<32> l2307B3A0
l2307B39C:
	word32 s0_291
	word32 s1_292
	word32 a1_293
	word32 a2_294
	word32 a3_295
	word32 a4_296
	word32 a5_297
	word32 a6_298
	word32 s4_299
	word32 t3_300
	vPortFree(a0_118, dwArgB4, a5_111, mstatus, dwArg0128, dwArg0168, out s0_291, out s1_292, out a0_118, out a1_293, out a2_294, out a3_295, out a4_296, out a5_297, out a6_298, out s4_299, out t3_300)
l2307B3A0:
	word32 t1_284
	word32 a0_285
	word32 a1_286
	word32 a2_287
	word32 a3_288
	word32 a4_289
	word32 a5_290
	ra = memset(ra, a0_118, 0<32>, 0x14<32>, out t1_284, out a0_285, out a1_286, out a2_287, out a3_288, out a4_289, out a5_290)
l2307B3AA:
l2307B3AC:
	0<32> = dwArg0128
	s2Out = s2_227
	return ra
aos_register_fs_exit:


void vfs_uart_open(word32 ra, word32 s0, word32 a1, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg5C, word32 dwArg8C, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +008C:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_open_entry:
l2307B3BE:
	branch a1 != 0<32> l2307B3CE
l2307B3CE:
	branch a5 == 0<32> l2307B3C0
l2307B3D2:
	word32 a3_7 = CONVERT(Mem0[a5 + 17<i32>:byte], byte, word32)
	branch a3_7 != 1<32> l2307B3C2
l2307B3DE:
	word32 a0_18
	word32 a3_21
	word32 a4_22
	aos_mutex_new(ra, s0 + 32<i32>, a3_7, 1<32>, Mem14[s0 + 4<i32>:word32], mstatus, dwLoc10, s0, ra, dwArgE8, dwArg0128, dwArg0168, out a0_18, out a3_21, out a4_22)
	word32 a3_45
	word32 a4_46
	word32 s0_49
	word32 a0_57
	word32 a5_294
	word32 s2_295
	word32 s1_293
	word32 ra_58 = xStreamBufferGenericCreate(ra, a0_18, 1<32>, 0<32>, a3_21, a4_22, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_49, out s1_293, out a0_57, out a3_45, out a4_46, out a5_294, out s2_295)
	Mem61[a0_57 + 16<i32>:word32] = s0_49
	word32 a5_69
	word32 s1_72
	word32 s2_73
	word32 a0_79
	word32 a3_297
	word32 a4_298
	word32 s0_296
	word32 ra_80 = xStreamBufferGenericCreate(ra_58, a0_57, 1<32>, 0<32>, a3_45, a4_46, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_296, out s1_72, out a0_79, out a3_297, out a4_298, out a5_69, out s2_73)
	word32 s0_83 = Mem61[a5_69 + 16<i32>:word32]
	Mem84[a0_79 + 20<i32>:word32] = s0_83
	branch a5_69 == 0<32> l2307B3C4
l2307B40A:
	branch a0_79 == 0<32> l2307B3C4
l2307B3C4:
	return
l2307B40C:
	hal_uart_notify_register(s0_83, 0<32>, 0x2307B48A<32>)
	word32 a4_109 = hal_uart_notify_register(s0_83, 1<32>, 0x2307B438<32>)
l2307B434_thunk_hal_uart_init:
	hal_uart_init(ra_80, s0, s1_72, s0_83, a4_109, s2_73, dwArg10, dwArg14, dwArg20, dwArg24, dwArg40, dwArg44, dwArg48, dwArg5C, dwArg8C)
	return
l2307B3C0:
l2307B3C2:
	return
vfs_uart_open_exit:


void __uart_rx_irq(word32 ra, word32 a0, word32 mstatus, word32 dwArg84, word32 dwArg98, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__uart_rx_irq_entry:
l2307B438:
	word32 a2_22
	word32 s4_175
	word32 s8_176
	word32 a5_24
	word32 a4_23
	word32 a0_16
	hal_uart_recv_II(a0, fp + -80<i32>, 64<i32>, fp + -88<i32>, 0<32>, out a0_16, out a2_22, out a4_23, out a5_24, out s4_175, out s8_176)
	branch a2_22 == 0<32> l2307B468
l2307B456:
	word32 a3_33
	ra = xStreamBufferSendFromISR(ra, a0_16, fp + -80<i32>, a2_22, fp + -84<i32>, a4_23, mstatus, dwLoc4C, dwArg98, dwArgC8, out a0_16, out a3_33, out a4_23, out a5_24, out mstatus)
	branch a5_24 == 0<32> l2307B468
l2307B464:
	vTaskSwitchContext(a3_33, mstatus, out a0_16, out a4_23, out a5_24)
l2307B468:
	branch a5_24 == 0<32> l2307B482
l2307B46C:
	word32 a5_72 = CONVERT(Mem15[a4_23 + 6<i32>:uint16], uint16, word32)
	Mem74[a4_23 + 6<i32>:word16] = SLICE(a5_72 | 1<i32>, word16, 0)
	word32 a6_100
	word32 a7_101
	word32 s2_102
	word32 s3_103
	word32 t0_104
	word32 t1_105
	word32 t5_106
	word32 t6_107
	call a5_72 | 1<i32> (retsize: 0;)
		uses: a0:a0_78,a5:a5_72 | 1<i32>,a6:a6_100,a7:a7_101,mstatus:mstatus_81,ra:ra_80,s0:Mem74[a0_78 + 40<i32>:word32],s2:s2_102,s3:s3_103,Stack +0014:dwLoc4C,Stack +00E4:dwArg84,Stack +00F8:dwArg98,Stack +0128:dwArgC8,t0:t0_104,t1:t1_105,t5:t5_106,t6:t6_107
		defs: a6:a6_100,a7:a7_101,s2:s2_102,s3:s3_103,t0:t0_104,t1:t1_105,t5:t5_106,t6:t6_107
l2307B482:
	return
__uart_rx_irq_exit:


void __uart_tx_irq(word32 ra, word32 s0, word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
__uart_tx_irq_entry:
l2307B48A:
	word32 a3_20
	word32 a5_22
	word32 mstatus_41
	word32 a0_40
	word32 a4_21
	word32 s0_25 = xStreamBufferReceiveFromISR(ra, a0, Mem7[a0 + 20<i32>:word32], fp + -21<i32>, 1<32>, a4, a5, mstatus, s0, dwArg24, dwArgF8, out a0_40, out a3_20, out a4_21, out a5_22, out mstatus_41)
	branch a5_22 == 0<32> l2307B4AE
l2307B4A6:
	word32 a5_148
	s0_25 = vTaskSwitchContext(a3_20, mstatus_41, out a0_40, out a4_21, out a5_148)
l2307B4AE:
	branch a0_40 != 1<32> l2307B4CA
l2307B4CA:
	hal_uart_send_trigger_off(a4_21)
l2307B4B4:
	hal_uart_send(s0_25, fp + -21<i32>, 1<32>, dwArg08)
l2307B4C2:
	return
__uart_tx_irq_exit:


void vfs_uart_close(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg6C, word32 dwArg7C, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +007C:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
vfs_uart_close_entry:
l2307B4D2:
	branch a0 == 0<32> l2307B50E
l2307B4D4:
	branch a5 == 0<32> l2307B50E
l2307B50E:
	return
l2307B4D8:
	word32 a3_8 = CONVERT(Mem0[a5 + 17<i32>:byte], byte, word32)
	branch a3_8 != 1<32> l2307B51C
l2307B51C:
	return
l2307B4E4:
	branch s0 == 0<32> l2307B512
l2307B512:
	return
l2307B4EE:
	word32 a0_23
	word32 a2_25
	word32 a4_27
	word32 a5_182
	aos_mutex_free(s0 + 32<i32>, a3_8, 1<32>, mstatus, dwArg0148, dwArg0188, out a0_23, out a2_25, out a4_27, out a5_182)
	word32 a0_36
	word32 a2_38
	word32 a4_40
	word32 a4_56
	word32 s1_64
	word32 a2_185
	word32 a0_184
	word32 s1_183
	word32 ra_58 = vStreamBufferDelete(vStreamBufferDelete(ra, a0_23, a2_25, a4_27, mstatus, dwArg14, dwArg0148, dwArg0188, out s1_183, out a0_36, out a2_38, out a4_40), a0_36, a2_38, a4_40, mstatus, dwArg14, dwArg0148, dwArg0188, out s1_64, out a0_184, out a2_185, out a4_56)
l2307B50A_thunk_hal_uart_finalize:
	hal_uart_finalize(ra_58, s0, s1_64, a4_56, s2, dwArg20, dwArg24, dwArg30, dwArg34, dwArg58, dwArg6C, dwArg7C)
	return
vfs_uart_close_exit:


void vfs_uart_read(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg74, word32 dwArg94, word32 dwArgB0, word32 dwArgB4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0074:[0..31] Stack +0094:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_read_entry:
l2307B51E:
	branch a0 == 0<32> l2307B582
l2307B532:
	branch a5 == 0<32> l2307B582
l2307B538:
	word32 s3_23 = Mem17[a5 + 4<i32>:int32]
	branch a2 == 0<32> l2307B582
l2307B53E:
	branch s3_23 == 0<32> l2307B582
l2307B542:
	word32 a3_226
	word32 a0_225
	word32 s1_224
	word32 s3_44
	word32 s2_43
	word32 s4_45
	word32 a4_38
	word32 a5_39
	aos_mutex_lock(s3_23 + 32<i32>, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_224, out a0_225, out a3_226, out a4_38, out a5_39, out s2_43, out s3_44, out s4_45)
	word32 s0_50 = 0<32>
	word32 s1_53 = 0<32> - CONVERT(CONVERT(Mem17[s3_44 + 52<i32>:byte], byte, word32) <u 0xFFFFFFFE<32>, bool, word32)
l2307B562:
	word32 a0_69
	word32 s0_77
	word32 s5_82
	word32 s8_229
	word32 a1_227
	word32 a2_228
	ra = xStreamBufferReceive(ra, s0_50, Mem17[s3_44 + 16<i32>:int32], s4_45 + s0_50, s2_43 - s0_50, s1_53, a4_38, a5_39, mstatus, s2, dwArg08, dwArg94, dwArgB0, dwArgB4, dwArgD8, dwArg0108, dwArg0148, out s0_77, out s1_53, out a0_69, out a1_227, out a2_228, out a4_38, out a5_39, out s2_43, out s3_44, out s4_45, out s5_82, out s8_229, out mstatus)
	s0_50 = s0_77 + a0_69
	branch s0_50 == s2_43 l2307B57C
l2307B57A:
	branch s1_53 != 0<32> l2307B562
l2307B57C:
	aos_mutex_unlock(s5_82, a4_38, a5_39, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168)
l2307B582:
	return
vfs_uart_read_exit:


void vfs_uart_write(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 s2, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg94, word32 dwArgB0, word32 dwArgB4, word32 dwArgD8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0094:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
vfs_uart_write_entry:
l2307B596:
	branch a0 == 0<32> l2307B5C0
l2307B5A2:
	word32 a0_13 = Mem9[a5:word32]
	branch a5 == 0<32> l2307B5C0
l2307B5A8:
	branch s1 == 0<32> l2307B5C0
l2307B5AC:
	word32 a4_27
	word32 a0_44
	word32 s1_111
	word32 a1_112
	word32 a3_113
	word32 s2_114
	word32 s3_115
	word32 s4_116
	word32 s5_117
	word32 mstatus_118
	xStreamBufferSend(ra, a0_13, a1, a2, 0<32>, a4, s2, s4, mstatus, dwArg08, dwArg94, dwArgB0, dwArgB4, dwArgD8, dwArg0108, dwArg0148, out s1_111, out a0_44, out a1_112, out a3_113, out a4_27, out s2_114, out s3_115, out s4_116, out s5_117, out mstatus_118)
	branch a0_44 <= 0<32> l2307B5C0
l2307B5BA:
	hal_uart_send_trigger(a4_27)
l2307B5C0:
	return
vfs_uart_write_exit:


void vfs_uart_poll(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg74, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0074:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_poll_entry:
l2307B5CC:
	word32 a5_61
	word32 a4_55
	word32 a0_33
	word32 a3_36
	word32 a4_37
	word32 s2_42
	word32 s3_43
	word32 s4_44
	word32 a5_158
	word32 s1_41
	word32 s0_40 = aos_mutex_lock(s0 + 32<i32>, 0xFFFFFFFF<32>, a2, a3, a4, Mem17[s0 + 4<i32>:word32], mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_41, out a0_33, out a3_36, out a4_37, out a5_158, out s2_42, out s3_43, out s4_44)
	branch a1 != 0<32> l2307B622
l2307B622:
	word32 a5_159
	vTaskEnterCritical(a4_37, mstatus, out a5_159)
	Mem50[s0_40 + 36<i32>:word32] = s2_42
	Mem51[s0_40 + 40<i32>:word32] = s3_43
	Mem52[s0_40 + 44<i32>:word32] = s4_44
	word32 a5_53
	word32 a3_54 = vTaskExitCritical(a3_36, mstatus, out a4_55, out a5_53)
	a5_61 = 1<32>
	word32 a2_58
	branch xStreamBufferIsEmpty(a0_33, a4_55, a5_53, mstatus, out a2_58) == 1<32> l2307B608
l2307B642:
	word32 a5_65 = CONVERT(Mem52[a4_55 + 6<i32>:uint16], uint16, word32)
	Mem67[a4_55 + 6<i32>:word16] = SLICE(a5_65 | 1<i32>, word16, 0)
	call s2_42 (retsize: 0;)
		uses: a0:s3_43,a1:s4_44,a2:a2_58,a3:a3_54,a4:a4_55,a5:a5_65 | 1<i32>,mstatus:mstatus,Stack +0014:dwLoc0C,Stack +0094:dwArg74,Stack +0108:dwArgE8,Stack +0148:dwArg0128
		defs: a4:a4_72,a5:a5_73,s1:s1_76
l2307B5F8:
	word32 a5_160
	vTaskEnterCritical(a4_37, mstatus, out a5_160)
	Mem85[s0_40 + 36<i32>:word32] = 0<32>
	Mem86[s0_40 + 44<i32>:word32] = 0<32>
	vTaskExitCritical(a3_36, mstatus, out a4_55, out a5_61)
l2307B608:
	aos_mutex_unlock(s1_41, a4_55, a5_61, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168)
	return
vfs_uart_poll_exit:


void vfs_uart_sync(word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
vfs_uart_sync_entry:
l2307B658:
	branch a0 == 0<32> l2307B692
l2307B692:
	return
l2307B65A:
	branch a5 == 0<32> l2307B696
l2307B696:
	return
l2307B660:
	word32 a5_16 = Mem15[s0 + 4<i32>:word32]
	branch s0 == 0<32> l2307B688
l2307B66C:
	word32 a4_28
	word32 a5_43
	word32 s1_150
	word32 a0_151
	word32 a3_152
	word32 a5_153
	word32 s2_154
	word32 s3_155
	word32 s4_156
	aos_mutex_unlock(hal_uart_send_flush(aos_mutex_lock(s0 + 32<i32>, 0xFFFFFFFF<32>, a2, a3, a4, a5_16, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_150, out a0_151, out a3_152, out a4_28, out a5_153, out s2_154, out s3_155, out s4_156), out a5_43), a4_28, a5_43, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178)
l2307B688:
	return
vfs_uart_sync_exit:


void uart_ioctl_cmd_waimode(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 s6, word32 mstatus, word32 dwArg84, word32 dwArgA0, word32 dwArgA4, word32 dwArgC8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s6:[0..31] Stack +0084:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
uart_ioctl_cmd_waimode_entry:
l2307B698:
	branch a2 == 0<32> l2307B6F8
l2307B6B2:
	word32 s6_28 = Mem23[a2 + 4<i32>:int32]
	word32 s4_34 = a0
	word32 s0_35 = 0<32>
	word32 s3_38 = Mem23[a2 + 8<i32>:int32] + 1000<i32> >>u 1000<i32>
l2307B6D4:
	word32 a0_55
	word32 s0_63
	word32 s2_65
	word32 s5_68
	word32 s8_69
	word32 a2_177
	word32 s1_176
	ra = xStreamBufferReceive(ra, s0_35, Mem23[s4_34 + 16<i32>:int32], a1 + s0_35, s6_28 - s0_35, s3_38, a4, a5, mstatus, s6, dwLoc08, dwArg84, dwArgA0, dwArgA4, dwArgC8, dwArgF8, dwArg0138, out s0_63, out s1_176, out a0_55, out a1, out a2_177, out a4, out a5, out s2_65, out s3_38, out s4_34, out s5_68, out s8_69, out mstatus)
	s0_35 = s0_63 + a0_55
	branch s6_28 == s0_35 l2307B6F8
l2307B6EC:
	branch s2_65 <=u 999<i32> l2307B6F8
l2307B6F0:
	branch s5_68 != s8_69 l2307B6D4
l2307B6F4:
	branch s0_35 <= 0<32> l2307B6D4
l2307B6F8:
	0<32> = dwArg0128
	return
uart_ioctl_cmd_waimode_exit:


void uart_ioctl_cmd_setconfig(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
uart_ioctl_cmd_setconfig_entry:
l2307B712:
	branch a1 == 0<32> l2307B738
l2307B738:
	return
l2307B714:
	word32 a2_8 = CONVERT(Mem7[a1 + 4<i32>:byte], byte, word32)
	branch a2_8 == 1<32> l2307B72A
l2307B722:
	branch a2_8 == 2<32> l2307B72A
l2307B728:
l2307B72A:
	hal_uart_setconfig(a0)
	return
uart_ioctl_cmd_setconfig_exit:


void vfs_uart_ioctl(word32 ra, word32 s0, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_ioctl_entry:
l2307B73C:
	branch a0 == 0<32> l2307B78E
l2307B74C:
	branch a5 == 0<32> l2307B78E
l2307B752:
	word32 a5_19 = Mem13[s1 + 4<i32>:word32]
	branch s1 == 0<32> l2307B78E
l2307B756:
	word32 s2_39
	word32 s3_40
	word32 s1_134
	word32 a0_135
	word32 a3_136
	word32 a4_137
	word32 a5_138
	word32 s4_139
	aos_mutex_lock(s1 + 32<i32>, 0xFFFFFFFF<32>, a2, a3, a4, a5_19, mstatus, s0, ra, dwArgD8, dwArg0118, out s1_134, out a0_135, out a3_136, out a4_137, out a5_138, out s2_39, out s3_40, out s4_139)
	branch s2_39 >u 0xFFFFFFF8<32> l2307B78A
l2307B78A:
	aos_mutex_unlock(s3_40, 6<32>, s2_39 + -2<i32>, mstatus, s0, ra, dwArgD8, dwArg0118, dwArg0158)
l2307B78E:
	0<32> = dwArg0128
	return
vfs_uart_ioctl_exit:
l2307B76E:


word32 get_context(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_set_eventfd
//      aos_poll_read_fd
//      aos_post_delayed_action
//      aos_loop_run
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 s8 t3 tp
// Preserved: s0 sp
get_context_entry:
l2307B7CA:
	word32 s1_21 = Mem5[a0:word32]
	word32 a4_15
	word32 a3_17
	word32 a5_16
	word32 a0_13 = aos_task_getspecific(a0, out a3_17, out a4_15, out a5_16)
	branch a0_13 != 0<32> l2307B7F0
l2307B7E0:
	s1_21 = Mem12[a0_13:word32]
	aos_task_setspecific(a0_13, a1, out a0_13, out a3_17, out a4_15, out a5_16)
l2307B7F0:
	a0Out = a0_13
	a3Out = a3_17
	a4Out = a4_15
	a5Out = a5_16
	return s1_21
get_context_exit:


void aos_loop_set_eventfd(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_event_service_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 s1 s8 t3 tp
// Preserved: s0 sp
aos_loop_set_eventfd_entry:
l2307B7FA:
	word32 a0_11
	word32 a3_27
	word32 a4_28
	word32 a5_29
	get_context(a0, a1, out a0_11, out a3_27, out a4_28, out a5_29)
	Mem20[a0 + 16<i32>:word32] = a0_11
	return
aos_loop_set_eventfd_exit:


word32 aos_loop_init(word32 ra, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg9C, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: mstatus ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aos_loop_init_entry:
l2307B810:
	word32 ra_132
	word32 s2_136
	word32 a5_286
	word32 a4_19
	word32 a3_21
	word32 a0_17 = aos_task_getspecific(Mem5[0x4200F6C0<32>:int32], out a3_21, out a4_19, out a5_286)
	word32 a5_22 = Mem16[0x4200F6C4<32>:int32]
	branch a5_22 != 0<32> l2307B86C
l2307B86C:
	branch a0_17 == 0<32> l2307B83E
l2307B870:
	word32 s9_315
	word32 s10_316
	word32 s11_317
	word32 t4_318
	word32 s8_314
	word32 s5_311
	word32 s6_312
	word32 s7_313
	word32 a7_308
	word32 s3_309
	word32 s4_310
	word32 a3_305
	word32 a4_306
	word32 a5_307
	word32 a0_302
	word32 a1_303
	word32 a2_304
	word32 s1_301
	ra_132 = printf(ra, 0x230C4504<32>, a3_21, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_301, out a0_302, out a1_303, out a2_304, out a3_305, out a4_306, out a5_307, out a7_308, out s2_136, out s3_309, out s4_310, out s5_311, out s6_312, out s7_313, out s8_314, out s9_315, out s10_316, out s11_317, out t4_318)
l2307B838:
	a3_21 = aos_task_key_create(0x4200F6C0<32>, out a4_19, out a5_22)
l2307B83E:
	word32 a0_66
	word32 s2_75
	word32 s3_76
	word32 s4_299
	word32 s8_300
	word32 a4_297
	word32 a6_298
	word32 a1_294
	word32 a2_295
	word32 a3_296
	word32 s1_293
	word32 a5_71
	pvPortMalloc(ra, 0x4200F6C4<32>, 0x1C<32>, a3_21, a4_19, a5_22, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_293, out a0_66, out a1_294, out a2_295, out a3_296, out a4_297, out a5_71, out a6_298, out s2_75, out s3_76, out s4_299, out s8_300)
	branch a0_66 == 0<32> l2307B850
l2307B848:
	word32 a3_291
	word32 a4_292
	word32 a0_288
	word32 a1_289
	word32 a2_290
	word32 t1_287
	ra = memset(ra, a0_66, 0<32>, 0x1C<32>, out t1_287, out a0_288, out a1_289, out a2_290, out a3_291, out a4_292, out a5_71)
l2307B850:
	word32 s1_95 = Mem16[a5_71:word32]
	branch a5_71 != 0<32> l2307B856
l2307B854:
	Mem97[a0_66:word32] = s1_95
l2307B856:
	Mem99[a0_66:word32] = a0_66
	word32 a0_102 = Mem99[s3_76:int32]
	Mem104[0xF<32>:word32] = a0_66
	Mem106[a0_66 + 4<i32>:word32] = a0_66
	word32 a0_319
	word32 a3_320
	word32 a4_321
	word32 a5_322
	ra_132 = aos_event_service_init(ra, aos_task_setspecific(a0_102, a0_66, out a0_319, out a3_320, out a4_321, out a5_322), s2_75, mstatus, dwLoc20, dwLoc1C, dwArg10, dwArg14, dwArg38, dwArg58, dwArg5C, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0148, out s2_136, out mstatus)
l2307B87C:
	s2Out = s2_136
	mstatusOut = mstatus
	return ra_132
aos_loop_init_exit:


word32 aos_poll_read_fd(word32 ra, word32 a0, word32 a1, word32 a2, word32 s3, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & s0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      aos_event_service_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a1 a3 a4 a5 ra s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_poll_read_fd_entry:
l2307B88C:
	word32 s2_182 = a0
	word32 a0_30
	word32 a5_161
	word32 a3_146
	word32 a4_147
	word32 s1_35 = get_context(a0, a1, out a0_30, out a3_146, out a4_147, out a5_161)
	branch a0 < 0<32> l2307B96E
l2307B96E:
l2307B8B0:
	word32 s5_40 = CONVERT(Mem25[a0_30 + 22<i32>:byte], byte, word32)
	word32 a0_47
	word32 a3_50
	word32 a4_51
	word32 a5_52
	word32 s4_58
	word32 s1_326
	word32 a1_327
	word32 a2_328
	word32 a6_329
	word32 s2_330
	word32 s3_331
	word32 s8_332
	pvPortMalloc(ra, s1_35, s5_40 + 0xD<32>, a3_146, a4_147, a5_161, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_326, out a0_47, out a1_327, out a2_328, out a3_50, out a4_51, out a5_52, out a6_329, out s2_330, out s3_331, out s4_58, out s8_332)
	word32 a0_64
	word32 a3_67
	word32 s1_72
	word32 s8_76
	word32 a1_333
	word32 a2_334
	word32 a4_335
	word32 a5_336
	word32 a6_337
	word32 s3_338
	word32 s4_339
	word32 s0_71 = pvPortMalloc(ra, a0_47, s4_58 << 3<u32>, a3_50, a4_51, a5_52, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_72, out a0_64, out a1_333, out a2_334, out a3_67, out a4_335, out a5_336, out a6_337, out s2_182, out s3_338, out s4_339, out s8_76)
	branch s1_72 == 0<32> l2307B8D6
l2307B8D4:
	branch a0_64 != 0<32> l2307B908
l2307B908:
	aos_fcntl(s2_182)
	aos_fcntl(s2_182)
	Mem98[Mem25[0x10<32>:word32] + 22<i32>:byte] = SLICE(CONVERT(Mem25[s0_71 + 22<i32>:byte], byte, word32) + 1<32>, byte, 0)
	word32 a5_101
	word32 a2_104
	word32 a1_370
	word32 a3_371
	word32 a4_372
	word32 a6_373
	word32 a7_374
	memcpy(s1_72, 4<32>, s5_40 + s8_76, out a1_370, out a2_104, out a3_371, out a4_372, out a5_101, out a6_373, out a7_374)
	word32 s1_118
	word32 a1_121
	word32 s4_124
	word32 s0_375
	word32 a0_376
	word32 a2_377
	word32 a3_378
	word32 a4_379
	word32 a5_380
	word32 a6_381
	word32 t3_382
	vPortFree(s1_72, a2_104, a5_101, mstatus, dwArg0128, dwArg0168, out s0_375, out s1_118, out a0_376, out a1_121, out a2_377, out a3_378, out a4_379, out a5_380, out a6_381, out s4_124, out t3_382)
	Mem127[s1_118 + 12<i32>:word32] = Mem98[a1_121 + 8<i32>:word32]
	word32 a5_131
	word32 a2_134
	word32 a1_383
	word32 a3_384
	word32 a4_385
	word32 a6_386
	word32 a7_387
	memcpy(s4_124, a1_121, s5_40 << 3<u32>, out a1_383, out a2_134, out a3_384, out a4_385, out a5_131, out a6_386, out a7_387)
	word32 s1_149
	word32 s0_154
	word32 s4_155
	word32 a0_388
	word32 a2_389
	word32 a5_390
	word32 a6_391
	word32 t3_392
	vPortFree(s4_124, a2_134, a5_131, mstatus, dwArg0128, dwArg0168, out s0_154, out s1_149, out a0_388, out a1, out a2_389, out a3_146, out a4_147, out a5_390, out a6_391, out s4_155, out t3_392)
	Mem157[s0_154 + 8<i32>:word32] = s4_155
	Mem158[s1_149:word32] = s2_182
	Mem159[s1_149 + 4<i32>:word32] = a2
	Mem160[s1_149 + 8<i32>:word32] = a1
	a5_161 = CONVERT(Mem160[s0_154 + 20<i32>:uint16], uint16, word32)
	branch a5_161 >= s2_182 l2307B8F0
l2307B968:
	Mem163[s0_154 + 20<i32>:word16] = SLICE(s2_182, word16, 0)
l2307B8D6:
	word32 a5_171
	word32 a2_174
	word32 s1_179
	word32 a0_340
	word32 a1_341
	word32 a3_342
	word32 a4_343
	word32 a7_344
	word32 s3_345
	word32 s4_346
	word32 s5_347
	word32 s6_348
	word32 s7_349
	word32 s8_350
	word32 s9_351
	word32 s10_352
	word32 s11_353
	word32 t4_354
	ra = printf(ra, 0x230C4530<32>, a3_67, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_179, out a0_340, out a1_341, out a2_174, out a3_342, out a4_343, out a5_171, out a7_344, out s2_182, out s3_345, out s4_346, out s5_347, out s6_348, out s7_349, out s8_350, out s9_351, out s10_352, out s11_353, out t4_354)
	word32 a2_194
	word32 a5_197
	word32 s4_204
	word32 s0_355
	word32 s1_356
	word32 a0_357
	word32 a1_358
	word32 a3_359
	word32 a4_360
	word32 a6_361
	word32 t3_362
	vPortFree(s1_179, a2_174, a5_171, mstatus, dwArg0128, dwArg0168, out s0_355, out s1_356, out a0_357, out a1_358, out a2_194, out a3_359, out a4_360, out a5_197, out a6_361, out s4_204, out t3_362)
	word32 s0_363
	word32 s1_364
	word32 a0_365
	word32 a2_366
	word32 a6_367
	word32 s4_368
	word32 t3_369
	vPortFree(s4_204, a2_194, a5_197, mstatus, dwArg0128, dwArg0168, out s0_363, out s1_364, out a0_365, out a1, out a2_366, out a3_146, out a4_147, out a5_161, out a6_367, out s4_368, out t3_369)
l2307B8F0:
	0<32> = dwArg0128
	s0Out = s4
	a1Out = a1
	a3Out = a3_146
	a4Out = a4_147
	a5Out = a5_161
	s2Out = s2_182
	return ra
aos_poll_read_fd_exit:


word32 aos_post_delayed_action(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blsync_ble_start
//      blsync_ble_stop
//      event_cb_wifi_event_mgmr
//      trigger_auto_denoise
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aos_post_delayed_action_entry:
l2307B972:
	branch a1 == 0<32> l2307B9F2
l2307B9F2:
	return a3
l2307B974:
	word32 a3_25
	word32 a4_26
	word32 a5_27
	word32 a0_35
	word32 a3_38
	word32 s1_43
	word32 s2_44
	word32 s3_45
	word32 s4_46
	word32 a5_198
	word32 a6_199
	word32 s8_200
	word32 a0_194
	word32 a1_195
	word32 a2_196
	word32 a4_197
	pvPortMalloc(ra, get_context(a0, a1, out a0_194, out a3_25, out a4_26, out a5_27), 32<i32>, a3_25, a4_26, a5_27, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_43, out a0_35, out a1_195, out a2_196, out a3_38, out a4_197, out a5_198, out a6_199, out s2_44, out s3_45, out s4_46, out s8_200)
	branch a0_35 == 0<32> l2307B9DE
l2307B99C:
	word32 a0_60 = a0_52 + s1_43
	word32 a0_52
	word32 a1_53
	word32 a4_202
	word32 a5_203
	word32 a2_201
	word32 s0_57 = aos_now_ms(a3_38, out a0_52, out a1_53, out a2_201, out a4_202, out a5_203)
	Mem64[a0_60 + 8<i32>:word32] = s0_57
	word32 a4_63 = CONVERT(a0_60 <u s1_43, bool, word32) + (a1_53 + (s1_43 >> 0x1F<u32>))
	Mem65[a4_63 + 12<i32>:word32] = s0_57
	Mem66[s0_57 + 16<i32>:word32] = s3_45
	Mem67[s0_57 + 20<i32>:word32] = s2_44
	Mem68[s1_43 + 24<i32>:word32] = s0_57
	word32 a5_69 = Mem68[s4_46 + 4<i32>:int32]
l2307B9BE:
	branch a5_69 == s4_46 l2307B9D2
l2307B9C2:
	word32 a5_74 = Mem68[a3_38 + 12<i32>:word32]
	branch a4_63 < a3_38 l2307B9D2
l2307B9C8:
	branch a3_38 != a4_63 l2307B9EE
l2307B9CC:
	a5_74 = Mem68[a3_38 + 8<i32>:word32]
	branch a0_60 >=u a3_38 l2307B9EE
l2307B9EE:
	a5_69 = Mem68[a5_74 + 4<i32>:word32]
l2307B9D2:
	word32 a5_83 = Mem68[a4_63:word32]
	Mem87[a5_83 + 4<i32>:word32] = s0_57
	Mem89[a4_63:word32] = s0_57
	Mem90[s0_57 + 4<i32>:word32] = a4_63
	Mem91[s0_57:word32] = a5_83
l2307B9DE:
	return a3_38
aos_post_delayed_action_exit:


word32 aos_loop_run(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgBC, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 mstatus
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
aos_loop_run_entry:
l2307B9F6:
	word32 a5_693
	word32 a3_107
	word32 a4_108
	word32 a0_127
	word32 s1_176 = get_context(a0, a1, out a0_127, out a3_107, out a4_108, out a5_693)
	word32 s0_130 = a0_127
	word32 s3_116 = 0xC<32>
	word32 s4_117 = 1<32>
l2307BA14:
	branch CONVERT(Mem36[s0_130 + 24<i32>:byte], byte, word32) != 0<32> l2307BA28
l2307BA1A:
	s0_130 = Mem36[s1_176 + 4<i32>:word32]
	word32 s2_40 = CONVERT(Mem36[s0_130 + 22<i32>:byte], byte, word32)
	branch s0_130 != s1_176 l2307BA40
l2307BA24:
	branch s2_40 != 0<32> l2307BA40
l2307BA40:
	branch s0_130 == s1_176 l2307BA5A
l2307BA46:
	word32 a1_47
	word32 a2_48
	word32 a5_50
	aos_now_ms(a3_107, out a0_127, out a1_47, out a2_48, out a4_108, out a5_50)
	branch a1_47 < a5_50 l2307BA58
l2307BA50:
	branch a5_50 != a1_47 l2307BA94
l2307BA54:
	branch a0_127 >=u a2_48 l2307BA94
l2307BA94:
l2307BA58:
l2307BA5A:
	word32 a5_60 = 0<32>
l2307BA5C:
	branch a5_60 < s2_40 l2307BA98
l2307BA98:
	word32 a1_70 = a5_60 << 3<u32>
	word32 a4_67 = a5_60 + s3_116
	a0_127 = a0_127 + a1_70
	a3_107 = Mem62[a4_67:word32]
	Mem74[a4_67:word32] = a0_127
	a4_108 = a4_67 + a1_70
	Mem78[a4_108 + 4<i32>:word16] = SLICE(s4_117, word16, 0)
	a5_60 = a5_60 + 1<32>
l2307BA62:
	word32 a0_104
	word32 s1_114
	word32 s2_115
	word32 a5_109
	word32 a1_105
	word32 s5_118
	ra = aos_poll(ra, a0_127, a3_107, a4_108, a5_60, mstatus, dwArg88, dwArgC8, dwArgF8, dwArg0138, dwArg0178, out s1_114, out a0_104, out a1_105, out a3_107, out a4_108, out a5_109, out s2_115, out s3_116, out s4_117, out s5_118, out mstatus)
	word32 s6_124 = a0_104
	a0_127 = a0_104
	branch a0_104 >= 0<32> l2307BAB6
l2307BA6C:
	__errno(out a5_109)
	a0_127 = Mem62[a5_109:word32]
	branch a5_109 == s5_118 l2307BAB6
l2307BAB6:
	s0_130 = Mem62[s1_114 + 4<i32>:word32]
	branch s0_130 == s1_114 l2307BAE2
l2307BABC:
	word32 a2_712
	s0_130 = aos_now_ms(a3_107, out a0_127, out a1_105, out a2_712, out a4_108, out a5_109)
	branch a1_105 < a5_109 l2307BAE2
l2307BAC4:
	branch a5_109 != a1_105 l2307BACE
l2307BAC8:
	branch a0_127 <u a5_109 l2307BAE2
l2307BACE:
	Mem146[a5_109 + 4<i32>:word32] = a4_108
	Mem147[a4_108:word32] = a5_109
	word32 a2_154
	word32 a5_156
	call a5_109 (retsize: 0;)
		uses: a3:a3_107
		defs: a2:a2_154,a5:a5_156
	word32 a6_715
	word32 t3_716
	word32 s1_713
	word32 a2_714
	vPortFree(Mem147[a5_109 + 20<i32>:word32], a2_154, a5_156, mstatus, dwArg0138, dwArg0178, out s0_130, out s1_713, out a0_127, out a1_105, out a2_714, out a3_107, out a4_108, out a5_109, out a6_715, out s4_117, out t3_716)
l2307BAE2:
	s1_176 = 0<32>
	branch a0_104 <= 0<32> l2307BA14
l2307BAE8:
	branch s1_176 == s2_115 l2307BA14
l2307BAEC:
	word32 mstatus_221
	a4_108 = s1_176 << 3<u32>
	word32 a5_187 = CONVERT(Mem271[a5_109 + a4_108 + 6<i32>:uint16], uint16, word32)
	s0_130 = Mem271[a5_109 + 8<i32>:word32]
	a5_109 = a5_187 & 1<32>
	branch (a5_187 & 1<32>) == 0<32> l2307BB0C
l2307BAFC:
	word32 s7_222
	word32 t0_351
	word32 t4_352
	word32 s9_350
	word32 s11_349
	word32 s10_348
	word32 a7_347
	call a4_108 (retsize: 0;)
		uses: a0:a0_195,a1:a1_193,a5:Mem271[a0_195:word32],a7:a7_347,mstatus:mstatus_221,ra:ra_199,s0:Mem271[a4_185 + 12<i32>:word32],s1:s1_180,s10:s10_348,s11:s11_349,s2:s2_181,s3:s3_189,s4:s4_197,s5:s5_198,s6:s6_200,s7:s7_222,s9:s9_350,t0:t0_351,t4:t4_352
		defs: a0:a0_211,a1:a1_218,a3:a3_220,a4:a4_219,a5:a5_212,a7:a7_347,mstatus:mstatus_221,ra:ra_207,s0:s0_203,s1:s1_208,s10:s10_348,s11:s11_349,s2:s2_209,s3:s3_204,s4:s4_205,s5:s5_206,s6:s6_210,s7:s7_222,s9:s9_350,t0:t0_351,t4:t4_352
	mstatus = mstatus_221
l2307BB0C:
	s1_176 = s1_176 + 1<32>
l2307BA76:
	0<32> = dwArgA8
l2307BA90_thunk_printf:
	word32 a3_240
	word32 a1_696
	word32 s7_706
	word32 a7_700
	word32 s10_709
	word32 t4_711
	word32 s11_710
	word32 s8_707
	word32 s9_708
	word32 s4_703
	word32 s6_705
	word32 s5_704
	word32 s2_701
	word32 s3_702
	word32 a5_699
	word32 a2_697
	word32 a4_698
	word32 a0_695
	word32 s1_694
	printf(ra, 0x230C4520<32>, a3_107, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_694, out a0_695, out a1_696, out a2_697, out a3_240, out a4_698, out a5_699, out a7_700, out s2_701, out s3_702, out s4_703, out s5_704, out s6_705, out s7_706, out s8_707, out s9_708, out s10_709, out s11_710, out t4_711)
	mstatusOut = mstatus
	return a3_240
l2307BA28:
	Mem258[s0_130 + 24<i32>:byte] = 0<8>
	0<32> = dwArgA8
	mstatusOut = mstatus
	return a3_107
aos_loop_run_exit:


void vfs_poll_notify(word32 a1, word32 a2, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_poll_notify_entry:
l2307BB10:
l2307BB12_thunk_aos_sem_signal:
	aos_sem_signal(a1, a2, a4, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178)
	return
vfs_poll_notify_exit:


word32 aos_poll(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArgA8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_run
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
aos_poll_entry:
l2307BB14:
	word32 sp_282 = fp + -64<i32>
	word32 s0_284 = a0
	word32 s3_100
	word32 s2_159
	word32 a2_107 = aos_sem_new(ra, a0, 0<32>, a3, a4, a5, mstatus, dwArgA8, dwArgE8, out s2_159, out s3_100)
	word32 a5_48 = 0<32>
l2307BB38:
	word32 a3_110 = fp + -56<i32> + a5_48
	Mem54[a3_110:byte] = 0<8>
	a5_48 = a5_48 + 1<32>
	branch a5_48 != 8<32> l2307BB38
l2307BB46:
	word32 s1_102 = a0 + 6<i32>
	word32 a4_109 = a0 + 6<i32>
	word32 a5_108 = 0<32>
l2307BB4E:
	branch a5_108 < s2_159 l2307BB72
l2307BB72:
	Mem64[a4_109:word16] = 0<16>
	a5_108 = a5_108 + 1<32>
	a4_109 = a4_109 + 8<32>
l2307BB52:
	word32 s6_105 = a0
	word32 s7_106 = 0<32>
	word32 s4_103 = 1<32>
	word32 s5_104 = 0x2307C000<32>
l2307BB5C:
	word32 s4_188
	word32 a0_150
	branch s7_106 < s2_159 l2307BB7C
l2307BB7C:
	word32 a0_76 = Mem75[s6_105:int32]
	branch s4_103 < a0_76 l2307BBA2
l2307BBA2:
	word32 a5_79
	a0_150 = get_file(a0_76, out a5_79)
	branch a0_150 == 0<32> l2307BC18
l2307BC18:
	s4_188 = 0xFFFFFFFF<32>
l2307BBA8:
	word32 a5_89 = Mem75[Mem75[a5_79:word32] + 20<i32>:word32]
	call a5_89 (retsize: 0;)
		uses: a0:Mem75[a5_79:word32],a1:1<32>,a2:s5_86 + -1264<i32>,a3:s6_74,a4:sp_82 + 4<i32>,a5:a5_89,mstatus:mstatus_94,ra:ra_92,s0:s0_90,s1:s1_93,s2:s2_73,s3:s3_91,s4:s4_77,s5:s5_86,s6:s6_74,s7:s7_72,Stack +00A8:dwArgA8,Stack +00E8:dwArgE8
		defs: a2:a2_107,a3:a3_110,a4:a4_109,a5:a5_108,mstatus:mstatus_115,ra:ra_101,s0:s0_96,s1:s1_102,s2:s2_97,s3:s3_100,s4:s4_103,s5:s5_104,s6:s6_105,s7:s7_106,sp:sp_95
l2307BB84:
	a5_108 = (a0_76 >>u 5<u32> << 2<i32>) + (sp_282 + 16<i32>)
	a4_109 = Mem75[a5_108 + -8<i32>:int32]
	Mem123[a5_108 + 4088<i32>:word32] = s4_103 << a0_76 | a4_109
l2307BB9C:
	s7_106 = s7_106 + 1<32>
	s6_105 = s6_105 + 8<32>
l2307BB60:
	word32 a1_128 = s3_100
	branch s3_100 >= 0<32> l2307BB68
l2307BB66:
	a1_128 = 0xFFFFFFFF<32>
l2307BB68:
	word32 s1_158 = aos_sem_wait(sp_282 + 4<i32>, a1_128, a2_107, a3_110, a4_109, a5_108, mstatus, Mem75[sp_282 + 20<i32>:word32], Mem75[sp_282 + 148<i32>:word32], Mem75[sp_282 + 264<i32>:word32], Mem75[sp_282 + 328<i32>:word32], out a0_150, out a4_109, out s2_159)
	a3_110 = 0<32>
l2307BBE6:
	branch a3_110 < s2_159 l2307BBBC
l2307BBBC:
	word32 a5_171 = Mem170[s1_158 + -6<i32>:int32]
	a4_109 = Mem170[(a5_171 >>u 5<u32> << 2<i32>) + (sp_282 + 16<i32>) + -8<i32>:int32]
	branch (1<32> << a5_171 & a4_109) == 0<32> l2307BBE2
l2307BBD6:
	Mem183[s1_158:word16] = SLICE(CONVERT(Mem170[s1_158:uint16], uint16, word32) | 1<i32>, word16, 0)
l2307BBE2:
	a3_110 = a3_110 + 1<32>
	s1_158 = s1_158 + 8<32>
l2307BBEA:
	s4_188 = 0<32>
l2307BBEC:
	word32 s1_189 = 0<32>
	word32 s3_190 = 0<32>
	word32 s5_191 = 1<32>
l2307BBF2:
	branch s3_190 < s2_159 l2307BC1C
l2307BC1C:
	word32 s0_196 = Mem307[a0_150:word32]
	branch s5_191 >= a0_150 l2307BC40
l2307BC22:
	word32 a5_199
	a0_150 = get_file(a0_150, out a5_199)
	branch a0_150 == 0<32> l2307BC40
l2307BC28:
	word32 a5_206 = Mem307[Mem307[a5_199:word32] + 20<i32>:word32]
	word32 s0_215
	call a5_206 (retsize: 0;)
		uses: a0:Mem307[a5_199:word32],a1:0<32>,a2:0<32>,a3:0<32>,a4:0<32>,a5:a5_206,mstatus:mstatus_212,ra:ra_207,s0:s0_196,s1:s1_208,s2:s2_193,s3:s3_192,s4:s4_209,s5:s5_197,s6:s6_210,s7:s7_211,Stack +00A8:dwArgA8,Stack +00E8:dwArgE8,Stack +0128:dwArgE8
		defs: a0:a0_217,a3:a3_229,a4:a4_228,mstatus:mstatus_234,ra:ra_220,s0:s0_215,s1:s1_221,s2:s2_216,s3:s3_219,s4:s4_222,s5:s5_223,s6:s6_224,s7:s7_225
	branch CONVERT(Mem307[s0_215 + 6<i32>:int16], int16, int32) == 0<32> l2307BC40
l2307BC3E:
	s1_189 = s1_189 + 1<32>
l2307BC40:
	s3_190 = s3_190 + 1<32>
l2307BBF6:
	word32 a1_251
	word32 a3_253
	word32 a4_254
	word32 a5_255
	word32 s4_259
	word32 s1_258 = aos_sem_free(fp - 60<i32>, a3_110, a4_109, mstatus, dwArg0118, dwArg0158, out a1_251, out a3_253, out a4_254, out a5_255, out s4_259)
	branch s4_259 == 0<32> l2307BC00
l2307BBFE:
	s1_258 = 0<32>
l2307BC00:
	0<32> = dwArg0198
	s1Out = s1_258
	a0Out = s1_258
	a1Out = a1_251
	a3Out = a3_253
	a4Out = a4_254
	a5Out = a5_255
	s2Out = s2_159
	s3Out = s3_190
	s4Out = dwArgF4
	s5Out = s5_191
	mstatusOut = mstatus
	return ra
aos_poll_exit:


void aos_fcntl(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_poll_read_fd
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
aos_fcntl_entry:
l2307BC46:
	branch a0 < 0<32> l2307BC56
l2307BC4C:
	branch a0 > 1<32> l2307BC56
l2307BC54:
l2307BC56:
	return
aos_fcntl_exit:


void dfl_entry(word32 s0, word32 a2, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
dfl_entry_entry:
l2307BC5A:
	word32 a2_15
	word32 a5_18
	word32 s1_19
	word32 s0_24
	word32 a0_70
	word32 a1_71
	word32 a3_72
	word32 a4_73
	word32 a6_74
	word32 s4_75
	word32 t3_76
	vPortFree(Mem9[s0 + 4<i32>:word32], a2, a5, mstatus, dwArg0148, dwArg0188, out s0_24, out s1_19, out a0_70, out a1_71, out a2_15, out a3_72, out a4_73, out a5_18, out a6_74, out s4_75, out t3_76)
	word32 a3_29
	word32 a4_30
	word32 a5_31
	call s0_24 (retsize: 0;)
		uses: a0:s1_19,a2:a2_15,a5:a5_18,mstatus:mstatus,Stack +0158:dwArg0148,Stack +0198:dwArg0188
		defs: a3:a3_29,a4:a4_30,a5:a5_31
l2307BC78_thunk_vTaskDelete:
	word32 a0_77
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 s2_81
	vTaskDelete(0<32>, dwArg10, a3_29, a4_30, a5_31, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_77, out a3_78, out a4_79, out a5_80, out s2_81)
	return
dfl_entry_exit:


void aos_task_new(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArgA8, word32 dwArgC8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_cmd
//      ipus_test_cmd
//      ipu_test_cmd
//      ipc_test_cmd
//      ips_test_cmd
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
aos_task_new_entry:
l2307BC7C:
	word32 a3_35
	word32 a4_36
	word32 a5_37
	word32 s1_40
	word32 s8_259
	word32 s4_258
	word32 s3_257
	word32 s2_256
	word32 a6_255
	word32 a2_254
	word32 a1_253
	word32 a0_252
	pvPortMalloc(ra, s1, 156<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_40, out a0_252, out a1_253, out a2_254, out a3_35, out a4_36, out a5_37, out a6_255, out s2_256, out s3_257, out s4_258, out s8_259)
	word32 a0_49
	word32 a3_52
	word32 a4_53
	word32 a5_54
	word32 s3_59
	word32 s1_260
	word32 a1_261
	word32 a2_262
	word32 a6_263
	word32 s2_264
	word32 s4_265
	word32 s8_266
	pvPortMalloc(ra, s1_40, 0xC<32>, a3_35, a4_36, a5_37, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_260, out a0_49, out a1_261, out a2_262, out a3_52, out a4_53, out a5_54, out a6_263, out s2_264, out s3_59, out s4_265, out s8_266)
	word32 a0_66
	word32 s1_74
	word32 s3_76
	word32 s4_77
	word32 a1_267
	word32 a2_268
	word32 a3_269
	word32 a4_270
	word32 a5_271
	word32 a6_272
	word32 s2_273
	word32 s8_274
	word32 s0_73 = pvPortMalloc(ra, a0_49, s3_59, a3_52, a4_53, a5_54, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_74, out a0_66, out a1_267, out a2_268, out a3_269, out a4_270, out a5_271, out a6_272, out s2_273, out s3_76, out s4_77, out s8_274)
	word32 t1_275
	word32 a0_276
	word32 a1_277
	word32 a2_278
	word32 a3_279
	word32 a4_280
	word32 a5_281
	word32 t1_282
	word32 a0_283
	word32 a1_284
	word32 a2_285
	word32 a3_286
	word32 a4_287
	word32 a5_288
	word32 ra_102 = memset(memset(ra, a0_66, 0<32>, s3_76, out t1_275, out a0_276, out a1_277, out a2_278, out a3_279, out a4_280, out a5_281), s0_73, 0<32>, 156<i32>, out t1_282, out a0_283, out a1_284, out a2_285, out a3_286, out a4_287, out a5_288)
	Mem106[0x50<32>:word32] = s0_73
	Mem109[s0_73 + 116<i32>:word32] = a0_66
	word32 a2_289
	word32 a3_290
	word32 a4_291
	word32 a5_292
	strncpy(s0_73 + 120<i32>, s4_77, 0x1F<32>, out a2_289, out a3_290, out a4_291, out a5_292)
	Mem122[s0_73 + 152<i32>:word32] = 0x20171020<32>
	Mem124[s0_73:word32] = s1_74
	Mem125[s1_74 + 4<i32>:word32] = a1
	Mem126[s1_74 + 8<i32>:word32] = a2
	word32 a0_134
	word32 a2_135
	word32 a5_136
	word32 s0_138
	word32 s2_148
	word32 tp_293
	word32 t0_294
	word32 s1_295
	word32 a3_296
	word32 a4_297
	word32 s3_298
	word32 s6_299
	word32 s7_300
	xTaskCreateStatic(ra_102, 0x2307BC5A<32>, s4_77, s3_76 >>u 2<u32>, s1_74, 0xA<32>, a0_66, s0_73, mstatus, s4, dwArg04, dwArgC8, dwArg0194, out tp_293, out t0_294, out s0_138, out s1_295, out a0_134, out a2_135, out a3_296, out a4_297, out a5_136, out s2_148, out s3_298, out s6_299, out s7_300)
	branch a0_134 != 0<32> l2307BD32
l2307BD32:
l2307BD0A:
	word32 a2_158
	word32 a5_161
	word32 s0_301
	word32 s1_302
	word32 a0_303
	word32 a1_304
	word32 a3_305
	word32 a4_306
	word32 a6_307
	word32 s4_308
	word32 t3_309
	vPortFree(s0_138, a2_135, a5_136, mstatus, dwArg0138, dwArg0178, out s0_301, out s1_302, out a0_303, out a1_304, out a2_158, out a3_305, out a4_306, out a5_161, out a6_307, out s4_308, out t3_309)
	word32 a2_171
	word32 a5_174
	word32 s1_175
	word32 s0_310
	word32 a0_311
	word32 a1_312
	word32 a3_313
	word32 a4_314
	word32 a6_315
	word32 s4_316
	word32 t3_317
	vPortFree(s2_148, a2_158, a5_161, mstatus, dwArg0138, dwArg0178, out s0_310, out s1_175, out a0_311, out a1_312, out a2_171, out a3_313, out a4_314, out a5_174, out a6_315, out s4_316, out t3_317)
	word32 s0_318
	word32 s1_319
	word32 a0_320
	word32 a1_321
	word32 a2_322
	word32 a3_323
	word32 a4_324
	word32 a5_325
	word32 a6_326
	word32 s4_327
	word32 t3_328
	vPortFree(s1_175, a2_171, a5_174, mstatus, dwArg0138, dwArg0178, out s0_318, out s1_319, out a0_320, out a1_321, out a2_322, out a3_323, out a4_324, out a5_325, out a6_326, out s4_327, out t3_328)
l2307BD1E:
	0<32> = dwArgA8
	return
aos_task_new_exit:


void aos_task_exit(word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tftp_ota_thread
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
aos_task_exit_entry:
l2307BD36:
l2307BD38_thunk_vTaskDelete:
	word32 a0_28
	word32 a3_29
	word32 a4_30
	word32 a5_31
	word32 s2_32
	vTaskDelete(0<32>, a2, a3, a4, a5, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_28, out a3_29, out a4_30, out a5_31, out s2_32)
	return
aos_task_exit_exit:


word32 aos_task_key_create(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_init
// MayUse:  a0:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
aos_task_key_create_entry:
l2307BD3C:
	word32 a4_15
	word32 a5_14 = 0x20171020<32>
	word32 a5_59
	branch Mem7[xTaskGetCurrentTaskHandle(out a5_59) + 152<i32>:int32] != 0x20171020<32> l2307BD9C
l2307BD9C:
	a4_15 = 0xFFFFFFFF<32>
l2307BD58:
	word32 a4_18
	word32 a0_16 = Mem7[0x20171080<32>:word32]
	branch true l2307BD8A
l2307BD8A:
	a4_18 = 0<32>
	a3 = 1<32>
l2307BD60:
	branch true l2307BD90
l2307BD90:
	a4_18 = 1<32>
	a3 = 2<32>
l2307BD66:
	branch true l2307BD96
l2307BD96:
	a4_18 = 2<32>
	a3 = 4<32>
l2307BD6C:
	a3 = 0<32>
	a4_15 = 0xFFFFFFFF<32>
	branch false l2307BD80
l2307BD74:
	a4_18 = 3<32>
	a3 = 8<32>
l2307BD78:
	a5_14 = a3 | 0x20171020<32>
	Mem34[a5_14 + 96<i32>:word32] = a0_16
	Mem37[a4_18:word32] = a0
	a4_15 = 0<32>
l2307BD80:
	a4Out = a4_15
	a5Out = a5_14
	return a3
aos_task_key_create_exit:


word32 aos_task_setspecific(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_context
//      aos_loop_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5 s0
// Trashed: a0 a2 a3 a4 a5 s0 s8 t3
// Preserved: sp
aos_task_setspecific_entry:
l2307BDA0:
	word32 a0_15
	word32 s0_24 = a0
	word32 a5_13
	word32 a0_12 = xTaskGetCurrentTaskHandle(out a5_13)
	word32 a4_14 = 3<32>
	branch a0 >u 3<32> l2307BDDC
l2307BDDC:
	a0_15 = 0xFFFFFFFF<32>
l2307BDB4:
	a3 = Mem11[a0_12 + 152<i32>:int32]
	a4_14 = 0x20171020<32>
	a5_13 = a0_12
	a0_15 = 0xFFFFFFFF<32>
	branch a3 != 0x20171020<32> l2307BDD4
l2307BDC8:
	s0_24 = (a0 + 0x18<32> << 2<i32>) + a0_12
	Mem25[a1 + 4<i32>:word32] = s0_24
	a0_15 = 0<32>
l2307BDD4:
	a0Out = a0_15
	a3Out = a3
	a4Out = a4_14
	a5Out = a5_13
	return s0_24
aos_task_setspecific_exit:


word32 aos_task_getspecific(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_context
//      aos_loop_init
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
aos_task_getspecific_entry:
l2307BDE0:
	word32 a5_11
	word32 a0_10 = xTaskGetCurrentTaskHandle(out a5_11)
	word32 a4_12 = 3<32>
	branch a0 >u 3<32> l2307BE16
l2307BE16:
l2307BDF2:
	a3 = Mem7[a0_10 + 152<i32>:int32]
	a4_12 = 0x20171020<32>
	a5_11 = a0_10
	branch a3 != 0x20171020<32> l2307BE0E
l2307BE06:
l2307BE0E:
	a3Out = a3
	a4Out = a4_12
	a5Out = a5_11
	return 0<32>
aos_task_getspecific_exit:


word32 aos_mutex_new(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
//      event_open
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
aos_mutex_new_entry:
l2307BE1A:
	word32 a3_17
	word32 a4_18
	word32 a0_28
	word32 a1_55
	word32 a5_56
	word32 s2_57
	word32 s3_58
	word32 s1_21 = xQueueCreateMutex(ra, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_28, out a1_55, out a3_17, out a4_18, out a5_56, out s2_57, out s3_58)
	Mem37[a0_28:word32] = a0
	a0Out = 0<32> - CONVERT(a0_28 <u 1<i32>, bool, word32)
	a3Out = a3_17
	a4Out = a4_18
	return s1_21
aos_mutex_new_exit:


word32 aos_mutex_free(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
//      event_close
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
aos_mutex_free_entry:
l2307BE3A:
	word32 a0_5 = Mem0[a0:word32]
l2307BE3C_thunk_vQueueDelete:
	word32 a0_9
	word32 a2_11
	word32 a4_13
	word32 a5_14
	word32 s1_27
	word32 a1_28
	word32 a3_29
	word32 s4_30
	word32 s0_16 = vQueueDelete(a0_5, a3, a4, mstatus, dwArg0158, dwArg0198, out s1_27, out a0_9, out a1_28, out a2_11, out a3_29, out a4_13, out a5_14, out s4_30)
	a0Out = a0_9
	a2Out = a2_11
	a4Out = a4_13
	a5Out = a5_14
	return s0_16
aos_mutex_free_exit:


word32 aos_mutex_lock(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_read
//      vfs_uart_poll
//      vfs_uart_sync
//      vfs_uart_ioctl
//      event_poll
//      event_write
//      event_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aos_mutex_lock_entry:
l2307BE40:
	branch a0 == 0<32> l2307BE54
l2307BE54:
	s1Out = s1
	a0Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
l2307BE42:
	word32 a3_18
	word32 a4_19
	word32 a5_20
	word32 s1_23
	word32 s2_24
	word32 s3_25
	word32 s4_26
	word32 a0_73
	word32 a1_74
	word32 a2_75
	word32 s8_76
	word32 s0_22 = xQueueSemaphoreTake(Mem7[a0:word32], a1, a2, a3, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_23, out a0_73, out a1_74, out a2_75, out a3_18, out a4_19, out a5_20, out s2_24, out s3_25, out s4_26, out s8_76)
	s1Out = s1_23
	a0Out = <invalid>
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_20
	s2Out = s2_24
	s3Out = s3_25
	s4Out = s4_26
	return s0_22
aos_mutex_lock_exit:


void aos_mutex_unlock(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_read
//      vfs_uart_poll
//      vfs_uart_sync
//      vfs_uart_ioctl
//      event_poll
//      event_write
//      event_read
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_mutex_unlock_entry:
l2307BE58:
	branch a0 == 0<32> l2307BE72
l2307BE72:
	return
l2307BE5A:
	word32 s1_93
	word32 a0_94
	word32 a1_95
	word32 a2_96
	word32 a3_97
	word32 a4_98
	word32 a5_99
	word32 a7_100
	word32 s2_101
	word32 s3_102
	word32 s4_103
	word32 s5_104
	word32 s6_105
	word32 s8_106
	xQueueGenericSend(Mem7[a0:word32], 0<32>, 0<32>, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_93, out a0_94, out a1_95, out a2_96, out a3_97, out a4_98, out a5_99, out a7_100, out s2_101, out s3_102, out s4_103, out s5_104, out s6_105, out s8_106)
	return
aos_mutex_unlock_exit:


word32 aos_sem_new(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArgE8, word32 dwArg0128, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_poll
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a2 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
aos_sem_new_entry:
l2307BE76:
	word32 a0_16
	word32 s2_25
	word32 s3_26
	word32 s1_44
	word32 a1_45
	word32 a3_46
	word32 a4_47
	word32 s4_48
	word32 s8_49
	Mem31[a0_16:word32] = xQueueCreateCountingSemaphore(ra, 128<i32>, a1, a3, a4, a5, mstatus, dwLoc10, s0, dwArgE8, dwArg0128, out s1_44, out a0_16, out a1_45, out a3_46, out a4_47, out s2_25, out s3_26, out s4_48, out s8_49)
	s2Out = s2_25
	s3Out = s3_26
	return dwArg10
aos_sem_new_exit:


word32 aos_sem_free(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_poll
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
aos_sem_free_entry:
l2307BE92:
	branch a0 == 0<32> l2307BE9A
l2307BE9A:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1
l2307BE94:
	word32 a0_5 = Mem0[a0:word32]
l2307BE96_thunk_vQueueDelete:
	word32 a1_10
	word32 a3_12
	word32 a4_13
	word32 a5_14
	word32 s1_17
	word32 s4_18
	word32 a0_50
	word32 a2_51
	vQueueDelete(a0_5, a3, a4, mstatus, dwArg0158, dwArg0198, out s1_17, out a0_50, out a1_10, out a2_51, out a3_12, out a4_13, out a5_14, out s4_18)
	a1Out = a1_10
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_14
	s4Out = s4_18
	return s1_17
aos_sem_free_exit:


word32 aos_sem_wait(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_poll
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aos_sem_wait_entry:
l2307BE9C:
	branch a0 == 0<32> l2307BEB8
l2307BEB8:
	a0Out = 0xFFFFFFFF<32>
	a4Out = a4
	s2Out = s2
	return s1
l2307BE9E:
	word32 a0_15
	word32 a4_19
	word32 s1_23
	word32 s2_24
	word32 a1_70
	word32 a2_71
	word32 a3_72
	word32 a5_73
	word32 s3_74
	word32 s4_75
	word32 s8_76
	xQueueSemaphoreTake(Mem7[a0:word32], a1, a2, a3, a4, a5, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_23, out a0_15, out a1_70, out a2_71, out a3_72, out a4_19, out a5_73, out s2_24, out s3_74, out s4_75, out s8_76)
	a0Out = 0<32> - CONVERT(a0_15 != 0xFFFFFFFF<32>, bool, word32)
	a4Out = a4_19
	s2Out = s2_24
	return s1_23
aos_sem_wait_exit:


void aos_sem_signal(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_poll_notify
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
aos_sem_signal_entry:
l2307BEBC:
	branch a0 == 0<32> l2307BEDE
l2307BEC4:
	word32 a5_9 = Mem6[0x4200F560<32>:int32]
	word32 a0_10 = Mem6[a0:word32]
	branch a5_9 == 0<32> l2307BEE4
l2307BEE4:
	word32 s1_118
	word32 a0_119
	word32 a1_120
	word32 a2_121
	word32 a3_122
	word32 a4_123
	word32 a5_124
	word32 a7_125
	word32 s2_126
	word32 s3_127
	word32 s4_128
	word32 s5_129
	word32 s6_130
	word32 s8_131
	xQueueGenericSend(a0_10, 0<32>, 0<32>, a4, a5_9, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_118, out a0_119, out a1_120, out a2_121, out a3_122, out a4_123, out a5_124, out a7_125, out s2_126, out s3_127, out s4_128, out s5_129, out s6_130, out s8_131)
l2307BED0:
	word32 a5_43
	word32 a3_46 = xQueueGiveFromISR(a0_10, fp + 0xFFFFFFEC<32>, a2, a4, a5_9, mstatus, out a5_43)
	branch a5_43 == 0<32> l2307BEDE
l2307BEDA:
	word32 a0_132
	word32 a4_133
	word32 a5_134
	vTaskSwitchContext(a3_46, mstatus, out a0_132, out a4_133, out a5_134)
l2307BEDE:
	return
aos_sem_signal_exit:


word32 aos_malloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg8C, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_cli_init
//      proc_onecmd
//      romfs_opendir
//      event_open
//      event_write
//      aos_register_event_filter
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +008C:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
aos_malloc_entry:
l2307BEF0:
l2307BEF0_thunk_pvPortMalloc:
	word32 a0_11
	word32 a3_14
	word32 a4_15
	word32 a5_16
	word32 s1_19
	word32 s2_20
	word32 s3_21
	word32 s4_22
	word32 a1_39
	word32 a2_40
	word32 a6_41
	word32 s8_42
	word32 s0_18 = pvPortMalloc(ra, s1, a0, a3, a4, a5, mstatus, dwArg40, dwArg44, dwArg8C, dwArg0138, dwArg0178, out s1_19, out a0_11, out a1_39, out a2_40, out a3_14, out a4_15, out a5_16, out a6_41, out s2_20, out s3_21, out s4_22, out s8_42)
	s1Out = s1_19
	a0Out = a0_11
	a3Out = a3_14
	a4Out = a4_15
	a5Out = a5_16
	s2Out = s2_20
	s3Out = s3_21
	s4Out = s4_22
	return s0_18
aos_malloc_exit:


word32 free(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan
//      http_req
//      base_station_info
//      udp_send_data
//      tcp_send_data
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
free_entry:
l2307BEF4:
l2307BEF4_thunk_vPortFree:
	word32 a2_8
	word32 a5_11
	word32 s1_12
	word32 a0_14
	word32 s0_25
	word32 a1_26
	word32 a3_27
	word32 a4_28
	word32 a6_29
	word32 s4_30
	word32 t3_31
	vPortFree(a0, a2, a5, mstatus, dwArg0158, dwArg0198, out s0_25, out s1_12, out a0_14, out a1_26, out a2_8, out a3_27, out a4_28, out a5_11, out a6_29, out s4_30, out t3_31)
	a0Out = a0_14
	a2Out = a2_8
	a5Out = a5_11
	return s1_12
free_exit:


word32 aos_free(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_onecmd
//      romfs_closedir
//      romfs_opendir
//      event_close
//      event_read
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 s1 t3 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
aos_free_entry:
l2307BEF8:
l2307BEF8_thunk_vPortFree:
	word32 a2_8
	word32 a3_9
	word32 a4_10
	word32 a5_11
	word32 s1_12
	word32 a0_14
	word32 a6_16
	word32 t3_19
	word32 s0_30
	word32 a1_31
	word32 s4_32
	word32 tp_13 = vPortFree(a0, a2, a5, mstatus, dwArg0158, dwArg0198, out s0_30, out s1_12, out a0_14, out a1_31, out a2_8, out a3_9, out a4_10, out a5_11, out a6_16, out s4_32, out t3_19)
	s1Out = s1_12
	a0Out = a0_14
	a2Out = a2_8
	a3Out = a3_9
	a4Out = a4_10
	a5Out = a5_11
	a6Out = a6_16
	t3Out = t3_19
	return tp_13
aos_free_exit:


word32 malloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg8C, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan
//      http_req
//      base_station_info
//      bl_cipsend
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +008C:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
malloc_entry:
l2307BEFC:
l2307BEFC_thunk_pvPortMalloc:
	word32 a0_11
	word32 a2_13
	word32 a3_14
	word32 a4_15
	word32 a5_16
	word32 s1_19
	word32 s2_20
	word32 s3_21
	word32 a1_39
	word32 a6_40
	word32 s4_41
	word32 s8_42
	word32 s0_18 = pvPortMalloc(ra, s1, a0, a3, a4, a5, mstatus, dwArg40, dwArg44, dwArg8C, dwArg0138, dwArg0178, out s1_19, out a0_11, out a1_39, out a2_13, out a3_14, out a4_15, out a5_16, out a6_40, out s2_20, out s3_21, out s4_41, out s8_42)
	s1Out = s1_19
	a0Out = a0_11
	a2Out = a2_13
	a3Out = a3_14
	a4Out = a4_15
	a5Out = a5_16
	s2Out = s2_20
	s3Out = s3_21
	return s0_18
malloc_exit:


word32 aos_now_ms(word32 a3, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event
//      uptime_cmd
//      sec_trng_IRQHandler
//      aos_post_delayed_action
//      aos_loop_run
// MayUse:  a3:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s0
// Trashed: a0 a1 a2 a4 a5 s0 t3
// Preserved: sp
aos_now_ms_entry:
l2307BF00:
	word32 a0_10 = xTaskGetTickCount2(fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>)
	branch a0_10 == 1<32> l2307BF18
l2307BF18:
	word32 a5_19 = 0<32> - a3
	word32 a0_21 = a0_10 + a5_19
	a0Out = a0_21
	word32 a4_18 = CONVERT(a3 >u 0xFFFFFFFF<32>, bool, word32)
	word32 a5_23 = CONVERT(a0_21 <u a5_19, bool, word32)
	a1Out = (a3 >>u 0x1F<u32>) + a4_18 + a5_23
	a2Out = dwArg84
	a4Out = a4_18
	a5Out = a5_23
	return dwArg24
aos_now_ms_exit:
l2307BF16:


void event_poll(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg74, word32 dwArg84, word32 dwArgA4, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0074:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
event_poll_entry:
l2307BF3A:
	word32 a3_26
	word32 s1_31
	word32 s4_140
	word32 s3_139
	word32 s2_138
	word32 a0_137
	word32 a4_27
	word32 a5_28
	aos_mutex_lock(s0, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_31, out a0_137, out a3_26, out a4_27, out a5_28, out s2_138, out s3_139, out s4_140)
	word32 s0_39 = dwArg84
	branch s1_31 != 0<32> l2307BF76
l2307BF76:
	s0_39 = Mem20[a5_28 + 16<i32>:word32]
	Mem42[a2 + 4<i32>:word32] = s0_39
	Mem43[a3_26 + 8<i32>:word32] = s0_39
	Mem44[a4_27 + 12<i32>:word32] = s0_39
	branch a5_28 == 0<32> l2307BF64
l2307BF80:
	word32 a5_45 = CONVERT(Mem44[a3_26 + 6<i32>:uint16], uint16, word32)
	Mem49[a3_26 + 6<i32>:word16] = SLICE(a5_45 | 1<i32>, word16, 0)
	call a2 (retsize: 0;)
		uses: a0:a3_26,a1:a4_27,a2:a2,a3:a3_26,a4:a4_27,a5:a5_45 | 1<i32>,mstatus:mstatus,ra:ra,s0:s0_41,s1:s1_31,Stack +0014:dwLoc0C,Stack +0094:dwArg74,Stack +00A4:dwArg84,Stack +00C4:dwArgA4,Stack +0108:dwArgE8,Stack +0148:dwArg0128
		defs: a4:a4_58,a5:a5_63,mstatus:mstatus_64,s0:s0_53
l2307BF5C:
	Mem68[dwArg84 + 4<i32>:word32] = 0<32>
	Mem69[dwArg84 + 12<i32>:word32] = 0<32>
l2307BF64:
	aos_mutex_unlock(s0_39, a4_27, a5_28, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168)
	return
event_poll_exit:


void event_open(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
event_open_entry:
l2307BF94:
	word32 a0_17
	word32 s1_91
	word32 a3_92
	word32 a4_93
	word32 a5_94
	word32 s2_95
	word32 s3_96
	word32 s4_97
	aos_malloc(ra, a1, 40<i32>, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_91, out a0_17, out a3_92, out a4_93, out a5_94, out s2_95, out s3_96, out s4_97)
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 t1_98
	word32 a0_99
	word32 a1_100
	word32 a2_101
	word32 a0_102
	word32 a3_103
	word32 a4_104
	word32 s1_53 = aos_mutex_new(memset(ra, a0_17, 0<32>, 40<i32>, out t1_98, out a0_99, out a1_100, out a2_101, out a3_38, out a4_39, out a5_40), a0_17, a3_38, a4_39, a5_40, mstatus, dwLoc10, s0, ra, dwArgE8, dwArg0128, dwArg0168, out a0_102, out a3_103, out a4_104)
	Mem68[a0_17 + 40<i32>:word32] = a0_17
	Mem69[a0_17 + 44<i32>:word32] = a0_17
	Mem71[a0_17 + 64<i32>:word32] = a0_17
	Mem72[a0_17 + 68<i32>:word32] = a0_17
	Mem73[a0_17 + 4<i32>:word32] = s1_53
	return
event_open_exit:


void _event_write.isra.0(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_ioctl
//      event_write
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
_event_write.isra.0_entry:
l2307BFD6:
	word32 a5_156
	word32 a4_107
	word32 s0_121
	word32 s1_73
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 a0_287
	word32 s2_288
	word32 s1_36
	word32 s4_39
	word32 s3_108
	aos_mutex_lock(a0, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, s0, ra, dwArgD8, dwArg0118, out s1_36, out a0_287, out a3_31, out a4_32, out a5_33, out s2_288, out s3_108, out s4_39)
	word32 s2_134 = a2
	branch a5_33 <= 0<32> l2307C068
l2307BFFC:
	s1_36 = Mem22[a5_33 + 8<i32>:word32]
	branch a2 != a5_33 l2307C068
l2307C068:
	word32 a0_58
	word32 s1_292
	word32 a3_293
	s0_121 = aos_malloc(ra, s1_36, a2 + 12<i32>, a3_31, a4_32, a5_33, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_292, out a0_58, out a3_293, out a4_107, out a5_156, out s2_134, out s3_108, out s4_39)
	s1_73 = a0_58
	branch a0_58 != 0<32> l2307C012
l2307C078:
l2307C004:
	s1_73 = Mem22[a4_32:word32]
	Mem78[a5_33 + 4<i32>:word32] = a4_32
	Mem79[a4_32:word32] = a5_33
	Mem82[a5_33 + 0x1B<32>:word32] = Mem79[a5_33 + 28<i32>:word32]
	a5_156 = a5_33 + 0xFFFFFFFF<32>
l2307C012:
	word32 s0_85 = Mem84[a5_156 + 16<i32>:word32]
	Mem91[a5_156 + 0x11<32>:word32] = s0_85
	Mem93[a2 + 8<i32>:word32] = s1_73
	word32 a0_89 = s1_73 + 12<i32>
	word32 a1_97
	word32 a2_98
	word32 a3_99
	word32 a7_291
	word32 a4_289
	word32 a6_290
	memcpy(a0_89, s4_39, a2, out a1_97, out a2_98, out a3_99, out a4_289, out a5_156, out a6_290, out a7_291)
	a4_107 = s0_85 + 20<i32>
	branch s3_108 == 0<32> l2307C07C
l2307C07C:
	word32 s0_109 = Mem93[a5_156 + 20<i32>:word32]
	Mem110[s0_85 + 24<i32>:word32] = s1_73
	Mem111[a5_156:word32] = s1_73
	Mem112[s1_73 + 4<i32>:word32] = a5_156
	Mem113[s1_73 + 20<i32>:word32] = s0_109
l2307C02C:
	word32 s0_114 = Mem93[a5_156 + 24<i32>:word32]
	Mem115[s0_85 + 20<i32>:word32] = s1_73
	Mem116[a5_156 + 4<i32>:word32] = s1_73
	Mem117[s1_73 + 24<i32>:word32] = s0_114
	Mem118[s1_73:word32] = a5_156
l2307C036:
	s0_121 = Mem120[a5_156 + 4<i32>:word32]
	branch a5_156 == 0<32> l2307C050
l2307C03A:
	word32 a5_124 = CONVERT(Mem120[s0_85 + 26<i32>:uint16], uint16, word32)
	Mem126[s0_85 + 26<i32>:word16] = SLICE(a5_124 | 1<i32>, word16, 0)
	call a5_124 | 1<i32> (retsize: 0;)
		uses: a0:a0_89,a1:a1_97,a2:a2_98,a3:a3_99,a4:s0_85 + 20<i32>,a5:a5_124 | 1<i32>,mstatus:mstatus,ra:ra,s0:Mem126[a0_89 + 8<i32>:word32],s1:s1_88,s2:s2_134,s3:s3_108,s4:s4_86,Stack +0040:dwArg10,Stack +0044:dwArg14,Stack +0108:dwArgD8,Stack +0138:dwArg0108,Stack +0148:dwArg0118,Stack +0178:dwArg0148
		defs: a4:a4_157,a5:a5_156,mstatus:mstatus_161,s0:s0_148
l2307C050:
	aos_mutex_unlock(s0_121, a4_107, a5_156, mstatus, s0, ra, dwArgD8, dwArg0118, dwArg0158)
	0<32> = dwArg0128
	return
_event_write.isra.0_exit:


void event_ioctl(word32 ra, word32 s0, word32 a0, word32 a1, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
event_ioctl_entry:
l2307C088:
	word32 a3_10
	word32 a4_11 = 1<32>
	branch (a1 & 0xF<32>) == 1<32> l2307C0A2
l2307C0A2:
	a3_10 = 0<32>
l2307C098:
	a4_11 = 2<32>
	branch (a1 & 0xF<32>) == 2<32> l2307C0AA
l2307C0AA:
	a3_10 = 1<32>
l2307C0A4:
	word32 a0_17 = Mem0[a0 + 4<i32>:word32]
l2307C0A6_thunk__event_write.isra.0:
	_event_write.isra.0(ra, s0, a0_17, a1 >> 4<u32>, a3_10, a4_11, a1 & 0xF<32>, s3, mstatus, dwArg10, dwArg14, dwArgD8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158)
	return
l2307C09E:
	return
event_ioctl_exit:


void event_write(word32 ra, word32 s0, word32 a0, word32 a2, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
event_write_entry:
l2307C0AE:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
l2307C0B2_thunk__event_write.isra.0:
	_event_write.isra.0(ra, s0, a0_5, a2, 0<32>, a4, a5, s3, mstatus, dwArg10, dwArg14, dwArgD8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158)
	return
event_write_exit:


void event_close(word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
event_close_entry:
l2307C0B6:
	word32 a0_15
	word32 a4_19
	word32 a5_20
	word32 a2_17
	word32 s1_27 = aos_mutex_free(s0, a3, a4, mstatus, dwArg0148, dwArg0188, out a0_15, out a2_17, out a4_19, out a5_20) + 20<i32>
l2307C0CA:
	word32 s0_30 = Mem29[a0_15 + 24<i32>:word32]
	branch a0_15 != s1_27 l2307C0EC
l2307C0EC:
	word32 a0_35 = Mem29[a5_20 + 4<i32>:word32]
	Mem36[a5_20 + 4<i32>:word32] = a4_19
	Mem37[a4_19:word32] = a5_20
	word32 t3_116
	word32 a6_115
	word32 a3_114
	aos_free(a0_35, a2_17, a5_20, mstatus, dwArg0148, dwArg0188, out s1_27, out a0_15, out a2_17, out a3_114, out a4_19, out a5_20, out a6_115, out t3_116)
l2307C0D0:
	word32 s1_53 = s0_30 + 32<i32>
l2307C0D4:
	word32 s0_56 = Mem55[a0_15 + 36<i32>:word32]
	branch a0_15 != s1_53 l2307C0FA
l2307C0FA:
	word32 a0_61 = Mem55[a5_20 + 4<i32>:word32]
	Mem62[a5_20 + 4<i32>:word32] = a4_19
	Mem63[a4_19:word32] = a5_20
	word32 a3_117
	word32 a6_118
	word32 t3_119
	aos_free(a0_61, a2_17, a5_20, mstatus, dwArg0148, dwArg0188, out s1_53, out a0_15, out a2_17, out a3_117, out a4_19, out a5_20, out a6_118, out t3_119)
l2307C0DA:
	word32 a2_122
	word32 a3_123
	word32 s1_120
	word32 a0_121
	word32 a4_124
	word32 a5_125
	word32 a6_126
	word32 t3_127
	aos_free(s0_56, a2_17, a5_20, mstatus, dwArg0148, dwArg0188, out s1_120, out a0_121, out a2_122, out a3_123, out a4_124, out a5_125, out a6_126, out t3_127)
	return
event_close_exit:


void event_read(word32 s0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg74, word32 dwArgE8, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0074:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
event_read_entry:
l2307C108:
	branch Mem15[s0 + 16<i32>:int32] == 0<32> l2307C174
l2307C120:
	word32 a4_32
	word32 a5_33
	word32 s3_38
	word32 s4_39
	word32 a3_212
	word32 s2_213
	word32 s1_210
	word32 a0_211
	aos_mutex_lock(s0, 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_210, out a0_211, out a3_212, out a4_32, out a5_33, out s2_213, out s3_38, out s4_39)
	word32 s1_45 = Mem15[a5_33 + 4<i32>:word32]
	Mem46[a5_33 + 4<i32>:word32] = a4_32
	Mem47[a4_32:word32] = a5_33
	word32 s2_48 = Mem47[s1_45 + 8<i32>:int32]
	branch s3_38 >=u s2_48 l2307C140
l2307C13E:
	s2_48 = s3_38
l2307C140:
	word32 a4_103
	word32 a5_80
	word32 a4_56
	word32 a2_60
	word32 a3_215
	word32 a1_214
	word32 a5_216
	word32 a6_217
	word32 a7_218
	memcpy(s4_39, s1_45 + 12<i32>, s2_48, out a1_214, out a2_60, out a3_215, out a4_56, out a5_216, out a6_217, out a7_218)
	branch a4_56 > 3<32> l2307C186
l2307C186:
	word32 s1_219
	word32 a0_220
	word32 a2_221
	word32 a3_222
	word32 a6_223
	word32 t3_224
	aos_free(s1_45, a2_60, 3<32>, mstatus, dwArg0138, dwArg0178, out s1_219, out a0_220, out a2_221, out a3_222, out a4_103, out a5_80, out a6_223, out t3_224)
l2307C154:
	word32 s0_87 = Mem47[0x27<32>:word32]
	Mem89[s0_87 + 32<i32>:word32] = s1_45
	Mem90[7<32>:word32] = s1_45
	Mem91[s1_45 + 36<i32>:word32] = s0_87
	Mem92[s1_45:word32] = 3<32>
	Mem95[0x20<32>:word32] = Mem92[0x1F<32>:word32]
	a4_103 = s0_87 + 32<i32>
	a5_80 = 4<32>
l2307C168:
	word32 s0_98 = Mem97[a5_80 + 16<i32>:word32]
	word32 a5_100 = a5_80 + 0xFFFFFFFF<32>
	Mem101[a5_100 + 16<i32>:word32] = s0_98
	aos_mutex_unlock(s0_98, a4_103, a5_100, mstatus, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168)
l2307C174:
	return
event_read_exit:


word32 vfs_device_init(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg64, word32 dwArgA4, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0064:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: ra s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
vfs_device_init_entry:
l2307C18E:
	branch a5 == 1<32> l2307C1C2
l2307C1A8:
	word32 a0_23
	word32 s0_30
	word32 s1_31
	word32 a5_104
	word32 s2_105
	word32 s4_106
	ra = aos_register_driver(ra, 0x230C4560<32>, 0<32>, a3, a4, a5, mstatus, dwArg64, dwArgA4, dwArgD8, dwArg0118, dwArg0158, out s0_30, out s1_31, out a0_23, out a5_104, out s2_105, out s4_106, out s6)
	branch a0_23 != 0<32> l2307C1C2
l2307C1C0:
	Mem47[s1_31:word32] = s0_30
l2307C1C2:
	s6Out = s6
	return ra
vfs_device_init_exit:


void event_read_cb(word32 ra, word32 s1, word32 a0, word32 a4, word32 dwArg24, word32 dwArgC4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +00C4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 ra s0 s1 s4 s8 t1 t3
// Preserved: sp
event_read_cb_entry:
	uint16 wLoc1C = SLICE(dwLoc1C, uint16, 0)
l2307C1CC:
	word32 sp_3 = fp + 0xFFFFFFE0<32>
	word32 a0_14
	word32 s0_18
	word32 a1_20
	word32 ra_22 = aos_read(ra, a0, fp + 0xFFFFFFE0<32>, a4, dwLoc20, dwArg24, out s0_18, out a0_14, out a1_20)
	branch a0_14 != 0x10<32> l2307C1F4
l2307C1E2:
	word32 a4_24 = CONVERT(wLoc1C, uint16, word32)
	branch a4_24 != 256<i32> l2307C1FE
l2307C1FE:
	word32 a4_27 = Mem11[s0_18 + 4<i32>:word32]
	word32 s1_28 = 0x4200ECC4<32>
l2307C20C:
	branch s0_18 == s1_28 l2307C1F4
l2307C210:
	word32 a5_32 = CONVERT(Mem11[s0_18 + 16<i32>:uint16], uint16, word32)
	branch a5_32 == 0<32> l2307C21E
l2307C216:
	a4_27 = CONVERT(Mem11[sp_3 + 4<i32>:uint16], uint16, word32)
	branch a4_27 != a5_32 l2307C226
l2307C21E:
	call a5_32 (retsize: 0;)
		uses: a0:sp_33,a4:a4_46,ra:ra_44,s0:Mem11[a1_39 + 12<i32>:word32],s1:s1_30,Stack +0024:dwArg24,Stack +00C4:dwArgC4,Stack +FFFFFFE0:dwLoc20,Stack +FFFFFFE4:wLoc1C
		defs: a1:a1_50,a4:a4_56,ra:ra_51,s0:s0_52,s1:s1_53,sp:sp_48
l2307C226:
	s0_18 = Mem11[s0_18 + 4<i32>:word32]
l2307C1EE:
	call 256<i32> (retsize: 0;)
		uses: a0:a0_14,a2:dwArg24,a4:a4_24,ra:ra_22,s0:dwArgC4,s1:s1,Stack +0000:dwLoc20,Stack +0004:wLoc1C,Stack +0044:dwArg24,Stack +00E4:dwArgC4
l2307C1F4:
	return
event_read_cb_exit:


word32 aos_event_service_init(word32 ra, word32 s0, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0168, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_init
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: mstatus ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
aos_event_service_init_entry:
l2307C22A:
	word32 a0_13
	word32 a4_22
	word32 s3_25
	word32 s6_30
	word32 mstatus_37
	word32 s2_133
	word32 a5_132
	word32 a3_131
	word32 a2_130
	word32 s1_129
	word32 s0_128
	word32 ra_38 = aos_open(ra, 0x230C4560<32>, s2, mstatus, s0, ra, dwArg78, dwArgE8, dwArg0128, dwArg0168, out s0_128, out s1_129, out a0_13, out a2_130, out a3_131, out a4_22, out a5_132, out s2_133, out s3_25, out s6_30, out mstatus_37)
	word32 a5_40 = Mem10[a4_22 + 4<i32>:word32]
	branch a4_22 >= 0<32> l2307C250
l2307C24E:
	Mem42[a0_13 + 4<i32>:word32] = a5_40
l2307C250:
	word32 s0_60
	word32 s2_62
	word32 a1_69
	word32 a5_136
	word32 a4_135
	word32 a3_134
	word32 ra_71 = aos_poll_read_fd(ra_38, a0_13, 0x2307C1CC<32>, 0<32>, s3_25, s6_30, mstatus_37, dwArg00, dwArg04, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_60, out a1_69, out a3_134, out a4_135, out a5_136, out s2_62)
	aos_loop_set_eventfd(s0_60, a1_69)
	s2Out = s2_62
	mstatusOut = mstatus_37
	return ra_71
aos_event_service_init_exit:


word32 aos_post_event(word32 ra, word32 a0, word32 a4, word32 dwArg24, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_stack_wifi
//      wifi_prov_api_event_trigger_connect
//      wifi_prov_api_event_trigger_disconnect
//      wifi_prov_api_event_trigger_scan
//      wifi_prov_api_event_state_get
//      bl_rx_apm_sta_del_ind
//      bl_rx_apm_sta_add_ind
//      stateConnectingEnter
//      stateDisconnect_action_reconnect
//      stateConnectedIPNoEnter
//      stateGlobalGuard_AP
//      stateGlobalGuard_denoise
//      stateGlobalGuard_stop
//      stateDisconnect_enter
//      stateGlobalGuard_fw_scan
//      stateConnectedIPYes_enter
//      wifi_mgmr_start
//      cb_event_ind
//      ble_sync
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] Stack +0024:[0..31]
// LiveOut: a0 a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 t1 t3
// Preserved: sp
aos_post_event_entry:
l2307C270:
	word32 a0_22
	word32 a3_25
	word32 s0_27
	word32 a2_45
	word32 a4_46
	word32 ra_31 = aos_ioctl(ra, Mem10[0x4200ECD0<32>:int32], (a0 >>u 0xF<u32>) + 257<i32>, fp + 0xFFFFFFE0<32>, a4, 0<32>, dwArg24, out s0_27, out a0_22, out a2_45, out a3_25, out a4_46)
	s0Out = s0_27
	a0Out = a0_22
	a3Out = a3_25
	return ra_31
aos_post_event_exit:


word32 aos_register_event_filter(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg7C, word32 dwArg0128, word32 dwArg0168, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      wifi_mgmr_start
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +007C:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 a5 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
aos_register_event_filter_entry:
l2307C2A4:
	branch a1 == 0<32> l2307C2EA
l2307C2EA:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	return s1
l2307C2A6:
	word32 a0_24
	word32 a3_27
	word32 s1_32
	word32 s2_33
	word32 s3_34
	word32 s4_113
	word32 a5_112
	word32 a4_28
	word32 s0_31 = aos_malloc(ra, a2, 0x14<32>, a3, a4, a5, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_32, out a0_24, out a3_27, out a4_28, out a5_112, out s2_33, out s3_34, out s4_113)
	branch a0_24 == 0<32> l2307C2DE
l2307C2C2:
	a4_28 = Mem16[a3_27:word32]
	Mem43[s0_31 + 8<i32>:word32] = a0_24
	Mem44[a0_24 + 16<i32>:word16] = SLICE(s2_33, word16, 0)
	Mem45[a3_27:word32] = a0_24
	Mem46[s1_32 + 12<i32>:word32] = a0_24
	Mem47[a4_28 + 4<i32>:word32] = a0_24
	Mem48[a0_24 + 4<i32>:word32] = a3_27
	Mem49[a0_24:word32] = a4_28
l2307C2DE:
	0<32> = dwArg38
	a3Out = a3_27
	a4Out = a4_28
	a5Out = a0_24
	s2Out = s2_33
	s3Out = s3_34
	return s1_32
aos_register_event_filter_exit:


void at_serial_write(word32 ra, word32 a0, word32 a3, word32 a4, word32 dwArg00, word32 dwArg18, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
at_serial_write_entry:
l2307C2EE:
	word32 a5_5 = Mem0[0x4201BA0C<32>:int32]
	branch a5_5 < 0<32> l2307C304
l2307C304:
	word32 s1_103
	word32 a0_104
	word32 a1_105
	word32 a2_106
	word32 a3_107
	word32 a4_108
	word32 a5_109
	word32 a7_110
	word32 s2_111
	word32 s3_112
	word32 s4_113
	word32 s5_114
	word32 s6_115
	word32 s7_116
	word32 s8_117
	word32 s9_118
	word32 s10_119
	word32 s11_120
	word32 t4_121
	printf(ra, 0x230C4768<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_103, out a0_104, out a1_105, out a2_106, out a3_107, out a4_108, out a5_109, out a7_110, out s2_111, out s3_112, out s4_113, out s5_114, out s6_115, out s7_116, out s8_117, out s9_118, out s10_119, out s11_120, out t4_121)
	return
l2307C2FA:
l2307C300_thunk_aos_write:
	word32 t1_122
	word32 s0_123
	word32 a0_124
	word32 a1_125
	word32 a4_126
	word32 a5_127
	aos_write(ra, a5_5, a0, a4, dwArg00, dwArg44, out t1_122, out s0_123, out a0_124, out a1_125, out a4_126, out a5_127)
	return
at_serial_write_exit:


void at_serial_read(word32 ra, word32 a0, word32 a3, word32 a4, word32 dwArg00, word32 dwArg18, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
at_serial_read_entry:
l2307C31C:
	word32 a5_5 = Mem0[0x4201BA0C<32>:int32]
	branch a5_5 < 0<32> l2307C332
l2307C332:
	word32 s1_103
	word32 a0_104
	word32 a1_105
	word32 a2_106
	word32 a3_107
	word32 a4_108
	word32 a5_109
	word32 a7_110
	word32 s2_111
	word32 s3_112
	word32 s4_113
	word32 s5_114
	word32 s6_115
	word32 s7_116
	word32 s8_117
	word32 s9_118
	word32 s10_119
	word32 s11_120
	word32 t4_121
	printf(ra, 0x230C4768<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_103, out a0_104, out a1_105, out a2_106, out a3_107, out a4_108, out a5_109, out a7_110, out s2_111, out s3_112, out s4_113, out s5_114, out s6_115, out s7_116, out s8_117, out s9_118, out s10_119, out s11_120, out t4_121)
	return
l2307C328:
l2307C32E_thunk_aos_read:
	word32 s0_122
	word32 a0_123
	word32 a1_124
	aos_read(ra, a5_5, a0, a4, dwArg00, dwArg44, out s0_122, out a0_123, out a1_124)
	return
at_serial_read_exit:


void at_cmd_exec(word32 ra, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
l2307C35E:
at_cmd_exec_exit:
at_cmd_exec_entry:
l2307C34A:
	at_parse(ra, mstatus)


word32 at_serial_cfg_set(word32 a1, word32 dwArg94, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_server_init
//      uart_set
// MayUse:  a1:[0..31] Stack +0094:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
at_serial_cfg_set_entry:
l2307C360:
	word32 a0_137
	word32 a6_192
	word32 a7_193
	word32 a5_191
	word32 a1_189
	word32 a2_190
	word32 a4_142
	word32 a3_140
	memcpy(fp + -32<i32>, 0x230C4590<32>, 0x10<32>, out a1_189, out a2_190, out a3_140, out a4_142, out a5_191, out a6_192, out a7_193)
	word32 a5_144 = 0x2625A00<32>
	branch (a1 + -5<i32> & 255<i32>) <=u 3<32> l2307C3B0
l2307C3B0:
	word32 a2_50 = dwArg94 + -1<i32> & 255<i32>
	branch a2_50 >u 2<32> l2307C3A2
l2307C3C2:
	branch a3_140 >u 2<32> l2307C3A2
l2307C3CA:
	a5_144 = 1<32>
	branch a4_142 == 1<32> l2307C3E8
l2307C3E8:
l2307C3D4:
	branch a4_142 == 0<32> l2307C3EC
l2307C3D6:
	branch a4_142 == 2<32> l2307C3E2
l2307C3DA:
	branch a4_142 != 3<32> l2307C3A2
l2307C3DE:
l2307C3E2:
l2307C3EC:
	a3_140 = UART_TxFreeRun(1<32>, UART_Init(1<32>, a2_50, UART_Disable(2<32>)))
	UART_Enable(1<32>, 2<32>, out a4_142, out a5_144)
	a0_137 = 0<32>
l2307C3A2:
	a0_137 = 4<32>
l2307C3A4:
	0<32> = dwArg0128
	s1Out = a1
	a0Out = a0_137
	a3Out = a3_140
	a4Out = a4_142
	a5Out = a5_144
	return dwArgE4
at_serial_cfg_set_exit:


word32 at_serial_open(word32 ra, word32 s2, word32 mstatus, word32 dwArg78, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_server_init
// MayUse:  mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0078:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a5 mstatus ra s0 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
at_serial_open_entry:
l2307C410:
	word32 a0_11
	word32 s0_14
	word32 a3_19
	word32 s3_23
	word32 mstatus_35
	word32 s1_54
	word32 a2_55
	word32 a4_56
	word32 a5_57
	word32 s2_58
	word32 s6_59
	word32 ra_36 = aos_open(ra, 0x230C473C<32>, s2, mstatus, dwLoc0C, ra, dwArg78, dwArgE8, dwArg0128, dwArg0168, out s0_14, out s1_54, out a0_11, out a2_55, out a3_19, out a4_56, out a5_57, out s2_58, out s3_23, out s6_59, out mstatus_35)
	Mem39[0x4201CA0C<32>:word32] = a0_11
	s0Out = s0_14
	a3Out = a3_19
	a5Out = 0x4201C000<32>
	s3Out = s3_23
	mstatusOut = mstatus_35
	return ra_36
at_serial_open_exit:


word32 at_serial_lock(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg28, word32 dwArg60, word32 dwArg64, word32 dwArg84, word32 dwArg88, word32 dwArgAC, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan
//      tcp_receive_callback
//      udp_receive_callback
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a2 a3 a4 ra s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
at_serial_lock_entry:
l2307C432:
	word32 a0_15
	word32 a2_112
	word32 a4_113
	word32 a3_21
	word32 s2_18
	word32 s3_25
	word32 s1_24 = xQueueTakeMutexRecursive(s1, Mem0[0x4201BA10<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, mstatus, dwArg04, dwArg28, dwArg84, dwArgF8, dwArg0138, out a0_15, out a2_112, out a3_21, out a4_113, out s2_18, out s3_25)
	word32 a4_29 = 1<32>
	branch a0_15 == 1<32> l2307C45A
l2307C44C:
	word32 a0_114
	word32 a1_115
	word32 a2_116
	word32 a5_117
	word32 a7_118
	word32 s4_119
	word32 s5_120
	word32 s6_121
	word32 s7_122
	word32 s8_123
	word32 s9_124
	word32 s10_125
	word32 s11_126
	word32 t4_127
	ra = printf(ra, 0x230C471C<32>, a3_21, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_24, out a0_114, out a1_115, out a2_116, out a3_21, out a4_29, out a5_117, out a7_118, out s2_18, out s3_25, out s4_119, out s5_120, out s6_121, out s7_122, out s8_123, out s9_124, out s10_125, out s11_126, out t4_127)
l2307C45A:
	s1Out = s1_24
	a2Out = dwArg10
	a3Out = a3_21
	a4Out = a4_29
	s2Out = s2_18
	s3Out = s3_25
	return ra
at_serial_lock_exit:


word32 at_serial_unlock(word32 ra, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg28, word32 dwArg60, word32 dwArg64, word32 dwArg84, word32 dwArg88, word32 dwArgAC, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan
//      tcp_receive_callback
//      udp_receive_callback
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
at_serial_unlock_entry:
l2307C462:
	word32 a0_11
	word32 a2_116
	word32 a4_117
	word32 a5_118
	word32 s2_119
	word32 s5_120
	word32 s6_121
	word32 a3_14
	word32 s3_21
	word32 s4_22
	xQueueGiveMutexRecursive(Mem0[0x4201BA10<32>:int32], a4, mstatus, dwArg04, dwArg28, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_11, out a2_116, out a3_14, out a4_117, out a5_118, out s2_119, out s3_21, out s4_22, out s5_120, out s6_121)
	word32 a4_33 = 1<32>
	word32 a5_34 = 0<32>
	branch a0_11 == 1<32> l2307C488
l2307C47A:
	word32 s1_122
	word32 a0_123
	word32 a1_124
	word32 a2_125
	word32 a5_126
	word32 a7_127
	word32 s2_128
	word32 s5_129
	word32 s6_130
	word32 s7_131
	word32 s8_132
	word32 s9_133
	word32 s10_134
	word32 s11_135
	word32 t4_136
	ra = printf(ra, 0x230C4748<32>, a3_14, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_122, out a0_123, out a1_124, out a2_125, out a3_14, out a4_33, out a5_126, out a7_127, out s2_128, out s3_21, out s4_22, out s5_129, out s6_130, out s7_131, out s8_132, out s9_133, out s10_134, out s11_135, out t4_136)
	a5_34 = 0xFFFFFFFF<32>
l2307C488:
	a0Out = a5_34
	a2Out = dwArg10
	a3Out = a3_14
	a4Out = a4_33
	a5Out = a5_34
	s3Out = s3_21
	s4Out = s4_22
	return ra
at_serial_unlock_exit:


word32 at_data_output(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg84, word32 dwArg88, word32 dwArgAC, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cb_altcp_recv_fn
//      tcp_receive_callback
//      udp_receive_callback
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 mstatus ra s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
at_data_output_entry:
l2307C490:
	word32 s4_100
	word32 ra_151
	word32 a4_146
	word32 a3_145
	word32 s1_108
	word32 s0_11 = Mem8[a0 + 12<i32>:word32]
	word32 a0_23
	word32 a2_24
	word32 s2_26
	word32 a3_29
	word32 a4_30
	word32 s3_185
	word32 s1_32 = xQueueTakeMutexRecursive(a0, a0, 0xFFFFFFFF<32>, a2, a3, a4, mstatus, dwArg04, dwArg28, dwArg84, dwArgF8, dwArg0138, out a0_23, out a2_24, out a3_29, out a4_30, out s2_26, out s3_185)
	branch a0_23 == 1<32> l2307C4D0
l2307C4D0:
	word32 a5_39 = Mem18[0x42027948<32>:int32]
	word32 sp_42
	word32 a0_45
	word32 a4_53
	word32 t1_130
	word32 t5_132
	word32 t6_133
	call a5_39 (retsize: 0;)
		uses: a0:s1_32,a1:s2_26,a2:a2_24,a3:a3_29,a4:a4_30,a5:a5_39,mstatus:mstatus,ra:ra,s0:s0_11,s1:s1_32,s2:s2_26,Stack +0008:dwLoc08,Stack +0014:dwArg04,Stack +0028:dwArg18,Stack +0038:dwArg28,Stack +0070:dwArg60,Stack +0074:dwArg64,Stack +0094:dwArg84,Stack +0098:dwArg88,Stack +00BC:dwArgAC,Stack +0108:dwArgF8,Stack +0148:dwArg0138,t1:t1_130,t5:t5_132,t6:t6_133
		defs: a0:a0_45,a4:a4_53,mstatus:mstatus_52,ra:ra_48,sp:sp_42,t1:t1_130,t5:t5_132,t6:t6_133
	word32 a0_186
	word32 a2_187
	word32 a5_188
	word32 s2_189
	word32 s3_190
	word32 s5_191
	word32 s6_192
	s1_108 = xQueueGiveMutexRecursive(a0_45, a4_53, mstatus, Mem18[sp_42 + 20<i32>:word32], Mem18[sp_42 + 56<i32>:word32], Mem18[sp_42 + 148<i32>:word32], Mem18[sp_42 + 264<i32>:word32], Mem18[sp_42 + 328<i32>:word32], Mem18[sp_42 + 392<i32>:word32], out a0_186, out a2_187, out a3_145, out a4_146, out a5_188, out s2_189, out s3_190, out s4_100, out s5_191, out s6_192)
l2307C4B4:
	word32 s1_193
	word32 a0_194
	word32 a1_195
	word32 a2_196
	word32 a5_197
	word32 a7_198
	word32 s2_199
	word32 s3_200
	word32 s5_201
	word32 s6_202
	word32 s7_203
	word32 s8_204
	word32 s9_205
	word32 s10_206
	word32 s11_207
	word32 t4_208
	ra_151 = printf(ra, 0x230C471C<32>, a3_29, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_193, out a0_194, out a1_195, out a2_196, out a3_145, out a4_146, out a5_197, out a7_198, out s2_199, out s3_200, out s4_100, out s5_201, out s6_202, out s7_203, out s8_204, out s9_205, out s10_206, out s11_207, out t4_208)
	s1_108 = 0xFFFFFFFF<32>
l2307C4C2:
	0<32> = dwArg38
	s1Out = s1_108
	a0Out = s1_108
	a2Out = dwArg10
	a3Out = a3_145
	a4Out = a4_146
	s4Out = s4_100
	mstatusOut = mstatus
	return ra_151
at_data_output_exit:


word32 at_key_value_set(word32 ra, word32 s1, word32 a0, word32 a1, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg2C, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cwjap_cur
//      cwmode_cur
//      uart_set
//      setautoconnect_handler
//      scan_handler_opt
//      echo_on_handler
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 mstatus ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
at_key_value_set_entry:
l2307C4E8:
	word32 s6_166
	word32 s5_165
	word32 s4_164
	word32 s3_163
	word32 s2_162
	word32 ra_189
	word32 s0_185
	word32 a1_278
	word32 a2_543
	word32 a3_544
	word32 a5_546
	word32 a4_545
	word32 t1_540
	word32 a1_542
	word32 a0_541
	word32 ra_23 = memset(ra, fp + -84<i32>, 0<32>, 65<i32>, out t1_540, out a0_541, out a1_542, out a2_543, out a3_544, out a4_545, out a5_546)
	word32 a5_551
	word32 a1_547
	word32 a2_548
	word32 a4_550
	word32 a3_549
	branch strcmp(a0, 0x230A99DC<32>, out a1_547, out a2_548, out a3_549, out a4_550, out a5_551) != 0<32> l2307C52A
l2307C52A:
	word32 a4_555
	word32 a5_556
	word32 a1_552
	word32 a3_554
	word32 a2_553
	branch strcmp(a0, 0x230A99F4<32>, out a1_552, out a2_553, out a3_554, out a4_555, out a5_556) != 0<32> l2307C54C
l2307C54C:
	word32 a4_571
	word32 a5_572
	word32 a1_568
	word32 a3_570
	word32 a2_569
	branch strcmp(a0, 0x230A9A00<32>, out a1_568, out a2_569, out a3_570, out a4_571, out a5_572) == 0<32> l2307C53A
l2307C55C:
	word32 a5_577
	word32 a4_576
	word32 a3_575
	word32 a2_574
	word32 a1_573
	branch strcmp(a0, 0x230A99E8<32>, out a1_573, out a2_574, out a3_575, out a4_576, out a5_577) != 0<32> l2307C5A2
l2307C5A2:
	word32 a4_581
	word32 a5_582
	word32 a1_578
	word32 a3_580
	word32 a2_579
	branch strcmp(a0, 0x230C4700<32>, out a1_578, out a2_579, out a3_580, out a4_581, out a5_582) != 0<32> l2307C5DA
l2307C5DA:
	word32 a4_602
	word32 a5_603
	word32 a1_599
	word32 a3_601
	word32 a2_600
	branch strcmp(a0, 0x230BF504<32>, out a1_599, out a2_600, out a3_601, out a4_602, out a5_603) == 0<32> l2307C53A
l2307C5EA:
	word32 a2_618
	word32 a3_619
	word32 a5_621
	word32 a4_620
	word32 a1_617
	branch strcmp(a0, 0x230BF50C<32>, out a1_617, out a2_618, out a3_619, out a4_620, out a5_621) == 0<32> l2307C53A
l2307C5FA:
	word32 a5_626
	word32 a1_622
	word32 a2_623
	word32 a4_625
	word32 a3_624
	branch strcmp(a0, 0x230BF508<32>, out a1_622, out a2_623, out a3_624, out a4_625, out a5_626) == 0<32> l2307C53A
l2307C60C:
	word32 a4_630
	word32 a5_631
	word32 a1_627
	word32 a3_629
	word32 a2_628
	branch strcmp(a0, 0x230C470C<32>, out a1_627, out a2_628, out a3_629, out a4_630, out a5_631) == 0<32> l2307C53A
l2307C61E:
	word32 a3_634
	word32 a5_636
	word32 a4_635
	word32 a2_633
	word32 a1_632
	branch strcmp(a0, 0x230C4714<32>, out a1_632, out a2_633, out a3_634, out a4_635, out a5_636) == 0<32> l2307C53A
l2307C630:
l2307C5B2:
	word32 a0_150
	word32 a2_152
	word32 a4_154
	word32 s9_610
	word32 s10_611
	word32 s11_612
	word32 a1_606
	word32 a5_607
	word32 s8_609
	word32 s7_608
	word32 s1_605
	word32 s0_604
	word32 ra_157 = sprintf(ra_23, fp + -84<i32>, 0x230C7894<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_604, out s1_605, out a0_150, out a1_606, out a2_152, out a4_154, out a5_607, out s2_162, out s3_163, out s4_164, out s5_165, out s6_166, out s7_608, out s8_609, out s9_610, out s10_611, out s11_612)
	Mem176[a4_154 + 4<i32>:word32] = 0x4201BA04<32>
	word32 a2_614
	word32 a3_615
	word32 a4_616
	word32 a0_613
	ra_189 = aos_ioctl(ra_157, a0_150, 3<32>, a2_152, a4_154, dwLoc60, dwLoc1C, out s0_185, out a0_613, out a2_614, out a3_615, out a4_616)
l2307C56C:
	word32 s1_203
	word32 s4_208
	word32 s9_594
	word32 s10_595
	word32 s11_596
	word32 s5_590
	word32 s6_591
	word32 s8_593
	word32 s7_592
	word32 a4_586
	word32 a5_587
	word32 s3_589
	word32 s2_588
	word32 a2_585
	word32 a1_584
	word32 a0_583
	word32 ra_201 = sprintf(ra_23, fp + -84<i32>, 0x230C7894<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_185, out s1_203, out a0_583, out a1_584, out a2_585, out a4_586, out a5_587, out s2_588, out s3_589, out s4_208, out s5_590, out s6_591, out s7_592, out s8_593, out s9_594, out s10_595, out s11_596)
	branch CONVERT(Mem16[s1_203:byte], byte, word32) == 0<32> l2307C59C
l2307C59C:
	word32 s1_597
	ra_189 = wifi_mgmr_sta_autoconnect_disable(ra_201, s4_208, mstatus, dwLoc58, dwLoc30, dwLoc2C, dwLoc08, dwArg04, dwArg1C, dwArg20, dwArg24, s1, dwArg78, dwArg98, dwArgB8, dwArgD8, out s1_597, out s2_162, out s3_163, out s4_164, out s5_165, out s6_166, out mstatus)
l2307C584:
	word32 s1_598
	ra_189 = wifi_mgmr_sta_autoconnect_enable(ra_201, s4_208, mstatus, dwLoc58, dwLoc30, dwLoc2C, dwLoc08, dwArg04, dwArg1C, dwArg20, dwArg24, s1, dwArg78, dwArg98, dwArgB8, dwArgD8, out s1_598, out s2_162, out s3_163, out s4_164, out s5_165, out s6_166, out mstatus)
l2307C53A:
	a1_278 = 0x230C6978<32>
l2307C510:
	Mem281[0x4201CA04<32>:word32] = CONVERT(Mem16[a1:byte], byte, word32)
l2307C51C:
	a1_278 = 0x230C7894<32>
l2307C544:
	word32 s11_567
	word32 s7_563
	word32 s8_564
	word32 s10_566
	word32 s9_565
	word32 a1_559
	word32 a2_560
	word32 a5_562
	word32 a4_561
	word32 a0_558
	word32 s1_557
	ra_189 = sprintf(ra_23, fp + -84<i32>, a1_278, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_185, out s1_557, out a0_558, out a1_559, out a2_560, out a4_561, out a5_562, out s2_162, out s3_163, out s4_164, out s5_165, out s6_166, out s7_563, out s8_564, out s9_565, out s10_566, out s11_567)
l2307C588:
	word32 s0_344
	word32 s1_345
	word32 s4_350
	word32 ra_343 = ef_set_env(ra_189, s0_185, fp + -84<i32>, s2_162, s3_163, s4_164, s5_165, s6_166, mstatus, dwLoc60, dwLoc5C, dwLoc58, dwLoc54, dwLoc50, dwLoc4C, dwLoc48, dwLoc38, dwLoc30, dwLoc2C, dwLoc28, dwLoc24, dwLoc20, dwLoc1C, dwLoc14, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg2C, s1, dwArg58, dwArg68, dwArg88, dwArgC8, dwArg0108, out s0_344, out s1_345, out s4_350)
	s0Out = s0_344
	s1Out = s1_345
	a0Out = 0<32>
	s4Out = s4_350
	mstatusOut = mstatus
	return ra_343
at_key_value_set_exit:


word32 at_key_value_get(word32 ra, word32 s0, word32 a0, word32 a1, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg9C, word32 dwArgA8, word32 dwArgE8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_cb_wifi_event
//      at_server_init
//      cwmode_cur_get
//      uart_get
//      scan
//      set_apcfg
//      cwjap_cur
//      cwmode_cur
//      setautoconnect_handler
//      scan_handler_opt
//      echo_on_handler
//      join_ap_handler
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
at_key_value_get_entry:
l2307C632:
	branch a1 != 0<32> l2307C638
l2307C638:
	word32 a5_136
	word32 a4_135
	word32 a0_157
	word32 a3_100
	word32 a0_18
	word32 s1_27
	word32 s3_31
	word32 s4_32
	word32 ra_26 = ef_get_env(ra, a0, s3, mstatus, s0, dwArg08, dwArg38, dwArg50, dwArg54, dwArg68, dwArg78, dwArg9C, dwArgA8, dwArgE8, out s1_27, out a0_18, out s3_31, out s4_32)
	branch a0_18 != 0<32> l2307C6FA
l2307C6FA:
	word32 a5_484
	word32 a4_483
	word32 a2_482
	word32 a1_481
	branch strcmp(a0, 0x230A99F4<32>, out a1_481, out a2_482, out a3_100, out a4_483, out a5_484) != 0<32> l2307C714
l2307C714:
	word32 a2_491
	word32 a5_493
	word32 a4_492
	word32 a1_490
	branch strcmp(a0, 0x230A9A00<32>, out a1_490, out a2_491, out a3_100, out a4_492, out a5_493) == 0<32> l2307C70A
l2307C724:
	word32 a2_501
	word32 a5_503
	word32 a4_502
	word32 a1_500
	branch strcmp(a0, 0x230BF504<32>, out a1_500, out a2_501, out a3_100, out a4_502, out a5_503) == 0<32> l2307C70A
l2307C734:
	word32 a1_504
	word32 a4_506
	word32 a5_507
	word32 a2_505
	branch strcmp(a0, 0x230BF50C<32>, out a1_504, out a2_505, out a3_100, out a4_506, out a5_507) == 0<32> l2307C70A
l2307C744:
	word32 a2_509
	word32 a5_511
	word32 a4_510
	word32 a1_508
	branch strcmp(a0, 0x230BF508<32>, out a1_508, out a2_509, out a3_100, out a4_510, out a5_511) == 0<32> l2307C70A
l2307C754:
	word32 a4_514
	word32 a5_515
	word32 a2_513
	word32 a1_512
	branch strcmp(a0, 0x230C470C<32>, out a1_512, out a2_513, out a3_100, out a4_514, out a5_515) == 0<32> l2307C70A
l2307C764:
	word32 a5_519
	word32 a1_516
	word32 a4_518
	word32 a2_517
	branch strcmp(a0, 0x230C4714<32>, out a1_516, out a2_517, out a3_100, out a4_518, out a5_519) == 0<32> l2307C70A
l2307C774:
	word32 a2_521
	word32 a1_520
	Mem146[atoi(a0_18, out a1_520, out a2_521, out a3_100, out a4_135, out a5_136):word32] = s1_27
l2307C70A:
	strcpy(s1_27, a0_18, out a4_135, out a5_136)
l2307C64E:
	word32 a2_486
	word32 a5_487
	word32 a1_485
	a0_157 = strcmp(a0, 0x230A99DC<32>, out a1_485, out a2_486, out a3_100, out a4_135, out a5_487)
	branch a0_157 != 0<32> l2307C66C
l2307C66C:
	word32 a2_489
	word32 a1_488
	a0_157 = strcmp(a0, 0x230A9A00<32>, out a1_488, out a2_489, out a3_100, out a4_135, out a5_136)
	branch a0_157 != 0<32> l2307C682
l2307C682:
	word32 a1_494
	word32 a5_496
	word32 a2_495
	a0_157 = strcmp(a0, 0x230C4700<32>, out a1_494, out a2_495, out a3_100, out a4_135, out a5_496)
	branch a0_157 != 0<32> l2307C69E
l2307C69E:
	word32 a5_499
	word32 a2_498
	word32 a1_497
	a0_157 = strcmp(a0, 0x230C46E0<32>, out a1_497, out a2_498, out a3_100, out a4_135, out a5_499)
	a5_136 = 8<32>
	branch a0_157 == 0<32> l2307C69A
l2307C6B0:
	word32 a2_523
	word32 a5_524
	word32 a1_522
	a0_157 = strcmp(a0, 0x230C46E8<32>, out a1_522, out a2_523, out a3_100, out a4_135, out a5_524)
	branch a0_157 != 0<32> l2307C6C4
l2307C6C4:
	word32 a1_525
	word32 a2_526
	branch strcmp(a0, 0x230C46F0<32>, out a1_525, out a2_526, out a3_100, out a4_135, out a5_136) != 0<32> l2307C6DC
l2307C6DC:
	word32 a2_528
	word32 a1_527
	branch strcmp(a0, 0x230C46F8<32>, out a1_527, out a2_528, out a3_100, out a4_135, out a5_136) == 0<32> l2307C6D4
l2307C6EC:
	a0_157 = 0xFFFFFFFF<32>
l2307C6D4:
	Mem241[s1_27:word32] = 0<32>
l2307C6D8:
	a0_157 = 0<32>
l2307C6C0:
	a5_136 = 1<32>
l2307C692:
	a5_136 = Mem12[0x4201BA08<32>:int32]
l2307C69A:
	Mem248[a5_136:word32] = s1_27
l2307C67C:
	Mem249[s1_27:byte] = 0<8>
l2307C65E:
	a5_136 = Mem12[0x4201BA04<32>:int32]
	Mem252[s1_27:byte] = SLICE(a5_136, byte, 0)
l2307C6EE:
	0<32> = dwArg38
	s1Out = s1_27
	a0Out = a0_157
	a2Out = dwArg10
	a3Out = a3_100
	a4Out = a4_135
	a5Out = a5_136
	s2Out = a0_18
	s3Out = s3_31
	s4Out = s4_32
	return ra_26
l2307C634:
	s1Out = s1
	a0Out = 0xFFFFFFFF<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return ra
at_key_value_get_exit:


word32 at_dump_noend(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __usr_at_cmd_demo
//      cipsta_ip_get
//      version
//      ap_sta_get
//      cwjap_info
//      deep_sleep
//      scan
//      reset
//      cb_httpc_headers_done_fn
//      domain_name_resolution
//      base_station_info
//      setautoconnect_handler
//      scan_handler_opt
//      echo_on_handler
//      help_handler
//      ble_sync_mode
//      join_ap_handler
//      at_response
//      at_uart_config_get
//      at_wifi_mode_get
//      tcp_sent_callback
//      tcp_connected_callback
//      tcp_receive_callback
//      udp_send_data
//      tcp_err_callback
//      udp_receive_callback
//      tcp_accept_callback
//      tcp_send_data
//      bl_cipstatus
//      bl_cipstart
//      bl_cipclose
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
at_dump_noend_entry:
l2307C77E:
	word32 s9_150
	word32 s7_149
	word32 s6_169
	word32 s5_168
	word32 s3_166
	word32 s2_165
	word32 s11_147
	word32 s10_146
	word32 ra_133
	word32 a1_186
	word32 a3_180
	word32 a4_181
	word32 a5_182
	word32 s1_183
	word32 a0_192
	word32 s0_11 = Mem8[a0 + 12<i32>:word32]
	word32 a0_34
	word32 s3_44
	word32 a2_339
	word32 a4_340
	word32 s2_341
	word32 a3_196
	xQueueTakeMutexRecursive(s1, a0, 0xFFFFFFFF<32>, a2, a3, a4, mstatus, dwLoc4C, dwLoc28, s3, dwArgA8, dwArgE8, out a0_34, out a2_339, out a3_196, out a4_340, out s2_341, out s3_44)
	branch a0_34 == 1<32> l2307C7CE
l2307C7CE:
	word32 a0_55
	word32 a3_56
	word32 a5_57
	word32 s1_61
	word32 a4_76
	word32 t0_342
	word32 s0_343
	word32 a1_344
	word32 a2_345
	word32 a7_346
	word32 s2_347
	word32 s3_348
	word32 s4_349
	word32 s5_350
	word32 s6_351
	word32 s7_352
	word32 s8_353
	word32 s9_354
	word32 s10_355
	word32 s11_356
	word32 t4_357
	ra = vsnprintf(ra, 0<32>, 0<32>, s3_44, fp + -28<i32>, dwLoc08, dwArg18, a3, dwArg60, dwArg64, dwArg88, dwArgAC, out t0_342, out s0_343, out s1_61, out a0_55, out a1_344, out a2_345, out a3_56, out a4_76, out a5_57, out a7_346, out s2_347, out s3_348, out s4_349, out s5_350, out s6_351, out s7_352, out s8_353, out s9_354, out s10_355, out s11_356, out t4_357)
	word32 a0_81
	word32 a1_82
	word32 a6_87
	word32 s1_89
	word32 s3_91
	word32 a2_358
	word32 a4_359
	word32 a5_360
	word32 s2_361
	word32 s4_362
	word32 s8_363
	s0_11 = pvPortMalloc(ra, s1_61, a0_55 + 10<i32>, a3_56, a4_76, a5_57, mstatus, dwLoc20, dwLoc1C, fp + -28<i32>, dwArgD8, dwArg0118, out s1_89, out a0_81, out a1_82, out a2_358, out a3_196, out a4_359, out a5_360, out a6_87, out s2_361, out s3_91, out s4_362, out s8_363)
	branch a0_81 != 0<32> l2307C7FA
l2307C7FA:
	word32 a0_100
	word32 a3_101
	word32 a7_103
	word32 s0_105
	word32 s1_106
	word32 s2_109
	word32 s3_110
	word32 a2_120
	word32 a4_121
	word32 t0_364
	word32 a1_365
	word32 a5_366
	word32 s4_367
	word32 s5_368
	word32 s6_369
	word32 s7_370
	word32 s8_371
	word32 s9_372
	word32 s10_373
	word32 s11_374
	word32 t4_375
	word32 ra_104 = vsnprintf(ra, a0_81, a1_82, s3_91, s1_89, dwLoc08, dwArg18, a3, dwArg60, dwArg64, dwArg88, dwArgAC, out t0_364, out s0_105, out s1_106, out a0_100, out a1_365, out a2_120, out a3_101, out a4_121, out a5_366, out a7_103, out s2_109, out s3_110, out s4_367, out s5_368, out s6_369, out s7_370, out s8_371, out s9_372, out s10_373, out s11_374, out t4_375)
	word32 a5_124 = Mem80[0x42027948<32>:int32]
	word32 sp_127
	word32 a0_130
	word32 a4_138
	word32 t1_262
	word32 t5_263
	word32 t6_264
	call a5_124 (retsize: 0;)
		uses: a0:s2_109,a1:a0_100,a2:a2_120,a3:a3_101,a4:a4_121,a5:a5_124,a6:a6_87,a7:a7_103,mstatus:mstatus,ra:ra_104,s0:s0_105,s1:s1_106,s2:s2_109,s3:s3_110,Stack +0008:dwLoc58,Stack +0014:dwLoc4C,Stack +0038:dwLoc28,Stack +0040:dwLoc20,Stack +0044:dwLoc1C,Stack +0058:dwLoc08,Stack +0064:dwArg04,Stack +0070:dwArg10,Stack +0074:dwArg14,Stack +0078:dwArg18,Stack +00BC:dwArg5C,Stack +00C0:dwArg60,Stack +00C4:dwArg64,Stack +00E8:dwArg88,Stack +0108:dwArgA8,Stack +010C:dwArgAC,Stack +0138:dwArgD8,Stack +0148:dwArgE8,Stack +0178:dwArg0118,t1:t1_262,t5:t5_263,t6:t6_264
		defs: a0:a0_130,a4:a4_138,mstatus:mstatus_144,ra:ra_133,s10:s10_146,s11:s11_147,s7:s7_149,s9:s9_150,sp:sp_127,t1:t1_262,t5:t5_263,t6:t6_264
	word32 a2_158
	word32 a5_161
	word32 a0_376
	word32 a3_377
	word32 a4_378
	word32 s4_379
	xQueueGiveMutexRecursive(a0_130, a4_138, mstatus, Mem80[sp_127 + 20<i32>:word32], Mem80[sp_127 + 56<i32>:word32], Mem80[sp_127 + 148<i32>:word32], Mem80[sp_127 + 264<i32>:word32], Mem80[sp_127 + 328<i32>:word32], Mem80[sp_127 + 392<i32>:word32], out a0_376, out a2_158, out a3_377, out a4_378, out a5_161, out s2_165, out s3_166, out s4_379, out s5_168, out s6_169)
	word32 a0_380
	word32 a2_381
	word32 a6_382
	word32 s4_383
	word32 t3_384
	vPortFree(s2_165, a2_158, a5_161, mstatus, Mem80[sp_127 + 344<i32>:word32], Mem80[sp_127 + 408<i32>:word32], out s0_11, out s1_183, out a0_380, out a1_186, out a2_381, out a3_180, out a4_181, out a5_182, out a6_382, out s4_383, out t3_384)
l2307C7F0:
	a0_192 = 0x230C46CC<32>
l2307C7B0:
	a0_192 = 0x230C471C<32>
l2307C7B8:
	word32 s1_385
	word32 a0_386
	word32 a2_387
	word32 a7_388
	word32 s4_389
	word32 s8_390
	word32 t4_391
	ra_133 = printf(ra, a0_192, a3_196, dwLoc58, a4, dwArg10, dwArg14, s1, dwArg5C, out s1_385, out a0_386, out a1_186, out a2_387, out a3_180, out a4_181, out a5_182, out a7_388, out s2_165, out s3_166, out s4_389, out s5_168, out s6_169, out s7_149, out s8_390, out s9_150, out s10_146, out s11_147, out t4_391)
	s1_183 = 0xFFFFFFFF<32>
l2307C7BE:
	s0Out = s0_11
	s1Out = s1_183
	a0Out = s1_183
	a1Out = a1_186
	a2Out = dwArg0118
	a3Out = a3_180
	a4Out = a4_181
	a5Out = a5_182
	s2Out = s2_165
	s3Out = s3_166
	s4Out = dwArgD4
	s5Out = s5_168
	s6Out = s6_169
	s7Out = s7_149
	s8Out = dwArgB4
	s9Out = s9_150
	s10Out = s10_146
	s11Out = s11_147
	mstatusOut = mstatus
	return ra_133
at_dump_noend_exit:


void at_async_event(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg48)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0048:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
at_async_event_entry:
l2307C820:
l2307C868:
	word32 a5_50
	word32 s1_54
	word32 s2_55
	word32 s3_56
	word32 s4_57
	word32 s8_58
	word32 a2_131
	word32 a1_130
	word32 s0_53 = xQueueReceive(a0, fp + -180<i32>, 0xFFFFFFFF<32>, a3, a4, a5, mstatus, dwLoc0108, dwLocEC, dwLoc6C, dwArg08, dwArg48, out s1_54, out a0, out a1_130, out a2_131, out a3, out a4, out a5_50, out s2_55, out s3_56, out s4_57, out s8_58)
	a5 = a5_50 + 0xFFFFFFFF<32>
	branch s8_58 <u a5_50 + 0xFFFFFFFF<32> l2307C868
l2307C87A:
	word32 a5_70 = Mem25[(a5_50 + 0xFFFFFFFF<32> << 2<i32>) + s2_55:word32]
	word32 a0_86
	word32 mstatus_91
	word32 a4_92
	word32 a3_93
	call a5_70 (retsize: 0;)
		uses: a0:a0_86,a3:a3_93,a4:a4_92,a5:a5_70,mstatus:mstatus_91,ra:ra,s0:s0_53,s1:s1_54,s2:s2_55,s3:s3_56,s4:s4_57,s5:0x230C4000<32>,s6:0x230AA000<32>,s7:0x230AA000<32>,s8:s8_58,Stack +0008:dwLoc0108,Stack +0024:dwLocEC,Stack +00A4:dwLoc6C,Stack +00E4:dwLoc2C,Stack +0118:dwArg08,Stack +0158:dwArg48
		defs: a0:a0_86,a3:a3_93,a4:a4_92,mstatus:mstatus_91
	return
at_async_event_exit:


word32 at_cmd_init(word32 ra, word32 mstatus, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_server_init
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: ra s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
at_cmd_init_entry:
l2307CA0C:
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 ra_41 = at_init(at_queue_init(ra, 0x4201BA18<32>, 1024<i32>, 0x2307C31C<32>), fp + 0xFFFFFFE8<32>, out a3_38, out a4_39, out a5_40)
	word32 a0_47
	word32 a3_50
	word32 s3_57
	word32 s1_55 = at_cmd_impl_init(ra_41, a3_38, a4_39, a5_40, mstatus, dwLoc20, 0x2307DA5A<32>, 0x2307C2EE<32>, dwArgD8, dwArg0118, dwArg0128, dwArg0158, dwArg0168, out a0_47, out a3_50, out s3_57)
	branch a0_47 == 0<32> l2307CA58
l2307CA58:
	s1Out = s1_55
	s3Out = s3_57
	return ra_41
at_cmd_init_exit:
l2307CA48:
	word32 s1_113
	word32 a0_114
	word32 a1_115
	word32 a2_116
	word32 a3_117
	word32 a4_118
	word32 a5_119
	word32 a7_120
	word32 s2_121
	word32 s3_122
	word32 s4_123
	word32 s5_124
	word32 s6_125
	word32 s7_126
	word32 s8_127
	word32 s9_128
	word32 s10_129
	word32 s11_130
	word32 t4_131
	word32 a0_132
	word32 s2_133
	word32 s6_134
	word32 s7_135
	word32 s8_136
	word32 s9_137
	abort(printf(ra_41, 0x230C46B4<32>, a3_50, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_113, out a0_114, out a1_115, out a2_116, out a3_117, out a4_118, out a5_119, out a7_120, out s2_121, out s3_122, out s4_123, out s5_124, out s6_125, out s7_126, out s8_127, out s9_128, out s10_129, out s11_130, out t4_131), out a0_132, out s2_133, out s6_134, out s7_135, out s8_136, out s9_137)


word32 at_server_init(word32 ra, word32 s1, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
at_server_init_entry:
l2307CA5E:
	word32 ra_306
	word32 a3_37
	word32 a5_39
	word32 mstatus_42
	word32 s0_44
	word32 s3_47
	word32 a5_950
	word32 a3_948
	word32 a4_949
	word32 t1_944
	word32 a0_945
	word32 a1_946
	word32 a2_947
	word32 ra_43 = at_serial_open(memset(ra, 0x4201BA04<32>, 0<32>, 1044<i32>, out t1_944, out a0_945, out a1_946, out a2_947, out a3_948, out a4_949, out a5_950), s2, mstatus, dwArg58, dwArgC8, dwArg0108, dwArg0148, out s0_44, out a3_37, out a5_39, out s3_47, out mstatus_42)
	branch a5_39 >= 0<32> l2307CABA
l2307CABA:
	word32 a4_68
	word32 s3_77
	word32 s4_957
	word32 s2_956
	word32 a3_954
	word32 a5_955
	word32 a0_952
	word32 a2_953
	word32 s1_951
	word32 ra_72 = at_key_value_get(ra_43, s0_44, 0x230C47A4<32>, fp + 0xFFFFFFEC<32>, s3_47, mstatus_42, s2, dwArg18, dwArg30, dwArg34, dwArg48, dwArg58, dwArg7C, dwArg88, dwArgC8, out s1_951, out a0_952, out a2_953, out a3_954, out a4_68, out a5_955, out s2_956, out s3_77, out s4_957)
	Mem96[0x42028F44<32>:word32] = a4_68
	word32 a0_97
	word32 s3_110
	word32 s4_959
	word32 s1_958
	word32 ra_105 = ef_get_env(ra_72, 0x230A99DC<32>, s3_77, mstatus_42, 0x108<32>, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg58, s1, dwArg8C, dwArg98, dwArgD8, out s1_958, out a0_97, out s3_110, out s4_959)
	word32 a5_125 = 0<32>
	branch a0_97 == 0<32> l2307CAEC
l2307CAE6:
	word32 a5_985
	word32 a4_984
	word32 a3_983
	word32 a2_982
	word32 a1_981
	a5_125 = atoi(a0_97, out a1_981, out a2_982, out a3_983, out a4_984, out a5_985)
l2307CAEC:
	word32 a0_179
	Mem146[a5_125:word32] = s0_44 + -1532<i32>
	word32 a0_151
	word32 s3_164
	word32 s4_980
	word32 s1_979
	word32 ra_159 = ef_get_env(ra_105, 0x230C4700<32>, s3_110, mstatus_42, 0x108<32>, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg58, s1, dwArg8C, dwArg98, dwArgD8, out s1_979, out a0_151, out s3_164, out s4_980)
	branch a0_151 == 0<32> l2307CB7A
l2307CB7A:
	a0_179 = 0x1C000200<32>
l2307CAFC:
	word32 a1_986
	word32 a2_987
	word32 a3_988
	word32 a4_989
	word32 a5_990
	a0_179 = atoi(a0_151, out a1_986, out a2_987, out a3_988, out a4_989, out a5_990)
l2307CB00:
	Mem197[a0_179 + 4<i32>:word32] = s0_44 + -1532<i32>
	word32 s3_218
	word32 s3_249
	word32 s3_280
	word32 s1_1016
	word32 a0_1017
	word32 a2_1018
	word32 a3_1019
	word32 a4_1020
	word32 a5_1021
	word32 s2_1022
	word32 s4_1023
	word32 s1_1024
	word32 a0_1025
	word32 a2_1026
	word32 a3_1027
	word32 a4_1028
	word32 a5_1029
	word32 s2_1030
	word32 s4_1031
	word32 s1_1032
	word32 a0_1033
	word32 a2_1034
	word32 a3_1035
	word32 a4_1036
	word32 a5_1037
	word32 s2_1038
	word32 s4_1039
	word32 s1_1040
	word32 a0_1041
	word32 a2_1042
	word32 a3_1043
	word32 a4_1044
	word32 a5_1045
	word32 s2_1046
	word32 s3_1047
	word32 s4_1048
	ra_306 = at_key_value_get(at_key_value_get(at_key_value_get(at_key_value_get(ra_159, s0_44 + -1532<i32>, 0x230C46E0<32>, fp + 0xFFFFFFE4<32>, s3_164, mstatus_42, s2, dwArg18, dwArg30, dwArg34, dwArg48, dwArg58, dwArg7C, dwArg88, dwArgC8, out s1_1016, out a0_1017, out a2_1018, out a3_1019, out a4_1020, out a5_1021, out s2_1022, out s3_218, out s4_1023), s0_44 + -1532<i32>, 0x230C46E8<32>, fp + 0xFFFFFFE5<32>, s3_218, mstatus_42, s2, dwArg18, dwArg30, dwArg34, dwArg48, dwArg58, dwArg7C, dwArg88, dwArgC8, out s1_1024, out a0_1025, out a2_1026, out a3_1027, out a4_1028, out a5_1029, out s2_1030, out s3_249, out s4_1031), s0_44 + -1532<i32>, 0x230C46F0<32>, fp + 0xFFFFFFE6<32>, s3_249, mstatus_42, s2, dwArg18, dwArg30, dwArg34, dwArg48, dwArg58, dwArg7C, dwArg88, dwArgC8, out s1_1032, out a0_1033, out a2_1034, out a3_1035, out a4_1036, out a5_1037, out s2_1038, out s3_280, out s4_1039), s0_44 + -1532<i32>, 0x230C46F8<32>, fp + 0xFFFFFFE7<32>, s3_280, mstatus_42, s2, dwArg18, dwArg30, dwArg34, dwArg48, dwArg58, dwArg7C, dwArg88, dwArgC8, out s1_1040, out a0_1041, out a2_1042, out a3_1043, out a4_1044, out a5_1045, out s2_1046, out s3_1047, out s4_1048)
	word32 a0_331
	word32 a3_334
	word32 a4_335
	word32 a5_336
	word32 s1_1049
	word32 s0_339 = at_serial_cfg_set(8<32>, dwArg74, dwArg0108, out s1_1049, out a0_331, out a3_334, out a4_335, out a5_336)
	branch a0_331 != 0<32> l2307CC26
l2307CC26:
l2307CB5C:
	word32 a2_617
	word32 a3_618
	word32 a4_619
	word32 s2_536
	word32 a0_615
	word32 a3_354
	word32 a4_355
	word32 a5_356
	word32 a0_365
	word32 a1_991
	word32 s2_992
	word32 s3_993
	xQueueCreateMutex(ra_306, a3_334, a4_335, a5_336, mstatus_42, dwLoc10, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out a0_365, out a1_991, out a3_354, out a4_355, out a5_356, out s2_992, out s3_993)
	Mem374[a0_365 + 12<i32>:word32] = s0_339
	branch a0_365 != 0<32> l2307CB82
l2307CB82:
	word32 a3_575
	word32 a4_576
	word32 a0_572
	word32 a0_378
	word32 a3_381
	word32 s1_994
	word32 a1_995
	word32 a2_996
	word32 a4_997
	word32 a5_998
	word32 s2_999
	word32 s3_1000
	word32 s4_1001
	Mem393[a0_378 + 16<i32>:word32] = xQueueGenericCreate(ra_306, 4<32>, 0x1C<32>, a3_354, a4_355, a5_356, mstatus_42, dwArg00, dwArg04, dwArgF8, dwArg0138, out s1_994, out a0_378, out a1_995, out a2_996, out a3_381, out a4_997, out a5_998, out s2_999, out s3_1000, out s4_1001)
	branch a0_378 != 0<32> l2307CBA4
l2307CBA4:
	word32 a3_530
	word32 a4_531
	word32 a0_527
	word32 s1_404
	word32 s3_406
	word32 a0_426
	word32 a3_429
	word32 s1_434
	word32 s3_436
	word32 a2_1050
	word32 a4_1051
	word32 a5_1052
	word32 s2_1053
	word32 ra_444 = xTaskCreate(at_cmd_init(ra_306, mstatus_42, s2, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgB8, dwArgF8, dwArg0108, dwArg0138, dwArg0148, out s1_404, out s3_406), s1_404, 256<i32>, 0<32>, 3<32>, fp + 0xFFFFFFE8<32>, s3_406, mstatus_42, dwLoc10, dwLoc0C, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s1_434, out a0_426, out a2_1050, out a3_429, out a4_1051, out a5_1052, out s2_1053, out s3_436)
	branch a0_426 == 1<32> l2307CBE2
l2307CBE2:
	word32 a0_457
	word32 a3_460
	word32 s2_466
	word32 s1_1075
	word32 a2_1076
	word32 a4_1077
	word32 a5_1078
	word32 s3_1079
	word32 ra_475 = xTaskCreate(ra_444, s1_434, 1536<i32>, 0<32>, 0<32>, 0<32>, s3_436, mstatus_42, dwLoc10, dwLoc0C, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s1_1075, out a0_457, out a2_1076, out a3_460, out a4_1077, out a5_1078, out s2_466, out s3_1079)
	branch a0_457 == s2_466 l2307CC18
l2307CC18:
	word32 s1_1099
	word32 a0_1100
	word32 a1_1101
	word32 a2_1102
	word32 a3_1103
	word32 a4_1104
	word32 a5_1105
	word32 a7_1106
	word32 s2_1107
	word32 s3_1108
	word32 s4_1109
	word32 s5_1110
	word32 s6_1111
	word32 s7_1112
	word32 s8_1113
	word32 s9_1114
	word32 s10_1115
	word32 s11_1116
	word32 t4_1117
	ra_306 = printf(ra_475, 0x230C484C<32>, a3_460, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_1099, out a0_1100, out a1_1101, out a2_1102, out a3_1103, out a4_1104, out a5_1105, out a7_1106, out s2_1107, out s3_1108, out s4_1109, out s5_1110, out s6_1111, out s7_1112, out s8_1113, out s9_1114, out s10_1115, out s11_1116, out t4_1117)
l2307CC04:
	word32 a0_504
	word32 a5_505
	word32 a2_508
	word32 a3_509
	word32 a4_510
	word32 s1_1118
	word32 a1_1119
	word32 a7_1120
	word32 s2_1121
	word32 s3_1122
	word32 s4_1123
	word32 s5_1124
	word32 s6_1125
	word32 s7_1126
	word32 s8_1127
	word32 s9_1128
	word32 s10_1129
	word32 s11_1130
	word32 t4_1131
	ra_306 = printf(ra_475, 0x230C482C<32>, a3_460, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_1118, out a0_504, out a1_1119, out a2_508, out a3_509, out a4_510, out a5_505, out a7_1120, out s2_1121, out s3_1122, out s4_1123, out s5_1124, out s6_1125, out s7_1126, out s8_1127, out s9_1128, out s10_1129, out s11_1130, out t4_1131)
	word32 a5_1132
	vTaskDelete(a0_504, a2_508, a3_509, a4_510, a5_505, mstatus_42, dwArg0108, dwArg0118, dwArg0148, dwArg0158, out a0_527, out a3_530, out a4_531, out a5_1132, out s2_536)
l2307CBCE:
	word32 s1_1080
	word32 a1_1081
	word32 a2_1082
	word32 a5_1083
	word32 a7_1084
	word32 s3_1085
	word32 s4_1086
	word32 s5_1087
	word32 s6_1088
	word32 s7_1089
	word32 s8_1090
	word32 s9_1091
	word32 s10_1092
	word32 s11_1093
	word32 t4_1094
	ra_306 = printf(ra_444, 0x230C47FC<32>, a3_429, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_1080, out a0_527, out a1_1081, out a2_1082, out a3_530, out a4_531, out a5_1083, out a7_1084, out s2_536, out s3_1085, out s4_1086, out s5_1087, out s6_1088, out s7_1089, out s8_1090, out s9_1091, out s10_1092, out s11_1093, out t4_1094)
l2307CBDA:
	word32 s1_1133
	word32 a1_1134
	word32 a2_1135
	word32 a5_1136
	word32 s4_1137
	vQueueDelete(a0_527, a3_530, a4_531, mstatus_42, dwArg0138, dwArg0178, out s1_1133, out a0_572, out a1_1134, out a2_1135, out a3_575, out a4_576, out a5_1136, out s4_1137)
l2307CB90:
	word32 s1_1054
	word32 a1_1055
	word32 a2_1056
	word32 a5_1057
	word32 a7_1058
	word32 s3_1059
	word32 s4_1060
	word32 s5_1061
	word32 s6_1062
	word32 s7_1063
	word32 s8_1064
	word32 s9_1065
	word32 s10_1066
	word32 s11_1067
	word32 t4_1068
	ra_306 = printf(ra_306, 0x230C47D0<32>, a3_381, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_1054, out a0_572, out a1_1055, out a2_1056, out a3_575, out a4_576, out a5_1057, out a7_1058, out s2_536, out s3_1059, out s4_1060, out s5_1061, out s6_1062, out s7_1063, out s8_1064, out s9_1065, out s10_1066, out s11_1067, out t4_1068)
l2307CB9C:
	word32 s1_1095
	word32 a1_1096
	word32 a5_1097
	word32 s4_1098
	vQueueDelete(a0_572, a3_575, a4_576, mstatus_42, dwArg0138, dwArg0178, out s1_1095, out a0_615, out a1_1096, out a2_617, out a3_618, out a4_619, out a5_1097, out s4_1098)
l2307CB66:
	word32 s1_1002
	word32 a1_1003
	word32 a5_1004
	word32 a7_1005
	word32 s3_1006
	word32 s4_1007
	word32 s5_1008
	word32 s6_1009
	word32 s7_1010
	word32 s8_1011
	word32 s9_1012
	word32 s10_1013
	word32 s11_1014
	word32 t4_1015
	ra_306 = printf(ra_306, 0x230C47B0<32>, a3_354, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_1002, out a0_615, out a1_1003, out a2_617, out a3_618, out a4_619, out a5_1004, out a7_1005, out s2_536, out s3_1006, out s4_1007, out s5_1008, out s6_1009, out s7_1010, out s8_1011, out s9_1012, out s10_1013, out s11_1014, out t4_1015)
l2307CB72:
	word32 a2_1069
	word32 a4_1070
	word32 a5_1071
	word32 s2_1072
	word32 s3_1073
	word32 s6_1074
	aos_close(ra_306, a0_615, a2_617, a3_618, a4_619, s2_536, mstatus_42, dwArg18, out a2_1069, out a4_1070, out a5_1071, out s2_1072, out s3_1073, out s6_1074)
l2307CA9E:
	word32 t4_978
	word32 s11_977
	word32 s9_975
	word32 s10_976
	word32 s7_973
	word32 s8_974
	word32 s5_971
	word32 s6_972
	word32 s3_969
	word32 s4_970
	word32 a7_967
	word32 s2_968
	word32 a4_965
	word32 a5_966
	word32 a3_964
	word32 a1_962
	word32 a2_963
	word32 s1_960
	word32 a0_961
	ra_306 = printf(ra_43, 0x230C478C<32>, a3_37, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_960, out a0_961, out a1_962, out a2_963, out a3_964, out a4_965, out a5_966, out a7_967, out s2_968, out s3_969, out s4_970, out s5_971, out s6_972, out s7_973, out s8_974, out s9_975, out s10_976, out s11_977, out t4_978)
l2307CAAA:
l2307CAAC:
	mstatusOut = mstatus_42
	return ra_306
at_server_init_exit:


word32 at_server_notify_with_ctx(word32 ra, word32 a1, word32 a2, word32 mstatus, word32 dwArg74, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blsync_disconnected
//      blsync_connected
//      at_server_notify
// MayUse:  a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
at_server_notify_with_ctx_entry:
l2307CC2A:
	word32 t1_137
	word32 a0_138
	word32 a1_139
	word32 a2_140
	word32 a4_141
	word32 a5_142
	word32 a3_106
	word32 ra_27 = memset(ra, fp + -44<i32>, 0<32>, 0x1C<32>, out t1_137, out a0_138, out a1_139, out a2_140, out a3_106, out a4_141, out a5_142)
	branch a2 >u 0x14<32> l2307CC6C
l2307CC4C:
	word32 a4_37
	word32 a1_143
	word32 a2_144
	word32 a3_145
	word32 a5_146
	word32 a6_147
	word32 a7_148
	memcpy(fp + -40<i32>, a1, a2, out a1_143, out a2_144, out a3_145, out a4_37, out a5_146, out a6_147, out a7_148)
	word32 s1_149
	word32 a0_150
	word32 a1_151
	word32 a2_152
	word32 a4_153
	word32 a5_154
	word32 a7_155
	word32 s2_156
	word32 s3_157
	word32 s4_158
	word32 s5_159
	word32 s6_160
	word32 s8_161
	xQueueGenericSend(Mem36[0x4201BA14<32>:int32], fp + -44<i32>, 0<32>, a4_37, 0x4201C000<32>, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_149, out a0_150, out a1_151, out a2_152, out a3_106, out a4_153, out a5_154, out a7_155, out s2_156, out s3_157, out s4_158, out s5_159, out s6_160, out s8_161)
l2307CC6C:
	0<32> = dwArg0128
	a3Out = a3_106
	return ra_27
at_server_notify_with_ctx_exit:


void at_server_notify(word32 ra, word32 mstatus, word32 dwArg74, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0074:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
at_server_notify_entry:
l2307CC78:
l2307CC7C_thunk_at_server_notify_with_ctx:
	word32 a3_36
	at_server_notify_with_ctx(ra, 0<32>, 0<32>, mstatus, dwArg74, dwArgE8, dwArg0128, dwArg0168, out a3_36)
	return
at_server_notify_exit:


void cipsta_ip_get(word32 ra, word32 s1, word32 a4, word32 s3, word32 mstatus, word32 dwArg18, word32 dwArg1C, word32 dwArg48, word32 dwArg58, word32 dwArg88)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0088:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cipsta_ip_get_entry:
l2307CC80:
	wifi_mgmr_sta_ip_get(fp + -136<i32>, fp + -132<i32>, fp + -128<i32>, a4)
	word32 a2_255
	word32 a3_256
	word32 a4_257
	word32 a5_258
	word32 a4_259
	word32 a5_260
	strcpy(fp + -116<i32>, ip4addr_ntoa(out a2_255, out a3_256, out a4_257, out a5_258), out a4_259, out a5_260)
	word32 a2_261
	word32 a3_262
	word32 a4_263
	word32 a5_264
	word32 a4_265
	word32 a5_266
	strcpy(fp + -96<i32>, ip4addr_ntoa(out a2_261, out a3_262, out a4_263, out a5_264), out a4_265, out a5_266)
	word32 a2_267
	word32 a3_268
	word32 a4_269
	word32 a5_270
	word32 a4_271
	word32 a5_272
	strcpy(fp + -76<i32>, ip4addr_ntoa(out a2_267, out a3_268, out a4_269, out a5_270), out a4_271, out a5_272)
	wifi_mgmr_sta_dns_get(fp + -124<i32>, fp + -120<i32>)
	word32 a2_273
	word32 a3_274
	word32 a4_275
	word32 a5_276
	word32 a4_277
	word32 a5_278
	strcpy(fp + -56<i32>, ip4addr_ntoa(out a2_273, out a3_274, out a4_275, out a5_276), out a4_277, out a5_278)
	word32 a2_114
	word32 a3_115
	word32 a4_130
	word32 a4_279
	word32 a5_280
	word32 a5_281
	strcpy(fp + -36<i32>, ip4addr_ntoa(out a2_114, out a3_115, out a4_279, out a5_280), out a4_130, out a5_281)
	word32 mstatus_145
	word32 s1_148
	word32 s3_152
	word32 a2_175
	word32 a3_176
	word32 a4_177
	word32 mstatus_181
	word32 s0_183
	word32 s1_184
	word32 s3_188
	word32 s0_282
	word32 a0_283
	word32 a1_284
	word32 a2_285
	word32 a3_286
	word32 a4_287
	word32 a5_288
	word32 s2_289
	word32 s4_290
	word32 s5_291
	word32 s6_292
	word32 s7_293
	word32 s8_294
	word32 s9_295
	word32 s10_296
	word32 s11_297
	word32 a0_298
	word32 a1_299
	word32 a5_300
	word32 s2_301
	word32 s4_302
	word32 s5_303
	word32 s6_304
	word32 s7_305
	word32 s8_306
	word32 s9_307
	word32 s10_308
	word32 s11_309
	word32 s0_310
	word32 s1_311
	word32 a0_312
	word32 a1_313
	word32 a2_314
	word32 a3_315
	word32 a4_316
	word32 a5_317
	word32 s2_318
	word32 s3_319
	word32 s4_320
	word32 s5_321
	word32 s6_322
	word32 s7_323
	word32 s8_324
	word32 s9_325
	word32 s10_326
	word32 s11_327
	word32 mstatus_328
	at_dump_noend(at_dump_noend(at_dump_noend(ra, s1, 0x230C6900<32>, a2_114, a3_115, a4_130, s3, mstatus, 0<32>, dwLoc80, dwLoc7C, dwLoc78, dwLoc34, dwLoc30, dwLoc2C, 0<32>, dwArg18, dwArg1C, dwArg48, dwArg58, dwArg88, out s0_282, out s1_148, out a0_283, out a1_284, out a2_285, out a3_286, out a4_287, out a5_288, out s2_289, out s3_152, out s4_290, out s5_291, out s6_292, out s7_293, out s8_294, out s9_295, out s10_296, out s11_297, out mstatus_145), s1_148, 0x230C4684<32>, fp + -96<i32>, fp + -76<i32>, fp + -56<i32>, s3_152, mstatus_145, 0<32>, dwLoc80, dwLoc7C, dwLoc78, dwLoc34, dwLoc30, dwLoc2C, 0<32>, dwArg18, dwArg1C, dwArg48, dwArg58, dwArg88, out s0_183, out s1_184, out a0_298, out a1_299, out a2_175, out a3_176, out a4_177, out a5_300, out s2_301, out s3_188, out s4_302, out s5_303, out s6_304, out s7_305, out s8_306, out s9_307, out s10_308, out s11_309, out mstatus_181), s1_184, s0_183 + -1792<i32>, a2_175, a3_176, a4_177, s3_188, mstatus_181, 0<32>, dwLoc80, dwLoc7C, dwLoc78, dwLoc34, dwLoc30, dwLoc2C, 0<32>, dwArg18, dwArg1C, dwArg48, dwArg58, dwArg88, out s0_310, out s1_311, out a0_312, out a1_313, out a2_314, out a3_315, out a4_316, out a5_317, out s2_318, out s3_319, out s4_320, out s5_321, out s6_322, out s7_323, out s8_324, out s9_325, out s10_326, out s11_327, out mstatus_328)
	return
cipsta_ip_get_exit:


void version(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
version_entry:
l2307CD1C:
	word32 a3_19
	word32 a4_20
	word32 mstatus_24
	word32 s1_27
	word32 s3_31
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 mstatus_59
	word32 s0_61
	word32 s1_62
	word32 s3_66
	word32 a2_83
	word32 a3_84
	word32 a4_85
	word32 mstatus_89
	word32 s0_91
	word32 s1_92
	word32 s3_96
	word32 a2_113
	word32 a3_114
	word32 a4_115
	word32 mstatus_119
	word32 s1_122
	word32 s3_126
	word32 a2_144
	word32 a3_145
	word32 a4_146
	word32 mstatus_150
	word32 s0_152
	word32 s1_153
	word32 s3_157
	word32 a2_174
	word32 a3_175
	word32 a4_176
	word32 mstatus_180
	word32 s0_182
	word32 s1_183
	word32 s3_187
	word32 a3_205
	word32 a4_206
	word32 mstatus_210
	word32 s1_213
	word32 s3_217
	word32 a2_239
	word32 a3_240
	word32 a4_241
	word32 mstatus_245
	word32 s0_247
	word32 s1_248
	word32 s3_252
	word32 s0_315
	word32 a0_316
	word32 a1_317
	word32 a2_318
	word32 a5_319
	word32 s2_320
	word32 s4_321
	word32 s5_322
	word32 s6_323
	word32 s7_324
	word32 s8_325
	word32 s9_326
	word32 s10_327
	word32 s11_328
	word32 a0_329
	word32 a1_330
	word32 a5_331
	word32 s2_332
	word32 s4_333
	word32 s5_334
	word32 s6_335
	word32 s7_336
	word32 s8_337
	word32 s9_338
	word32 s10_339
	word32 s11_340
	word32 a0_341
	word32 a1_342
	word32 a5_343
	word32 s2_344
	word32 s4_345
	word32 s5_346
	word32 s6_347
	word32 s7_348
	word32 s8_349
	word32 s9_350
	word32 s10_351
	word32 s11_352
	word32 s0_353
	word32 a0_354
	word32 a1_355
	word32 a5_356
	word32 s2_357
	word32 s4_358
	word32 s5_359
	word32 s6_360
	word32 s7_361
	word32 s8_362
	word32 s9_363
	word32 s10_364
	word32 s11_365
	word32 a0_366
	word32 a1_367
	word32 a5_368
	word32 s2_369
	word32 s4_370
	word32 s5_371
	word32 s6_372
	word32 s7_373
	word32 s8_374
	word32 s9_375
	word32 s10_376
	word32 s11_377
	word32 a0_378
	word32 a1_379
	word32 a5_380
	word32 s2_381
	word32 s4_382
	word32 s5_383
	word32 s6_384
	word32 s7_385
	word32 s8_386
	word32 s9_387
	word32 s10_388
	word32 s11_389
	word32 s0_390
	word32 a0_391
	word32 a1_392
	word32 a2_393
	word32 a5_394
	word32 s2_395
	word32 s4_396
	word32 s5_397
	word32 s6_398
	word32 s7_399
	word32 s8_400
	word32 s9_401
	word32 s10_402
	word32 s11_403
	word32 a0_404
	word32 a1_405
	word32 a5_406
	word32 s2_407
	word32 s4_408
	word32 s5_409
	word32 s6_410
	word32 s7_411
	word32 s8_412
	word32 s9_413
	word32 s10_414
	word32 s11_415
	word32 s0_416
	word32 s1_417
	word32 a0_418
	word32 a1_419
	word32 a2_420
	word32 a3_421
	word32 a4_422
	word32 a5_423
	word32 s2_424
	word32 s3_425
	word32 s4_426
	word32 s5_427
	word32 s6_428
	word32 s7_429
	word32 s8_430
	word32 s9_431
	word32 s10_432
	word32 s11_433
	word32 mstatus_434
	at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(ra, s1, 0x230C6900<32>, a2, a3, a4, s3, mstatus, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_315, out s1_27, out a0_316, out a1_317, out a2_318, out a3_19, out a4_20, out a5_319, out s2_320, out s3_31, out s4_321, out s5_322, out s6_323, out s7_324, out s8_325, out s9_326, out s10_327, out s11_328, out mstatus_24), s1_27, 0x230C4BB8<32>, 0x230A9848<32>, a3_19, a4_20, s3_31, mstatus_24, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_61, out s1_62, out a0_329, out a1_330, out a2_53, out a3_54, out a4_55, out a5_331, out s2_332, out s3_66, out s4_333, out s5_334, out s6_335, out s7_336, out s8_337, out s9_338, out s10_339, out s11_340, out mstatus_59), s1_62, s0_61 + -1792<i32>, a2_53, a3_54, a4_55, s3_66, mstatus_59, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_91, out s1_92, out a0_341, out a1_342, out a2_83, out a3_84, out a4_85, out a5_343, out s2_344, out s3_96, out s4_345, out s5_346, out s6_347, out s7_348, out s8_349, out s9_350, out s10_351, out s11_352, out mstatus_89), s1_92, s0_91 + -1792<i32>, a2_83, a3_84, a4_85, s3_96, mstatus_89, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_353, out s1_122, out a0_354, out a1_355, out a2_113, out a3_114, out a4_115, out a5_356, out s2_357, out s3_126, out s4_358, out s5_359, out s6_360, out s7_361, out s8_362, out s9_363, out s10_364, out s11_365, out mstatus_119), s1_122, 0x230C4BC8<32>, a2_113, a3_114, a4_115, s3_126, mstatus_119, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_152, out s1_153, out a0_366, out a1_367, out a2_144, out a3_145, out a4_146, out a5_368, out s2_369, out s3_157, out s4_370, out s5_371, out s6_372, out s7_373, out s8_374, out s9_375, out s10_376, out s11_377, out mstatus_150), s1_153, s0_152 + -1792<i32>, a2_144, a3_145, a4_146, s3_157, mstatus_150, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_182, out s1_183, out a0_378, out a1_379, out a2_174, out a3_175, out a4_176, out a5_380, out s2_381, out s3_187, out s4_382, out s5_383, out s6_384, out s7_385, out s8_386, out s9_387, out s10_388, out s11_389, out mstatus_180), s1_183, s0_182 + -1792<i32>, a2_174, a3_175, a4_176, s3_187, mstatus_180, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_390, out s1_213, out a0_391, out a1_392, out a2_393, out a3_205, out a4_206, out a5_394, out s2_395, out s3_217, out s4_396, out s5_397, out s6_398, out s7_399, out s8_400, out s9_401, out s10_402, out s11_403, out mstatus_210), s1_213, 0x230C4C18<32>, 0x230C4C00<32>, a3_205, a4_206, s3_217, mstatus_210, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_247, out s1_248, out a0_404, out a1_405, out a2_239, out a3_240, out a4_241, out a5_406, out s2_407, out s3_252, out s4_408, out s5_409, out s6_410, out s7_411, out s8_412, out s9_413, out s10_414, out s11_415, out mstatus_245), s1_248, s0_247 + -1792<i32>, a2_239, a3_240, a4_241, s3_252, mstatus_245, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_416, out s1_417, out a0_418, out a1_419, out a2_420, out a3_421, out a4_422, out a5_423, out s2_424, out s3_425, out s4_426, out s5_427, out s6_428, out s7_429, out s8_430, out s9_431, out s10_432, out s11_433, out mstatus_434)
	return
version_exit:


void cipsta_ip(word32 ra, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg68, word32 dwArg78, word32 dwArg8C, word32 dwArg98, word32 dwArgB8, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cipsta_ip_entry:
l2307CDA4:
	wifi_mgmr_sta_ip_get(fp + -56<i32>, fp + -48<i32>, fp + -52<i32>, a4)
	wifi_mgmr_sta_dns_get(fp + -44<i32>, fp + -40<i32>)
	word32 s8_677
	word32 s9_678
	word32 s10_679
	word32 s11_680
	word32 s4_673
	word32 s5_674
	word32 s6_675
	word32 s7_676
	word32 a2_669
	word32 a4_670
	word32 a5_671
	word32 s3_672
	word32 s0_665
	word32 s1_666
	word32 a0_667
	word32 a1_668
	word32 s2_142
	word32 ra_137 = sprintf(ra, fp + -36<i32>, 0x230C4A4C<32>, s2, dwLoc08, dwArg24, dwArg40, 0<32>, dwArg68, dwArg8C, out s0_665, out s1_666, out a0_667, out a1_668, out a2_669, out a4_670, out a5_671, out s2_142, out s3_672, out s4_673, out s5_674, out s6_675, out s7_676, out s8_677, out s9_678, out s10_679, out s11_680)
	word32 a0_681
	word32 s4_682
	word32 s8_683
	word32 a3_157
	ipaddr_addr(fp + -36<i32>, out a0_681, out a3_157, out s4_682, out s8_683)
	word32 s8_690
	word32 a2_686
	word32 a4_687
	word32 a5_688
	word32 s4_689
	word32 a1_685
	word32 a0_684
	puts(0x230B492C<32>, out a0_684, out a1_685, out a2_686, out a4_687, out a5_688, out s4_689, out s8_690)
	word32 a4_694
	word32 a5_695
	word32 s4_696
	word32 s8_697
	word32 a0_691
	word32 a1_692
	word32 a2_693
	puts(fp + -36<i32>, out a0_691, out a1_692, out a2_693, out a4_694, out a5_695, out s4_696, out s8_697)
	word32 a2_698
	word32 s4_699
	word32 s8_700
	word32 a5_115
	word32 a0_113
	word32 a1_117
	word32 a4_118
	puts(0x230C6900<32>, out a0_113, out a1_117, out a2_698, out a4_118, out a5_115, out s4_699, out s8_700)
	word32 dwArg44_542 = 0<32>
	word32 dwArg48_544 = 0<32>
	branch a5_115 == 0<32> l2307CE5A
l2307CE1E:
	word32 s8_713
	word32 s9_714
	word32 s10_715
	word32 s11_716
	word32 s4_709
	word32 s5_710
	word32 s6_711
	word32 s7_712
	word32 a2_705
	word32 a4_706
	word32 a5_707
	word32 s3_708
	word32 s1_702
	word32 a0_703
	word32 a1_704
	word32 s0_701
	ra_137 = sprintf(ra_137, fp + -36<i32>, s2_142 + -1460<i32>, s2, dwLoc08, dwArg24, dwArg40, 0<32>, dwArg68, dwArg8C, out s0_701, out s1_702, out a0_703, out a1_704, out a2_705, out a4_706, out a5_707, out s2_142, out s3_708, out s4_709, out s5_710, out s6_711, out s7_712, out s8_713, out s9_714, out s10_715, out s11_716)
	word32 a0_154
	word32 s8_718
	word32 s4_717
	ipaddr_addr(fp + -36<i32>, out a0_154, out a3_157, out s4_717, out s8_718)
	word32 a5_723
	word32 s4_724
	word32 s8_725
	word32 a0_719
	word32 a1_720
	word32 a2_721
	word32 a4_722
	puts(0x230B4934<32>, out a0_719, out a1_720, out a2_721, out a4_722, out a5_723, out s4_724, out s8_725)
	word32 s8_735
	word32 s4_734
	word32 a2_733
	word32 s8_732
	word32 s4_731
	word32 a5_730
	word32 a4_729
	word32 a2_728
	word32 a1_727
	word32 a0_726
	puts(puts(fp + -36<i32>, out a0_726, out a1_727, out a2_728, out a4_729, out a5_730, out s4_731, out s8_732) + -1792<i32>, out a0_113, out a1_117, out a2_733, out a4_118, out a5_115, out s4_734, out s8_735)
	dwArg44_542 = a0_154
l2307CE5A:
	branch a5_115 == 0<32> l2307CE9A
l2307CE5E:
	word32 s6_746
	word32 s5_745
	word32 s4_744
	word32 s3_743
	word32 a5_742
	word32 a4_741
	word32 a2_740
	word32 a1_739
	word32 a0_738
	word32 s1_737
	word32 s0_736
	word32 s7_747
	word32 s8_748
	word32 s9_749
	word32 s10_750
	word32 s11_751
	ra_137 = sprintf(ra_137, fp + -36<i32>, s2_142 + -1460<i32>, s2, dwLoc08, dwArg24, dwArg40, dwArg44_542, dwArg68, dwArg8C, out s0_736, out s1_737, out a0_738, out a1_739, out a2_740, out a4_741, out a5_742, out s2_142, out s3_743, out s4_744, out s5_745, out s6_746, out s7_747, out s8_748, out s9_749, out s10_750, out s11_751)
	word32 a0_752
	word32 s4_753
	word32 s8_754
	ipaddr_addr(fp + -36<i32>, out a0_752, out a3_157, out s4_753, out s8_754)
	word32 a0_755
	word32 a1_756
	word32 a2_757
	word32 a4_758
	word32 a5_759
	word32 s4_760
	word32 s8_761
	puts(0x230B493C<32>, out a0_755, out a1_756, out a2_757, out a4_758, out a5_759, out s4_760, out s8_761)
	word32 a0_762
	word32 a1_763
	word32 a2_764
	word32 a4_765
	word32 a5_766
	word32 s4_767
	word32 s8_768
	word32 a2_769
	word32 s4_770
	word32 s8_771
	puts(puts(fp + -36<i32>, out a0_762, out a1_763, out a2_764, out a4_765, out a5_766, out s4_767, out s8_768) + -1792<i32>, out a0_113, out a1_117, out a2_769, out a4_118, out a5_115, out s4_770, out s8_771)
l2307CE9A:
	branch a5_115 == 0<32> l2307CEDA
l2307CE9E:
	word32 s0_772
	word32 s1_773
	word32 a0_774
	word32 a1_775
	word32 a2_776
	word32 a4_777
	word32 a5_778
	word32 s3_779
	word32 s4_780
	word32 s5_781
	word32 s6_782
	word32 s7_783
	word32 s8_784
	word32 s9_785
	word32 s10_786
	word32 s11_787
	ra_137 = sprintf(ra_137, fp + -36<i32>, s2_142 + -1460<i32>, s2, dwLoc08, dwArg24, dwArg40, dwArg44_542, dwArg68, dwArg8C, out s0_772, out s1_773, out a0_774, out a1_775, out a2_776, out a4_777, out a5_778, out s2_142, out s3_779, out s4_780, out s5_781, out s6_782, out s7_783, out s8_784, out s9_785, out s10_786, out s11_787)
	word32 a0_332
	word32 s4_788
	word32 s8_789
	ipaddr_addr(fp + -36<i32>, out a0_332, out a3_157, out s4_788, out s8_789)
	word32 a0_790
	word32 a1_791
	word32 a2_792
	word32 a4_793
	word32 a5_794
	word32 s4_795
	word32 s8_796
	puts(0x230C4A58<32>, out a0_790, out a1_791, out a2_792, out a4_793, out a5_794, out s4_795, out s8_796)
	word32 a0_797
	word32 a1_798
	word32 a2_799
	word32 a4_800
	word32 a5_801
	word32 s4_802
	word32 s8_803
	word32 a2_804
	word32 s4_805
	word32 s8_806
	puts(puts(fp + -36<i32>, out a0_797, out a1_798, out a2_799, out a4_800, out a5_801, out s4_802, out s8_803) + -1792<i32>, out a0_113, out a1_117, out a2_804, out a4_118, out a5_115, out s4_805, out s8_806)
	dwArg48_544 = a0_332
l2307CEDA:
	branch a5_115 == 0<32> l2307CF1A
l2307CEDE:
	word32 s0_807
	word32 s1_808
	word32 a0_809
	word32 a1_810
	word32 a2_811
	word32 a4_812
	word32 a5_813
	word32 s2_814
	word32 s3_815
	word32 s4_816
	word32 s5_817
	word32 s6_818
	word32 s7_819
	word32 s8_820
	word32 s9_821
	word32 s10_822
	word32 s11_823
	ra_137 = sprintf(ra_137, fp + -36<i32>, s2_142 + -1460<i32>, s2, dwLoc08, dwArg24, dwArg40, dwArg44_542, dwArg68, dwArg8C, out s0_807, out s1_808, out a0_809, out a1_810, out a2_811, out a4_812, out a5_813, out s2_814, out s3_815, out s4_816, out s5_817, out s6_818, out s7_819, out s8_820, out s9_821, out s10_822, out s11_823)
	word32 a0_824
	word32 s4_825
	word32 s8_826
	ipaddr_addr(fp + -36<i32>, out a0_824, out a3_157, out s4_825, out s8_826)
	word32 a0_827
	word32 a1_828
	word32 a2_829
	word32 a4_830
	word32 a5_831
	word32 s4_832
	word32 s8_833
	puts(0x230C4A64<32>, out a0_827, out a1_828, out a2_829, out a4_830, out a5_831, out s4_832, out s8_833)
	word32 a0_834
	word32 a1_835
	word32 a2_836
	word32 a4_837
	word32 a5_838
	word32 s4_839
	word32 s8_840
	word32 a2_841
	word32 a5_842
	word32 s4_843
	word32 s8_844
	puts(puts(fp + -36<i32>, out a0_834, out a1_835, out a2_836, out a4_837, out a5_838, out s4_839, out s8_840) + -1792<i32>, out a0_113, out a1_117, out a2_841, out a4_118, out a5_842, out s4_843, out s8_844)
l2307CF1A:
	wifi_mgmr_sta_ip_set(ra_137, a0_113, a1_117, a3_157, a4_118, mstatus, 0<32>, 0<32>, dwLoc08, dwArg04, dwArg20, dwArg48_544, 0<32>, dwArg78, dwArg98, dwArgB8, dwArgD8)
	return
cipsta_ip_exit:


void http_url_req(word32 ra, word32 s1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s9, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
http_url_req_entry:
l2307CF36:
	word32 a5_38 = Mem5[0x4200F6D0<32>:int32]
	branch a5_38 != 0<32> l2307CF68
l2307CF5A:
	word32 a0_33
	word32 s2_42
	word32 s4_605
	word32 a2_603
	word32 s3_604
	word32 a1_602
	xQueueGenericCreate(ra, 1<32>, 0<32>, a3, a4, a5_38, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out s1, out a0_33, out a1_602, out a2_603, out a3, out a4, out a5_38, out s2_42, out s3_604, out s4_605)
	Mem48[s2_42:word32] = a0_33
l2307CF68:
	word32 a0_58
	word32 s2_67
	word32 s1_592
	word32 a1_593
	word32 a2_594
	word32 a3_595
	word32 a4_596
	word32 a5_597
	word32 s3_599
	word32 a6_598
	word32 s8_601
	word32 s4_600
	word32 s0_65 = pvPortMalloc(ra, s1, 128<i32>, a3, a4, a5_38, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_592, out a0_58, out a1_593, out a2_594, out a3_595, out a4_596, out a5_597, out a6_598, out s2_67, out s3_599, out s4_600, out s8_601)
	branch a0_58 == 0<32> l2307D064
l2307CF78:
	word32 a3_610
	word32 a4_611
	word32 a5_612
	word32 a1_608
	word32 a2_609
	word32 t1_606
	word32 a0_607
	word32 ra_85 = memset(ra, 0x4201BEC0<32>, 0<32>, 0x1C<32>, out t1_606, out a0_607, out a1_608, out a2_609, out a3_610, out a4_611, out a5_612)
	Mem91[0x4201BEC7<32>:byte] = SLICE(CONVERT(Mem57[s0_65 + 136<i32>:byte], byte, word32), byte, 0)
	Mem95[0x4201BECC<32>:byte] = SLICE(CONVERT(Mem91[s0_65 + 0x89<32>:byte], byte, word32), byte, 0)
	word32 a5_96 = Mem95[s0_65 + 0x8C<32>:int32]
	Mem98[0x4201BEC6<32>:byte] = 0<8>
	Mem99[0x4201BEC8<32>:word32] = a5_96
	Mem102[0x4201BED4<32>:word32] = 0x2307D11C<32>
	Mem105[0x4201BED8<32>:word32] = 0x2307D6C6<32>
	word32 a5_616
	word32 a1_613
	word32 a3_614
	word32 a4_615
	word32 a0_107 = strstr(ra_85, s0_65 + 8<32>, 0x230C69D0<32>, out a1_613, out a3_614, out a4_615, out a5_616)
	word32 s3_116 = a0_107
	branch a0_107 != 0<32> l2307CFD8
l2307CFD4:
	s3_116 = 0x230C69D0<32>
l2307CFD8:
	word32 a4_617
	word32 a5_618
	strcpy(a0_58, s0_65 + 8<32>, out a4_617, out a5_618)
	Mem129[s3_116 - (s0_65 + 8<32>) + a0_58:byte] = 0<8>
	word32 a5_622
	word32 a1_619
	word32 a3_620
	word32 a4_621
	word32 a0_134 = strstr(ra_85, a0_58, 0x230B8D1C<32>, out a1_619, out a3_620, out a4_621, out a5_622)
	branch a0_134 == 0<32> l2307D00A
l2307CFFE:
	Mem144[a0_134:byte] = 0<8>
	word32 a5_628
	word32 a2_625
	word32 a3_626
	word32 a4_627
	word32 a1_624
	atoi(a0_134 + 1<32>, out a1_624, out a2_625, out a3_626, out a4_627, out a5_628)
l2307D00A:
	word32 a2_215
	word32 a3_221
	word32 a5_223
	word32 a4_222
	word32 mstatus_226
	word32 s2_231
	word32 a0_164
	word32 s4_173
	word32 s8_174
	word32 a3_623
	word32 s0_172 = ipaddr_addr(a0_58, out a0_164, out a3_623, out s4_173, out s8_174)
	word32 a1_188 = CONVERT(SLICE(s0_172, word16, 0), word16, word32)
	branch a0_164 == 0xFFFFFFFF<32> l2307D078
l2307D078:
	a2_215 = httpc_get_file_dns(ra_85, s0_172, a0_58, a1_188, s3_116, 0x4201BEC0<32>, 0x2307D096<32>, 0x4200F6D8<32>, s2_67, 0x4201C000<32>, 0x230C7000<32>, s7, s8_174, s9, mstatus, dwLoc2C, s6, s4, dwLoc18, dwArg08, dwArg0C, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg3C, dwArg48, dwArg4C, s5, s3, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out a3_221, out a4_222, out a5_223, out s2_231, out mstatus_226)
l2307D02A:
	a2_215 = httpc_get_file(ra_85, s0_172, a0_58, fp + -36<i32>, s3_116, 0x4201BEC0<32>, 0x2307D096<32>, s2_67, s3_116, s4_173, 0x4201C000<32>, 0x230C7000<32>, s7, s8_174, s9, mstatus, s6, dwLoc08, dwLoc04, dwArg08, dwArg0C, dwArg18, dwArg38, dwArg3C, dwArg48, dwArg4C, a0_164, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out a3_221, out a4_222, out a5_223, out s2_231, out mstatus_226)
l2307D03C:
	word32 a0_290
	word32 a2_292
	word32 a3_293
	word32 a4_294
	word32 s1_298
	word32 s2_299
	word32 s3_658
	word32 s4_659
	word32 s8_660
	word32 a1_656
	word32 a5_657
	xQueueSemaphoreTake(Mem186[s2_231:int32], 0x2000710<32>, a2_215, a3_221, a4_222, a5_223, mstatus_226, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_298, out a0_290, out a1_656, out a2_292, out a3_293, out a4_294, out a5_657, out s2_299, out s3_658, out s4_659, out s8_660)
	branch a0_290 == 1<32> l2307D08C
l2307D08C:
	word32 a6_637
	word32 s4_638
	word32 t3_639
	word32 a3_634
	word32 a4_635
	word32 a5_636
	word32 a0_631
	word32 a1_632
	word32 a2_633
	word32 s0_629
	word32 s1_630
	vPortFree(s1_298, a2_292, 1<32>, mstatus_226, dwArg0128, dwArg0168, out s0_629, out s1_630, out a0_631, out a1_632, out a2_633, out a3_634, out a4_635, out a5_636, out a6_637, out s4_638, out t3_639)
l2307D050:
	word32 a2_323
	word32 a5_326
	word32 s1_329
	word32 a4_643
	word32 s4_644
	word32 a0_640
	word32 a1_641
	word32 a3_642
	vQueueDelete(Mem186[s2_299:int32], a3_293, a4_294, mstatus_226, dwArg0128, dwArg0168, out s1_329, out a0_640, out a1_641, out a2_323, out a3_642, out a4_643, out a5_326, out s4_644)
	Mem334[s2_299:word32] = 0<32>
	word32 t3_655
	word32 a5_652
	word32 a6_653
	word32 s4_654
	word32 a2_649
	word32 a3_650
	word32 a4_651
	word32 s1_646
	word32 a0_647
	word32 a1_648
	word32 s0_645
	vPortFree(s1_329, a2_323, a5_326, mstatus_226, dwArg0128, dwArg0168, out s0_645, out s1_646, out a0_647, out a1_648, out a2_649, out a3_650, out a4_651, out a5_652, out a6_653, out s4_654, out t3_655)
l2307D064:
	0<32> = dwArg0128
	return
http_url_req_exit:


void cb_altcp_recv_fn(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a5, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg9C, word32 dwArgAC, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
cb_altcp_recv_fn_entry:
l2307D096:
	word32 a4_100 = Mem12[a5:word32]
	Mem20[a5 + 1<i32>:word32] = a4_100
	word32 s1_16 = a0
	word32 a3_131 = a5 + 1<i32>
	word32 a5_21 = a5 & 63<i32>
	word32 s0_124 = a2
	branch (a5 & 63<i32>) != 0<32> l2307D0C8
l2307D0BC:
	word32 a0_242
	word32 s8_244
	word32 a1_243
	s1_16 = puts(0x230C6900<32>, out a0_242, out a1_243, out a2, out a4_100, out a5_21, out s4, out s8_244)
l2307D0C8:
	word32 a5_44
	word32 a0_42 = altcp_recved(a1, a5_21, out a5_44)
	branch s1_16 == 0<32> l2307D0E4
l2307D0D4:
	s0_124 = Mem20[a0_42 + 4<i32>:word32]
	branch a5_44 != 0<32> l2307D0F8
l2307D0DA:
	branch CONVERT(Mem20[s0_124 + 8<i32>:uint16], uint16, word32) == 0<32> l2307D0F8
l2307D0F8:
	word32 a5_53
	word32 a1_54
	word32 a2_261
	word32 a0_50 = strlen(a0_42, out a1_54, out a2_261, out a3_131, out a4_100, out a5_53)
	branch a5_53 <u a0_50 l2307D10E
l2307D10E:
	word32 s1_265
	word32 a0_266
	word32 a1_267
	word32 a5_269
	word32 a2_268
	word32 a7_270
	word32 s2_271
	word32 s3_272
	word32 s5_273
	word32 s6_274
	word32 s7_275
	word32 s8_276
	word32 s9_277
	word32 s10_278
	word32 s11_279
	word32 t4_280
	ra = printf(ra, 0x230C49B8<32>, a3_131, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_265, out a0_266, out a1_267, out a2_268, out a3_131, out a4_100, out a5_269, out a7_270, out s2_271, out s3_272, out s4, out s5_273, out s6_274, out s7_275, out s8_276, out s9_277, out s10_278, out s11_279, out t4_280)
l2307D102:
	branch a0_50 == 0<32> l2307D0E4
l2307D106:
	s0_124 = Mem20[a1_54 + 4<i32>:word32]
	word32 a5_281
	strcpy(a0_50, a1_54, out a4_100, out a5_281)
l2307D0E0:
	word32 a0_263
	word32 s1_262
	word32 a2_264
	ra = at_data_output(ra, a0_42, a2, a5 + 1<i32>, a4_100, mstatus, s0, dwArg08, dwArg18, dwArg28, dwArg50, dwArg54, ra, dwArg78, dwArg9C, dwArgE8, dwArg0128, out s1_262, out a0_263, out a2_264, out a3_131, out a4_100, out s4, out mstatus)
l2307D0E4:
	word32 mstatus_260
	word32 s6_258
	word32 s8_259
	word32 s5_257
	word32 s4_256
	word32 s3_255
	word32 s2_254
	word32 a7_253
	word32 a5_252
	word32 a4_251
	word32 a3_250
	word32 s0_245
	word32 s1_246
	word32 a1_248
	word32 a0_247
	word32 a2_249
	pbuf_free(ra, s0_124, a3_131, a4_100, s4, mstatus, dwArg0118, out s0_245, out s1_246, out a0_247, out a1_248, out a2_249, out a3_250, out a4_251, out a5_252, out a7_253, out s2_254, out s3_255, out s4_256, out s5_257, out s6_258, out s8_259, out mstatus_260)
	0<32> = dwArg38
	return
cb_altcp_recv_fn_exit:


void cb_httpc_result(word32 ra, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgA4, word32 dwArgAC, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00A4:[0..31] Stack +00AC:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
cb_httpc_result_entry:
l2307D11C:
	word32 a4_17
	word32 a3_119
	word32 a2_118
	word32 a1_117
	word32 a0_116
	word32 s1_115
	word32 a5_120
	word32 a7_121
	word32 s2_122
	word32 s3_123
	word32 s4_124
	word32 s5_125
	word32 s6_126
	word32 s7_127
	word32 s8_128
	word32 s9_129
	word32 s10_130
	word32 s11_131
	word32 t4_132
	printf(ra, 0x230C4A10<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_115, out a0_116, out a1_117, out a2_118, out a3_119, out a4_17, out a5_120, out a7_121, out s2_122, out s3_123, out s4_124, out s5_125, out s6_126, out s7_127, out s8_128, out s9_129, out s10_130, out s11_131, out t4_132)
	word32 a0_34 = Mem9[0x4200F6D0<32>:int32]
	branch a0_34 == 0<32> l2307D146
l2307D146:
	return
l2307D138:
l2307D142_thunk_xQueueGenericSend:
	word32 s1_133
	word32 a0_134
	word32 a1_135
	word32 a2_136
	word32 a3_137
	word32 a4_138
	word32 a5_139
	word32 a7_140
	word32 s2_141
	word32 s3_142
	word32 s4_143
	word32 s5_144
	word32 s6_145
	word32 s8_146
	xQueueGenericSend(a0_34, 0<32>, 0<32>, a4_17, 0x4200F000<32>, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_133, out a0_134, out a1_135, out a2_136, out a3_137, out a4_138, out a5_139, out a7_140, out s2_141, out s3_142, out s4_143, out s5_144, out s6_145, out s8_146)
	return
cb_httpc_result_exit:


void ap_sta_get(word32 ra, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg58, word32 dwArg5C, word32 dwArg88, word32 dwArg98, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ap_sta_get_entry:
l2307D14C:
	wifi_mgmr_ap_sta_cnt_get(fp + -61<i32>)
	wifi_mgmr_ap_ip_get(fp + -60<i32>, fp + -56<i32>, fp + -52<i32>)
	word32 dwLoc40_332 = CONVERT(nLoc40, word24, uint32)
	word32 a2_31
	word32 a3_32
	word32 a4_33
	word32 s3_40
	word32 mstatus_61
	word32 s1_64
	word32 s3_68
	word32 a2_112
	word32 a3_113
	word32 a4_114
	word32 mstatus_118
	word32 s1_121
	word32 s3_125
	word32 a0_451
	word32 s4_458
	word32 s5_459
	word32 a5_456
	word32 s2_457
	word32 a3_454
	word32 a4_455
	word32 a2_453
	word32 a1_452
	word32 s0_450
	word32 s6_460
	word32 s7_461
	word32 s8_462
	word32 s9_463
	word32 s10_464
	word32 s11_465
	word32 a2_466
	word32 a3_467
	word32 a4_468
	word32 a5_469
	word32 s0_470
	word32 a0_471
	word32 a1_472
	word32 a5_473
	word32 s2_474
	word32 s4_475
	word32 s5_476
	word32 s6_477
	word32 s7_478
	word32 s8_479
	word32 s9_480
	word32 s10_481
	word32 s11_482
	word32 s0_483
	word32 s1_484
	word32 a0_485
	word32 a1_486
	word32 a2_487
	word32 a3_488
	word32 a4_489
	word32 a5_490
	word32 s2_491
	word32 s4_492
	word32 s5_493
	word32 s6_494
	word32 s7_495
	word32 s8_496
	word32 s9_497
	word32 s10_498
	word32 s11_499
	word32 s3_155
	word32 mstatus_148
	word32 ra_149 = at_dump_noend(at_dump_noend(at_dump_noend(wifi_mgmr_ap_mac_get(ra, fp + -48<i32>, s2, s3, s4, out a2_31, out a3_32, out a4_33, out s3_40), 0x230C7000<32>, 0x230C6900<32>, a2_31, a3_32, a4_33, s3_40, mstatus, dwLoc4C, dwLoc40_332, dwLoc3C, dwLoc38, dwArg0C, dwArg10, dwArg14, 0<32>, dwArg58, dwArg5C, dwArg88, dwArg98, dwArgC8, out s0_450, out s1_64, out a0_451, out a1_452, out a2_453, out a3_454, out a4_455, out a5_456, out s2_457, out s3_68, out s4_458, out s5_459, out s6_460, out s7_461, out s8_462, out s9_463, out s10_464, out s11_465, out mstatus_61), s1_64, 0x230C4884<32>, ip4addr_ntoa(out a2_466, out a3_467, out a4_468, out a5_469), CONVERT(SLICE(s2, byte, 0), byte, word32), CONVERT(SLICE(s2, byte, 8), byte, word32), s3_68, mstatus_61, dwLoc4C, dwLoc40_332, dwLoc3C, dwLoc38, dwArg0C, dwArg10, dwArg14, 0<32>, dwArg58, dwArg5C, dwArg88, dwArg98, dwArgC8, out s0_470, out s1_121, out a0_471, out a1_472, out a2_112, out a3_113, out a4_114, out a5_473, out s2_474, out s3_125, out s4_475, out s5_476, out s6_477, out s7_478, out s8_479, out s9_480, out s10_481, out s11_482, out mstatus_118), s1_121, s1_121 + -1792<i32>, a2_112, a3_113, a4_114, s3_125, mstatus_118, dwLoc4C, dwLoc40_332, dwLoc3C, dwLoc38, dwArg0C, dwArg10, dwArg14, 0<32>, dwArg58, dwArg5C, dwArg88, dwArg98, dwArgC8, out s0_483, out s1_484, out a0_485, out a1_486, out a2_487, out a3_488, out a4_489, out a5_490, out s2_491, out s3_155, out s4_492, out s5_493, out s6_494, out s7_495, out s8_496, out s9_497, out s10_498, out s11_499, out mstatus_148)
	word32 s0_169 = 0<32>
l2307D1C8:
	word32 dwLoc40_355 = CONVERT(nLoc40, word24, uint32)
	branch s0_169 <u 0<32> l2307D1DE
l2307D1DE:
	word32 a2_180
	word32 a3_181
	word32 a4_182
	word32 s1_188
	word32 s4_500
	word32 s0_187
	ra_149 = wifi_mgmr_ap_sta_info_get(ra_149, s0_169, out s0_187, out s1_188, out a2_180, out a3_181, out a4_182, out s4_500)
	branch CONVERT(bLoc27, byte, word32) == 0<32> l2307D224
l2307D1EC:
	word32 mstatus_210
	word32 s1_213
	word32 s2_216
	word32 s3_217
	word32 a2_243
	word32 a3_244
	word32 a4_245
	word32 mstatus_249
	word32 s1_252
	word32 s3_256
	word32 s0_501
	word32 a0_502
	word32 a1_503
	word32 a2_504
	word32 a3_505
	word32 a4_506
	word32 a5_507
	word32 s4_508
	word32 s5_509
	word32 s6_510
	word32 s7_511
	word32 s8_512
	word32 s9_513
	word32 s10_514
	word32 s11_515
	word32 s0_516
	word32 a0_517
	word32 a1_518
	word32 a5_519
	word32 s2_520
	word32 s4_521
	word32 s5_522
	word32 s6_523
	word32 s7_524
	word32 s8_525
	word32 s9_526
	word32 s10_527
	word32 s11_528
	word32 s1_529
	word32 a0_530
	word32 a1_531
	word32 a2_532
	word32 a3_533
	word32 a4_534
	word32 a5_535
	word32 s2_536
	word32 s4_537
	word32 s5_538
	word32 s6_539
	word32 s7_540
	word32 s8_541
	word32 s9_542
	word32 s10_543
	word32 s11_544
	ra_149 = at_dump_noend(at_dump_noend(at_dump_noend(ra_149, s1_188, s1_188 + -1792<i32>, a2_180, a3_181, a4_182, s3_155, mstatus_148, dwLoc4C, dwLoc40_355, dwLoc3C, dwLoc38, dwArg0C, dwArg10, dwArg14, 0<32>, dwArg58, dwArg5C, dwArg88, dwArg98, dwArgC8, out s0_501, out s1_213, out a0_502, out a1_503, out a2_504, out a3_505, out a4_506, out a5_507, out s2_216, out s3_217, out s4_508, out s5_509, out s6_510, out s7_511, out s8_512, out s9_513, out s10_514, out s11_515, out mstatus_210), s1_213, s2_216 + -1868<i32>, CONVERT(bLoc26, byte, word32), CONVERT(bLoc25, byte, word32), CONVERT(bLoc24, byte, word32), s3_217, mstatus_210, dwLoc4C, dwLoc40_355, dwLoc3C, dwLoc38, dwArg0C, dwArg10, dwArg14, 0<32>, dwArg58, dwArg5C, dwArg88, dwArg98, dwArgC8, out s0_516, out s1_252, out a0_517, out a1_518, out a2_243, out a3_244, out a4_245, out a5_519, out s2_520, out s3_256, out s4_521, out s5_522, out s6_523, out s7_524, out s8_525, out s9_526, out s10_527, out s11_528, out mstatus_249), s1_252, s1_252 + -1792<i32>, a2_243, a3_244, a4_245, s3_256, mstatus_249, dwLoc4C, dwLoc40_355, dwLoc3C, dwLoc38, dwArg0C, dwArg10, dwArg14, 0<32>, dwArg58, dwArg5C, dwArg88, dwArg98, dwArgC8, out s0_187, out s1_529, out a0_530, out a1_531, out a2_532, out a3_533, out a4_534, out a5_535, out s2_536, out s3_155, out s4_537, out s5_538, out s6_539, out s7_540, out s8_541, out s9_542, out s10_543, out s11_544, out mstatus_148)
l2307D224:
	s0_169 = s0_187 + 1<32> & 255<i32>
l2307D1D0:
	return
ap_sta_get_exit:


void cwmode_cur_get(word32 ra, word32 s0, word32 a0, word32 s3, word32 mstatus, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg58, word32 dwArg68, word32 dwArg8C, word32 dwArg98, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cwmode_cur_get_entry:
l2307D22C:
	word32 s1_55
	word32 a0_56
	word32 a2_57
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 s2_61
	word32 s3_62
	word32 s4_63
	at_key_value_get(ra, s0, 0x230A99DC<32>, a0 + 8<i32>, s3, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg58, dwArg68, dwArg8C, dwArg98, dwArgD8, out s1_55, out a0_56, out a2_57, out a3_58, out a4_59, out a5_60, out s2_61, out s3_62, out s4_63)
	return
cwmode_cur_get_exit:


void uart_get(word32 ra, word32 a0, word32 s3, word32 mstatus, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg58, word32 dwArg68, word32 dwArg8C, word32 dwArg98, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
uart_get_entry:
l2307D248:
	word32 s3_28
	word32 s3_59
	word32 s3_90
	word32 s3_121
	word32 s1_183
	word32 a0_184
	word32 a2_185
	word32 a3_186
	word32 a4_187
	word32 a5_188
	word32 s2_189
	word32 s4_190
	word32 s1_191
	word32 a0_192
	word32 a2_193
	word32 a3_194
	word32 a4_195
	word32 a5_196
	word32 s2_197
	word32 s4_198
	word32 s1_199
	word32 a0_200
	word32 a2_201
	word32 a3_202
	word32 a4_203
	word32 a5_204
	word32 s2_205
	word32 s4_206
	word32 s1_207
	word32 a0_208
	word32 a2_209
	word32 a3_210
	word32 a4_211
	word32 a5_212
	word32 s2_213
	word32 s4_214
	word32 s1_215
	word32 a0_216
	word32 a2_217
	word32 a3_218
	word32 a4_219
	word32 a5_220
	word32 s2_221
	word32 s3_222
	word32 s4_223
	at_key_value_get(at_key_value_get(at_key_value_get(at_key_value_get(at_key_value_get(ra, a0, 0x230C4700<32>, a0 + 12<i32>, s3, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg58, dwArg68, dwArg8C, dwArg98, dwArgD8, out s1_183, out a0_184, out a2_185, out a3_186, out a4_187, out a5_188, out s2_189, out s3_28, out s4_190), a0, 0x230C46E0<32>, a0 + 16<i32>, s3_28, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg58, dwArg68, dwArg8C, dwArg98, dwArgD8, out s1_191, out a0_192, out a2_193, out a3_194, out a4_195, out a5_196, out s2_197, out s3_59, out s4_198), a0, 0x230C46E8<32>, a0 + 24<i32>, s3_59, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg58, dwArg68, dwArg8C, dwArg98, dwArgD8, out s1_199, out a0_200, out a2_201, out a3_202, out a4_203, out a5_204, out s2_205, out s3_90, out s4_206), a0, 0x230C46F0<32>, a0 + 20<i32>, s3_90, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg58, dwArg68, dwArg8C, dwArg98, dwArgD8, out s1_207, out a0_208, out a2_209, out a3_210, out a4_211, out a5_212, out s2_213, out s3_121, out s4_214), a0, 0x230C46F8<32>, a0 + 28<i32>, s3_121, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg58, dwArg68, dwArg8C, dwArg98, dwArgD8, out s1_215, out a0_216, out a2_217, out a3_218, out a4_219, out a5_220, out s2_221, out s3_222, out s4_223)
	return
uart_get_exit:


void cwqap(word32 ra, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg54, word32 dwArg6C, word32 dwArg70, word32 dwArg98, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
cwqap_entry:
l2307D2AA:
	word32 a2_10
	word32 a3_11
	word32 a4_12
	word32 a5_13
	word32 mstatus_16
	word32 ra_17 = wifi_mgmr_sta_disconnect(ra, s4, mstatus, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out a2_10, out a3_11, out a4_12, out a5_13, out mstatus_16)
	word32 s4_48
	word32 s1_101
	word32 a0_102
	word32 a1_103
	word32 a2_104
	word32 a3_105
	word32 a4_106
	word32 a5_107
	word32 s2_108
	word32 s3_109
	vTaskDelay(1000<i32>, a2_10, a3_11, a4_12, a5_13, mstatus_16, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_101, out a0_102, out a1_103, out a2_104, out a3_105, out a4_106, out a5_107, out s2_108, out s3_109, out s4_48)
	word32 s4_110
	word32 mstatus_111
	wifi_mgmr_sta_disable(ra_17, s4_48, mstatus_16, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s4_110, out mstatus_111)
	return
cwqap_exit:


void cwjap_info(word32 ra, word32 s2, word32 mstatus, word32 dwArg18, word32 dwArg94, word32 dwArgF4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0094:[0..31] Stack +00F4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cwjap_info_entry:
l2307D2C8:
	word32 a5_310
	word32 a4_309
	word32 a3_308
	word32 a2_307
	word32 a1_306
	word32 a0_305
	word32 t1_304
	word32 ra_17 = memset(ra, fp + -192<i32>, 0<32>, 174<i32>, out t1_304, out a0_305, out a1_306, out a2_307, out a3_308, out a4_309, out a5_310)
	word32 a5_28
	word32 a4_311
	word32 a3_26 = wifi_mgmr_state_get(fp + -208<i32>, out a4_311, out a5_28)
	branch a5_28 >u 0xFFFFFFFC<32> l2307D300
l2307D2F0:
	word32 a4_38
	ra_17 = wifi_mgmr_sta_connect_ind_stat_get(ra_17, fp + -192<i32>, s2, dwLocF8, dwLocD8, dwLocB0, dwLocAC, dwLoc90, dwLoc8C, dwLoc88, 0<32>, 0<32>, dwLoc44, out a3_26, out a4_38)
	wifi_mgmr_sta_ip_get(fp + -204<i32>, fp + -200<i32>, fp + -196<i32>, a4_38)
l2307D300:
	word32 a2_77
	word32 a3_78
	word32 a4_79
	word32 s1_82
	word32 s3_86
	word32 mstatus_107
	word32 s1_110
	word32 s3_114
	word32 s2_333
	word32 a5_332
	word32 a4_331
	word32 a3_330
	word32 a2_329
	word32 a1_328
	word32 a0_327
	word32 s0_326
	word32 t4_325
	word32 s11_324
	word32 s10_323
	word32 s9_322
	word32 s8_321
	word32 s7_320
	word32 s6_319
	word32 s5_318
	word32 s4_317
	word32 s2_316
	word32 a7_315
	word32 a5_314
	word32 a1_313
	word32 a0_312
	word32 s4_334
	word32 s5_335
	word32 s6_336
	word32 s7_337
	word32 s8_338
	word32 s9_339
	word32 s10_340
	word32 s11_341
	word32 ra_108 = at_dump_noend(printf(ra_17, 0x230C4A84<32>, a3_26, dwLocF8, dwLocD8, dwLoc90, dwLoc8C, 0<32>, dwLoc44, out s1_82, out a0_312, out a1_313, out a2_77, out a3_78, out a4_79, out a5_314, out a7_315, out s2_316, out s3_86, out s4_317, out s5_318, out s6_319, out s7_320, out s8_321, out s9_322, out s10_323, out s11_324, out t4_325), s1_82, 0x230C6900<32>, a2_77, a3_78, a4_79, s3_86, mstatus, dwLocFC, dwLocF0, dwLocEC, dwLocE8, dwLocA4, dwLocA0, dwLoc9C, dwLoc78, dwLoc58, dwLoc54, dwLoc28, dwLoc18, dwArg18, out s0_326, out s1_110, out a0_327, out a1_328, out a2_329, out a3_330, out a4_331, out a5_332, out s2_333, out s3_114, out s4_334, out s5_335, out s6_336, out s7_337, out s8_338, out s9_339, out s10_340, out s11_341, out mstatus_107)
	word32 a3_144
	word32 a4_145
	word32 a2_342
	word32 a5_343
	ip4addr_ntoa(out a2_342, out a3_144, out a4_145, out a5_343)
	0<32> = dwArgF4
	word32 a3_129 = CONVERT(bLoc1B, byte, word32)
	word32 a5_131 = CONVERT(bLoc19, byte, word32)
	word32 a2_167
	word32 a3_168
	word32 a4_169
	word32 mstatus_173
	word32 s0_175
	word32 s1_176
	word32 s3_180
	word32 a0_344
	word32 a1_345
	word32 a5_346
	word32 s2_347
	word32 s4_348
	word32 s5_349
	word32 s6_350
	word32 s7_351
	word32 s8_352
	word32 s9_353
	word32 s10_354
	word32 s11_355
	word32 s0_356
	word32 s1_357
	word32 a0_358
	word32 a1_359
	word32 a2_360
	word32 a3_361
	word32 a4_362
	word32 a5_363
	word32 s2_364
	word32 s3_365
	word32 s4_366
	word32 s5_367
	word32 s6_368
	word32 s7_369
	word32 s8_370
	word32 s9_371
	word32 s10_372
	word32 s11_373
	word32 mstatus_374
	at_dump_noend(at_dump_noend(ra_108, s1_110, 0x230C4AAC<32>, dwArg94, a3_144, a4_145, s3_114, mstatus_107, dwLocFC, a5_131, a3_129, dwLocE8, dwLocA4, dwLocA0, dwLoc9C, dwLoc78, dwLoc58, dwLoc54, dwLoc28, dwLoc18, dwArg18, out s0_175, out s1_176, out a0_344, out a1_345, out a2_167, out a3_168, out a4_169, out a5_346, out s2_347, out s3_180, out s4_348, out s5_349, out s6_350, out s7_351, out s8_352, out s9_353, out s10_354, out s11_355, out mstatus_173), s1_176, s0_175 + -1792<i32>, a2_167, a3_168, a4_169, s3_180, mstatus_173, dwLocFC, a5_131, a3_129, dwLocE8, dwLocA4, dwLocA0, dwLoc9C, dwLoc78, dwLoc58, dwLoc54, dwLoc28, dwLoc18, dwArg18, out s0_356, out s1_357, out a0_358, out a1_359, out a2_360, out a3_361, out a4_362, out a5_363, out s2_364, out s3_365, out s4_366, out s5_367, out s6_368, out s7_369, out s8_370, out s9_371, out s10_372, out s11_373, out mstatus_374)
	return
cwjap_info_exit:


void deep_sleep(word32 ra, word32 s1, word32 a0, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg30, word32 dwArg34, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg58, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
deep_sleep_entry:
l2307D374:
	branch (CONVERT(Mem9[a0 + 12<i32>:byte], byte, word32) + 0xFFFFFFF9<32> & 255<i32>) >u 1<32> l2307D3F0
l2307D394:
	word32 a2_24
	word32 a3_25
	word32 a4_26
	word32 s1_31
	word32 s3_33
	word32 a2_54
	word32 a3_55
	word32 a4_56
	word32 mstatus_60
	word32 s1_63
	word32 s3_67
	word32 a2_85
	word32 a3_86
	word32 a4_87
	word32 mstatus_91
	word32 s0_93
	word32 s1_94
	word32 s3_98
	word32 a2_115
	word32 a3_116
	word32 a4_117
	word32 a5_118
	word32 mstatus_121
	word32 s0_340
	word32 a0_341
	word32 a1_342
	word32 a5_343
	word32 s2_344
	word32 s4_345
	word32 s5_346
	word32 s6_347
	word32 s7_348
	word32 s8_349
	word32 s9_350
	word32 s10_351
	word32 s11_352
	word32 a0_353
	word32 a1_354
	word32 a5_355
	word32 s2_356
	word32 s4_357
	word32 s5_358
	word32 s6_359
	word32 s7_360
	word32 s8_361
	word32 s9_362
	word32 s10_363
	word32 s11_364
	word32 s0_365
	word32 s1_366
	word32 a0_367
	word32 a1_368
	word32 s2_369
	word32 s3_370
	word32 s4_371
	word32 s5_372
	word32 s6_373
	word32 s7_374
	word32 s8_375
	word32 s9_376
	word32 s10_377
	word32 s11_378
	word32 ra_122 = at_dump_noend(at_dump_noend(at_dump_noend(hal_hbn_init(ra, s1, 1<32>, a3, 1<32>, mstatus, dwLoc18, dwArg00, dwArg04, dwArg30, dwArg34, dwArg58, dwArg7C, dwArgF8, dwArg0138, out s1_31, out a2_24, out a3_25, out a4_26, out s3_33), s1_31, 0x230C6900<32>, a2_24, a3_25, a4_26, s3_33, mstatus, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_340, out s1_63, out a0_341, out a1_342, out a2_54, out a3_55, out a4_56, out a5_343, out s2_344, out s3_67, out s4_345, out s5_346, out s6_347, out s7_348, out s8_349, out s9_350, out s10_351, out s11_352, out mstatus_60), s1_63, 0x230B3304<32>, a2_54, a3_55, a4_56, s3_67, mstatus_60, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_93, out s1_94, out a0_353, out a1_354, out a2_85, out a3_86, out a4_87, out a5_355, out s2_356, out s3_98, out s4_357, out s5_358, out s6_359, out s7_360, out s8_361, out s9_362, out s10_363, out s11_364, out mstatus_91), s1_94, s0_93 + -1792<i32>, a2_85, a3_86, a4_87, s3_98, mstatus_91, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_365, out s1_366, out a0_367, out a1_368, out a2_115, out a3_116, out a4_117, out a5_118, out s2_369, out s3_370, out s4_371, out s5_372, out s6_373, out s7_374, out s8_375, out s9_376, out s10_377, out s11_378, out mstatus_121)
	word32 a3_146
	word32 a4_147
	word32 s3_153
	word32 s1_379
	word32 a0_380
	word32 a1_381
	word32 a2_382
	word32 a5_383
	word32 s2_384
	word32 s4_385
	word32 s0_150 = vTaskDelay(100<i32>, a2_115, a3_116, a4_117, a5_118, mstatus_121, dwArg04, dwArg08, dwArg0118, dwArg0158, out s1_379, out a0_380, out a1_381, out a2_382, out a3_146, out a4_147, out a5_383, out s2_384, out s3_153, out s4_385)
	word32 a2_162
	word32 s1_165
	word32 a2_171
	word32 a3_172
	word32 a4_173
	word32 mstatus_177
	word32 s1_180
	word32 s3_184
	word32 a2_202
	word32 a3_203
	word32 a4_204
	word32 mstatus_208
	word32 s0_210
	word32 s1_211
	word32 s3_215
	word32 s0_386
	word32 a0_387
	word32 a1_388
	word32 a5_389
	word32 s2_390
	word32 s4_391
	word32 s5_392
	word32 s6_393
	word32 s7_394
	word32 s8_395
	word32 s9_396
	word32 s10_397
	word32 s11_398
	word32 a0_399
	word32 a1_400
	word32 a5_401
	word32 s2_402
	word32 s4_403
	word32 s5_404
	word32 s6_405
	word32 s7_406
	word32 s8_407
	word32 s9_408
	word32 s10_409
	word32 s11_410
	word32 s0_411
	word32 s1_412
	word32 a0_413
	word32 a1_414
	word32 a2_415
	word32 a3_416
	word32 a4_417
	word32 a5_418
	word32 s2_419
	word32 s3_420
	word32 s4_421
	word32 s5_422
	word32 s6_423
	word32 s7_424
	word32 s8_425
	word32 s9_426
	word32 s10_427
	word32 s11_428
	word32 mstatus_429
	at_dump_noend(at_dump_noend(at_dump_noend(hal_hbn_enter(ra_122, s0_150, out s1_165, out a2_162), s1_165, s0_150 + -1792<i32>, a2_162, a3_146, a4_147, s3_153, mstatus_121, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_386, out s1_180, out a0_387, out a1_388, out a2_171, out a3_172, out a4_173, out a5_389, out s2_390, out s3_184, out s4_391, out s5_392, out s6_393, out s7_394, out s8_395, out s9_396, out s10_397, out s11_398, out mstatus_177), s1_180, 0x230C4AD8<32>, a2_171, a3_172, a4_173, s3_184, mstatus_177, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_210, out s1_211, out a0_399, out a1_400, out a2_202, out a3_203, out a4_204, out a5_401, out s2_402, out s3_215, out s4_403, out s5_404, out s6_405, out s7_406, out s8_407, out s9_408, out s10_409, out s11_410, out mstatus_208), s1_211, s0_210 + -1792<i32>, a2_202, a3_203, a4_204, s3_215, mstatus_208, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_411, out s1_412, out a0_413, out a1_414, out a2_415, out a3_416, out a4_417, out a5_418, out s2_419, out s3_420, out s4_421, out s5_422, out s6_423, out s7_424, out s8_425, out s9_426, out s10_427, out s11_428, out mstatus_429)
l2307D3F0:
	return
deep_sleep_exit:


void restory(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s4, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg1C, word32 dwArg2C, word32 dwArg48, word32 dwArg5C, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s4:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +001C:[0..31] Stack +002C:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
restory_entry:
l2307D3FA:
	word32 a2_59
	word32 a3_60
	word32 a4_61
	ef_env_set_default(ra, s0, a2, a3, a4, s2, s4, s5, mstatus, dwLoc08, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg1C, dwArg2C, dwArg48, dwArg5C, dwArg78, dwArgB8, dwArgF8, dwArg0138, out a2_59, out a3_60, out a4_61)
	return
restory_exit:


void scan(word32 ra, word32 s0, word32 s1, word32 s2, word32 s3, word32 s4, word32 s7, word32 s9, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
scan_entry:
l2307D40A:
	word32 a0_36
	word32 a3_39
	word32 a4_40
	word32 s1_45
	word32 s3_49
	word32 a2_1489
	word32 s2_1490
	word32 s4_1491
	word32 a5_41
	word32 ra_44 = at_key_value_get(ra, s0, 0x230C4AE8<32>, fp + -73<i32>, s3, mstatus, dwLoc58, dwLoc28, dwLoc10, dwLoc0C, dwArg08, dwArg18, s7, s1, dwArg88, out s1_45, out a0_36, out a2_1489, out a3_39, out a4_40, out a5_41, out s2_1490, out s3_49, out s4_1491)
	word32 dwLoc4C_919 = CONVERT(nLoc4C, word24, uint32)
	branch a0_36 == 0<32> l2307D444
l2307D43E:
	a5_41 = 0xFFFFFFFF<32>
	dwLoc4C_919 = SEQ(0xFF<8>, nLoc4C) (alias)
l2307D444:
	word32 a0_77
	word32 a3_80
	word32 mstatus_346
	word32 ra_86 = wifi_mgmr_all_ap_scan(ra_44, s1_45, fp + -68<i32>, fp + -72<i32>, a3_39, a4_40, a5_41, s3_49, mstatus, dwLoc50, dwLoc4C_919, dwLoc28, dwLoc20, dwLoc1C, dwArg08, dwArg14, dwArg28, 0<32>, dwArg58, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0108, out a0_77, out a3_80, out mstatus_346)
	branch a0_77 == 0<32> l2307D47E
l2307D47E:
	word32 a2_772
	word32 a5_775
	word32 a0_770
	word32 a5_111
	word32 a3_115
	word32 a4_116
	word32 s1_119
	word32 s7_127
	word32 s3_1497
	word32 a7_1495
	word32 a1_1493
	word32 t4_1505
	word32 s2_1496
	word32 a2_1494
	word32 s4_1498
	word32 s9_1502
	word32 a0_1492
	word32 s10_1503
	word32 s5_1499
	word32 s6_1500
	word32 s8_1501
	word32 s11_1504
	word32 ra_118 = printf(ra_86, 0x230C4B10<32>, a3_80, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_119, out a0_1492, out a1_1493, out a2_1494, out a3_115, out a4_116, out a5_111, out a7_1495, out s2_1496, out s3_1497, out s4_1498, out s5_1499, out s6_1500, out s7_127, out s8_1501, out s9_1502, out s10_1503, out s11_1504, out t4_1505)
	word32 a0_136
	word32 s1_144
	word32 s2_145
	word32 a5_1506
	word32 s3_1507
	word32 a4_140
	word32 a3_139
	word32 a2_138
	word32 s0_143 = malloc(ra_118, s1_119, s7_127 << 2<u32>, a3_115, a4_116, a5_111, mstatus_346, dwLoc20, dwLoc1C, 0<32>, dwArgD8, dwArg0118, out s1_144, out a0_136, out a2_138, out a3_139, out a4_140, out a5_1506, out s2_145, out s3_1507)
	word32 a5_152 = 0<32>
	branch a0_136 != 0<32> l2307D4C2
l2307D4C2:
	branch a5_152 < s7_127 l2307D4B8
l2307D4B8:
	a4_140 = (a5_152 << 2<u32>) + a0_136
	Mem158[a5_152:word32] = a4_140
	a5_152 = a5_152 + 1<32>
l2307D4C6:
	branch (s2_145 >>u 5<u32> & 1<32>) == 0<32> l2307D4DE
l2307D4CE:
	a4_140 = a0_136 + 4<i32>
	a3_139 = 1<32>
l2307D4DA:
	branch a3_139 < s7_127 l2307D54C
l2307D54C:
	word32 a7_171 = Mem170[a4_140:int32]
	a2_138 = a7_171 + 52<i32> + s0_143
	branch CONVERT(Mem170[Mem170[a4_140 + -4<i32>:int32] + 52<i32> + s0_143 + 48<i32>:int8], int8, int32) >= CONVERT(Mem170[a2_138 + 48<i32>:int8], int8, int32) l2307D59E
l2307D56C:
	word32 a5_181 = a3_139 + -1<i32>
	word32 a1_182 = a4_140
l2307D572:
	word32 t1_185 = Mem184[a1_182 + -4<i32>:int32]
	branch CONVERT(Mem184[t1_185 + 52<i32> + s0_143 + 48<i32>:int8], int8, int32) >= CONVERT(Mem184[a2_138 + 48<i32>:int8], int8, int32) l2307D594
l2307D588:
	Mem193[a1_182:word32] = t1_185
	a5_181 = a5_181 + 0xFFFFFFFF<32>
	a1_182 = a1_182 + 0xFFFFFFFC<32>
	branch a5_181 != 0xFFFFFFFF<32> l2307D572
l2307D594:
	Mem207[(a5_181 + 1<32> << 2<i32>) + a0_136:word32] = a7_171
l2307D59E:
	a3_139 = a3_139 + 1<32>
	a4_140 = a4_140 + 4<32>
l2307D4DE:
	word32 a2_253
	word32 a3_254
	word32 a4_255
	word32 s1_258
	word32 s3_260
	word32 a2_279
	word32 a3_280
	word32 a4_281
	word32 mstatus_285
	word32 s1_288
	word32 s3_292
	word32 a2_310
	word32 a3_311
	word32 a4_312
	word32 mstatus_316
	word32 s1_319
	word32 s3_323
	word32 s6_326
	word32 s2_352
	word32 s9_1588
	word32 s10_1589
	word32 s11_1590
	word32 s2_1572
	word32 s8_1587
	word32 s4_1573
	word32 s5_1574
	word32 a1_1581
	word32 s6_1586
	word32 a2_1582
	word32 a3_1583
	word32 a5_1584
	word32 s5_1585
	word32 s7_1575
	word32 s8_1576
	word32 s9_1577
	word32 s10_1578
	word32 s11_1579
	word32 s1_1580
	word32 a0_1556
	word32 a5_1571
	word32 a1_1557
	word32 a5_1558
	word32 s9_1565
	word32 a1_1570
	word32 s10_1566
	word32 s11_1567
	word32 s0_1568
	word32 a0_1569
	word32 s2_1559
	word32 s4_1560
	word32 s5_1561
	word32 s6_1562
	word32 s7_1563
	word32 s8_1564
	word32 s0_1555
	word32 s2_1554
	word32 s4_354
	word32 a4_342
	word32 s7_357
	word32 a0_338
	word32 s0_348
	word32 s3_353
	word32 ra_347 = at_dump_noend(at_dump_noend(at_dump_noend(at_serial_lock(ra_118, s1_144, a2_138, a3_139, a4_140, mstatus_346, dwLoc5C, s10, s2, dwArg00, dwArg04, dwArg24, dwArg28, ra, dwArg98, dwArgD8, out s1_258, out a2_253, out a3_254, out a4_255, out s2_1554, out s3_260), s1_258, 0x230C6900<32>, a2_253, a3_254, a4_255, s3_260, mstatus_346, dwLoc5C, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_1555, out s1_288, out a0_1556, out a1_1557, out a2_279, out a3_280, out a4_281, out a5_1558, out s2_1559, out s3_292, out s4_1560, out s5_1561, out s6_1562, out s7_1563, out s8_1564, out s9_1565, out s10_1566, out s11_1567, out mstatus_285), s1_288, 0x230C4B2C<32>, a2_279, a3_280, a4_281, s3_292, mstatus_285, dwLoc5C, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_1568, out s1_319, out a0_1569, out a1_1570, out a2_310, out a3_311, out a4_312, out a5_1571, out s2_1572, out s3_323, out s4_1573, out s5_1574, out s6_326, out s7_1575, out s8_1576, out s9_1577, out s10_1578, out s11_1579, out mstatus_316), s1_319, s6_326 + -1792<i32>, a2_310, a3_311, a4_312, s3_323, mstatus_316, dwLoc5C, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_348, out s1_1580, out a0_338, out a1_1581, out a2_1582, out a3_1583, out a4_342, out a5_1584, out s2_352, out s3_353, out s4_354, out s5_1585, out s6_1586, out s7_357, out s8_1587, out s9_1588, out s10_1589, out s11_1590, out mstatus_346)
	word32 a5_374 = s2_352 >>u 4<u32> & 1<32>
	word32 a5_377 = s2_352 >>u 2<u32> & 1<32>
	word32 s5_380 = 52<i32>
	word32 s10_381 = 0x230C5000<32>
l2307D53C:
	branch s4_354 < s7_357 l2307D5A4
l2307D5A4:
	word32 s1_390 = Mem378[a0_338:word32]
	word32 a3_396
	word32 a2_400
	word32 a1_1591
	word32 a5_1592
	a0_338 = strlen(s5_380 + a0_338 + s0_348, out a1_1591, out a2_400, out a3_396, out a4_342, out a5_1592)
	branch a0_338 == 0<32> l2307D658
l2307D5B2:
	word32 a0_1597
	word32 s4_1598
	word32 s7_1599
	word32 s10_1600
	word32 a1_409
	word32 s11_421
	word32 s0_418
	word32 a2_410
	word32 s9_429
	word32 s2_422
	word32 a5_413
	word32 s5_425
	word32 s8_428
	word32 s6_426
	word32 s3_423
	word32 s1_419
	word32 a3_411
	word32 a4_412
	word32 mstatus_416
	word32 ra_417 = at_dump_noend(ra_347, s1_390, s10_381 + -1228<i32>, a2_400, a3_396, a4_342, s3_353, mstatus_346, a5_374, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_418, out s1_419, out a0_1597, out a1_409, out a2_410, out a3_411, out a4_412, out a5_413, out s2_422, out s3_423, out s4_1598, out s5_425, out s6_426, out s7_1599, out s8_428, out s9_429, out s10_1600, out s11_421, out mstatus_416)
	0<32> = dwArg84
	branch a5_413 == 0<32> l2307D5D0
l2307D5C0:
	word32 s10_1604
	word32 s7_1603
	word32 s4_1602
	word32 a0_1601
	ra_417 = at_dump_noend(ra_417, Mem378[a1_409:word32], s8_428 + -1220<i32>, a2_410, a3_411, a4_412, s3_423, mstatus_416, a5_374, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_418, out s1_419, out a0_1601, out a1_409, out a2_410, out a3_411, out a4_412, out a5_413, out s2_422, out s3_423, out s4_1602, out s5_425, out s6_426, out s7_1603, out s8_428, out s9_429, out s10_1604, out s11_421, out mstatus_416)
l2307D5D0:
	branch a5_413 == 0<32> l2307D5FC
l2307D5D4:
	word32 a1_481 = s5_425 + a1_409 + s0_418
	word32 s0_1605
	word32 a0_1606
	word32 a1_1607
	word32 s4_1608
	word32 s7_1609
	word32 s10_1610
	word32 s11_1611
	ra_417 = at_dump_noend(ra_417, Mem378[a1_409:word32], s11_421 + -1216<i32>, CONVERT(Mem378[a1_481 + 41<i32>:byte], byte, word32), CONVERT(Mem378[a1_481 + 42<i32>:byte], byte, word32), CONVERT(Mem378[a1_481 + 43<i32>:byte], byte, word32), s3_423, mstatus_416, a5_374, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_1605, out s1_419, out a0_1606, out a1_1607, out a2_410, out a3_411, out a4_412, out a5_413, out s2_422, out s3_423, out s4_1608, out s5_425, out s6_426, out s7_1609, out s8_428, out s9_429, out s10_1610, out s11_1611, out mstatus_416)
l2307D5FC:
	word32 s0_522 = dwArg84
	branch a5_413 == 0<32> l2307D614
l2307D600:
	word32 a1_1613
	word32 s11_1618
	word32 a2_1614
	word32 s4_1615
	word32 s7_1616
	word32 s10_1617
	word32 a0_1612
	ra_417 = at_dump_noend(ra_417, Mem378[a5_413:word32], s9_429 + -1184<i32>, a2_410, a3_411, a4_412, s3_423, mstatus_416, a5_374, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_522, out s1_419, out a0_1612, out a1_1613, out a2_1614, out a3_411, out a4_412, out a5_413, out s2_422, out s3_423, out s4_1615, out s5_425, out s6_426, out s7_1616, out s8_428, out s9_429, out s10_1617, out s11_1618, out mstatus_416)
l2307D614:
	word32 a2_572 = dwArg84
	branch a5_413 == 0<32> l2307D62C
l2307D618:
	word32 a1_1620
	word32 s4_1621
	word32 s7_1622
	word32 s9_1623
	word32 s10_1624
	word32 s11_1625
	word32 a0_1619
	ra_417 = at_dump_noend(ra_417, Mem378[a5_413:word32], s9_429 + -1184<i32>, dwArg84, a3_411, a4_412, s3_423, mstatus_416, a5_374, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_522, out s1_419, out a0_1619, out a1_1620, out a2_572, out a3_411, out a4_412, out a5_413, out s2_422, out s3_423, out s4_1621, out s5_425, out s6_426, out s7_1622, out s8_428, out s9_1623, out s10_1624, out s11_1625, out mstatus_416)
l2307D62C:
	branch s2_422 == 0<32> l2307D64A
l2307D630:
	word32 s1_622 = Mem378[a5_413:word32]
	wifi_mgmr_auth_to_str(CONVERT(Mem378[a5_413 + s5_425 + s0_522 + 47<i32>:byte], byte, word32))
	word32 s9_1652
	word32 s10_1653
	word32 s11_1654
	word32 s8_1651
	word32 s7_1650
	word32 a0_1644
	word32 s5_1649
	word32 a1_1645
	word32 a5_1646
	word32 s2_1647
	word32 s4_1648
	word32 s0_1643
	ra_417 = at_dump_noend(ra_417, s1_622, s8_428 + -1220<i32>, a2_572, a3_411, a4_412, s3_423, mstatus_416, a5_374, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_1643, out s1_419, out a0_1644, out a1_1645, out a2_572, out a3_411, out a4_412, out a5_1646, out s2_1647, out s3_423, out s4_1648, out s5_1649, out s6_426, out s7_1650, out s8_1651, out s9_1652, out s10_1653, out s11_1654, out mstatus_416)
l2307D64A:
	word32 a2_693
	word32 a3_694
	word32 a4_695
	word32 a5_696
	word32 s9_1635
	word32 s11_1636
	word32 a1_1629
	word32 s8_1634
	word32 s2_1630
	word32 s3_1631
	word32 s4_1632
	word32 s6_1633
	word32 s0_1626
	word32 s1_1627
	word32 a0_1628
	ra_347 = at_dump_noend(ra_417, s1_419, s6_426 + -1792<i32>, a2_572, a3_411, a4_412, s3_423, mstatus_416, a5_374, dwLoc50, dwLoc4C_919, s10, dwLoc04, dwArg00, dwArg04, dwArg28, s1, ra, dwArg78, dwArg88, dwArgB8, out s0_1626, out s1_1627, out a0_1628, out a1_1629, out a2_693, out a3_694, out a4_695, out a5_696, out s2_1630, out s3_1631, out s4_1632, out s5_380, out s6_1633, out s7_357, out s8_1634, out s9_1635, out s10_381, out s11_1636, out mstatus_346)
	word32 s1_1637
	word32 a1_1638
	word32 a2_1639
	word32 a3_1640
	word32 a5_1641
	word32 s2_1642
	s0_348 = vTaskDelay(5<32>, a2_693, a3_694, a4_695, a5_696, mstatus_346, s4, s2, dwArgD8, dwArg0118, out s1_1637, out a0_338, out a1_1638, out a2_1639, out a3_1640, out a4_342, out a5_1641, out s2_1642, out s3_353, out s4_354)
l2307D658:
	s4_354 = s4_354 + 1<32>
l2307D540:
	word32 a2_744
	word32 a5_747
	word32 s3_752
	word32 a0_1593
	word32 a3_1594
	word32 a4_1595
	word32 s4_1596
	at_serial_unlock(ra_347, a4_342, mstatus_346, a5_374, s10, s2, dwArg00, dwArg04, a5_377, dwArg28, ra, dwArg98, dwArgD8, dwArg0118, out a0_1593, out a2_744, out a3_1594, out a4_1595, out a5_747, out s3_752, out s4_1596)
	free(s3_752, a2_744, a5_747, mstatus_346, dwArgF8, dwArg0138, out a0_770, out a2_772, out a5_775)
l2307D4A2:
	word32 s10_1540
	word32 s11_1541
	word32 t4_1542
	word32 s9_1539
	word32 s3_1533
	word32 s8_1538
	word32 s4_1534
	word32 s5_1535
	word32 s6_1536
	word32 s7_1537
	word32 s1_1527
	word32 a1_1528
	word32 a3_1529
	word32 a4_1530
	word32 a7_1531
	word32 s2_1532
	printf(ra_118, 0x230C46CC<32>, a3_139, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1527, out a0_770, out a1_1528, out a2_772, out a3_1529, out a4_1530, out a5_775, out a7_1531, out s2_1532, out s3_1533, out s4_1534, out s5_1535, out s6_1536, out s7_1537, out s8_1538, out s9_1539, out s10_1540, out s11_1541, out t4_1542)
l2307D4AE:
	branch a0_770 == 0<32> l2307D45E
l2307D4B2:
	word32 a4_1549
	word32 a5_1550
	word32 a6_1551
	word32 s4_1552
	word32 t3_1553
	word32 s0_1543
	word32 s1_1544
	word32 a0_1545
	word32 a1_1546
	word32 a2_1547
	word32 a3_1548
	vPortFree(a0_770, a2_772, a5_775, mstatus_346, dwArgF8, dwArg0138, out s0_1543, out s1_1544, out a0_1545, out a1_1546, out a2_1547, out a3_1548, out a4_1549, out a5_1550, out a6_1551, out s4_1552, out t3_1553)
l2307D450:
	word32 s6_1520
	word32 s4_1518
	word32 s2_1516
	word32 a5_1514
	word32 a1_1510
	word32 s1_1508
	word32 a3_1512
	word32 a2_1511
	word32 s8_1522
	word32 s7_1521
	word32 s10_1524
	word32 s11_1525
	word32 t4_1526
	word32 s9_1523
	word32 s5_1519
	word32 s3_1517
	word32 a7_1515
	word32 a4_1513
	word32 a0_1509
	printf(ra_86, 0x230C4AF4<32>, a3_80, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_1508, out a0_1509, out a1_1510, out a2_1511, out a3_1512, out a4_1513, out a5_1514, out a7_1515, out s2_1516, out s3_1517, out s4_1518, out s5_1519, out s6_1520, out s7_1521, out s8_1522, out s9_1523, out s10_1524, out s11_1525, out t4_1526)
l2307D45E:
	return
scan_exit:


void reset(word32 ra, word32 s0, word32 s1, word32 a2, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
reset_exit:
reset_entry:
l2307D65E:
	word32 a2_18
	word32 a3_19
	word32 a4_20
	word32 mstatus_24
	word32 s1_27
	word32 s3_31
	word32 a2_49
	word32 a3_50
	word32 a4_51
	word32 mstatus_55
	word32 s0_57
	word32 s1_58
	word32 s3_62
	word32 a2_79
	word32 a3_80
	word32 a4_81
	word32 a5_82
	word32 mstatus_85
	word32 s0_140
	word32 a0_141
	word32 a1_142
	word32 a5_143
	word32 s2_144
	word32 s4_145
	word32 s5_146
	word32 s6_147
	word32 s7_148
	word32 s8_149
	word32 s9_150
	word32 s10_151
	word32 s11_152
	word32 a0_153
	word32 a1_154
	word32 a5_155
	word32 s2_156
	word32 s4_157
	word32 s5_158
	word32 s6_159
	word32 s7_160
	word32 s8_161
	word32 s9_162
	word32 s10_163
	word32 s11_164
	word32 s0_165
	word32 s1_166
	word32 a0_167
	word32 a1_168
	word32 s2_169
	word32 s3_170
	word32 s4_171
	word32 s5_172
	word32 s6_173
	word32 s7_174
	word32 s8_175
	word32 s9_176
	word32 s10_177
	word32 s11_178
	at_dump_noend(at_dump_noend(at_dump_noend(ra, s1, 0x230C6900<32>, a2, a3, a4, s3, mstatus, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_140, out s1_27, out a0_141, out a1_142, out a2_18, out a3_19, out a4_20, out a5_143, out s2_144, out s3_31, out s4_145, out s5_146, out s6_147, out s7_148, out s8_149, out s9_150, out s10_151, out s11_152, out mstatus_24), s1_27, 0x230B3304<32>, a2_18, a3_19, a4_20, s3_31, mstatus_24, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_57, out s1_58, out a0_153, out a1_154, out a2_49, out a3_50, out a4_51, out a5_155, out s2_156, out s3_62, out s4_157, out s5_158, out s6_159, out s7_160, out s8_161, out s9_162, out s10_163, out s11_164, out mstatus_55), s1_58, s0_57 + -1792<i32>, a2_49, a3_50, a4_51, s3_62, mstatus_55, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_165, out s1_166, out a0_167, out a1_168, out a2_79, out a3_80, out a4_81, out a5_82, out s2_169, out s3_170, out s4_171, out s5_172, out s6_173, out s7_174, out s8_175, out s9_176, out s10_177, out s11_178, out mstatus_85)
	word32 s1_179
	word32 a0_180
	word32 a1_181
	word32 a2_182
	word32 a3_183
	word32 a4_184
	word32 a5_185
	word32 s2_186
	word32 s3_187
	word32 s4_188
	vTaskDelay(2<32>, a2_79, a3_80, a4_81, a5_82, mstatus_85, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_179, out a0_180, out a1_181, out a2_182, out a3_183, out a4_184, out a5_185, out s2_186, out s3_187, out s4_188)
	hal_reboot(mstatus_85)


void ble_sync(word32 ra, word32 a4, word32 a5, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] a5:[0..31] ra:[0..31] Stack +0014:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 t1 t3
// Preserved: sp
ble_sync_entry:
l2307D698:
	branch a5 != 0<32> l2307D6B2
l2307D6B2:
	a4 = 1<32>
	branch a5 == 1<32> l2307D6C2
l2307D6BA:
	a4 = 2<32>
	branch a5 != 2<32> l2307D6AA
l2307D6C0:
l2307D6C2:
l2307D6A0:
l2307D6A4:
	word32 s0_61
	word32 a0_62
	word32 a3_63
	aos_post_event(ra, 5<32>, a4, dwArg14, out s0_61, out a0_62, out a3_63)
l2307D6AA:
	return
ble_sync_exit:


void cb_httpc_headers_done_fn(word32 ra, word32 s0, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgAC, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
cb_httpc_headers_done_fn_entry:
l2307D6C6:
	word32 a3_28
	word32 s2_35
	word32 a5_47
	word32 a2_50
	word32 a3_51
	word32 a4_52
	word32 s1_55
	word32 s3_59
	word32 s1_198
	word32 a0_199
	word32 a1_200
	word32 a2_201
	word32 a4_202
	word32 a5_203
	word32 a7_204
	word32 s3_205
	word32 s4_206
	word32 s5_207
	word32 s6_208
	word32 s7_209
	word32 s8_210
	word32 s9_211
	word32 s10_212
	word32 s11_213
	word32 t4_214
	word32 a0_215
	word32 a1_216
	word32 a7_217
	word32 s2_218
	word32 s4_219
	word32 s5_220
	word32 s6_221
	word32 s7_222
	word32 s8_223
	word32 s9_224
	word32 s10_225
	word32 s11_226
	word32 t4_227
	word32 ra_54 = printf(printf(ra, 0x230C49D8<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_198, out a0_199, out a1_200, out a2_201, out a3_28, out a4_202, out a5_203, out a7_204, out s2_35, out s3_205, out s4_206, out s5_207, out s6_208, out s7_209, out s8_210, out s9_211, out s10_212, out s11_213, out t4_214), Mem21[s2_35 + 4<i32>:int32], a3_28, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_55, out a0_215, out a1_216, out a2_50, out a3_51, out a4_52, out a5_47, out a7_217, out s2_218, out s3_59, out s4_219, out s5_220, out s6_221, out s7_222, out s8_223, out s9_224, out s10_225, out s11_226, out t4_227)
	branch s1_55 == 0<32> l2307D70E
l2307D6F0:
	word32 s1_68 = Mem21[a5_47 + 8<i32>:word32]
	branch a5_47 != 0<32> l2307D70E
l2307D6F4:
	word32 a2_74
	word32 a3_75
	word32 a4_76
	word32 mstatus_80
	word32 s1_83
	word32 s3_87
	word32 s0_228
	word32 a0_229
	word32 a1_230
	word32 a5_231
	word32 s2_232
	word32 s4_233
	word32 s5_234
	word32 s6_235
	word32 s7_236
	word32 s8_237
	word32 s9_238
	word32 s10_239
	word32 s11_240
	word32 s0_241
	word32 s1_242
	word32 a0_243
	word32 a1_244
	word32 a2_245
	word32 a3_246
	word32 a4_247
	word32 a5_248
	word32 s2_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 s6_253
	word32 s7_254
	word32 s8_255
	word32 s9_256
	word32 s10_257
	word32 s11_258
	word32 mstatus_259
	at_dump_noend(at_dump_noend(ra_54, s1_68, 0x230C6900<32>, a2_50, a3_51, a4_52, s3_59, mstatus, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_228, out s1_83, out a0_229, out a1_230, out a2_74, out a3_75, out a4_76, out a5_231, out s2_232, out s3_87, out s4_233, out s5_234, out s6_235, out s7_236, out s8_237, out s9_238, out s10_239, out s11_240, out mstatus_80), s1_83, 0x230C4A04<32>, a2_74, a3_75, a4_76, s3_87, mstatus_80, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_241, out s1_242, out a0_243, out a1_244, out a2_245, out a3_246, out a4_247, out a5_248, out s2_249, out s3_250, out s4_251, out s5_252, out s6_253, out s7_254, out s8_255, out s9_256, out s10_257, out s11_258, out mstatus_259)
l2307D70E:
	0<32> = dwArg38
	return
cb_httpc_headers_done_fn_exit:


word32 __wifimode_set(word32 ra, word32 s0, word32 a0, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_apcfg
//      cwjap_cur
//      cwmode_cur
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
__wifimode_set_entry:
l2307D71C:
	word32 ra_163
	word32 a3_17
	word32 t1_507
	word32 a0_508
	word32 a1_509
	word32 a2_510
	word32 a4_511
	word32 a5_512
	word32 ra_20 = memset(ra, 0x4201BE7C<32>, 0<32>, 65<i32>, out t1_507, out a0_508, out a1_509, out a2_510, out a3_17, out a4_511, out a5_512)
	branch a0 != 0<32> l2307D75A
l2307D75A:
	word32 a0_154
	branch a0 != 1<32> l2307D77A
l2307D77A:
	branch a0 != 2<32> l2307D79E
l2307D79E:
	word32 s1_528
	word32 a0_529
	word32 a1_530
	word32 a2_531
	word32 a3_532
	word32 a4_533
	word32 a5_534
	word32 a7_535
	word32 s2_536
	word32 s3_537
	word32 s4_538
	word32 s5_539
	word32 s6_540
	word32 s7_541
	word32 s8_542
	word32 s9_543
	word32 s10_544
	word32 s11_545
	word32 t4_546
	ra_163 = printf(ra_20, 0x230C4868<32>, a3_17, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_528, out a0_529, out a1_530, out a2_531, out a3_532, out a4_533, out a5_534, out a7_535, out s2_536, out s3_537, out s4_538, out s5_539, out s6_540, out s7_541, out s8_542, out s9_543, out s10_544, out s11_545, out t4_546)
l2307D780:
	word32 a2_54
	word32 a3_55
	word32 a4_56
	word32 a5_57
	word32 mstatus_60
	word32 ra_61 = wifi_mgmr_sta_disconnect(ra_20, s4, mstatus, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out a2_54, out a3_55, out a4_56, out a5_57, out mstatus_60)
	word32 s4_92
	word32 s1_547
	word32 a0_548
	word32 a1_549
	word32 a2_550
	word32 a3_551
	word32 a4_552
	word32 a5_553
	word32 s2_554
	word32 s3_555
	vTaskDelay(1000<i32>, a2_54, a3_55, a4_56, a5_57, mstatus_60, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_547, out a0_548, out a1_549, out a2_550, out a3_551, out a4_552, out a5_553, out s2_554, out s3_555, out s4_92)
	word32 mstatus_105
	word32 s4_112
	word32 mstatus_134
	word32 s1_136
	word32 s2_139
	word32 a3_556
	word32 s0_557
	word32 s2_558
	ra_163 = wifi_mgmr_ap_enable(wifi_mgmr_ap_stop(wifi_mgmr_sta_disable(ra_61, s4_92, mstatus_60, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s4_112, out mstatus_105), s4_112, mstatus_105, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s1_136, out a3_556, out s2_139, out mstatus_134), s1_136, s2_139, mstatus_134, s0, dwArg28, dwArg38, dwArg64, dwArg68, dwArg78, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0158, out s0_557, out a0_154, out s2_558, out mstatus)
l2307D760:
	word32 mstatus_190
	word32 s4_197
	word32 a3_214
	word32 mstatus_219
	word32 s1_221
	word32 s2_224
	word32 a1_525
	word32 s2_526
	word32 s3_527
	ra_163 = wifi_mgmr_sta_enable(wifi_mgmr_ap_stop(wifi_mgmr_sta_disable(ra_20, s4, mstatus, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s4_197, out mstatus_190), s4_197, mstatus_190, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s1_221, out a3_214, out s2_224, out mstatus_219), s1_221, a3_214, s2_224, mstatus_219, s0, dwLoc08, dwArg28, dwArg38, dwArg40, dwArg44, dwArg64, dwArg68, dwArg78, dwArg80, dwArg84, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0158, out a0_154, out a1_525, out s2_526, out s3_527, out mstatus)
l2307D770:
	Mem270[0x4200F6D4<32>:word32] = a0_154
l2307D738:
	word32 a2_273
	word32 a3_274
	word32 a4_275
	word32 a5_276
	word32 mstatus_279
	word32 ra_280 = wifi_mgmr_sta_disconnect(ra_20, s4, mstatus, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out a2_273, out a3_274, out a4_275, out a5_276, out mstatus_279)
	word32 s4_311
	word32 s1_513
	word32 a0_514
	word32 a1_515
	word32 a2_516
	word32 a3_517
	word32 a4_518
	word32 a5_519
	word32 s2_520
	word32 s3_521
	vTaskDelay(1000<i32>, a2_273, a3_274, a4_275, a5_276, mstatus_279, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_513, out a0_514, out a1_515, out a2_516, out a3_517, out a4_518, out a5_519, out s2_520, out s3_521, out s4_311)
	word32 mstatus_324
	word32 s4_331
	word32 s1_522
	word32 a3_523
	word32 s2_524
	ra_163 = wifi_mgmr_ap_stop(wifi_mgmr_sta_disable(ra_280, s4_311, mstatus_279, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s4_331, out mstatus_324), s4_331, mstatus_324, dwLoc08, dwArg20, dwArg24, dwArg48, dwArg54, dwArg6C, dwArg70, ra, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s1_522, out a3_523, out s2_524, out mstatus)
l2307D750:
l2307D752:
	mstatusOut = mstatus
	return ra_163
__wifimode_set_exit:


void set_apcfg(word32 ra, word32 s1, word32 a0, word32 s2, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
set_apcfg_entry:
l2307D7AE:
	word32 a0_19
	word32 s4_33
	word32 a3_258
	word32 s1_256
	word32 a2_257
	word32 a4_259
	word32 a5_260
	word32 s2_261
	word32 s3_262
	word32 ra_27 = at_key_value_get(ra, a0, 0x230A99DC<32>, fp + 0xFFFFFFEC<32>, s3, mstatus, s2, dwArg18, dwArg30, dwArg34, dwArg48, dwArg58, dwArg7C, dwArg88, dwArgC8, out s1_256, out a0_19, out a2_257, out a3_258, out a4_259, out a5_260, out s2_261, out s3_262, out s4_33)
	branch a0_19 >u 0xFFFFFFFD<32> l2307D82E
l2307D82E:
l2307D7D4:
	word32 mstatus_75
	word32 ra_58 = __wifimode_set(ra_27, a0, a0_19, s4_33, mstatus, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg58, dwArg60, dwArg64, s1, ra, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0138, dwArg0148, out mstatus_75)
	word32 a3_82
	word32 a1_263
	word32 a2_264
	word32 a4_265
	word32 a5_266
	strlen(a0 + 72<i32>, out a1_263, out a2_264, out a3_82, out a4_265, out a5_266)
	word32 s1_102
	word32 s2_105
	word32 a0_267
	word32 a1_268
	word32 a2_269
	word32 a3_270
	word32 a4_271
	word32 a5_272
	word32 a7_273
	word32 s3_274
	word32 s4_275
	word32 s5_276
	word32 s6_277
	word32 s7_278
	word32 s8_279
	word32 s9_280
	word32 s10_281
	word32 s11_282
	word32 t4_283
	word32 ra_101 = printf(ra_58, 0x230C4B68<32>, a3_82, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_102, out a0_267, out a1_268, out a2_269, out a3_270, out a4_271, out a5_272, out a7_273, out s2_105, out s3_274, out s4_275, out s5_276, out s6_277, out s7_278, out s8_279, out s9_280, out s10_281, out s11_282, out t4_283)
	word32 a3_118 = s1_102
	branch s2_105 > 0<32> l2307D808
l2307D806:
	a3_118 = 0<32>
l2307D808:
	word32 a4_284
	word32 a5_285
	strcpy(0x4201BE7C<32>, wifi_mgmr_ap_start(ra_101, a0 + 8<32>, a3_118, 1<32>, mstatus_75, dwLoc20, dwLoc1C, dwArg08, dwArg38, dwArg58, dwArg78, dwArg98), out a4_284, out a5_285)
l2307D822:
	return
set_apcfg_exit:


void cwjap_cur(word32 ra, word32 s0, word32 a0, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cwjap_cur_entry:
l2307D832:
	word32 a0_21
	word32 s4_35
	word32 s1_496
	word32 a2_497
	word32 a3_498
	word32 a4_499
	word32 a5_500
	word32 s2_501
	word32 s3_502
	word32 ra_29 = at_key_value_get(ra, a0, 0x230A99DC<32>, fp + -40<i32>, s3, mstatus, dwLoc28, dwArg08, dwArg20, dwArg24, dwArg38, dwArg48, dwArg6C, dwArg78, dwArgB8, out s1_496, out a0_21, out a2_497, out a3_498, out a4_499, out a5_500, out s2_501, out s3_502, out s4_35)
	branch (a0_21 & -3<i32>) != 1<32> l2307D922
l2307D922:
l2307D85C:
	word32 mstatus_77
	word32 t1_503
	word32 a0_504
	word32 a1_505
	word32 a2_506
	word32 a3_507
	word32 a4_508
	word32 a5_509
	word32 t1_510
	word32 a0_511
	word32 a1_512
	word32 a2_513
	word32 a3_514
	word32 a4_515
	word32 a5_516
	word32 ra_104 = memset(memset(__wifimode_set(ra_29, dwArg14, a0_21, s4_35, mstatus, s0, dwLoc18, dwLoc10, dwLoc0C, dwLoc08, dwArg08, dwArg10, dwArg14, dwArg18, dwArg24, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg48, dwArg50, 0<32>, dwArg58, s3, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0128, dwArg0138, out mstatus_77), 0x4201BE5C<32>, 0<32>, 32<i32>, out t1_503, out a0_504, out a1_505, out a2_506, out a3_507, out a4_508, out a5_509), 0x4201BE18<32>, 0<32>, 65<i32>, out t1_510, out a0_511, out a1_512, out a2_513, out a3_514, out a4_515, out a5_516)
	word32 a1_517
	word32 a2_518
	word32 a3_519
	word32 a4_520
	word32 a5_521
	word32 a1_522
	word32 a2_523
	word32 a3_524
	word32 a4_525
	word32 a5_526
	word32 a6_527
	word32 a7_528
	memcpy(0x4201BE5C<32>, dwArg14 + 8<i32>, strlen(dwArg14 + 8<i32>, out a1_517, out a2_518, out a3_519, out a4_520, out a5_521), out a1_522, out a2_523, out a3_524, out a4_525, out a5_526, out a6_527, out a7_528)
	word32 a3_147
	word32 a1_529
	word32 a2_530
	word32 a3_531
	word32 a4_532
	word32 a5_533
	word32 a1_534
	word32 a2_535
	word32 a4_536
	word32 a5_537
	word32 a6_538
	word32 a7_539
	memcpy(0x4201BE18<32>, dwArg14 + 41<i32>, strlen(dwArg14 + 41<i32>, out a1_529, out a2_530, out a3_531, out a4_532, out a5_533), out a1_534, out a2_535, out a3_147, out a4_536, out a5_537, out a6_538, out a7_539)
	branch dwArg14 != 8<32> l2307D8CE
l2307D8CE:
	word32 mstatus_234
	word32 ra_235
	word32 s1_236
	word32 mstatus_172
	word32 s0_174
	word32 s3_179
	word32 a5_202
	word32 s4_211
	word32 s1_540
	word32 a0_541
	word32 a2_542
	word32 a3_543
	word32 a4_544
	word32 s2_545
	word32 s3_546
	word32 ra_205 = at_key_value_get(wifi_mgmr_sta_connect(ra_104, dwArg14 + 8<i32>, dwArg14 + 41<i32>, 0<32>, 0x4201C000<32>, mstatus_77, dwLoc18, dwArg08, dwArg28, dwArg48, 0<32>, dwArg94, out s0_174, out s3_179, out mstatus_172), s0_174, 0x230A99E8<32>, fp + -36<i32>, s3_179, mstatus_172, dwLoc28, dwArg08, dwArg20, dwArg24, dwArg38, dwArg48, dwArg6C, dwArg78, dwArgB8, out s1_540, out a0_541, out a2_542, out a3_543, out a4_544, out a5_202, out s2_545, out s3_546, out s4_211)
	branch a5_202 == 0<32> l2307D91C
l2307D91C:
	word32 s2_566
	word32 s3_567
	word32 s4_568
	word32 s5_569
	word32 s6_570
	ra_235 = wifi_mgmr_sta_autoconnect_disable(ra_205, s4_211, mstatus_172, dwLoc28, dwArg00, dwArg04, dwArg28, dwArg34, dwArg4C, dwArg50, 0<32>, dwArg78, dwArgA8, dwArgC8, dwArgE8, dwArg0108, out s1_236, out s2_566, out s3_567, out s4_568, out s5_569, out s6_570, out mstatus_234)
l2307D8F8:
	word32 s2_571
	word32 s3_572
	word32 s4_573
	word32 s5_574
	word32 s6_575
	ra_235 = wifi_mgmr_sta_autoconnect_enable(ra_205, s4_211, mstatus_172, dwLoc28, dwArg00, dwArg04, dwArg28, dwArg34, dwArg4C, dwArg50, 0<32>, dwArg78, dwArgA8, dwArgC8, dwArgE8, dwArg0108, out s1_236, out s2_571, out s3_572, out s4_573, out s5_574, out s6_575, out mstatus_234)
l2307D8FC:
	word32 s0_299
	word32 s1_300
	word32 mstatus_319
	word32 a0_576
	word32 s4_577
	word32 s0_578
	word32 s1_579
	word32 a0_580
	word32 s4_581
	word32 mstatus_582
	at_key_value_set(at_key_value_set(ra_235, s1_236, 0x230A99F4<32>, s1_236, mstatus_234, dwLoc2C, dwLoc28, s0, dwLoc18, dwLoc14, dwLoc10, dwLoc0C, dwLoc04, dwArg28, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgD8, out s0_299, out s1_300, out a0_576, out s4_577, out mstatus_319), s1_300, 0x230A9A00<32>, s0_299, mstatus_319, dwLoc2C, dwLoc28, s0, dwLoc18, dwLoc14, dwLoc10, dwLoc0C, dwLoc04, dwArg28, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgD8, out s0_578, out s1_579, out a0_580, out s4_581, out mstatus_582)
l2307D8B2:
	word32 s1_547
	word32 a0_548
	word32 a1_549
	word32 a2_550
	word32 a3_551
	word32 a4_552
	word32 a5_553
	word32 a7_554
	word32 s2_555
	word32 s3_556
	word32 s4_557
	word32 s5_558
	word32 s6_559
	word32 s7_560
	word32 s8_561
	word32 s9_562
	word32 s10_563
	word32 s11_564
	word32 t4_565
	printf(ra_104, 0x230C4A70<32>, a3_147, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_547, out a0_548, out a1_549, out a2_550, out a3_551, out a4_552, out a5_553, out a7_554, out s2_555, out s3_556, out s4_557, out s5_558, out s6_559, out s7_560, out s8_561, out s9_562, out s10_563, out s11_564, out t4_565)
l2307D8C0:
	0<32> = dwArg0128
	return
cwjap_cur_exit:


void cwmode_cur(word32 ra, word32 s1, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cwmode_cur_entry:
l2307D926:
	word32 a0_11 = Mem9[a4 + 8<i32>:word32]
	branch a4 <=u 2<32> l2307D94E
l2307D94E:
	word32 a4_23
	word32 a5_24
	word32 s1_28
	word32 a0_222
	word32 a2_223
	word32 a3_224
	word32 s2_225
	word32 s3_226
	word32 s4_227
	word32 ra_27 = at_key_value_get(ra, a0_11, 0x230A99DC<32>, fp + 0xFFFFFFEC<32>, s3, mstatus, dwLoc18, dwArg18, dwArg30, dwArg34, dwArg48, dwArg58, dwArg7C, dwArg88, dwArgC8, out s1_28, out a0_222, out a2_223, out a3_224, out a4_23, out a5_24, out s2_225, out s3_226, out s4_227)
	word32 s0_47 = Mem9[a4_23 + 8<i32>:word32]
	branch a4_23 == a5_24 l2307D944
l2307D968:
	word32 a0_52
	word32 s4_67
	word32 mstatus_81
	word32 s0_247
	word32 s1_248
	word32 mstatus_249
	__wifimode_set(at_key_value_set(ra_27, s1_28, s1_28 + -1572<i32>, s0_47 + 8<i32>, mstatus, dwLoc1C, dwLoc18, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg0C, dwArg38, dwArg48, dwArg4C, dwArg58, s1, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgE8, out s0_247, out s1_248, out a0_52, out s4_67, out mstatus_81), Mem9[a0_52 + 8<i32>:word32], a0_52, s4_67, mstatus_81, dwLoc0C, dwLoc08, dwArg00, dwArg04, dwArg08, dwArg18, dwArg20, dwArg24, dwArg28, dwArg34, dwArg40, dwArg44, dwArg48, dwArg4C, dwArg50, dwArg58, dwArg60, dwArg64, s1, ra, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0138, dwArg0148, out mstatus_249)
l2307D936:
	word32 s1_228
	word32 a0_229
	word32 a1_230
	word32 a2_231
	word32 a3_232
	word32 a4_233
	word32 a5_234
	word32 a7_235
	word32 s2_236
	word32 s3_237
	word32 s4_238
	word32 s5_239
	word32 s6_240
	word32 s7_241
	word32 s8_242
	word32 s9_243
	word32 s10_244
	word32 s11_245
	word32 t4_246
	printf(ra, 0x230C4868<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_228, out a0_229, out a1_230, out a2_231, out a3_232, out a4_233, out a5_234, out a7_235, out s2_236, out s3_237, out s4_238, out s5_239, out s6_240, out s7_241, out s8_242, out s9_243, out s10_244, out s11_245, out t4_246)
l2307D944:
	return
cwmode_cur_exit:


void uart_set(word32 ra, word32 s0, word32 a1, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
uart_set_entry:
l2307D97C:
	word32 a0_9 = Mem7[a1 + 12<i32>:word32]
	word32 s1_288
	word32 a0_289
	word32 a1_290
	word32 a2_291
	word32 a3_292
	word32 a4_293
	word32 a5_294
	word32 a7_295
	word32 s2_296
	word32 s3_297
	word32 s4_298
	word32 s5_299
	word32 s6_300
	word32 s7_301
	word32 s8_302
	word32 s9_303
	word32 s10_304
	word32 s11_305
	word32 t4_306
	word32 ra_22 = printf(ra, 0x230C4BA0<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_288, out a0_289, out a1_290, out a2_291, out a3_292, out a4_293, out a5_294, out a7_295, out s2_296, out s3_297, out s4_298, out s5_299, out s6_300, out s7_301, out s8_302, out s9_303, out s10_304, out s11_305, out t4_306)
	word32 a0_41
	word32 s1_50
	word32 a3_307
	word32 a4_308
	word32 a5_309
	word32 s0_49 = at_serial_cfg_set(CONVERT(Mem7[a0_9 + 16<i32>:byte], byte, word32), dwArg84, dwArg0118, out s1_50, out a0_41, out a3_307, out a4_308, out a5_309)
	branch a0_41 != 0<32> l2307DA04
l2307DA04:
l2307D9AA:
	word32 s0_73
	word32 s1_74
	word32 mstatus_93
	word32 s0_106
	word32 s1_107
	word32 mstatus_126
	word32 s0_139
	word32 s1_140
	word32 mstatus_159
	word32 s0_172
	word32 s1_173
	word32 mstatus_192
	word32 a0_310
	word32 s4_311
	word32 a0_312
	word32 s4_313
	word32 a0_314
	word32 s4_315
	word32 a0_316
	word32 s4_317
	word32 s0_318
	word32 s1_319
	word32 a0_320
	word32 s4_321
	word32 mstatus_322
	at_key_value_set(at_key_value_set(at_key_value_set(at_key_value_set(at_key_value_set(ra_22, s1_50, 0x230C4700<32>, s0_49 + 12<i32>, mstatus, s0, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg1C, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgF8, out s0_73, out s1_74, out a0_310, out s4_311, out mstatus_93), s1_74, 0x230C46E0<32>, s0_73 + 16<i32>, mstatus_93, s0, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg1C, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgF8, out s0_106, out s1_107, out a0_312, out s4_313, out mstatus_126), s1_107, 0x230C46E8<32>, s0_106 + 24<i32>, mstatus_126, s0, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg1C, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgF8, out s0_139, out s1_140, out a0_314, out s4_315, out mstatus_159), s1_140, 0x230C46F0<32>, s0_139 + 20<i32>, mstatus_159, s0, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg1C, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgF8, out s0_172, out s1_173, out a0_316, out s4_317, out mstatus_192), s1_173, 0x230C46F8<32>, s0_172 + 28<i32>, mstatus_192, s0, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg1C, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgF8, out s0_318, out s1_319, out a0_320, out s4_321, out mstatus_322)
l2307D9FC:
	return
uart_set_exit:


void at_get_errorcode()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      join_ap_handler
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
at_get_errorcode_entry:
l2307DA08:
	return
at_get_errorcode_exit:


word32 at_cmd_impl_init(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, word32 dwArg0188, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_cmd_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a3 s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
at_cmd_impl_init_entry:
l2307DA0C:
	word32 s1_104
	word32 a3_18
	word32 a4_19
	word32 a5_20
	word32 a0_29
	word32 s2_167
	word32 s3_168
	word32 a1_166
	xQueueCreateMutex(ra, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_29, out a1_166, out a3_18, out a4_19, out a5_20, out s2_167, out s3_168)
	Mem38[0x420280E8<32>:word32] = a0_29
	word32 s3_48
	word32 a0_53
	word32 a5_171
	word32 s2_172
	word32 a1_169
	word32 a4_170
	word32 a3_131
	xQueueCreateMutex(ra, a3_18, a4_19, a5_20, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_53, out a1_169, out a3_131, out a4_170, out a5_171, out s2_172, out s3_48)
	word32 a4_62 = Mem38[0x420280E8<32>:int32]
	Mem64[0x420280EC<32>:word32] = a0_53
	word32 s0_65 = 0x42028000<32>
	branch a4_62 == 0<32> l2307DA42
l2307DA38:
	s1_104 = 0<32>
	branch a0_53 != 0<32> l2307DA4E
l2307DA3C:
	word32 a5_177
	word32 s4_178
	word32 a1_175
	word32 a2_176
	word32 s1_173
	word32 a0_174
	s0_65 = vQueueDelete(a4_62, a3_131, a4_62, mstatus, dwArg0148, dwArg0188, out s1_173, out a0_174, out a1_175, out a2_176, out a3_131, out a4_62, out a5_177, out s4_178)
l2307DA42:
	word32 a0_82 = Mem64[s0_65 + 236<i32>:int32]
	s1_104 = 0xFFFFFFFF<32>
	branch a0_82 == 0<32> l2307DA4E
l2307DA4A:
	word32 a5_183
	word32 s4_184
	word32 a2_181
	word32 a4_182
	word32 a0_179
	word32 a1_180
	vQueueDelete(a0_82, a3_131, a4_62, mstatus, dwArg0148, dwArg0188, out s1_104, out a0_179, out a1_180, out a2_181, out a3_131, out a4_182, out a5_183, out s4_184)
l2307DA4E:
	a0Out = s1_104
	a3Out = a3_131
	s3Out = s3_48
	return s1_104
at_cmd_impl_init_exit:


void callback(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
callback_entry:
l2307DA5A:
	word32 a5_14 = 0<32>
l2307DA6C:
	branch a0 != a1 l2307DA84
l2307DA84:
	a5_14 = a5_14 + 1<32>
	branch a5_14 != 0x1B<32> l2307DA6C
l2307DA8C:
	return
l2307DA72:
	word32 t1_22 = Mem0[(a5_14 << 3<i32>) + 0x230C48E4<32>:int32]
	branch t1_22 == 0<32> l2307DA90
l2307DA90:
	return
l2307DA7E:
	word32 t1_38
	call t1_22 (retsize: 0;)
		uses: a0:a1,a1:a2,a2:a2,t1:t1_38
		defs: t1:t1_38
	return
callback_exit:


void wifi_supports(word32 ra, word32 a0, word32 a5, word32 dwArg94, word32 dwArg98, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
wifi_supports_entry:
l2307DA94:
	word32 a0_11
	word32 s5_75
	word32 s4_74
	word32 s3_73
	word32 s2_72
	word32 a5_71
	word32 a4_70
	word32 a3_69
	word32 a2_68
	word32 s1_67
	word32 s0_66
	at_get_parameters(ra, a0, 0<32>, 0<32>, 0<32>, a5, dwArg94, dwArg98, dwArgC4, dwArgE0, dwArgE4, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s0_66, out s1_67, out a0_11, out a2_68, out a3_69, out a4_70, out a5_71, out s2_72, out s3_73, out s4_74, out s5_75)
	branch a0_11 == 0<32> l2307DAA6
l2307DAA4:
l2307DAA6:
	return
wifi_supports_exit:


void attention_handler(word32 ra, word32 a0, word32 a5, word32 dwArgA4, word32 dwArgA8, word32 dwArgD4, word32 dwArgF0, word32 dwArgF4, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00D4:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
attention_handler_entry:
l2307DAAC:
l2307DAB2_thunk_at_get_parameters:
	word32 s0_39
	word32 s1_40
	word32 a0_41
	word32 a2_42
	word32 a3_43
	word32 a4_44
	word32 a5_45
	word32 s2_46
	word32 s3_47
	word32 s4_48
	word32 s5_49
	at_get_parameters(ra, a0, 0<32>, 0<32>, 0<32>, a5, dwArgA4, dwArgA8, dwArgD4, dwArgF0, dwArgF4, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0198, out s0_39, out s1_40, out a0_41, out a2_42, out a3_43, out a4_44, out a5_45, out s2_46, out s3_47, out s4_48, out s5_49)
	return
attention_handler_exit:


void wifi_mode_handler(word32 ra, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg8C, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
wifi_mode_handler_entry:
l2307DAB6:
	word32 a0_13 = Mem12[0xFFFC04<32>:word32]
	word32 a3_16 = CONVERT(Mem14[0xFFFC04<32>:byte], byte, word32)
	branch a3_16 != 63<i32> l2307DAEA
l2307DAEA:
	branch a3_16 == 61<i32> l2307DAF6
l2307DAF6:
	Mem19[0xFFFC05<32>:word32] = a0_13
	word32 a0_23
	word32 a5_27
	word32 a3_40
	word32 s5_238
	word32 s4_237
	word32 s3_236
	word32 s2_235
	word32 a4_234
	word32 a2_233
	word32 s1_232
	word32 s0_231
	word32 ra_41 = at_get_parameters(ra, a0_13, fp + -28<i32>, 1<32>, fp + -32<i32>, 0xFFFC05<32>, dwArg74, dwArg78, dwArgA4, dwArgC0, dwArgC4, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_231, out s1_232, out a0_23, out a2_233, out a3_40, out a4_234, out a5_27, out s2_235, out s3_236, out s4_237, out s5_238)
	branch a0_23 != 0<32> l2307DAF2
l2307DB06:
	branch a5_27 <= 0<32> l2307DAF2
l2307DB0C:
	word32 a0_46
	word32 a3_51
	word32 a1_240
	word32 s1_239
	word32 a2_241
	word32 a4_242
	word32 a5_243
	word32 a7_244
	word32 s2_245
	word32 s3_246
	word32 s4_247
	word32 s5_248
	word32 s6_249
	word32 s7_250
	word32 s8_251
	word32 s9_252
	word32 s10_253
	word32 s11_254
	word32 t4_255
	at_wifi_mode(printf(ra_41, 0x230C55B8<32>, a3_40, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_239, out a0_46, out a1_240, out a2_241, out a3_51, out a4_242, out a5_243, out a7_244, out s2_245, out s3_246, out s4_247, out s5_248, out s6_249, out s7_250, out s8_251, out s9_252, out s10_253, out s11_254, out t4_255), a0_46, a3_51)
l2307DAF2:
l2307DADC:
	Mem92[0xFFFC05<32>:word32] = a0_13
	at_wifi_mode_get(ra, a3_16, mstatus)
l2307DAE4:
	return
wifi_mode_handler_exit:


void http_req(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg2C, word32 dwArg64, word32 dwArg74, word32 dwArg90, word32 dwArg94, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +002C:[0..31] Stack +0064:[0..31] Stack +0074:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
http_req_entry:
l2307DB22:
	word32 a0_25
	word32 s3_35
	word32 s2_267
	word32 a5_266
	word32 a4_265
	word32 a3_264
	word32 a2_263
	word32 s1_262
	malloc(ra, s1, 514<i32>, a3, a4, a5, mstatus, dwLoc20, dwLoc1C, dwArg2C, dwArgD8, dwArg0118, out s1_262, out a0_25, out a2_263, out a3_264, out a4_265, out a5_266, out s2_267, out s3_35)
	branch a0_25 == 0<32> l2307DBE2
l2307DB40:
	word32 a5_48 = Mem47[s3_35:int32]
	branch CONVERT(Mem61[a5_48:byte], byte, word32) != 61<i32> l2307DBE2
l2307DB8E:
	Mem67[s3_35:word32] = a5_48 + 1<32>
	word32 a0_72
	word32 a4_75
	word32 s0_78
	word32 s4_79
	word32 s5_83
	word32 s2_85
	word32 s3_270
	word32 a3_269
	word32 s1_268
	word32 a5_76
	word32 a2_74
	word32 ra_90 = at_get_parameters(ra, s3_35, fp + -80<i32>, 4<32>, fp + -84<i32>, a5_48 + 1<32>, s3, s1, dwArg74, dwArg90, dwArg94, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, out s0_78, out s1_268, out a0_72, out a2_74, out a3_269, out a4_75, out a5_76, out s2_85, out s3_270, out s4_79, out s5_83)
	branch a0_72 != 0<32> l2307DBF6
l2307DBA2:
	a2_74 = dwArg64
	a5_76 = 2<32>
	branch a4_75 <= 2<32> l2307DBF6
l2307DBAA:
	branch s5_83 <u CONVERT(Mem67[s0_78 + 256<i32>:byte], byte, word32) l2307DBF6
l2307DBB2:
	a2_74 = CONVERT(Mem67[s0_78 + 257<i32>:byte], byte, word32)
	branch s2_85 <u a2_74 l2307DBF6
l2307DBF6:
	word32 a0_271
	word32 a2_272
	word32 a5_273
	free(s0_78, a2_74, a5_76, mstatus, dwArgF8, dwArg0138, out a0_271, out a2_272, out a5_273)
l2307DBBA:
	Mem120[0x4201C2E4<32>:byte] = 0<8>
	Mem121[0x4201C2EC<32>:word32] = 0<32>
	Mem122[0x4201C2F0<32>:word32] = 0<32>
	word32 a2_125
	word32 a5_128
	word32 s5_274
	word32 s6_275
	word32 s7_276
	word32 s9_277
	word32 s11_278
	at_http_request(ra_90, s4_79, out a2_125, out a5_128, out s5_274, out s6_275, out s7_276, out s9_277, out s11_278)
	word32 a0_279
	word32 a2_280
	word32 a5_281
	free(s0_78, a2_125, a5_128, mstatus, dwArgF8, dwArg0138, out a0_279, out a2_280, out a5_281)
l2307DBE2:
	return
http_req_exit:


void domain_name_resolution(word32 ra, word32 s0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg58)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0058:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 sp
domain_name_resolution_entry:
l2307DC00:
	word32 a1_566
	word32 a2_567
	word32 a3_568
	word32 a4_569
	word32 a5_570
	word32 a7_571
	word32 s3_573
	word32 s2_572
	word32 s4_574
	word32 s5_575
	word32 a0_565
	word32 s1_564
	word32 s6_576
	word32 s7_577
	word32 s8_578
	word32 s9_579
	word32 s10_580
	word32 s11_581
	word32 t4_582
	word32 t1_583
	word32 a0_584
	word32 a1_585
	word32 a2_586
	word32 a3_587
	word32 a4_588
	word32 a5_589
	word32 ra_57 = memset(printf(ra, 0x230C4ED4<32>, a3, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_564, out a0_565, out a1_566, out a2_567, out a3_568, out a4_569, out a5_570, out a7_571, out s2_572, out s3_573, out s4_574, out s5_575, out s6_576, out s7_577, out s8_578, out s9_579, out s10_580, out s11_581, out t4_582), fp + -288<i32>, 0<32>, 256<i32>, out t1_583, out a0_584, out a1_585, out a2_586, out a3_587, out a4_588, out a5_589)
	word32 s1_63 = Mem62[0xFFFD00<32>:word32]
	word32 dwLoc012C_453 = SEQ(nLoc012B, 0<8>)
	branch CONVERT(Mem65[0xFFFD00<32>:byte], byte, word32) == 61<i32> l2307DC82
l2307DC82:
	Mem69[0xFFFD01<32>:word32] = s1_63
	word32 a0_74
	word32 a5_78
	word32 s0_80
	word32 a3_91
	word32 s1_590
	word32 a2_591
	word32 a4_592
	word32 s2_593
	word32 s3_594
	word32 s4_595
	word32 s5_596
	word32 ra_92 = at_get_parameters(ra_57, s1_63, fp + -300<i32>, 1<32>, fp + -304<i32>, 0xFFFD01<32>, dwLoc9C, dwLoc98, dwLoc6C, dwLoc50, dwLoc4C, dwLoc28, s0, dwArg18, dwArg38, dwArg58, out s0_80, out s1_590, out a0_74, out a2_591, out a3_91, out a4_592, out a5_78, out s2_593, out s3_594, out s4_595, out s5_596)
	branch a0_74 != 0<32> l2307DC5E
l2307DC96:
	branch a5_78 <= 0<32> l2307DC5E
l2307DC9C:
	word32 a3_103
	word32 s1_597
	word32 a0_598
	word32 a1_599
	word32 a2_600
	word32 a4_601
	word32 a5_602
	word32 a7_603
	word32 s2_604
	word32 s3_605
	word32 s4_606
	word32 s5_607
	word32 s6_608
	word32 s7_609
	word32 s8_610
	word32 s9_611
	word32 s10_612
	word32 s11_613
	word32 t4_614
	word32 ra_106 = printf(ra_92, 0x230C4EEC<32>, a3_91, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_597, out a0_598, out a1_599, out a2_600, out a3_103, out a4_601, out a5_602, out a7_603, out s2_604, out s3_605, out s4_606, out s5_607, out s6_608, out s7_609, out s8_610, out s9_611, out s10_612, out s11_613, out t4_614)
	word32 a0_122
	word32 a2_124
	word32 a3_125
	word32 a4_126
	word32 s1_131 = lwip_gethostbyname(ra_106, s0_80, s0_80, a3_103, mstatus, dwLocC8, dwLoc88, dwLoc48, dwLoc38, s0, dwArg08, out a0_122, out a2_124, out a3_125, out a4_126)
	branch a0_122 == 0<32> l2307DD2A
l2307DD2A:
l2307DCB4:
	word32 a1_148 = 0<32>
l2307DCB8:
	branch Mem69[(a1_148 << 2<u32>) + a4_126:word32] != 0<32> l2307DD26
l2307DD26:
	a1_148 = a1_148 + 1<32>
l2307DCC2:
	word32 a3_169
	word32 a4_170
	word32 mstatus_174
	word32 s1_177
	word32 s3_181
	word32 a2_200
	word32 a3_201
	word32 a4_202
	word32 mstatus_206
	word32 s0_208
	word32 s1_209
	word32 s3_213
	word32 s0_615
	word32 a0_616
	word32 a1_617
	word32 a2_618
	word32 a5_619
	word32 s2_620
	word32 s4_621
	word32 s5_622
	word32 s6_623
	word32 s7_624
	word32 s8_625
	word32 s9_626
	word32 s10_627
	word32 s11_628
	word32 a0_629
	word32 a1_630
	word32 a5_631
	word32 s2_632
	word32 s4_633
	word32 s5_634
	word32 s6_635
	word32 s7_636
	word32 s8_637
	word32 s9_638
	word32 s10_639
	word32 s11_640
	word32 a0_641
	word32 a1_642
	word32 a5_643
	word32 s2_644
	word32 s4_645
	word32 s5_646
	word32 s6_647
	word32 s7_648
	word32 s8_649
	word32 s9_650
	word32 s10_651
	word32 s11_652
	word32 s3_243
	word32 s0_238
	word32 s1_239
	word32 a2_230
	word32 a3_231
	word32 a4_232
	word32 mstatus_236
	word32 ra_237 = at_dump_noend(at_dump_noend(at_dump_noend(ra_106, s1_131, 0x230C6900<32>, a2_124, a3_125, a4_126, a0_122, mstatus, dwLoc013C, dwLoc0130, dwLoc012C_453, dwLoc0128, dwLocE4, dwLocE0, dwLocDC, dwLocB8, dwLoc98, dwLoc94, dwLoc68, dwLoc58, dwLoc28, out s0_615, out s1_177, out a0_616, out a1_617, out a2_618, out a3_169, out a4_170, out a5_619, out s2_620, out s3_181, out s4_621, out s5_622, out s6_623, out s7_624, out s8_625, out s9_626, out s10_627, out s11_628, out mstatus_174), s1_177, 0x230C4F14<32>, dwLocDC, a3_169, a4_170, s3_181, mstatus_174, dwLoc013C, dwLoc0130, dwLoc012C_453, dwLoc0128, dwLocE4, dwLocE0, dwLocDC, dwLocB8, dwLoc98, dwLoc94, dwLoc68, dwLoc58, dwLoc28, out s0_208, out s1_209, out a0_629, out a1_630, out a2_200, out a3_201, out a4_202, out a5_631, out s2_632, out s3_213, out s4_633, out s5_634, out s6_635, out s7_636, out s8_637, out s9_638, out s10_639, out s11_640, out mstatus_206), s1_209, s0_208 + -1792<i32>, a2_200, a3_201, a4_202, s3_213, mstatus_206, dwLoc013C, dwLoc0130, dwLoc012C_453, dwLoc0128, dwLocE4, dwLocE0, dwLocDC, dwLocB8, dwLoc98, dwLoc94, dwLoc68, dwLoc58, dwLoc28, out s0_238, out s1_239, out a0_641, out a1_642, out a2_230, out a3_231, out a4_232, out a5_643, out s2_644, out s3_243, out s4_645, out s5_646, out s6_647, out s7_648, out s8_649, out s9_650, out s10_651, out s11_652, out mstatus_236)
	word32 s2_257 = 0<32>
l2307DCEC:
	branch Mem159[Mem159[s3_243 + 16<i32>:int32] + s2_257:word32] == 0<32> l2307DC60
l2307DCFA:
	word32 mstatus_283
	word32 s1_286
	word32 s3_290
	word32 s5_292
	word32 s0_653
	word32 a0_654
	word32 a1_655
	word32 a2_656
	word32 a3_657
	word32 a4_658
	word32 a5_659
	word32 s2_660
	word32 s4_661
	word32 s6_662
	word32 s7_663
	word32 s8_664
	word32 s9_665
	word32 s10_666
	word32 s11_667
	word32 ra_284 = at_dump_noend(ra_237, s1_239, s0_238 + -1792<i32>, a2_230, a3_231, a4_232, s3_243, mstatus_236, dwLoc013C, dwLoc0130, dwLoc012C_453, dwLoc0128, dwLocE4, dwLocE0, dwLocDC, dwLocB8, dwLoc98, dwLoc94, dwLoc68, dwLoc58, dwLoc28, out s0_653, out s1_286, out a0_654, out a1_655, out a2_656, out a3_657, out a4_658, out a5_659, out s2_660, out s3_290, out s4_661, out s5_292, out s6_662, out s7_663, out s8_664, out s9_665, out s10_666, out s11_667, out mstatus_283)
	word32 a2_310
	word32 a3_311
	word32 a4_312
	word32 a5_668
	ip4addr_ntoa(out a2_310, out a3_311, out a4_312, out a5_668)
	word32 a2_327
	word32 a3_328
	word32 a4_329
	word32 mstatus_333
	word32 s0_335
	word32 s1_336
	word32 s3_340
	word32 a0_669
	word32 a1_670
	word32 a5_671
	word32 s2_672
	word32 s4_673
	word32 s5_674
	word32 s6_675
	word32 s7_676
	word32 s8_677
	word32 s9_678
	word32 s10_679
	word32 s11_680
	word32 a0_681
	word32 a1_682
	word32 a5_683
	word32 s4_684
	word32 s5_685
	word32 s6_686
	word32 s7_687
	word32 s8_688
	word32 s9_689
	word32 s10_690
	word32 s11_691
	ra_237 = at_dump_noend(at_dump_noend(ra_284, s1_286, s5_292 + -1672<i32>, a2_310, a3_311, a4_312, s3_290, mstatus_283, dwLoc013C, dwLoc0130, dwLoc012C_453, dwLoc0128, dwLocE4, dwLocE0, dwLocDC, dwLocB8, dwLoc98, dwLoc94, dwLoc68, dwLoc58, dwLoc28, out s0_335, out s1_336, out a0_669, out a1_670, out a2_327, out a3_328, out a4_329, out a5_671, out s2_672, out s3_340, out s4_673, out s5_674, out s6_675, out s7_676, out s8_677, out s9_678, out s10_679, out s11_680, out mstatus_333), s1_336, s0_335 + -1792<i32>, a2_327, a3_328, a4_329, s3_340, mstatus_333, dwLoc013C, dwLoc0130, dwLoc012C_453, dwLoc0128, dwLocE4, dwLocE0, dwLocDC, dwLocB8, dwLoc98, dwLoc94, dwLoc68, dwLoc58, dwLoc28, out s0_238, out s1_239, out a0_681, out a1_682, out a2_230, out a3_231, out a4_232, out a5_683, out s2_257, out s3_243, out s4_684, out s5_685, out s6_686, out s7_687, out s8_688, out s9_689, out s10_690, out s11_691, out mstatus_236)
l2307DC5E:
l2307DC60:
	return
domain_name_resolution_exit:


void base_station_info(word32 ra, word32 a0, word32 a5, word32 s2, word32 fflags, word32 frm, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB0, word32 dwArgB4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
base_station_info_entry:
l2307DD2E:
	word32 a0_23
	word32 a4_26
	word32 a5_27
	word32 s1_35
	word32 a3_40
	word32 a2_480
	word32 s2_481
	word32 s0_479
	word32 s5_484
	word32 s3_482
	word32 s4_483
	word32 ra_41 = at_get_parameters(ra, a0, 0<32>, 0<32>, 0<32>, a5, dwArg64, dwArg68, dwArg94, dwArgB0, dwArgB4, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_479, out s1_35, out a0_23, out a2_480, out a3_40, out a4_26, out a5_27, out s2_481, out s3_482, out s4_483, out s5_484)
	branch a0_23 != 0<32> l2307DDF2
l2307DD50:
	word32 s2_491
	word32 s3_492
	word32 a3_488
	word32 a4_489
	word32 a5_490
	word32 a2_487
	word32 s1_485
	word32 a0_486
	malloc(ra_41, s1_35, 128<i32>, a3_40, a4_26, a5_27, mstatus, dwArg00, dwArg04, 0<32>, dwArgF8, dwArg0138, out s1_485, out a0_486, out a2_487, out a3_488, out a4_489, out a5_490, out s2_491, out s3_492)
	word32 s11_78
	word32 s5_81
	word32 s6_82
	word32 s7_83
	word32 s9_85
	word32 a5_494
	word32 a2_493
	word32 a0_69 = at_http_request(ra_41, 0<32>, out a2_493, out a5_494, out s5_81, out s6_82, out s7_83, out s9_85, out s11_78)
	branch a0_69 != 0<32> l2307DDF2
l2307DD78:
	word32 a0_96
	word32 s0_107
	word32 ra_106 = cJSON_Parse(ra_41, a0_69, a0_69, s5_81, s6_82, s7_83, dwArg04, s9_85, s11_78, fflags, frm, ra, dwArg6C, dwArgAC, dwArgE8, dwArg0108, out s0_107, out a0_96)
	branch a0_96 == 0<32> l2307DE02
l2307DE02:
l2307DD82:
	word32 a0_131
	word32 a4_497
	word32 a2_495
	word32 a3_496
	cJSON_GetObjectItem(s0_107, 0x230C45D8<32>, out a0_131, out a2_495, out a3_496, out a4_497)
	word32 a0_145
	word32 a4_500
	word32 a2_498
	word32 a3_499
	cJSON_GetObjectItem(s0_107, 0x230BF504<32>, out a0_145, out a2_498, out a3_499, out a4_500)
	word32 a0_159
	word32 a2_160
	word32 a3_164
	word32 a4_165
	word32 a4_176
	word32 mstatus_180
	word32 s1_183
	word32 s2_506
	word32 s4_507
	word32 s5_508
	word32 a1_503
	word32 a2_504
	word32 a5_505
	word32 s0_501
	word32 a0_502
	word32 s6_509
	word32 s7_510
	word32 s8_511
	word32 s9_512
	word32 s10_513
	word32 s11_514
	word32 s3_187
	word32 a3_175
	word32 ra_181 = at_dump_noend(ra_106, cJSON_GetObjectItem(s0_107, 0x230C4E68<32>, out a0_159, out a2_160, out a3_164, out a4_165), 0x230C6900<32>, a2_160, a3_164, a4_165, a0_131, mstatus, a0_159, dwLoc30, dwLoc2C, s2, dwArg1C, dwArg20, dwArg24, 0<32>, dwArg68, dwArg6C, dwArg98, dwArgA8, dwArgD8, out s0_501, out s1_183, out a0_502, out a1_503, out a2_504, out a3_175, out a4_176, out a5_505, out s2_506, out s3_187, out s4_507, out s5_508, out s6_509, out s7_510, out s8_511, out s9_512, out s10_513, out s11_514, out mstatus_180)
	word32 a2_202 = a0_145
	branch s3_187 == 0<32> l2307DDC8
l2307DDC4:
	s3_187 = Mem170[s3_187 + 16<i32>:int32]
l2307DDC8:
	branch a0_145 == 0<32> l2307DDCC
l2307DDCA:
	a2_202 = Mem170[a0_145 + 16<i32>:word32]
l2307DDCC:
	branch a3_175 == 0<32> l2307DDD0
l2307DDCE:
	a3_175 = Mem170[a3_175 + 16<i32>:word32]
l2307DDD0:
	word32 a2_238
	word32 a3_239
	word32 a4_240
	word32 mstatus_244
	word32 s1_247
	word32 s2_250
	word32 s3_251
	word32 a0_266
	word32 a2_268
	word32 a5_271
	word32 mstatus_274
	word32 a5_301
	word32 s0_515
	word32 a0_516
	word32 a1_517
	word32 a5_518
	word32 s4_519
	word32 s5_520
	word32 s6_521
	word32 s7_522
	word32 s8_523
	word32 s9_524
	word32 s10_525
	word32 s11_526
	word32 s0_527
	word32 s1_528
	word32 a1_529
	word32 a3_530
	word32 a4_531
	word32 s2_532
	word32 s3_533
	word32 s4_534
	word32 s5_535
	word32 s6_536
	word32 s7_537
	word32 s8_538
	word32 s9_539
	word32 s10_540
	word32 s11_541
	word32 a0_542
	word32 a2_543
	word32 s1_544
	word32 a0_545
	word32 a5_546
	word32 s2_547
	word32 s3_548
	cJSON_Delete(at_dump_noend(at_dump_noend(ra_181, s1_183, 0x230C4E74<32>, a2_202, a3_175, a4_176, s3_187, mstatus_180, a0_159, dwLoc30, dwLoc2C, s2, dwArg1C, dwArg20, dwArg24, 0<32>, dwArg68, dwArg6C, dwArg98, dwArgA8, dwArgD8, out s0_515, out s1_247, out a0_516, out a1_517, out a2_238, out a3_239, out a4_240, out a5_518, out s2_250, out s3_251, out s4_519, out s5_520, out s6_521, out s7_522, out s8_523, out s9_524, out s10_525, out s11_526, out mstatus_244), s1_247, s2_250 + -1792<i32>, a2_238, a3_239, a4_240, s3_251, mstatus_244, a0_159, dwLoc30, dwLoc2C, s2, dwArg1C, dwArg20, dwArg24, 0<32>, dwArg68, dwArg6C, dwArg98, dwArgA8, dwArgD8, out s0_527, out s1_528, out a0_266, out a1_529, out a2_268, out a3_530, out a4_531, out a5_271, out s2_532, out s3_533, out s4_534, out s5_535, out s6_536, out s7_537, out s8_538, out s9_539, out s10_540, out s11_541, out mstatus_274), free(a0_266, a2_268, a5_271, mstatus_274, dwArg0118, dwArg0158, out a0_542, out a2_543, out a5_301), a5_301, out s1_544, out a0_545, out a5_546, out s2_547, out s3_548)
l2307DDF2:
	return
base_station_info_exit:


void deep_sleep_handler(word32 ra, word32 a5, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg94, word32 dwArgB0, word32 dwArgB4, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] ra:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0094:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
deep_sleep_handler_entry:
l2307DE06:
	word32 a0_13 = Mem12[0xFFFC04<32>:word32]
	branch CONVERT(Mem19[0xFFFC04<32>:byte], byte, word32) == 61<i32> l2307DE40
l2307DE40:
	Mem23[0xFFFC05<32>:word32] = a0_13
	word32 a0_28
	word32 a5_32
	word32 a3_45
	word32 s3_204
	word32 s2_203
	word32 a4_202
	word32 a2_201
	word32 s1_200
	word32 s0_199
	word32 s4_205
	word32 s5_206
	word32 ra_46 = at_get_parameters(ra, a0_13, fp + -40<i32>, 2<32>, fp + -52<i32>, a5, dwArg64, dwArg68, dwArg94, dwArgB0, dwArgB4, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_199, out s1_200, out a0_28, out a2_201, out a3_45, out a4_202, out a5_32, out s2_203, out s3_204, out s4_205, out s5_206)
	branch a0_28 != 0<32> l2307DE38
l2307DE50:
	branch a5_32 <= 0<32> l2307DE38
l2307DE56:
	word32 a1_55
	word32 a3_57
	word32 s1_207
	word32 a0_208
	word32 a2_209
	word32 a4_210
	word32 a5_211
	word32 a7_212
	word32 s2_213
	word32 s3_214
	word32 s4_215
	word32 s5_216
	word32 s6_217
	word32 s7_218
	word32 s8_219
	word32 s9_220
	word32 s10_221
	word32 s11_222
	word32 t4_223
	at_deep_sleep_mode(printf(ra_46, 0x230C4E98<32>, a3_45, 0<32>, dwLoc18, dwArg30, dwArg34, dwArg58, dwArg7C, out s1_207, out a0_208, out a1_55, out a2_209, out a3_57, out a4_210, out a5_211, out a7_212, out s2_213, out s3_214, out s4_215, out s5_216, out s6_217, out s7_218, out s8_219, out s9_220, out s10_221, out s11_222, out t4_223), a1_55, a3_57)
l2307DE38:
l2307DE3A:
	return
deep_sleep_handler_exit:


void setautoconnect_handler(word32 ra, word32 s0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[8..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
setautoconnect_handler_entry:
l2307DE70:
	word32 s3_28
	word32 a3_452
	word32 a2_451
	word32 a1_450
	word32 a0_449
	word32 s1_448
	word32 a4_453
	word32 a5_454
	word32 a7_455
	word32 s2_456
	word32 s4_457
	word32 s5_458
	word32 s6_459
	word32 s7_460
	word32 s8_461
	word32 s9_462
	word32 s10_463
	word32 s11_464
	word32 t4_465
	word32 ra_23 = printf(ra, 0x230C4ED4<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_448, out a0_449, out a1_450, out a2_451, out a3_452, out a4_453, out a5_454, out a7_455, out s2_456, out s3_28, out s4_457, out s5_458, out s6_459, out s7_460, out s8_461, out s9_462, out s10_463, out s11_464, out t4_465)
	word32 s0_44 = Mem43[0xFFFC04<32>:word32]
	word32 a4_47 = CONVERT(Mem46[0xFFFC04<32>:byte], byte, word32)
	word32 dwLoc1C_329 = SEQ(SLICE(s0, word24, 8), 3<8>)
	branch a4_47 != 63<i32> l2307DEE4
l2307DEE4:
	branch a4_47 == 61<i32> l2307DEF8
l2307DEF8:
	Mem51[0xFFFC05<32>:word32] = s0_44
	word32 a0_56
	word32 a3_73
	word32 s0_514
	word32 s1_515
	word32 a2_516
	word32 a4_517
	word32 a5_518
	word32 s2_519
	word32 s3_520
	word32 s4_521
	word32 s5_522
	word32 ra_74 = at_get_parameters(ra_23, s0_44, fp + -28<i32>, 1<32>, fp + -36<i32>, 0xFFFC05<32>, dwArg74, dwArg78, dwArgA4, dwArgC0, dwArgC4, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_514, out s1_515, out a0_56, out a2_516, out a3_73, out a4_517, out a5_518, out s2_519, out s3_520, out s4_521, out s5_522)
	branch a0_56 != 0<32> l2307DEEE
l2307DF0E:
	branch true l2307DEEC
l2307DF14:
	word32 dwLoc28_309
	word32 a5_82
	word32 s1_90
	word32 a0_523
	word32 a1_524
	word32 a2_525
	word32 a3_526
	word32 a4_527
	word32 a7_528
	word32 s2_529
	word32 s3_530
	word32 s4_531
	word32 s5_532
	word32 s6_533
	word32 s7_534
	word32 s8_535
	word32 s9_536
	word32 s10_537
	word32 s11_538
	word32 t4_539
	word32 ra_89 = printf(ra_74, 0x230C4F88<32>, a3_73, a0_56, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_90, out a0_523, out a1_524, out a2_525, out a3_526, out a4_527, out a5_82, out a7_528, out s2_529, out s3_530, out s4_531, out s5_532, out s6_533, out s7_534, out s8_535, out s9_536, out s10_537, out s11_538, out t4_539)
	branch a5_82 != 1<32> l2307DF3C
l2307DF3C:
	branch a5_82 != 0<32> l2307DEEC
l2307DF3E:
	dwLoc28_309 = 0<32>
l2307DF2A:
	dwLoc28_309 = a5_82
l2307DF2C:
	word32 s0_540
	word32 s1_541
	word32 a0_542
	word32 s4_543
	word32 mstatus_544
	at_key_value_set(ra_89, s1_90, 0x230A99E8<32>, fp + -32<i32>, mstatus, 0<32>, dwLoc28_309, dwLoc1C_329, dwLoc18, dwLoc14, dwLoc10, dwLoc0C, dwLoc04, dwArg28, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgD8, out s0_540, out s1_541, out a0_542, out s4_543, out mstatus_544)
l2307DEEC:
l2307DEB0:
	word32 a2_152
	word32 a3_153
	word32 a4_154
	word32 s1_159
	word32 s3_163
	word32 a2_182
	word32 a3_183
	word32 a4_184
	word32 mstatus_188
	word32 s1_191
	word32 s3_195
	word32 a2_214
	word32 a3_215
	word32 a4_216
	word32 mstatus_220
	word32 s0_222
	word32 s1_223
	word32 s3_227
	word32 a0_466
	word32 a5_467
	word32 s2_468
	word32 s4_469
	word32 s0_470
	word32 a0_471
	word32 a1_472
	word32 a5_473
	word32 s2_474
	word32 s4_475
	word32 s5_476
	word32 s6_477
	word32 s7_478
	word32 s8_479
	word32 s9_480
	word32 s10_481
	word32 s11_482
	word32 a0_483
	word32 a1_484
	word32 a5_485
	word32 s2_486
	word32 s4_487
	word32 s5_488
	word32 s6_489
	word32 s7_490
	word32 s8_491
	word32 s9_492
	word32 s10_493
	word32 s11_494
	word32 s0_495
	word32 s1_496
	word32 a0_497
	word32 a1_498
	word32 a2_499
	word32 a3_500
	word32 a4_501
	word32 a5_502
	word32 s2_503
	word32 s3_504
	word32 s4_505
	word32 s5_506
	word32 s6_507
	word32 s7_508
	word32 s8_509
	word32 s9_510
	word32 s10_511
	word32 s11_512
	word32 mstatus_513
	at_dump_noend(at_dump_noend(at_dump_noend(at_key_value_get(ra_23, s0_44, 0x230A99E8<32>, fp + -32<i32>, s3_28, mstatus, 0<32>, dwArg08, dwArg20, dwArg24, dwArg38, dwArg48, dwArg6C, dwArg78, dwArgB8, out s1_159, out a0_466, out a2_152, out a3_153, out a4_154, out a5_467, out s2_468, out s3_163, out s4_469), s1_159, 0x230C6900<32>, a2_152, a3_153, a4_154, s3_163, mstatus, 0<32>, dwLoc20, dwLoc1C_329, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_470, out s1_191, out a0_471, out a1_472, out a2_182, out a3_183, out a4_184, out a5_473, out s2_474, out s3_195, out s4_475, out s5_476, out s6_477, out s7_478, out s8_479, out s9_480, out s10_481, out s11_482, out mstatus_188), s1_191, 0x230C4F78<32>, a2_182, a3_183, a4_184, s3_195, mstatus_188, 0<32>, dwLoc20, dwLoc1C_329, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_222, out s1_223, out a0_483, out a1_484, out a2_214, out a3_215, out a4_216, out a5_485, out s2_486, out s3_227, out s4_487, out s5_488, out s6_489, out s7_490, out s8_491, out s9_492, out s10_493, out s11_494, out mstatus_220), s1_223, s0_222 + -1792<i32>, a2_214, a3_215, a4_216, s3_227, mstatus_220, 0<32>, dwLoc20, dwLoc1C_329, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_495, out s1_496, out a0_497, out a1_498, out a2_499, out a3_500, out a4_501, out a5_502, out s2_503, out s3_504, out s4_505, out s5_506, out s6_507, out s7_508, out s8_509, out s9_510, out s10_511, out s11_512, out mstatus_513)
l2307DEE0:
l2307DEEE:
	return
setautoconnect_handler_exit:


void scan_handler_opt(word32 ra, word32 s0, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB0, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
scan_handler_opt_entry:
l2307DF42:
	word32 a0_17 = Mem16[0xFFF801<32>:word32]
	byte bLoc31_248 = 0<8>
	word32 a3_23 = CONVERT(Mem22[0xFFF801<32>:byte], byte, word32)
	word32 dwLoc1C_268 = SEQ(nLoc1B, 3<8>)
	word32 dwLoc28_278 = SEQ(nLoc27, 3<8>)
	branch a3_23 != 63<i32> l2307DFCE
l2307DFCE:
	branch a3_23 == 61<i32> l2307DFDA
l2307DFDA:
	Mem27[0xFFF802<32>:word32] = a0_17
	word32 a0_31
	word32 a4_34
	word32 s1_43
	word32 s0_438
	word32 a2_439
	word32 a3_440
	word32 a5_441
	word32 s2_442
	word32 s3_443
	word32 s4_444
	word32 s5_445
	word32 ra_49 = at_get_parameters(ra, a0_17, fp + -40<i32>, 2<32>, fp + -44<i32>, 0xFFF802<32>, dwArg64, dwArg68, dwArg94, dwArgB0, dwArgB4, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s0_438, out s1_43, out a0_31, out a2_439, out a3_440, out a4_34, out a5_441, out s2_442, out s3_443, out s4_444, out s5_445)
	branch a0_31 != 0<32> l2307DFD6
l2307DFEA:
	branch a4_34 <= 1<32> l2307DFD6
l2307DFF2:
	word32 s0_446
	word32 s1_447
	word32 a0_448
	word32 s4_449
	word32 mstatus_450
	at_key_value_set(ra_49, s1_43, 0x230C4AE8<32>, fp + -49<i32>, mstatus, dwLoc3C, dwLoc38, fp + -47<i32>, dwLoc28_278, s0, dwLoc20, dwLoc1C_268, dwLoc14, dwArg18, dwArg28, dwArg2C, dwArg38, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgC8, out s0_446, out s1_447, out a0_448, out s4_449, out mstatus_450)
l2307DFD6:
l2307DF80:
	word32 a0_98
	word32 a2_100
	word32 a3_101
	word32 a4_102
	word32 s1_107
	word32 s3_111
	word32 s4_392
	word32 s2_391
	word32 a5_390
	word32 ra_106 = at_key_value_get(ra, s0, 0x230C4AE8<32>, fp + -49<i32>, s3, mstatus, dwLoc38, dwLoc08, dwArg10, dwArg14, dwArg28, dwArg38, ra, dwArg68, dwArgA8, out s1_107, out a0_98, out a2_100, out a3_101, out a4_102, out a5_390, out s2_391, out s3_111, out s4_392)
	branch a0_98 == 0<32> l2307DF98
l2307DF92:
	bLoc31_248 = 0xFF<8>
l2307DF98:
	word32 a3_142
	word32 a4_143
	word32 mstatus_147
	word32 s1_150
	word32 s3_154
	word32 a2_176
	word32 a3_177
	word32 a4_178
	word32 mstatus_182
	word32 s0_184
	word32 s1_185
	word32 s3_189
	word32 s6_401
	word32 s5_400
	word32 s4_399
	word32 s2_398
	word32 a5_397
	word32 a2_396
	word32 a1_395
	word32 a0_394
	word32 s0_393
	word32 s7_402
	word32 s8_403
	word32 s9_404
	word32 s10_405
	word32 s11_406
	word32 a0_407
	word32 a1_408
	word32 a5_409
	word32 s2_410
	word32 s4_411
	word32 s5_412
	word32 s6_413
	word32 s7_414
	word32 s8_415
	word32 s9_416
	word32 s10_417
	word32 s11_418
	word32 s0_419
	word32 s1_420
	word32 a0_421
	word32 a1_422
	word32 a2_423
	word32 a3_424
	word32 a4_425
	word32 a5_426
	word32 s2_427
	word32 s3_428
	word32 s4_429
	word32 s5_430
	word32 s6_431
	word32 s7_432
	word32 s8_433
	word32 s9_434
	word32 s10_435
	word32 s11_436
	word32 mstatus_437
	at_dump_noend(at_dump_noend(at_dump_noend(ra_106, s1_107, 0x230C6900<32>, a2_100, a3_101, a4_102, s3_111, mstatus, dwLoc3C, 1025<i32>, fp + -47<i32>, dwLoc28_278, dwArg1C, dwArg20, dwArg24, dwArg48, dwArg68, dwArg6C, dwArg98, dwArgA8, dwArgD8, out s0_393, out s1_150, out a0_394, out a1_395, out a2_396, out a3_142, out a4_143, out a5_397, out s2_398, out s3_154, out s4_399, out s5_400, out s6_401, out s7_402, out s8_403, out s9_404, out s10_405, out s11_406, out mstatus_147), s1_150, 0x230C4F68<32>, CONVERT(bLoc31_248, byte, word32) & 0x1F<32>, a3_142, a4_143, s3_154, mstatus_147, dwLoc3C, 1025<i32>, fp + -47<i32>, dwLoc28_278, dwArg1C, dwArg20, dwArg24, dwArg48, dwArg68, dwArg6C, dwArg98, dwArgA8, dwArgD8, out s0_184, out s1_185, out a0_407, out a1_408, out a2_176, out a3_177, out a4_178, out a5_409, out s2_410, out s3_189, out s4_411, out s5_412, out s6_413, out s7_414, out s8_415, out s9_416, out s10_417, out s11_418, out mstatus_182), s1_185, s0_184 + -1792<i32>, a2_176, a3_177, a4_178, s3_189, mstatus_182, dwLoc3C, 1025<i32>, fp + -47<i32>, dwLoc28_278, dwArg1C, dwArg20, dwArg24, dwArg48, dwArg68, dwArg6C, dwArg98, dwArgA8, dwArgD8, out s0_419, out s1_420, out a0_421, out a1_422, out a2_423, out a3_424, out a4_425, out a5_426, out s2_427, out s3_428, out s4_429, out s5_430, out s6_431, out s7_432, out s8_433, out s9_434, out s10_435, out s11_436, out mstatus_437)
l2307DFC6:
	return
scan_handler_opt_exit:


void scan_handler(word32 ra, word32 dwArg74, word32 dwArg78, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 tp
// Preserved: sp
scan_handler_entry:
l2307E01A:
	word32 a0_116
	word32 a1_110
	word32 s1_103
	word32 ra_109
	word32 a0_13 = Mem12[0xFFF802<32>:word32]
	branch CONVERT(Mem19[0xFFF802<32>:byte], byte, word32) == 61<i32> l2307E06C
l2307E06C:
	Mem23[0xFFF803<32>:word32] = a0_13
	word32 a0_27
	word32 a4_30
	word32 s0_33
	word32 s5_235
	word32 s4_234
	word32 s3_233
	word32 s2_232
	word32 a5_231
	word32 a3_230
	word32 a2_229
	ra_109 = at_get_parameters(ra, a0_13, fp + -40<i32>, 2<32>, fp + -44<i32>, 0xFFF803<32>, dwArg74, dwArg78, dwArgA4, dwArgC0, dwArgC4, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_33, out s1_103, out a0_27, out a2_229, out a3_230, out a4_30, out a5_231, out s2_232, out s3_233, out s4_234, out s5_235)
	branch a0_27 != 0<32> l2307E05A
l2307E07C:
	branch a4_30 <= 1<32> l2307E05A
l2307E084:
	word32 a1_245
	word32 a2_246
	word32 a3_247
	word32 a4_248
	word32 a5_249
	branch strcmp(fp + -48<i32>, 0x230C3FB8<32>, out a1_245, out a2_246, out a3_247, out a4_248, out a5_249) != 0<32> l2307E0AA
l2307E0AA:
	word32 a1_250
	word32 a2_251
	word32 a3_252
	word32 a4_253
	word32 a5_254
	branch strcmp(fp + -48<i32>, 0x230C54CC<32>, out a1_250, out a2_251, out a3_252, out a4_253, out a5_254) == 0<32> l2307E094
l2307E0BA:
l2307E094:
	word32 a1_255
	word32 a2_256
	word32 a3_257
	word32 a4_258
	word32 a5_259
	branch strcmp(s0_33, 0x230C9664<32>, out a1_255, out a2_256, out a3_257, out a4_258, out a5_259) != 0<32> l2307E05A
l2307E0A4:
	a1_110 = s0_33
	a0_116 = fp + -48<i32>
l2307E04E:
	word32 a3_238
	word32 a2_237
	word32 s0_236
	word32 a4_239
	word32 a5_240
	word32 s2_241
	word32 s3_242
	word32 s4_243
	word32 s5_244
	ra_109 = at_get_parameters(ra, a0_13, 0<32>, 0<32>, 0<32>, 0xFFF802<32>, dwArg74, dwArg78, dwArgA4, dwArgC0, dwArgC4, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_236, out s1_103, out a0_116, out a2_237, out a3_238, out a4_239, out a5_240, out s2_241, out s3_242, out s4_243, out s5_244)
	branch a0_116 == 0<32> l2307E064
l2307E064:
	a1_110 = 0<32>
l2307E066:
	at_scan(ra_109, s1_103, a0_116, a1_110)
l2307E05A:
l2307E05C:
	return
scan_handler_exit:


void uart_config_handler(word32 ra, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg4C, word32 dwArg64, word32 dwArg74, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0128, word32 dwArg0184)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +004C:[0..31] Stack +0064:[0..31] Stack +0074:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0184:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
uart_config_handler_entry:
l2307E0BC:
	word32 t1_451
	word32 a0_452
	word32 a1_453
	word32 a2_454
	word32 a3_455
	word32 a4_456
	word32 a5_457
	word32 t4_450
	word32 s11_449
	word32 s10_448
	word32 s9_447
	word32 s8_446
	word32 s7_445
	word32 s6_444
	word32 s5_443
	word32 s4_442
	word32 s3_441
	word32 s2_440
	word32 a7_439
	word32 a5_438
	word32 a4_437
	word32 a3_436
	word32 a2_435
	word32 a1_434
	word32 a0_433
	word32 s1_432
	word32 ra_48 = memset(printf(ra, 0x230C4ED4<32>, a3, dwLoc68, dwLoc48, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_432, out a0_433, out a1_434, out a2_435, out a3_436, out a4_437, out a5_438, out a7_439, out s2_440, out s3_441, out s4_442, out s5_443, out s6_444, out s7_445, out s8_446, out s9_447, out s10_448, out s11_449, out t4_450), fp + -100<i32>, 0<32>, 0x18<32>, out t1_451, out a0_452, out a1_453, out a2_454, out a3_455, out a4_456, out a5_457)
	word32 s1_65 = Mem64[0xFFFC04<32>:word32]
	word32 a4_75 = CONVERT(Mem74[0xFFFC04<32>:byte], byte, word32)
	branch a4_75 != 63<i32> l2307E13A
l2307E13A:
	branch a4_75 != 61<i32> l2307E130
l2307E144:
	Mem80[0xFFFC05<32>:word32] = s1_65
	word32 a0_85
	word32 a5_89
	word32 s0_458
	word32 s1_459
	word32 a2_460
	word32 a4_461
	word32 s2_462
	word32 s3_463
	word32 s4_464
	word32 s5_465
	word32 a3_102
	word32 ra_103 = at_get_parameters(ra_48, s1_65, fp + -76<i32>, 5<32>, fp + -104<i32>, 0xFFFC05<32>, fp + -84<i32>, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, out s0_458, out s1_459, out a0_85, out a2_460, out a3_102, out a4_461, out a5_89, out s2_462, out s3_463, out s4_464, out s5_465)
	branch a0_85 == 0<32> l2307E15A
l2307E15A:
	branch a5_89 <= 4<32> l2307E1BA
l2307E1BA:
	branch a5_89 == 4<32> l2307E162
l2307E1C0:
	branch a5_89 == dwArg74 l2307E162
l2307E1C6:
	a3_102 = 2<32>
	branch a5_89 == 2<32> l2307E162
l2307E1D0:
	a3_102 = 8<32>
	branch a5_89 != 1<32> l2307E156
l2307E1D8:
l2307E162:
	word32 a3_125
	word32 a3_150
	word32 a3_175
	word32 a3_200
	word32 s1_466
	word32 a0_467
	word32 a1_468
	word32 a2_469
	word32 a4_470
	word32 a5_471
	word32 a7_472
	word32 s2_473
	word32 s3_474
	word32 s4_475
	word32 s5_476
	word32 s6_477
	word32 s7_478
	word32 s8_479
	word32 s9_480
	word32 s10_481
	word32 s11_482
	word32 t4_483
	word32 s1_484
	word32 a0_485
	word32 a1_486
	word32 a2_487
	word32 a4_488
	word32 a5_489
	word32 a7_490
	word32 s2_491
	word32 s3_492
	word32 s4_493
	word32 s5_494
	word32 s6_495
	word32 s7_496
	word32 s8_497
	word32 s9_498
	word32 s10_499
	word32 s11_500
	word32 t4_501
	word32 s1_502
	word32 a0_503
	word32 a1_504
	word32 a2_505
	word32 a4_506
	word32 a5_507
	word32 a7_508
	word32 s2_509
	word32 s3_510
	word32 s4_511
	word32 s5_512
	word32 s6_513
	word32 s7_514
	word32 s8_515
	word32 s9_516
	word32 s10_517
	word32 s11_518
	word32 t4_519
	word32 s1_520
	word32 a0_521
	word32 a1_522
	word32 a2_523
	word32 a4_524
	word32 a5_525
	word32 a7_526
	word32 s2_527
	word32 s3_528
	word32 s4_529
	word32 s5_530
	word32 s6_531
	word32 s7_532
	word32 s8_533
	word32 s9_534
	word32 s10_535
	word32 s11_536
	word32 t4_537
	word32 ra_203 = printf(printf(printf(printf(ra_103, 0x230C5500<32>, a3_102, dwLoc68, 0xFFFC04<32>, dwArg00, dwArg04, fp + -92<i32>, dwArg4C, out s1_466, out a0_467, out a1_468, out a2_469, out a3_125, out a4_470, out a5_471, out a7_472, out s2_473, out s3_474, out s4_475, out s5_476, out s6_477, out s7_478, out s8_479, out s9_480, out s10_481, out s11_482, out t4_483), 0x230C5524<32>, a3_125, dwLoc68, 0xFFFC04<32>, dwArg00, dwArg04, fp + -92<i32>, dwArg4C, out s1_484, out a0_485, out a1_486, out a2_487, out a3_150, out a4_488, out a5_489, out a7_490, out s2_491, out s3_492, out s4_493, out s5_494, out s6_495, out s7_496, out s8_497, out s9_498, out s10_499, out s11_500, out t4_501), 0x230C554C<32>, a3_150, dwLoc68, 0xFFFC04<32>, dwArg00, dwArg04, fp + -92<i32>, dwArg4C, out s1_502, out a0_503, out a1_504, out a2_505, out a3_175, out a4_506, out a5_507, out a7_508, out s2_509, out s3_510, out s4_511, out s5_512, out s6_513, out s7_514, out s8_515, out s9_516, out s10_517, out s11_518, out t4_519), 0x230C5570<32>, a3_175, dwLoc68, 0xFFFC04<32>, dwArg00, dwArg04, fp + -92<i32>, dwArg4C, out s1_520, out a0_521, out a1_522, out a2_523, out a3_200, out a4_524, out a5_525, out a7_526, out s2_527, out s3_528, out s4_529, out s5_530, out s6_531, out s7_532, out s8_533, out s9_534, out s10_535, out s11_536, out t4_537)
	0<32> = dwArg0104
	word32 a3_224
	word32 s1_538
	word32 a0_539
	word32 a1_540
	word32 a2_541
	word32 a4_542
	word32 a5_543
	word32 a7_544
	word32 s2_545
	word32 s3_546
	word32 s4_547
	word32 s5_548
	word32 s6_549
	word32 s7_550
	word32 s8_551
	word32 s9_552
	word32 s10_553
	word32 s11_554
	word32 t4_555
	word32 ra_227 = printf(ra_203, 0x230C5598<32>, a3_200, dwLoc68, 0xFFFC04<32>, dwArg00, dwArg04, fp + -92<i32>, dwArg4C, out s1_538, out a0_539, out a1_540, out a2_541, out a3_224, out a4_542, out a5_543, out a7_544, out s2_545, out s3_546, out s4_547, out s5_548, out s6_549, out s7_550, out s8_551, out s9_552, out s10_553, out s11_554, out t4_555)
	0<32> = dwArg0184
	at_uart_config(ra_227, a3_224)
l2307E156:
l2307E12C:
	at_uart_config_get(ra_48, 63<i32>, mstatus)
l2307E130:
	return
uart_config_handler_exit:


void reset_handler(word32 ra, word32 a0, word32 a5, word32 dwArg94, word32 dwArg98, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
reset_handler_entry:
l2307E1DA:
	word32 a0_11
	word32 s5_81
	word32 s4_80
	word32 s3_79
	word32 s2_78
	word32 a5_77
	word32 a4_76
	word32 a3_75
	word32 a2_74
	word32 s1_73
	word32 s0_72
	word32 ra_29 = at_get_parameters(ra, a0, 0<32>, 0<32>, 0<32>, a5, dwArg94, dwArg98, dwArgC4, dwArgE0, dwArgE4, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s0_72, out s1_73, out a0_11, out a2_74, out a3_75, out a4_76, out a5_77, out s2_78, out s3_79, out s4_80, out s5_81)
	branch a0_11 != 0<32> l2307E1F2
l2307E1F2:
	return
l2307E1EA:
l2307E1EE_thunk_at_reset:
	at_reset(ra_29)
	return
reset_handler_exit:


void echo_on_handler(word32 ra, word32 s0, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[8..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
echo_on_handler_entry:
l2307E1FA:
	word32 s3_30
	word32 s5_379
	word32 s4_378
	word32 s2_377
	word32 a7_376
	word32 a5_375
	word32 a4_374
	word32 a3_373
	word32 a2_372
	word32 a1_371
	word32 a0_370
	word32 s1_369
	word32 s6_380
	word32 s7_381
	word32 s8_382
	word32 s9_383
	word32 s10_384
	word32 s11_385
	word32 t4_386
	word32 ra_25 = printf(ra, 0x230C4ED4<32>, a3, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_369, out a0_370, out a1_371, out a2_372, out a3_373, out a4_374, out a5_375, out a7_376, out s2_377, out s3_30, out s4_378, out s5_379, out s6_380, out s7_381, out s8_382, out s9_383, out s10_384, out s11_385, out t4_386)
	word32 s0_44 = Mem43[0xFFFC04<32>:word32]
	word32 a4_48 = CONVERT(Mem47[0xFFFC04<32>:byte], byte, word32)
	word32 dwLoc1C_285 = SEQ(SLICE(s0, word24, 8), 3<8>)
	branch a4_48 != 63<i32> l2307E278
l2307E278:
	branch a4_48 == 61<i32> l2307E284
l2307E284:
	Mem52[0xFFFC05<32>:word32] = s0_44
	word32 a0_57
	word32 a5_61
	word32 s1_69
	word32 s0_435
	word32 a2_436
	word32 a3_437
	word32 a4_438
	word32 s2_439
	word32 s3_440
	word32 s4_441
	word32 s5_442
	word32 ra_75 = at_get_parameters(ra_25, s0_44, fp + -28<i32>, 1<32>, fp + -32<i32>, 0xFFFC05<32>, dwArg74, dwArg78, dwArgA4, dwArgC0, dwArgC4, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s0_435, out s1_69, out a0_57, out a2_436, out a3_437, out a4_438, out a5_61, out s2_439, out s3_440, out s4_441, out s5_442)
	branch a0_57 != 0<32> l2307E280
l2307E298:
	branch a5_61 <= 0<32> l2307E280
l2307E29E:
	branch a5_61 > 1<32> l2307E280
l2307E2A6:
	Mem84[0x42028F44<32>:word32] = a5_61
	word32 s0_443
	word32 s1_444
	word32 a0_445
	word32 s4_446
	word32 mstatus_447
	at_key_value_set(ra_75, s1_69, 0x230C47A4<32>, s1_69, mstatus, dwLoc2C, dwLoc28, dwLoc1C_285, dwLoc18, dwLoc14, dwLoc10, dwLoc0C, dwLoc04, dwArg28, dwArg38, dwArg3C, dwArg48, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgD8, out s0_443, out s1_444, out a0_445, out s4_446, out mstatus_447)
l2307E280:
l2307E23A:
	word32 a2_122
	word32 a3_123
	word32 a4_124
	word32 s1_129
	word32 s3_133
	word32 a2_152
	word32 a3_153
	word32 a4_154
	word32 mstatus_158
	word32 s1_161
	word32 s3_165
	word32 a2_184
	word32 a3_185
	word32 a4_186
	word32 mstatus_190
	word32 s0_192
	word32 s1_193
	word32 s3_197
	word32 a0_387
	word32 a5_388
	word32 s2_389
	word32 s4_390
	word32 s0_391
	word32 a0_392
	word32 a1_393
	word32 a5_394
	word32 s2_395
	word32 s4_396
	word32 s5_397
	word32 s6_398
	word32 s7_399
	word32 s8_400
	word32 s9_401
	word32 s10_402
	word32 s11_403
	word32 a0_404
	word32 a1_405
	word32 a5_406
	word32 s2_407
	word32 s4_408
	word32 s5_409
	word32 s6_410
	word32 s7_411
	word32 s8_412
	word32 s9_413
	word32 s10_414
	word32 s11_415
	word32 s0_416
	word32 s1_417
	word32 a0_418
	word32 a1_419
	word32 a2_420
	word32 a3_421
	word32 a4_422
	word32 a5_423
	word32 s2_424
	word32 s3_425
	word32 s4_426
	word32 s5_427
	word32 s6_428
	word32 s7_429
	word32 s8_430
	word32 s9_431
	word32 s10_432
	word32 s11_433
	word32 mstatus_434
	at_dump_noend(at_dump_noend(at_dump_noend(at_key_value_get(ra_25, s0_44, 0x230C47A4<32>, fp + -32<i32>, s3_30, mstatus, dwLoc28, dwArg08, dwArg20, dwArg24, dwArg38, dwArg48, dwArg6C, dwArg78, dwArgB8, out s1_129, out a0_387, out a2_122, out a3_123, out a4_124, out a5_388, out s2_389, out s3_133, out s4_390), s1_129, 0x230C6900<32>, a2_122, a3_123, a4_124, s3_133, mstatus, dwLoc2C, dwLoc20, dwLoc1C_285, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_391, out s1_161, out a0_392, out a1_393, out a2_152, out a3_153, out a4_154, out a5_394, out s2_395, out s3_165, out s4_396, out s5_397, out s6_398, out s7_399, out s8_400, out s9_401, out s10_402, out s11_403, out mstatus_158), s1_161, 0x230C4F20<32>, a2_152, a3_153, a4_154, s3_165, mstatus_158, dwLoc2C, dwLoc20, dwLoc1C_285, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_192, out s1_193, out a0_404, out a1_405, out a2_184, out a3_185, out a4_186, out a5_406, out s2_407, out s3_197, out s4_408, out s5_409, out s6_410, out s7_411, out s8_412, out s9_413, out s10_414, out s11_415, out mstatus_190), s1_193, s0_192 + -1792<i32>, a2_184, a3_185, a4_186, s3_197, mstatus_190, dwLoc2C, dwLoc20, dwLoc1C_285, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_416, out s1_417, out a0_418, out a1_419, out a2_420, out a3_421, out a4_422, out a5_423, out s2_424, out s3_425, out s4_426, out s5_427, out s6_428, out s7_429, out s8_430, out s9_431, out s10_432, out s11_433, out mstatus_434)
l2307E26C:
	return
echo_on_handler_exit:


void disconnect_handler(word32 ra, word32 a3, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
disconnect_handler_entry:
l2307E2BE:
	word32 a5_16
	word32 a3_20
	word32 s1_123
	word32 a0_124
	word32 a1_125
	word32 a2_126
	word32 a4_127
	word32 a7_128
	word32 s2_129
	word32 s3_130
	word32 s4_131
	word32 s5_132
	word32 s6_133
	word32 s7_134
	word32 s8_135
	word32 s9_136
	word32 s10_137
	word32 s11_138
	word32 t4_139
	word32 ra_23 = printf(ra, 0x230C4ED4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_123, out a0_124, out a1_125, out a2_126, out a3_20, out a4_127, out a5_16, out a7_128, out s2_129, out s3_130, out s4_131, out s5_132, out s6_133, out s7_134, out s8_135, out s9_136, out s10_137, out s11_138, out t4_139)
	branch CONVERT(Mem13[a5_16:byte], byte, word32) == 61<i32> l2307E2F6
l2307E2E8:
	word32 a3_44
	word32 a4_45
	word32 a5_46
	word32 s1_140
	word32 a0_141
	word32 a1_142
	word32 a2_143
	word32 a3_144
	word32 a4_145
	word32 a5_146
	word32 s2_147
	word32 s3_148
	word32 s4_149
	vTaskDelay(200<i32>, at_disconnect(ra_23, a3_20, out a3_44, out a4_45, out a5_46), a3_44, a4_45, a5_46, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1_140, out a0_141, out a1_142, out a2_143, out a3_144, out a4_145, out a5_146, out s2_147, out s3_148, out s4_149)
l2307E2F6:
	return
disconnect_handler_exit:


void restore_handler(word32 ra, word32 a0, word32 a5, word32 dwArg94, word32 dwArg98, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
restore_handler_entry:
l2307E300:
	word32 a0_11
	word32 a3_28
	word32 a4_103
	word32 a2_102
	word32 s1_101
	word32 s0_100
	word32 a5_104
	word32 s2_105
	word32 s3_106
	word32 s4_107
	word32 s5_108
	word32 ra_29 = at_get_parameters(ra, a0, 0<32>, 0<32>, 0<32>, a5, dwArg94, dwArg98, dwArgC4, dwArgE0, dwArgE4, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s0_100, out s1_101, out a0_11, out a2_102, out a3_28, out a4_103, out a5_104, out s2_105, out s3_106, out s4_107, out s5_108)
	branch a0_11 != 0<32> l2307E318
l2307E318:
	return
l2307E310:
l2307E314_thunk_at_restore:
	at_restore(ra_29, a3_28)
	return
restore_handler_exit:


void version_handler(word32 ra, word32 a0, word32 a5, word32 dwArg94, word32 dwArg98, word32 dwArgC4, word32 dwArgE0, word32 dwArgE4, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00C4:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
version_handler_entry:
l2307E320:
	word32 a0_11
	word32 a3_28
	word32 a4_103
	word32 a2_102
	word32 s1_101
	word32 s0_100
	word32 a5_104
	word32 s2_105
	word32 s3_106
	word32 s4_107
	word32 s5_108
	word32 ra_29 = at_get_parameters(ra, a0, 0<32>, 0<32>, 0<32>, a5, dwArg94, dwArg98, dwArgC4, dwArgE0, dwArgE4, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s0_100, out s1_101, out a0_11, out a2_102, out a3_28, out a4_103, out a5_104, out s2_105, out s3_106, out s4_107, out s5_108)
	branch a0_11 != 0<32> l2307E338
l2307E338:
	return
l2307E330:
l2307E334_thunk_at_version:
	at_version(ra_29, a3_28)
	return
version_handler_exit:


void at_help(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg88, word32 dwArg8C, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      help_handler
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
at_help_entry:
l2307E340:
	word32 s1_12 = 0x230C7000<32>
	word32 s3_13 = 0x230C5000<32>
l2307E368:
	word32 a2_37
	word32 a3_38
	word32 a4_39
	word32 mstatus_43
	word32 s1_46
	word32 s3_50
	word32 a2_70
	word32 a3_71
	word32 a4_72
	word32 mstatus_76
	word32 s1_79
	word32 s3_83
	word32 a2_100
	word32 a3_101
	word32 a4_102
	word32 a5_103
	word32 s5_115
	word32 s6_381
	word32 s5_380
	word32 s4_379
	word32 s2_378
	word32 a5_377
	word32 a1_376
	word32 a0_375
	word32 s0_374
	word32 s11_373
	word32 s10_372
	word32 s9_371
	word32 s8_370
	word32 s7_369
	word32 s6_368
	word32 s5_367
	word32 s4_366
	word32 s2_365
	word32 a5_364
	word32 a1_363
	word32 a0_362
	word32 s0_361
	word32 s11_386
	word32 s0_387
	word32 s9_384
	word32 s10_385
	word32 s7_382
	word32 s8_383
	word32 s1_388
	word32 a0_389
	word32 a1_390
	word32 s2_391
	word32 s3_392
	word32 s4_393
	word32 s6_394
	word32 s7_395
	word32 s8_396
	word32 s9_397
	word32 s10_398
	word32 s11_399
	ra = at_dump_noend(at_dump_noend(at_dump_noend(ra, s1_12, s1_12 + -1792<i32>, a2, a3, a4, s3_13, mstatus, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_361, out s1_46, out a0_362, out a1_363, out a2_37, out a3_38, out a4_39, out a5_364, out s2_365, out s3_50, out s4_366, out s5_367, out s6_368, out s7_369, out s8_370, out s9_371, out s10_372, out s11_373, out mstatus_43), s1_46, s3_50 + -504<i32>, a2_37, a3_38, a4_39, s3_50, mstatus_43, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_374, out s1_79, out a0_375, out a1_376, out a2_70, out a3_71, out a4_72, out a5_377, out s2_378, out s3_83, out s4_379, out s5_380, out s6_381, out s7_382, out s8_383, out s9_384, out s10_385, out s11_386, out mstatus_76), s1_79, s1_79 + -1792<i32>, a2_70, a3_71, a4_72, s3_83, mstatus_76, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_387, out s1_388, out a0_389, out a1_390, out a2_100, out a3_101, out a4_102, out a5_103, out s2_391, out s3_392, out s4_393, out s5_115, out s6_394, out s7_395, out s8_396, out s9_397, out s10_398, out s11_399, out mstatus)
	word32 a0_400
	word32 a1_401
	word32 a5_402
	word32 s4_403
	word32 s2_137
	branch vTaskDelay(0xA<32>, a2_100, a3_101, a4_102, a5_103, mstatus, dwArg04, dwArg08, dwArg0118, dwArg0158, out s1_12, out a0_400, out a1_401, out a2, out a3, out a4, out a5_402, out s2_137, out s3_13, out s4_403) != s5_115 l2307E368
l2307E390:
	word32 s0_143 = 0<32>
	word32 s1_144 = 0x4200F000<32>
	word32 s3_145 = 0x4200F000<32>
l2307E39C:
	branch s0_143 <u Mem21[s1_144 + 1760<i32>:int32] l2307E3B8
l2307E3B8:
	word32 a2_162
	word32 a3_163
	word32 mstatus_168
	word32 s0_170
	word32 s1_171
	word32 s3_175
	word32 s4_176
	word32 s5_177
	word32 a2_197
	word32 a3_198
	word32 a4_199
	word32 mstatus_203
	word32 s1_206
	word32 s2_209
	word32 s3_210
	word32 a2_227
	word32 a3_228
	word32 a4_229
	word32 a5_230
	word32 a0_404
	word32 a1_405
	word32 a4_406
	word32 a5_407
	word32 s2_408
	word32 s6_409
	word32 s7_410
	word32 s8_411
	word32 s9_412
	word32 s10_413
	word32 s11_414
	word32 s0_415
	word32 a0_416
	word32 a1_417
	word32 a5_418
	word32 s4_419
	word32 s5_420
	word32 s6_421
	word32 s7_422
	word32 s8_423
	word32 s9_424
	word32 s10_425
	word32 s11_426
	word32 s0_427
	word32 s1_428
	word32 a0_429
	word32 a1_430
	word32 s2_431
	word32 s3_432
	word32 s4_433
	word32 s5_434
	word32 s6_435
	word32 s7_436
	word32 s8_437
	word32 s9_438
	word32 s10_439
	word32 s11_440
	ra = at_dump_noend(at_dump_noend(at_dump_noend(ra, s1_144, s2_137 + -1792<i32>, a2, a3, a4, s3_145, mstatus, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_170, out s1_171, out a0_404, out a1_405, out a2_162, out a3_163, out a4_406, out a5_407, out s2_408, out s3_175, out s4_176, out s5_177, out s6_409, out s7_410, out s8_411, out s9_412, out s10_413, out s11_414, out mstatus_168), s1_171, s4_176 + -504<i32>, a2_162, a3_163, s0_170 + s5_177, s3_175, mstatus_168, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_415, out s1_206, out a0_416, out a1_417, out a2_197, out a3_198, out a4_199, out a5_418, out s2_209, out s3_210, out s4_419, out s5_420, out s6_421, out s7_422, out s8_423, out s9_424, out s10_425, out s11_426, out mstatus_203), s1_206, s2_209 + -1792<i32>, a2_197, a3_198, a4_199, s3_210, mstatus_203, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_427, out s1_428, out a0_429, out a1_430, out a2_227, out a3_228, out a4_229, out a5_230, out s2_431, out s3_432, out s4_433, out s5_434, out s6_435, out s7_436, out s8_437, out s9_438, out s10_439, out s11_440, out mstatus)
	word32 a0_441
	word32 a1_442
	word32 a5_443
	word32 s4_444
	s0_143 = vTaskDelay(0xA<32>, a2_227, a3_228, a4_229, a5_230, mstatus, dwArg04, dwArg08, dwArg0118, dwArg0158, out s1_144, out a0_441, out a1_442, out a2, out a3, out a4, out a5_443, out s2_137, out s3_145, out s4_444)
l2307E3A4:
	return
at_help_exit:


void help_handler(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg88, word32 dwArg8C, word32 dwArg94, word32 dwArg98, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgE0, word32 dwArgE4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
help_handler_entry:
l2307E3E8:
	word32 a0_11
	word32 a4_14
	word32 s4_18
	word32 s1_23
	word32 a3_28
	word32 s0_128
	word32 a2_129
	word32 a5_130
	word32 s2_131
	word32 s3_132
	word32 s5_133
	word32 ra_29 = at_get_parameters(ra, a0, 0<32>, 0<32>, 0<32>, a5, dwArg94, dwArg98, dwArgC4, dwArgE0, dwArgE4, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s0_128, out s1_23, out a0_11, out a2_129, out a3_28, out a4_14, out a5_130, out s2_131, out s3_132, out s4_18, out s5_133)
	branch a0_11 != 0<32> l2307E400
l2307E400:
	return
l2307E3F8:
l2307E3FC_thunk_at_help:
	at_help(ra_29, s1_23, dwArg10, a3_28, a4_14, s4_18, mstatus, dwArg04, dwArg08, dwArg3C, dwArg40, dwArg44, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, dwArg0118, dwArg0158)
	return
help_handler_exit:


word32 at_init(word32 ra, word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_cmd_init
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
at_init_entry:
l2307E408:
	word32 t1_71
	word32 a0_72
	word32 a1_73
	word32 a2_74
	word32 a3_19
	word32 a4_20
	word32 a5_21
	word32 ra_22 = memset(ra, 0x42027944<32>, 0<32>, 8<32>, out t1_71, out a0_72, out a1_73, out a2_74, out a3_19, out a4_20, out a5_21)
	branch a0 == 0<32> l2307E446
l2307E426:
	Mem29[a5_21:word32] = 0x42027944<32>
	Mem34[a5_21 + 4<i32>:word32] = 0x42027944<32>
	word32 t1_75
	word32 a0_76
	word32 a1_77
	word32 a2_78
	ra_22 = memset(ra_22, 0x4201BEDC<32>, 0<32>, 1032<i32>, out t1_75, out a0_76, out a1_77, out a2_78, out a3_19, out a4_20, out a5_21)
l2307E446:
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_21
	return ra_22
at_init_exit:


void at_command_register(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      usr_at_cmd_register
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
at_command_register_entry:
l2307E450:
	branch a0 == 0<32> l2307E466
l2307E466:
	return
l2307E452:
	Mem6[0x4200F6DC<32>:word32] = a0
	Mem9[0x4200F6E0<32>:word32] = a1
	return
at_command_register_exit:


void at_parse(word32 ra, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_cmd_exec
// MayUse:  mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
at_parse_exit:
at_parse_entry:
l2307E46A:
	word32 sp_134 = fp + -128<i32>
	word32 a2_767
	word32 a1_766
	word32 a5_763
	word32 a3_761
	word32 a2_760
	word32 a0_758
	word32 t1_757
	word32 a3_768
	word32 a5_769
	word32 t1_764
	word32 a0_765
	word32 a4_762
	word32 a1_759
	word32 a4_167
	word32 ra_104 = memset(memset(ra, 0x4202794C<32>, 0<32>, 1304<i32>, out t1_757, out a0_758, out a1_759, out a2_760, out a3_761, out a4_762, out a5_763), 0x4201BEDC<32>, 0<32>, 1032<i32>, out t1_764, out a0_765, out a1_766, out a2_767, out a3_768, out a4_167, out a5_769)
l2307E4C8:
	word32 a0_69
	word32 s11_81
	word32 a5_782
	word32 a3_117
	word32 s3_107
	word32 s2_106
	word32 s7_111
	word32 s8_112
	word32 s4_108
	word32 s5_109
	word32 s6_110
	word32 s10_113
	word32 s9_129
	word32 s1_100
	word32 s0_105
	ra_104 = at_queue_get(ra_104, sp_134 + 23<i32>, a4_167, out s0_105, out s1_100, out a0_69, out a3_117, out a4_167, out a5_782, out s2_106, out s3_107, out s4_108, out s5_109, out s6_110, out s7_111, out s8_112, out s9_129, out s10_113, out s11_81)
	branch a0_69 != 0<32> l2307E530
l2307E4D2:
	word32 a5_116 = Mem93[s5_109 + 224<i32>:int32]
	branch a5_116 == 0<32> l2307E4E8
l2307E4D8:
	word32 a5_96 = Mem93[0x42027948<32>:int32]
	call a5_96 (retsize: 0;)
		uses: a0:sp_65 + 23<i32>,a1:1<32>,a5:a5_96,mstatus:mstatus_364,ra:ra_79,s0:s0_73,s1:s1_74,s10:s10_80,s11:s11_81,s2:s2_82,s3:s3_83,s4:s4_84,s5:s5_85,s6:s6_86,s7:s7_87,s8:s8_88,s9:s9_89
		defs: a3:a3_117,a5:a5_116,ra:ra_104,s0:s0_105,s1:s1_100,s10:s10_113,s2:s2_106,s3:s3_107,s4:s4_108,s5:s5_109,s6:s6_110,s7:s7_111,s8:s8_112,sp:sp_99
l2307E4E8:
	word32 s11_127 = s1_100 + -1716<i32>
	s9_129 = Mem93[s11_127:int32]
	branch s9_129 != 0<32> l2307E610
l2307E610:
	a5_116 = 1<32>
	branch s9_129 != 1<32> l2307E516
l2307E616:
	word32 a5_818
	word32 a0_131 = xTaskGetTickCount(out a5_818)
	word32 a5_133 = Mem93[s11_127 + 4<i32>:int32]
	word32 a2_135 = CONVERT(Mem93[sp_134 + 23<i32>:byte], byte, word32)
	Mem138[s11_127 + 4<i32>:word32] = a5_133 + 1<i32>
	Mem140[a5_133 + s11_127 + 274<i32>:byte] = SLICE(a2_135, byte, 0)
	s6_110 = a0_131
	a3_117 = a5_133 + 1<i32>
	a5_116 = Mem140[s11_127 + 12<i32>:int32]
	s4_108 = 1<32>
	branch a5_133 + 1<i32> <u a5_116 l2307E516
l2307E63C:
	branch a5_133 <=u -1022<i32> l2307E648
l2307E644:
	Mem144[s11_127 + 4<i32>:word32] = 0<32>
l2307E648:
	word32 a5_825
	word32 a2_822
	word32 a3_823
	word32 a4_824
	word32 t1_819
	word32 a0_820
	word32 a1_821
	ra_104 = memset(ra_104, s2_106 + -292<i32>, 0<32>, 1032<i32>, out t1_819, out a0_820, out a1_821, out a2_822, out a3_823, out a4_824, out a5_825)
	word32 a7_831
	word32 a3_828
	word32 a5_829
	word32 a6_830
	word32 a1_826
	word32 a2_827
	memcpy(s10_113, 0x230C4E30<32>, 0x15<32>, out a1_826, out a2_827, out a3_828, out a4_167, out a5_829, out a6_830, out a7_831)
	Mem183[0x15<32>:word32] = s0_105
l2307E4F4:
	word32 a4_187 = CONVERT(Mem93[sp_134 + 23<i32>:byte], byte, word32)
	s0_105 = Mem93[a5_116:word32]
	branch a4_187 != 0xA<32> l2307E5CC
l2307E5CC:
	a3_117 = 0xD<32>
	branch a4_187 != 0xD<32> l2307E516
l2307E5D2:
	Mem195[a5_116 + 1<i32>:word32] = s0_105
	Mem196[a5_116 + s0_105 + 4<i32>:byte] = SLICE(a4_187, byte, 0)
	word32 a0_197
	word32 a4_205
	word32 s11_209
	ra_104 = at_queue_peek(ra_104, sp_134 + 23<i32>, a4_187, out s1_100, out a0_197, out a3_117, out a4_205, out a5_116, out s2_106, out s4_108, out s5_109, out s6_110, out s7_111, out s8_112, out s9_129, out s10_113, out s11_209)
	branch a0_197 != 0<32> l2307E514
l2307E5E8:
	a5_116 = CONVERT(Mem196[sp_134 + 23<i32>:byte], byte, word32)
	branch a5_116 != s11_209 l2307E514
l2307E5F0:
	word32 a5_226
	word32 s11_836
	word32 a4_834
	word32 s3_835
	word32 s0_832
	word32 a0_833
	ra_104 = at_queue_get(ra_104, sp_134 + 23<i32>, a4_205, out s0_832, out s1_100, out a0_833, out a3_117, out a4_834, out a5_226, out s2_106, out s3_835, out s4_108, out s5_109, out s6_110, out s7_111, out s8_112, out s9_129, out s10_113, out s11_836)
	s0_105 = Mem196[a5_226:word32]
	branch a5_226 >u 1023<i32> l2307E670
l2307E602:
	Mem250[a5_226 + 1<i32>:word32] = s0_105
	a5_116 = a5_226 + s0_105
	a4_187 = CONVERT(Mem250[sp_134 + 23<i32>:byte], byte, word32)
l2307E500:
	a3_117 = 1023<i32>
	branch a5_116 >u 1023<i32> l2307E670
l2307E508:
	a3_117 = a5_116 + 1<i32>
	Mem255[a3_117:word32] = s0_105
	a5_116 = a5_116 + s0_105
l2307E510:
	Mem259[a5_116 + 4<i32>:byte] = SLICE(a4_187, byte, 0)
l2307E514:
	s3_107 = 1<32>
l2307E516:
	s0_105 = Mem263[a5_116:word32]
	branch a5_116 >u 1023<i32> l2307E670
l2307E670:
	Mem270[s0_105:word32] = 0<32>
	word32 s11_816
	word32 t4_817
	word32 s10_815
	word32 s7_812
	word32 s8_813
	word32 s9_814
	word32 s4_809
	word32 s5_810
	word32 s6_811
	word32 s3_808
	word32 s2_807
	word32 a7_806
	word32 a3_804
	word32 a5_805
	word32 a0_801
	word32 a1_802
	word32 a2_803
	word32 s1_800
	ra_104 = printf(ra_104, 0x230C4E10<32>, a3_117, Mem270[sp_134 + 8<i32>:word32], Mem270[sp_134 + 40<i32>:word32], Mem270[sp_134 + 112<i32>:word32], Mem270[sp_134 + 116<i32>:word32], Mem270[sp_134 + 152<i32>:word32], Mem270[sp_134 + 188<i32>:word32], out s1_800, out a0_801, out a1_802, out a2_803, out a3_804, out a4_167, out a5_805, out a7_806, out s2_807, out s3_808, out s4_809, out s5_810, out s6_811, out s7_812, out s8_813, out s9_814, out s10_815, out s11_816, out t4_817)
l2307E520:
	Mem307[a5_116 + 1<i32>:word32] = s0_105
	a4_167 = CONVERT(Mem307[sp_134 + 23<i32>:byte], byte, word32)
	Mem310[a5_116 + s0_105 + 4<i32>:byte] = SLICE(a4_167, byte, 0)
l2307E530:
	branch s4_108 == 0<32> l2307E568
l2307E534:
	word32 a5_770
	branch xTaskGetTickCount(out a5_770) - s6_110 <=u 0x2000710<32> l2307E568
l2307E546:
	word32 a2_352
	word32 a3_353
	word32 a4_354
	word32 t1_778
	word32 a3_775
	word32 a2_774
	word32 a0_779
	word32 t1_771
	word32 a0_772
	word32 a4_776
	word32 a1_780
	word32 a5_781
	word32 a5_777
	word32 a1_773
	ra_104 = at_response(memset(memset(ra_104, s1_100 + -1716<i32>, 0<32>, 1304<i32>, out t1_771, out a0_772, out a1_773, out a2_774, out a3_775, out a4_776, out a5_777), s2_106 + -292<i32>, 0<32>, 1032<i32>, out t1_778, out a0_779, out a1_780, out a2_352, out a3_353, out a4_354, out a5_781), s1_100, 0x18<32>, a2_352, a3_353, a4_354, s3_107, mstatus, Mem370[sp_134 + 4<i32>:word32], Mem370[sp_134 + 8<i32>:word32], Mem370[sp_134 + 16<i32>:word32], Mem370[sp_134 + 20<i32>:word32], Mem370[sp_134 + 24<i32>:word32], Mem370[sp_134 + 40<i32>:word32], Mem370[sp_134 + 60<i32>:word32], Mem370[sp_134 + 64<i32>:word32], Mem370[sp_134 + 68<i32>:word32], Mem370[sp_134 + 92<i32>:word32], Mem370[sp_134 + 96<i32>:word32], Mem370[sp_134 + 100<i32>:word32], Mem370[sp_134 + 104<i32>:word32], Mem370[sp_134 + 112<i32>:word32], Mem370[sp_134 + 116<i32>:word32], Mem370[sp_134 + 136<i32>:word32], Mem370[sp_134 + 140<i32>:word32], Mem370[sp_134 + 152<i32>:word32], Mem370[sp_134 + 168<i32>:word32], Mem370[sp_134 + 172<i32>:word32], Mem370[sp_134 + 184<i32>:word32], Mem370[sp_134 + 188<i32>:word32], Mem370[sp_134 + 200<i32>:word32], Mem370[sp_134 + 216<i32>:word32], Mem370[sp_134 + 232<i32>:word32], Mem370[sp_134 + 248<i32>:word32], Mem370[sp_134 + 280<i32>:word32], out s0_105, out s1_100, out a4_167, out s2_106, out s3_107, out s5_109, out s6_110, out s7_111, out s8_112, out s9_129, out s10_113, out mstatus)
	s4_108 = 0<32>
l2307E568:
	branch s3_107 == 0<32> l2307E4C8
l2307E56C:
	word32 s3_403 = s2_106 + -292<i32>
	word32 a3_405 = Mem370[s3_403:int32]
	word32 a5_406 = 0<32>
	word32 s3_407 = s3_403 + 4<32>
	word32 a2_408 = 61<i32>
	word32 a1_409 = 0xA<32>
l2307E584:
	word32 s11_433
	word32 mstatus_617
	branch a5_406 < a3_405 l2307E682
l2307E682:
	word32 a4_416 = CONVERT(Mem415[s3_407:byte], byte, word32)
	branch (a4_416 & 253<i32>) == 61<i32> l2307E588
l2307E68E:
	branch a4_416 == 0xA<32> l2307E588
l2307E692:
	branch a4_416 == 0xD<32> l2307E588
l2307E696:
	branch a5_406 != 32<i32> l2307E6C6
l2307E6C6:
	Mem426[sp_134 + 28<i32> + a5_406:byte] = SLICE(a4_416, byte, 0)
	s3_407 = s3_407 + 1<32>
	a5_406 = a5_406 + 1<32>
l2307E588:
	Mem432[sp_134 + 64<i32> + a5_406 + 4060<i32>:byte] = 0<8>
	s11_433 = 1<32>
	branch a5_406 == 0<32> l2307E69C
l2307E596:
	word32 a5_473
	word32 a5_442 = Mem432[s7_111 + 1756<i32>:int32]
	word32 a2_444 = Mem432[0x4200F6E0<32>:int32]
	word32 s11_445 = 0<32>
	branch a5_442 != 0<32> l2307E700
l2307E700:
	branch s11_445 < a2_444 l2307E6D6
l2307E6D6:
	Mem454[sp_134 + 128<i32>:word32] = a5_442
	Mem455[sp_134 + 132<i32>:word32] = a2_444
	word32 a4_450 = s11_445 + 0xC<32>
	word32 a1_457 = Mem455[a5_442 + a4_450:word32]
	Mem458[sp_134 + 4<i32>:word32] = a4_450
	word32 a4_463
	word32 a3_798
	word32 a5_799
	word32 a0_459 = strcmp(sp_134 + 28<i32>, a1_457, out a1_409, out a2_408, out a3_798, out a4_463, out a5_799)
	a5_442 = 0x4200F000<32>
	s0_105 = Mem458[sp_134 + 196<i32>:word32]
	branch a0_459 == 0<32> l2307E726
l2307E726:
	a3_405 = Mem458[0x4200F000<32>:word32]
	a5_473 = Mem458[a4_463 + 0x4200F004<32>:word32]
l2307E6F8:
	a2_444 = Mem458[sp_134 + 132<i32>:word32]
	s11_445 = s11_445 + 1<32>
l2307E704:
l2307E5AA:
	word32 s11_489 = 0xC<32>
l2307E5B0:
	Mem495[sp_134 + 128<i32>:word32] = Mem491[a1_409:word32]
	word32 a5_784
	word32 a4_783
	branch strcmp(sp_134 + 28<i32>, a1_409, out a1_409, out a2_408, out a3_405, out a4_783, out a5_784) == 0<32> l2307E706
l2307E706:
	word32 s11_507 = s11_489 + 0<32>
	s11_445 = s11_507 + 0x230C4CB8<32>
	a5_473 = Mem495[s11_507 + 0x230C4CBC<32>:int32]
l2307E71A:
	branch a5_473 == 0<32> l2307E69A
l2307E71C:
	Mem518[sp_134 + 12<i32>:word32] = s3_407
	word32 a0_592
	call a5_473 (retsize: 0;)
		uses: a0:sp_369 + 24<i32>,mstatus:mstatus_617,ra:ra_531,s0:s0_532,s1:s1_525,s10:s10_572,s11:s11_587,s2:s2_402,s3:s3_414,s4:s4_544,s5:s5_550,s6:s6_561,s7:s7_436,s8:s8_481,s9:s9_582
		defs: a0:a0_592,a2:a2_590,a3:a3_606,mstatus:mstatus_617,ra:ra_593,s1:s1_589,s3:s3_596,sp:sp_588
	s11_433 = a0_592
	mstatus = mstatus_617
l2307E5BE:
	s11_489 = s11_489 + 1<32>
	branch s11_489 != 0x10<32> l2307E5B0
l2307E5CA:
l2307E69A:
	s11_433 = 3<32>
l2307E69C:
	word32 a4_630 = Mem627[s1_100 + -1716<i32>:int32]
	branch a4_630 != 1<32> l2307E6BA
l2307E6A6:
	branch s11_433 == 0x17<32> l2307E6BA
l2307E6AC:
	word32 a5_797
	word32 a1_796
	word32 a0_795
	word32 t1_794
	ra_104 = memset(ra_104, s1_100 + -1716<i32>, 0<32>, 1304<i32>, out t1_794, out a0_795, out a1_796, out a2_408, out a3_405, out a4_630, out a5_797)
l2307E6BA:
	word32 s6_789
	word32 s5_788
	word32 s3_787
	word32 s2_786
	word32 s1_785
	word32 s0_704
	word32 s10_793
	word32 s9_792
	word32 s8_791
	word32 s7_790
	ra_104 = at_response(ra_104, s1_100, s11_433, a2_408, a3_405, a4_630, s3_407, mstatus, Mem627[sp_134 + 4<i32>:word32], Mem627[sp_134 + 8<i32>:word32], Mem627[sp_134 + 16<i32>:word32], Mem627[sp_134 + 20<i32>:word32], Mem627[sp_134 + 24<i32>:word32], Mem627[sp_134 + 40<i32>:word32], Mem627[sp_134 + 60<i32>:word32], Mem627[sp_134 + 64<i32>:word32], Mem627[sp_134 + 68<i32>:word32], Mem627[sp_134 + 92<i32>:word32], Mem627[sp_134 + 96<i32>:word32], Mem627[sp_134 + 100<i32>:word32], Mem627[sp_134 + 104<i32>:word32], Mem627[sp_134 + 112<i32>:word32], Mem627[sp_134 + 116<i32>:word32], Mem627[sp_134 + 136<i32>:word32], Mem627[sp_134 + 140<i32>:word32], Mem627[sp_134 + 152<i32>:word32], Mem627[sp_134 + 168<i32>:word32], Mem627[sp_134 + 172<i32>:word32], Mem627[sp_134 + 184<i32>:word32], Mem627[sp_134 + 188<i32>:word32], Mem627[sp_134 + 200<i32>:word32], Mem627[sp_134 + 216<i32>:word32], Mem627[sp_134 + 232<i32>:word32], Mem627[sp_134 + 248<i32>:word32], Mem627[sp_134 + 280<i32>:word32], out s0_704, out s1_785, out a4_167, out s2_786, out s3_787, out s5_788, out s6_789, out s7_790, out s8_791, out s9_792, out s10_793, out mstatus)
	Mem710[s0_704:word32] = 0<32>


void at_callback_do(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_sync_mode
//      set_ip_handler
//      create_tcp_udp_handler
//      close_network_handler
//      send_data_handler
//      ap_server_handler
//      client_ssl_config_path
//      client_ssl_set_sni
//      client_ssl_set_alpn
// MayUse:  a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 t1
// Preserved: sp
at_callback_do_entry:
l2307E72E:
	Mem6[0x42027E64<32>:word32] = a1
	word32 t1_8 = Mem6[0x42027944<32>:int32]
	branch t1_8 == 0<32> l2307E748
l2307E748:
	return
l2307E744:
	call t1_8 (retsize: 0;)
		uses: a1:a1,a2:0<32>
	return
at_callback_do_exit:


void ble_sync_mode(word32 ra, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 sp
ble_sync_mode_entry:
l2307E74C:
	word32 a2_24
	word32 a5_401
	word32 a4_400
	word32 a1_398
	word32 a3_399
	word32 t1_396
	word32 a0_397
	word32 ra_28 = memset(ra, fp + -572<i32>, 0<32>, 256<i32>, out t1_396, out a0_397, out a1_398, out a2_24, out a3_399, out a4_400, out a5_401)
	word32 s1_43 = Mem42[0x230C4FB0<32>:word32]
	word32 a4_46 = CONVERT(Mem45[0x230C4FB0<32>:byte], byte, word32)
	branch a4_46 != 63<i32> l2307E804
l2307E804:
	branch a4_46 == 61<i32> l2307E810
l2307E810:
	Mem50[0x230C4FB1<32>:word32] = s1_43
	word32 a0_55
	word32 a5_59
	word32 s4_62
	word32 s2_68
	word32 s3_69
	word32 s0_447
	word32 s1_448
	word32 a2_449
	word32 a3_450
	word32 a4_451
	word32 s5_452
	at_get_parameters(ra_28, s1_43, fp + -596<i32>, 1<32>, fp + -600<i32>, 0x230C4FB1<32>, dwLoc01BC, dwLoc01B8, dwLoc018C, dwLoc0170, dwLoc016C, dwLoc0148, dwLoc0128, dwLoc0108, dwLocE8, dwLocC8, out s0_447, out s1_448, out a0_55, out a2_449, out a3_450, out a4_451, out a5_59, out s2_68, out s3_69, out s4_62, out s5_452)
	branch a0_55 != 0<32> l2307E80C
l2307E822:
	branch a5_59 <= 0<32> l2307E80C
l2307E828:
	word32 a1_453
	word32 a2_454
	word32 a3_455
	word32 a4_456
	word32 a5_457
	branch strcmp(dwLoc017C, s4_62 + -1020<i32>, out a1_453, out a2_454, out a3_455, out a4_456, out a5_457) != 0<32> l2307E84C
l2307E84C:
	word32 a5_109 = 1<32>
	word32 a1_458
	word32 a2_459
	word32 a3_460
	word32 a4_461
	word32 a5_462
	branch strcmp(dwLoc017C, s3_69 + -1052<i32>, out a1_458, out a2_459, out a3_460, out a4_461, out a5_462) == 0<32> l2307E868
l2307E85A:
	word32 a1_463
	word32 a2_464
	word32 a3_465
	word32 a4_466
	word32 a5_467
	branch strcmp(dwLoc017C, s2_68 + -80<i32>, out a1_463, out a2_464, out a3_465, out a4_466, out a5_467) != 0<32> l2307E80C
l2307E866:
	a5_109 = 2<32>
l2307E868:
	Mem114[0x4200F6E4<32>:word32] = a5_109
l2307E834:
	Mem117[0x4200F6E4<32>:word32] = 0<32>
l2307E840:
	at_callback_do(fp + -316<i32>)
l2307E80C:
l2307E7B2:
	word32 a2_132
	word32 a3_133
	word32 mstatus_138
	word32 s1_141
	word32 s3_145
	word32 a2_169
	word32 a3_170
	word32 a4_171
	word32 mstatus_175
	word32 s0_177
	word32 s1_178
	word32 s3_182
	word32 a1_431
	word32 a0_430
	word32 s1_429
	word32 a2_432
	word32 a3_433
	word32 s0_428
	word32 s10_426
	word32 s11_427
	word32 s9_425
	word32 s7_423
	word32 s8_424
	word32 s6_422
	word32 s4_420
	word32 s5_421
	word32 a5_418
	word32 s2_419
	word32 a0_416
	word32 a1_417
	word32 s10_414
	word32 s11_415
	word32 s8_412
	word32 s9_413
	word32 s7_411
	word32 s5_409
	word32 s6_410
	word32 s2_407
	word32 s4_408
	word32 a5_406
	word32 a1_404
	word32 a4_405
	word32 a0_403
	word32 s0_402
	word32 a4_434
	word32 a5_435
	word32 s2_436
	word32 s3_437
	word32 s4_438
	word32 s5_439
	word32 s6_440
	word32 s7_441
	word32 s8_442
	word32 s9_443
	word32 s10_444
	word32 s11_445
	word32 mstatus_446
	at_dump_noend(at_dump_noend(at_dump_noend(ra_28, s1_43, 0x230C6900<32>, a2_24, 63<i32>, a4_46, 0x230B4000<32>, mstatus, dwLoc025C, 0x230C4FB0<32>, dwLoc024C, dwLoc0248, dwLoc0204, dwLoc0200, dwLoc01FC, 0xFFFD00<32>, dwLoc01B8, dwLoc01B4, dwLoc0188, dwLoc0178, dwLoc0148, out s0_402, out s1_141, out a0_403, out a1_404, out a2_132, out a3_133, out a4_405, out a5_406, out s2_407, out s3_145, out s4_408, out s5_409, out s6_410, out s7_411, out s8_412, out s9_413, out s10_414, out s11_415, out mstatus_138), s1_141, 0x230C4E88<32>, a2_132, a3_133, fp + -32<i32>, s3_145, mstatus_138, dwLoc025C, 0x230C4FB0<32>, dwLoc024C, dwLoc0248, dwLoc0204, dwLoc0200, dwLoc01FC, 0xFFFD00<32>, dwLoc01B8, dwLoc01B4, dwLoc0188, dwLoc0178, dwLoc0148, out s0_177, out s1_178, out a0_416, out a1_417, out a2_169, out a3_170, out a4_171, out a5_418, out s2_419, out s3_182, out s4_420, out s5_421, out s6_422, out s7_423, out s8_424, out s9_425, out s10_426, out s11_427, out mstatus_175), s1_178, s0_177 + -1792<i32>, a2_169, a3_170, a4_171, s3_182, mstatus_175, dwLoc025C, 0x230C4FB0<32>, dwLoc024C, dwLoc0248, dwLoc0204, dwLoc0200, dwLoc01FC, 0xFFFD00<32>, dwLoc01B8, dwLoc01B4, dwLoc0188, dwLoc0178, dwLoc0148, out s0_428, out s1_429, out a0_430, out a1_431, out a2_432, out a3_433, out a4_434, out a5_435, out s2_436, out s3_437, out s4_438, out s5_439, out s6_440, out s7_441, out s8_442, out s9_443, out s10_444, out s11_445, out mstatus_446)
l2307E7E6:
	return
ble_sync_mode_exit:


void set_ip_handler(word32 ra, word32 a3, word32 dwArg08, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: ra s0 sp
set_ip_handler_entry:
	byte bLoc0114_136 = SLICE(dwLoc0114, byte, 0)
l2307E876:
	word32 s4_207
	word32 s5_208
	word32 s2_205
	word32 s3_206
	word32 a5_203
	word32 a7_204
	word32 a3_201
	word32 a4_202
	word32 a1_199
	word32 a2_200
	word32 s1_197
	word32 a0_198
	word32 s6_209
	word32 s7_210
	word32 s8_211
	word32 s9_212
	word32 s10_213
	word32 s11_214
	word32 t4_215
	word32 ra_23 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0168, dwLoc0148, dwLoc0100, dwLocFC, dwLocD8, dwLocB4, out s1_197, out a0_198, out a1_199, out a2_200, out a3_201, out a4_202, out a5_203, out a7_204, out s2_205, out s3_206, out s4_207, out s5_208, out s6_209, out s7_210, out s8_211, out s9_212, out s10_213, out s11_214, out t4_215)
	word32 a3_61 = CONVERT(bLoc0114_136, byte, word32)
	branch a3_61 != 63<i32> l2307E8F8
l2307E8F8:
	branch a3_61 != 61<i32> l2307E8EA
l2307E902:
	word32 a0_71
	word32 a4_74
	word32 s0_216
	word32 s1_217
	word32 a2_218
	word32 a3_219
	word32 a5_220
	word32 s2_221
	word32 s3_222
	word32 s4_223
	word32 s5_224
	at_get_parameters(ra_23, dwLoc0114, fp + -360<i32>, 5<32>, fp + -364<i32>, 3<32>, dwLocCC, dwLocC8, dwLoc9C, dwLoc80, dwLoc7C, dwLoc58, dwLoc38, dwLoc18, dwArg08, dwArg28, out s0_216, out s1_217, out a0_71, out a2_218, out a3_219, out a4_74, out a5_220, out s2_221, out s3_222, out s4_223, out s5_224)
	branch a0_71 != 0<32> l2307E8EA
l2307E916:
	branch a4_74 <= 0<32> l2307E8EA
l2307E91C:
l2307E8DE:
l2307E8E4:
	at_callback_do(fp + -300<i32>)
l2307E8EA:
	return
set_ip_handler_exit:


word32 at_get_ssid_psk(word32 a1, word32 a5, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ap_cfg_handler
//      join_ap_handler
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a3 a4 a5 a6 a7 t1 t3
// Preserved: sp
at_get_ssid_psk_entry:
l2307E924:
	word32 a4_24 = 0<32>
l2307E93A:
	word32 a3_14 = CONVERT(Mem13[a5:byte], byte, word32)
	branch a3_14 != 92<i32> l2307E952
l2307E952:
	branch a3_14 != 34<i32> l2307E964
l2307E964:
	branch a3_14 != 44<i32> l2307E970
l2307E970:
	branch a3_14 == 0xD<32> l2307E97C
l2307E97C:
	a3Out = a3_14
	return 0<32>
l2307E974:
	Mem21[a1:byte] = SLICE(a3_14, byte, 0)
	a5 = a5 + 1<32>
l2307E968:
	a5 = a5 + 1<32>
	a4_24 = a4_24 + 1<32>
	a1 = a2
l2307E956:
	a5 = a5 + 1<32>
	a4_24 = a4_24 + 1<32>
l2307E942:
	a3_14 = CONVERT(Mem13[a5 + 1<i32>:byte], byte, word32)
	Mem33[a1:byte] = SLICE(a3_14, byte, 0)
	a4_24 = a4_24 + 1<32>
	a5 = a5 + 2<32>
l2307E94E:
	a1 = a1 + 1<32>
l2307E95A:
	a4_24 = a4_24 + 1<32>
	branch a4_24 <= 97<i32> l2307E93A
l2307E960:
	a3Out = a3_14
	return 4<32>
at_get_ssid_psk_exit:


void ap_cfg_handler(word32 ra, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 sp
ap_cfg_handler_entry:
l2307E980:
	word32 a5_43
	word32 s8_199
	word32 s7_198
	word32 s6_197
	word32 s5_196
	word32 s4_195
	word32 s3_194
	word32 s2_193
	word32 a7_192
	word32 a5_191
	word32 a4_190
	word32 a3_189
	word32 a2_188
	word32 a1_187
	word32 a0_186
	word32 s1_185
	word32 s9_200
	word32 s10_201
	word32 s11_202
	word32 t4_203
	word32 t1_204
	word32 a0_205
	word32 a1_206
	word32 a2_207
	word32 a3_208
	word32 a4_209
	word32 ra_44 = memset(printf(ra, 0x230C4CA0<32>, a3, dwLoc0208, dwLoc01E8, dwLoc01A0, dwLoc019C, dwLoc0178, dwLoc0154, out s1_185, out a0_186, out a1_187, out a2_188, out a3_189, out a4_190, out a5_191, out a7_192, out s2_193, out s3_194, out s4_195, out s5_196, out s6_197, out s7_198, out s8_199, out s9_200, out s10_201, out s11_202, out t4_203), fp + -528<i32>, 0<32>, 512<i32>, out t1_204, out a0_205, out a1_206, out a2_207, out a3_208, out a4_209, out a5_43)
	word32 s0_47 = Mem11[a5_43:word32]
	word32 a4_49 = CONVERT(Mem11[a5_43:byte], byte, word32)
	branch a4_49 != 63<i32> l2307E9C4
l2307E9C4:
	branch a4_49 == 61<i32> l2307E9D0
l2307E9D0:
	Mem52[a5_43 + 1<32>:word32] = s0_47
	word32 a3_210
	branch at_get_ssid_psk(fp + -528<i32>, a5_43 + 1<32>, out a3_210) != 0<32> l2307E9CC
l2307E9E0:
	at_set_ap(ra_44, fp + -272<i32>, 0<32>)
l2307E9CC:
l2307E9B4:
	at_ap_sta_get(ra_44, 63<i32>)
l2307E9B6:
	return
ap_cfg_handler_exit:


void join_ap_handler(word32 ra, word32 a3, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 sp
join_ap_handler_entry:
l2307E9EC:
	word32 s3_26
	word32 a5_43
	word32 s1_403
	word32 a0_404
	word32 a1_405
	word32 a2_406
	word32 a3_407
	word32 a4_408
	word32 a5_409
	word32 a7_410
	word32 s2_411
	word32 s4_412
	word32 s5_413
	word32 s6_414
	word32 s7_415
	word32 s8_416
	word32 s9_417
	word32 s10_418
	word32 s11_419
	word32 t4_420
	word32 t1_421
	word32 a0_422
	word32 a1_423
	word32 a2_424
	word32 a3_425
	word32 a4_426
	word32 ra_44 = memset(printf(ra, 0x230C4CA0<32>, a3, dwLoc0208, dwLoc01E8, dwLoc01A0, dwLoc019C, dwLoc0178, dwLoc0154, out s1_403, out a0_404, out a1_405, out a2_406, out a3_407, out a4_408, out a5_409, out a7_410, out s2_411, out s3_26, out s4_412, out s5_413, out s6_414, out s7_415, out s8_416, out s9_417, out s10_418, out s11_419, out t4_420), fp + -528<i32>, 0<32>, 512<i32>, out t1_421, out a0_422, out a1_423, out a2_424, out a3_425, out a4_426, out a5_43)
	word32 s0_47 = Mem11[a5_43:word32]
	word32 a4_49 = CONVERT(Mem11[a5_43:byte], byte, word32)
	branch a4_49 != 63<i32> l2307EA34
l2307EA34:
	branch a4_49 == 61<i32> l2307EA60
l2307EA60:
	Mem52[a5_43 + 1<32>:word32] = s0_47
	word32 a3_57
	branch at_get_ssid_psk(fp + -528<i32>, a5_43 + 1<32>, out a3_57) != 0<32> l2307EA24
l2307EA72:
	word32 a3_75
	word32 s1_79
	word32 a0_447
	word32 a1_448
	word32 a2_449
	word32 a4_450
	word32 a5_451
	word32 a7_452
	word32 s2_453
	word32 s3_454
	word32 s4_455
	word32 s5_456
	word32 s6_457
	word32 s7_458
	word32 s8_459
	word32 s9_460
	word32 s10_461
	word32 s11_462
	word32 t4_463
	word32 ra_78 = printf(ra_44, 0x230C4F2C<32>, a3_57, dwLoc0208, dwLoc01E8, dwLoc01A0, dwLoc019C, dwLoc0178, dwLoc0154, out s1_79, out a0_447, out a1_448, out a2_449, out a3_75, out a4_450, out a5_451, out a7_452, out s2_453, out s3_454, out s4_455, out s5_456, out s6_457, out s7_458, out s8_459, out s9_460, out s10_461, out s11_462, out t4_463)
	word32 a2_96
	word32 a3_97
	word32 a4_98
	word32 s3_104
	branch at_join_ap(ra_78, fp + -528<i32>, a3_75, out a2_96, out a3_97, out a4_98, out s3_104) == 0<32> l2307EA24
l2307EA8C:
	word32 a2_122
	word32 a3_123
	word32 a4_124
	word32 mstatus_128
	word32 s1_131
	word32 s3_135
	word32 s0_464
	word32 a0_465
	word32 a1_466
	word32 a5_467
	word32 s2_468
	word32 s4_469
	word32 s5_470
	word32 s6_471
	word32 s7_472
	word32 s8_473
	word32 s9_474
	word32 s10_475
	word32 s11_476
	word32 ra_129 = at_dump_noend(ra_78, s1_79, 0x230C6900<32>, a2_96, a3_97, a4_98, s3_104, mstatus, dwLoc020C, dwLoc0200, dwLoc01FC, dwLoc01F8, dwLoc01B4, dwLoc01B0, dwLoc01AC, dwLoc0188, dwLoc0168, dwLoc0164, dwLoc0138, dwLoc0128, dwLocF8, out s0_464, out s1_131, out a0_465, out a1_466, out a2_122, out a3_123, out a4_124, out a5_467, out s2_468, out s3_135, out s4_469, out s5_470, out s6_471, out s7_472, out s8_473, out s9_474, out s10_475, out s11_476, out mstatus_128)
	at_get_errorcode()
	word32 a2_155
	word32 a3_156
	word32 a4_157
	word32 mstatus_161
	word32 s0_163
	word32 s1_164
	word32 s3_168
	word32 a0_477
	word32 a1_478
	word32 a5_479
	word32 s2_480
	word32 s4_481
	word32 s5_482
	word32 s6_483
	word32 s7_484
	word32 s8_485
	word32 s9_486
	word32 s10_487
	word32 s11_488
	word32 s0_489
	word32 s1_490
	word32 a0_491
	word32 a1_492
	word32 a2_493
	word32 a3_494
	word32 a4_495
	word32 a5_496
	word32 s2_497
	word32 s3_498
	word32 s4_499
	word32 s5_500
	word32 s6_501
	word32 s7_502
	word32 s8_503
	word32 s9_504
	word32 s10_505
	word32 s11_506
	word32 mstatus_507
	at_dump_noend(at_dump_noend(ra_129, s1_131, 0x230C4F58<32>, a2_122, a3_123, a4_124, s3_135, mstatus_128, dwLoc020C, dwLoc0200, dwLoc01FC, dwLoc01F8, dwLoc01B4, dwLoc01B0, dwLoc01AC, dwLoc0188, dwLoc0168, dwLoc0164, dwLoc0138, dwLoc0128, dwLocF8, out s0_163, out s1_164, out a0_477, out a1_478, out a2_155, out a3_156, out a4_157, out a5_479, out s2_480, out s3_168, out s4_481, out s5_482, out s6_483, out s7_484, out s8_485, out s9_486, out s10_487, out s11_488, out mstatus_161), s1_164, s0_163 + -1792<i32>, a2_155, a3_156, a4_157, s3_168, mstatus_161, dwLoc020C, dwLoc0200, dwLoc01FC, dwLoc01F8, dwLoc01B4, dwLoc01B0, dwLoc01AC, dwLoc0188, dwLoc0168, dwLoc0164, dwLoc0138, dwLoc0128, dwLocF8, out s0_489, out s1_490, out a0_491, out a1_492, out a2_493, out a3_494, out a4_495, out a5_496, out s2_497, out s3_498, out s4_499, out s5_500, out s6_501, out s7_502, out s8_503, out s9_504, out s10_505, out s11_506, out mstatus_507)
l2307EA3C:
	word32 s3_229
	word32 a3_250
	word32 s1_427
	word32 a0_428
	word32 a2_429
	word32 a3_430
	word32 a4_431
	word32 a5_432
	word32 s2_433
	word32 s4_434
	word32 s1_435
	word32 a0_436
	word32 a2_437
	word32 a4_438
	word32 a5_439
	word32 s2_440
	word32 s3_441
	word32 s4_442
	word32 a2_443
	word32 a3_444
	word32 a4_445
	word32 s3_446
	at_join_ap(at_key_value_get(at_key_value_get(ra_44, s0_47, 0x230A99F4<32>, fp + -528<i32>, s3_26, mstatus, dwLoc0208, dwLoc01D8, dwLoc01C0, dwLoc01BC, dwLoc01A8, dwLoc0198, dwLoc0174, dwLoc0168, dwLoc0128, out s1_427, out a0_428, out a2_429, out a3_430, out a4_431, out a5_432, out s2_433, out s3_229, out s4_434), s0_47, 0x230A9A00<32>, fp + -272<i32>, s3_229, mstatus, dwLoc0208, dwLoc01D8, dwLoc01C0, dwLoc01BC, dwLoc01A8, dwLoc0198, dwLoc0174, dwLoc0168, dwLoc0128, out s1_435, out a0_436, out a2_437, out a3_250, out a4_438, out a5_439, out s2_440, out s3_441, out s4_442), fp + -528<i32>, a3_250, out a2_443, out a3_444, out a4_445, out s3_446)
l2307EA20:
	at_get_apinfo()
l2307EA22:
l2307EA24:
	return
join_ap_handler_exit:


word32 at_response(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_parse
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a4 mstatus ra s0 s1 s10 s2 s3 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
at_response_entry:
l2307EAB6:
	branch a0 == 0x1B<32> l2307EB84
l2307EB84:
	s0Out = s0
	s1Out = s1
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	mstatusOut = mstatus
	return ra
l2307EABC:
	word32 mstatus_153
	word32 a4_149
	word32 a3_148
	word32 a2_147
	word32 s1_156
	word32 ra_154
	word32 s3_160
	word32 s0_155
	word32 mstatus_187
	word32 a4_183
	word32 a3_182
	word32 a2_181
	word32 s1_190
	word32 ra_188
	word32 a0_209
	word32 s3_194
	branch a0 != 0<32> l2307EAEA
l2307EAEA:
	branch a0 != 2<32> l2307EB06
l2307EB06:
	word32 a3_12 = 0x230C5610<32>
	word32 a5_13 = 0<32>
l2307EB16:
	word32 a1_18 = CONVERT(Mem9[a3_12:byte], byte, word32)
	branch a1_18 != a0 l2307EB5C
l2307EB5C:
	a5_13 = a5_13 + 1<32>
	a3_12 = a3_12 + 8<32>
	branch a5_13 != 0x18<32> l2307EB16
l2307EB64:
	branch a0 == 1<32> l2307EB7C
l2307EB7C:
	s0Out = s0
	s1Out = s1
	a4Out = 0x230C5610<32>
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwLoc1C
	s9Out = s9
	s10Out = s10
	mstatusOut = mstatus
	return ra
l2307EB6A:
l2307EB78_thunk_printf:
	word32 a4_41
	word32 s1_44
	word32 s10_45
	word32 s2_47
	word32 s3_48
	word32 s5_50
	word32 s6_51
	word32 s7_52
	word32 s8_53
	word32 s9_54
	word32 a0_621
	word32 a1_622
	word32 a2_623
	word32 a3_624
	word32 a5_625
	word32 a7_626
	word32 s4_627
	word32 s11_628
	word32 t4_629
	word32 ra_43 = printf(ra, 0x230C55F4<32>, a3_12, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_44, out a0_621, out a1_622, out a2_623, out a3_624, out a4_41, out a5_625, out a7_626, out s2_47, out s3_48, out s4_627, out s5_50, out s6_51, out s7_52, out s8_53, out s9_54, out s10_45, out s11_628, out t4_629)
	s0Out = s0
	s1Out = s1_44
	a4Out = a4_41
	s2Out = s2_47
	s3Out = s3_48
	s5Out = s5_50
	s6Out = s6_51
	s7Out = s7_52
	s8Out = s8_53
	s9Out = s9_54
	s10Out = s10_45
	mstatusOut = mstatus
	return ra_43
l2307EB1E:
	word32 mstatus_111
	word32 a4_107
	word32 a3_106
	word32 s1_114
	word32 ra_112
	word32 a0_101
	word32 s3_118
	dwArg64 = a1_18
	branch a0 != 0x17<32> l2307EB48
l2307EB48:
	word32 s0_581
	word32 a0_582
	word32 a1_583
	word32 a2_584
	word32 a5_585
	word32 s2_586
	word32 s4_587
	word32 s5_588
	word32 s6_589
	word32 s7_590
	word32 s8_591
	word32 s9_592
	word32 s10_593
	word32 s11_594
	ra_112 = at_dump_noend(ra, s1, 0x230C6900<32>, 0x18<32>, a3_12, 0x230C5610<32>, s3, mstatus, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, dwArg68, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_581, out s1_114, out a0_582, out a1_583, out a2_584, out a3_106, out a4_107, out a5_585, out s2_586, out s3_118, out s4_587, out s5_588, out s6_589, out s7_590, out s8_591, out s9_592, out s10_593, out s11_594, out mstatus_111)
	a0_101 = 0x230C55E8<32>
l2307EB30:
	word32 s0_595
	word32 a0_596
	word32 a1_597
	word32 a2_598
	word32 a5_599
	word32 s2_600
	word32 s4_601
	word32 s5_602
	word32 s6_603
	word32 s7_604
	word32 s8_605
	word32 s9_606
	word32 s10_607
	word32 s11_608
	ra_112 = at_dump_noend(ra, s1, 0x230C6900<32>, 0x18<32>, a3_12, 0x230C5610<32>, s3, mstatus, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, dwArg68, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_595, out s1_114, out a0_596, out a1_597, out a2_598, out a3_106, out a4_107, out a5_599, out s2_600, out s3_118, out s4_601, out s5_602, out s6_603, out s7_604, out s8_605, out s9_606, out s10_607, out s11_608, out mstatus_111)
	a0_101 = 0x230C6978<32>
l2307EB42:
	word32 a0_609
	word32 a1_610
	word32 a5_611
	word32 s2_612
	word32 s4_613
	word32 s5_614
	word32 s6_615
	word32 s7_616
	word32 s8_617
	word32 s9_618
	word32 s10_619
	word32 s11_620
	ra_154 = at_dump_noend(ra_112, s1_114, a0_101, dwArg44, a3_106, a4_107, s3_118, mstatus_111, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, dwArg68, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_155, out s1_156, out a0_609, out a1_610, out a2_147, out a3_148, out a4_149, out a5_611, out s2_612, out s3_160, out s4_613, out s5_614, out s6_615, out s7_616, out s8_617, out s9_618, out s10_619, out s11_620, out mstatus_153)
l2307EAF0:
	word32 s9_566
	word32 s10_567
	word32 s11_568
	word32 s8_565
	word32 s7_564
	word32 s6_563
	word32 s5_562
	word32 s4_561
	word32 s2_560
	word32 a5_559
	word32 a1_558
	word32 a0_557
	word32 s0_556
	ra_188 = at_dump_noend(ra, s1, 0x230C6900<32>, a2, a3, a4, s3, mstatus, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, dwArg68, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_556, out s1_190, out a0_557, out a1_558, out a2_181, out a3_182, out a4_183, out a5_559, out s2_560, out s3_194, out s4_561, out s5_562, out s6_563, out s7_564, out s8_565, out s9_566, out s10_567, out s11_568, out mstatus_187)
	a0_209 = 0x230C55E0<32>
l2307EAC4:
	word32 s11_548
	word32 s10_547
	word32 s9_546
	word32 s8_545
	word32 s7_544
	word32 s6_543
	word32 s5_542
	word32 s4_541
	word32 a0_537
	word32 s0_536
	word32 a1_538
	word32 a5_539
	word32 s2_540
	ra_188 = at_dump_noend(ra, s1, 0x230C6900<32>, a2, a3, a4, s3, mstatus, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, dwArg68, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_536, out s1_190, out a0_537, out a1_538, out a2_181, out a3_182, out a4_183, out a5_539, out s2_540, out s3_194, out s4_541, out s5_542, out s6_543, out s7_544, out s8_545, out s9_546, out s10_547, out s11_548, out mstatus_187)
	a0_209 = 0x230B3304<32>
l2307EAD8:
	word32 a5_571
	word32 a0_569
	word32 a1_570
	word32 s2_572
	word32 s4_573
	word32 s5_574
	word32 s6_575
	word32 s7_576
	word32 s8_577
	word32 s9_578
	word32 s10_579
	word32 s11_580
	ra_154 = at_dump_noend(ra_188, s1_190, a0_209, a2_181, a3_182, a4_183, s3_194, mstatus_187, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, dwArg68, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_155, out s1_156, out a0_569, out a1_570, out a2_147, out a3_148, out a4_149, out a5_571, out s2_572, out s3_160, out s4_573, out s5_574, out s6_575, out s7_576, out s8_577, out s9_578, out s10_579, out s11_580, out mstatus_153)
l2307EADC:
	word32 a0_283 = s0_155 + -1792<i32>
l2307EAE6_thunk_at_dump_noend:
	word32 a4_300
	word32 mstatus_304
	word32 s0_306
	word32 s1_307
	word32 s10_308
	word32 s2_310
	word32 s3_311
	word32 s5_313
	word32 s6_314
	word32 s7_315
	word32 s8_316
	word32 s9_317
	word32 s11_555
	word32 s4_554
	word32 a5_553
	word32 a3_552
	word32 a2_551
	word32 a1_550
	word32 a0_549
	word32 ra_305 = at_dump_noend(ra_154, s1_156, a0_283, a2_147, a3_148, a4_149, s3_160, mstatus_153, dwArg04, dwArg10, dwArg14, dwArg18, dwArg5C, dwArg60, dwArg64, dwArg88, dwArgA8, dwArgAC, dwArgD8, dwArgE8, dwArg0118, out s0_306, out s1_307, out a0_549, out a1_550, out a2_551, out a3_552, out a4_300, out a5_553, out s2_310, out s3_311, out s4_554, out s5_313, out s6_314, out s7_315, out s8_316, out s9_317, out s10_308, out s11_555, out mstatus_304)
	s0Out = s0_306
	s1Out = s1_307
	a4Out = a4_300
	s2Out = s2_310
	s3Out = s3_311
	s5Out = s5_313
	s6Out = s6_314
	s7Out = s7_315
	s8Out = s8_316
	s9Out = s9_317
	s10Out = s10_308
	mstatusOut = mstatus_304
	return ra_305
at_response_exit:


void at_reset(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      reset_handler
// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 ra
// Preserved: sp
at_reset_entry:
l2307EB86:
	word32 a5_5 = Mem0[0x42027944<32>:int32]
	branch a5_5 == 0<32> l2307EBA4
l2307EBA4:
	return
l2307EB90:
	call a5_5 (retsize: 0;)
		uses: a0:1<32>,a1:0<32>,a2:0<32>,ra:ra,Stack +0084:ra
	return
at_reset_exit:


void at_version(word32 ra, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      version_handler
// MayUse:  a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: ra sp
at_version_entry:
l2307EBA8:
	word32 a3_16
	word32 s1_98
	word32 a0_99
	word32 a1_100
	word32 a2_101
	word32 a4_102
	word32 a5_103
	word32 a7_104
	word32 s2_105
	word32 s3_106
	word32 s4_107
	word32 s5_108
	word32 s6_109
	word32 s7_110
	word32 s8_111
	word32 s9_112
	word32 s10_113
	word32 s11_114
	word32 t4_115
	word32 ra_19 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0128, dwLoc0108, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_98, out a0_99, out a1_100, out a2_101, out a3_16, out a4_102, out a5_103, out a7_104, out s2_105, out s3_106, out s4_107, out s5_108, out s6_109, out s7_110, out s8_111, out s9_112, out s10_113, out s11_114, out t4_115)
	word32 a5_37 = Mem35[0x42027944<32>:int32]
	branch a5_37 == 0<32> l2307EBDE
l2307EBD6:
	call a5_37 (retsize: 0;)
		uses: a0:0x15<32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_16,ra:ra_19,Stack +0008:dwLoc0128,Stack +0028:dwLoc0108,Stack +0070:dwLocC0,Stack +0074:dwLocBC,Stack +0098:dwLoc98,Stack +00BC:dwLoc74
l2307EBDE:
	return
at_version_exit:


void at_restore(word32 ra, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      restore_handler
// MayUse:  a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: ra sp
at_restore_entry:
l2307EBE8:
	word32 a3_16
	word32 s1_98
	word32 a0_99
	word32 a1_100
	word32 a2_101
	word32 a4_102
	word32 a5_103
	word32 a7_104
	word32 s2_105
	word32 s3_106
	word32 s4_107
	word32 s5_108
	word32 s6_109
	word32 s7_110
	word32 s8_111
	word32 s9_112
	word32 s10_113
	word32 s11_114
	word32 t4_115
	word32 ra_19 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0128, dwLoc0108, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_98, out a0_99, out a1_100, out a2_101, out a3_16, out a4_102, out a5_103, out a7_104, out s2_105, out s3_106, out s4_107, out s5_108, out s6_109, out s7_110, out s8_111, out s9_112, out s10_113, out s11_114, out t4_115)
	word32 a5_37 = Mem35[0x42027944<32>:int32]
	branch a5_37 == 0<32> l2307EC1E
l2307EC16:
	call a5_37 (retsize: 0;)
		uses: a0:0x16<32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_16,ra:ra_19,Stack +0008:dwLoc0128,Stack +0028:dwLoc0108,Stack +0070:dwLocC0,Stack +0074:dwLocBC,Stack +0098:dwLoc98,Stack +00BC:dwLoc74
l2307EC1E:
	return
at_restore_exit:


void at_uart_config_get(word32 ra, word32 a3, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uart_config_handler
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 sp
at_uart_config_get_entry:
l2307EC28:
	word32 a3_20
	word32 s1_24
	word32 a2_227
	word32 a1_226
	word32 a0_225
	word32 a4_228
	word32 a5_229
	word32 a7_230
	word32 s2_231
	word32 s3_232
	word32 s4_233
	word32 s5_234
	word32 s6_235
	word32 s7_236
	word32 s8_237
	word32 s9_238
	word32 s10_239
	word32 s11_240
	word32 t4_241
	word32 ra_23 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0128, dwLoc0108, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_24, out a0_225, out a1_226, out a2_227, out a3_20, out a4_228, out a5_229, out a7_230, out s2_231, out s3_232, out s4_233, out s5_234, out s6_235, out s7_236, out s8_237, out s9_238, out s10_239, out s11_240, out t4_241)
	word32 a5_41 = Mem39[0x42027944<32>:int32]
	branch a5_41 == 0<32> l2307EC96
l2307EC60:
	word32 sp_46
	word32 a0_48
	word32 ra_50
	word32 a2_53
	word32 a6_57
	word32 a3_58
	word32 a4_59
	word32 s3_64
	word32 t1_188
	word32 t5_189
	word32 t6_190
	word32 tp_191
	call a5_41 (retsize: 0;)
		uses: a0:0x18<32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_20,a6:a6_57,mstatus:mstatus,ra:ra_23,s0:6<32>,s1:s1_24,Stack +0008:dwLoc0128,Stack +0028:dwLoc0108,Stack +0070:dwLocC0,Stack +0074:dwLocBC,Stack +0098:dwLoc98,Stack +00BC:dwLoc74,t1:t1_188,t5:t5_189,t6:t6_190,tp:tp_191
		defs: a0:a0_48,a2:a2_53,a3:a3_58,a4:a4_59,a6:a6_57,ra:ra_50,s3:s3_64,sp:sp_46,t1:t1_188,t5:t5_189,t6:t6_190,tp:tp_191
	branch a0_48 != 0<32> l2307EC96
l2307EC6C:
	word32 a2_77
	word32 a3_78
	word32 a4_79
	word32 mstatus_83
	word32 s1_86
	word32 s3_90
	word32 s0_242
	word32 a0_243
	word32 a1_244
	word32 a5_245
	word32 s2_246
	word32 s4_247
	word32 s5_248
	word32 s6_249
	word32 s7_250
	word32 s8_251
	word32 s9_252
	word32 s10_253
	word32 s11_254
	word32 ra_84 = at_dump_noend(ra_50, 0x230C7000<32>, 0x230C6900<32>, a2_53, a3_58, a4_59, s3_64, mstatus, Mem39[sp_46 + 4<i32>:word32], Mem39[sp_46 + 16<i32>:word32], Mem39[sp_46 + 20<i32>:word32], Mem39[sp_46 + 24<i32>:word32], Mem39[sp_46 + 92<i32>:word32], Mem39[sp_46 + 96<i32>:word32], Mem39[sp_46 + 100<i32>:word32], Mem39[sp_46 + 136<i32>:word32], Mem39[sp_46 + 168<i32>:word32], Mem39[sp_46 + 172<i32>:word32], Mem39[sp_46 + 216<i32>:word32], Mem39[sp_46 + 232<i32>:word32], Mem39[sp_46 + 280<i32>:word32], out s0_242, out s1_86, out a0_243, out a1_244, out a2_77, out a3_78, out a4_79, out a5_245, out s2_246, out s3_90, out s4_247, out s5_248, out s6_249, out s7_250, out s8_251, out s9_252, out s10_253, out s11_254, out mstatus_83)
	0<32> = Mem39[sp_46 + 500<i32>:word32]
	word32 a2_112
	word32 a3_113
	word32 a4_114
	word32 mstatus_118
	word32 s1_121
	word32 s3_125
	word32 s0_255
	word32 a0_256
	word32 a1_257
	word32 a5_258
	word32 s2_259
	word32 s4_260
	word32 s5_261
	word32 s6_262
	word32 s7_263
	word32 s8_264
	word32 s9_265
	word32 s10_266
	word32 s11_267
	word32 s0_268
	word32 s1_269
	word32 a0_270
	word32 a1_271
	word32 a2_272
	word32 a3_273
	word32 a4_274
	word32 a5_275
	word32 s2_276
	word32 s3_277
	word32 s4_278
	word32 s5_279
	word32 s6_280
	word32 s7_281
	word32 s8_282
	word32 s9_283
	word32 s10_284
	word32 s11_285
	word32 mstatus_286
	at_dump_noend(at_dump_noend(ra_84, s1_86, 0x230C58CC<32>, a2_77, a3_78, a4_79, s3_90, mstatus_83, Mem39[sp_46 + 4<i32>:word32], Mem39[sp_46 + 16<i32>:word32], Mem39[sp_46 + 20<i32>:word32], Mem39[sp_46 + 24<i32>:word32], Mem39[sp_46 + 92<i32>:word32], Mem39[sp_46 + 96<i32>:word32], Mem39[sp_46 + 100<i32>:word32], Mem39[sp_46 + 136<i32>:word32], Mem39[sp_46 + 168<i32>:word32], Mem39[sp_46 + 172<i32>:word32], Mem39[sp_46 + 216<i32>:word32], Mem39[sp_46 + 232<i32>:word32], Mem39[sp_46 + 280<i32>:word32], out s0_255, out s1_121, out a0_256, out a1_257, out a2_112, out a3_113, out a4_114, out a5_258, out s2_259, out s3_125, out s4_260, out s5_261, out s6_262, out s7_263, out s8_264, out s9_265, out s10_266, out s11_267, out mstatus_118), s1_121, s1_121 + -1792<i32>, a2_112, a3_113, a4_114, s3_125, mstatus_118, Mem39[sp_46 + 4<i32>:word32], Mem39[sp_46 + 16<i32>:word32], Mem39[sp_46 + 20<i32>:word32], Mem39[sp_46 + 24<i32>:word32], Mem39[sp_46 + 92<i32>:word32], Mem39[sp_46 + 96<i32>:word32], Mem39[sp_46 + 100<i32>:word32], Mem39[sp_46 + 136<i32>:word32], Mem39[sp_46 + 168<i32>:word32], Mem39[sp_46 + 172<i32>:word32], Mem39[sp_46 + 216<i32>:word32], Mem39[sp_46 + 232<i32>:word32], Mem39[sp_46 + 280<i32>:word32], out s0_268, out s1_269, out a0_270, out a1_271, out a2_272, out a3_273, out a4_274, out a5_275, out s2_276, out s3_277, out s4_278, out s5_279, out s6_280, out s7_281, out s8_282, out s9_283, out s10_284, out s11_285, out mstatus_286)
l2307EC96:
	return
at_uart_config_get_exit:


void at_uart_config(word32 ra, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uart_config_handler
// MayUse:  a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: ra s0 s1 sp
at_uart_config_entry:
l2307ECA8:
	word32 a3_31
	word32 a4_32
	word32 s1_35
	word32 a2_145
	word32 a1_144
	word32 a0_143
	word32 a5_146
	word32 a7_147
	word32 s2_148
	word32 s3_149
	word32 s4_150
	word32 s5_151
	word32 s6_152
	word32 s7_153
	word32 s8_154
	word32 s9_155
	word32 s10_156
	word32 s11_157
	word32 t4_158
	word32 ra_34 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_35, out a0_143, out a1_144, out a2_145, out a3_31, out a4_32, out a5_146, out a7_147, out s2_148, out s3_149, out s4_150, out s5_151, out s6_152, out s7_153, out s8_154, out s9_155, out s10_156, out s11_157, out t4_158)
	0<32> = dwLoc5C
	word32 a5_56 = Mem54[0x42027944<32>:int32]
	branch a5_56 == 0<32> l2307ED06
l2307ECFE:
	call a5_56 (retsize: 0;)
		uses: a0:0x17<32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_31,a4:a4_32,a5:a5_56,ra:ra_34,s0:dwLoc9C,s1:s1_35,Stack +0008:dwLoc0138,Stack +0028:dwLoc0118,Stack +0070:dwLocD0,Stack +0074:dwLocCC,Stack +0098:dwLocA8,Stack +00A4:dwLoc9C,Stack +00BC:dwLoc84,Stack +00C4:dwLoc7C,Stack +00E4:dwLoc5C
l2307ED06:
	return
at_uart_config_exit:


void at_deep_sleep_mode(word32 ra, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      deep_sleep_handler
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: ra s0 s1 sp
at_deep_sleep_mode_entry:
l2307ED18:
	word32 a3_24
	word32 s1_28
	word32 a2_119
	word32 a1_118
	word32 a0_117
	word32 a4_120
	word32 a5_121
	word32 a7_122
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s5_126
	word32 s6_127
	word32 s7_128
	word32 s8_129
	word32 s9_130
	word32 s10_131
	word32 s11_132
	word32 t4_133
	word32 ra_27 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0128, dwLoc0108, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_28, out a0_117, out a1_118, out a2_119, out a3_24, out a4_120, out a5_121, out a7_122, out s2_123, out s3_124, out s4_125, out s5_126, out s6_127, out s7_128, out s8_129, out s9_130, out s10_131, out s11_132, out t4_133)
	word32 a5_45 = Mem43[0x42027944<32>:int32]
	branch a5_45 == 0<32> l2307ED60
l2307ED58:
	call a5_45 (retsize: 0;)
		uses: a0:0x1A<32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_24,ra:ra_27,s0:a1,s1:s1_28,Stack +0008:a1,Stack +0028:dwLoc0108,Stack +0070:dwLocC0,Stack +0074:dwLocBC,Stack +0098:dwLoc98,Stack +00BC:dwLoc74
l2307ED60:
	return
at_deep_sleep_mode_exit:


void at_wifi_mode(word32 ra, word32 a0, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mode_handler
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: ra s0 sp
at_wifi_mode_entry:
l2307ED70:
	word32 a3_20
	word32 a0_110
	word32 s1_109
	word32 a1_111
	word32 a2_112
	word32 a4_113
	word32 a5_114
	word32 a7_115
	word32 s2_116
	word32 s3_117
	word32 s4_118
	word32 s5_119
	word32 s6_120
	word32 s7_121
	word32 s8_122
	word32 s9_123
	word32 s10_124
	word32 s11_125
	word32 t4_126
	word32 ra_23 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0128, dwLoc0108, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_109, out a0_110, out a1_111, out a2_112, out a3_20, out a4_113, out a5_114, out a7_115, out s2_116, out s3_117, out s4_118, out s5_119, out s6_120, out s7_121, out s8_122, out s9_123, out s10_124, out s11_125, out t4_126)
	word32 a5_41 = Mem39[0x42027944<32>:int32]
	branch a5_41 == 0<32> l2307EDB0
l2307EDA8:
	call a5_41 (retsize: 0;)
		uses: a0:0x1C<32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_20,ra:ra_23,s0:a0,Stack +0008:dwLoc0128,Stack +0028:dwLoc0108,Stack +0070:dwLocC0,Stack +0074:dwLocBC,Stack +0098:dwLoc98,Stack +00BC:dwLoc74
l2307EDB0:
	return
at_wifi_mode_exit:


void at_wifi_mode_get(word32 ra, word32 a3, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mode_handler
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 sp
at_wifi_mode_get_entry:
l2307EDBC:
	word32 a3_20
	word32 s1_24
	word32 a2_224
	word32 a1_223
	word32 a0_222
	word32 a4_225
	word32 a5_226
	word32 a7_227
	word32 s2_228
	word32 s3_229
	word32 s4_230
	word32 s5_231
	word32 s6_232
	word32 s7_233
	word32 s8_234
	word32 s9_235
	word32 s10_236
	word32 s11_237
	word32 t4_238
	word32 ra_23 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0128, dwLoc0108, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_24, out a0_222, out a1_223, out a2_224, out a3_20, out a4_225, out a5_226, out a7_227, out s2_228, out s3_229, out s4_230, out s5_231, out s6_232, out s7_233, out s8_234, out s9_235, out s10_236, out s11_237, out t4_238)
	word32 a5_41 = Mem39[0x42027944<32>:int32]
	branch a5_41 == 0<32> l2307EE22
l2307EDF4:
	word32 sp_46
	word32 a0_48
	word32 ra_50
	word32 a2_53
	word32 a3_54
	word32 a4_56
	word32 s3_61
	word32 a6_184
	word32 t1_185
	word32 t5_186
	word32 t6_187
	word32 tp_188
	call a5_41 (retsize: 0;)
		uses: a0:0x1D<32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_20,a6:a6_184,mstatus:mstatus,ra:ra_23,s0:0<32>,s1:s1_24,Stack +0008:dwLoc0128,Stack +0028:dwLoc0108,Stack +0070:dwLocC0,Stack +0074:dwLocBC,Stack +0098:dwLoc98,Stack +00BC:dwLoc74,t1:t1_185,t5:t5_186,t6:t6_187,tp:tp_188
		defs: a0:a0_48,a2:a2_53,a3:a3_54,a4:a4_56,a6:a6_184,ra:ra_50,s3:s3_61,sp:sp_46,t1:t1_185,t5:t5_186,t6:t6_187,tp:tp_188
	branch a0_48 != 0<32> l2307EE22
l2307EE00:
	word32 a3_77
	word32 a4_78
	word32 mstatus_82
	word32 s1_85
	word32 s3_89
	word32 a2_108
	word32 a3_109
	word32 a4_110
	word32 mstatus_114
	word32 s1_117
	word32 s3_121
	word32 s0_239
	word32 a0_240
	word32 a1_241
	word32 a2_242
	word32 a5_243
	word32 s2_244
	word32 s4_245
	word32 s5_246
	word32 s6_247
	word32 s7_248
	word32 s8_249
	word32 s9_250
	word32 s10_251
	word32 s11_252
	word32 s0_253
	word32 a0_254
	word32 a1_255
	word32 a5_256
	word32 s2_257
	word32 s4_258
	word32 s5_259
	word32 s6_260
	word32 s7_261
	word32 s8_262
	word32 s9_263
	word32 s10_264
	word32 s11_265
	word32 s0_266
	word32 s1_267
	word32 a0_268
	word32 a1_269
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 s2_274
	word32 s3_275
	word32 s4_276
	word32 s5_277
	word32 s6_278
	word32 s7_279
	word32 s8_280
	word32 s9_281
	word32 s10_282
	word32 s11_283
	word32 mstatus_284
	at_dump_noend(at_dump_noend(at_dump_noend(ra_50, 0x230C7000<32>, 0x230C6900<32>, a2_53, a3_54, a4_56, s3_61, mstatus, Mem39[sp_46 + 4<i32>:word32], Mem39[sp_46 + 16<i32>:word32], Mem39[sp_46 + 20<i32>:word32], Mem39[sp_46 + 24<i32>:word32], Mem39[sp_46 + 92<i32>:word32], Mem39[sp_46 + 96<i32>:word32], Mem39[sp_46 + 100<i32>:word32], Mem39[sp_46 + 136<i32>:word32], Mem39[sp_46 + 168<i32>:word32], Mem39[sp_46 + 172<i32>:word32], Mem39[sp_46 + 216<i32>:word32], Mem39[sp_46 + 232<i32>:word32], Mem39[sp_46 + 280<i32>:word32], out s0_239, out s1_85, out a0_240, out a1_241, out a2_242, out a3_77, out a4_78, out a5_243, out s2_244, out s3_89, out s4_245, out s5_246, out s6_247, out s7_248, out s8_249, out s9_250, out s10_251, out s11_252, out mstatus_82), s1_85, 0x230C58E8<32>, Mem39[sp_46 + 100<i32>:word32], a3_77, a4_78, s3_89, mstatus_82, Mem39[sp_46 + 4<i32>:word32], Mem39[sp_46 + 16<i32>:word32], Mem39[sp_46 + 20<i32>:word32], Mem39[sp_46 + 24<i32>:word32], Mem39[sp_46 + 92<i32>:word32], Mem39[sp_46 + 96<i32>:word32], Mem39[sp_46 + 100<i32>:word32], Mem39[sp_46 + 136<i32>:word32], Mem39[sp_46 + 168<i32>:word32], Mem39[sp_46 + 172<i32>:word32], Mem39[sp_46 + 216<i32>:word32], Mem39[sp_46 + 232<i32>:word32], Mem39[sp_46 + 280<i32>:word32], out s0_253, out s1_117, out a0_254, out a1_255, out a2_108, out a3_109, out a4_110, out a5_256, out s2_257, out s3_121, out s4_258, out s5_259, out s6_260, out s7_261, out s8_262, out s9_263, out s10_264, out s11_265, out mstatus_114), s1_117, s1_117 + -1792<i32>, a2_108, a3_109, a4_110, s3_121, mstatus_114, Mem39[sp_46 + 4<i32>:word32], Mem39[sp_46 + 16<i32>:word32], Mem39[sp_46 + 20<i32>:word32], Mem39[sp_46 + 24<i32>:word32], Mem39[sp_46 + 92<i32>:word32], Mem39[sp_46 + 96<i32>:word32], Mem39[sp_46 + 100<i32>:word32], Mem39[sp_46 + 136<i32>:word32], Mem39[sp_46 + 168<i32>:word32], Mem39[sp_46 + 172<i32>:word32], Mem39[sp_46 + 216<i32>:word32], Mem39[sp_46 + 232<i32>:word32], Mem39[sp_46 + 280<i32>:word32], out s0_266, out s1_267, out a0_268, out a1_269, out a2_270, out a3_271, out a4_272, out a5_273, out s2_274, out s3_275, out s4_276, out s5_277, out s6_278, out s7_279, out s8_280, out s9_281, out s10_282, out s11_283, out mstatus_284)
l2307EE22:
	return
at_wifi_mode_get_exit:


void at_get_apinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      join_ap_handler
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a5 t1
// Preserved: sp
at_get_apinfo_entry:
l2307EE34:
	word32 t1_5 = Mem0[0x42027944<32>:int32]
	branch t1_5 == 0<32> l2307EE48
l2307EE48:
	return
l2307EE40:
	call t1_5 (retsize: 0;)
		uses: a0:0x1F<32>,a1:0<32>,a2:0<32>
	return
at_get_apinfo_exit:


word32 at_join_ap(word32 ra, word32 a0, word32 a3, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      join_ap_handler
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a0 a2 a3 a4 s3
// Trashed: a0 a1 a2 a3 a4 a5 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: ra s0 s1 sp
at_join_ap_entry:
l2307EE4C:
	word32 a0_110
	word32 s1_28
	word32 a0_208
	word32 a1_209
	word32 a2_210
	word32 a3_211
	word32 a4_212
	word32 a5_213
	word32 a7_214
	word32 s2_215
	word32 s4_216
	word32 s5_217
	word32 s6_218
	word32 s7_219
	word32 s8_220
	word32 s9_221
	word32 s10_222
	word32 s11_223
	word32 t4_224
	word32 s3_123
	word32 ra_27 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0128, dwLoc0108, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_28, out a0_208, out a1_209, out a2_210, out a3_211, out a4_212, out a5_213, out a7_214, out s2_215, out s3_123, out s4_216, out s5_217, out s6_218, out s7_219, out s8_220, out s9_221, out s10_222, out s11_223, out t4_224)
	word32 a4_225
	word32 a5_226
	strcpy(fp + -292<i32>, a0, out a4_225, out a5_226)
	word32 a4_227
	word32 a5_228
	strcpy(fp + -259<i32>, s1_28, out a4_227, out a5_228)
	word32 a5_58
	word32 a1_229
	word32 a4_230
	word32 a2_116
	word32 a3_117
	word32 a0_55 = strlen(a0, out a1_229, out a2_116, out a3_117, out a4_230, out a5_58)
	Mem63[a5_58 + 316<i32>:word32] = a0_55
	word32 a4_100 = 32<i32>
	branch a0_55 >u 32<i32> l2307EEFE
l2307EEFE:
	a0_110 = 0x11<32>
l2307EEA2:
	word32 a0_68
	word32 a0_81
	word32 t1_231
	word32 a1_232
	word32 a2_233
	word32 a3_234
	word32 a4_235
	word32 a5_236
	word32 t1_237
	word32 a1_238
	word32 a4_239
	word32 a5_240
	word32 ra_87 = memset(memset(ra_27, a5_58 + 280<i32>, 0<32>, 33<i32>, out t1_231, out a0_68, out a1_232, out a2_233, out a3_234, out a4_235, out a5_236), a0_68 + 472<i32>, 0<32>, 65<i32>, out t1_237, out a0_81, out a1_238, out a2_116, out a3_117, out a4_239, out a5_240)
	word32 a4_241
	word32 a5_242
	strcpy(a0_81 + 280<i32>, a0, out a4_241, out a5_242)
	word32 a5_243
	strcpy(a0_81 + 752<i32>, s1_28, out a4_100, out a5_243)
	word32 a5_103 = Mem63[0x42027944<32>:int32]
	branch a5_103 == 0<32> l2307EEEC
l2307EEE2:
	word32 t1_132
	call a5_103 (retsize: 0;)
		uses: a0:0x1E<32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_84,ra:ra_87,s0:a0,s1:s1_28,Stack +0008:dwLoc0128,Stack +0028:dwLoc0108,Stack +0044:dwLocEC,Stack +0070:dwLocC0,Stack +0074:dwLocBC,Stack +0098:dwLoc98,Stack +00BC:dwLoc74,Stack +00E4:dwLoc4C,t1:t1_132
		defs: a0:a0_110,a2:a2_116,a3:a3_117,a4:a4_115,s3:s3_123,t1:t1_132
	branch a0_110 == 0<32> l2307EEEE
l2307EEEC:
	a0_110 = 2<32>
l2307EEEE:
	a2Out = a2_116
	a3Out = a3_117
	a4Out = a4_100
	s3Out = s3_123
	return a0_110
at_join_ap_exit:


word32 at_disconnect(word32 ra, word32 a3, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      disconnect_handler
// MayUse:  a3:[0..31] ra:[0..31]
// LiveOut: a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: ra sp
at_disconnect_entry:
l2307EF02:
	word32 s1_101
	word32 a0_102
	word32 a1_103
	word32 a5_104
	word32 a7_105
	word32 s2_106
	word32 s3_107
	word32 s4_108
	word32 s5_109
	word32 s6_110
	word32 s7_111
	word32 s8_112
	word32 s9_113
	word32 s10_114
	word32 s11_115
	word32 t4_116
	word32 a2_15
	word32 a3_16
	word32 a4_17
	word32 ra_19 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0128, dwLoc0108, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_101, out a0_102, out a1_103, out a2_15, out a3_16, out a4_17, out a5_104, out a7_105, out s2_106, out s3_107, out s4_108, out s5_109, out s6_110, out s7_111, out s8_112, out s9_113, out s10_114, out s11_115, out t4_116)
	word32 a5_37 = Mem35[0x42027944<32>:int32]
	branch a5_37 == 0<32> l2307EF3A
l2307EF30:
	call a5_37 (retsize: 0;)
		uses: a0:34<i32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_16,ra:ra_19,Stack +0008:dwLoc0128,Stack +0028:dwLoc0108,Stack +0070:dwLocC0,Stack +0074:dwLocBC,Stack +0098:dwLoc98,Stack +00BC:dwLoc74
		defs: a2:a2_46,a3:a3_47,a4:a4_49,a5:a5_45
l2307EF3A:
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_37
	return a2_15
at_disconnect_exit:


void at_set_ap(word32 ra, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ap_cfg_handler
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 sp
at_set_ap_entry:
l2307EF44:
	word32 s1_33
	word32 s2_36
	word32 a3_208
	word32 a2_207
	word32 a1_206
	word32 a0_205
	word32 a4_209
	word32 a5_210
	word32 a7_211
	word32 s3_212
	word32 s4_213
	word32 s5_214
	word32 s6_215
	word32 s7_216
	word32 s8_217
	word32 s9_218
	word32 s10_219
	word32 s11_220
	word32 t4_221
	word32 t1_222
	word32 a0_223
	word32 a1_224
	word32 a2_225
	word32 a3_226
	word32 a4_227
	word32 a5_228
	word32 t1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 ra_67 = memset(memset(printf(ra, 0x230C4ED4<32>, a3, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_33, out a0_205, out a1_206, out a2_207, out a3_208, out a4_209, out a5_210, out a7_211, out s2_36, out s3_212, out s4_213, out s5_214, out s6_215, out s7_216, out s8_217, out s9_218, out s10_219, out s11_220, out t4_221), fp + -292<i32>, 0<32>, 64<i32>, out t1_222, out a0_223, out a1_224, out a2_225, out a3_226, out a4_227, out a5_228), fp + -228<i32>, 0<32>, 64<i32>, out t1_229, out a0_230, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235)
	word32 a1_236
	word32 a2_237
	word32 a3_238
	word32 a4_239
	word32 a5_240
	word32 a1_241
	word32 a2_242
	word32 a3_243
	word32 a4_244
	word32 a5_245
	word32 a6_246
	word32 a7_247
	memcpy(fp + -292<i32>, s1_33, strlen(s1_33, out a1_236, out a2_237, out a3_238, out a4_239, out a5_240), out a1_241, out a2_242, out a3_243, out a4_244, out a5_245, out a6_246, out a7_247)
	word32 a3_108
	word32 a1_248
	word32 a2_249
	word32 a3_250
	word32 a4_251
	word32 a5_252
	word32 a1_253
	word32 a2_254
	word32 a4_255
	word32 a5_256
	word32 a6_257
	word32 a7_258
	memcpy(fp + -228<i32>, a1, strlen(a1, out a1_248, out a2_249, out a3_250, out a4_251, out a5_252), out a1_253, out a2_254, out a3_108, out a4_255, out a5_256, out a6_257, out a7_258)
	word32 a5_121 = Mem119[0x42027944<32>:int32]
	branch a5_121 == 0<32> l2307EFD0
l2307EFC6:
	call a5_121 (retsize: 0;)
		uses: a0:39<i32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_108,ra:ra_67,s0:a1,s1:s1_33,s2:s2_36,Stack +0008:dwLoc0138,Stack +0028:dwLoc0118,Stack +0070:dwLocD0,Stack +0074:dwLocCC,Stack +0098:dwLocA8,Stack +00A4:dwLoc9C,Stack +00BC:dwLoc84
l2307EFD0:
	return
at_set_ap_exit:


void at_ap_sta_get(word32 ra, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ap_cfg_handler
// MayUse:  a3:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: ra sp
at_ap_sta_get_entry:
l2307EFE4:
	word32 a3_16
	word32 s1_98
	word32 a0_99
	word32 a1_100
	word32 a2_101
	word32 a4_102
	word32 a5_103
	word32 a7_104
	word32 s2_105
	word32 s3_106
	word32 s4_107
	word32 s5_108
	word32 s6_109
	word32 s7_110
	word32 s8_111
	word32 s9_112
	word32 s10_113
	word32 s11_114
	word32 t4_115
	word32 ra_19 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0128, dwLoc0108, dwLocC0, dwLocBC, dwLoc98, dwLoc74, out s1_98, out a0_99, out a1_100, out a2_101, out a3_16, out a4_102, out a5_103, out a7_104, out s2_105, out s3_106, out s4_107, out s5_108, out s6_109, out s7_110, out s8_111, out s9_112, out s10_113, out s11_114, out t4_115)
	word32 a5_37 = Mem35[0x42027944<32>:int32]
	branch a5_37 == 0<32> l2307F01C
l2307F012:
	call a5_37 (retsize: 0;)
		uses: a0:40<i32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_16,ra:ra_19,Stack +0008:dwLoc0128,Stack +0028:dwLoc0108,Stack +0070:dwLocC0,Stack +0074:dwLocBC,Stack +0098:dwLoc98,Stack +00BC:dwLoc74
l2307F01C:
	return
at_ap_sta_get_exit:


word32 at_http_request(word32 ra, word32 a3, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_req
//      base_station_info
// MayUse:  a3:[0..31] ra:[0..31]
// LiveOut: a0 a2 a5 s11 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 sp
at_http_request_entry:
l2307F026:
	word32 s1_35
	word32 s2_38
	word32 a0_165
	word32 a1_166
	word32 a2_167
	word32 a3_168
	word32 a4_169
	word32 a5_170
	word32 a7_171
	word32 s3_172
	word32 s4_173
	word32 s8_174
	word32 s10_175
	word32 t4_176
	word32 s11_140
	word32 s5_143
	word32 s6_144
	word32 s7_145
	word32 s9_147
	word32 ra_34 = printf(ra, 0x230C4ED4<32>, a3, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_35, out a0_165, out a1_166, out a2_167, out a3_168, out a4_169, out a5_170, out a7_171, out s2_38, out s3_172, out s4_173, out s5_143, out s6_144, out s7_145, out s8_174, out s9_147, out s10_175, out s11_140, out t4_176)
	word32 a4_51
	word32 a3_56
	word32 a1_177
	word32 a2_178
	word32 a5_179
	word32 a6_180
	word32 a7_181
	memcpy(fp + -292<i32>, s2_38, 128<i32>, out a1_177, out a2_178, out a3_56, out a4_51, out a5_179, out a6_180, out a7_181)
	word32 a2_133 = dwLoc9C
	word32 a5_136 = Mem67[0x42027944<32>:int32]
	word32 a0_131 = 6<32>
	branch a5_136 == 0<32> l2307F090
l2307F084:
	call a5_136 (retsize: 0;)
		uses: a0:53<i32>,a1:fp + -300<i32>,a2:a4_51,a3:a3_56,a4:a4_51,ra:ra_34,s0:dwLoc7C,s1:s1_35,s2:s2_38,Stack +0008:dwLoc0138,Stack +0028:dwLoc0118,Stack +0070:dwLocD0,Stack +0074:dwLocCC,Stack +0098:dwLocA8,Stack +00A4:dwLoc9C,Stack +00BC:dwLoc84,Stack +00C4:dwLoc7C
		defs: a0:a0_82,a2:a2_87,a5:a5_88,s11:s11_92,s5:s5_95,s6:s6_96,s7:s7_97,s9:s9_99
l2307F090:
	a2Out = a2_133
	a5Out = a5_136
	s5Out = s5_143
	s6Out = s6_144
	s7Out = s7_145
	s9Out = s9_147
	s11Out = s11_140
	return a0_131
at_http_request_exit:


void get_text_para(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 sp
get_text_para_entry:
l2307F0A4:
	word32 a3_27 = Mem5[a0:int32]
	word32 a4_120 = 0<32>
l2307F0D4:
	word32 s1_106
	branch a4_120 < (a2 & 511<i32>) l2307F0E0
l2307F0E0:
	word32 a5_32
	word32 a1_29 = CONVERT(Mem28[a3_27:byte], byte, word32)
	s1_106 = a3_27 + 1<i32>
	branch a1_29 == 44<i32> l2307F11E
l2307F11E:
	a5_32 = 1024<i32>
l2307F0EC:
	branch a1_29 != 0xD<32> l2307F108
l2307F108:
	branch a1_29 == 0xA<32> l2307F160
l2307F160:
l2307F10C:
	branch a1_29 == 34<i32> l2307F11A
l2307F110:
	Mem42[fp + -16<i32> + a4_120 + 3840<i32>:byte] = SLICE(a1_29, byte, 0)
	a4_120 = a4_120 + 1<32>
l2307F11A:
	a3_27 = s1_106
l2307F0F0:
	branch CONVERT(Mem28[a3_27 + 1<i32>:byte], byte, word32) != 0xA<32> l2307F104
l2307F100:
	s1_106 = a3_27 + 2<i32>
l2307F104:
	a5_32 = 0xFFF800<32>
l2307F124:
	branch (a5_32 & a2) == 0<32> l2307F0DC
l2307F128:
	branch a4_120 >= (a2 & 511<i32>) l2307F142
l2307F12E:
	Mem70[fp + -16<i32> + a4_120 + 3840<i32>:byte] = 0<8>
	word32 a6_218
	word32 a7_219
	word32 a1_213
	word32 a4_216
	word32 a5_217
	word32 a2_214
	word32 a3_215
	memcpy(a1, fp + -272<i32>, a4_120 + 1<i32>, out a1_213, out a2_214, out a3_215, out a4_216, out a5_217, out a6_218, out a7_219)
l2307F0D8:
	s1_106 = a3_27
l2307F0DC:
l2307F142:
	Mem116[a0:word32] = s1_106
	return
get_text_para_exit:


void get_tdata_para(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 sp
get_tdata_para_entry:
l2307F168:
	word32 a3_25 = Mem5[a0:int32]
	word32 a4_20 = 0<32>
l2307F190:
	word32 s1_28
	branch (a2 & 511<i32>) != a4_20 l2307F19C
l2307F19C:
	word32 a1_27 = CONVERT(Mem26[a3_25:byte], byte, word32)
	s1_28 = a3_25 + 1<i32>
	branch a1_27 != 0xD<32> l2307F1FC
l2307F1FC:
	branch a1_27 == 0xA<32> l2307F20E
l2307F20E:
l2307F200:
	Mem35[fp + -272<i32> + a4_20:byte] = SLICE(a1_27, byte, 0)
	a4_20 = a4_20 + 1<32>
	a3_25 = s1_28
l2307F1A8:
	branch CONVERT(Mem26[a3_25 + 1<i32>:byte], byte, word32) != 0xA<32> l2307F1BC
l2307F1B8:
	s1_28 = a3_25 + 2<i32>
l2307F1BC:
	branch (a2 & 0xFFF800<32>) == 0<32> l2307F198
l2307F1C2:
	branch a4_20 == 0<32> l2307F1DE
l2307F1C6:
	branch a4_20 >= (a2 & 511<i32>) l2307F1DE
l2307F1CA:
	Mem56[fp + -16<i32> + a4_20 + 3840<i32>:byte] = 0<8>
	word32 a7_172
	word32 a4_169
	word32 a6_171
	word32 a5_170
	word32 a1_166
	word32 a3_168
	word32 a2_167
	memcpy(a1, fp + -272<i32>, a4_20 + 1<i32>, out a1_166, out a2_167, out a3_168, out a4_169, out a5_170, out a6_171, out a7_172)
l2307F194:
	s1_28 = a3_25
l2307F198:
l2307F1DE:
	Mem95[a0:word32] = s1_28
	return
get_tdata_para_exit:


void get_di_para(word32 s0, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 s3 sp
get_di_para_entry:
l2307F216:
	word32 a0_14 = Mem13[s0:word32]
	word32 a4_17 = 0<32>
l2307F246:
	word32 a5_56
	word32 a3_26 = CONVERT(Mem25[s0:byte], byte, word32)
	branch a3_26 != 44<i32> l2307F29C
l2307F29C:
	branch a3_26 != 0xD<32> l2307F2B8
l2307F2B8:
	branch a3_26 != 0xA<32> l2307F2C6
l2307F2C6:
	branch a3_26 == 58<i32> l2307F2BC
l2307F2CA:
	branch (a3_26 + -48<i32> & 255<i32>) >u 9<32> l2307F2E6
l2307F2D6:
	Mem38[fp + -288<i32> + a4_17:byte] = SLICE(a3_26, byte, 0)
	a4_17 = a4_17 + 1<32>
	s0 = s0 + 1<32>
	branch a4_17 != 0xB<32> l2307F246
l2307F2E6:
l2307F2BC:
	s0 = s0 + 1<32>
l2307F2A0:
	branch CONVERT(Mem25[s0 + 1<i32>:byte], byte, word32) != 0xA<32> l2307F2EC
l2307F2EC:
	s0 = s0 + 1<32>
l2307F2B0:
	s0 = s0 + 2<32>
l2307F2B2:
	a5_56 = 0xFFF800<32>
l2307F24E:
	s0 = s0 + 1<32>
	a5_56 = 1024<i32>
l2307F258:
	branch (a5_56 & a2) == 0<32> l2307F2E8
l2307F25C:
	branch a4_17 == 0<32> l2307F2E8
l2307F25E:
	branch a4_17 == 0xB<32> l2307F2E8
l2307F2E8:
l2307F264:
	Mem84[a4_17 + (fp + -32<i32>) + 3840<i32>:byte] = 0<8>
	word32 a1_86
	word32 a2_258
	word32 a4_260
	word32 a5_261
	word32 a3_259
	Mem101[atoi(fp + -288<i32>, out a1_86, out a2_258, out a3_259, out a4_260, out a5_261):word32] = a1_86
l2307F278:
	Mem114[a0_14:word32] = s0
	return
get_di_para_exit:


void get_ip_para(word32 ra, word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
get_ip_para_entry:
l2307F2F0:
	word32 s6_124 = Mem31[a0:int32]
	word32 s1_102 = 0<32>
	word32 a4_505
	word32 a1_502
	word32 a3_504
	word32 a2_503
	word32 t1_500
	word32 a0_501
	word32 a5_506
	word32 ra_110 = memset(ra, fp + -324<i32>, 0<32>, 4<32>, out t1_500, out a0_501, out a1_502, out a2_503, out a3_504, out a4_505, out a5_506)
	word32 s5_101 = 0<32>
l2307F352:
	word32 a4_60 = CONVERT(Mem59[s6_124:byte], byte, word32)
	word32 a5_133 = 44<i32>
	word32 s0_108 = s6_124
	branch a4_60 != 44<i32> l2307F3AC
l2307F3AC:
	branch a4_60 != 0xD<32> l2307F3CA
l2307F3CA:
	branch a4_60 != 0xA<32> l2307F3DA
l2307F3DA:
	branch a4_60 != 34<i32> l2307F3EC
l2307F3EC:
	branch a4_60 != 46<i32> l2307F46E
l2307F46E:
	branch (a4_60 + -48<i32> & 255<i32>) >u 9<32> l2307F426
l2307F47A:
	branch s1_102 > 2<32> l2307F426
l2307F47E:
	Mem76[fp + -64<i32> + s1_102 + 3836<i32>:byte] = SLICE(a4_60, byte, 0)
	s0_108 = s6_124 + 1<i32>
	s1_102 = s1_102 + 1<32>
l2307F3F0:
	s1_102 = 1<32>
	branch s1_102 >u 0xFFFFFFFD<32> l2307F416
l2307F3FA:
	word32 a1_533
	word32 a2_534
	word32 a3_535
	word32 a4_536
	word32 a5_537
	word32 a0_81 = atoi(fp + -324<i32>, out a1_533, out a2_534, out a3_535, out a4_536, out a5_537)
	branch a0_81 >u 255<i32> l2307F416
l2307F408:
	Mem100[fp + -64<i32> + s5_101 + 3840<i32>:byte] = SLICE(a0_81, byte, 0)
	s5_101 = s5_101 + 1<32>
	s1_102 = 0<32>
l2307F416:
	s0_108 = s6_124 + 1<i32>
	word32 t1_526
	word32 a0_527
	word32 a1_528
	word32 a2_529
	word32 a3_530
	word32 a4_531
	word32 a5_532
	ra_110 = memset(ra_110, fp + -324<i32>, 0<32>, 4<32>, out t1_526, out a0_527, out a1_528, out a2_529, out a3_530, out a4_531, out a5_532)
	branch s1_102 == 0<32> l2307F3E2
l2307F3DE:
	s0_108 = s6_124 + 1<i32>
l2307F3E2:
	s6_124 = s6_124 + 1<32>
	branch s5_101 != 4<32> l2307F352
l2307F3EA:
l2307F426:
l2307F3CE:
	s0_108 = s6_124 + 1<i32>
l2307F3B0:
	a5_133 = 0xA<32>
	branch CONVERT(Mem59[s6_124 + 1<i32>:byte], byte, word32) != 0xA<32> l2307F490
l2307F490:
	s0_108 = s6_124 + 1<i32>
l2307F3C0:
	s0_108 = s6_124 + 2<i32>
l2307F3C4:
l2307F360:
	s0_108 = s6_124 + 1<i32>
l2307F36C:
	branch (dwLoc7C & a5_133) == 0<32> l2307F428
l2307F372:
	branch s1_102 >u 0xFFFFFFFD<32> l2307F428
l2307F37A:
	word32 a1_507
	word32 a3_509
	word32 a2_508
	word32 a5_511
	word32 a4_510
	word32 a0_156 = atoi(fp + -324<i32>, out a1_507, out a2_508, out a3_509, out a4_510, out a5_511)
	branch a0_156 >u 255<i32> l2307F428
l2307F388:
	Mem176[fp + -64<i32> + s5_101 + 3840<i32>:byte] = SLICE(a0_156, byte, 0)
	branch s5_101 != 3<32> l2307F428
l2307F428:
l2307F396:
	word32 t1_512
	word32 a0_513
	word32 a2_515
	word32 a4_517
	word32 a1_514
	word32 a3_516
	word32 a5_518
	memset(ra_110, a1, 0<32>, 4<32>, out t1_512, out a0_513, out a1_514, out a2_515, out a3_516, out a4_517, out a5_518)
	word32 a5_523
	word32 a7_525
	word32 a4_522
	word32 a6_524
	word32 a1_519
	word32 a3_521
	word32 a2_520
	memcpy(a1, fp + -320<i32>, 4<32>, out a1_519, out a2_520, out a3_521, out a4_522, out a5_523, out a6_524, out a7_525)
l2307F42A:
	Mem228[a0:word32] = s0_108
	return
get_ip_para_exit:


word32 hex_to_num(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_hex_para
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
hex_to_num_entry:
l2307F496:
	branch (a0 + -48<i32> & 255<i32>) >u 9<32> l2307F4AA
l2307F4AA:
	branch (a0 + -65<i32> & 255<i32>) >u 5<32> l2307F4BE
l2307F4BE:
	word32 a0_13 = 0xFFFFFFFF<32>
	branch (a0 + -97<i32> & 255<i32>) >u 5<32> l2307F4D0
l2307F4CC:
	a0_13 = a0 + -87<i32>
l2307F4D0:
	return a0_13
l2307F4B8:
	return a0 + -55<i32>
l2307F4A6:
	return a0 + -48<i32>
hex_to_num_exit:


void get_hex_para(word32 ra, word32 s0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
get_hex_para_entry:
l2307F4D2:
	word32 a0_30 = Mem29[s0:word32]
	word32 a3_103 = 0<32>
	word32 s3_38 = 0<32>
l2307F532:
	branch s3_38 < (a2 & 511<i32>) l2307F53C
l2307F53C:
	word32 a5_117
	word32 a4_52 = CONVERT(Mem51[s0:byte], byte, word32)
	branch a4_52 != 44<i32> l2307F550
l2307F550:
	branch a4_52 != 0xD<32> l2307F5F4
l2307F5F4:
	branch a4_52 != 0xA<32> l2307F602
l2307F602:
	branch a4_52 == 58<i32> l2307F546
l2307F606:
	branch a4_52 != 34<i32> l2307F60E
l2307F60E:
	branch a3_103 > 1<32> l2307F63C
l2307F63C:
	branch a3_103 != 2<32> l2307F536
l2307F642:
	Mem81[fp + -64<i32> + s3_38 + 3840<i32>:byte] = SLICE(hex_to_num(CONVERT(bLoc0143, byte, word32)) + (hex_to_num(CONVERT(bLoc0144, byte, word32)) << 4<u32>), byte, 0)
	s3_38 = s3_38 + 1<32>
	a3_103 = 0<32>
l2307F612:
	branch (a4_52 + -48<i32> & 255<i32>) <=u 9<32> l2307F62E
l2307F61E:
	branch ((a4_52 & -33<i32>) + -65<i32> & 255<i32>) >u 5<32> l2307F536
l2307F62E:
	Mem102[fp + -64<i32> + a3_103 + 3836<i32>:byte] = SLICE(a4_52, byte, 0)
	s0 = s0 + 1<32>
	a3_103 = a3_103 + 1<32>
l2307F60A:
	s0 = s0 + 1<32>
l2307F5F8:
	s0 = s0 + 1<32>
l2307F554:
	branch CONVERT(Mem51[s0 + 1<i32>:byte], byte, word32) == 0xA<32> l2307F5F0
l2307F5F0:
	s0 = s0 + 2<32>
l2307F564:
	s0 = s0 + 1<32>
l2307F566:
	a5_117 = 0xFFF800<32>
l2307F544:
	s0 = s0 + 1<32>
l2307F546:
	a5_117 = 1024<i32>
l2307F56A:
	branch (a5_117 & a2) == 0<32> l2307F538
l2307F56E:
	branch a3_103 != 2<32> l2307F538
l2307F574:
	Mem172[s3_38 + (fp + -64<i32>) + 3840<i32>:byte] = SLICE((hex_to_num(CONVERT(bLoc0144, byte, word32)) << 4<i32>) + hex_to_num(CONVERT(bLoc0143, byte, word32)), byte, 0)
	word32 a3_478
	word32 t1_474
	word32 a2_477
	word32 a0_475
	word32 a5_480
	word32 a4_479
	word32 a1_476
	memset(ra, a1, 0<32>, a2 & 511<i32>, out t1_474, out a0_475, out a1_476, out a2_477, out a3_478, out a4_479, out a5_480)
	word32 a1_481
	word32 a6_486
	word32 a5_485
	word32 a4_484
	word32 a3_483
	word32 a2_482
	word32 a7_487
	memcpy(a1, fp + -320<i32>, s3_38 + 1<i32>, out a1_481, out a2_482, out a3_483, out a4_484, out a5_485, out a6_486, out a7_487)
	s0 = s0 + 1<32>
l2307F536:
l2307F538:
l2307F5AC:
	Mem216[a0_30:word32] = s0
	return
get_hex_para_exit:


void get_hi_para(word32 ra, word32 a0, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 s3 sp
get_hi_para_entry:
l2307F672:
	word32 s3_121 = a0
	word32 a0_16 = Mem13[a0:word32]
	word32 a4_18 = 0<32>
l2307F6A4:
	word32 a5_72
	word32 a3_28 = CONVERT(Mem27[a0_16:byte], byte, word32)
	word32 s0_116 = a0_16
	branch a3_28 != 44<i32> l2307F702
l2307F702:
	branch a3_28 != 0xD<32> l2307F71E
l2307F71E:
	branch a3_28 != 0xA<32> l2307F72E
l2307F72E:
	branch a3_28 != 34<i32> l2307F742
l2307F742:
	branch (a3_28 + -48<i32> & 255<i32>) <=u 9<32> l2307F75E
l2307F74E:
	branch ((a3_28 & -33<i32>) + -65<i32> & 255<i32>) >u 5<32> l2307F73C
l2307F75E:
	Mem50[fp + -32<i32> + a4_18 + 3840<i32>:byte] = SLICE(a3_28, byte, 0)
	s0_116 = a0_16 + 1<i32>
	a4_18 = a4_18 + 1<32>
l2307F732:
	s0_116 = a0_16 + 1<i32>
l2307F736:
	a0_16 = a0_16 + 1<32>
	branch a4_18 != 0xB<32> l2307F6A4
l2307F73C:
l2307F722:
	s0_116 = a0_16 + 1<i32>
l2307F706:
	branch CONVERT(Mem27[a0_16 + 1<i32>:byte], byte, word32) != 0xA<32> l2307F770
l2307F770:
	s0_116 = a0_16 + 1<32>
l2307F716:
	s0_116 = a0_16 + 2<32>
l2307F718:
	a5_72 = 0xFFF800<32>
l2307F6AE:
	s0_116 = a0_16 + 1<i32>
	a5_72 = 1024<i32>
l2307F6BA:
	branch (a5_72 & a2) == 0<32> l2307F73E
l2307F6BE:
	branch a4_18 == 0<32> l2307F73E
l2307F6C0:
	branch a4_18 > 0xA<32> l2307F73E
l2307F73E:
l2307F6C6:
	Mem102[a4_18 + (fp + -32<i32>) + 3840<i32>:byte] = 0<8>
	word32 s1_365
	word32 s2_366
	s0_116 = sscanf(ra, fp + -288<i32>, 0x230C590C<32>, dwLoc010C, out s1_365, out s2_366, out s3_121)
l2307F6DE:
	Mem146[s3_121:word32] = s0_116
	return
get_hi_para_exit:


word32 at_get_newline(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_get_parameters
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
at_get_newline_entry:
l2307F774:
	word32 a5_5 = CONVERT(Mem0[a0:byte], byte, word32)
	word32 a4_14 = 0xA<32>
	branch a5_5 == 0xA<32> l2307F78A
l2307F78A:
l2307F77E:
	a4_14 = 0xD<32>
	branch a5_5 == 0xD<32> l2307F78C
l2307F78C:
	a4Out = a4_14
	a5Out = <invalid>
	return 0<32>
l2307F786:
	a4Out = 0xD<32>
	a5Out = <invalid>
	return 3<32>
at_get_newline_exit:


word32 at_get_parameters(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 dwArgA4, word32 dwArgA8, word32 dwArgD4, word32 dwArgF0, word32 dwArgF4, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __usr_at_cmd_demo
//      wifi_supports
//      attention_handler
//      wifi_mode_handler
//      http_req
//      domain_name_resolution
//      base_station_info
//      deep_sleep_handler
//      setautoconnect_handler
//      scan_handler_opt
//      scan_handler
//      uart_config_handler
//      reset_handler
//      echo_on_handler
//      restore_handler
//      version_handler
//      help_handler
//      ble_sync_mode
//      set_ip_handler
//      create_tcp_udp_handler
//      close_network_handler
//      send_data_handler
//      ap_server_handler
//      client_ssl_config_path
//      client_ssl_set_sni
//      client_ssl_set_alpn
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] ra:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00D4:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
at_get_parameters_entry:
l2307F78E:
	word32 a0_128
	word32 a0_24 = Mem21[a0:word32]
	branch a1 == 0<32> l2307F7D4
l2307F7AA:
	s5 = a2
	branch a2 == 0<32> l2307F7D4
l2307F7D4:
	a0_128 = at_get_newline(a0_24, out a4, out a5)
l2307F7AE:
	s2 = 0<32>
	s1 = 0<32>
	s3 = 0x230C58F4<32>
	branch a2 > 0<32> l2307F7F0
l2307F7F0:
	a5 = CONVERT(Mem25[a1:byte], byte, word32)
	branch a5 >u 5<32> l2307F83E
l2307F83E:
	a0_128 = 4<32>
l2307F7F8:
	word32 a5_46 = Mem25[(a5 << 2<i32>) + 0x230C58F4<32>:word32]
	word32 s4_51
	word32 ra_52
	word32 s0_53
	word32 s1_54
	word32 s2_55
	word32 s3_56
	word32 s5_57
	word32 a0_60
	word32 a2_62
	word32 a3_63
	word32 a5_64
	word32 a4_69
	call a5_46 (retsize: 0;)
		uses: a0:fp + -52<i32>,a1:a1,a2:a2,a3:a3,a4:a4_69,a5:a5_46,ra:ra,s0:Mem25[a1 + 4<i32>:word32],s1:0<32>,s2:0<32>,s3:0x230C58F4<32>,s4:a0,s5:a2,s6:a3,s7:5<32>,Stack +00E4:dwArgA4,Stack +00E8:dwArgA8,Stack +0114:dwArgD4,Stack +0130:dwArgF0,Stack +0134:dwArgF4,Stack +0158:dwArg0118,Stack +0178:dwArg0138,Stack +0198:dwArg0158,Stack +01B8:dwArg0178,Stack +01D8:dwArg0198
		defs: a0:a0_60,a2:a2_62,a3:a3_63,a4:a4_69,a5:a5_64,ra:ra_52,s0:s0_53,s1:s1_54,s2:s2_55,s3:s3_56,s4:s4_51,s5:s5_57
	s0Out = s0_53
	s1Out = s1_54
	a0Out = a0_60
	a2Out = a2_62
	a3Out = a3_63
	a4Out = a4_69
	a5Out = a5_64
	s2Out = s2_55
	s3Out = s3_56
	s4Out = s4_51
	s5Out = s5_57
	return ra_52
l2307F7C4:
	Mem74[a0:word32] = a5
	Mem75[a3:word32] = 0<32>
	a0_128 = 0<32>
l2307F7DA:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1
	a0Out = a0_128
	a2Out = dwArg0138
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArgF4
	s5Out = s5
	return ra
at_get_parameters_exit:


word32 at_queue_init(word32 ra, word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_cmd_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3
// Preserved: sp
at_queue_init_entry:
l2307F842:
	branch a0 == 0<32> l2307F890
l2307F846:
	branch a2 == 0<32> l2307F890
l2307F890:
	return ra
l2307F848:
	word32 a5_107
	word32 a4_106
	word32 a3_105
	word32 a2_104
	word32 a1_103
	word32 a0_102
	word32 t1_101
	word32 ra_34 = memset(ra, 0x4201C2F4<32>, 0<32>, 0x14<32>, out t1_101, out a0_102, out a1_103, out a2_104, out a3_105, out a4_106, out a5_107)
	Mem38[0x4200F6E8<32>:word32] = a2
	Mem41[0x4201C2F4<32>:word32] = a0
	Mem42[0x4201C2F8<32>:word32] = a1
	return ra_34
at_queue_init_exit:


word32 at_queue_get(word32 ra, word32 a0, word32 a4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_parse
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31]
// LiveOut: a0 a3 a4 a5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
at_queue_get_entry:
l2307F894:
	word32 a5_107
	word32 a0_106
	word32 a5_12 = Mem11[0x4201C2FC<32>:word32]
	word32 s1_14 = a0
	branch a5_12 > 0<32> l2307F8EA
l2307F8B0:
	a5_107 = Mem11[0x4200F6E8<32>:int32]
	branch a5_107 != 0<32> l2307F8C6
l2307F8C6:
	word32 sp_20
	word32 a0_25
	word32 a7_126
	word32 t3_125
	word32 t0_137
	word32 t4_138
	call a5_107 (retsize: 0;)
		uses: a0:fp + -48<i32>,a1:32<i32>,a3:a3_29,a4:a4_28,a7:a7_126,ra:ra,s0:0x4201C2F4<32>,s1:a0,s10:s10_127,s11:s11_128,s2:s2_129,s3:s3_130,s4:s4_131,s5:s5_132,s6:s6_133,s7:s7_134,s8:s8_135,s9:s9_136,t0:t0_137,t3:t3_125,t4:t4_138
		defs: a0:a0_25,a3:a3_29,a4:a4_28,a5:a5_23,a7:a7_126,ra:ra_24,s1:s1_22,s10:s10_127,s11:s11_128,s2:s2_129,s3:s3_130,s4:s4_131,s5:s5_132,s6:s6_133,s7:s7_134,s8:s8_135,s9:s9_136,sp:sp_20,t0:t0_137,t3:t3_125,t4:t4_138
	branch a0_25 <= 0<32> l2307F8BA
l2307F8D2:
	a4 = a4 - a5_107
	a5_12 = 0<32>
	branch a4 >= a0_25 l2307F914
l2307F914:
	Mem41[a3 + 17<i32>:word32] = Mem36[a4:word32]
	word32 a4_46 = a4 + a3
	Mem47[a4_46:byte] = SLICE(CONVERT(Mem41[sp_20 + a5_12:byte], byte, word32), byte, 0)
	word32 s0_49 = Mem47[a3 + 4<i32>:word32]
	branch a4_46 < a3 l2307F936
l2307F934:
	a4_46 = 0<32>
l2307F936:
	Mem53[a4_46 + 16<i32>:word32] = s0_49
	a4 = a4_46 + 1<32>
	Mem58[a4 + 8<i32>:word32] = Mem53[a4_46 + 8<i32>:word32]
	a5_12 = a5_12 + 1<32>
	branch a0_25 != a5_12 l2307F914
l2307F944:
l2307F8DE:
	word32 t4_305
	word32 a2_302
	word32 a3_303
	word32 a7_304
	word32 a0_300
	word32 a1_301
	ra = printf(ra, 0x230C5910<32>, a3, Mem11[sp_20 + 8<i32>:word32], Mem11[sp_20 + 40<i32>:word32], Mem11[sp_20 + 112<i32>:word32], Mem11[sp_20 + 116<i32>:word32], Mem11[sp_20 + 152<i32>:word32], Mem11[sp_20 + 188<i32>:word32], out s1_14, out a0_300, out a1_301, out a2_302, out a3_303, out a4, out a5_12, out a7_304, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4_305)
l2307F8EA:
	a3 = a4 + 1<i32>
	Mem92[a3 + 12<i32>:word32] = Mem87[a5_12:word32]
	word32 a5_101 = CONVERT(Mem92[a5_12 + a4:byte], byte, word32)
	Mem98[s1_14:byte] = SLICE(a5_101, byte, 0)
	word32 s0_100 = Mem98[a4 + 4<i32>:word32]
	branch a5_101 < a4 l2307F908
l2307F906:
	a5_101 = 0<32>
l2307F908:
	Mem104[a5_101 + 12<i32>:word32] = s0_100
	a5_107 = a5_101 + 0xFFFFFFFF<32>
	Mem108[a5_107 + 8<i32>:word32] = Mem104[a5_101 + 8<i32>:word32]
	a0_106 = 0<32>
l2307F8BA:
	a0_106 = 2<32>
l2307F8BC:
	s0Out = dwArgE4
	s1Out = s1_14
	a0Out = a0_106
	a3Out = a3
	a4Out = a4
	a5Out = a5_107
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
at_queue_get_exit:


word32 at_queue_peek(word32 ra, word32 a0, word32 a4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_parse
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1 s10 s11 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
at_queue_peek_entry:
l2307F946:
	word32 a5_140
	word32 a0_127
	word32 a5_12 = Mem11[0x4201C2FC<32>:word32]
	word32 s1_14 = a0
	branch a5_12 > 0<32> l2307F99C
l2307F962:
	a5_140 = Mem11[0x4200F6E8<32>:int32]
	branch a5_140 != 0<32> l2307F978
l2307F978:
	word32 sp_20
	word32 a0_25
	word32 s3_118
	word32 a7_114
	word32 t3_113
	word32 t0_125
	word32 t4_126
	call a5_140 (retsize: 0;)
		uses: a0:fp + -48<i32>,a1:32<i32>,a3:a3_30,a4:a4_28,a7:a7_114,ra:ra,s0:0x4201C2F4<32>,s1:a0,s10:s10_115,s11:s11_116,s2:s2_117,s3:s3_118,s4:s4_119,s5:s5_120,s6:s6_121,s7:s7_122,s8:s8_123,s9:s9_124,t0:t0_125,t3:t3_113,t4:t4_126
		defs: a0:a0_25,a3:a3_30,a4:a4_28,a5:a5_23,a7:a7_114,ra:ra_24,s1:s1_22,s10:s10_115,s11:s11_116,s2:s2_117,s3:s3_118,s4:s4_119,s5:s5_120,s6:s6_121,s7:s7_122,s8:s8_123,s9:s9_124,sp:sp_20,t0:t0_125,t3:t3_113,t4:t4_126
	branch a0_25 <= 0<32> l2307F96C
l2307F984:
	a4 = a4 - a5_140
	a5_12 = 0<32>
	branch a4 >= a0_25 l2307F9AE
l2307F9AE:
	Mem41[a3 + 17<i32>:word32] = Mem36[a4:word32]
	word32 a4_46 = a4 + a3
	Mem47[a4_46:byte] = SLICE(CONVERT(Mem41[sp_20 + a5_12:byte], byte, word32), byte, 0)
	word32 s0_49 = Mem47[a3 + 4<i32>:word32]
	branch a4_46 < a3 l2307F9D0
l2307F9CE:
	a4_46 = 0<32>
l2307F9D0:
	Mem53[a4_46 + 16<i32>:word32] = s0_49
	a4 = a4_46 + 1<32>
	Mem58[a4 + 8<i32>:word32] = Mem53[a4_46 + 8<i32>:word32]
	a5_12 = a5_12 + 1<32>
	branch a0_25 != a5_12 l2307F9AE
l2307F9DE:
l2307F990:
	word32 t4_270
	word32 a7_268
	word32 s3_269
	word32 a1_266
	word32 a2_267
	word32 a0_265
	ra = printf(ra, 0x230C5910<32>, a3, Mem11[sp_20 + 8<i32>:word32], Mem11[sp_20 + 40<i32>:word32], Mem11[sp_20 + 112<i32>:word32], Mem11[sp_20 + 116<i32>:word32], Mem11[sp_20 + 152<i32>:word32], Mem11[sp_20 + 188<i32>:word32], out s1_14, out a0_265, out a1_266, out a2_267, out a3, out a4, out a5_12, out a7_268, out s2, out s3_269, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4_270)
l2307F99C:
	a5_140 = CONVERT(Mem86[a5_12 + a4:byte], byte, word32)
	Mem97[s1_14:byte] = SLICE(a5_140, byte, 0)
	a0_127 = 0<32>
l2307F96C:
	a0_127 = 2<32>
l2307F96E:
	s1Out = s1_14
	a0Out = a0_127
	a3Out = a3
	a4Out = a4
	a5Out = a5_140
	s2Out = s2
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
at_queue_peek_exit:


void create_tcp_udp_handler(word32 ra, word32 a3, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: ra s0 s1 sp
create_tcp_udp_handler_entry:
l2307F9E0:
	word32 a7_555
	word32 s2_556
	word32 a5_554
	word32 s5_559
	word32 s3_557
	word32 s4_558
	word32 s7_561
	word32 s8_562
	word32 s6_560
	word32 a2_551
	word32 a3_552
	word32 a4_553
	word32 s1_548
	word32 a0_549
	word32 a1_550
	word32 s9_563
	word32 s10_564
	word32 s11_565
	word32 t4_566
	word32 t1_567
	word32 a0_568
	word32 a1_569
	word32 a2_570
	word32 a3_571
	word32 a4_572
	word32 a5_573
	word32 ra_48 = memset(printf(ra, 0x230C5A64<32>, a3, dwLoc0188, dwLoc0168, dwLoc0120, dwLoc011C, dwLocF8, dwLocD4, out s1_548, out a0_549, out a1_550, out a2_551, out a3_552, out a4_553, out a5_554, out a7_555, out s2_556, out s3_557, out s4_558, out s5_559, out s6_560, out s7_561, out s8_562, out s9_563, out s10_564, out s11_565, out t4_566), fp + -300<i32>, 0<32>, 284<i32>, out t1_567, out a0_568, out a1_569, out a2_570, out a3_571, out a4_572, out a5_573)
	word32 s0_70 = Mem69[0xFFFC04<32>:word32]
	word32 a4_90 = CONVERT(Mem89[0xFFFC04<32>:byte], byte, word32)
	branch a4_90 != 63<i32> l2307FA8A
l2307FA8A:
	branch a4_90 == 61<i32> l2307FAA4
l2307FAA4:
	Mem94[0xFFFC05<32>:word32] = s0_70
	word32 a0_99
	word32 a4_102
	word32 s0_105
	word32 s1_111
	word32 a2_574
	word32 a3_575
	word32 a5_576
	word32 s2_577
	word32 s3_578
	word32 s4_579
	word32 s5_580
	word32 ra_117 = at_get_parameters(ra_48, s0_70, fp + -396<i32>, 2<32>, fp + -400<i32>, 0xFFFC05<32>, dwLocEC, 0xFFFC04<32>, dwLocBC, dwLocA0, dwLoc9C, dwLoc78, dwLoc58, dwLoc38, dwLoc18, dwArg08, out s0_105, out s1_111, out a0_99, out a2_574, out a3_575, out a4_102, out a5_576, out s2_577, out s3_578, out s4_579, out s5_580)
	branch a0_99 != 0<32> l2307FA92
l2307FAB6:
	branch a4_102 > 4<32> l2307FA92
l2307FABE:
	word32 a1_158
	word32 a1_581
	word32 a2_582
	word32 a3_583
	word32 a4_584
	word32 a5_129
	branch strcmp(s1_111, 0x230C5A80<32>, out a1_581, out a2_582, out a3_583, out a4_584, out a5_129) != 0<32> l2307FB3E
l2307FB3E:
	word32 a1_585
	word32 a2_586
	word32 a3_587
	word32 a4_588
	branch strcmp(s1_111, 0x230C5A84<32>, out a1_585, out a2_586, out a3_587, out a4_588, out a5_129) == 0<32> l2307FACE
l2307FB4E:
	word32 a1_698
	word32 a2_699
	word32 a3_700
	word32 a4_701
	branch strcmp(s1_111, 0x230C5BB4<32>, out a1_698, out a2_699, out a3_700, out a4_701, out a5_129) != 0<32> l2307FA92
l2307FB5E:
	a1_158 = fp + -336<i32>
l2307FACE:
	a1_158 = fp + -372<i32>
l2307FAD4:
	word32 a0_176
	word32 s0_702
	word32 s1_703
	word32 a2_704
	word32 a3_705
	word32 a4_706
	word32 a5_707
	word32 s2_708
	word32 s3_709
	word32 s4_710
	word32 s5_711
	word32 ra_194 = at_get_parameters(ra_117, s0_105, a1_158, 3<32>, fp + -400<i32>, a5_129, dwLocEC, 0xFFFC04<32>, dwLocBC, dwLocA0, dwLoc9C, dwLoc78, dwLoc58, dwLoc38, dwLoc18, dwArg08, out s0_702, out s1_703, out a0_176, out a2_704, out a3_705, out a4_706, out a5_707, out s2_708, out s3_709, out s4_710, out s5_711)
	branch a0_176 != 0<32> l2307FA92
l2307FADC:
	word32 a3_203
	word32 a3_228
	word32 a3_253
	word32 a3_278
	word32 a3_303
	word32 s1_589
	word32 a0_590
	word32 a1_591
	word32 a2_592
	word32 a4_593
	word32 a5_594
	word32 a7_595
	word32 s2_596
	word32 s3_597
	word32 s4_598
	word32 s5_599
	word32 s6_600
	word32 s7_601
	word32 s8_602
	word32 s9_603
	word32 s10_604
	word32 s11_605
	word32 t4_606
	word32 s1_607
	word32 a0_608
	word32 a1_609
	word32 a2_610
	word32 a4_611
	word32 a5_612
	word32 a7_613
	word32 s2_614
	word32 s3_615
	word32 s4_616
	word32 s5_617
	word32 s6_618
	word32 s7_619
	word32 s8_620
	word32 s9_621
	word32 s10_622
	word32 s11_623
	word32 t4_624
	word32 s1_625
	word32 a0_626
	word32 a1_627
	word32 a2_628
	word32 a4_629
	word32 a5_630
	word32 a7_631
	word32 s2_632
	word32 s3_633
	word32 s4_634
	word32 s5_635
	word32 s6_636
	word32 s7_637
	word32 s8_638
	word32 s9_639
	word32 s10_640
	word32 s11_641
	word32 t4_642
	word32 s1_643
	word32 a0_644
	word32 a1_645
	word32 a2_646
	word32 a4_647
	word32 a5_648
	word32 a7_649
	word32 s2_650
	word32 s3_651
	word32 s4_652
	word32 s5_653
	word32 s6_654
	word32 s7_655
	word32 s8_656
	word32 s9_657
	word32 s10_658
	word32 s11_659
	word32 t4_660
	word32 s1_661
	word32 a0_662
	word32 a1_663
	word32 a2_664
	word32 a4_665
	word32 a5_666
	word32 a7_667
	word32 s2_668
	word32 s3_669
	word32 s4_670
	word32 s5_671
	word32 s6_672
	word32 s7_673
	word32 s8_674
	word32 s9_675
	word32 s10_676
	word32 s11_677
	word32 t4_678
	word32 s1_679
	word32 a0_680
	word32 a1_681
	word32 a2_682
	word32 a3_683
	word32 a4_684
	word32 a5_685
	word32 a7_686
	word32 s2_687
	word32 s3_688
	word32 s4_689
	word32 s5_690
	word32 s6_691
	word32 s7_692
	word32 s8_693
	word32 s9_694
	word32 s10_695
	word32 s11_696
	word32 t4_697
	printf(printf(printf(printf(printf(printf(ra_194, 0x230C5A88<32>, dwLoc1C, dwLoc0188, fp + -28<i32>, dwLoc0120, dwLoc011C, dwLocF8, dwLocD4, out s1_589, out a0_590, out a1_591, out a2_592, out a3_203, out a4_593, out a5_594, out a7_595, out s2_596, out s3_597, out s4_598, out s5_599, out s6_600, out s7_601, out s8_602, out s9_603, out s10_604, out s11_605, out t4_606), 0x230C5AB8<32>, a3_203, dwLoc0188, fp + -28<i32>, dwLoc0120, dwLoc011C, dwLocF8, dwLocD4, out s1_607, out a0_608, out a1_609, out a2_610, out a3_228, out a4_611, out a5_612, out a7_613, out s2_614, out s3_615, out s4_616, out s5_617, out s6_618, out s7_619, out s8_620, out s9_621, out s10_622, out s11_623, out t4_624), 0x230C5AE8<32>, a3_228, dwLoc0188, fp + -28<i32>, dwLoc0120, dwLoc011C, dwLocF8, dwLocD4, out s1_625, out a0_626, out a1_627, out a2_628, out a3_253, out a4_629, out a5_630, out a7_631, out s2_632, out s3_633, out s4_634, out s5_635, out s6_636, out s7_637, out s8_638, out s9_639, out s10_640, out s11_641, out t4_642), 0x230C5B1C<32>, a3_253, dwLoc0188, fp + -28<i32>, dwLoc0120, dwLoc011C, dwLocF8, dwLocD4, out s1_643, out a0_644, out a1_645, out a2_646, out a3_278, out a4_647, out a5_648, out a7_649, out s2_650, out s3_651, out s4_652, out s5_653, out s6_654, out s7_655, out s8_656, out s9_657, out s10_658, out s11_659, out t4_660), 0x230C5B4C<32>, a3_278, dwLoc0188, fp + -28<i32>, dwLoc0120, dwLoc011C, dwLocF8, dwLocD4, out s1_661, out a0_662, out a1_663, out a2_664, out a3_303, out a4_665, out a5_666, out a7_667, out s2_668, out s3_669, out s4_670, out s5_671, out s6_672, out s7_673, out s8_674, out s9_675, out s10_676, out s11_677, out t4_678), 0x230C5B80<32>, a3_303, dwLoc0188, fp + -28<i32>, dwLoc0120, dwLoc011C, dwLocF8, dwLocD4, out s1_679, out a0_680, out a1_681, out a2_682, out a3_683, out a4_684, out a5_685, out a7_686, out s2_687, out s3_688, out s4_689, out s5_690, out s6_691, out s7_692, out s8_693, out s9_694, out s10_695, out s11_696, out t4_697)
l2307FA92:
l2307FA7E:
l2307FA84:
	at_callback_do(fp + -300<i32>)
l2307FA94:
	return
create_tcp_udp_handler_exit:


void close_network_handler(word32 ra, word32 s0, word32 a3, word32 dwArg18, word32 dwArg38, word32 dwArg58)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0058:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: ra s0 sp
close_network_handler_entry:
l2307FB66:
	word32 a5_209
	word32 a4_208
	word32 a3_207
	word32 a2_206
	word32 a1_205
	word32 a0_204
	word32 s1_203
	word32 a7_210
	word32 s2_211
	word32 s3_212
	word32 s4_213
	word32 s5_214
	word32 s6_215
	word32 s7_216
	word32 s8_217
	word32 s9_218
	word32 s10_219
	word32 s11_220
	word32 t4_221
	word32 t1_222
	word32 a0_223
	word32 a1_224
	word32 a2_225
	word32 a3_226
	word32 a4_227
	word32 a5_228
	word32 ra_46 = memset(printf(ra, 0x230C5A64<32>, a3, dwLoc0138, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_203, out a0_204, out a1_205, out a2_206, out a3_207, out a4_208, out a5_209, out a7_210, out s2_211, out s3_212, out s4_213, out s5_214, out s6_215, out s7_216, out s8_217, out s9_218, out s10_219, out s11_220, out t4_221), fp + -300<i32>, 0<32>, 284<i32>, out t1_222, out a0_223, out a1_224, out a2_225, out a3_226, out a4_227, out a5_228)
	word32 s0_58 = Mem57[0xFFFC04<32>:word32]
	branch CONVERT(Mem57[0xFFFC04<32>:byte], byte, word32) == 61<i32> l2307FBC4
l2307FBC4:
	Mem62[0xFFFC05<32>:word32] = s0_58
	word32 a0_67
	word32 a5_71
	word32 a3_84
	word32 s0_229
	word32 s1_230
	word32 a2_231
	word32 a4_232
	word32 s2_233
	word32 s3_234
	word32 s4_235
	word32 s5_236
	word32 ra_85 = at_get_parameters(ra_46, s0_58, fp + -312<i32>, 1<32>, fp + -316<i32>, 0xFFFC05<32>, dwLoc9C, dwLoc98, dwLoc6C, dwLoc50, dwLoc4C, dwLoc28, s0, dwArg18, dwArg38, dwArg58, out s0_229, out s1_230, out a0_67, out a2_231, out a3_84, out a4_232, out a5_71, out s2_233, out s3_234, out s4_235, out s5_236)
	branch a0_67 != 0<32> l2307FBB6
l2307FBD6:
	branch a5_71 <= 0<32> l2307FBB6
l2307FBDC:
	word32 s1_237
	word32 a0_238
	word32 a1_239
	word32 a2_240
	word32 a3_241
	word32 a4_242
	word32 a5_243
	word32 a7_244
	word32 s2_245
	word32 s3_246
	word32 s4_247
	word32 s5_248
	word32 s6_249
	word32 s7_250
	word32 s8_251
	word32 s9_252
	word32 s10_253
	word32 s11_254
	word32 t4_255
	printf(ra_85, 0x230C5A34<32>, a3_84, 0xFFFC04<32>, dwLoc0118, dwLocD0, dwLocCC, dwLocA8, dwLoc84, out s1_237, out a0_238, out a1_239, out a2_240, out a3_241, out a4_242, out a5_243, out a7_244, out s2_245, out s3_246, out s4_247, out s5_248, out s6_249, out s7_250, out s8_251, out s9_252, out s10_253, out s11_254, out t4_255)
	at_callback_do(fp + -300<i32>)
l2307FBB6:
l2307FBB8:
	return
close_network_handler_exit:


void send_data_handler(word32 ra, word32 s0, word32 a3, word32 dwArg18, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 sp
send_data_handler_entry:
	word24 nLoc0137_237 = SLICE(dwLoc0138, word24, 8)
l2307FBF6:
	word32 a5_78
	word32 s1_360
	word32 a4_358
	word32 a5_359
	word32 a1_355
	word32 a2_356
	word32 a3_357
	word32 t4_352
	word32 t1_353
	word32 a0_354
	word32 s11_351
	word32 s10_350
	word32 s9_349
	word32 s8_348
	word32 s7_347
	word32 s6_346
	word32 s5_345
	word32 s2_342
	word32 s3_343
	word32 s4_344
	word32 a7_341
	word32 a4_339
	word32 a5_340
	word32 a2_337
	word32 a3_338
	word32 a0_335
	word32 a1_336
	word32 s1_334
	word32 a0_361
	word32 a1_362
	word32 a2_363
	word32 a3_364
	word32 a4_365
	word32 a7_366
	word32 s2_367
	word32 s3_368
	word32 s4_369
	word32 s5_370
	word32 s6_371
	word32 s7_372
	word32 s8_373
	word32 s9_374
	word32 s10_375
	word32 s11_376
	word32 t4_377
	word32 ra_85 = printf(memset(printf(ra, 0x230C5BB8<32>, a3, dwLoc0158, dwLoc0138, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s1_334, out a0_335, out a1_336, out a2_337, out a3_338, out a4_339, out a5_340, out a7_341, out s2_342, out s3_343, out s4_344, out s5_345, out s6_346, out s7_347, out s8_348, out s9_349, out s10_350, out s11_351, out t4_352), fp + -300<i32>, 0<32>, 284<i32>, out t1_353, out a0_354, out a1_355, out a2_356, out a3_357, out a4_358, out a5_359), 0x230C5BD4<32>, 3<32>, dwLoc0158, SEQ(nLoc0137_237, 3<8>), dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s1_360, out a0_361, out a1_362, out a2_363, out a3_364, out a4_365, out a5_78, out a7_366, out s2_367, out s3_368, out s4_369, out s5_370, out s6_371, out s7_372, out s8_373, out s9_374, out s10_375, out s11_376, out t4_377)
	word32 s0_99 = Mem76[a5_78:word32]
	branch CONVERT(Mem76[a5_78:byte], byte, word32) == 61<i32> l2307FC92
l2307FC92:
	Mem103[a5_78 + 1<32>:word32] = s0_99
	word32 a0_108
	word32 a4_111
	word32 s1_120
	word32 a3_125
	word32 s0_378
	word32 a2_379
	word32 a5_380
	word32 s2_381
	word32 s3_382
	word32 s4_383
	word32 s5_384
	word32 ra_126 = at_get_parameters(ra_85, s0_99, fp + -348<i32>, 4<32>, fp + -352<i32>, a5_78 + 1<32>, dwLocBC, dwLocB8, dwLoc8C, dwLoc70, dwLoc6C, dwLoc48, dwLoc28, s0, dwArg18, dwArg38, out s0_378, out s1_120, out a0_108, out a2_379, out a3_125, out a4_111, out a5_380, out s2_381, out s3_382, out s4_383, out s5_384)
	branch a0_108 != 0<32> l2307FC80
l2307FCA4:
	0<32> = dwLoc9C
	branch a4_111 <= 1<32> l2307FC80
l2307FCAC:
	word32 s0_129 = Mem103[a4_111:word32]
	branch a4_111 != 0<32> l2307FCFE
l2307FCFE:
	word32 a1_385
	word32 a2_386
	word32 a3_387
	word32 a4_388
	word32 a5_389
	word32 a6_390
	word32 a7_391
	memcpy(s1_120, 0x4202795C<32>, 256<i32>, out a1_385, out a2_386, out a3_387, out a4_388, out a5_389, out a6_390, out a7_391)
	at_callback_do(fp + -300<i32>)
l2307FCB8:
	branch a3_125 > 4<32> l2307FCCA
l2307FCC0:
	ra_126 = dwLoc9C
	branch true l2307FCDA
l2307FCDA:
	Mem167[1<32>:word32] = s0_129
	Mem173[a3_125 + 8<i32>:word32] = s0_129
	Mem174[0x10<32>:word32] = s0_129
	Mem175[s0_129 + 272<i32>:word16] = SLICE(dwLoc18, word16, 0)
	word32 a1_399
	word32 a2_400
	word32 a3_401
	word32 a4_402
	word32 a5_403
	word32 a6_404
	word32 a7_405
	memcpy(0x4202795C<32>, s1_120, 256<i32>, out a1_399, out a2_400, out a3_401, out a4_402, out a5_403, out a6_404, out a7_405)
l2307FCCA:
	word32 t1_392
	word32 a0_393
	word32 a1_394
	word32 a2_395
	word32 a3_396
	word32 a4_397
	word32 a5_398
	memset(ra_126, 0x4202794C<32>, 0<32>, 1304<i32>, out t1_392, out a0_393, out a1_394, out a2_395, out a3_396, out a4_397, out a5_398)
l2307FC80:
l2307FC82:
	return
send_data_handler_exit:


void ap_server_handler(word32 ra, word32 s0, word32 dwArg18, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: ra s0 sp
ap_server_handler_entry:
l2307FD36:
	word32 a0_19 = Mem18[0xFFFC04<32>:word32]
	word32 dwLoc0138_173 = SEQ(nLoc0137, 3<8>)
	branch CONVERT(Mem27[0xFFFC04<32>:byte], byte, word32) != 61<i32> l2307FDE8
l2307FDE8:
l2307FD7E:
	Mem32[0xFFFC05<32>:word32] = a0_19
	word32 a0_36
	word32 a4_39
	word32 s0_42
	word32 a3_53
	word32 s2_246
	word32 s3_247
	word32 s5_249
	word32 s4_248
	word32 s1_243
	word32 a2_244
	word32 a5_245
	at_get_parameters(ra, a0_19, fp + -348<i32>, 4<32>, fp + -352<i32>, 0xFFFC05<32>, dwLocBC, dwLocB8, dwLoc8C, dwLoc70, dwLoc6C, dwLoc48, dwLoc28, s0, dwArg18, dwArg38, out s0_42, out s1_243, out a0_36, out a2_244, out a3_53, out a4_39, out a5_245, out s2_246, out s3_247, out s4_248, out s5_249)
	branch a0_36 != 0<32> l2307FDDA
l2307FD90:
	0<32> = dwLoc9C
	branch a4_39 <= 0<32> l2307FDDA
l2307FD96:
	branch a4_39 == 2<32> l2307FDAC
l2307FD9C:
	branch a4_39 == s0_42 l2307FDAE
l2307FDA0:
	branch a4_39 != 1<32> l2307FDB0
l2307FDA6:
l2307FDAC:
l2307FDAE:
l2307FDB0:
	word32 a3_80
	word32 s1_250
	word32 a0_251
	word32 a1_252
	word32 a2_253
	word32 a4_254
	word32 a5_255
	word32 a7_256
	word32 s2_257
	word32 s3_258
	word32 s4_259
	word32 s5_260
	word32 s6_261
	word32 s7_262
	word32 s8_263
	word32 s9_264
	word32 s10_265
	word32 s11_266
	word32 t4_267
	printf(0xFFFC04<32>, 0x230C5970<32>, a3_53, dwLoc0158, dwLoc0138_173, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s1_250, out a0_251, out a1_252, out a2_253, out a3_80, out a4_254, out a5_255, out a7_256, out s2_257, out s3_258, out s4_259, out s5_260, out s6_261, out s7_262, out s8_263, out s9_264, out s10_265, out s11_266, out t4_267)
	branch a3_80 >=u 0x10000000<32> l2307FDDA
l2307FDCE:
	at_callback_do(fp + -300<i32>)
l2307FDDA:
	return
ap_server_handler_exit:


void client_ssl_config_path(word32 ra, word32 s1, word32 mstatus, word32 dwArg08, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: ra s0 s1 s2 sp
client_ssl_config_path_entry:
l2307FDEC:
	word32 a3_20
	word32 a4_21
	word32 a5_22
	word32 a2_731
	word32 t1_728
	word32 a0_729
	word32 a1_730
	word32 ra_23 = memset(ra, fp + -300<i32>, 0<32>, 284<i32>, out t1_728, out a0_729, out a1_730, out a2_731, out a3_20, out a4_21, out a5_22)
	word32 a0_28
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 s1_36
	word32 s8_738
	word32 s2_735
	word32 s3_736
	word32 s4_737
	word32 a6_734
	word32 a2_733
	word32 a1_732
	pvPortMalloc(ra_23, s1, 64<i32>, a3_20, a4_21, a5_22, mstatus, dwLoc0130, dwLoc012C, dwLocE4, dwLoc38, dwArg08, out s1_36, out a0_28, out a1_732, out a2_733, out a3_31, out a4_32, out a5_33, out a6_734, out s2_735, out s3_736, out s4_737, out s8_738)
	word32 a3_48
	word32 a4_49
	word32 a5_50
	word32 s1_53
	word32 s4_745
	word32 s8_746
	word32 a6_742
	word32 s2_743
	word32 s3_744
	word32 a0_739
	word32 a1_740
	word32 a2_741
	pvPortMalloc(ra_23, s1_36, 64<i32>, a3_31, a4_32, a5_33, mstatus, dwLoc0130, dwLoc012C, dwLocE4, dwLoc38, dwArg08, out s1_53, out a0_739, out a1_740, out a2_741, out a3_48, out a4_49, out a5_50, out a6_742, out s2_743, out s3_744, out s4_745, out s8_746)
	word32 a3_65
	word32 s2_71
	word32 a6_750
	word32 a4_749
	word32 s4_752
	word32 s8_753
	word32 s3_751
	word32 s1_747
	word32 a1_748
	word32 a0_359
	word32 a5_356
	word32 a2_353
	pvPortMalloc(ra_23, s1_53, 64<i32>, a3_48, a4_49, a5_50, mstatus, dwLoc0130, dwLoc012C, dwLocE4, dwLoc38, dwArg08, out s1_747, out a0_359, out a1_748, out a2_353, out a3_65, out a4_749, out a5_356, out a6_750, out s2_71, out s3_751, out s4_752, out s8_753)
	branch a0_359 == 0<32> l2307FE3A
l2307FE30:
	branch a3_65 == 0<32> l2307FE36
l2307FE34:
	branch a0_359 != 0<32> l2307FE62
l2307FE62:
	word32 a5_93 = Mem92[s2_71:int32]
	branch CONVERT(Mem104[a5_93:byte], byte, word32) != 61<i32> l2307FE4C
l2307FEB4:
	Mem109[s2_71:word32] = a5_93 + 1<32>
	word32 s1_126
	word32 s2_772
	word32 s3_773
	word32 s4_774
	word32 s0_770
	word32 a3_771
	word32 s5_775
	word32 a4_117
	word32 a0_114
	word32 a5_118
	word32 a2_116
	word32 ra_132 = at_get_parameters(ra_23, s2_71, fp + -360<i32>, 5<32>, fp + -364<i32>, a5_93 + 1<32>, dwLocCC, a0_28, dwLoc9C, dwLoc80, dwLoc7C, dwLoc58, dwLoc38, dwLoc18, dwArg08, dwArg28, out s0_770, out s1_126, out a0_114, out a2_116, out a3_771, out a4_117, out a5_118, out s2_772, out s3_773, out s4_774, out s5_775)
	branch a0_114 == 0<32> l2307FECC
l2307FECC:
	branch a4_117 <= 1<32> l2307FEC8
l2307FED4:
	word32 a3_139
	branch a5_118 == 1<32> l2307FF60
l2307FF60:
	a5_118 = 4<32>
	branch a4_117 <= 4<32> l2307FEE0
l2307FF66:
	word32 s0_873
	word32 s1_874
	word32 a0_875
	word32 a1_876
	word32 a5_877
	word32 a6_878
	word32 s4_879
	word32 t3_880
	vPortFree(a0_114, a2_116, 4<32>, mstatus, dwLoc18, dwArg28, out s0_873, out s1_874, out a0_875, out a1_876, out a2_116, out a3_139, out a4_117, out a5_877, out a6_878, out s4_879, out t3_880)
l2307FEDA:
	branch a5_118 > 1<32> l2307FEFA
l2307FEFA:
	a3_139 = 2<32>
	branch a5_118 == 2<32> l2307FF4A
l2307FF4A:
	branch a4_117 == a5_118 l2307FEE0
l2307FF4E:
	word32 a2_152
	word32 a5_155
	word32 a0_158
	word32 s0_857
	word32 s1_858
	word32 a1_859
	word32 a3_860
	word32 a4_861
	word32 a6_862
	word32 s4_863
	word32 t3_864
	vPortFree(a0_114, a2_116, a5_118, mstatus, dwLoc18, dwArg28, out s0_857, out s1_858, out a0_158, out a1_859, out a2_152, out a3_860, out a4_861, out a5_155, out a6_862, out s4_863, out t3_864)
	word32 s0_865
	word32 s1_866
	word32 a0_867
	word32 a1_868
	word32 a5_869
	word32 a6_870
	word32 s4_871
	word32 t3_872
	vPortFree(a0_158, a2_152, a5_155, mstatus, dwLoc18, dwArg28, out s0_865, out s1_866, out a0_867, out a1_868, out a2_116, out a3_139, out a4_117, out a5_869, out a6_870, out s4_871, out t3_872)
l2307FF00:
	branch a5_118 != s1_126 l2307FEE0
l2307FF04:
	a5_118 = 4<32>
	branch a4_117 <= 4<32> l2307FEE0
l2307FEDE:
	branch a5_118 == 0<32> l2307FF70
l2307FF70:
	word32 a2_181
	word32 a5_184
	word32 a0_187
	word32 a1_789
	word32 s1_788
	word32 s0_787
	word32 a6_792
	word32 a4_791
	word32 a3_790
	word32 s4_793
	word32 t3_794
	vPortFree(a0_114, a2_116, a5_118, mstatus, dwLoc18, dwArg28, out s0_787, out s1_788, out a0_187, out a1_789, out a2_181, out a3_790, out a4_791, out a5_184, out a6_792, out s4_793, out t3_794)
	word32 a2_194
	word32 a5_197
	word32 a0_200
	word32 s0_795
	word32 s1_796
	word32 a4_799
	word32 a6_800
	word32 s4_801
	word32 t3_802
	word32 a1_797
	word32 a3_798
	vPortFree(a0_187, a2_181, a5_184, mstatus, dwLoc18, dwArg28, out s0_795, out s1_796, out a0_200, out a1_797, out a2_194, out a3_798, out a4_799, out a5_197, out a6_800, out s4_801, out t3_802)
	word32 s0_803
	word32 s1_804
	word32 a0_805
	word32 a1_806
	word32 a5_807
	word32 a6_808
	word32 s4_809
	word32 t3_810
	vPortFree(a0_200, a2_194, a5_197, mstatus, dwLoc18, dwArg28, out s0_803, out s1_804, out a0_805, out a1_806, out a2_116, out a3_139, out a4_117, out a5_807, out a6_808, out s4_809, out t3_810)
l2307FF6C:
l2307FF0A:
	branch a2_116 != 0<32> l2307FF18
l2307FF10:
l2307FF18:
	branch a3_139 != 0<32> l2307FF24
l2307FF1C:
	a3_139 = 0x230C6DBC<32>
l2307FF24:
	branch a4_117 != 0<32> l2307FF30
l2307FF28:
l2307FF30:
	word32 s1_838
	word32 a0_839
	word32 a1_840
	word32 a2_841
	word32 a3_842
	word32 a4_843
	word32 a5_844
	word32 a7_845
	word32 s2_846
	word32 s3_847
	word32 s4_848
	word32 s5_849
	word32 s6_850
	word32 s7_851
	word32 s8_852
	word32 s9_853
	word32 s10_854
	word32 s11_855
	word32 t4_856
	printf(ra_132, 0x230C59A4<32>, a3_139, 0x403<32>, dwLoc0148, dwLoc0100, dwLocFC, 0xFFFC40<32>, dwLocB4, out s1_838, out a0_839, out a1_840, out a2_841, out a3_842, out a4_843, out a5_844, out a7_845, out s2_846, out s3_847, out s4_848, out s5_849, out s6_850, out s7_851, out s8_852, out s9_853, out s10_854, out s11_855, out t4_856)
	at_callback_do(fp + -300<i32>)
l2307FEE0:
	branch a0_114 == 0<32> l2307FEE8
l2307FEE4:
	word32 s0_811
	word32 s1_812
	word32 a1_813
	word32 a3_814
	word32 a4_815
	word32 a6_816
	word32 s4_817
	word32 t3_818
	vPortFree(a0_114, a2_116, a5_118, mstatus, dwLoc18, dwArg28, out s0_811, out s1_812, out a0_114, out a1_813, out a2_116, out a3_814, out a4_815, out a5_118, out a6_816, out s4_817, out t3_818)
l2307FEE8:
	branch a0_114 == 0<32> l2307FEF0
l2307FEEC:
	word32 s0_819
	word32 s1_820
	word32 a1_821
	word32 a3_822
	word32 a4_823
	word32 a6_824
	word32 s4_825
	word32 t3_826
	vPortFree(a0_114, a2_116, a5_118, mstatus, dwLoc18, dwArg28, out s0_819, out s1_820, out a0_114, out a1_821, out a2_116, out a3_822, out a4_823, out a5_118, out a6_824, out s4_825, out t3_826)
l2307FEF0:
	branch a0_114 == 0<32> l2307FEC8
l2307FEF4:
	word32 s0_827
	word32 s1_828
	word32 a0_829
	word32 a1_830
	word32 a2_831
	word32 a3_832
	word32 a4_833
	word32 a5_834
	word32 a6_835
	word32 s4_836
	word32 t3_837
	vPortFree(a0_114, a2_116, a5_118, mstatus, dwLoc18, dwArg28, out s0_827, out s1_828, out a0_829, out a1_830, out a2_831, out a3_832, out a4_833, out a5_834, out a6_835, out s4_836, out t3_837)
l2307FEC8:
l2307FE36:
	word32 s0_754
	word32 s1_755
	word32 a1_756
	word32 a3_757
	word32 a4_758
	word32 a6_759
	word32 s4_760
	word32 t3_761
	vPortFree(a0_359, a2_353, a5_356, mstatus, dwLoc18, dwArg28, out s0_754, out s1_755, out a0_359, out a1_756, out a2_353, out a3_757, out a4_758, out a5_356, out a6_759, out s4_760, out t3_761)
l2307FE3A:
	branch a0_359 == 0<32> l2307FE42
l2307FE3E:
	word32 s0_762
	word32 s4_768
	word32 t3_769
	word32 s1_763
	word32 a1_764
	word32 a3_765
	word32 a4_766
	word32 a6_767
	vPortFree(a0_359, a2_353, a5_356, mstatus, dwLoc18, dwArg28, out s0_762, out s1_763, out a0_359, out a1_764, out a2_353, out a3_765, out a4_766, out a5_356, out a6_767, out s4_768, out t3_769)
l2307FE42:
	branch a0_359 == 0<32> l2307FE4C
l2307FE48:
	word32 s1_777
	word32 a0_778
	word32 s0_776
	word32 a4_782
	word32 a3_781
	word32 a2_780
	word32 a1_779
	word32 s4_785
	word32 a6_784
	word32 a5_783
	word32 t3_786
	vPortFree(a0_359, a2_353, a5_356, mstatus, dwLoc18, dwArg28, out s0_776, out s1_777, out a0_778, out a1_779, out a2_780, out a3_781, out a4_782, out a5_783, out a6_784, out s4_785, out t3_786)
l2307FE4C:
	return
client_ssl_config_path_exit:


void client_ssl_set_sni(word32 ra, word32 s0, word32 dwArg18, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s0:[0..31] Stack +0018:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: ra s0 s1 sp
client_ssl_set_sni_entry:
l2307FF88:
	word32 t1_187
	word32 a0_188
	word32 a1_189
	word32 a2_190
	word32 a3_191
	word32 a4_192
	word32 a5_193
	word32 ra_21 = memset(ra, fp + -300<i32>, 0<32>, 284<i32>, out t1_187, out a0_188, out a1_189, out a2_190, out a3_191, out a4_192, out a5_193)
	word32 s1_33 = Mem32[0xFFFD00<32>:word32]
	word32 dwLoc0138_146 = SEQ(nLoc0137, 0<8>)
	branch CONVERT(Mem36[0xFFFD00<32>:byte], byte, word32) != 61<i32> l23080028
l23080028:
l2307FFD2:
	Mem41[0xFFFD01<32>:word32] = s1_33
	word32 a0_46
	word32 s0_52
	word32 a3_63
	word32 s1_194
	word32 a2_195
	word32 a4_196
	word32 a5_197
	word32 s2_198
	word32 s3_199
	word32 s4_200
	word32 s5_201
	word32 ra_64 = at_get_parameters(ra_21, s1_33, fp + -324<i32>, 2<32>, fp + -328<i32>, 0xFFFD01<32>, dwLocBC, dwLocB8, dwLoc8C, dwLoc70, dwLoc6C, dwLoc48, dwLoc28, s0, dwArg18, dwArg38, out s0_52, out s1_194, out a0_46, out a2_195, out a3_63, out a4_196, out a5_197, out s2_198, out s3_199, out s4_200, out s5_201)
	branch a0_46 != 0<32> l23080016
l2307FFE6:
	branch a3_63 <= 1<32> l23080016
l2307FFEE:
	word32 a1_202
	word32 a2_203
	word32 a3_204
	word32 a4_205
	word32 a5_206
	word32 s1_207
	word32 a0_208
	word32 a1_209
	word32 a2_210
	word32 a3_211
	word32 a4_212
	word32 a5_213
	word32 a7_214
	word32 s2_215
	word32 s3_216
	word32 s4_217
	word32 s5_218
	word32 s6_219
	word32 s7_220
	word32 s8_221
	word32 s9_222
	word32 s10_223
	word32 s11_224
	word32 t4_225
	printf(ra_64, 0x230C5A1C<32>, strlen(s0_52, out a1_202, out a2_203, out a3_204, out a4_205, out a5_206), dwLoc0158, dwLoc0138_146, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s1_207, out a0_208, out a1_209, out a2_210, out a3_211, out a4_212, out a5_213, out a7_214, out s2_215, out s3_216, out s4_217, out s5_218, out s6_219, out s7_220, out s8_221, out s9_222, out s10_223, out s11_224, out t4_225)
	at_callback_do(fp + -300<i32>)
l23080016:
	return
client_ssl_set_sni_exit:


void client_ssl_set_alpn(word32 ra, word32 s0, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 sp
client_ssl_set_alpn_entry:
l2308002C:
	word32 a1_631
	word32 a2_632
	word32 t1_629
	word32 a0_630
	word32 a3_633
	word32 a4_634
	word32 a5_635
	word32 ra_25 = memset(ra, fp + -316<i32>, 0<32>, 284<i32>, out t1_629, out a0_630, out a1_631, out a2_632, out a3_633, out a4_634, out a5_635)
	word32 s1_35 = Mem34[0xFFFC04<32>:word32]
	branch CONVERT(Mem34[0xFFFC04<32>:byte], byte, word32) != 61<i32> l230801BC
l230801BC:
l23080070:
	Mem40[0xFFFC05<32>:word32] = s1_35
	word32 a0_45
	word32 a4_48
	word32 s0_636
	word32 a3_639
	word32 s1_637
	word32 a2_638
	word32 a5_640
	word32 s2_641
	word32 s3_642
	word32 s4_643
	word32 s5_644
	word32 ra_220 = at_get_parameters(ra_25, s1_35, fp + -328<i32>, 1<32>, fp + -332<i32>, 0xFFFC05<32>, dwLocBC, dwLocB8, dwLoc8C, dwLoc70, dwLoc6C, dwLoc48, dwLoc28, s0, dwArg18, dwArg38, out s0_636, out s1_637, out a0_45, out a2_638, out a3_639, out a4_48, out a5_640, out s2_641, out s3_642, out s4_643, out s5_644)
	word32 a5_101 = 4<32>
	branch a0_45 != 0<32> l230800C8
l23080084:
	branch a4_48 <= 0<32> l230800C8
l2308008A:
	word32 a3_67 = 0xD<32>
	word32 a4_68 = CONVERT(Mem40[4<32>:byte], byte, word32)
	branch a4_68 == 0xD<32> l230800E2
l23080096:
	a3_67 = 0xA<32>
	word32 s0_107 = 0<32>
	branch a4_68 == 0xA<32> l230800E2
l230800E2:
	word32 s8_659
	word32 a0_646
	word32 s1_645
	word32 a2_648
	word32 a3_649
	word32 a1_647
	word32 s2_653
	word32 a4_650
	word32 a5_651
	word32 a7_652
	word32 s3_654
	word32 s4_655
	word32 s6_657
	word32 s7_658
	word32 s5_656
	word32 s9_660
	word32 s10_661
	word32 t4_663
	word32 s11_662
	printf(ra_220, 0x230C59C8<32>, a3_67, dwLoc0158, dwLoc0138, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s1_645, out a0_646, out a1_647, out a2_648, out a3_649, out a4_650, out a5_651, out a7_652, out s2_653, out s3_654, out s4_655, out s5_656, out s6_657, out s7_658, out s8_659, out s9_660, out s10_661, out s11_662, out t4_663)
l2308009E:
l230800A4:
	word32 a4_103 = CONVERT(Mem40[a5_101:byte], byte, word32)
	branch a4_103 != 0xD<32> l230800FE
l230800FE:
	branch a4_103 == 0xA<32> l230800AC
l23080102:
	branch a4_103 != 44<i32> l23080108
l23080106:
	s0_107 = s0_107 + 1<32>
l23080108:
	a5_101 = a5_101 + 1<32>
l230800AC:
	Mem112[a5_101:byte] = 0<8>
	word32 a3_121
	word32 a4_122
	word32 a5_123
	word32 a0_138
	word32 a1_139
	word32 a6_671
	word32 s4_674
	word32 a1_664
	word32 s1_666
	word32 a2_667
	word32 a2_665
	word32 a4_669
	word32 a5_670
	word32 a3_668
	word32 s2_672
	word32 s3_673
	word32 s8_675
	word32 s0_145 = pvPortMalloc(ra_220, Mem112[a0_45:word32], strlen(a0_45, out a1_664, out a2_665, out a3_121, out a4_122, out a5_123) + 1<32> + (s0_107 + 2<32> << 2<i32>), a3_121, a4_122, a5_123, mstatus, dwLoc0120, dwLoc011C, fp + -308<i32>, dwLoc28, dwArg18, out s1_666, out a0_138, out a1_139, out a2_667, out a3_668, out a4_669, out a5_670, out a6_671, out s2_672, out s3_673, out s4_674, out s8_675)
	branch a0_138 != 0<32> l2308010C
l2308010C:
	Mem156[a0_138 + s0_145 + 4092<i32>:word32] = 0<32>
	word32 a1_166
	word32 a5_172
	word32 a4_683
	word32 a6_684
	word32 a7_685
	word32 a2_681
	word32 a3_682
	word32 a5_679
	word32 a3_677
	word32 a2_676
	word32 a4_678
	word32 a1_680
	memcpy(dwLocFC, a1_166, strlen(a1_139, out a1_166, out a2_676, out a3_677, out a4_678, out a5_679) + 1<i32>, out a1_680, out a2_681, out a3_682, out a4_683, out a5_172, out a6_684, out a7_685)
	Mem187[dwLocFC:word32] = a5_172
	word32 a0_185 = dwLocFC + 1<i32>
	word32 a3_186 = 44<i32>
	word32 a5_188 = 1<32>
l2308013A:
	word32 a4_191 = CONVERT(Mem190[a0_185 + -1<i32>:byte], byte, word32)
	branch a4_191 == 0<32> l23080158
l23080158:
	word32 s0_192 = 0<32>
	word32 s3_193 = 0x230C6000<32>
l2308015E:
	branch Mem190[(s0_192 << 2<u32>) + a4_191:int32] == 0<32> l2308019A
l2308019A:
	word32 s1_691
	word32 a5_690
	word32 a4_689
	word32 a0_692
	word32 a1_693
	word32 a2_694
	word32 a5_697
	word32 a3_695
	word32 a4_696
	word32 s2_699
	word32 a7_698
	word32 s3_700
	word32 s4_701
	word32 s5_702
	word32 s6_703
	word32 a1_686
	word32 a2_687
	word32 a3_688
	word32 s7_704
	word32 s8_705
	word32 s9_706
	word32 s10_707
	word32 s11_708
	word32 t4_709
	printf(ra_220, 0x230C5A04<32>, strlen(dwArg14, out a1_686, out a2_687, out a3_688, out a4_689, out a5_690), dwLoc0158, dwLoc0138, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s1_691, out a0_692, out a1_693, out a2_694, out a3_695, out a4_696, out a5_697, out a7_698, out s2_699, out s3_700, out s4_701, out s5_702, out s6_703, out s7_704, out s8_705, out s9_706, out s10_707, out s11_708, out t4_709)
l230800F0:
	at_callback_do(fp + -316<i32>)
l2308016E:
	word32 s2_269
	word32 s1_710
	word32 a0_711
	word32 a1_712
	word32 a2_713
	word32 a5_714
	word32 a7_715
	word32 s4_716
	word32 s5_717
	word32 s6_718
	word32 s7_719
	word32 s8_720
	word32 s9_721
	word32 s10_722
	word32 s11_723
	word32 t4_724
	ra_220 = printf(ra_220, s3_193 + -1572<i32>, a3_186, dwLoc0158, dwLoc0138, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s1_710, out a0_711, out a1_712, out a2_713, out a3_186, out a4_191, out a5_714, out a7_715, out s2_269, out s3_193, out s4_716, out s5_717, out s6_718, out s7_719, out s8_720, out s9_721, out s10_722, out s11_723, out t4_724)
	branch CONVERT(Mem190[s2_269:byte], byte, word32) != 0<32> l23080196
l23080196:
	s0_192 = s0_192 + 1<32>
l23080180:
	word32 a0_283
	word32 a5_284
	word32 a2_287
	word32 s1_725
	word32 a1_726
	word32 a3_727
	word32 a4_728
	word32 a7_729
	word32 s2_730
	word32 s3_731
	word32 s4_732
	word32 s5_733
	word32 s6_734
	word32 s7_735
	word32 s8_736
	word32 s9_737
	word32 s10_738
	word32 s11_739
	word32 t4_740
	printf(ra_220, 0x230C59EC<32>, a3_186, dwLoc0158, dwLoc0138, dwLocF0, dwLocEC, dwLocC8, dwLocA4, out s1_725, out a0_283, out a1_726, out a2_287, out a3_727, out a4_728, out a5_284, out a7_729, out s2_730, out s3_731, out s4_732, out s5_733, out s6_734, out s7_735, out s8_736, out s9_737, out s10_738, out s11_739, out t4_740)
	word32 s0_741
	word32 s1_742
	word32 a0_743
	word32 a1_744
	word32 a2_745
	word32 a3_746
	word32 a4_747
	word32 a5_748
	word32 a6_749
	word32 s4_750
	word32 t3_751
	vPortFree(a0_283, a2_287, a5_284, mstatus, s0, dwArg38, out s0_741, out s1_742, out a0_743, out a1_744, out a2_745, out a3_746, out a4_747, out a5_748, out a6_749, out s4_750, out t3_751)
l23080140:
	branch a4_191 != 44<i32> l23080154
l23080144:
	Mem322[a0_185 + 4095<i32>:byte] = 0<8>
	Mem329[a0_185:word32] = a4_191 + (a5_188 << 2<u32>)
	a5_188 = a5_188 + 1<32>
l23080154:
	a0_185 = a0_185 + 1<32>
l230800C8:
	return
client_ssl_set_alpn_exit:


void at_scan(word32 ra, word32 s1, word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scan_handler
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 t0 t1 t2
// Preserved: ra s0 s1 sp
at_scan_entry:
l230801C0:
	branch a0 != 0<32> l2308020A
l2308020A:
	branch a1 == 0<32> l230801D4
l2308020C:
	s1 = a0
	word32 a1_170
	word32 a4_173
	word32 a5_174
	word32 a2_171
	word32 a3_172
	branch strcmp(a0, 0x230C3FB8<32>, out a1_170, out a2_171, out a3_172, out a4_173, out a5_174) != 0<32> l2308022E
l2308021C:
	word32 a1_180
	word32 a4_183
	word32 a5_184
	word32 a2_181
	word32 a3_182
	branch strcmp(a1, 0x230C9664<32>, out a1_180, out a2_181, out a3_182, out a4_183, out a5_184) == 0<32> l23080250
l2308022E:
	word32 a1_175
	word32 a4_178
	word32 a5_179
	word32 a2_176
	word32 a3_177
	branch strcmp(a0, 0x230C54CC<32>, out a1_175, out a2_176, out a3_177, out a4_178, out a5_179) != 0<32> l230801D4
l2308023E:
	word32 a1_185
	word32 a2_186
	word32 a3_187
	word32 a4_188
	word32 a5_189
	branch strcmp(a1, 0x230C9664<32>, out a1_185, out a2_186, out a3_187, out a4_188, out a5_189) != 0<32> l230801D4
l2308024E:
l23080250:
l230801D2:
	branch a1 == 0<32> l230801E6
l230801E6:
l230801E8:
	word32 a5_75 = Mem73[0x42027944<32>:int32]
	branch a5_75 == 0<32> l230801D6
l230801FE:
	word32 a5_93
	word32 a3_95
	word32 a4_96
	word32 t2_97
	word32 t0_98
	word32 t1_99
	call a5_75 (retsize: 0;)
		uses: a0:0x14<32>,a1:fp + -300<i32>,a2:0<32>,a3:a3_95,a4:a4_96,a5:a5_93,ra:ra,s0:a1,s1:s1_85,t0:t0_98,t1:t1_99,t2:t2_97
		defs: a3:a3_95,a4:a4_96,a5:a5_93,t0:t0_98,t1:t1_99,t2:t2_97
l230801D4:
l230801D6:
	return
at_scan_exit:


void tcp_sent_callback(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg08, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg9C, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_sent_callback_entry:
l23080254:
	branch a0 <= 4<32> l23080286
l23080286:
	word32 a5_362
	vTaskEnterCritical(a4, mstatus, out a5_362)
	word32 s3_39 = CONVERT(Mem13[a0 + 0x4201C3A0<32>:byte], byte, word32)
	branch s3_39 == 3<32> l230802CE
l230802CE:
	word32 a4_44
	word32 a5_363
	word32 a3_43 = vTaskExitCritical(a3, mstatus, out a4_44, out a5_363)
	branch CONVERT(Mem13[a0 + 0x4201C380<32>:byte], byte, word32) != s3_39 l2308030C
l2308030C:
	word32 a2_56
	word32 a3_57
	word32 a4_58
	word32 s2_64
	word32 s3_65
	word32 s1_385
	word32 a0_386
	word32 a1_387
	word32 a5_388
	word32 a7_389
	word32 s4_390
	word32 s5_391
	word32 s6_392
	word32 s7_393
	word32 s8_394
	word32 s9_395
	word32 s10_396
	word32 s11_397
	word32 t4_398
	word32 ra_60 = printf(ra, 0x230C5E88<32>, a3_43, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_385, out a0_386, out a1_387, out a2_56, out a3_57, out a4_58, out a5_388, out a7_389, out s2_64, out s3_65, out s4_390, out s5_391, out s6_392, out s7_393, out s8_394, out s9_395, out s10_396, out s11_397, out t4_398)
	word32 a2_75 = a2_56 - s2_64
	Mem76[a2_75:word32] = Mem13[a2_56:word32]
	branch a2_75 > 0<32> l230802BE
l2308032A:
	word32 a2_82
	word32 a3_83
	word32 a4_84
	word32 mstatus_88
	word32 s1_91
	word32 s3_95
	word32 a2_114
	word32 a3_115
	word32 a4_116
	word32 mstatus_120
	word32 s1_123
	word32 s2_126
	word32 s3_127
	word32 s0_444
	word32 a0_445
	word32 a1_446
	word32 a5_447
	word32 s2_448
	word32 s4_449
	word32 s5_450
	word32 s6_451
	word32 s7_452
	word32 s8_453
	word32 s9_454
	word32 s10_455
	word32 s11_456
	word32 s0_457
	word32 a0_458
	word32 a1_459
	word32 a5_460
	word32 s4_461
	word32 s5_462
	word32 s6_463
	word32 s7_464
	word32 s8_465
	word32 s9_466
	word32 s10_467
	word32 s11_468
	word32 s0_469
	word32 s1_470
	word32 a0_471
	word32 a1_472
	word32 a2_473
	word32 a3_474
	word32 a4_475
	word32 a5_476
	word32 s2_477
	word32 s3_478
	word32 s4_479
	word32 s5_480
	word32 s6_481
	word32 s7_482
	word32 s8_483
	word32 s9_484
	word32 s10_485
	word32 s11_486
	word32 mstatus_487
	at_dump_noend(at_dump_noend(at_dump_noend(ra_60, 0<32>, 0x230C6900<32>, a2_75, a3_57, a4_58, s3_65, mstatus, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_444, out s1_91, out a0_445, out a1_446, out a2_82, out a3_83, out a4_84, out a5_447, out s2_448, out s3_95, out s4_449, out s5_450, out s6_451, out s7_452, out s8_453, out s9_454, out s10_455, out s11_456, out mstatus_88), s1_91, 0x230C5E74<32>, a2_82, a3_83, a4_84, s3_95, mstatus_88, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_457, out s1_123, out a0_458, out a1_459, out a2_114, out a3_115, out a4_116, out a5_460, out s2_126, out s3_127, out s4_461, out s5_462, out s6_463, out s7_464, out s8_465, out s9_466, out s10_467, out s11_468, out mstatus_120), s1_123, s2_126 + -1792<i32>, a2_114, a3_115, a4_116, s3_127, mstatus_120, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_469, out s1_470, out a0_471, out a1_472, out a2_473, out a3_474, out a4_475, out a5_476, out s2_477, out s3_478, out s4_479, out s5_480, out s6_481, out s7_482, out s8_483, out s9_484, out s10_485, out s11_486, out mstatus_487)
l230802E2:
	Mem171[0x4200F6EC<32>:word32] = 0<32>
	word32 a2_176
	word32 a3_177
	word32 a4_178
	word32 mstatus_182
	word32 s1_185
	word32 s3_189
	word32 a2_208
	word32 a3_209
	word32 a4_210
	word32 mstatus_214
	word32 s1_217
	word32 s3_221
	word32 s0_399
	word32 a0_400
	word32 a1_401
	word32 a5_402
	word32 s2_403
	word32 s4_404
	word32 s5_405
	word32 s6_406
	word32 s7_407
	word32 s8_408
	word32 s9_409
	word32 s10_410
	word32 s11_411
	word32 s0_412
	word32 a0_413
	word32 a1_414
	word32 a5_415
	word32 s2_416
	word32 s4_417
	word32 s5_418
	word32 s6_419
	word32 s7_420
	word32 s8_421
	word32 s9_422
	word32 s10_423
	word32 s11_424
	word32 s0_425
	word32 s1_426
	word32 a0_427
	word32 a1_428
	word32 a2_429
	word32 a3_430
	word32 a4_431
	word32 a5_432
	word32 s2_433
	word32 s3_434
	word32 s4_435
	word32 s5_436
	word32 s6_437
	word32 s7_438
	word32 s8_439
	word32 s9_440
	word32 s10_441
	word32 s11_442
	word32 mstatus_443
	at_dump_noend(at_dump_noend(at_dump_noend(ra, 0x230C7000<32>, 0x230C6900<32>, a2, a3_43, a4_44, s3_39, mstatus, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_399, out s1_185, out a0_400, out a1_401, out a2_176, out a3_177, out a4_178, out a5_402, out s2_403, out s3_189, out s4_404, out s5_405, out s6_406, out s7_407, out s8_408, out s9_409, out s10_410, out s11_411, out mstatus_182), s1_185, 0x230C5E74<32>, a2_176, a3_177, a4_178, s3_189, mstatus_182, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_412, out s1_217, out a0_413, out a1_414, out a2_208, out a3_209, out a4_210, out a5_415, out s2_416, out s3_221, out s4_417, out s5_418, out s6_419, out s7_420, out s8_421, out s9_422, out s10_423, out s11_424, out mstatus_214), s1_217, s1_217 + -1792<i32>, a2_208, a3_209, a4_210, s3_221, mstatus_214, dwLoc1C, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_425, out s1_426, out a0_427, out a1_428, out a2_429, out a3_430, out a4_431, out a5_432, out s2_433, out s3_434, out s4_435, out s5_436, out s6_437, out s7_438, out s8_439, out s9_440, out s10_441, out s11_442, out mstatus_443)
l230802AA:
	word32 a4_364
	word32 a5_365
	word32 s1_366
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 a3_370
	word32 a4_371
	word32 a5_372
	word32 a7_373
	word32 s2_374
	word32 s3_375
	word32 s4_376
	word32 s5_377
	word32 s6_378
	word32 s7_379
	word32 s8_380
	word32 s9_381
	word32 s10_382
	word32 s11_383
	word32 t4_384
	printf(ra, 0x230C5E4C<32>, vTaskExitCritical(a3, mstatus, out a4_364, out a5_365), s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_366, out a0_367, out a1_368, out a2_369, out a3_370, out a4_371, out a5_372, out a7_373, out s2_374, out s3_375, out s4_376, out s5_377, out s6_378, out s7_379, out s8_380, out s9_381, out s10_382, out s11_383, out t4_384)
l230802BE:
	return
tcp_sent_callback_exit:
l23080266:
	__assert_func(ra, 0x230C5C1C<32>, s2, s6, s7, s8, s9)


