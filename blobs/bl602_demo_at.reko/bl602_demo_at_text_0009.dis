word32 mbedtls_x509_crt_parse(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s5, word32 s6, word32 s8, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg94, word32 dwArg98, word32 dwArgB8, word32 dwArgF4, word32 dwArgF8, word32 dwArg010C, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config_client_common
//      altcp_tls_create_config_client_2wayauth
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +010C:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_x509_crt_parse_entry:
l23090390:
	word32 s2_119
	word32 s0_143
	branch a0 == 0<32> l23090498
l230903B0:
	word32 s1_133 = a1
	branch a1 == 0<32> l23090498
l23090498:
	s0_143 = 0xFDFFF800<32>
	s2_119 = s2
l230903B6:
	s7 = a0
	s3 = a2
	branch a2 == 0<32> l230903D6
l230903BC:
	a5 = CONVERT(Mem29[a1 + a2 + -1<i32>:byte], byte, word32)
	branch a5 != 0<32> l230903D6
l230903C6:
	s5 = 0x230C8000<32>
	word32 a1_658
	branch strstr(ra, a1, 0x230C8550<32>, out a1_658, out a3, out a4, out a5) != 0<32> l2309047C
l2309047C:
	word32 s4_129 = 0<32>
	s0_143 = 0<32>
	word32 s8_160 = 0<32>
	word32 s9_118 = 0x230C8000<32>
	s10 = 0xFEFFFB80<32>
	s6 = 0xFEFFFF80<32>
	s11 = 0xFD000780<32>
	s2_119 = s2
l23090460:
	a5 = 1<32>
	branch s3 >u 1<32> l23090402
l23090402:
	word32 a0_90
	word32 a2_91
	word32 a3_92
	word32 a1_101
	word32 s2_661
	word32 s1_660
	word32 a5_659
	ra = mbedtls_pem_read_buffer(mbedtls_pem_init(ra, fp + -76<i32>, out a5_659), s0_143, fp + -76<i32>, s5 + 1360<i32>, s9_118 + 1388<i32>, s1_133, fp + -80<i32>, s2_119, mstatus, dwArg24, dwArg78, dwArgB8, dwArgF8, out s0_143, out s1_660, out a0_90, out a1_101, out a2_91, out a3_92, out a4, out a5, out s2_661, out s3, out s4_129, out s5, out s6, out s7, out s8_160, out s9_118, out s10, out s11)
	s2_119 = a0_90
	branch a0_90 != 0<32> l23090444
l23090444:
	branch a0_90 == s10 l23090478
l23090448:
	branch a0_90 == s6 l23090466
l2309044C:
	word32 a5_126
	word32 a3_666
	word32 s1_128 = mbedtls_pem_free(fp + -76<i32>, a2_91, a5, mstatus, dwArgF8, dwArg0138, out a3_666, out a4, out a5_126, out s4_129)
	0<32> = dwArg94
	s3 = s3 - a5_126
	s1_133 = s1_128 + a5_126
l23090422:
	0<32> = dwArg94
	word32 a0_139
	word32 a2_151
	word32 a5_152
	word32 s2_664
	word32 a1_662
	word32 a4_663
	ra = mbedtls_x509_crt_parse_der(ra, dwArg34, s7, a1_101, a2_91, a3_92, a4, a5, s5, s6, s7, s10, s11, mstatus, dwLoc4C, dwLoc48, s8, s6, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg74, dwArg78, dwArg98, dwArgB8, dwArgF4, out s0_143, out a0_139, out a1_662, out a2_151, out a4_663, out a5_152, out s2_664, out s3, out s5, out s6, out s7, out s8_160, out s9_118, out s10, out s11, out mstatus)
	s2_119 = a0_139
	word32 a3_665
	s1_133 = mbedtls_pem_free(fp + -76<i32>, a2_151, a5_152, mstatus, dwArgF8, dwArg0138, out a3_665, out a4, out a5, out s4_129)
	branch a0_139 != 0<32> l23090474
l23090474:
	branch a0_139 != s11 l2309045A
l2309045A:
	branch s0_143 != 0<32> l2309045E
l2309045C:
	s0_143 = s2_119
l2309045E:
	s4_129 = s4_129 + 1<32>
l23090478:
	s0_143 = s2_119
l23090440:
	s8_160 = 1<32>
l23090466:
	branch s8_160 != 0<32> l230904A0
l230904A0:
	s0_143 = s4_129
l2309046A:
	branch s0_143 != 0<32> l230903E2
l2309046C:
	s0_143 = 0xFDFFF880<32>
l230903D6:
	word32 s9_657
	word32 a0_222
	word32 s0_653
	word32 a1_654
	word32 a2_655
	word32 s8_656
	mbedtls_x509_crt_parse_der(ra, s0, a0, a1, a2, a3, a4, a5, s5, s6, a0, s10, s11, mstatus, dwLoc4C, dwLoc48, s8, s6, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, s5, dwArg58, dwArg74, dwArg78, dwArg98, dwArgB8, dwArgF4, out s0_653, out a0_222, out a1_654, out a2_655, out a4, out a5, out s2_119, out s3, out s5, out s6, out s7, out s8_656, out s9_657, out s10, out s11, out mstatus)
	s0_143 = a0_222
l230903E2:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = s0_143
	a2Out = dwArg01A8
	a3Out = s2
	a4Out = a4
	a5Out = a5
	s2Out = s2_119
	s3Out = s3
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArg0148
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return dwLoc08
mbedtls_x509_crt_parse_exit:


word32 mycalloc(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_alloc_wrap
//      eckey_alloc_wrap
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_ssl_conf_own_cert
//      mbedtls_ssl_set_hostname
//      mbedtls_ssl_setup
//      mbedtls_ssl_write_record
//      mbedtls_ssl_prepare_handshake_record
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_parse_der
//      mbedtls_asn1_get_sequence_of
//      mbedtls_mpi_grow
//      mbedtls_mpi_shrink
//      gcm_ctx_alloc
//      aes_ctx_alloc
//      ecp_normalize_jac_many
//      mbedtls_ecp_mul
//      mbedtls_md_setup
//      md5_ctx_alloc
//      sha1_ctx_alloc
//      sha224_ctx_alloc
//      mbedtls_pem_read_buffer
//      mbedtls_x509_get_name
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s8
// Trashed: a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mycalloc_entry:
l230904A4:
	word32 a2_5 = a0 + a1
	word32 a0_18
	word32 s1_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 a1_69
	word32 a2_70
	word32 a3_71
	word32 a4_72
	word32 a5_73
	word32 a6_74
	word32 s8_75
	pvPortMalloc(ra, s1, a2_5, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_26, out a0_18, out a1_69, out a2_70, out a3_71, out a4_72, out a5_73, out a6_74, out s2_27, out s3_28, out s4_29, out s8_75)
	word32 a1_37
	word32 a2_38
	word32 a3_39
	word32 a4_40
	word32 a5_41
	word32 t1_76
	word32 a0_77
	word32 ra_42 = memset(ra, a0_18, 0<32>, a2_5, out t1_76, out a0_77, out a1_37, out a2_38, out a3_39, out a4_40, out a5_41)
	s0Out = a0_18
	s1Out = s1_26
	a1Out = a1_37
	a2Out = a2_38
	a3Out = a3_39
	a4Out = a4_40
	a5Out = a5_41
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s8Out = dwLoc1C
	return ra_42
mycalloc_exit:


word32 aes_gen_tables(word32 dwArg0148, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_aes_setkey_enc
// MayUse:  Stack +0148:[0..31]
// LiveOut: a0 a1 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s6 sp
aes_gen_tables_entry:
l230904CA:
	word32 a2_19 = fp + -2080<i32>
	word32 a5_20 = 1<32>
	word32 a3_21 = 0<32>
l230904E8:
	Mem31[(a5_20 << 2<u32>) + (fp + 0xFFEFE0<32>) + 3072<i32>:word32] = a3_21
	Mem33[a5_20:word32] = a2_19
	word32 a1_34 = a5_20 & 128<i32>
	word32 a4_35 = a5_20 << 1<u32>
	branch a1_34 == 0<32> l23090508
l23090506:
	a1_34 = 0x1B<32>
l23090508:
	a3_21 = a3_21 + 1<32>
	a5_20 = (a5_20 ^ a4_35 ^ a1_34) & 255<i32>
	a2_19 = a2_19 + 4<32>
	branch a3_21 != 256<i32> l230904E8
l23090518:
	word32 a4_50 = 0x4201D7E4<32>
	word32 a5_52 = 1<32>
l23090526:
	Mem55[a5_52:word32] = a4_50
	word32 a3_56 = a5_52 << 1<u32>
	word32 a5_57 = a5_52 & 128<i32>
	branch a5_57 == 0<32> l23090534
l23090532:
	a5_57 = 0x1B<32>
l23090534:
	a4_50 = a4_50 + 4<32>
	a5_52 = (a5_57 ^ a3_56) & 255<i32>
	branch a4_50 != 0x4201D80C<32> l23090526
l23090540:
	Mem70[0x4201C6E4<32>:byte] = 0x63<8>
	Mem72[0x4201D86F<32>:byte] = 0<8>
	word32 t1_76 = fp + -1056<i32> + 4<i32>
	word32 a7_117 = 1<32>
	word32 a1_148 = 0x4201C6E4<32>
	word32 a2_187 = 0x4201D80C<32>
l2309056E:
	word32 t5_93 = Mem83[(255<i32> - Mem83[t1_76 + 0<i32>:int32] << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32]
	word32 a5_97 = t5_93 << 1<u32> | t5_93 >> 7<u32>
	word32 a0_101 = (a5_97 & 255<i32>) << 1<u32> | (a5_97 & 255<i32>) >> 7<u32>
	word32 a3_105 = (a0_101 & 255<i32>) << 1<u32> | (a0_101 & 255<i32>) >> 7<u32>
	word32 a5_114 = ((a3_105 & 255<i32>) >> 7<u32> | (a3_105 & 255<i32>) << 1<u32>) & 255<i32> ^ t5_93 ^ a5_97 & 255<i32> ^ a0_101 & 255<i32> ^ a3_105 & 255<i32>
	Mem119[a7_117 + 0x4201C6E4<32>:byte] = SLICE(a5_114 ^ 99<i32>, byte, 0)
	Mem122[(a5_114 ^ 99<i32>) + 0x4201D80C<32>:byte] = SLICE(a7_117, byte, 0)
	t1_76 = t1_76 + 4<32>
	a7_117 = a7_117 + 1<32>
	branch a7_117 != 256<i32> l2309056E
l230905E6:
	word32 a3_137 = 0<32>
l23090640:
	word32 s5_189
	word32 s4_190
	word32 a4_150 = CONVERT(Mem149[a1_148:byte], byte, word32)
	word32 s4_156 = a4_150 << 1<u32> ^ CONVERT(SLICE(a4_150, byte, 0), byte, int32) >> 31<i32> & 0x1B<32>
	word32 a5_164 = a4_150 << 8<u32> ^ a4_150 << 0x10<u32> ^ s4_156 & 255<i32> ^ (a4_150 ^ s4_156 & 255<i32>) << 24<i32>
	Mem169[a5_164:word32] = a3_137 + 0x4201C7E4<32>
	Mem174[a3_137 + 0x4201CBE4<32>:word32] = a5_164 << 8<u32> | a5_164 >>u 0x18<u32>
	Mem180[a3_137 + 0x4201CFE4<32>:word32] = a5_164 << 0x10<u32> | a5_164 >>u 0x10<u32>
	Mem186[a3_137 + 0x4201D3E4<32>:word32] = a5_164 << 24<i32> | a5_164 >>u 8<u32>
	word32 a5_188 = CONVERT(Mem186[a2_187:byte], byte, word32)
	branch a5_188 == 0<32> l230907B8
l230907B8:
	s5_189 = 0<32>
	s4_190 = 0<32>
l230906B8:
	word32 a4_197 = Mem186[(a5_188 << 2<u32>) + (fp + 0xFFEFE0<32>) + -1024<i32>:int32]
	s5_189 = Mem186[((dwLoc03E8 + a4_197 | 255<i32>) << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32]
	s4_190 = Mem186[((a4_197 + dwLoc03FC | 255<i32>) << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32] << 8<i32>
l230906F6:
	word32 s4_218 = s4_190 ^ s5_189
	word32 a4_219 = 0<32>
	branch a5_188 == 0<32> l23090726
l230906FE:
	a4_219 = Mem186[((Mem186[(a5_188 << 2<u32>) + (fp + 0xFFEFE0<32>) + -1024<i32>:int32] + dwLoc03EC | 255<i32>) << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32] << 16<i32>
l23090726:
	word32 s4_242 = s4_218 ^ a4_219
	word32 a4_243 = 0<32>
	branch a5_188 == 0<32> l23090756
l2309072E:
	a4_243 = Mem186[((Mem186[(a5_188 << 2<i32>) + (fp + 0xFFEFE0<32>) + -1024<i32>:int32] + dwLoc03F4 | 255<i32>) << 2<i32>) + (fp + 0xFFEFE0<32>) + -2048<i32>:int32] << 0x18<u32>
l23090756:
	word32 a5_267 = s4_242 ^ a4_243
	Mem277[a5_267:word32] = a3_137 + 0x4201D90C<32>
	Mem285[a3_137 + 0x4201DD0C<32>:word32] = a5_267 << 8<u32> | a5_267 >>u 0x18<u32>
	Mem294[a3_137 + 0x4201E10C<32>:word32] = a5_267 << 0x10<u32> | a5_267 >>u 0x10<u32>
	Mem303[a3_137 + 0x4201E50C<32>:word32] = a5_267 << 24<i32> | a5_267 >>u 8<u32>
	a3_137 = a3_137 + 4<32>
	a1_148 = a1_148 + 1<32>
	a2_187 = a2_187 + 1<32>
	branch a3_137 != 1024<i32> l23090640
l230907A2:
	0<32> = dwArg0148
	a0Out = 255<i32>
	a1Out = a1_148
	a3Out = a3_137
	a4Out = a5_267 >>u 8<u32>
	return dwLoc03FC
aes_gen_tables_exit:


word32 mbedtls_aes_init(word32 ra, word32 a0, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      block_cipher_df
//      mbedtls_ctr_drbg_seed
//      mbedtls_aes_setkey_dec
//      aes_ctx_alloc
//      pem_aes_decrypt
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a1 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_aes_init_entry:
l230907BE:
l230907C4_thunk_memset:
	word32 a1_8
	word32 a4_11
	word32 a5_12
	word32 t1_19
	word32 a0_20
	word32 a2_21
	word32 a3_22
	word32 ra_13 = memset(ra, a0, 0<32>, 280<i32>, out t1_19, out a0_20, out a1_8, out a2_21, out a3_22, out a4_11, out a5_12)
	a1Out = a1_8
	a4Out = a4_11
	a5Out = a5_12
	return ra_13
mbedtls_aes_init_exit:


word32 mbedtls_aes_free(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      block_cipher_df
//      mbedtls_aes_setkey_dec
//      aes_ctx_free
//      pem_aes_decrypt
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_aes_free_entry:
l230907C8:
	a0_5 = a0
	branch a0 != 0<32> l230907D6
l230907D6:
	word32 a0_5
	branch a0_5 != a0 + 280<i32> l230907D0
l230907D0:
	Mem7[a0_5:byte] = 0<8>
	a0_5 = a0_5 + 1<32>
l230907DA:
l230907CE:
	return a0 + 280<i32>
mbedtls_aes_free_exit:


word32 mbedtls_aes_setkey_enc(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 dwArg44, word32 dwArg0128, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      block_cipher_df
//      ctr_drbg_update_internal
//      mbedtls_ctr_drbg_seed
//      mbedtls_aes_setkey_dec
//      aes_setkey_enc_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] Stack +0044:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 s8 t3
// Preserved: a7 s2 s3 s5 sp t0 t1 t2 t4 t5 t6 tp
mbedtls_aes_setkey_enc_entry:
l230907DC:
	word32 s0_14 = a0
	branch a5 != 0<32> l23090802
l230907F2:
	Mem45[1<32>:word32] = aes_gen_tables(dwArg0128, out a0, out a1, out a3, out a4)
	s0_14 = dwArg44
l23090802:
	word32 a5_48
	branch a2 == 192<i32> l230908D0
l230908D0:
	a5_48 = 0xC<32>
l2309080A:
	branch a2 == 256<i32> l230908D4
l230908D4:
	a5_48 = 0xE<32>
l23090812:
	a0 = 0xFFFFFFE0<32>
	branch a2 != 128<i32> l230908C6
l2309081C:
	a5_48 = 0xA<32>
l2309081E:
	Mem59[a5_48:word32] = s0_14
	word32 a5_61 = s0_14 + 8<i32>
	Mem62[a5_61 + 4<i32>:word32] = s0_14
	word32 a3_63 = a5_61
	word32 a2_66 = (a2 >>u 5<i32> << 2<i32>) + a1
l2309082E:
	branch a2_66 != a1 l230908D8
l230908D8:
	a1 = a1 + 4<32>
	word32 a0_80 = CONVERT(Mem69[a1 + -1<i32>:byte], byte, word32)
	a3_63 = a3_63 + 4<32>
	a4 = CONVERT(Mem69[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem69[a1 + 2<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem69[a1:byte], byte, word32) | a0_80 << 24<i32>
	Mem83[a3_63 + 4092<i32>:word32] = a4
	a0 = a0_80 << 24<i32>
l23090832:
	s0_14 = Mem69[a4:word32]
	a3 = 0xC<32>
	branch a4 == 0xC<32> l230908FE
l230908FE:
	a1 = 0x4201D7E4<32>
	s0_14 = s0_14 + 200<i32>
l23090912:
	word32 a5_101 = Mem96[a0:word32]
	word32 a4_126 = CONVERT(Mem96[0x4201C6E4<32>:byte], byte, word32) ^ (a0 ^ Mem96[a1:int32]) ^ CONVERT(Mem96[0x4201C6E4<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem96[0x4201C6F0<32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem96[0x4201C6E4<32>:byte], byte, word32) << 8<i32>
	word32 a0_127 = Mem96[a5_101 + 4<32>:int32]
	Mem128[a4_126:word32] = a5_101 + 0x18<32>
	word32 a4_129 = a4_126 ^ a0_127
	word32 a0_130 = Mem128[a5_101 + 8<32>:int32]
	Mem131[a4_129 + 4<i32>:word32] = a5_101 + 0x18<32>
	word32 a4_132 = a4_129 ^ a0_130
	word32 a0_133 = Mem131[a5_101 + 0xC<32>:int32]
	Mem134[a4_132 + 8<i32>:word32] = a5_101 + 0x18<32>
	word32 a4_135 = a4_132 ^ a0_133
	a0 = Mem134[a5_101 + 0x10<32>:int32]
	Mem137[a4_135 + 12<i32>:word32] = a5_101 + 0x18<32>
	word32 a4_138 = a4_135 ^ a0
	Mem139[a4_138 + 16<i32>:word32] = a5_101 + 0x18<32>
	Mem141[(a4_138 ^ 0xC<32>) + 20<i32>:word32] = a5_101 + 0x18<32>
	a1 = a1 + 4<32>
	a4 = a4_138 ^ 0xC<32>
	branch a5_101 + 0x18<32> != s0_14 + 200<i32> l23090912
l2309098A:
l2309083A:
	a3 = 0xE<32>
	branch a4 == 0xE<32> l2309098C
l2309098C:
	word32 a0_146 = 0x4201D7E4<32>
	s0_14 = s0_14 + 232<i32>
l230909A0:
	word32 a5_155 = Mem150[a3:word32]
	word32 a6_162 = Mem150[a5_155 + 16<i32>:int32]
	word32 a4_181 = CONVERT(Mem150[(a1 >>u 8<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) ^ (a3 ^ Mem150[a0_146:int32]) ^ CONVERT(Mem150[(a1 >>u 0x18<u32>) + 0x4201C6E4<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem150[(a1 & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem150[(a1 >>u 0x10<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 8<i32>
	word32 a3_182 = Mem150[a5_155 + 4<i32>:int32]
	Mem183[a4_181:word32] = a5_155 + 32<i32>
	word32 a4_184 = a4_181 ^ a3_182
	word32 a3_185 = Mem183[a5_155 + 8<i32>:int32]
	Mem186[a4_184 + 4<i32>:word32] = a5_155 + 32<i32>
	word32 a4_187 = a4_184 ^ a3_185
	word32 a3_188 = Mem186[a5_155 + 12<i32>:int32]
	Mem189[a4_187 + 8<i32>:word32] = a5_155 + 32<i32>
	word32 a4_190 = a4_187 ^ a3_188
	Mem192[a4_190 + 12<i32>:word32] = a5_155 + 32<i32>
	word32 a4_212 = CONVERT(Mem192[(a4_190 >>u 16<i32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 16<i32> ^ (((CONVERT(Mem192[(a4_190 & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) ^ a6_162) ^ CONVERT(Mem192[(a4_190 >>u 0x18<u32>) + 0x4201C6E4<32>:byte], byte, word32) << 24<i32>) ^ CONVERT(Mem192[(a4_190 >>u 8<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 8<i32>)
	word32 a3_213 = Mem192[a5_155 + 20<i32>:int32]
	Mem214[a4_212 + 16<i32>:word32] = a5_155 + 32<i32>
	word32 a4_215 = a4_212 ^ a3_213
	a3 = Mem214[a5_155 + 24<i32>:int32]
	Mem217[a4_215 + 20<i32>:word32] = a5_155 + 32<i32>
	word32 a4_218 = a4_215 ^ a3
	Mem219[a4_218 + 24<i32>:word32] = a5_155 + 32<i32>
	a4 = a4_218 ^ a1
	Mem221[a4 + 28<i32>:word32] = a5_155 + 32<i32>
	a0_146 = a0_146 + 4<32>
	branch a5_155 + 32<i32> != s0_14 + 232<i32> l230909A0
l23090A6A:
l23090840:
	a3 = 0xA<32>
	a0 = 0<32>
	branch a4 != 0xA<32> l230908C6
l23090848:
	a1 = 0x4201D7E4<32>
	s0_14 = s0_14 + 168<i32>
l2309085C:
	word32 a5_236 = Mem231[a0:word32]
	word32 a4_261 = CONVERT(Mem231[0x4201C6E4<32>:byte], byte, word32) ^ (a0 ^ Mem231[a1:int32]) ^ CONVERT(Mem231[0x4201C6E4<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem231[0x4201C6EE<32>:byte], byte, word32) << 24<i32> ^ CONVERT(Mem231[0x4201C6E4<32>:byte], byte, word32) << 8<i32>
	word32 a0_262 = Mem231[a5_236 + 4<32>:int32]
	Mem263[a4_261:word32] = a5_236 + 0x10<32>
	word32 a4_264 = a4_261 ^ a0_262
	a0 = Mem263[a5_236 + 8<32>:int32]
	Mem266[a4_264 + 4<i32>:word32] = a5_236 + 0x10<32>
	word32 a4_267 = a4_264 ^ a0
	Mem268[a4_267 + 8<i32>:word32] = a5_236 + 0x10<32>
	Mem270[(a4_267 ^ 0xA<32>) + 12<i32>:word32] = a5_236 + 0x10<32>
	a1 = a1 + 4<32>
	a4 = a4_267 ^ 0xA<32>
	branch a5_236 + 0x10<32> != s0_14 + 168<i32> l2309085C
l230908C4:
	a0 = 0<32>
l230908C6:
	a0Out = a0
	a1Out = a1
	a3Out = a3
	a4Out = a4
	s4Out = dwArg04
	return s0_14
mbedtls_aes_setkey_enc_exit:


void mbedtls_aes_setkey_dec(word32 ra, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aes_setkey_dec_wrap
//      pem_aes_decrypt
// MayUse:  a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 sp
mbedtls_aes_setkey_dec_entry:
l23090A6C:
	word32 a1_18
	word32 a4_21
	word32 a5_197
	mbedtls_aes_init(ra, fp + -296<i32>, out a1_18, out a4_21, out a5_197)
	Mem29[a1 + 12<i32>:word32] = a1
	word32 a0_31
	word32 a1_32
	word32 s4_200
	word32 a4_199
	word32 a3_198
	word32 s0_38 = mbedtls_aes_setkey_enc(fp + -296<i32>, a1_18, dwLocDC, a4_21, a1 + 8<i32>, dwLocFC, dwLoc18, out a0_31, out a1_32, out a3_198, out a4_199, out s4_200)
	branch a0_31 != 0<32> l23090AFC
l23090A9A:
	Mem48[a1_32:word32] = s0_38
	Mem52[(a1_32 << 4<u32>) + 8<i32>:word32] = s0_38
	Mem56[(a1_32 << 4<u32>) + 12<i32>:word32] = s0_38
	Mem60[(a1_32 << 4<u32>) + 16<i32>:word32] = s0_38
	word32 a5_119 = Mem60[(a1_32 << 4<u32>) + 12<i32>:word32] + 0xFFFFFFF0<32>
	Mem64[(a1_32 << 4<u32>) + 20<i32>:word32] = s0_38
	word32 a4_113 = a1_32 << 4<u32>
	word32 a2_116 = s0_38 + 24<i32>
	word32 a1_118 = a1_32 + 0xFFFFFFFF<32>
l23090AE8:
	branch a1_118 > 0<32> l23090B14
l23090B14:
	word32 a6_71 = 0<32>
l23090B16:
	word32 a4_76 = Mem75[a5_119 + a6_71:word32]
	a4_113 = Mem75[(CONVERT(Mem75[(a4_76 >>u 16<i32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 2<i32>) + 0x4201E10C<32>:word32] ^ ((Mem75[(CONVERT(Mem75[(a4_76 & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 2<i32>) + 0x4201D90C<32>:word32] ^ Mem75[(CONVERT(Mem75[(a4_76 >>u 0x18<u32>) + 0x4201C6E4<32>:byte], byte, word32) << 2<i32>) + 0x4201E50C<32>:int32]) ^ Mem75[(CONVERT(Mem75[(a4_76 >>u 8<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 2<i32>) + 0x4201DD0C<32>:int32])
	Mem114[a2_116 + a6_71:word32] = a4_113
	a6_71 = a6_71 + 4<32>
	branch a6_71 != 0x10<32> l23090B16
l23090B7E:
	a2_116 = a2_116 + 0x10<32>
	a1_118 = a1_118 + 0xFFFFFFFF<32>
	a5_119 = a5_119 + 0xFFFFFFF0<32>
l23090AEC:
	Mem124[a4_113:word32] = a2_116
	Mem126[a4_113 + 4<i32>:word32] = a2_116
	word32 a5_127 = Mem126[a4_113 + 8<i32>:word32]
	Mem128[a4_113 + 8<i32>:word32] = a2_116
	Mem130[Mem128[a5_127 + 12<i32>:word32] + 12<i32>:word32] = a2_116
l23090AFC:
	mbedtls_aes_free(fp + -296<i32>)
	return
mbedtls_aes_setkey_dec_exit:


word32 mbedtls_aes_encrypt(word32 a1, word32 a2, word32 a4, word32 dwArg3C, word32 dwArg0148, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_aes_crypt_ecb
//      aes_crypt_ctr_wrap
//      aes_crypt_cfb128_wrap
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] Stack +003C:[0..31] Stack +0148:[0..31]
// LiveOut: a3 a4 a5 a6 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_aes_encrypt_entry:
l23090B86:
	word32 a3_39 = CONVERT(Mem27[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1:byte], byte, word32) | CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) << 16<i32>
	word32 a3_58 = CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 4<i32>:byte], byte, word32))
	word32 a3_71 = CONVERT(Mem27[a1 + 10<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 9<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 8<i32>:byte], byte, word32))
	word32 t6_107 = a4 + 16<i32>
	word32 a5_233 = (CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) << 24<i32> | a3_39) ^ a3_39
	word32 s10_103 = (CONVERT(Mem27[a1 + 7<i32>:byte], byte, word32) << 24<i32> | a3_58) ^ a3_58
	word32 s9_118 = (CONVERT(Mem27[a1 + 11<i32>:byte], byte, word32) << 24<i32> | a3_71) ^ a3_71
	word32 s8_276 = (CONVERT(Mem27[a1 + 15<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 14<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 12<i32>:byte], byte, word32)))) ^ Mem27[Mem27[a3_71 + 8<i32>:word32] + 12<i32>:word32]
	word32 s7_213 = (Mem27[Mem27[a4 + 4<i32>:word32]:int32] >> 1<u32>) + 0xFFFFFFFF<32>
l23090C68:
	word32 a1_129 = a1 ^ Mem27[((s8_276 >>u 0x18<u32>) << 2<i32>) + 0x4201D3E4<32>:word32] ^ Mem27[t6_107:int32] ^ Mem27[(s10_103 >>u 6<u32> & 1020<i32>) + 0x4201CBE4<32>:word32] ^ Mem27[(s9_118 >>u 0xE<u32> & 1020<i32>) + 0x4201CFE4<32>:word32]
	word32 s11_138 = Mem27[t6_107 + 16<i32>:int32]
	word32 a3_153 = Mem27[((s10_103 & 255<i32>) << 2<i32>) + 0x4201C7E4<32>:word32] ^ Mem27[((a5_233 >>u 0x18<u32>) << 2<i32>) + 0x4201D3E4<32>:word32] ^ Mem27[t6_107 + 4<i32>:int32] ^ Mem27[(s9_118 >>u 6<u32> & 1020<i32>) + 0x4201CBE4<32>:word32] ^ Mem27[(s8_276 >>u 0xE<u32> & 1020<i32>) + 0x4201CFE4<32>:word32]
	word32 a0_178 = Mem27[((s9_118 & 255<i32>) << 2<i32>) + 0x4201C7E4<32>:word32] ^ Mem27[((s10_103 >>u 0x18<u32>) << 2<i32>) + 0x4201D3E4<32>:word32] ^ Mem27[t6_107 + 8<i32>:int32] ^ Mem27[(s8_276 >>u 6<u32> & 1020<i32>) + 0x4201CBE4<32>:word32] ^ Mem27[(a5_233 >>u 0xE<u32> & 1020<i32>) + 0x4201CFE4<32>:word32]
	word32 a4_191 = Mem27[((s8_276 & 255<i32>) << 2<i32>) + 0x4201C7E4<32>:int32] ^ Mem27[((s9_118 >>u 0x18<u32>) << 2<i32>) + 0x4201D3E4<32>:int32] ^ Mem27[t6_107 + 12<i32>:int32] ^ Mem27[(a5_233 >>u 6<i32> & 1020<i32>) + 0x4201CBE4<32>:word32] ^ Mem27[(s10_103 >>u 0xE<u32> & 1020<i32>) + 0x4201CFE4<32>:int32]
	word32 s10_202 = Mem27[t6_107 + 20<i32>:int32]
	word32 s9_205 = Mem27[t6_107 + 24<i32>:int32]
	word32 s8_208 = Mem27[t6_107 + 28<i32>:int32]
	branch s7_213 > 0<32> l23090F0A
l23090F0A:
	word32 a4_254 = Mem27[((a4_191 & 255<i32>) << 2<i32>) + 0x4201C7E4<32>:word32] ^ Mem27[((a0_178 >>u 24<i32>) << 2<i32>) + 0x4201D3E4<32>:word32]
	a5_233 = Mem27[((a1_129 & 255<i32>) << 2<i32>) + 0x4201C7E4<32>:int32] ^ Mem27[((a4_191 >>u 0x18<u32>) << 2<i32>) + 0x4201D3E4<32>:word32] ^ s11_138 ^ Mem27[((a3_153 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x4201CBE4<32>:int32] ^ Mem27[((a0_178 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x4201CFE4<32>:int32]
	s10_103 = Mem27[((a3_153 & 255<i32>) << 2<i32>) + 0x4201C7E4<32>:int32] ^ Mem27[((a1_129 >>u 0x18<u32>) << 2<i32>) + 0x4201D3E4<32>:int32] ^ s10_202 ^ Mem27[((a0_178 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x4201CBE4<32>:int32] ^ Mem27[((a4_191 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x4201CFE4<32>:int32]
	a1 = Mem27[a4_254:word32]
	s9_118 = Mem27[((a0_178 & 255<i32>) << 2<i32>) + 0x4201C7E4<32>:int32] ^ Mem27[((a3_153 >>u 0x18<u32>) << 2<i32>) + 0x4201D3E4<32>:int32] ^ s9_205 ^ Mem27[((a4_191 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x4201CBE4<32>:int32] ^ Mem27[((a1_129 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x4201CFE4<32>:int32]
	t6_107 = t6_107 + 32<i32>
	s8_276 = a4_254 ^ s8_208 ^ a4_254 ^ a4_254
	s7_213 = s7_213 + 0xFFFFFFFF<32>
l23090DBE:
	word32 s6_280 = (a1_129 & 255<i32>) + 0x4201C6E4<32>
	word32 s5_294 = (a3_153 & 255<i32>) + 0x4201C6E4<32>
	word32 s3_309 = (a0_178 & 255<i32>) + 0x4201C6E4<32>
	word32 s2_315 = (a3_153 >>u 0x18<u32>) + 0x4201C6E4<32>
	word32 a4_320 = (a4_191 & 255<i32>) + 0x4201C6E4<32>
	word32 a3_325 = (a3_153 >>u 16<i32> & 255<i32>) + 0x4201C6E4<32>
	word32 s11_296 = CONVERT(Mem27[(a3_153 >>u 8<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s6_280:byte], byte, word32) ^ s11_138) ^ CONVERT(Mem27[(a0_178 >>u 0x10<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[(a4_191 >>u 0x18<u32>) + 0x4201C6E4<32>:byte], byte, word32) << 24<i32>
	word32 s10_312 = CONVERT(Mem27[(a0_178 >>u 8<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s5_294:byte], byte, word32) ^ s10_202) ^ CONVERT(Mem27[(a4_191 >>u 0x10<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[(a1_129 >>u 0x18<u32>) + 0x4201C6E4<32>:byte], byte, word32) << 24<i32>
	word32 s9_328 = CONVERT(Mem27[(a4_191 >>u 8<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s3_309:byte], byte, word32) ^ s9_205) ^ CONVERT(Mem27[(a1_129 >>u 0x10<u32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[s2_315:byte], byte, word32) << 24<i32>
	word32 s8_336 = CONVERT(Mem27[a4_320:byte], byte, word32) ^ s8_208 ^ CONVERT(Mem27[(a1_129 >>u 8<i32> & 255<i32>) + 0x4201C6E4<32>:byte], byte, word32) << 8<i32> ^ CONVERT(Mem27[a3_325:byte], byte, word32) << 16<i32>
	word32 a5_337 = CONVERT(Mem27[(a0_178 >>u 24<i32>) + 0x4201C6E4<32>:byte], byte, word32)
	Mem340[a2:byte] = SLICE(s11_296, byte, 0)
	Mem341[a2 + 4<i32>:byte] = SLICE(s10_312, byte, 0)
	Mem345[a2 + 1<i32>:byte] = SLICE(s11_296 >>u 8<u32>, byte, 0)
	Mem347[a2 + 2<i32>:byte] = SLICE(s11_296 >>u 0x10<u32>, byte, 0)
	Mem349[a2 + 5<i32>:byte] = SLICE(s10_312 >>u 8<u32>, byte, 0)
	Mem351[a2 + 6<i32>:byte] = SLICE(s10_312 >>u 0x10<u32>, byte, 0)
	Mem353[a2 + 9<i32>:byte] = SLICE(s9_328 >>u 8<u32>, byte, 0)
	Mem355[a2 + 10<i32>:byte] = SLICE(s9_328 >>u 0x10<u32>, byte, 0)
	Mem359[a2 + 8<i32>:byte] = SLICE(s9_328, byte, 0)
	word32 s8_343 = s8_336 ^ a5_337 << 24<i32>
	Mem360[a2 + 12<i32>:byte] = SLICE(s8_343, byte, 0)
	Mem362[a2 + 13<i32>:byte] = SLICE(s8_343 >>u 8<u32>, byte, 0)
	Mem365[a2 + 3<i32>:byte] = SLICE(s11_296 >>u 0x18<u32>, byte, 0)
	Mem366[a2 + 7<i32>:byte] = SLICE(s10_312 >>u 0x18<u32>, byte, 0)
	Mem367[a2 + 11<i32>:byte] = SLICE(s9_328 >>u 0x18<u32>, byte, 0)
	Mem368[a2 + 15<i32>:byte] = SLICE(s8_343 >>u 0x18<u32>, byte, 0)
	Mem369[a2 + 14<i32>:byte] = SLICE(s8_343 >>u 0x10<u32>, byte, 0)
	0<32> = dwArg0148
	0<32> = dwArg3C
	s1Out = 0x4201C7E4<32>
	a3Out = a3_325
	a4Out = a4_320
	a5Out = s8_343 >>u 0x10<u32>
	a6Out = dwArgB8
	s2Out = s2_315
	s3Out = s3_309
	s4Out = dwArg98
	s5Out = s5_294
	s6Out = s6_280
	s7Out = s7_213
	s8Out = dwArg78
	s9Out = s9_328 >>u 0x18<u32>
	s10Out = s10_312 >>u 0x18<u32>
	s11Out = s11_296 >>u 0x18<u32>
	return dwLoc04
mbedtls_aes_encrypt_exit:


word32 mbedtls_aes_decrypt(word32 a1, word32 a2, word32 a5, word32 dwArg3C, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_aes_crypt_ecb
//      mbedtls_aes_crypt_cbc
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +003C:[0..31] Stack +0148:[0..31]
// LiveOut: s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_aes_decrypt_entry:
l23090FC6:
	word32 a4_58 = CONVERT(Mem27[a1 + 10<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 9<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 8<i32>:byte], byte, word32))
	word32 a4_39 = CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 4<i32>:byte], byte, word32))
	word32 a5_64 = Mem27[a4_58 + 8<i32>:word32]
	word32 s10_257 = (CONVERT(Mem27[a1 + 7<i32>:byte], byte, word32) << 24<i32> | a4_39) ^ a4_39
	word32 t5_106 = Mem27[a4_39 + 4<i32>:word32] + 16<i32>
	word32 s9_117 = (CONVERT(Mem27[a1 + 11<i32>:byte], byte, word32) << 24<i32> | a4_58) ^ a4_58
	word32 s5_273 = (CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1:byte], byte, word32)))) ^ Mem27[a5_64:int32]
	word32 s8_111 = (CONVERT(Mem27[a1 + 15<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 14<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 12<i32>:byte], byte, word32)))) ^ Mem27[a5_64 + 12<i32>:word32]
	word32 s7_213 = (Mem27[Mem27[a5 + 4<i32>:word32]:int32] >> 1<u32>) + 0xFFFFFFFF<32>
l230910B2:
	word32 a1_129 = a1 ^ Mem27[((s10_257 >>u 0x18<u32>) << 2<i32>) + 0x4201E50C<32>:word32] ^ Mem27[t5_106:int32] ^ Mem27[(s8_111 >>u 6<u32> & 1020<i32>) + 0x4201DD0C<32>:word32] ^ Mem27[(s9_117 >>u 0xE<u32> & 1020<i32>) + 0x4201E10C<32>:word32]
	word32 s11_138 = Mem27[t5_106 + 16<i32>:int32]
	word32 a5_154 = Mem27[((s8_111 & 255<i32>) << 2<i32>) + 0x4201D90C<32>:word32] ^ Mem27[((s5_273 >>u 0x18<u32>) << 2<i32>) + 0x4201E50C<32>:word32] ^ Mem27[t5_106 + 12<i32>:int32] ^ Mem27[(s9_117 >>u 6<u32> & 1020<i32>) + 0x4201DD0C<32>:word32] ^ Mem27[(s10_257 >>u 0xE<u32> & 1020<i32>) + 0x4201E10C<32>:word32]
	word32 a3_179 = Mem27[((s9_117 & 255<i32>) << 2<i32>) + 0x4201D90C<32>:word32] ^ Mem27[((s8_111 >>u 0x18<u32>) << 2<i32>) + 0x4201E50C<32>:word32] ^ Mem27[t5_106 + 8<i32>:int32] ^ Mem27[(s10_257 >>u 6<u32> & 1020<i32>) + 0x4201DD0C<32>:word32] ^ Mem27[(s5_273 >>u 0xE<u32> & 1020<i32>) + 0x4201E10C<32>:word32]
	word32 a4_195 = Mem27[((s10_257 & 255<i32>) << 2<i32>) + 0x4201D90C<32>:int32] ^ Mem27[((s9_117 >>u 0x18<u32>) << 2<i32>) + 0x4201E50C<32>:int32] ^ Mem27[t5_106 + 4<i32>:int32] ^ Mem27[(s5_273 >>u 6<u32> & 1020<i32>) + 0x4201DD0C<32>:int32] ^ Mem27[(s8_111 >>u 0xE<u32> & 1020<i32>) + 0x4201E10C<32>:int32]
	word32 s10_203 = Mem27[t5_106 + 20<i32>:int32]
	word32 s9_205 = Mem27[t5_106 + 24<i32>:int32]
	word32 s8_208 = Mem27[t5_106 + 28<i32>:int32]
	branch s7_213 > 0<32> l23091354
l23091354:
	a1 = Mem27[(a1_129 >>u 24<i32> << 2<i32>) + 0x4201E50C<32>:word32]
	word32 a5_253 = Mem27[((a5_154 & 255<i32>) << 2<i32>) + 0x4201D90C<32>:word32] ^ a1
	s10_257 = Mem27[((a4_195 & 255<i32>) << 2<i32>) + 0x4201D90C<32>:int32] ^ Mem27[((a3_179 >>u 0x18<u32>) << 2<i32>) + 0x4201E50C<32>:int32] ^ s10_203 ^ Mem27[((a1_129 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x4201DD0C<32>:int32] ^ Mem27[((a5_154 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x4201E10C<32>:int32]
	s5_273 = Mem27[((a1_129 & 255<i32>) << 2<i32>) + 0x4201D90C<32>:int32] ^ Mem27[((a4_195 >>u 0x18<u32>) << 2<i32>) + 0x4201E50C<32>:int32] ^ s11_138 ^ Mem27[((a5_154 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x4201DD0C<32>:int32] ^ Mem27[((a3_179 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x4201E10C<32>:int32]
	s9_117 = Mem27[((a3_179 & 255<i32>) << 2<i32>) + 0x4201D90C<32>:int32] ^ Mem27[((a5_154 >>u 0x18<u32>) << 2<i32>) + 0x4201E50C<32>:int32] ^ s9_205 ^ Mem27[((a4_195 >>u 8<u32> & 255<i32>) << 2<i32>) + 0x4201DD0C<32>:int32] ^ Mem27[((a1_129 >>u 0x10<u32> & 255<i32>) << 2<i32>) + 0x4201E10C<32>:word32]
	t5_106 = t5_106 + 32<i32>
	s8_111 = a5_253 ^ s8_208 ^ a5_253 ^ a5_253
	s7_213 = s7_213 + 0xFFFFFFFF<32>
l23091208:
	word32 s6_280 = (a1_129 & 255<i32>) + 0x4201D80C<32>
	word32 s5_289 = (a4_195 >>u 0x18<u32>) + 0x4201D80C<32>
	word32 s3_309 = (a3_179 >>u 0x18<u32>) + 0x4201D80C<32>
	word32 s2_318 = (a3_179 & 255<i32>) + 0x4201D80C<32>
	word32 s1_332 = (a5_154 >>u 0x18<u32>) + 0x4201D80C<32>
	word32 s11_299 = CONVERT(Mem27[(a5_154 >>u 8<u32> & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s6_280:byte], byte, word32) ^ s11_138) ^ CONVERT(Mem27[(a3_179 >>u 0x10<u32> & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[s5_289:byte], byte, word32) << 24<i32>
	word32 s10_321 = CONVERT(Mem27[(a1_129 >>u 8<u32> & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[(a4_195 & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) ^ s10_203) ^ CONVERT(Mem27[(a5_154 >>u 0x10<u32> & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[s3_309:byte], byte, word32) << 24<i32>
	word32 s9_334 = CONVERT(Mem27[(a4_195 >>u 8<u32> & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) << 8<i32> ^ (CONVERT(Mem27[s2_318:byte], byte, word32) ^ s9_205) ^ CONVERT(Mem27[(a1_129 >>u 0x10<u32> & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) << 16<i32>
	word32 a0_336 = CONVERT(Mem27[s1_332:byte], byte, word32)
	word32 s8_337 = CONVERT(Mem27[(a5_154 & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) ^ s8_208 ^ CONVERT(Mem27[(a3_179 >>u 8<i32> & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) << 8<i32> ^ CONVERT(Mem27[(a4_195 >>u 16<i32> & 255<i32>) + 0x4201D80C<32>:byte], byte, word32) << 16<i32> ^ CONVERT(Mem27[(a1_129 >>u 24<i32>) + 0x4201D80C<32>:byte], byte, word32) << 24<i32>
	Mem341[a2 + 1<i32>:byte] = SLICE(s11_299 >>u 8<u32>, byte, 0)
	Mem343[a2 + 2<i32>:byte] = SLICE(s11_299 >>u 0x10<u32>, byte, 0)
	Mem347[a2 + 5<i32>:byte] = SLICE(s10_321 >>u 8<u32>, byte, 0)
	Mem349[a2 + 6<i32>:byte] = SLICE(s10_321 >>u 0x10<u32>, byte, 0)
	word32 s9_346 = s9_334 ^ a0_336 << 24<i32>
	Mem351[a2 + 9<i32>:byte] = SLICE(s9_346 >>u 8<u32>, byte, 0)
	Mem353[a2 + 10<i32>:byte] = SLICE(s9_346 >>u 0x10<u32>, byte, 0)
	Mem355[a2:byte] = SLICE(s11_299, byte, 0)
	Mem356[a2 + 4<i32>:byte] = SLICE(s10_321, byte, 0)
	Mem359[a2 + 8<i32>:byte] = SLICE(s9_346, byte, 0)
	Mem360[a2 + 12<i32>:byte] = SLICE(s8_337, byte, 0)
	Mem362[a2 + 13<i32>:byte] = SLICE(s8_337 >>u 8<u32>, byte, 0)
	Mem365[a2 + 3<i32>:byte] = SLICE(s11_299 >>u 0x18<u32>, byte, 0)
	Mem366[a2 + 7<i32>:byte] = SLICE(s10_321 >>u 0x18<u32>, byte, 0)
	Mem367[a2 + 11<i32>:byte] = SLICE(s9_346 >>u 0x18<u32>, byte, 0)
	Mem368[a2 + 15<i32>:byte] = SLICE(s8_337 >>u 0x18<u32>, byte, 0)
	Mem369[a2 + 14<i32>:byte] = SLICE(s8_337 >>u 0x10<u32>, byte, 0)
	0<32> = dwArg0148
	0<32> = dwArg3C
	s1Out = s1_332
	s2Out = s2_318
	s3Out = s3_309
	s4Out = dwArg98
	s5Out = s5_289
	s6Out = s6_280
	s7Out = s7_213
	s8Out = dwArg78
	s9Out = s9_346 >>u 0x18<u32>
	s10Out = s10_321 >>u 0x18<u32>
	s11Out = s11_299 >>u 0x18<u32>
	return dwLoc04
mbedtls_aes_decrypt_exit:


word32 mbedtls_aes_crypt_ecb(word32 a1, word32 a2, word32 a3, word32 dwArg2C, word32 dwArg0138, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      block_cipher_df
//      ctr_drbg_update_internal
//      mbedtls_ctr_drbg_random
//      mbedtls_aes_crypt_cbc
//      aes_crypt_ecb_wrap
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] Stack +002C:[0..31] Stack +0138:[0..31]
// LiveOut: s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_aes_crypt_ecb_entry:
l23091410:
	word32 s9_32
	word32 s8_31
	word32 s7_30
	word32 s6_29
	word32 s5_28
	word32 s4_27
	word32 s3_26
	word32 s2_25
	word32 s11_24
	word32 s10_23
	word32 s1_22
	word32 s0_21
	branch a1 != 1<32> l2309142C
l2309142C:
	s0_21 = mbedtls_aes_decrypt(a2, a3, a2, dwArg2C, dwArg0138, out s1_22, out s2_25, out s3_26, out s4_27, out s5_28, out s6_29, out s7_30, out s8_31, out s9_32, out s10_23, out s11_24)
l2309141E:
	word32 a3_117
	word32 a4_118
	word32 a5_119
	word32 a6_120
	s0_21 = mbedtls_aes_encrypt(a2, a3, 1<32>, dwArg2C, dwArg0138, out s1_22, out a3_117, out a4_118, out a5_119, out a6_120, out s2_25, out s3_26, out s4_27, out s5_28, out s6_29, out s7_30, out s8_31, out s9_32, out s10_23, out s11_24)
l23091424:
	s1Out = s1_22
	s2Out = s2_25
	s3Out = s3_26
	s4Out = s4_27
	s5Out = s5_28
	s6Out = s6_29
	s7Out = s7_30
	s8Out = s8_31
	s9Out = s9_32
	s10Out = s10_23
	s11Out = s11_24
	return s0_21
mbedtls_aes_crypt_ecb_exit:


word32 mbedtls_aes_crypt_cbc(word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArgF8, word32 dwArg0108, word32 dwArg0198, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aes_crypt_cbc_wrap
//      pem_aes_decrypt
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a4 s0 s1 s10 s11 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
mbedtls_aes_crypt_cbc_entry:
l23091434:
	word32 s0_115 = a2 & 15<i32>
	branch (a2 & 15<i32>) != 0<32> l23091514
l23091514:
l23091450:
	word32 s4_121 = a5
	word32 s5_119 = a4
	s1 = a3
	word32 s2_117 = a2
	s7 = a1
	word32 s8_223 = 0x10<32>
	branch a1 != 0<32> l23091504
l23091504:
	a4 = s5_119 - s0_115
	word32 s3_45 = s4_121 - s0_115
	branch s2_117 + s0_115 != 0<32> l230914CA
l230914CA:
	word32 a3_46 = 0<32>
l230914CC:
	Mem59[s3_45 + a3_46:byte] = SLICE(CONVERT(Mem52[a4 + a3_46:byte], byte, word32) ^ CONVERT(Mem52[s1 + a3_46:byte], byte, word32), byte, 0)
	a3_46 = a3_46 + 1<32>
	branch a3_46 != s8_223 l230914CC
l230914EC:
	word32 s3_84
	word32 s6_421
	word32 s0_79 = mbedtls_aes_crypt_ecb(s7, s3_45, s3_45, dwLoc14, dwArgF8, out s1, out s2_117, out s3_84, out s4_121, out s5_119, out s6_421, out s7, out s8_223, out s9, out s10, out s11)
	word32 a2_422
	word32 a3_423
	word32 a4_424
	word32 a5_425
	word32 a6_426
	word32 a7_427
	memcpy(s1, s3_84, 0x10<32>, out a1, out a2_422, out a3_423, out a4_424, out a5_425, out a6_426, out a7_427)
	s0_115 = s0_79 + 0xFFFFFFF0<32>
l23091512:
l23091460:
	s7 = s5_119 - s0_115
	word32 s3_122 = s4_121 - s0_115
	branch s0_115 + s2_117 != 0<32> l23091488
l23091488:
	word32 a5_128
	word32 a1_407
	word32 a2_408
	word32 a3_409
	word32 a4_410
	word32 a6_411
	word32 a7_412
	memcpy(fp + -64<i32>, s7, 0x10<32>, out a1_407, out a2_408, out a3_409, out a4_410, out a5_128, out a6_411, out a7_412)
	word32 s3_158
	word32 s6_413
	word32 s7_414
	word32 s8_415
	word32 s0_153 = mbedtls_aes_decrypt(s7, s3_122, a5_128, dwLoc04, dwArg0108, out s1, out s2_117, out s3_158, out s4_121, out s5_119, out s6_413, out s7_414, out s8_415, out s9, out s10, out s11)
	word32 a3_173 = 0<32>
l230914A0:
	word32 a4_177 = s3_158 + a3_173
	Mem185[a4_177:byte] = SLICE(CONVERT(Mem180[s1 + a3_173:byte], byte, word32) ^ CONVERT(Mem180[a4_177:byte], byte, word32), byte, 0)
	a3_173 = a3_173 + 1<32>
	branch a3_173 != 0x10<32> l230914A0
l230914BC:
	word32 a2_416
	word32 a3_417
	word32 a5_418
	word32 a6_419
	word32 a7_420
	memcpy(s1, fp + -64<i32>, 0x10<32>, out a1, out a2_416, out a3_417, out a4, out a5_418, out a6_419, out a7_420)
	s0_115 = s0_153 + 0xFFFFFFF0<32>
l2309146E:
l23091470:
	0<32> = dwArg0198
	s1Out = s1
	a1Out = a1
	a4Out = a4
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return dwArg0158
mbedtls_aes_crypt_cbc_exit:


void mbedtls_aes_crypt_cfb128(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 dwArg1C, word32 dwArgA8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aes_crypt_cfb128_wrap
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] s0:[0..31] Stack +001C:[0..31] Stack +00A8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_aes_crypt_cfb128_entry:
l2309151A:
	word32 s6_132 = a3
	word32 s2_109 = a4
	word32 s3_129 = a5
	word32 s1_125 = a6
	word32 s4_130 = a6 + a2
	branch a1 == 0<32> l23091598
l23091598:
	branch s1_125 != s4_130 l2309156E
l2309156E:
	branch s0 != 0<32> l2309157A
l23091570:
	word32 a3_323
	word32 a4_324
	word32 a5_325
	word32 a6_326
	word32 s5_327
	word32 s7_328
	word32 s8_329
	word32 s9_330
	word32 s10_331
	word32 s11_332
	s0 = mbedtls_aes_encrypt(s2_109, s2_109, a4, dwArg1C, dwArg0128, out s1_125, out a3_323, out a4_324, out a5_325, out a6_326, out s2_109, out s3_129, out s4_130, out s5_327, out s6_132, out s7_328, out s8_329, out s9_330, out s10_331, out s11_332)
l2309157A:
	s3_129 = s3_129 + 1<32>
	a4 = s2_109 + s0
	word32 a3_80 = CONVERT(Mem44[s3_129 + -1<i32>:byte], byte, word32)
	s1_125 = s1_125 + 1<32>
	Mem86[s1_125 + 4095<i32>:byte] = SLICE(CONVERT(Mem44[a4:byte], byte, word32) ^ a3_80, byte, 0)
	Mem87[a4:byte] = SLICE(a3_80, byte, 0)
	s0 = s0 + 1<32> & 0xF<32>
l2309153E:
	branch s1_125 == s4_130 l2309159C
l2309159C:
	Mem97[s6_132:word32] = s0
	0<32> = dwArgA8
	return
mbedtls_aes_crypt_cfb128_exit:
l23091542:
	branch s0 != 0<32> l2309154E
l23091544:
	word32 a3_313
	word32 a4_314
	word32 a5_315
	word32 a6_316
	word32 s5_317
	word32 s7_318
	word32 s8_319
	word32 s9_320
	word32 s10_321
	word32 s11_322
	s0 = mbedtls_aes_encrypt(s2_109, s2_109, a4, dwArg1C, dwArg0128, out s1_125, out a3_313, out a4_314, out a5_315, out a6_316, out s2_109, out s3_129, out s4_130, out s5_317, out s6_132, out s7_318, out s8_319, out s9_320, out s10_321, out s11_322)
l2309154E:
	a4 = s2_109 + s0
	s3_129 = s3_129 + 1<32>
	s1_125 = s1_125 + 1<32>
	word32 a5_156 = CONVERT(Mem115[a4:byte], byte, word32) ^ CONVERT(Mem115[s3_129 + -1<i32>:byte], byte, word32)
	Mem157[s1_125 + 4095<i32>:byte] = SLICE(a5_156, byte, 0)
	Mem158[a4:byte] = SLICE(a5_156, byte, 0)
	s0 = s0 + 1<32> & 0xF<32>


void mbedtls_aes_crypt_ctr(word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6, word32 dwArg0C, word32 dwArg74, word32 dwArgB4, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aes_crypt_ctr_wrap
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] s0:[0..31] Stack +000C:[0..31] Stack +0074:[0..31] Stack +00B4:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_aes_crypt_ctr_entry:
l230915B6:
	word32 s1_100 = Mem15[s0:word32]
	word32 s2_111 = a6 + a1
l230915D2:
	branch a6 != s2_111 l230915EA
l230915EA:
	branch s0 != 0<32> l23091620
l230915EC:
	word32 s4_54
	word32 s9_239
	word32 s10_240
	word32 s11_241
	word32 s8_238
	word32 s7_237
	word32 s6_236
	word32 s5_235
	word32 s3_234
	mbedtls_aes_encrypt(a3, a4, a4, dwArg0C, dwArg0118, out s1_100, out a3, out a4, out a5, out a6, out s2_111, out s3_234, out s4_54, out s5_235, out s6_236, out s7_237, out s8_238, out s9_239, out s10_240, out s11_241)
	0<32> = dwArg74
	s0 = dwArgB4
	word32 a1_71 = s4_54
l23091608:
	word32 a2_76 = CONVERT(Mem73[a1_71:byte], byte, word32) + 1<32> & 255<i32>
	Mem77[a1_71:byte] = SLICE(a2_76, byte, 0)
	branch a2_76 != 0<32> l23091620
l23091618:
	word32 a2_78 = a1_71 + -1<i32>
	branch a3 != a1_71 l2309163C
l2309163C:
	a1_71 = a2_78
l23091620:
	a5 = a5 + 1<32>
	a6 = a6 + 1<32>
	Mem98[a6 + 4095<i32>:byte] = SLICE(CONVERT(Mem89[a4 + s0:byte], byte, word32) ^ CONVERT(Mem89[a5 + -1<i32>:byte], byte, word32), byte, 0)
	s0 = s0 + 1<32> & 0xF<32>
l230915D6:
	Mem103[s0:word32] = s1_100
	0<32> = dwArg0128
	return
mbedtls_aes_crypt_ctr_exit:


word32 mbedtls_asn1_get_len(word32 a1, word32 a2, word32 a5, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
//      mbedtls_asn1_get_tag
//      mbedtls_asn1_get_alg
//      mbedtls_x509_get_serial
//      mbedtls_x509_get_name
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
mbedtls_asn1_get_len_entry:
l23091640:
	word32 a0_67
	word32 a0_5 = Mem0[a5:word32]
	word32 a3_31 = a1 - a5
	branch a3_31 <= 0<32> l23091672
l2309164A:
	word32 a4_8 = CONVERT(Mem0[a5:byte], byte, word32)
	branch CONVERT(SLICE(a4_8, byte, 0), byte, int32) < 0<32> l23091678
l23091678:
	word32 a0_24
	a4 = a4_8 & 127<i32>
	branch (a4_8 & 127<i32>) == 2<32> l230916D8
l230916D8:
	branch (a4_8 & 127<i32>) >= a3_31 l23091672
l230916DC:
	word32 a5_16 = CONVERT(Mem0[a5 + 2<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32)
	word32 a5_21 = CONVERT(SLICE(a5_16 >>u 8<i32> | a5_16 << 8<u32>, word16, 0), word16, word32)
	Mem23[a5_21:word32] = a2
	a4 = a5_16 << 8<u32>
	a0_24 = Mem23[a5_21:word32]
	a5 = a5_21 + 3<32>
l23091682:
	branch (a4_8 & 127<i32>) >u 2<32> l23091692
l23091692:
	branch (a4_8 & 127<i32>) == 3<32> l230916FC
l230916FC:
	branch (a4_8 & 127<i32>) >= a3_31 l23091672
l23091700:
	word32 a3_28 = CONVERT(Mem0[a5 + 2<i32>:byte], byte, word32)
	a4 = CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32) << 16<i32> | a3_28 << 8<i32>
	word32 a5_33 = CONVERT(Mem0[a5 + 3<i32>:byte], byte, word32) | a4
	Mem34[a5_33:word32] = a2
	a3_31 = a3_28 << 8<i32>
	a0_24 = Mem34[a5_33:word32]
	a5 = a5_33 + 4<32>
l23091698:
	branch (a4_8 & 127<i32>) != 4<32> l2309168C
l2309169E:
	branch (a4_8 & 127<i32>) >= a3_31 l23091672
l230916A2:
	a3_31 = CONVERT(Mem0[a5 + 4<i32>:byte], byte, word32)
	a4 = CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem0[a5 + 2<i32>:byte], byte, word32) << 16<i32> | a3_31
	word32 a5_47 = CONVERT(Mem0[a5 + 3<i32>:byte], byte, word32) << 8<i32> | a4
	Mem48[a5_47:word32] = a2
	a0_24 = Mem48[a5_47:word32]
	a5 = a5_47 + 5<32>
l23091686:
	branch (a4_8 & 127<i32>) == 1<32> l230916C6
l230916C6:
	branch a3_31 == (a4_8 & 127<i32>) l23091672
l230916CA:
	word32 a5_52 = CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32)
	Mem53[a5_52:word32] = a2
	a0_24 = Mem53[a5_52:word32]
	a5 = a5_52 + 2<32>
l230916D4:
	Mem58[a5:word32] = a0_24
l2309168C:
	a1Out = a1
	a2Out = a2
	a3Out = a3_31
	a4Out = a4_8 & 127<i32>
	a5Out = a5
	return -100<i32>
l2309165A:
	Mem61[a5 + 1<i32>:word32] = a0_5
	a5 = CONVERT(Mem61[a5:byte], byte, word32)
	Mem63[a5:word32] = a2
	a4 = a5 + 1<i32>
l23091666:
	a0_67 = 0<32>
	a1 = a1 - a5
	a2 = Mem65[a5:word32]
	branch a1 >=u a5 l23091676
l23091672:
	a0_67 = -96<i32>
l23091676:
	a1Out = a1
	a2Out = a2
	a3Out = a3_31
	a4Out = a4
	a5Out = a5
	return a0_67
mbedtls_asn1_get_len_exit:


word32 mbedtls_asn1_get_tag(word32 a1, word32 a2, word32 a3, word32 a5, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs1_der
//      pk_parse_key_sec1_der
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_rsa_pkcs1_verify
//      mbedtls_x509_crt_parse_der
//      mbedtls_asn1_get_bool
//      mbedtls_asn1_get_int
//      mbedtls_asn1_get_mpi
//      mbedtls_asn1_get_bitstring
//      mbedtls_asn1_get_bitstring_null
//      mbedtls_asn1_get_sequence_of
//      mbedtls_asn1_get_alg
//      mbedtls_x509_get_name
//      mbedtls_x509_get_ext
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
mbedtls_asn1_get_tag_entry:
l2309171C:
	word32 a0_5 = Mem0[a5:word32]
	branch a1 - a5 <= 0<32> l23091736
l23091736:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return -96<i32>
l23091726:
	branch CONVERT(Mem0[a5:byte], byte, word32) != a3 l2309173C
l2309173C:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return -98<i32>
l2309172E:
	Mem13[a5 + 1<32>:word32] = a0_5
l23091732_thunk_mbedtls_asn1_get_len:
	word32 a3_16
	word32 a1_17
	word32 a2_18
	word32 a4_19
	word32 a5_20
	word32 a0_15 = mbedtls_asn1_get_len(a1, a2, a5 + 1<32>, out a1_17, out a2_18, out a3_16, out a4_19, out a5_20)
	a1Out = a1_17
	a2Out = a2_18
	a3Out = a3_16
	a4Out = a4_19
	a5Out = a5_20
	return a0_15
mbedtls_asn1_get_tag_exit:


word32 mbedtls_asn1_get_bool(word32 a1, word32 a2, word32 a5, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a1 a5 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 s8 t3
// Preserved: sp
mbedtls_asn1_get_bool_entry:
l23091742:
	word32 s0_15 = a0
	word32 a1_20
	word32 a4_23
	word32 a2_64
	word32 a3_65
	word32 a5_24
	word32 a0_18 = mbedtls_asn1_get_tag(a1, fp + 0xFFFFFFEC<32>, 1<32>, a5, out a1_20, out a2_64, out a3_65, out a4_23, out a5_24)
	branch a0_18 != 0<32> l23091772
l23091758:
	a5_24 = 1<32>
	branch a4_23 != 1<32> l2309177C
l2309177C:
	a0_18 = -100<i32>
l23091760:
	word32 a5_30 = CONVERT(CONVERT(Mem13[1<32>:byte], byte, word32) != 0<32>, bool, word32)
	Mem31[a5_30:word32] = a2
	s0_15 = Mem31[a5_30:word32]
	Mem34[a5_30 + 1<32>:word32] = s0_15
	a5_24 = a5_30 + 1<32>
l23091772:
	s1Out = a2
	a0Out = a0_18
	a1Out = a1_20
	a5Out = a5_24
	return s0_15
mbedtls_asn1_get_bool_exit:


word32 mbedtls_asn1_get_int(word32 a1, word32 a2, word32 a5, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs1_der
//      pk_parse_key_sec1_der
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_x509_crt_parse_der
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 s8 t3
// Preserved: sp
mbedtls_asn1_get_int_entry:
l23091782:
	word32 s1_39 = a2
	word32 s0_15 = a0
	word32 a1_20
	word32 a3_22
	word32 a2_102
	word32 a4_23
	word32 a5_24
	word32 a0_18 = mbedtls_asn1_get_tag(a1, fp + 0xFFFFFFEC<32>, 2<32>, a5, out a1_20, out a2_102, out a3_22, out a4_23, out a5_24)
	branch a0_18 != 0<32> l230917BA
l23091798:
	a4_23 = 3<32>
	a5_24 = a5_24 + 0xFFFFFFFF<32>
	branch a5_24 >u 0xFFFFFFFC<32> l230917DA
l230917A2:
	s0_15 = Mem13[a5_24 + 0xFFFFFFFF<32>:word32]
	a5_24 = CONVERT(Mem13[a5_24 + 0xFFFFFFFF<32>:int8], int8, int32)
	branch a5_24 < 0<32> l230917DA
l230917DA:
	a0_18 = -100<i32>
l230917AC:
	Mem31[a2:word32] = 0<32>
l230917B0:
	a4_23 = a5_24 + -1<i32>
	branch a5_24 != 0<32> l230917C4
l230917C4:
	s1_39 = Mem37[a5_24:word32]
	word32 a5_42 = a5_24 << 8<i32> | CONVERT(Mem37[a4_23:byte], byte, word32)
	Mem43[a5_42:word32] = s1_39
	s0_15 = Mem43[a5_42:word32]
	Mem46[a5_42 + 1<32>:word32] = s0_15
	a5_24 = a5_42 + 1<32>
l230917BA:
	s1Out = s1_39
	a0Out = a0_18
	a1Out = a1_20
	a3Out = a3_22
	a4Out = a4_23
	a5Out = a5_24
	return s0_15
mbedtls_asn1_get_int_exit:


word32 mbedtls_asn1_get_mpi(word32 ra, word32 a1, word32 a5, word32 mstatus, word32 dwArg64, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs1_der
//      mbedtls_pk_parse_subpubkey
// MayUse:  a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0064:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a2 a4 a5 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_asn1_get_mpi_entry:
l230917E0:
	word32 s1_39 = a2
	word32 s0_15 = a0
	word32 a3_22
	word32 a2_21
	word32 a1_20
	word32 a4_23
	word32 a5_24
	word32 a0_18 = mbedtls_asn1_get_tag(a1, fp + 0xFFFFFFEC<32>, 2<32>, a5, out a1_20, out a2_21, out a3_22, out a4_23, out a5_24)
	branch a0_18 != 0<32> l23091808
l230917F6:
	word32 a5_34
	word32 s0_118
	word32 a2_119
	word32 a3_120
	word32 a7_121
	word32 s4_122
	word32 s8_123
	ra = mbedtls_mpi_read_binary(ra, a1_20, dwArg64, a3_22, a4_23, mstatus, dwLoc18, dwLoc08, dwArgB8, dwArgC8, dwArgF8, dwArg0108, dwArg0138, dwArg0148, out s0_118, out s1_39, out a0_18, out a1_20, out a2_119, out a3_120, out a4_23, out a5_34, out a7_121, out s2, out s3, out s4_122, out s8_123)
	s0_15 = Mem13[a5_34:word32]
	a5_24 = a5_34 + a4_23
	Mem54[a5_24:word32] = s0_15
	a2_21 = dwArgA4
l23091808:
	s0Out = s0_15
	s1Out = s1_39
	a0Out = a0_18
	a1Out = a1_20
	a2Out = a2_21
	a4Out = a4_23
	a5Out = a5_24
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	return ra
mbedtls_asn1_get_mpi_exit:


word32 mbedtls_asn1_get_bitstring(word32 a1, word32 a2, word32 a5, word32 dwArg38, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 tp
// Preserved: s0 sp
mbedtls_asn1_get_bitstring_entry:
l23091812:
	word32 s1_14 = a0
	word32 a1_22
	word32 a2_75
	word32 a3_76
	word32 a4_25
	word32 a5_26
	word32 a0_20 = mbedtls_asn1_get_tag(a1, a2, 3<32>, a5, out a1_22, out a2_75, out a3_76, out a4_25, out a5_26)
	branch a0_20 != 0<32> l23091858
l2309182A:
	word32 s0_27 = Mem12[a5_26:word32]
	branch a5_26 == 0<32> l23091864
l23091864:
	a0_20 = -96<i32>
l2309182E:
	Mem30[a5_26 + 0xFFFFFFFF<32>:word32] = s0_27
	s1_14 = Mem30[a5_26 + 0xFFFFFFFF<32>:word32]
	a5_26 = CONVERT(Mem30[a5_26 + 0xFFFFFFFF<32>:byte], byte, word32)
	Mem34[s0_27 + 4<i32>:byte] = SLICE(a5_26, byte, 0)
	a4_25 = 7<32>
	branch a5_26 >u 7<32> l2309186A
l2309186A:
	a0_20 = -100<i32>
l23091842:
	s1_14 = Mem34[a5_26:word32]
	Mem38[a5_26 + 1<32>:word32] = s1_14
	Mem40[a5_26 + 9<32>:word32] = Mem38[7<32>:word32]
	Mem42[a5_26 + 8<32>:word32] = s1_14
	a5_26 = a5_26 + 8<32>
	branch a5_26 + 8<32> == a1 l23091858
l23091854:
	a0_20 = -102<i32>
l23091858:
	0<32> = dwArg38
	a0Out = a0_20
	a1Out = a1_22
	a2Out = dwArg10
	a4Out = a4_25
	a5Out = a5_26
	s2Out = a1
	return s1_14
mbedtls_asn1_get_bitstring_exit:


word32 mbedtls_asn1_get_bitstring_null(word32 a1, word32 a2, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_sec1_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_x509_get_sig
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 tp
// Preserved: s0 sp
mbedtls_asn1_get_bitstring_null_entry:
l23091870:
	word32 s1_14 = a2
	word32 a1_19
	word32 a3_21
	word32 a2_71
	word32 a4_22
	word32 a5_23
	word32 a0_17 = mbedtls_asn1_get_tag(a1, a2, 3<32>, a5, out a1_19, out a2_71, out a3_21, out a4_22, out a5_23)
	branch a0_17 != 0<32> l230918A4
l23091884:
	s1_14 = Mem10[a5_23:word32]
	Mem26[a5_23 + -1<i32>:word32] = s1_14
	a4_22 = 1<32>
	branch a5_23 <=u 1<32> l230918A0
l23091892:
	Mem30[a5_23 + 1<i32>:word32] = Mem26[a5_23:word32]
	a4_22 = a5_23 + 1<i32>
	a5_23 = CONVERT(Mem30[a5_23:byte], byte, word32)
	branch a5_23 == 0<32> l230918A4
l230918A0:
	a0_17 = -104<i32>
l230918A4:
	a0Out = a0_17
	a1Out = a1_19
	a2Out = dwArg10
	a3Out = a3_21
	a4Out = a4_22
	a5Out = a5_23
	return s1_14
mbedtls_asn1_get_bitstring_null_exit:


word32 mbedtls_asn1_get_sequence_of(word32 ra, word32 a1, word32 a2, word32 a3, word32 a5, word32 mstatus, word32 dwArgE8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a5 ra s1 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 tp
// Preserved: sp
mbedtls_asn1_get_sequence_of_entry:
l230918AE:
	word32 a4_34
	word32 a2_212
	word32 a3_213
	word32 a1_170
	word32 a5_114
	word32 a0_29 = mbedtls_asn1_get_tag(a1, fp + -36<i32>, 48<i32>, a5, out a1_170, out a2_212, out a3_213, out a4_34, out a5_114)
	word32 s0_40 = a2
	word32 s4_11 = a3
	word32 s1_190 = a0
	word32 s3_116 = a1
	word32 s2_105 = a0_29
	branch a0_29 != 0<32> l23091928
l230918D4:
	s1_190 = Mem23[a5_114:word32]
	a5_114 = a5_114 + a4_34
	branch a1 == a5_114 l23091914
l23091914:
	s5 = s0_40 + 4<i32>
l23091918:
	s1_190 = Mem43[a5_114:word32]
	branch a5_114 <u s3_116 l230918E4
l230918E4:
	word32 a5_46 = CONVERT(Mem43[a5_114:byte], byte, word32)
	Mem52[a5_46:word32] = s0_40
	word32 a3_59
	word32 a4_60
	word32 a2_214
	word32 a0_55 = mbedtls_asn1_get_tag(s3_116, s5, s4_11, a5_46, out a1_170, out a2_214, out a3_59, out a4_60, out a5_114)
	branch a0_55 != 0<32> l2309193C
l2309193C:
	s2_105 = a0_55
l230918F8:
	word32 s1_63 = Mem52[a5_114:word32]
	s0_40 = Mem52[a4_60 + 4<i32>:word32]
	Mem65[a5_114 + 8<i32>:word32] = s0_40
	a5_114 = a5_114 + a4_60
	Mem67[a5_114:word32] = s1_63
	branch a5_114 >=u s3_116 l23091918
l23091906:
	word32 s0_83
	word32 a2_215
	word32 a3_216
	word32 a4_217
	word32 s8_218
	ra = mycalloc(ra, s1_63, 1<32>, 0x10<32>, a3_59, a4_60, a5_114, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out s0_83, out s1_190, out a1_170, out a2_215, out a3_216, out a4_217, out a5_114, out s2_105, out s3_116, out s4_11, out s8_218)
	Mem93[0xD<32>:word32] = s0_83
	s0_40 = 1<32>
	branch false l23091940
l23091940:
	s2_105 = -106<i32>
l2309191E:
	Mem96[s0_40 + 12<i32>:word32] = 0<32>
	s1_190 = Mem96[a5_114:word32]
	branch a5_114 != s3_116 l230918DE
l230918DE:
	s2_105 = -102<i32>
l23091928:
	0<32> = dwArg0128
	s1Out = s1_190
	a0Out = s2_105
	a1Out = a1_170
	a5Out = a5_114
	s2Out = s2_105
	s5Out = s5
	return ra
mbedtls_asn1_get_sequence_of_exit:


word32 mbedtls_asn1_get_alg(word32 a1, word32 a2, word32 a3, word32 a5, word32 dwArgB4, word32 dwArg0128, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_get_pk_alg
//      mbedtls_x509_get_alg
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] Stack +00B4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mbedtls_asn1_get_alg_entry:
l23091946:
	word32 a2_147
	word32 a5_130
	word32 a4_128
	word32 a3_126
	word32 a1_124
	word32 a0_27 = mbedtls_asn1_get_tag(a1, fp + -36<i32>, 48<i32>, a5, out a1_124, out a2_147, out a3_126, out a4_128, out a5_130)
	word32 s1_133 = a3
	word32 s3_134 = a1
	word32 s2_34 = a0_27
	branch a0_27 != 0<32> l230919B4
l2309196A:
	word32 s0_35 = Mem21[a5_130:word32]
	s2_34 = -96<i32>
	s3_134 = a1 - a5_130
	branch s3_134 <= 0<32> l230919B4
l23091978:
	word32 a5_38 = CONVERT(Mem21[a5_130:byte], byte, word32)
	Mem40[a2:word32] = a5_38
	s3_134 = Mem40[s0_35:int32] + a5_38
	word32 a2_148
	word32 a0_46 = mbedtls_asn1_get_tag(s3_134, dwArgB4, 6<32>, a5_38, out a1_124, out a2_148, out a3_126, out a4_128, out a5_130)
	s2_34 = a0_46
	branch a0_46 != 0<32> l230919B4
l2309199A:
	word32 s0_54 = Mem40[a5_130:word32]
	a4_128 = Mem40[a2 + 4<i32>:int32]
	Mem56[a2 + 8<i32>:word32] = a5_130
	word32 a5_57 = a5_130 + a4_128
	Mem58[a5_57:word32] = s0_54
	branch a5_57 != s3_134 l230919CE
l230919CE:
	word32 a5_59 = CONVERT(Mem58[a5_57:byte], byte, word32)
	Mem62[a5_59:word32] = a3
	Mem66[a5_59 + 1<32>:word32] = Mem62[a5_59:word32]
	word32 a2_149
	word32 a0_67 = mbedtls_asn1_get_len(s3_134, a3 + 4<i32>, a5_59 + 1<32>, out a1_124, out a2_149, out a3_126, out a4_128, out a5_130)
	branch a0_67 != 0<32> l230919FC
l230919FC:
	s2_34 = a0_67
l230919E8:
	word32 s0_75 = Mem66[a5_130:word32]
	s1_133 = Mem66[a4_128 + 4<i32>:word32]
	Mem77[a5_130 + 8<i32>:word32] = s1_133
	a5_130 = a5_130 + a4_128
	Mem79[a5_130:word32] = s0_75
	branch a5_130 == s3_134 l230919B4
l230919F6:
	s2_34 = -102<i32>
l230919AC:
	a5_130 = a3 + 12<i32>
l230919B0:
	branch s1_133 != a3 + 12<i32> l230919C6
l230919C6:
	Mem84[s1_133:byte] = 0<8>
	s1_133 = s1_133 + 1<32>
l230919B4:
	0<32> = dwArg0128
	a0Out = s2_34
	a1Out = a1_124
	a2Out = dwArg0100
	a3Out = a3_126
	a4Out = a4_128
	a5Out = a5_130
	s2Out = s2_34
	s3Out = s3_134
	s4Out = a2
	return s1_133
mbedtls_asn1_get_alg_exit:


word32 mpi_sub_hlp(word32 a0, word32 a1, word32 a2, word32 a4, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mpi_montmul
//      mbedtls_mpi_sub_abs
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a2 a4 a5 a7 t1
// Trashed: a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
mpi_sub_hlp_entry:
l23091A00:
	word32 a5_16 = 0<32>
	word32 a7_15 = 0<32>
l23091A06:
	word32 a6_8 = a7_15 << 2<u32>
	branch a7_15 != a0 l23091A14
l23091A14:
	word32 a3_12 = Mem11[a4:word32]
	word32 a4_18 = a4 - a5_16
	Mem19[a4_18:word32] = a3_12
	word32 a6_20 = Mem19[a6_8 + a1:int32]
	a4 = a4_18 - a6_20
	Mem24[a3_12 + 0x1000<32>:word32] = a4
	t1 = CONVERT(a4 <u a5_16, bool, word32)
	a7_15 = a7_15 + 1<32>
	a5_16 = CONVERT(a4_18 <u a6_20, bool, word32) + t1
l23091A0E:
	word32 a2_27 = a2 + a6_8
l23091A10:
	branch a5_16 != 0<32> l23091A38
l23091A38:
	word32 a2_31 = Mem30[a4:word32]
	Mem34[a2_31 + 0x1000<32>:word32] = a4 - a5_16
	a2_27 = a2_31 + 4<32>
	a5_16 = CONVERT(a4 <u a5_16, bool, word32)
l23091A12:
	a2Out = a2_27
	a4Out = a4
	a5Out = a5_16
	a7Out = a7_15
	return t1
mpi_sub_hlp_exit:


word32 mpi_mul_hlp(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mpi_montmul
//      mbedtls_mpi_mul_mpi
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a1 a2 a4 a5
// Trashed: a0 a1 a2 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: sp
mpi_mul_hlp_entry:
l23091A4A:
	word32 a4_11 = a2
	word32 a7_16 = a1
	word32 t1_15 = a0
	word32 a5_196 = 0<32>
l23091A54:
	word32 a6_13 = Mem12[a4_11:int32]
	branch t1_15 >u 0xF<32> l23091BBE
l23091BBE:
	word32 t5_17 = Mem12[a7_16:int32]
	word32 t4_25 = a3 + t5_17 + a5_196
	a4_11 = a4_11 + 64<i32>
	word32 t4_27 = t4_25 + a6_13
	Mem28[a4_11 + 4032<i32>:word32] = t4_27
	a7_16 = a7_16 + 64<i32>
	word32 a5_31 = Mem28[a7_16 + -60<i32>:int32]
	word32 a6_32 = CONVERT(t4_27 <u a6_13, bool, word32) + CONVERT((a3 <u t5_17) + (t4_25 <u a5_196), bool, bool)
	word32 t4_35 = a3 + a5_31 + a6_32
	word32 a5_38 = Mem28[a4_11 + -60<i32>:int32]
	word32 t4_39 = t4_35 + a5_38
	Mem40[a4_11 + 4036<i32>:word32] = t4_39
	word32 a6_43 = Mem40[a7_16 + -56<i32>:int32]
	word32 a5_42 = CONVERT(t4_39 <u a5_38, bool, word32) + CONVERT((t4_35 <u a6_32) + (a3 <u a5_31), bool, bool)
	word32 t4_46 = a3 + a6_43 + a5_42
	word32 a6_49 = Mem40[a4_11 + -56<i32>:int32]
	word32 t4_50 = t4_46 + a6_49
	Mem51[a4_11 + 4040<i32>:word32] = t4_50
	word32 a5_54 = Mem51[a7_16 + -52<i32>:int32]
	word32 a6_53 = CONVERT(t4_50 <u a6_49, bool, word32) + CONVERT((t4_46 <u a5_42) + (a3 <u a6_43), bool, bool)
	word32 t4_57 = a3 + a5_54 + a6_53
	word32 a5_60 = Mem51[a4_11 + -52<i32>:int32]
	word32 t4_61 = t4_57 + a5_60
	Mem62[a4_11 + 4044<i32>:word32] = t4_61
	word32 a6_65 = Mem62[a7_16 + -48<i32>:int32]
	word32 a5_64 = CONVERT(t4_61 <u a5_60, bool, word32) + CONVERT((t4_57 <u a6_53) + (a3 <u a5_54), bool, bool)
	word32 t4_68 = a3 + a6_65 + a5_64
	word32 a6_71 = Mem62[a4_11 + -48<i32>:int32]
	word32 t4_72 = t4_68 + a6_71
	Mem73[a4_11 + 4048<i32>:word32] = t4_72
	word32 a5_76 = Mem73[a7_16 + -44<i32>:int32]
	word32 a6_75 = CONVERT(t4_72 <u a6_71, bool, word32) + CONVERT((t4_68 <u a5_64) + (a3 <u a6_65), bool, bool)
	word32 t4_79 = a3 + a5_76 + a6_75
	word32 a5_82 = Mem73[a4_11 + -44<i32>:int32]
	word32 t4_83 = t4_79 + a5_82
	Mem84[a4_11 + 4052<i32>:word32] = t4_83
	word32 a6_87 = Mem84[a7_16 + -40<i32>:int32]
	word32 a5_86 = CONVERT(t4_83 <u a5_82, bool, word32) + CONVERT((t4_79 <u a6_75) + (a3 <u a5_76), bool, bool)
	word32 t4_90 = a3 + a6_87 + a5_86
	word32 a6_93 = Mem84[a4_11 + -40<i32>:int32]
	word32 t4_94 = t4_90 + a6_93
	Mem95[a4_11 + 4056<i32>:word32] = t4_94
	word32 a5_98 = Mem95[a7_16 + -36<i32>:int32]
	word32 a6_97 = CONVERT(t4_94 <u a6_93, bool, word32) + CONVERT((t4_90 <u a5_86) + (a3 <u a6_87), bool, bool)
	word32 t4_101 = a3 + a5_98 + a6_97
	word32 a5_104 = Mem95[a4_11 + -36<i32>:int32]
	word32 t4_105 = t4_101 + a5_104
	Mem106[a4_11 + 4060<i32>:word32] = t4_105
	word32 a6_109 = Mem106[a7_16 + -32<i32>:int32]
	word32 a5_108 = CONVERT(t4_105 <u a5_104, bool, word32) + CONVERT((t4_101 <u a6_97) + (a3 <u a5_98), bool, bool)
	word32 t4_112 = a3 + a6_109 + a5_108
	word32 a6_115 = Mem106[a4_11 + -32<i32>:int32]
	word32 t4_116 = t4_112 + a6_115
	Mem117[a4_11 + 4064<i32>:word32] = t4_116
	word32 a5_120 = Mem117[a7_16 + -28<i32>:int32]
	word32 a6_119 = CONVERT(t4_116 <u a6_115, bool, word32) + CONVERT((t4_112 <u a5_108) + (a3 <u a6_109), bool, bool)
	word32 t4_123 = a3 + a5_120 + a6_119
	word32 a5_126 = Mem117[a4_11 + -28<i32>:int32]
	word32 t4_127 = t4_123 + a5_126
	Mem128[a4_11 + 4068<i32>:word32] = t4_127
	word32 a6_131 = Mem128[a7_16 + -24<i32>:int32]
	word32 a5_130 = CONVERT(t4_127 <u a5_126, bool, word32) + CONVERT((t4_123 <u a6_119) + (a3 <u a5_120), bool, bool)
	word32 t4_134 = a3 + a6_131 + a5_130
	word32 a6_137 = Mem128[a4_11 + -24<i32>:int32]
	word32 t4_138 = t4_134 + a6_137
	Mem139[a4_11 + 4072<i32>:word32] = t4_138
	word32 a5_142 = Mem139[a7_16 + -20<i32>:int32]
	word32 a6_141 = CONVERT(t4_138 <u a6_137, bool, word32) + CONVERT((t4_134 <u a5_130) + (a3 <u a6_131), bool, bool)
	word32 t4_145 = a3 + a5_142 + a6_141
	word32 a5_148 = Mem139[a4_11 + -20<i32>:int32]
	word32 t4_149 = t4_145 + a5_148
	Mem150[a4_11 + 4076<i32>:word32] = t4_149
	word32 a6_153 = Mem150[a7_16 + -16<i32>:int32]
	word32 a5_152 = CONVERT(t4_149 <u a5_148, bool, word32) + CONVERT((t4_145 <u a6_141) + (a3 <u a5_142), bool, bool)
	word32 t4_156 = a3 + a6_153 + a5_152
	word32 a6_159 = Mem150[a4_11 + -16<i32>:int32]
	word32 t4_160 = t4_156 + a6_159
	Mem161[a4_11 + 4080<i32>:word32] = t4_160
	word32 a5_164 = Mem161[a7_16 + -12<i32>:int32]
	word32 a6_163 = CONVERT(t4_160 <u a6_159, bool, word32) + CONVERT((t4_156 <u a5_152) + (a3 <u a6_153), bool, bool)
	word32 t4_167 = a3 + a5_164 + a6_163
	word32 a5_170 = Mem161[a4_11 + -12<i32>:int32]
	word32 t4_171 = t4_167 + a5_170
	Mem172[a4_11 + 4084<i32>:word32] = t4_171
	word32 a6_175 = Mem172[a7_16 + -8<i32>:int32]
	word32 a5_174 = CONVERT(t4_171 <u a5_170, bool, word32) + CONVERT((t4_167 <u a6_163) + (a3 <u a5_164), bool, bool)
	word32 t4_178 = a3 + a6_175 + a5_174
	word32 a6_181 = Mem172[a4_11 + -8<i32>:int32]
	word32 t4_182 = t4_178 + a6_181
	Mem183[a4_11 + 4088<i32>:word32] = t4_182
	word32 t4_185 = Mem183[a7_16 + -4<i32>:int32]
	word32 a6_186 = CONVERT(t4_182 <u a6_181, bool, word32) + CONVERT((t4_178 <u a5_174) + (a3 <u a6_175), bool, bool)
	word32 a5_189 = a3 + t4_185 + a6_186
	word32 t4_192 = Mem183[a4_11 + -4<i32>:int32]
	word32 a5_193 = a5_189 + t4_192
	Mem194[a4_11 + 4092<i32>:word32] = a5_193
	t1_15 = t1_15 + 0xFFFFFFF0<32>
	a5_196 = CONVERT(a5_193 <u t4_192, bool, word32) + CONVERT((a5_189 <u a6_186) + (a3 <u t4_185), bool, bool)
l23091A5C:
	word32 a4_201 = a0 >>u 4<u32> << 6<i32>
	word32 a1_203 = a1 + a4_201
	word32 a2_205 = a2 + a4_201
	word32 a4_206 = 7<32>
	word32 a0_207 = a0 + ((a0 >>u 4<u32>) + 0xFFFFFFF0<32>)
	branch a0_207 <=u 7<32> l23091B9A
l23091A74:
	word32 a7_208 = Mem12[a1_203:int32]
	word32 a4_214 = a3 + a7_208 + a5_196
	word32 a4_216 = a4_214 + a6_13
	Mem217[a2_205 + 4096<i32>:word32] = a4_216
	word32 a5_220 = Mem217[a1_203 + 4<i32>:int32]
	word32 a6_221 = CONVERT(a4_216 <u a6_13, bool, word32) + CONVERT((a3 <u a7_208) + (a4_214 <u a5_196), bool, bool)
	word32 a4_224 = a3 + a5_220 + a6_221
	word32 a5_227 = Mem217[a2_205 + 4<i32>:int32]
	word32 a4_228 = a4_224 + a5_227
	Mem229[a2_205 + 4100<i32>:word32] = a4_228
	word32 a4_231 = Mem229[a1_203 + 8<i32>:int32]
	word32 a6_232 = CONVERT((a4_224 <u a6_221) + (a3 <u a5_220), bool, bool) + CONVERT(a4_228 <u a5_227, bool, word32)
	word32 a5_235 = a3 + a4_231 + a6_232
	word32 a6_238 = Mem229[a2_205 + 8<i32>:int32]
	word32 a5_239 = a5_235 + a6_238
	Mem240[a2_205 + 4104<i32>:word32] = a5_239
	word32 a4_243 = Mem240[a1_203 + 12<i32>:int32]
	word32 a6_242 = CONVERT(a5_239 <u a6_238, bool, word32) + CONVERT((a3 <u a4_231) + (a5_235 <u a6_232), bool, bool)
	word32 a7_246 = a3 + a4_243 + a6_242
	word32 a4_249 = Mem240[a2_205 + 12<i32>:int32]
	word32 a7_250 = a7_246 + a4_249
	Mem251[a2_205 + 4108<i32>:word32] = a7_250
	word32 a5_252 = Mem251[a1_203 + 16<i32>:int32]
	word32 a4_254 = CONVERT(a7_250 <u a4_249, bool, word32) + CONVERT((a7_246 <u a6_242) + (a3 <u a4_243), bool, bool)
	word32 a7_257 = a3 + a5_252 + a4_254
	word32 a5_260 = Mem251[a2_205 + 16<i32>:int32]
	word32 a7_261 = a7_257 + a5_260
	Mem262[a2_205 + 4112<i32>:word32] = a7_261
	word32 a6_263 = Mem262[a1_203 + 20<i32>:int32]
	word32 a5_265 = CONVERT(a7_261 <u a5_260, bool, word32) + CONVERT((a7_257 <u a4_254) + (a3 <u a5_252), bool, bool)
	word32 a7_268 = a3 + a6_263 + a5_265
	word32 a6_271 = Mem262[a2_205 + 20<i32>:int32]
	word32 a7_272 = a7_268 + a6_271
	Mem273[a2_205 + 4116<i32>:word32] = a7_272
	word32 a4_274 = Mem273[a1_203 + 24<i32>:int32]
	word32 a6_276 = CONVERT(a7_272 <u a6_271, bool, word32) + CONVERT((a7_268 <u a5_265) + (a3 <u a6_263), bool, bool)
	word32 a7_279 = a3 + a4_274 + a6_276
	word32 a4_282 = Mem273[a2_205 + 24<i32>:int32]
	word32 a7_283 = a7_279 + a4_282
	Mem284[a2_205 + 4120<i32>:word32] = a7_283
	word32 a5_285 = Mem284[a1_203 + 28<i32>:int32]
	word32 a4_287 = CONVERT(a7_283 <u a4_282, bool, word32) + CONVERT((a7_279 <u a6_276) + (a3 <u a4_274), bool, bool)
	word32 a6_290 = a3 + a5_285 + a4_287
	word32 a5_293 = Mem284[a2_205 + 28<i32>:int32]
	word32 a6_294 = a6_290 + a5_293
	Mem296[a2_205 + 4124<i32>:word32] = a6_294
	a4_206 = CONVERT((a6_290 <u a4_287) + (a3 <u a5_285), bool, bool)
	a0_207 = a0_207 + 0xFFFFFFF8<32>
	a2_205 = a2_205 + 32<i32>
	a1_203 = a1_203 + 32<i32>
	a5_196 = CONVERT(a6_294 <u a5_293, bool, word32) + a4_206
l23091B9A:
	word32 t3_301 = a1_203 + (a0_207 << 2<i32>)
	word32 a6_303 = a2_205
l23091BA2:
	word32 a7_306 = Mem305[a6_303:int32]
	a6_303 = a6_303 + 4<32>
	branch a1_203 != t3_301 l23091E06
l23091E06:
	a1_203 = a1_203 + 4<32>
	word32 t1_311 = Mem305[a1_203 + -4<i32>:int32]
	word32 a4_316 = a3 + t1_311 + a5_196
	word32 a4_318 = a4_316 + a7_306
	Mem319[a6_303 + 4092<i32>:word32] = a4_318
	a4_206 = CONVERT(a4_318 <u a7_306, bool, word32)
	a5_196 = a4_206 + CONVERT((a3 <u t1_311) + (a4_316 <u a5_196), bool, bool)
l23091BAC:
l23091BAE:
	word32 a2_328 = Mem327[a4_206:word32]
	a4_206 = a4_206 + a5_196
	Mem332[a2_328 + 0x1000<32>:word32] = a4_206
	branch a4_206 <u a5_196 l23091E2C
l23091E2C:
	a5_196 = 1<32>
l23091BBC:
	a2Out = a2_328 + 4<32>
	a4Out = a4_206
	a5Out = a5_196
	return a1_203
mpi_mul_hlp_exit:


word32 mbedtls_mpi_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_public
//      mbedtls_rsa_private
//      ecp_select_comb
//      ecp_double_jac
//      ecp_normalize_jac
//      ecp_normalize_jac_many
//      mbedtls_ecp_point_init.part.2
//      mbedtls_ecp_keypair_init
//      ecp_add_mixed
//      mbedtls_ecp_check_pubkey
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
mbedtls_mpi_init_entry:
l23091E30:
	branch a0 == 0<32> l23091E3E
l23091E32:
	Mem5[1<32>:word32] = a0
	Mem6[a0 + 4<i32>:word32] = 0<32>
	Mem7[a0 + 8<i32>:word32] = 0<32>
	a5 = 1<32>
l23091E3E:
	return a5
mbedtls_mpi_init_exit:


word32 mbedtls_mpi_free(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_public
//      mbedtls_rsa_private
//      mbedtls_rsa_free
//      mbedtls_mpi_copy
//      mbedtls_mpi_sub_abs
//      mbedtls_mpi_mul_mpi
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_exp_mod
//      mbedtls_mpi_gcd
//      mbedtls_mpi_inv_mod
//      ecp_select_comb
//      ecp_double_jac
//      ecp_normalize_jac
//      ecp_normalize_jac_many
//      mbedtls_ecp_point_free
//      mbedtls_ecp_group_free
//      mbedtls_ecp_keypair_free
//      ecp_add_mixed
//      mbedtls_ecp_check_pubkey
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
mbedtls_mpi_free_entry:
l23091E40:
	branch a0 == 0<32> l23091E7A
l23091E7A:
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a6Out = a6
	s4Out = s4
	return s1
l23091E42:
	word32 a0_10 = Mem8[a5 + 8<i32>:word32]
	word32 s0_11 = a0_10
	branch a5 == 0<32> l23091E5E
l23091E4E:
	word32 a0_13 = Mem8[a4 + 4<i32>:word32]
l23091E52:
	a4 = a4 + 0xFFFFFFFF<32>
	branch a4 != 0xFFFFFFFF<32> l23091E72
l23091E72:
	Mem19[a5:word32] = 0<32>
	a5 = a5 + 4<32>
l23091E58:
	word32 a2_98
	word32 a5_99
	word32 t3_100
	vPortFree(a0_13, a2, a5, mstatus, dwArg0148, dwArg0188, out s0_11, out s1, out a0_10, out a1, out a2_98, out a3, out a4, out a5_99, out a6, out s4, out t3_100)
l23091E5E:
	Mem43[1<32>:word32] = s0_11
	Mem44[s0_11 + 4<i32>:word32] = 0<32>
	Mem45[s0_11 + 8<i32>:word32] = 0<32>
	a0Out = a0_10
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = 1<32>
	a6Out = a6
	s4Out = s4
	return s1
mbedtls_mpi_free_exit:


word32 mbedtls_mpi_grow(word32 ra, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_shrink
//      mbedtls_mpi_copy
//      mbedtls_mpi_safe_cond_assign
//      mbedtls_mpi_lset
//      mbedtls_mpi_read_binary
//      mbedtls_mpi_shift_l
//      mbedtls_mpi_add_abs
//      mbedtls_mpi_mul_mpi
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_exp_mod
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_mpi_grow_entry:
l23091E7C:
	word32 a5_139 = 0x2000710<32>
	branch a1 <=u 0x2000710<32> l23091E98
l23091E98:
	word32 a0_126 = 0<32>
	branch a1 <=u 0x2000710<32> l23091E8C
l23091EAC:
	word32 a2_25
	word32 s0_217
	word32 s2_218
	ra = mycalloc(ra, a1, a1, 4<32>, a3, a4, 0x2000710<32>, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_217, out s1, out a1, out a2_25, out a3, out a4, out a5_139, out s2_218, out s3, out s4, out s8)
	s2 = a1
	branch a1 == 0<32> l23091E8A
l23091E8A:
	a0_126 = 0xFFFFFFF0<32>
l23091EBA:
	word32 s0_43 = Mem14[a1 + 8<i32>:word32]
	branch a1 == 0<32> l23091ED8
l23091EBE:
	word32 a2_50
	word32 a1_219
	word32 a3_220
	word32 a6_221
	word32 a5_47
	word32 a4_46
	memcpy(a1, a1, a2_25 << 2<i32>, out a1_219, out a2_50, out a3_220, out a4_46, out a5_47, out a6_221, out a7)
l23091ECC:
	a5_47 = a5_47 + 0xFFFFFFFF<32>
	branch a5_47 != 0xFFFFFFFF<32> l23091EE2
l23091EE2:
	Mem66[a4_46:word32] = 0<32>
	a4_46 = a4_46 + 4<32>
l23091ED2:
	word32 a0_222
	word32 a2_223
	word32 a6_224
	word32 t3_225
	vPortFree(a1, a2_50, a5_47, mstatus, dwArg0148, dwArg0188, out s0_43, out s1, out a0_222, out a1, out a2_223, out a3, out a4, out a5_139, out a6_224, out s4, out t3_225)
l23091ED8:
	Mem88[s1 + 4<i32>:word32] = s0_43
	Mem91[s0_43 + 8<i32>:word32] = a1
	a0_126 = 0<32>
l23091E8C:
	0<32> = dwArg38
	s1Out = s1
	a0Out = a0_126
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_139
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return ra
l23091E86:
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0x2000710<32>
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return ra
mbedtls_mpi_grow_exit:


word32 mbedtls_mpi_shrink(word32 ra, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecp_normalize_jac_many
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s1 s2 s3 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_mpi_shrink_entry:
l23091EEA:
	branch a1 <u a4 l23091F4E
l23091F4E:
	word32 s1_17 = a1
	word32 a5_18 = a4 + -1<i32>
l23091F02:
	branch a5_18 != 0<32> l23091EF4
l23091EF4:
	a3 = a5_18 << 2<u32>
	a4 = Mem15[a4 + a3:word32]
	branch a4 != 0<32> l23091F04
l23091F00:
	a5_18 = a5_18 + 0xFFFFFFFF<32>
l23091F04:
	word32 a5_28 = a5_18 + 1<32>
	branch a1 >=u a5_28 l23091F0C
l23091F0A:
	s1_17 = a5_28
l23091F0C:
	word32 a1_54
	word32 s3_64
	word32 s8_66
	word32 a5_291
	word32 s2_292
	word32 s4_293
	word32 a2_290
	word32 s0_289
	word32 s1_107
	word32 a4_105
	word32 a3_104
	word32 ra_60 = mycalloc(ra, s1_17, s1_17, 4<32>, a3, a4, a5_28, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_289, out s1_107, out a1_54, out a2_290, out a3_104, out a4_105, out a5_291, out s2_292, out s3_64, out s4_293, out s8_66)
	word32 a5_121 = 0xFFFFFFF0<32>
	branch s1_17 == 0<32> l23091F40
l23091F1A:
	word32 s0_112 = Mem15[a1_54 + 8<i32>:word32]
	branch a1_54 == 0<32> l23091F38
l23091F1E:
	word32 a7_297
	word32 a2_79
	word32 a3_295
	word32 a1_294
	word32 a6_296
	word32 a5_76
	word32 a4_75
	memcpy(s1_17, a1_54, s1_107 << 2<u32>, out a1_294, out a2_79, out a3_295, out a4_75, out a5_76, out a6_296, out a7_297)
l23091F2C:
	a5_76 = a5_76 + 0xFFFFFFFF<32>
	branch a5_76 != 0xFFFFFFFF<32> l23091F62
l23091F62:
	Mem95[a4_75:word32] = 0<32>
	a4_75 = a4_75 + 4<32>
l23091F32:
	word32 s4_303
	word32 t3_304
	word32 a5_301
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a6_302
	vPortFree(s1_17, a2_79, a5_76, mstatus, dwArg0148, dwArg0188, out s0_112, out s1_107, out a0_298, out a1_299, out a2_300, out a3_104, out a4_105, out a5_301, out a6_302, out s4_303, out t3_304)
l23091F38:
	Mem117[s1_107 + 4<i32>:word32] = s0_112
	Mem120[s0_112 + 8<i32>:word32] = s1_17
	a5_121 = 0<32>
l23091F40:
	0<32> = dwArg38
	s1Out = s1_107
	a0Out = a5_121
	a2Out = dwArg10
	a3Out = a3_104
	a4Out = a4_105
	a5Out = a5_121
	s2Out = s1_17
	s3Out = s3_64
	s8Out = s8_66
	return ra_60
l23091EF0:
l23091EF0_thunk_mbedtls_mpi_grow:
	word32 a0_131
	word32 a2_132
	word32 a5_133
	word32 a3_136
	word32 a4_137
	word32 s1_140
	word32 s2_141
	word32 s3_142
	word32 s8_144
	word32 a1_286
	word32 a7_287
	word32 s4_288
	word32 ra_139 = mbedtls_mpi_grow(ra, a1, a3, a4, mstatus, dwArg10, dwArg14, dwArg38, dwArg0108, dwArg0148, dwArg0188, out s1_140, out a0_131, out a1_286, out a2_132, out a3_136, out a4_137, out a5_133, out a7_287, out s2_141, out s3_142, out s4_288, out s8_144)
	s1Out = s1_140
	a0Out = a0_131
	a2Out = a2_132
	a3Out = a3_136
	a4Out = a4_137
	a5Out = a5_133
	s2Out = s2_141
	s3Out = s3_142
	s8Out = s8_144
	return ra_139
mbedtls_mpi_shrink_exit:


word32 mbedtls_mpi_copy(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_add_abs
//      mbedtls_mpi_sub_abs
//      mbedtls_mpi_mul_mpi
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_exp_mod
//      mbedtls_mpi_gcd
//      mbedtls_mpi_inv_mod
//      ecp_double_jac
//      ecp_normalize_jac_many
//      mbedtls_ecp_copy
//      ecp_add_mixed
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_copy_entry:
l23091F6A:
	word32 s3_114
	branch a0 == a1 l23091F84
l23091F7A:
	word32 a1_17 = Mem13[a4 + 8<i32>:word32]
	s2 = a1_17
	branch a4 != 0<32> l23091F88
l23091F88:
l23091F8C:
	a2 = a2 + 0xFFFFFFFF<32>
	branch a2 == 0<32> l23091F9A
l23091F90:
	branch Mem13[(a2 << 2<u32>) + a4:word32] == 0<32> l23091F8C
l23091F9A:
	Mem38[Mem13[a1_17:int32]:word32] = a0
	s0 = a2 + 1<i32>
	word32 a0_51
	word32 a2_52
	word32 s3_230
	word32 s4_231
	word32 s8_232
	ra = mbedtls_mpi_grow(ra, a2 + 1<i32>, a3, a4, mstatus, dwLoc10, dwLoc0C, dwArg18, dwArgE8, dwArg0128, dwArg0168, out s1, out a0_51, out a1, out a2_52, out a3, out a4, out a5, out a7, out s2, out s3_230, out s4_231, out s8_232)
	s3_114 = a0_51
	branch a0_51 != 0<32> l23091FCA
l23091FB0:
	word32 a0_77
	word32 t1_233
	word32 a1_234
	word32 a2_235
	word32 a3_236
	word32 a4_237
	word32 a5_238
	ra = memset(ra, a0_51, 0<32>, a2_52 << 2<i32>, out t1_233, out a0_77, out a1_234, out a2_235, out a3_236, out a4_237, out a5_238)
	s1 = Mem38[a0_77 + 8<i32>:word32]
	word32 a2_239
	word32 a6_240
	memcpy(a0_77, Mem38[s2 + 8<i32>:int32], a2 + 1<i32> << 2<u32>, out a1, out a2_239, out a3, out a4, out a5, out a6_240, out a7)
l23091F80:
	word32 a0_226
	word32 a2_227
	word32 a6_228
	word32 s4_229
	s1 = mbedtls_mpi_free(a0, a2, a4, a5, mstatus, dwArg0128, dwArg0168, out a0_226, out a1, out a2_227, out a3, out a4, out a5, out a6_228, out s4_229)
l23091F84:
	s3_114 = 0<32>
l23091FCA:
	s0Out = s0
	s1Out = s1
	a0Out = s3_114
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a6Out = dwArg28
	a7Out = a7
	s2Out = s2
	s3Out = s3_114
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra
mbedtls_mpi_copy_exit:


word32 mbedtls_mpi_safe_cond_assign(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecp_select_comb
//      mbedtls_ecp_mul
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_safe_cond_assign_entry:
l23091FDA:
	word32 s0_134 = a0
	word32 a0_20
	word32 s2_30
	word32 s3_31
	word32 s8_173
	word32 a7_171
	word32 s4_172
	word32 a1_24
	word32 a3_122
	word32 a4_123
	word32 a2_120
	word32 a5_124
	word32 s1_135
	word32 ra_28 = mbedtls_mpi_grow(ra, Mem9[a1 + 4<i32>:word32], a3, a4, mstatus, dwLoc10, dwLoc0C, dwArg18, dwArgE8, dwArg0128, dwArg0168, out s1_135, out a0_20, out a1_24, out a2_120, out a3_122, out a4_123, out a5_124, out a7_171, out s2_30, out s3_31, out s4_172, out s8_173)
	branch a0_20 != 0<32> l23092020
l23091FF0:
	word32 a5_44 = 0<32> - a2
	a2_120 = ((a2 | a5_44) & 255<i32>) >>u 7<i32>
	a4_123 = 1<32> - a2_120
	a3_122 = a2_120 + a3_122
	Mem53[a4_123 + a5_44 + a3_122:word32] = Mem16[a5_44:word32]
	a5_124 = 0<32>
l23092014:
	s1_135 = Mem56[a3_122 + 4<i32>:word32]
	branch a5_124 <u a3_122 l2309202A
l2309202A:
	word32 a6_62 = a5_124 << 2<u32>
	a1_24 = a1_24 + a6_62
	a3_122 = a2_120 + Mem56[a3_122 + a6_62:word32] + (a4_123 + Mem56[a1_24:int32])
	Mem73[a3_122:word32] = a1_24
	a5_124 = a5_124 + 1<32>
l2309201A:
	s0_134 = Mem75[a3_122 + 4<i32>:word32]
	branch a5_124 <u a3_122 l2309204C
l2309204C:
	word32 a2_79 = a5_124 << 2<u32>
	a3_122 = Mem75[a2_79:word32]
	a2_120 = a2_79 + a4_123
	Mem84[a2_120:word32] = a3_122
	a5_124 = a5_124 + 1<32>
l23092020:
	s0Out = s0_134
	s1Out = s1_135
	a0Out = a0_20
	a2Out = a2_120
	a3Out = a3_122
	a4Out = a4_123
	a5Out = a5_124
	s2Out = s2_30
	s3Out = s3_31
	s4Out = dwArg04
	return ra_28
mbedtls_mpi_safe_cond_assign_exit:


word32 mbedtls_mpi_lset(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_read_binary
//      mbedtls_mpi_shift_r
//      mbedtls_mpi_mul_mpi
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_exp_mod
//      mbedtls_mpi_inv_mod
//      ecp_normalize_jac
//      mbedtls_ecp_point_read_binary
//      mbedtls_ecp_mul
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a1 a2 a3 a4 a5 a7 ra s1 s2 s3 s4 s8
// Trashed: a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_mpi_lset_entry:
l23092060:
	word32 a0_20
	word32 a2_21
	word32 s1_29
	word32 s3_31
	word32 s4_32
	word32 s8_33
	word32 a7_37
	word32 s2_140
	word32 a5_102
	word32 a4_100
	word32 a3_25
	word32 a1_24
	word32 ra_107 = mbedtls_mpi_grow(ra, 1<32>, a3, a4, mstatus, dwArg00, dwArg04, dwArg28, dwArgF8, dwArg0138, dwArg0178, out s1_29, out a0_20, out a1_24, out a2_21, out a3_25, out a4_100, out a5_102, out a7_37, out s2_140, out s3_31, out s4_32, out s8_33)
	branch a0_20 != 0<32> l2309209C
l23092078:
	word32 a5_145
	word32 a2_143
	word32 a4_144
	word32 t1_141
	word32 a0_142
	ra_107 = memset(ra_107, a0_20, 0<32>, a2_21 << 2<i32>, out t1_141, out a0_142, out a1_24, out a2_143, out a3_25, out a4_144, out a5_145)
	word32 s0_56 = Mem14[a3_25 + 8<i32>:word32]
	Mem59[(s1_29 >> 0x1F<u32> ^ s1_29) - (s1_29 >> 0x1F<u32>):word32] = a3_25
	a4_100 = s1_29 >> 0x1F<u32>
	a5_102 = 0xFFFFFFFF<32>
	branch s1_29 < 0<32> l2309209A
l23092098:
	a5_102 = 1<32>
l2309209A:
	Mem64[a5_102:word32] = s0_56
l2309209C:
	0<32> = dwArg38
	s1Out = s1_29
	a1Out = a1_24
	a2Out = dwArg10
	a3Out = a3_25
	a4Out = a4_100
	a5Out = a5_102
	a7Out = a7_37
	s2Out = a0_20
	s3Out = s3_31
	s4Out = s4_32
	s8Out = s8_33
	return ra_107
mbedtls_mpi_lset_exit:


word32 mbedtls_mpi_get_bit(word32 a1, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_mul
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
mbedtls_mpi_get_bit_entry:
l230920AA:
	branch a1 >=u a5 << 5<i32> l230920C6
l230920C6:
	a4Out = a4
	a5Out = a5 << 5<i32>
	return 0<32>
l230920B2:
	word32 a0_9 = Mem0[(a5 << 5<i32>) + 8<i32>:word32]
	word32 a5_12 = Mem0[a0_9:word32]
	a4Out = a1 >>u 5<u32> << 2<i32>
	a5Out = a5_12
	return a0_9 >>u a1 & 1<32>
mbedtls_mpi_get_bit_exit:


word32 mbedtls_mpi_lsb(word32 a0, word32 a5, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_gcd
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a2 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
mbedtls_mpi_lsb_entry:
l230920CA:
	word32 a6_5 = Mem0[a0 + 4<i32>:int32]
	word32 a3_29 = 0<32>
	word32 a4_10 = 0<32>
l230920D6:
	word32 a1_23
	branch a6_5 != a4_10 l230920E0
l230920E0:
	word32 t1_16 = Mem0[a5 + (a4_10 << 2<u32>):int32]
	a5 = 0<32>
l230920EE:
	word32 a2_20 = t1_16 >>u a5
	a2 = a2_20 & 1<32>
	a1_23 = a3_29 + a5
	branch (a2_20 & 1<32>) != 0<32> l230920DC
l230920FA:
	a5 = a5 + 1<32>
	a2 = a3_29 + a5
	branch a5 != 32<i32> l230920EE
l23092104:
	a4_10 = a4_10 + 1<32>
	a3_29 = a2
l230920DA:
	a1_23 = 0<32>
l230920DC:
	a2Out = a2
	a5Out = a5
	return a1_23
mbedtls_mpi_lsb_exit:


word32 mbedtls_mpi_bitlen(word32 a2, word32 a4, word32 a5, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_pubkey
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      mbedtls_mpi_size
//      mbedtls_mpi_shift_l
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_exp_mod
//      ecp_modp
//      mbedtls_ecp_group_load
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
mbedtls_mpi_bitlen_entry:
l2309210A:
	branch a5 == 0<32> l2309213A
l2309210E:
	word32 a5_15 = a5 + 0xFFFFFFFF<32>
l23092112:
	word32 a3_10 = a5_15 << 2<u32>
	branch a5_15 != 0<32> l2309213E
l2309213E:
	a2 = Mem0[a4 + a3_10:word32]
	branch a2 != 0<32> l23092118
l23092146:
	a5_15 = a5_15 + 0xFFFFFFFF<32>
l23092118:
	word32 a0_21 = 0<32>
	a4 = 0x80000000<32>
	a3 = 32<i32>
l23092126:
	a1 = a2 & a4
	branch a1 != 0<32> l23092134
l2309212C:
	a0_21 = a0_21 + 1<32>
	a4 = a4 >>u 1<i32>
	branch a0_21 != 32<i32> l23092126
l23092134:
	a5 = (a5_15 + 1<32> << 5<i32>) - a0_21
l2309213A:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	return a5
mbedtls_mpi_bitlen_exit:


word32 mbedtls_mpi_size(word32 a2, word32 a4, word32 a5, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs1_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_mpi_write_binary
//      mbedtls_ecp_point_read_binary
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
mbedtls_mpi_size_entry:
l2309214A:
	word32 a1_10
	word32 a3_12
	word32 a4_13
	word32 a5_14
	word32 a2_25
	word32 a0_17 = mbedtls_mpi_bitlen(a2, a4, a5, out a1_10, out a2_25, out a3_12, out a4_13, out a5_14) + 7<32> >>u 3<i32>
	a1Out = a1_10
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_14
	return a0_17
mbedtls_mpi_size_exit:


word32 mbedtls_mpi_read_binary(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_sec1_der
//      mbedtls_rsa_public
//      mbedtls_rsa_private
//      mbedtls_asn1_get_mpi
//      mbedtls_mpi_fill_random
//      mbedtls_ecp_point_read_binary
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_read_binary_entry:
l2309215C:
	word32 s0_20 = 0<32>
l23092170:
	branch s0_20 == a2 l2309217E
l23092174:
	branch CONVERT(Mem13[a1 + s0_20:byte], byte, word32) == 0<32> l230921B0
l230921B0:
	s0_20 = s0_20 + 1<32>
l2309217E:
	word32 a5_30 = a2 - s0_20
	word32 a2_228
	word32 s4_229
	word32 s8_230
	word32 s1_103
	word32 s3_202
	word32 s2_201
	word32 a5_101
	word32 a7_195
	word32 a4_110
	word32 a3_112
	word32 a0_186
	word32 a1_188
	word32 ra_197 = mbedtls_mpi_grow(ra, CONVERT((a5_30 & 3<i32>) != 0<32>, bool, word32) + (a5_30 >>u 2<i32>), a3, a4, mstatus, dwLoc10, dwLoc0C, dwArg18, dwArgE8, dwArg0128, dwArg0168, out s1_103, out a0_186, out a1_188, out a2_228, out a3_112, out a4_110, out a5_101, out a7_195, out s2_201, out s3_202, out s4_229, out s8_230)
	branch a0_186 != 0<32> l230921A2
l23092196:
	a0_186 = s2_201
	word32 a5_232
	word32 a2_231
	word32 s4_233
	word32 s8_234
	ra_197 = mbedtls_mpi_lset(ra_197, a3_112, a4_110, mstatus, dwLoc20, dwLoc1C, dwArg08, dwArg18, dwArgD8, dwArg0118, dwArg0158, out s1_103, out a1_188, out a2_231, out a3_112, out a4_110, out a5_232, out a7_195, out s2_201, out s3_202, out s4_233, out s8_234)
	a5_101 = 0<32>
	branch s2_201 == 0<32> l230921DA
l230921DA:
	branch s0_20 <u s1_103 l230921B4
l230921B4:
	s1_103 = s1_103 + 0xFFFFFFFF<32>
	word32 a3_106 = CONVERT(Mem99[s3_202 + s1_103:byte], byte, word32)
	a4_110 = Mem99[a3_106:word32]
	a3_112 = a3_106 | a3_106 << (a5_101 << 3<u32> & 0x18<32>)
	Mem113[a3_112:word32] = a4_110
	a5_101 = a5_101 + 1<32>
l230921DE:
l230921A2:
	s0Out = s0_20
	s1Out = s1_103
	a0Out = a0_186
	a1Out = a1_188
	a2Out = dwArg48
	a3Out = a3_112
	a4Out = a4_110
	a5Out = a5_101
	a7Out = a7_195
	s2Out = s2_201
	s3Out = s3_202
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra_197
mbedtls_mpi_read_binary_exit:


word32 mbedtls_mpi_write_binary(word32 ra, word32 a1, word32 a2, word32 a4, word32 a5, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_public
//      mbedtls_rsa_private
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a2 a4 a5 ra s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3
// Preserved: sp
mbedtls_mpi_write_binary_entry:
l230921E0:
	word32 a0_28
	word32 a3_117
	word32 a1_116
	word32 a5_27
	word32 a4_26
	word32 a0_22 = mbedtls_mpi_size(a2, a4, a5, out a1_116, out a3_117, out a4_26, out a5_27)
	branch a2 <u a0_22 l23092242
l23092242:
	a0_28 = 0xFFFFFFF8<32>
l230921FA:
	s2 = a0_22
	word32 t1_118
	word32 a0_119
	word32 a1_120
	word32 a2_121
	word32 a3_122
	word32 a5_123
	ra = memset(ra, a1, 0<32>, a2, out t1_118, out a0_119, out a1_120, out a2_121, out a3_122, out a4_26, out a5_123)
	word32 a2_42 = a1 + a2
	a5_27 = 0<32>
l2309220C:
	a2_42 = a2_42 + 0xFFFFFFFF<32>
	branch a5_27 != a0_22 l23092222
l23092222:
	word32 a4_52 = a5_27 << 3<u32>
	a4_26 = a4_52 >>u (a4_52 & 24<i32>)
	Mem57[a2_42:byte] = SLICE(a4_26, byte, 0)
	a5_27 = a5_27 + 1<32>
l23092212:
	a0_28 = 0<32>
l23092214:
	a0Out = a0_28
	a2Out = dwArg48
	a4Out = a4_26
	a5Out = a5_27
	s2Out = s2
	s3Out = a0
	return ra
mbedtls_mpi_write_binary_exit:


word32 mbedtls_mpi_shift_l(word32 ra, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_exp_mod
//      mbedtls_mpi_gcd
//      ecp_double_jac
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_shift_l_entry:
l23092246:
	word32 a0_118
	word32 a5_112
	word32 a5_28
	word32 a2_297
	word32 a1_141
	word32 a4_102
	word32 a3_135
	word32 a0_23 = mbedtls_mpi_bitlen(a2, a4, a5, out a1_141, out a2_297, out a3_135, out a4_102, out a5_28)
	word32 s2_15 = a1
	word32 s1_101 = a1 >>u 5<u32>
	word32 s3_19 = a1 & 31<i32>
	word32 s0_100 = Mem17[a5_28 + 4<i32>:word32]
	word32 a0_30 = a0_23 + a1
	branch a5_28 << 5<i32> <u a0_30 l2309227A
l2309227A:
	word32 s8_300
	word32 a2_298
	word32 s4_299
	ra = mbedtls_mpi_grow(ra, CONVERT((a0_30 & 31<i32>) != 0<32>, bool, word32) + (a0_30 >>u 5<i32>), a3_135, a4_102, mstatus, dwLoc10, dwLoc0C, dwArg18, dwArgE8, dwArg0128, dwArg0168, out s1_101, out a0_118, out a1_141, out a2_298, out a3_135, out a4_102, out a5_112, out a7, out s2_15, out s3_19, out s4_299, out s8_300)
	branch a0_118 == 0<32> l2309226C
l2309226C:
	a5_112 = 0x1F<32>
	branch s2_15 >u 0x1F<32> l2309229C
l2309229C:
	word32 a2_63 = s1_101 + 0xFFFFFFFC<32>
	s0_100 = Mem17[0x23<32>:word32]
	a4_102 = 0x7C<32>
l230922A8:
	a4_102 = a4_102 + 0xFFFFFFFC<32>
	branch s1_101 <u a5_112 l230922C2
l230922C2:
	s0_100 = Mem72[a3_135 + 8<i32>:word32]
	a1_141 = Mem72[a3_135 + a2_63 + a4_102:word32]
	a3_135 = a3_135 + a4_102
	Mem80[a1_141:word32] = a3_135
	a5_112 = a5_112 + 0xFFFFFFFF<32>
l230922AE:
	a5_112 = a5_112 << 2<i32>
	a3_135 = 0xFFFFFFFC<32>
l230922B2:
	a5_112 = a5_112 + 0xFFFFFFFC<32>
	branch a5_112 == 0xFFFFFFFC<32> l23092272
l230922B8:
	s0_100 = Mem87[a4_102 + 8<i32>:word32]
	a4_102 = a4_102 + a5_112
	Mem90[a4_102:word32] = 0<32>
l23092272:
	branch s3_19 != 0<32> l230922FC
l230922FC:
	word32 a2_113 = 0<32>
	a3_135 = 32<i32> - s3_19
l230922F4:
	s0_100 = Mem99[a5_112 + 4<i32>:word32]
	branch s1_101 <u a5_112 l230922D4
l230922D4:
	word32 a4_107 = Mem99[a1_141:word32]
	Mem110[a1_141 << s3_19:word32] = a4_107
	a5_112 = Mem110[a4_107:word32]
	a4_102 = a4_107 | a2_113
	Mem115[a4_102:word32] = a5_112
	s1_101 = s1_101 + 1<32>
	a2_113 = a1_141 >>u a3_135
l230922FA:
l23092276:
	a0_118 = 0<32>
l2309228E:
	s0Out = s0_100
	s1Out = s1_101
	a0Out = a0_118
	a2Out = dwArg48
	a3Out = a3_135
	a4Out = a4_102
	a5Out = a5_112
	a7Out = a7
	s2Out = s2_15
	s3Out = s3_19
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra
mbedtls_mpi_shift_l_exit:


word32 mbedtls_mpi_shift_r(word32 ra, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_gcd
//      mbedtls_mpi_inv_mod
//      mbedtls_ecp_mul
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_shift_r_entry:
l23092308:
	word32 a0_5 = Mem0[a5 + 4<i32>:word32]
	word32 a3_124 = a1 >>u 5<u32>
	branch a5 <u a1 >>u 5<u32> l2309231C
l23092316:
	word32 a5_11
	word32 a1_10
	branch a5 != a1 >>u 5<u32> l23092322
l23092322:
	a5_11 = 0x1F<32>
	a1_10 = a1
	branch a1 <=u 0x1F<32> l2309233C
l23092328:
	a1_10 = a1 >>u 5<u32> << 2<u32>
	a5_11 = 0<32>
l2309232E:
	a2 = a2 - (a1 >>u 5<u32>)
	branch a5_11 <u a2 l23092342
l23092342:
	a2 = a2 + (a5_11 << 2<u32>)
	Mem26[a2:word32] = Mem13[a2 + a1_10:int32]
	a5_11 = a5_11 + 1<32>
	a1_10 = a1_10 + 4<32>
l2309231A:
	branch (a1 & 31<i32>) == 0<32> l230923A6
l230923A6:
	a5_11 = 0x1F<32>
	a1_10 = a1
	branch a1 <=u 0x1F<32> l2309233E
l230923AC:
	a5_11 = 0<32>
	a1_10 = a1
l23092336:
	branch a5_11 <u a3_124 l2309235C
l2309235C:
	a2 = a5_11 << 2<u32>
	a3_124 = a3_124 + a2
	Mem37[a3_124:word32] = 0<32>
	a5_11 = a5_11 + 1<32>
l2309233C:
	branch (a1 & 31<i32>) != 0<32> l2309236C
l2309236C:
	word32 a7_45 = 0<32>
	word32 a6_47 = 32<i32> - (a1 & 31<i32>)
l2309237A:
	a5_11 = a5_11 + 0xFFFFFFFF<32>
	branch a5_11 == 0xFFFFFFFF<32> l2309233E
l23092380:
	Mem59[Mem52[a1_10:word32]:word32] = a1_10 >>u (a1 & 31<i32>)
	a3_124 = Mem59[a5_11 << 2<u32>:word32]
	a2 = a5_11 << 2<u32> | a7_45
	Mem64[a2:word32] = a3_124
	a7_45 = a1_10 << a6_47
l2309233E:
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1_10
	a2Out = a2
	a3Out = a3_124
	a4Out = a1 & 31<i32>
	a5Out = a5_11
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return ra
l2309231C:
l2309231E_thunk_mbedtls_mpi_lset:
	word32 a1_77
	word32 a2_78
	word32 a3_79
	word32 a4_80
	word32 a5_81
	word32 s1_85
	word32 s2_86
	word32 s3_87
	word32 s4_88
	word32 s8_89
	word32 a7_249
	word32 ra_84 = mbedtls_mpi_lset(ra, a1 >>u 5<u32>, a1 & 31<i32>, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArgF8, dwArg0138, dwArg0178, out s1_85, out a1_77, out a2_78, out a3_79, out a4_80, out a5_81, out a7_249, out s2_86, out s3_87, out s4_88, out s8_89)
	s1Out = s1_85
	a0Out = a0_5
	a1Out = a1_77
	a2Out = a2_78
	a3Out = a3_79
	a4Out = a4_80
	a5Out = a5_81
	s2Out = s2_86
	s3Out = s3_87
	s4Out = s4_88
	s8Out = s8_89
	return ra_84
mbedtls_mpi_shift_r_exit:


word32 mbedtls_mpi_cmp_abs(word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mpi_montmul
//      mbedtls_mpi_sub_abs
//      mbedtls_mpi_add_mpi
//      mbedtls_mpi_sub_mpi
//      mbedtls_mpi_div_mpi
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
mbedtls_mpi_cmp_abs_entry:
l230923B0:
l230923B2:
	branch a5 != 0<32> l230923BE
l230923BE:
	a3 = a5 << 2<u32>
	a4 = Mem0[a4 + a3 + -4<i32>:int32]
	branch a4 != 0<32> l230923B4
l230923CC:
	a5 = a5 + 0xFFFFFFFF<32>
l230923B4:
	word32 a1_18 = Mem0[a3 + 4<i32>:word32]
l230923B6:
	word32 a4_26
	branch a3 != 0<32> l230923D0
l230923D0:
	a1_18 = Mem0[a2 + 8<i32>:word32]
	branch Mem0[(a3 << 2<u32>) + a2 + -4<i32>:int32] != 0<32> l230923E2
l230923E2:
	a4_26 = 1<32>
	branch a3 <u a5 l230923F8
l230923E8:
	a4_26 = 0xFFFFFFFF<32>
	branch a5 <u a3 l230923F8
l230923EE:
	a5 = a5 + 0xFFFFFFFF<32>
	a1_18 = 0xFFFFFFFF<32>
l230923F2:
	branch a5 != 0xFFFFFFFF<32> l230923FC
l230923FC:
	word32 a4_36 = a5 << 2<u32>
	a3 = Mem0[a3 + a4_36:word32]
	word32 a4_41 = Mem0[a4_36 + a2:word32]
	branch a4_41 <u a3 l23092418
l23092418:
	a4_26 = 1<32>
l2309240E:
	a5 = a5 + 0xFFFFFFFF<32>
	branch a3 >=u a4_41 l230923F2
l23092414:
	a4_26 = 0xFFFFFFFF<32>
l230923F6:
	a4_26 = 0<32>
l230923DE:
	a3 = a3 + 0xFFFFFFFF<32>
l230923B8:
	a4_26 = CONVERT(a5 != 0<32>, bool, word32)
l230923F8:
	a1Out = a1_18
	a3Out = a3
	a4Out = a4_26
	a5Out = a5
	return a4_26
mbedtls_mpi_cmp_abs_exit:


word32 mpi_montmul(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 dwArg010C, ptr32 & t1Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_exp_mod
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mpi_montmul_entry:
l2309241C:
	word32 a2_5 = Mem0[a5 + 4<i32>:word32]
	word32 a7_7 = Mem0[a4 + 4<i32>:int32]
	branch a7_7 <u a5 + 1<32> l23092520
l23092520:
l23092428:
	word32 a6_10 = Mem0[a4 + 8<i32>:int32]
	branch a6_10 == 0<32> l23092522
l23092522:
	t1Out = t1
	s1Out = s1
	a0Out = 0xFFFFFFFC<32>
	a2Out = a2_5
	a3Out = a3
	a4Out = a4
	a5Out = 0xFFFFFFFC<32>
	a7Out = a7_7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
l23092432:
	word32 a1_358
	word32 t1_356
	word32 a2_359
	word32 a0_357
	word32 a4_361
	word32 a5_362
	word32 a3_360
	memset(ra, a6_10, 0<32>, a7_7 << 2<u32>, out t1_356, out a0_357, out a1_358, out a2_359, out a3_360, out a4_361, out a5_362)
	word32 s8_61 = Mem49[a2_5 + 4<i32>:int32]
	word32 s10_190 = Mem49[a1 + 4<i32>:int32]
	word32 a5_115 = Mem49[a4 + 8<i32>:int32]
	branch s8_61 >=u s10_190 l23092476
l23092474:
	s10_190 = s8_61
l23092476:
	word32 s6_67 = s8_61 + 1<i32> << 2<i32>
	word32 s3_70 = 0<32>
	s2_292 = s2
l23092480:
	word32 s2_292
	word32 a0_73 = Mem72[a0 + 8<i32>:int32]
	branch s3_70 != s8_61 l230924D0
l230924D0:
	word32 a4_78 = s3_70 << 2<u32>
	word32 a1_77 = Mem72[a1 + 8<i32>:int32]
	s11 = Mem72[a0_73 + a4_78:int32]
	word32 s1_82 = Mem72[a4_78:word32]
	s2_292 = s11 + Mem72[a1_77:int32] + a4_78 + a3
	word32 a2_363
	word32 a4_364
	word32 a2_366
	word32 a5_365
	word32 a4_367
	mpi_mul_hlp(s8_61, mpi_mul_hlp(s10_190, a1_77, s1_82, s11, out a2_363, out a4_364, out a5_365), s1_82, s2_292, out a2_366, out a4_367, out a5_115)
	Mem124[s1_82 + 0x1000<32>:word32] = s11
	Mem125[s1_82 + 4<32> + s6_67:word32] = 0<32>
	s3_70 = s3_70 + 1<32>
l23092488:
	word32 a2_155
	word32 a4_130
	word32 a5_131
	word32 a2_134
	word32 a3_135
	word32 a1_368
	word32 a6_369
	word32 a7_370
	memcpy(a0_73, s6_67 + -4<i32> + a5_115, s6_67, out a1_368, out a2_134, out a3_135, out a4_130, out a5_131, out a6_369, out a7_370)
	word32 a4_150
	word32 a1_371
	word32 a3_372
	word32 a5_373
	word32 a0_147 = mbedtls_mpi_cmp_abs(a2_134, a3_135, a4_130, a5_131, out a1_371, out a3_372, out a4_150, out a5_373)
	word32 a1_152 = Mem72[a0 + 8<i32>:int32]
	branch a0_147 < 0<32> l2309251A
l2309251A:
	a2_155 = Mem72[a4 + 8<i32>:int32]
l230924A4:
	a2_155 = a1_152
l230924A8:
	word32 a4_165
	word32 a7_168
	word32 a5_375
	word32 a2_374
	word32 t1_169 = mpi_sub_hlp(s3_70, a1_152, a2_155, a4_150, out a2_374, out a4_165, out a5_375, out a7_168)
	0<32> = dwArg010C
	t1Out = t1_169
	s1Out = dwLoc4C
	a0Out = 0<32>
	a2Out = dwArg01A8
	a3Out = s2
	a4Out = a4_165
	a5Out = 0<32>
	a7Out = a7_168
	s2Out = s2_292
	s3Out = s3_70
	s4Out = dwArg0168
	s5Out = a0
	s6Out = s6_67
	s7Out = a3
	s8Out = dwArg0148
	s9Out = a1
	s10Out = s10_190
	s11Out = s11
	return dwLoc08
mpi_montmul_exit:


word32 mbedtls_mpi_cmp_mpi(word32 a2, word32 a4, word32 a5, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_pubkey
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_check_pub_priv
//      mbedtls_rsa_public
//      mbedtls_rsa_private
//      mbedtls_mpi_cmp_int
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_mod_mpi
//      mbedtls_mpi_exp_mod
//      mbedtls_mpi_gcd
//      mbedtls_mpi_inv_mod
//      ecp_modp
//      ecp_double_jac
//      ecp_add_mixed
//      mbedtls_ecp_check_pubkey
//      mbedtls_ecp_check_privkey
//      mbedtls_ecp_mul
//      mbedtls_ecp_check_pub_priv
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
mbedtls_mpi_cmp_mpi_entry:
l23092526:
l23092528:
	branch a5 != 0<32> l23092534
l23092534:
	a3 = a5 << 2<u32>
	a4 = Mem0[a4 + a3 + -4<i32>:int32]
	branch a4 != 0<32> l2309252A
l23092542:
	a5 = a5 + 0xFFFFFFFF<32>
l2309252A:
	word32 a1_16 = Mem0[a4 + 4<i32>:word32]
l2309252C:
	branch a4 != 0<32> l23092546
l23092546:
	a6 = Mem0[a1_16 + 8<i32>:int32]
	a3 = Mem0[(a4 << 2<u32>) + a6 + -4<i32>:int32]
	branch a3 != 0<32> l2309255A
l2309255A:
	branch a4 >=u a5 l23092564
l23092564:
	a1_16 = Mem0[a3:word32]
	branch a5 >=u a4 l23092570
l23092570:
	branch a4 <= 0<32> l2309257E
l2309257E:
	branch a3 <= 0<32> l230925A6
l23092582:
	branch a4 == 0<32> l230925A6
l23092584:
	a4 = 0xFFFFFFFF<32>
l23092576:
	branch a3 >= 0<32> l230925A6
l230925A6:
	a5 = a5 + 0xFFFFFFFF<32>
	a1_16 = 0xFFFFFFFF<32>
l230925AA:
	branch a5 != 0xFFFFFFFF<32> l23092588
l23092588:
	word32 a3_36 = a5 << 2<u32>
	a2 = Mem0[a2 + a3_36:word32]
	a3 = Mem0[a3_36 + a6:word32]
	branch a3 <u a2 l23092560
l2309259A:
	a5 = a5 + 0xFFFFFFFF<32>
	branch a2 >=u a3 l230925AA
l230925A0:
	a4 = 0<32> - a4
l230925AE:
	a4 = 0<32>
l2309257A:
	a4 = 1<32>
l2309256A:
	a4 = 0<32> - a3
l23092556:
	a4 = a4 + 0xFFFFFFFF<32>
l2309252E:
	a4 = 0<32>
	branch a5 != 0<32> l2309255E
l2309255E:
l23092532:
l23092560:
	a1Out = a1_16
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a6Out = a6
	return a4
mbedtls_mpi_cmp_mpi_exit:


word32 mbedtls_mpi_cmp_int(word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_private
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_mod_mpi
//      mbedtls_mpi_exp_mod
//      mbedtls_mpi_gcd
//      mbedtls_mpi_inv_mod
//      ecp_select_comb
//      ecp_modp
//      ecp_double_jac
//      ecp_normalize_jac
//      ecp_add_mixed
//      mbedtls_ecp_check_pubkey
//      mbedtls_ecp_check_privkey
//      mbedtls_ecp_mul
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6
// Trashed: a0 a1 a2 a3 a4 a5 a6 t3
// Preserved: sp
mbedtls_mpi_cmp_int_entry:
l230925B2:
	branch a1 >= 0<32> l230925CA
l230925C8:
l230925CA:
	word32 a1_24
	word32 a2_25
	word32 a3_26
	word32 a4_27
	word32 a5_28
	word32 a6_29
	word32 a0_23 = mbedtls_mpi_cmp_mpi(a2, a1 >> 0x1F<u32>, 1<32>, out a1_24, out a2_25, out a3_26, out a4_27, out a5_28, out a6_29)
	a1Out = a1_24
	a2Out = a2_25
	a3Out = a3_26
	a4Out = a4_27
	a5Out = a5_28
	a6Out = a6_29
	return a0_23
mbedtls_mpi_cmp_int_exit:


word32 mbedtls_mpi_add_abs(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_add_mpi
//      mbedtls_mpi_sub_mpi
//      ecp_mod_p256k1
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_add_abs_entry:
l230925DE:
	word32 a1_155
	word32 a5_138
	word32 a7_110
	word32 s3_104
	word32 s1_102
	word32 s4_114
	word32 s0_143
	word32 s2_103 = a0
	s0_143 = s0
	branch a0 == a2 l230925FA
l230925F4:
	s0_143 = s0
	branch a0 != a1 l23092658
l23092658:
	word32 a0_26
	word32 a6_373
	word32 s4_374
	word32 s8_375
	word32 a2_372
	ra = mbedtls_mpi_copy(ra, a0, a1, a2, a3, a4, a5, mstatus, dwLoc18, dwArgB8, dwArgF8, dwArg0138, out s0_143, out s1_102, out a0_26, out a1_155, out a2_372, out a3, out a4, out a5_138, out a6_373, out a7_110, out s2_103, out s3_104, out s4_374, out s8_375)
	s4_114 = a0_26
	branch a0_26 == 0<32> l230925F8
l230925F8:
l230925FA:
	Mem55[s2_103:word32] = 1<32>
	word32 a5_52 = 1<32>
l23092602:
	branch s0_143 != 0<32> l23092676
l23092676:
	a4 = s0_143 << 2<u32>
	a5_52 = Mem55[a5_52 + a4 + -4<i32>:int32]
	branch a5_52 != 0<32> l23092604
l23092684:
	s0_143 = s0_143 + 0xFFFFFFFF<32>
l23092604:
	word32 a0_93
	word32 s4_377
	word32 s8_378
	word32 a2_376
	ra = mbedtls_mpi_grow(ra, s0_143, a3, a4, mstatus, s2, s0, dwArg08, dwArgD8, dwArg0118, dwArg0158, out s1_102, out a0_93, out a1_155, out a2_376, out a3, out a4, out a5_138, out a7_110, out s2_103, out s3_104, out s4_377, out s8_378)
	s4_114 = a0_93
	branch a0_93 != 0<32> l23092664
l23092610:
	word32 a5_115 = Mem55[s2_103 + 8<i32>:int32]
	a3 = 0<32>
	s1_102 = 0<32>
l2309261C:
	branch s0_143 != a3 l23092688
l23092688:
	word32 a4_125 = Mem124[a1_155:word32]
	word32 a4_130 = a4_125 + s1_102
	word32 a4_132 = a4_130 + a1_155
	Mem133[Mem124[a4_125:word32] + 0x1000<32>:word32] = a4_132
	a3 = a3 + 1<32>
	s1_102 = CONVERT((a4_130 <u s1_102) + (a4_132 <u a1_155), bool, bool)
l23092620:
	a4 = s0_143 << 2<u32>
	a5_138 = a5_115 + a4
l23092626:
	branch s1_102 == 0<32> l23092664
l23092628:
	a4 = Mem141[s2_103 + 4<i32>:int32]
	s3_104 = s0_143 + 1<i32>
	branch s0_143 <u a4 l23092646
l23092634:
	word32 a0_151
	word32 a2_379
	word32 s8_380
	ra = mbedtls_mpi_grow(ra, s3_104, a3, a4, mstatus, s2, s0, dwArg08, dwArgD8, dwArg0118, dwArg0158, out s1_102, out a0_151, out a1_155, out a2_379, out a3, out a4, out a5_138, out a7_110, out s2_103, out s3_104, out s4_114, out s8_380)
	branch a0_151 != 0<32> l230926AA
l230926AA:
	s4_114 = a0_151
l23092664:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_102
	a0Out = s4_114
	a1Out = a1_155
	a3Out = a3
	a4Out = a4
	a5Out = a5_138
	a7Out = a7_110
	s2Out = s2_103
	s3Out = s3_104
	s4Out = s4_114
	return ra
mbedtls_mpi_add_abs_exit:
l2309263E:
l23092646:
	word32 a5_189 = Mem141[a4:word32]
	a4 = a4 + s1_102
	Mem195[a5_189 + 0x1000<32>:word32] = a4
	s0_143 = s3_104
	a5_138 = a5_189 + 4<32>
	s1_102 = CONVERT(a4 <u s1_102, bool, word32)


word32 mbedtls_mpi_sub_abs(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArgB8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_add_mpi
//      mbedtls_mpi_sub_mpi
//      mbedtls_mpi_gcd
//      ecp_modp
//      ecp_double_jac
//      ecp_add_mixed
//      mbedtls_ecp_check_pubkey
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_sub_abs_entry:
l230926AE:
	word32 s3_244 = a1
	word32 s2_13 = a0
	word32 s1_150 = a2
	word32 a1_103
	word32 a3_147
	word32 a4_121
	word32 a5_145
	word32 a0_100 = mbedtls_mpi_cmp_abs(a2, a3, a4, a5, out a1_103, out a3_147, out a4_121, out a5_145)
	word32 s0_117 = 0xFFFFFFF6<32>
	branch a0_100 < 0<32> l23092716
l230926CE:
	word32 a5_126 = 1<32>
	branch a2 != a0 l230926E8
l230926DA:
	word32 s0_302
	word32 s1_303
	word32 a6_304
	word32 s4_305
	ra = mbedtls_mpi_copy(ra, fp + -44<i32>, a2, a2, a3_147, a4_121, 1<32>, mstatus, dwLoc18, dwArgB8, dwArgF8, dwArg0138, out s0_302, out s1_303, out a0_100, out a1_103, out a2, out a3_147, out a4_121, out a5_126, out a6_304, out a7, out s2_13, out s3_244, out s4_305, out s8)
	s0_117 = a0_100
	branch a0_100 != 0<32> l23092710
l230926E6:
l230926E8:
	branch s3_244 != s2_13 l23092704
l23092704:
	word32 s0_309
	word32 s1_310
	word32 a3_311
	word32 a6_312
	word32 s4_313
	ra = mbedtls_mpi_copy(ra, s2_13, s3_244, a2, a3_147, a4_121, a5_126, mstatus, dwLoc18, dwArgB8, dwArgF8, dwArg0138, out s0_309, out s1_310, out a0_100, out a1_103, out a2, out a3_311, out a4_121, out a5_126, out a6_312, out a7, out s2_13, out s3_244, out s4_313, out s8)
	s0_117 = a0_100
	branch a0_100 == 0<32> l230926EC
l230926EC:
	Mem99[s2_13:word32] = 1<32>
l230926F6:
	branch a0_100 != 0<32> l23092726
l23092726:
	branch Mem99[(a0_100 << 2<u32>) + a1_103 + -4<i32>:int32] != 0<32> l230926F8
l23092732:
	a0_100 = a0_100 + 0xFFFFFFFF<32>
l230926F8:
	mpi_sub_hlp(a0_100, a1_103, Mem99[s2_13 + 8<i32>:int32], a4_121, out a2, out a4_121, out a5_126, out a7)
	s0_117 = 0<32>
l23092710:
	word32 a0_306
	word32 a2_307
	word32 a6_308
	s1_150 = mbedtls_mpi_free(fp + -44<i32>, a2, a4_121, a5_126, mstatus, dwArg0118, dwArg0158, out a0_306, out a1_103, out a2_307, out a3_147, out a4_121, out a5_145, out a6_308, out s4)
l23092716:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_150
	a0Out = s0_117
	a1Out = a1_103
	a2Out = dwArg0100
	a3Out = a3_147
	a4Out = a4_121
	a5Out = a5_145
	a7Out = a7
	s2Out = s2_13
	s3Out = s3_244
	s4Out = s4
	s8Out = s8
	return ra
mbedtls_mpi_sub_abs_exit:


word32 mbedtls_mpi_add_mpi(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_private
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_mod_mpi
//      mbedtls_mpi_exp_mod
//      mbedtls_mpi_inv_mod
//      ecp_modp
//      ecp_double_jac
//      ecp_add_mixed
//      mbedtls_ecp_check_pubkey
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_add_mpi_entry:
l23092736:
	word32 s3_179
	word32 s2_176
	word32 s1_106
	word32 s0_108
	word32 ra_171
	word32 a7_168
	word32 a1_156
	word32 a0_105
	word32 a3_159
	word32 a4_162
	word32 a5_165
	word32 a1_14 = Mem13[s0:word32]
	word32 a2_16 = Mem13[a5:word32]
	word32 a5_19 = s0 + a5
	branch a5_19 >= 0<32> l2309278E
l2309278E:
	word32 s4_213
	ra_171 = mbedtls_mpi_add_abs(ra, s0, a0, a1_14, a2_16, a3, a4, a5_19, s2, mstatus, s2, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s0_108, out s1_106, out a0_105, out a1_156, out a3_159, out a4_162, out a5_165, out a7_168, out s2_176, out s3_179, out s4_213)
l23092750:
	word32 a3_51
	word32 a4_52
	word32 a5_53
	word32 a1_214
	branch mbedtls_mpi_cmp_abs(a2_16, a3, a4, a5_19, out a1_214, out a3_51, out a4_52, out a5_53) < 0<32> l23092770
l23092770:
	word32 s0_63
	word32 a2_215
	word32 s4_216
	word32 s8_217
	ra_171 = mbedtls_mpi_sub_abs(ra, a0, a2_16, a1_14, a3_51, a4_52, a5_53, mstatus, dwArg98, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s0_63, out s1_106, out a0_105, out a1_156, out a2_215, out a3_159, out a4_162, out a5_165, out a7_168, out s2_176, out s3_179, out s4_216, out s8_217)
	s0_108 = 0<32> - s0_63
	branch a0_105 == 0<32> l2309276C
l23092760:
	word32 a2_218
	word32 s4_219
	word32 s8_220
	ra_171 = mbedtls_mpi_sub_abs(ra, a0, a1_14, a2_16, a3_51, a4_52, a5_53, mstatus, dwArg98, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s0_108, out s1_106, out a0_105, out a1_156, out a2_218, out a3_159, out a4_162, out a5_165, out a7_168, out s2_176, out s3_179, out s4_219, out s8_220)
l2309276A:
	branch a0_105 != 0<32> l23092780
l2309276C:
	Mem110[s0_108:word32] = s1_106
l23092780:
	s0Out = s0_108
	s1Out = s1_106
	a0Out = a0_105
	a1Out = a1_156
	a2Out = dwArg48
	a3Out = a3_159
	a4Out = a4_162
	a5Out = a5_165
	a7Out = a7_168
	s2Out = s2_176
	s3Out = s3_179
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra_171
mbedtls_mpi_add_mpi_exit:


word32 mbedtls_mpi_sub_mpi(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_private
//      mbedtls_mpi_sub_int
//      mbedtls_mpi_div_mpi
//      mbedtls_mpi_mod_mpi
//      mbedtls_mpi_inv_mod
//      ecp_select_comb
//      ecp_double_jac
//      ecp_add_mixed
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_sub_mpi_entry:
l23092794:
	word32 s3_179
	word32 s2_176
	word32 s1_106
	word32 s0_108
	word32 ra_171
	word32 a7_168
	word32 a0_105
	word32 a3_159
	word32 a4_162
	word32 a5_165
	word32 a1_14 = Mem13[s0:word32]
	word32 a2_16 = Mem13[a5:word32]
	word32 a5_19 = s0 + a5
	branch a5_19 <= 0<32> l230927EC
l230927EC:
	word32 a1_212
	word32 s4_213
	ra_171 = mbedtls_mpi_add_abs(ra, s0, a0, a1_14, a2_16, a3, a4, a5_19, s2, mstatus, s2, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s0_108, out s1_106, out a0_105, out a1_212, out a3_159, out a4_162, out a5_165, out a7_168, out s2_176, out s3_179, out s4_213)
l230927AE:
	word32 a3_51
	word32 a4_52
	word32 a5_53
	word32 a1_214
	branch mbedtls_mpi_cmp_abs(a2_16, a3, a4, a5_19, out a1_214, out a3_51, out a4_52, out a5_53) < 0<32> l230927CE
l230927CE:
	word32 s0_63
	word32 a1_215
	word32 a2_216
	word32 s4_217
	word32 s8_218
	ra_171 = mbedtls_mpi_sub_abs(ra, a0, a2_16, a1_14, a3_51, a4_52, a5_53, mstatus, dwArg98, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s0_63, out s1_106, out a0_105, out a1_215, out a2_216, out a3_159, out a4_162, out a5_165, out a7_168, out s2_176, out s3_179, out s4_217, out s8_218)
	s0_108 = 0<32> - s0_63
	branch a0_105 == 0<32> l230927CA
l230927BE:
	word32 a1_219
	word32 a2_220
	word32 s4_221
	word32 s8_222
	ra_171 = mbedtls_mpi_sub_abs(ra, a0, a1_14, a2_16, a3_51, a4_52, a5_53, mstatus, dwArg98, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s0_108, out s1_106, out a0_105, out a1_219, out a2_220, out a3_159, out a4_162, out a5_165, out a7_168, out s2_176, out s3_179, out s4_221, out s8_222)
l230927C8:
	branch a0_105 != 0<32> l230927DE
l230927CA:
	Mem110[s0_108:word32] = s1_106
l230927DE:
	s0Out = s0_108
	s1Out = s1_106
	a0Out = a0_105
	a2Out = dwArg48
	a3Out = a3_159
	a4Out = a4_162
	a5Out = a5_165
	a7Out = a7_168
	s2Out = s2_176
	s3Out = s3_179
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra_171
mbedtls_mpi_sub_mpi_exit:


word32 mbedtls_mpi_sub_int(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 s2, word32 mstatus, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_privkey
//      mbedtls_ecp_check_pubkey
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_sub_int_entry:
l230927F2:
	branch a2 >= 0<32> l2309280A
l23092808:
l2309280A:
	word32 a0_32
	word32 a2_34
	word32 a3_35
	word32 a4_36
	word32 a5_37
	word32 s2_43
	word32 s3_44
	word32 s4_45
	word32 s0_85
	word32 s1_86
	word32 a7_87
	word32 s8_88
	word32 ra_40 = mbedtls_mpi_sub_mpi(ra, s0, a0, a3, a2 >> 0x1F<u32>, 1<32>, s2, mstatus, dwArg78, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_85, out s1_86, out a0_32, out a2_34, out a3_35, out a4_36, out a5_37, out a7_87, out s2_43, out s3_44, out s4_45, out s8_88)
	a0Out = a0_32
	a2Out = a2_34
	a3Out = a3_35
	a4Out = a4_36
	a5Out = a5_37
	s2Out = s2_43
	s3Out = s3_44
	s4Out = s4_45
	return ra_40
mbedtls_mpi_sub_int_exit:


word32 mbedtls_mpi_mul_mpi(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 s4, word32 s6, word32 mstatus, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_private
//      mbedtls_mpi_mul_int
//      ecp_double_jac
//      ecp_normalize_jac
//      ecp_normalize_jac_many
//      ecp_add_mixed
//      mbedtls_ecp_check_pubkey
//      mbedtls_ecp_mul
//      ecp_mod_p256k1
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_mul_mpi_entry:
l2309281E:
	word32 s2_169
	word32 s3_180
	word32 a5_102 = 1<32>
	word32 s4_28 = a0
	word32 s0_111 = a2
	word32 s1_32 = a1
	branch a0 != a1 l23092876
l23092848:
	word32 a0_37
	word32 a1_492
	word32 a6_493
	word32 a7_494
	word32 s3_495
	word32 s8_496
	word32 s1_491
	ra = mbedtls_mpi_copy(ra, fp + -56<i32>, a1, a2, a3, a4, 1<32>, mstatus, s2, dwArgA8, dwArgE8, dwArg0128, out s0_111, out s1_491, out a0_37, out a1_492, out a2, out a3, out a4, out a5_102, out a6_493, out a7_494, out s2_169, out s3_495, out s4_28, out s8_496)
	s3_180 = a0_37
	s1_32 = fp + -56<i32>
	branch a0_37 == 0<32> l23092876
l23092876:
	branch s4_28 != s0_111 l23092888
l2309287A:
	word32 a0_73
	word32 s8_513
	word32 a1_508
	word32 a6_509
	word32 a7_510
	word32 s3_511
	word32 s4_512
	word32 s0_507
	ra = mbedtls_mpi_copy(ra, fp + -44<i32>, s4_28, a2, a3, a4, a5_102, mstatus, s2, dwArgA8, dwArgE8, dwArg0128, out s0_507, out s1_32, out a0_73, out a1_508, out a2, out a3, out a4, out a5_102, out a6_509, out a7_510, out s2_169, out s3_511, out s4_512, out s8_513)
	s3_180 = a0_73
	branch a0_73 != 0<32> l23092854
l23092886:
	s0_111 = fp + -44<i32>
l23092888:
	s5 = Mem26[s1_32 + 4<i32>:int32]
l2309288C:
	branch s5 != 0<32> l230928C8
l230928C8:
	a4 = s5 << 2<u32>
	a5_102 = Mem26[a5_102 + a4 + -4<i32>:int32]
	branch a5_102 != 0<32> l23092890
l230928D6:
	s5 = s5 + 0xFFFFFFFF<32>
l23092890:
	word32 s2_113 = Mem26[s0_111 + 4<i32>:int32]
l23092894:
	branch s2_113 != 0<32> l230928DA
l230928DA:
	a4 = s2_113 << 2<u32>
	a5_102 = Mem26[a5_102 + a4 + -4<i32>:int32]
	branch a5_102 != 0<32> l23092898
l230928E8:
	s2_113 = s2_113 + 0xFFFFFFFF<32>
l23092898:
	word32 a0_159
	word32 a3_164
	word32 s4_171
	word32 s1_514
	word32 a7_516
	word32 s3_517
	word32 s8_518
	word32 a1_515
	ra = mbedtls_mpi_grow(ra, s5 + s2_113, a3, a4, mstatus, s6, s4, dwLoc08, dwArgC8, dwArg0108, dwArg0148, out s1_514, out a0_159, out a1_515, out a2, out a3_164, out a4, out a5_102, out a7_516, out s2_169, out s3_517, out s4_171, out s8_518)
	s3_180 = a0_159
	branch a0_159 != 0<32> l23092854
l230928A6:
	word32 a3_185
	word32 s4_194
	word32 s8_522
	word32 s3_521
	word32 s1_519
	word32 a7_520
	word32 a1_183
	ra = mbedtls_mpi_lset(ra, a3_164, a4, mstatus, dwLoc40, 1<32>, dwLoc18, dwLoc08, dwArgB8, dwArgF8, dwArg0138, out s1_519, out a1_183, out a2, out a3_185, out a4, out a5_102, out a7_520, out s2_169, out s3_521, out s4_194, out s8_522)
	s3_180 = s4_171
	s6 = 0xFFFFFFFF<32>
	branch s4_171 != 0<32> l23092854
l230928B4:
	s2_169 = s2_169 + 0xFFFFFFFF<32>
	branch s2_169 != 0xFFFFFFFF<32> l230928EC
l230928EC:
	a1_183 = mpi_mul_hlp(s5, a1_183, (s2_169 << 2<u32>) + Mem26[s4_194 + 8<i32>:int32], a3_185, out a2, out a4, out a5_102)
l230928BA:
	a5_102 = a5_102 + a4
	Mem236[s4_194:word32] = a5_102
l23092854:
	word32 a2_248
	word32 a5_249
	word32 a4_252
	word32 a1_498
	word32 a6_500
	word32 s4_501
	word32 a3_499
	word32 a0_497
	mbedtls_mpi_free(fp + -44<i32>, a2, a4, a5_102, mstatus, dwArg0108, dwArg0148, out a0_497, out a1_498, out a2_248, out a3_499, out a4_252, out a5_249, out a6_500, out s4_501)
	word32 a5_261
	word32 a3_263
	word32 a4_264
	word32 s4_506
	word32 a6_505
	word32 a0_502
	word32 a1_503
	word32 a2_504
	word32 s1_266 = mbedtls_mpi_free(fp + -56<i32>, a2_248, a4_252, a5_249, mstatus, dwArg0108, dwArg0148, out a0_502, out a1_503, out a2_504, out a3_263, out a4_264, out a5_261, out a6_505, out s4_506)
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_266
	a0Out = s3_180
	a2Out = dwArg0138
	a3Out = a3_263
	a4Out = a4_264
	a5Out = a5_261
	s2Out = s2_169
	s3Out = s3_180
	s4Out = dwArgF4
	s5Out = s5
	s6Out = s6
	s8Out = dwArgD4
	return ra
mbedtls_mpi_mul_mpi_exit:


word32 mbedtls_mpi_mul_int(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s4, word32 s6, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_mpi_div_mpi
//      ecp_double_jac
//      ecp_add_mixed
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_mul_int_entry:
l23092906:
	word32 a2_22
	word32 a3_23
	word32 a4_24
	word32 a5_25
	word32 s0_29
	word32 s1_30
	word32 s2_31
	word32 s3_32
	word32 s4_33
	word32 s5_34
	word32 s8_35
	word32 a0_43
	word32 s6_44
	word32 ra_28 = mbedtls_mpi_mul_mpi(ra, a0, a1, fp + 0xFFFFFFE4<32>, a3, a4, s2, s4, s6, mstatus, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0178, out s0_29, out s1_30, out a0_43, out a2_22, out a3_23, out a4_24, out a5_25, out s2_31, out s3_32, out s4_33, out s5_34, out s6_44, out s8_35)
	s0Out = s0_29
	s1Out = s1_30
	a0Out = a0_43
	a2Out = a2_22
	a3Out = a3_23
	a4Out = a4_24
	a5Out = a5_25
	s2Out = s2_31
	s3Out = s3_32
	s4Out = s4_33
	s5Out = s5_34
	s6Out = s6_44
	s8Out = s8_35
	return ra_28
mbedtls_mpi_mul_int_exit:


word32 mbedtls_mpi_div_mpi(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg18, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0124, word32 dwArg0144, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_privkey
//      mbedtls_mpi_mod_mpi
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0124:[0..31] Stack +0144:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a7 ra s0 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_div_mpi_entry:
l23092920:
	word32 s2_115 = a1
	word32 s4_1013 = a0
	word32 s3_103 = a2
	word32 s6_1493 = a3
	word32 s9_1016 = 0xFFFFFFF4<32>
	word32 a3_43
	word32 a4_44
	word32 a6_1559
	word32 a1_1558
	word32 a5_1007
	word32 a2_1006
	branch mbedtls_mpi_cmp_int(0<32>, a2, out a1_1558, out a2_1006, out a3_43, out a4_44, out a5_1007, out a6_1559) == 0<32> l23092986
l23092950:
	s0 = 1<32>
	dwLoc70 = 0<32>
	word32 a1_1560
	word32 a3_69
	word32 a4_109
	branch mbedtls_mpi_cmp_abs(a2_1006, a3_43, a4_44, a5_1007, out a1_1560, out a3_69, out a4_109, out a5_1007) >= 0<32> l230929E0
l230929E0:
	word32 a0_75
	word32 a3_83
	word32 a1_1562
	word32 s4_1565
	word32 a7_1564
	word32 a6_1563
	word32 s1_1561
	word32 ra_87 = mbedtls_mpi_copy(ra, fp + -124<i32>, a2, a2_1006, a3_69, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_1561, out a0_75, out a1_1562, out a2_1006, out a3_83, out a4_109, out a5_1007, out a6_1563, out a7_1564, out s2_115, out s3_103, out s4_1565, out s8)
	s9_1016 = a0_75
	branch a0_75 != 0<32> l230929B2
l230929EC:
	word32 a0_100
	word32 a3_108
	word32 a1_1600
	word32 a7_1602
	word32 s4_1603
	word32 a6_1601
	word32 s1_1599
	word32 ra_112 = mbedtls_mpi_copy(ra_87, fp + -112<i32>, a3, a2_1006, a3_83, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_1599, out a0_100, out a1_1600, out a2_1006, out a3_108, out a4_109, out a5_1007, out a6_1601, out a7_1602, out s2_115, out s3_103, out s4_1603, out s8)
	s9_1016 = a0_100
	branch a0_100 != 0<32> l230929B2
l230929F8:
	word32 a0_128
	word32 a3_133
	word32 s1_1604
	word32 a7_1606
	word32 s4_1607
	word32 a1_1605
	word32 ra_136 = mbedtls_mpi_grow(ra_112, Mem66[s3_103 + 4<i32>:int32] + 2<32>, a3_108, a4_109, mstatus, s0, 0<32>, s6, dwArg78, dwArgB8, dwArgF8, out s1_1604, out a0_128, out a1_1605, out a2_1006, out a3_133, out a4_109, out a5_1007, out a7_1606, out s2_115, out s3_103, out s4_1607, out s8)
	s9_1016 = a0_128
	branch a0_128 != 0<32> l230929B2
l23092A0C:
	word32 a3_154
	word32 s1_1608
	word32 a7_1610
	word32 s4_1611
	word32 a1_1609
	word32 ra_159 = mbedtls_mpi_lset(ra_136, a3_133, a4_109, mstatus, dwLoc90, dwLoc8C, dwLoc68, s6, dwArg68, dwArgA8, dwArgE8, out s1_1608, out a1_1609, out a2_1006, out a3_154, out a4_109, out a5_1007, out a7_1610, out s2_115, out s3_103, out s4_1611, out s8)
	s9_1016 = fp + -100<i32>
	branch fp != 0xFFFFFF9C<32> l230929B2
l23092A18:
	word32 a0_175
	word32 a3_180
	word32 s1_1612
	word32 a1_1613
	word32 a7_1614
	word32 s4_1615
	word32 ra_183 = mbedtls_mpi_grow(ra_159, 2<32>, a3_154, a4_109, mstatus, s0, 0<32>, s6, dwArg78, dwArgB8, dwArgF8, out s1_1612, out a0_175, out a1_1613, out a2_1006, out a3_180, out a4_109, out a5_1007, out a7_1614, out s2_115, out s3_103, out s4_1615, out s8)
	s9_1016 = a0_175
	branch a0_175 != 0<32> l230929B2
l23092A24:
	word32 a0_199
	word32 s1_1616
	word32 a1_1617
	word32 a3_1618
	word32 s4_1620
	word32 a7_1619
	word32 ra_207 = mbedtls_mpi_grow(ra_183, 3<32>, a3_180, a4_109, mstatus, s0, 0<32>, s6, dwArg78, dwArgB8, dwArgF8, out s1_1616, out a0_199, out a1_1617, out a2_1006, out a3_1618, out a4_109, out a5_1007, out a7_1619, out s2_115, out s3_103, out s4_1620, out s8)
	s9_1016 = a0_199
	branch a0_199 != 0<32> l230929B2
l23092A30:
	word32 a1_1621
	word32 a3_1622
	word32 a0_222 = mbedtls_mpi_bitlen(a2_1006, a4_109, a5_1007, out a1_1621, out a2_1006, out a3_1622, out a4_109, out a5_1007)
	branch (a0_222 & 0x1F<32>) == 0x1F<32> l23092B0E
l23092B0E:
l23092A3E:
	word32 a0_234
	word32 s1_244
	word32 s4_1625
	word32 a7_1624
	word32 a3_1623
	word32 ra_242 = mbedtls_mpi_shift_l(ra_207, 0x1F<32> - (a0_222 & 0x1F<32>), a2_1006, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_244, out a0_234, out a2_1006, out a3_1623, out a4_109, out a5_1007, out a7_1624, out s2_115, out s3_103, out s4_1625, out s8)
	s9_1016 = a0_234
	branch a0_234 != 0<32> l230929B2
l23092A4C:
	word32 a0_259
	word32 a3_1627
	word32 a7_1628
	word32 s4_1629
	word32 s1_1626
	ra_207 = mbedtls_mpi_shift_l(ra_242, s1_244, a2_1006, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_1626, out a0_259, out a2_1006, out a3_1627, out a4_109, out a5_1007, out a7_1628, out s2_115, out s3_103, out s4_1629, out s8)
	s9_1016 = a0_259
	branch a0_259 != 0<32> l230929B2
l23092A58:
	word32 s0_289 = s7 - s10
	word32 a0_297
	word32 s0_306
	word32 s1_1630
	word32 a3_1631
	word32 a7_1632
	word32 s4_1633
	word32 ra_305 = mbedtls_mpi_shift_l(ra_207, s0_289 << 5<u32>, a2_1006, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0_306, out s1_1630, out a0_297, out a2_1006, out a3_1631, out a4_109, out a5_1007, out a7_1632, out s2_115, out s3_103, out s4_1633, out s8)
	s9_1016 = a0_297
	s0 = s0_306 << 2<i32>
	branch a0_297 != 0<32> l230929B2
l23092A72:
	word32 a2_329
	word32 a3_330
	word32 a4_331
	word32 a5_332
	word32 a1_1634
	word32 a6_1635
	branch mbedtls_mpi_cmp_mpi(a2_1006, a4_109, a5_1007, out a1_1634, out a2_329, out a3_330, out a4_331, out a5_332, out a6_1635) >= 0<32> l23092B12
l23092B12:
	word32 a5_338 = Mem334[a4_331:word32]
	Mem341[a4_331 + 1<32>:word32] = a5_338
	word32 a0_346
	word32 s4_1639
	word32 a7_1638
	word32 a3_1637
	word32 s1_1636
	ra_305 = mbedtls_mpi_sub_mpi(ra_305, s0, fp + -124<i32>, a3_330, a4_331 + 1<32>, a5_338, s2_115, mstatus, 0<32>, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0, out s1_1636, out a0_346, out a2_1006, out a3_1637, out a4_109, out a5_1007, out a7_1638, out s2_115, out s3_103, out s4_1639, out s8)
	s9_1016 = a0_346
	branch a0_346 == 0<32> l23092A72
l23092B2A:
l23092A7E:
	word32 s4_384
	word32 a3_375
	word32 s1_381
	word32 a1_1049
	word32 a0_1055
	word32 ra_380 = mbedtls_mpi_shift_r(ra_305, s0_289 << 5<u32>, a2_329, a5_332, mstatus, dwLoc90, dwLoc8C, dwLoc68, s6, dwArg68, dwArgA8, dwArgE8, out s1_381, out a0_1055, out a1_1049, out a2_1006, out a3_375, out a4_109, out a5_1007, out s2_115, out s3_103, out s4_384, out s8)
	s9_1016 = a0_1055
	branch a0_1055 != 0<32> l230929B2
l23092A8C:
	s8 = s10 + -1<i32>
	word32 a5_398 = s10 + -1<i32> << 2<u32>
	a4_109 = s10 << 2<u32>
	a5_1007 = (s10 << 2<u32>) + -8<i32>
	word32 s5_405 = s7 + -1<i32>
	s0 = s7 + 0x3FFFFFFF<32> - s10 << 2<i32>
l23092AB2:
	branch s8 <u s5_405 l23092B2C
l23092B2C:
	s7 = s5_405 << 2<u32>
	s0 = dwArg0124
	s10 = s7 + -4<i32>
	word32 a3_421 = Mem411[a2_1006:word32]
	word32 s11_423 = s11 + dwArg0124
	branch a1_1049 <u a2_1006 l23092C46
l23092C46:
	word32 a4_426 = 0xFFFFFFFF<32>
	branch a2_1006 == 0<32> l23092C5A
l23092C4E:
	word32 a1_429
	word32 a5_1668
	word32 a4_1667
	a4_426 = __udivdi3(a0_1055, a1_1049, a2_1006, 0<32>, out a1_429, out a3_421, out a4_1667, out a5_1668)
	branch a1_429 == 0<32> l23092C5A
l23092C58:
	a4_426 = 0xFFFFFFFF<32>
l23092C5A:
	Mem444[s11_423:word32] = a4_426
l23092B4C:
	Mem446[s11_423:word32] = 0xFFFFFFFF<32>
l23092B52:
	word32 a3_457 = a3_421 + 1<32>
	Mem458[a3_457:word32] = Mem449[a3_421:word32]
	s11 = s7 + -8<i32>
l23092B60:
	word32 a4_465 = Mem460[a3_457:word32]
	word32 a3_466 = a3_457 + 0xFFFFFFFF<32>
	Mem467[a3_466:word32] = a4_465
	word32 a3_472
	word32 a1_1670
	word32 a7_1671
	word32 s4_1672
	word32 s1_1669
	mbedtls_mpi_lset(ra_380, a3_466, a4_465, mstatus, dwLoc90, a5_398, dwLoc68, s6, dwArg68, dwArgA8, dwArgE8, out s1_1669, out a1_1670, out a2_1006, out a3_472, out a4_109, out a5_1007, out a7_1671, out s2_115, out s3_103, out s4_1672, out s8)
	a0_1055 = fp + -88<i32>
	branch fp != 0xFFFFFFA8<32> l23092C60
l23092B76:
	word32 a4_490 = 0<32>
	branch s8 == 0<32> l23092B84
l23092B7C:
	a2_1006 = dwArg54
	a4_490 = Mem467[a5_1007:word32]
l23092B84:
	Mem502[a4_490:word32] = a3_472
	Mem507[a3_472 + 4<i32>:word32] = Mem502[a3_472:word32]
	word32 a3_518
	word32 s5_529
	word32 s4_1657
	word32 s1_1656
	word32 ra_523 = mbedtls_mpi_mul_int(ra, fp + -88<i32>, fp + -88<i32>, a3_472, Mem507[a2_1006:word32], s2_115, dwArg0144, s6_1493, mstatus, s0, 0<32>, dwArg18, dwArg38, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgE8, out s0, out s1_1656, out a0_1055, out a2_1006, out a3_518, out a4_109, out a5_1007, out s2_115, out s3_103, out s4_1657, out s5_529, out s6_1493, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092BA4:
	a0_1055 = fp + -76<i32>
	word32 s1_1658
	word32 a3_1660
	word32 a7_1661
	word32 s4_1662
	word32 a1_1659
	ra_380 = mbedtls_mpi_lset(ra_523, a3_518, a4_109, mstatus, dwLoc90, a5_398, dwLoc68, s6, dwArg68, dwArgA8, dwArgE8, out s1_1658, out a1_1659, out a2_1006, out a3_1660, out a4_109, out a5_1007, out a7_1661, out s2_115, out s3_103, out s4_1662, out s8)
	branch fp != 0xFFFFFFB4<32> l23092C60
l23092BAE:
	word32 a4_562 = 0<32>
	branch s5_529 == 1<32> l23092BBC
l23092BB6:
	a4_562 = Mem507[s7 + -8<i32>:word32]
l23092BBC:
	Mem574[a4_562:word32] = 0<32>
	Mem578[ra + 4<i32>:word32] = Mem574[0<32>:word32]
	word32 a4_580 = Mem578[ra:word32]
	Mem582[ra + 8<i32>:word32] = a4_580
	word32 a2_587
	word32 a4_1664
	word32 a1_1663
	word32 a5_1665
	word32 a6_1666
	branch mbedtls_mpi_cmp_mpi(a2_1006, a4_580, 1<32>, out a1_1663, out a2_587, out a3_457, out a4_1664, out a5_1665, out a6_1666) > 0<32> l23092B60
l23092BE0:
	word32 s5_614
	word32 s1_1673
	word32 a3_1674
	word32 s4_1675
	word32 ra_608 = mbedtls_mpi_mul_int(ra_380, fp + -88<i32>, fp + -112<i32>, a3_457, Mem582[a2_587:word32], s2_115, dwArg0144, s6_1493, mstatus, s0, 0<32>, dwArg18, dwArg38, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgE8, out s0, out s1_1673, out a0_1055, out a2_1006, out a3_1674, out a4_109, out a5_1007, out s2_115, out s3_103, out s4_1675, out s5_614, out s6_1493, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092BF0:
	s7 = s0 << 3<u32>
	word32 a3_630
	word32 a7_1677
	word32 s1_1676
	word32 s4_1678
	word32 ra_635 = mbedtls_mpi_shift_l(ra_608, s0 << 3<u32>, a2_1006, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_1676, out a0_1055, out a2_1006, out a3_630, out a4_109, out a5_1007, out a7_1677, out s2_115, out s3_103, out s4_1678, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092BFE:
	word32 a7_1680
	word32 a3_1679
	ra_380 = mbedtls_mpi_sub_mpi(ra_635, s0, fp + -124<i32>, a3_630, a4_109, a5_1007, s2_115, mstatus, 0<32>, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0, out s1_381, out a0_1055, out a2_1006, out a3_1679, out a4_109, out a5_1007, out a7_1680, out s2_115, out s3_103, out s4_384, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092C0A:
	word32 a6_1681
	a0_1055 = mbedtls_mpi_cmp_int(0<32>, a2_1006, out a1_1049, out a2_1006, out a3_375, out a4_109, out a5_1007, out a6_1681)
	branch a0_1055 >= 0<32> l23092C40
l23092C16:
	word32 s4_1687
	word32 a7_1686
	word32 a6_1685
	word32 a3_1684
	word32 a1_1683
	word32 s1_1682
	word32 ra_698 = mbedtls_mpi_copy(ra_380, fp + -88<i32>, fp + -112<i32>, a2_1006, a3_375, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_1682, out a0_1055, out a1_1683, out a2_1006, out a3_1684, out a4_109, out a5_1007, out a6_1685, out a7_1686, out s2_115, out s3_103, out s4_1687, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092C20:
	word32 a3_713
	word32 s4_1690
	word32 a7_1689
	word32 s1_1688
	word32 ra_718 = mbedtls_mpi_shift_l(ra_698, s0 << 3<u32>, a2_1006, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_1688, out a0_1055, out a2_1006, out a3_713, out a4_109, out a5_1007, out a7_1689, out s2_115, out s3_103, out s4_1690, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092C2A:
	word32 a3_738
	word32 a7_1691
	word32 s4_1692
	ra_380 = mbedtls_mpi_add_mpi(ra_718, s0, fp + -124<i32>, a3_713, a4_109, a5_1007, s2_115, mstatus, 0<32>, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0, out s1_381, out a0_1055, out a1_1049, out a2_1006, out a3_738, out a4_109, out a5_1007, out a7_1691, out s2_115, out s3_103, out s4_1692, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092C36:
	a4_109 = Mem582[a3_738:word32]
	Mem760[a3_738 + 0xFFFFFFFF<32>:word32] = a4_109
	s4_384 = dwArg0144
	a3_375 = a3_738 + 0xFFFFFFFF<32>
l23092C40:
	s5_405 = s5_614 + 0xFFFFFFFF<32>
	s0 = s0 + 0xFFFFFFFC<32>
l23092AB6:
	branch s4_384 == 0<32> l23092AD6
l23092ABA:
	word32 s4_783
	word32 a7_1643
	word32 a3_1641
	word32 a6_1642
	word32 a1_1640
	ra_380 = mbedtls_mpi_copy(ra_380, s4_384, fp + -100<i32>, a2_1006, a3_375, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_381, out a0_1055, out a1_1640, out a2_1006, out a3_1641, out a4_109, out a5_1007, out a6_1642, out a7_1643, out s2_115, out s3_103, out s4_783, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092AC6:
	a4_109 = Mem411[s3_103:int32] + Mem411[s6_1493:int32]
	Mem808[s4_783:word32] = a4_109
l23092AD6:
	branch s2_115 == 0<32> l230929B2
l23092ADA:
	word32 a3_826
	word32 s1_1644
	word32 s4_1646
	word32 a1_1645
	word32 ra_831 = mbedtls_mpi_shift_r(ra_380, s1_381, a2_1006, a5_1007, mstatus, dwLoc90, a5_398, dwLoc68, s6, dwArg68, dwArgA8, dwArgE8, out s1_1644, out a0_1055, out a1_1645, out a2_1006, out a3_826, out a4_109, out a5_1007, out s2_115, out s3_103, out s4_1646, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092AE6:
	word32 s1_1647
	word32 a1_1648
	word32 a6_1650
	word32 a3_1649
	word32 a7_1651
	word32 s4_1652
	mbedtls_mpi_copy(ra_831, s2_115, fp + -124<i32>, a2_1006, a3_826, Mem822[s3_103:int32], a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_1647, out a0_1055, out a1_1648, out a2_1006, out a3_1649, out a4_109, out a5_1007, out a6_1650, out a7_1651, out s2_115, out s3_103, out s4_1652, out s8)
	branch a0_1055 != 0<32> l23092C60
l23092C60:
	s9_1016 = a0_1055
l23092AF8:
	word32 a6_1655
	word32 a3_1654
	word32 a1_1653
	branch mbedtls_mpi_cmp_int(0<32>, a2_1006, out a1_1653, out a2_1006, out a3_1654, out a4_109, out a5_1007, out a6_1655) != 0<32> l230929B2
l23092B04:
	Mem883[s2_115:word32] = 1<32>
	a5_1007 = 1<32>
	s9_1016 = 0<32>
l2309297C:
	branch a0 != 0<32> l230929A6
l230929A6:
	word32 a1_1567
	word32 a7_1568
	word32 s1_1566
	ra = mbedtls_mpi_lset(ra, a3_69, a4_109, mstatus, dwLoc90, dwLoc8C, dwLoc68, s6, dwArg68, dwArgA8, dwArgE8, out s1_1566, out a1_1567, out a2_1006, out a3_69, out a4_109, out a5_1007, out a7_1568, out s2_115, out s3_103, out s4_1013, out s8)
	s9_1016 = a0
	branch a0 == 0<32> l23092980
l23092980:
	branch s2_115 != 0<32> l230929D2
l230929D2:
	word32 a0_920
	word32 a3_1571
	word32 a6_1572
	word32 a7_1573
	word32 s1_1569
	word32 a1_1570
	mbedtls_mpi_copy(ra, s2_115, s3_103, a2_1006, a3_69, a4_109, a5_1007, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0, out s1_1569, out a0_920, out a1_1570, out a2_1006, out a3_1571, out a4_109, out a5_1007, out a6_1572, out a7_1573, out s2_115, out s3_103, out s4_1013, out s8)
	s9_1016 = a0_920
	branch a0_920 != 0<32> l230929B2
l230929B2:
	word32 a2_958
	word32 a5_959
	word32 a4_962
	word32 s4_1578
	word32 a1_1575
	word32 a0_1574
	word32 a3_1576
	word32 a6_1577
	mbedtls_mpi_free(fp + -124<i32>, a2_1006, a4_109, a5_1007, mstatus, dwArgB8, dwArgF8, out a0_1574, out a1_1575, out a2_958, out a3_1576, out a4_962, out a5_959, out a6_1577, out s4_1578)
	word32 a1_1580
	word32 a2_970
	word32 a5_971
	word32 a4_974
	word32 a3_1581
	word32 a6_1582
	word32 s4_1583
	word32 a0_1579
	mbedtls_mpi_free(fp + -112<i32>, a2_958, a4_962, a5_959, mstatus, dwArgB8, dwArgF8, out a0_1579, out a1_1580, out a2_970, out a3_1581, out a4_974, out a5_971, out a6_1582, out s4_1583)
	word32 a2_982
	word32 a5_983
	word32 a4_986
	word32 a6_1587
	word32 s4_1588
	word32 a0_1584
	word32 a1_1585
	word32 a3_1586
	mbedtls_mpi_free(fp + -100<i32>, a2_970, a4_974, a5_971, mstatus, dwArgB8, dwArgF8, out a0_1584, out a1_1585, out a2_982, out a3_1586, out a4_986, out a5_983, out a6_1587, out s4_1588)
	word32 a2_994
	word32 a5_995
	word32 a4_998
	word32 s4_1593
	word32 a3_1591
	word32 a6_1592
	word32 a0_1589
	word32 a1_1590
	mbedtls_mpi_free(fp + -88<i32>, a2_982, a4_986, a5_983, mstatus, dwArgB8, dwArgF8, out a0_1589, out a1_1590, out a2_994, out a3_1591, out a4_998, out a5_995, out a6_1592, out s4_1593)
	word32 a3_1596
	word32 a6_1598
	word32 a4_1597
	word32 a0_1594
	word32 a1_1595
	mbedtls_mpi_free(fp + -76<i32>, a2_994, a4_998, a5_995, mstatus, dwArgB8, dwArgF8, out a0_1594, out a1_1595, out a2_1006, out a3_1596, out a4_1597, out a5_1007, out a6_1598, out s4_1013)
l230929DE:
l23092984:
	s9_1016 = 0<32>
l23092986:
	word32 s9_1037 = Mem1019[dwLoc48 + 408<i32>:word32]
	word32 s5_1038 = Mem1019[dwLoc48 + 440<i32>:word32]
	word32 a7_1039 = Mem1019[dwLoc48 + 472<i32>:word32]
	word32 a3_1040 = Mem1019[dwLoc48 + 504<i32>:word32]
	word32 ra_1043 = Mem1019[dwLoc48 + 348<i32>:word32]
	s0Out = s0
	a0Out = s9_1016
	a2Out = a2_1006
	a3Out = a3_1040
	a4Out = dwLoc70
	a5Out = a5_1007
	a7Out = a7_1039
	s2Out = s2_115
	s3Out = s3_103
	s4Out = s4_1013
	s5Out = s5_1038
	s6Out = s6_1493
	s7Out = s7
	s8Out = s8
	s9Out = s9_1037
	s10Out = s10
	s11Out = s11
	return ra_1043
mbedtls_mpi_div_mpi_exit:


word32 mbedtls_mpi_mod_mpi(word32 ra, word32 a0, word32 a1, word32 a2, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0114, word32 dwArg0128, word32 dwArg0134, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_private
//      mbedtls_mpi_exp_mod
//      mbedtls_mpi_inv_mod
//      ecp_modp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0114:[0..31] Stack +0128:[0..31] Stack +0134:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_mpi_mod_mpi_entry:
l23092C64:
	word32 s1_141
	word32 s2_110 = a2
	word32 a1_326
	word32 a2_327
	word32 a6_328
	word32 a5_114
	word32 a4_115
	word32 a3_120
	branch mbedtls_mpi_cmp_int(0<32>, a2, out a1_326, out a2_327, out a3_120, out a4_115, out a5_114, out a6_328) < 0<32> l23092CD2
l23092CD2:
	s1_141 = 0xFFFFFFF6<32>
l23092C80:
	word32 a0_39
	word32 a2_41
	word32 s0_112
	ra = mbedtls_mpi_div_mpi(ra, 0<32>, a0, a1, a2, s5, s6, s7, s10, s11, mstatus, dwArg08, dwArg28, dwArg38, dwArg44, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0114, dwArg0134, out s0_112, out a0_39, out a2_41, out a3_120, out a4_115, out a5_114, out a7, out s2_110, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11)
	s1_141 = a0_39
	branch a0_39 == 0<32> l23092CAA
l23092CAA:
	word32 a0_131
	word32 a3_75
	word32 a1_329
	word32 a6_330
	word32 a2_116
	branch mbedtls_mpi_cmp_int(0<32>, a2_41, out a1_329, out a2_116, out a3_75, out a4_115, out a5_114, out a6_330) < 0<32> l23092C9E
l23092C9E:
	word32 a1_331
	ra = mbedtls_mpi_add_mpi(ra, s0_112, s0_112, a3_75, a4_115, a5_114, s2_110, mstatus, dwArg88, dwArgA8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_112, out s1_141, out a0_131, out a1_331, out a2_41, out a3_120, out a4_115, out a5_114, out a7, out s2_110, out s3, out s4, out s8)
	branch a0_131 != 0<32> l23092CCE
l23092CB6:
	word32 a1_332
	word32 a2_333
	word32 a6_334
	branch mbedtls_mpi_cmp_mpi(a2_116, a4_115, a5_114, out a1_332, out a2_333, out a3_120, out a4_115, out a5_114, out a6_334) < 0<32> l23092C90
l23092CC2:
	ra = mbedtls_mpi_sub_mpi(ra, s0_112, s0_112, a3_120, a4_115, a5_114, s2_110, mstatus, dwArg88, dwArgA8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s0_112, out s1_141, out a0_131, out a2_116, out a3_120, out a4_115, out a5_114, out a7, out s2_110, out s3, out s4, out s8)
	branch a0_131 == 0<32> l23092CB6
l23092CCE:
	s1_141 = a0_131
l23092C90:
	0<32> = dwArg38
	s1Out = s1_141
	a0Out = s1_141
	a2Out = dwArg10
	a3Out = a3_120
	a4Out = a4_115
	a5Out = a5_114
	a7Out = a7
	s2Out = s2_110
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
mbedtls_mpi_mod_mpi_exit:


word32 mbedtls_mpi_exp_mod(word32 ra, word32 a2, word32 a3, word32 a4, word32 s11, word32 mstatus, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_public
//      mbedtls_rsa_private
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s11:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_mpi_exp_mod_entry:
l23092CD6:
	word32 s7_1011 = a4
	word32 s0_1021 = 0xFFFFFFFC<32>
	word32 a6_2000
	word32 a1_1999
	word32 a2_1159
	word32 a3_1162
	word32 a5_1160
	word32 a4_1163
	branch mbedtls_mpi_cmp_int(0<32>, a2, out a1_1999, out a2_1159, out a3_1162, out a4_1163, out a5_1160, out a6_2000) < 0<32> l230930AC
l23092D26:
	a5_1160 = Mem36[a3 + 8<i32>:int32]
	word32 s5_53 = Mem36[a5_1160:int32]
	s0_1021 = 0xFFFFFFFC<32>
	word32 s10_336 = s5_53 & 1<i32>
	branch (s5_53 & 1<i32>) == 0<32> l230930AC
l23092D38:
	word32 a1_2001
	word32 a6_2002
	branch mbedtls_mpi_cmp_int(0<32>, a2_1159, out a1_2001, out a2_1159, out a3_1162, out a4_1163, out a5_1160, out a6_2002) < 0<32> l230930AC
l23092D44:
	word32 a5_69 = 3<32>
l23092D52:
	a5_69 = a5_69 + 0xFFFFFFFF<32>
	branch a5_69 != 0<32> l23092D52
l23092D62:
	word32 a2_96
	word32 a4_98
	word32 a5_99
	word32 a3_2006
	word32 a0_2004
	word32 t1_2003
	word32 a1_2005
	word32 ra_100 = memset(ra, fp + -1600<i32>, 0<32>, 1536<i32>, out t1_2003, out a0_2004, out a1_2005, out a2_96, out a3_2006, out a4_98, out a5_99)
	word32 a3_108
	word32 a4_109
	word32 a5_2009
	word32 a1_2007
	word32 a2_2008
	word32 a0_105 = mbedtls_mpi_bitlen(a2_96, a4_98, a5_99, out a1_2007, out a2_2008, out a3_108, out a4_109, out a5_2009)
	word32 s5_1009 = 6<32>
	branch a0_105 >u 671<i32> l23092DB0
l23092D92:
	s5_1009 = 5<32>
	branch a0_105 >u 239<i32> l23092DB0
l23092D9C:
	s5_1009 = 4<32>
	branch a0_105 >u 79<i32> l23092DB0
l23092DA6:
	s5_1009 = 3<32>
	branch a0_105 >u 0x17<32> l23092DB0
l23092DAE:
	s5_1009 = s5_53 & 1<i32>
l23092DB0:
	word32 s6_124 = Mem92[a3 + 4<i32>:int32]
	word32 s6_128 = s6_124 + 1<32>
	word32 a0_137
	word32 a3_142
	word32 s4_2015
	word32 s2_2013
	word32 a1_2011
	word32 s8_2016
	word32 s3_2014
	word32 a5_2012
	word32 s1_2010
	word32 a4_1000
	word32 a2_1036
	word32 ra_145 = mbedtls_mpi_grow(ra_100, s6_124 + 1<32>, a3_108, a4_109, mstatus, 1<32>, 0<32>, dwLoc0658, dwLoc0588, dwLoc0548, dwLoc0508, out s1_2010, out a0_137, out a1_2011, out a2_1036, out a3_142, out a4_1000, out a5_2012, out a7, out s2_2013, out s3_2014, out s4_2015, out s8_2016)
	s0_1021 = a0_137
	branch a0_137 != 0<32> l23093076
l23092DC4:
	word32 a0_161
	word32 a3_166
	word32 s3_2021
	word32 a5_2019
	word32 s1_2017
	word32 s4_2022
	word32 s8_2023
	word32 s2_2020
	word32 a1_2018
	word32 ra_169 = mbedtls_mpi_grow(ra_145, s6_124 + 1<32>, a3_142, a4_1000, mstatus, 1<32>, 0<32>, dwLoc0658, dwLoc0588, dwLoc0548, dwLoc0508, out s1_2017, out a0_161, out a1_2018, out a2_1036, out a3_166, out a4_1000, out a5_2019, out a7, out s2_2020, out s3_2021, out s4_2022, out s8_2023)
	s0_1021 = a0_161
	branch a0_161 != 0<32> l23093076
l23092DD2:
	word32 a0_185
	word32 s1_2024
	word32 a1_2025
	word32 s3_2027
	word32 s8_2028
	word32 a5_2026
	word32 a3_190
	word32 s2_195
	word32 s4_197
	word32 ra_193 = mbedtls_mpi_grow(ra_169, s6_124 + 1<32> << 1<u32>, a3_166, a4_1000, mstatus, 1<32>, 0<32>, dwLoc0658, dwLoc0588, dwLoc0548, dwLoc0508, out s1_2024, out a0_185, out a1_2025, out a2_1036, out a3_190, out a4_1000, out a5_2026, out a7, out s2_195, out s3_2027, out s4_197, out s8_2028)
	s0_1021 = a0_185
	branch a0_185 != 0<32> l23093076
l23092DE2:
	word32 a5_207 = Mem92[s4_197:int32]
	branch a4_1000 != 0xFFFFFFFF<32> l23092E06
l23092DF0:
	word32 a0_213
	word32 s0_2029
	word32 a1_2031
	word32 a5_2032
	word32 s3_2034
	word32 s4_2035
	word32 s8_2036
	word32 a6_2033
	word32 s1_2030
	ra_193 = mbedtls_mpi_copy(ra_193, fp + -1624<i32>, s4_197, a2_1036, a3_190, a4_1000, 0xFFFFFFFF<32>, mstatus, 0<32>, dwLoc05A8, dwLoc0568, dwLoc0528, out s0_2029, out s1_2030, out a0_213, out a1_2031, out a2_1036, out a3_190, out a4_1000, out a5_2032, out a6_2033, out a7, out s2_195, out s3_2034, out s4_2035, out s8_2036)
	s0_1021 = a0_213
	branch a0_213 != 0<32> l23093076
l23092DFE:
	s4_197 = fp + -1624<i32>
l23092E06:
	word32 a5_328
	word32 a0_247
	word32 a1_245
	branch a4 == 0<32> l23092E10
l23092E0A:
	branch Mem242[a4 + 8<i32>:int32] != 0<32> l23092EC2
l23092EC2:
	a1_245 = a4
	a0_247 = fp + -1648<i32>
l23092E10:
	word32 a5_264
	word32 s2_269
	word32 s8_2065
	word32 s3_2063
	word32 s4_2064
	word32 s1_2060
	word32 a1_2061
	word32 a3_2062
	word32 ra_267 = mbedtls_mpi_lset(ra_193, a3_190, a4_1000, mstatus, dwLoc0690, a5_207, dwLoc0668, dwLoc0658, dwLoc0598, dwLoc0558, dwLoc0518, out s1_2060, out a1_2061, out a2_1036, out a3_2062, out a4_1000, out a5_264, out a7, out s2_269, out s3_2063, out s4_2064, out s8_2065)
	s0_1021 = fp + -1648<i32>
	branch fp != 0xFFFFF990<32> l23093076
l23092E1E:
	word32 a0_284
	word32 s2_295
	word32 s1_2067
	word32 a5_2069
	word32 s3_2070
	word32 s4_2071
	word32 s8_2072
	word32 a3_2068
	word32 s0_2066
	word32 ra_292 = mbedtls_mpi_shift_l(ra_267, Mem242[s2_269 + 4<i32>:int32] << 6<i32>, a2_1036, a4_1000, a5_264, mstatus, 0<32>, dwLoc05A8, dwLoc0568, dwLoc0528, out s0_2066, out s1_2067, out a0_284, out a2_1036, out a3_2068, out a4_1000, out a5_2069, out a7, out s2_295, out s3_2070, out s4_2071, out s8_2072)
	s0_1021 = a0_284
	branch a0_284 != 0<32> l23093076
l23092E30:
	word32 a0_323
	word32 s1_2073
	word32 a3_2074
	word32 s8_2076
	word32 s9_2077
	word32 s3_2075
	ra_193 = mbedtls_mpi_mod_mpi(ra_292, fp + -1648<i32>, fp + -1648<i32>, s2_295, s5_1009, s6_124 + 1<32>, a4, s5_53 & 1<i32>, s11, mstatus, dwLoc0688, dwLoc0668, dwLoc0658, dwLoc064C, dwLoc0648, dwLoc0638, dwLoc0628, dwLoc0618, dwLoc0608, 0<32>, dwLoc05E8, dwLoc05C8, dwLoc05B8, dwLoc05A8, dwLoc0598, dwLoc0588, dwLoc057C, dwLoc0568, dwLoc055C, out s1_2073, out a0_323, out a2_1036, out a3_2074, out a4_1000, out a5_328, out a7, out s2_195, out s3_2075, out s4_197, out s5_1009, out s6_128, out s7_1011, out s8_2076, out s9_2077, out s10_336, out s11)
	s0_1021 = a0_323
	branch a0_323 != 0<32> l23093076
l23092E40:
	branch s7_1011 == 0<32> l23092E4E
l23092E44:
	a1_245 = fp + -1648<i32>
	a0_247 = s7_1011
l23092E4A:
	word32 a7_2128
	word32 a3_2126
	word32 a6_2127
	word32 a1_2125
	memcpy(a0_247, a1_245, 0xC<32>, out a1_2125, out a2_1036, out a3_2126, out a4_1000, out a5_328, out a6_2127, out a7_2128)
l23092E4E:
	word32 ra_410
	word32 a5_408
	word32 s1_412
	word32 a0_398
	word32 a2_383
	word32 a3_384
	word32 a4_385
	word32 a5_386
	word32 a6_2079
	word32 a1_2078
	branch mbedtls_mpi_cmp_mpi(a2_1036, a4_1000, a5_328, out a1_2078, out a2_383, out a3_384, out a4_385, out a5_386, out a6_2079) < 0<32> l23092ECA
l23092ECA:
	word32 s4_2086
	word32 s8_2087
	word32 s2_2084
	word32 s3_2085
	word32 a1_2081
	word32 a3_2082
	word32 a6_2083
	word32 s0_2080
	ra_410 = mbedtls_mpi_copy(ra_193, fp + -1588<i32>, s4_197, a2_383, a3_384, a4_385, a5_386, mstatus, 0<32>, dwLoc05A8, dwLoc0568, dwLoc0528, out s0_2080, out s1_412, out a0_398, out a1_2081, out a2_1036, out a3_2082, out a4_1000, out a5_408, out a6_2083, out a7, out s2_2084, out s3_2085, out s4_2086, out s8_2087)
l23092E5A:
	word32 a3_2088
	word32 s3_2090
	word32 s4_2091
	word32 s6_2092
	word32 s9_2094
	word32 s10_2095
	word32 s11_2096
	word32 s8_2093
	word32 s2_2089
	ra_410 = mbedtls_mpi_mod_mpi(ra_193, fp + -1588<i32>, s4_197, s2_195, s5_1009, s6_128, s7_1011, s10_336, s11, mstatus, dwLoc0688, dwLoc0668, dwLoc0658, dwLoc064C, dwLoc0648, dwLoc0638, dwLoc0628, dwLoc0618, dwLoc0608, 0<32>, dwLoc05E8, dwLoc05C8, dwLoc05B8, dwLoc05A8, dwLoc0598, dwLoc0588, dwLoc057C, dwLoc0568, dwLoc055C, out s1_412, out a0_398, out a2_1036, out a3_2088, out a4_1000, out a5_408, out a7, out s2_2089, out s3_2090, out s4_2091, out s5_1009, out s6_2092, out s7_1011, out s8_2093, out s9_2094, out s10_2095, out s11_2096)
l23092E64:
	s0_1021 = a0_398
	branch a0_398 != 0<32> l23093076
l23092E6A:
	word32 a0_474
	word32 a5_476
	word32 a3_480
	word32 s3_488
	word32 s11_2105
	word32 s8_2102
	word32 s9_2103
	word32 s10_2104
	word32 s6_2101
	word32 s4_2100
	word32 t1_2097
	word32 s1_2098
	word32 s2_2099
	word32 ra_482 = mpi_montmul(ra_410, fp + -1588<i32>, fp + -1648<i32>, 0<32> - s1_412, fp + -1636<i32>, a5_408, dwLoc0584, out t1_2097, out s1_2098, out a0_474, out a2_1036, out a3_480, out a4_1000, out a5_476, out a7, out s2_2099, out s3_488, out s4_2100, out s5_1009, out s6_2101, out s7_1011, out s8_2102, out s9_2103, out s10_2104, out s11_2105)
	s0_1021 = a0_474
	branch a0_474 != 0<32> l23093076
l23092E82:
	word32 a0_506
	word32 s3_509
	word32 s1_520
	word32 a5_2109
	word32 s2_2111
	word32 s4_2112
	word32 s8_2113
	word32 a6_2110
	word32 a1_2107
	word32 a3_2108
	word32 s0_2106
	word32 ra_518 = mbedtls_mpi_copy(ra_482, s3_488, fp + -1648<i32>, a2_1036, a3_480, a4_1000, a5_476, mstatus, 0<32>, dwLoc05A8, dwLoc0568, dwLoc0528, out s0_2106, out s1_520, out a0_506, out a1_2107, out a2_1036, out a3_2108, out a4_1000, out a5_2109, out a6_2110, out a7, out s2_2111, out s3_509, out s4_2112, out s8_2113)
	s0_1021 = a0_506
	branch a0_506 != 0<32> l23093076
l23092E90:
	word32 a0_540
	word32 a3_546
	word32 s2_553
	word32 s6_557
	word32 s4_2115
	word32 s9_2116
	word32 s11_2118
	word32 s10_2117
	word32 t1_2114
	word32 s8_1219
	word32 s1_1003
	word32 s3_1007
	word32 a5_1230
	word32 ra_1001 = mpi_montmul(ra_518, s3_509, fp + -1612<i32>, s1_520, fp + -1636<i32>, fp + -1652<i32>, dwLoc0584, out t1_2114, out s1_1003, out a0_540, out a2_1036, out a3_546, out a4_1000, out a5_1230, out a7, out s2_553, out s3_1007, out s4_2115, out s5_1009, out s6_557, out s7_1011, out s8_1219, out s9_2116, out s10_2117, out s11_2118)
	s0_1021 = a0_540
	branch a0_540 != 0<32> l23093076
l23092EB0:
	branch s5_1009 != s6_557 l23092ED4
l23092ED4:
	word32 s9_574 = fp + -1600<i32> + (0xC<32> << s5_1009 + -1<i32>)
	word32 a0_577
	word32 a5_579
	word32 a3_582
	word32 s4_2123
	word32 s8_2124
	word32 s3_2122
	word32 s2_2121
	word32 s1_2119
	word32 a1_2120
	word32 ra_585 = mbedtls_mpi_grow(ra_1001, Mem539[s2_553 + 4<i32>:int32] + 1<32>, a3_546, a4_1000, mstatus, 1<32>, 0<32>, dwLoc0658, dwLoc0588, dwLoc0548, dwLoc0508, out s1_2119, out a0_577, out a1_2120, out a2_1036, out a3_582, out a4_1000, out a5_579, out a7, out s2_2121, out s3_2122, out s4_2123, out s8_2124)
	s0_1021 = a0_577
	branch a0_577 != 0<32> l23093076
l23092EFA:
	word32 a0_602
	word32 a1_2153
	word32 a3_2154
	word32 a6_2155
	word32 s3_2157
	word32 s4_2158
	word32 s8_2159
	word32 s2_2156
	word32 s0_2152
	ra_1001 = mbedtls_mpi_copy(ra_585, s9_574, fp + -1588<i32>, a2_1036, a3_582, a4_1000, a5_579, mstatus, 0<32>, dwLoc05A8, dwLoc0568, dwLoc0528, out s0_2152, out s1_1003, out a0_602, out a1_2153, out a2_1036, out a3_2154, out a4_1000, out a5_1230, out a6_2155, out a7, out s2_2156, out s3_2157, out s4_2158, out s8_2159)
	s0_1021 = a0_602
	branch a0_602 != 0<32> l23093076
l23092F08:
l23092F0A:
	word32 a0_638
	word32 s11_650
	word32 s4_653
	word32 s6_655
	word32 t1_2160
	word32 s10_2161
	word32 s2_651
	word32 a3_644
	ra_1001 = mpi_montmul(ra_1001, s9_574, s9_574, s1_1003, fp + -1636<i32>, a5_1230, dwLoc0584, out t1_2160, out s1_1003, out a0_638, out a2_1036, out a3_644, out a4_1000, out a5_1230, out a7, out s2_651, out s3_1007, out s4_653, out s5_1009, out s6_655, out s7_1011, out s8_1219, out s9_574, out s10_2161, out s11_650)
	s0_1021 = a0_638
	branch a0_638 != 0<32> l23093076
l23092F1E:
	branch s4_653 + 1<32> <u s11_650 l23092F0A
l23092F24:
	word32 s6_669 = s6_655 + 1<32>
	word32 s11_670 = 1<32> << s5_1009
l23092F2C:
	branch s6_669 >=u s11_670 l23092EB4
l23092F30:
	word32 a0_685
	word32 a5_687
	word32 a3_690
	word32 s4_697
	word32 s3_2165
	word32 s8_2166
	word32 s2_2164
	word32 a1_2163
	word32 s1_2162
	word32 ra_693 = mbedtls_mpi_grow(ra_1001, Mem539[s2_651 + 4<i32>:int32] + 1<32>, a3_644, a4_1000, mstatus, 1<32>, 0<32>, dwLoc0658, dwLoc0588, dwLoc0548, dwLoc0508, out s1_2162, out a0_685, out a1_2163, out a2_1036, out a3_690, out a4_1000, out a5_687, out a7, out s2_2164, out s3_2165, out s4_697, out s8_2166)
	s0_1021 = a0_685
	branch a0_685 != 0<32> l23093076
l23092F46:
	word32 a0_709
	word32 s4_713
	word32 a5_719
	word32 s1_723
	word32 s3_2172
	word32 s8_2173
	word32 a6_2170
	word32 s2_2171
	word32 a1_2168
	word32 a3_2169
	word32 s0_2167
	word32 ra_721 = mbedtls_mpi_copy(ra_693, s4_697, s9_574, a2_1036, a3_690, a4_1000, a5_687, mstatus, 0<32>, dwLoc05A8, dwLoc0568, dwLoc0528, out s0_2167, out s1_723, out a0_709, out a1_2168, out a2_1036, out a3_2169, out a4_1000, out a5_719, out a6_2170, out a7, out s2_2171, out s3_2172, out s4_713, out s8_2173)
	s0_1021 = a0_709
	branch a0_709 != 0<32> l23093076
l23092F54:
	word32 a0_737
	word32 s4_752
	word32 s6_754
	word32 t1_2174
	word32 s9_2175
	word32 s10_2176
	ra_1001 = mpi_montmul(ra_721, s4_713, fp + -1588<i32>, s1_723, fp + -1636<i32>, a5_719, dwLoc0584, out t1_2174, out s1_1003, out a0_737, out a2_1036, out a3_644, out a4_1000, out a5_1230, out a7, out s2_651, out s3_1007, out s4_752, out s5_1009, out s6_754, out s7_1011, out s8_1219, out s9_2175, out s10_2176, out s11_670)
	s0_1021 = a0_737
	branch a0_737 != 0<32> l23093076
l23092F68:
	s6_669 = s6_754 + 1<32>
	s9_574 = s4_752
l23092EB4:
	word32 s4_1023 = Mem539[s8_1219 + 4<i32>:int32]
	word32 t1_1222 = 0<32>
	word32 s6_1215 = 0<32>
l23092EBE:
	word32 s11_1005 = 0<32>
l23092FAA:
	branch s6_1215 != 0<32> l23092F74
l23092FAE:
	branch s4_1023 != 0<32> l23092F6E
l23092F6E:
	s4_1023 = s4_1023 + 0xFFFFFFFF<32>
	s6_1215 = 32<i32>
l23092F74:
	s6_1215 = s6_1215 + 0xFFFFFFFF<32>
	branch (Mem783[Mem783[s8_1219 + 8<i32>:int32] + (s4_1023 << 2<u32>):word32] >>u s6_1215 & 1<32>) != 0<32> l23092FF4
l23092F8A:
	branch t1_1222 == 0<32> l23092FAA
l23092F8E:
	a5_1230 = 1<32>
	branch t1_1222 != 1<32> l23092FF4
l23092FF4:
	s11_1005 = s11_1005 + 1<32>
	t1_1222 = 2<32>
	branch s5_1009 != s11_1005 l23092FAA
l23093008:
l2309300A:
	word32 a0_825
	word32 s11_837
	word32 s9_845
	word32 t1_847
	word32 s10_2193
	word32 s6_2191
	word32 s8_2192
	word32 s2_2189
	word32 s4_2190
	word32 a3_2188
	ra_1001 = mpi_montmul(ra_1001, s3_1007, s3_1007, s1_1003, fp + -1636<i32>, a5_1230, dwLoc0584, out t1_847, out s1_1003, out a0_825, out a2_1036, out a3_2188, out a4_1000, out a5_1230, out a7, out s2_2189, out s3_1007, out s4_2190, out s5_1009, out s6_2191, out s7_1011, out s8_2192, out s9_845, out s10_2193, out s11_837)
	s0_1021 = a0_825
	branch a0_825 != 0<32> l23093076
l2309301E:
	branch t1_847 + 1<32> <u s11_837 l2309300A
l23093026:
	word32 a0_864
	word32 s10_875
	word32 a3_2195
	word32 s2_2196
	word32 s9_2197
	word32 s11_2198
	word32 t1_2194
	ra_1001 = mpi_montmul(ra_1001, s3_1007, s9_845 + 0xC<32> + (fp + -1600<i32>), s1_1003, fp + -1636<i32>, fp + -1600<i32>, dwLoc0584, out t1_2194, out s1_1003, out a0_864, out a2_1036, out a3_2195, out a4_1000, out a5_1230, out a7, out s2_2196, out s3_1007, out s4_1023, out s5_1009, out s6_1215, out s7_1011, out s8_1219, out s9_2197, out s10_875, out s11_2198)
	s0_1021 = a0_864
	branch a0_864 != 0<32> l23093076
l23093040:
	t1_1222 = s10_875
l23092F94:
	word32 a0_911
	word32 s9_2186
	word32 s10_2187
	word32 s2_2185
	word32 a3_2184
	ra_1001 = mpi_montmul(ra_1001, s3_1007, s3_1007, s1_1003, fp + -1636<i32>, 1<32>, dwLoc0584, out t1_1222, out s1_1003, out a0_911, out a2_1036, out a3_2184, out a4_1000, out a5_1230, out a7, out s2_2185, out s3_1007, out s4_1023, out s5_1009, out s6_1215, out s7_1011, out s8_1219, out s9_2186, out s10_2187, out s11_1005)
	s0_1021 = a0_911
	branch a0_911 != 0<32> l23093076
l23092FA8:
l23092FB2:
l23092FB8:
	branch s4_1023 != s11_1005 l23093046
l23093046:
	word32 a0_957
	word32 s6_974
	word32 s9_977
	word32 a3_2130
	word32 s8_2132
	word32 s10_2133
	word32 s2_2131
	word32 t1_2129
	word32 s4_1008
	ra_1001 = mpi_montmul(ra_1001, s3_1007, s3_1007, s1_1003, fp + -1636<i32>, a5_1230, dwLoc0584, out t1_2129, out s1_1003, out a0_957, out a2_1036, out a3_2130, out a4_1000, out a5_1230, out a7, out s2_2131, out s3_1007, out s4_1008, out s5_1009, out s6_974, out s7_1011, out s8_2132, out s9_977, out s10_2133, out s11_1005)
	s0_1021 = a0_957
	branch a0_957 != 0<32> l23093076
l23093058:
	branch (s6_974 & s9_977 << 1<i32>) != 0<32> l23093064
l23093064:
	word32 a0_993
	word32 a3_2178
	word32 s2_2179
	word32 s8_2181
	word32 s9_2182
	word32 s10_2183
	word32 s6_2180
	word32 t1_2177
	ra_1001 = mpi_montmul(ra_1001, s3_1007, fp + -1588<i32>, s1_1003, fp + -1636<i32>, a5_1230, dwLoc0584, out t1_2177, out s1_1003, out a0_993, out a2_1036, out a3_2178, out a4_1000, out a5_1230, out a7, out s2_2179, out s3_1007, out s4_1008, out s5_1009, out s6_2180, out s7_1011, out s8_2181, out s9_2182, out s10_2183, out s11_1005)
	s0_1021 = a0_993
	branch a0_993 == 0<32> l23093060
l23093060:
	s4_1023 = s4_1008 + 1<32>
l23092FBC:
	word32 a0_1035
	word32 a3_1041
	word32 s2_1048
	word32 s3_1049
	word32 t1_2134
	word32 a5_2136
	word32 s11_2142
	word32 s4_2137
	word32 s8_2139
	word32 s9_2140
	word32 s10_2141
	word32 s6_2138
	word32 s1_2135
	word32 ra_1043 = mpi_montmul(ra_1001, s3_1007, fp + -1612<i32>, s1_1003, fp + -1636<i32>, fp + -1652<i32>, dwLoc0584, out t1_2134, out s1_2135, out a0_1035, out a2_1036, out a3_1041, out a4_1000, out a5_2136, out a7, out s2_1048, out s3_1049, out s4_2137, out s5_1009, out s6_2138, out s7_1011, out s8_2139, out s9_2140, out s10_2141, out s11_2142)
	s0_1021 = a0_1035
	branch a0_1035 != 0<32> l23093076
l23092FDA:
	s0_1021 = dwLoc05CC
	branch a4_1000 != 0xFFFFFFFF<32> l23093076
l23092FE2:
	Mem1066[s3_1049:word32] = a4_1000
	word32 a0_1078
	word32 s8_2151
	word32 s3_2149
	word32 s4_2150
	word32 a5_2147
	word32 s2_2148
	word32 s1_2144
	word32 a1_2145
	word32 a3_2146
	word32 s0_2143
	mbedtls_mpi_add_mpi(ra_1043, dwLoc05CC, s3_1049, a3_1041, a4_1000, 0xFFFFFFFF<32>, s2_1048, mstatus, 0<32>, dwLoc05D8, dwLoc05B8, dwLoc0598, dwLoc0588, dwLoc0578, dwLoc0558, out s0_2143, out s1_2144, out a0_1078, out a1_2145, out a2_1036, out a3_2146, out a4_1000, out a5_2147, out a7, out s2_2148, out s3_2149, out s4_2150, out s8_2151)
	s0_1021 = a0_1078
l23093076:
	word32 a5_1105 = 1<32>
	word32 s1_1106 = 1<32> << s5_1009 + -1<i32>
	word32 s5_1107 = 1<32> << s5_1009
l23093086:
	branch s1_1106 <u s5_1107 l230930E8
l230930E8:
	word32 a3_2039
	word32 a6_2040
	word32 s4_2041
	word32 a1_2038
	word32 a0_2037
	s1_1106 = mbedtls_mpi_free(s1_1106 + 0xC<32> + (fp + -1600<i32>), a2_1036, a4_1000, fp + -1600<i32>, mstatus, dwLoc0548, dwLoc0508, out a0_2037, out a1_2038, out a2_1036, out a3_2039, out a4_1000, out a5_1105, out a6_2040, out s4_2041)
l2309308A:
	word32 a2_1135
	word32 a5_1136
	word32 a4_1139
	word32 s4_2046
	word32 a3_2044
	word32 a6_2045
	word32 a0_2042
	word32 a1_2043
	mbedtls_mpi_free(fp + -1588<i32>, a2_1036, a4_1000, a5_1105, mstatus, dwLoc0548, dwLoc0508, out a0_2042, out a1_2043, out a2_1135, out a3_2044, out a4_1139, out a5_1136, out a6_2045, out s4_2046)
	word32 a2_1147
	word32 a5_1148
	word32 a4_1151
	word32 a1_2048
	word32 a3_2049
	word32 a6_2050
	word32 s4_2051
	word32 a0_2047
	mbedtls_mpi_free(fp + -1636<i32>, a2_1135, a4_1139, a5_1136, mstatus, dwLoc0548, dwLoc0508, out a0_2047, out a1_2048, out a2_1147, out a3_2049, out a4_1151, out a5_1148, out a6_2050, out s4_2051)
	word32 a0_2052
	word32 a1_2053
	word32 s4_2055
	word32 a6_2054
	mbedtls_mpi_free(fp + -1624<i32>, a2_1147, a4_1151, a5_1148, mstatus, dwLoc0548, dwLoc0508, out a0_2052, out a1_2053, out a2_1159, out a3_1162, out a4_1163, out a5_1160, out a6_2054, out s4_2055)
	branch s7_1011 == 0<32> l230930A6
l230930A0:
	a5_1160 = Mem1263[s7_1011 + 8<i32>:int32]
	branch a5_1160 != 0<32> l230930AC
l230930A6:
	word32 s4_2059
	word32 a6_2058
	word32 a0_2056
	word32 a1_2057
	mbedtls_mpi_free(fp + -1648<i32>, a2_1159, a4_1163, a5_1160, mstatus, dwLoc0548, dwLoc0508, out a0_2056, out a1_2057, out a2_1159, out a3_1162, out a4_1163, out a5_1160, out a6_2058, out s4_2059)
l230930AC:
	a2Out = a2_1159
	a3Out = a3_1162
	a4Out = a4_1163
	a5Out = a5_1160
	a7Out = a7
	return s0_1021
mbedtls_mpi_exp_mod_exit:


word32 mbedtls_mpi_gcd(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg68, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_private
//      mbedtls_mpi_inv_mod
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0068:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_gcd_entry:
l230930F8:
	word32 a0_31
	word32 a3_39
	word32 s1_551
	word32 s0_550
	word32 a1_552
	word32 s4_555
	word32 a6_553
	word32 a7_554
	word32 a5_116
	word32 a4_115
	word32 a2_113
	word32 s8_124
	word32 s3_122
	word32 s2_121
	word32 ra_43 = mbedtls_mpi_copy(ra, fp + -40<i32>, a1, a2, a3, a4, 1<32>, mstatus, 0<32>, dwArg98, dwArgD8, dwArg0118, out s0_550, out s1_551, out a0_31, out a1_552, out a2_113, out a3_39, out a4_115, out a5_116, out a6_553, out a7_554, out s2_121, out s3_122, out s4_555, out s8_124)
	word32 s0_132 = a0_31
	branch a0_31 != 0<32> l230931D0
l23093124:
	word32 a0_57
	word32 a7_575
	word32 s4_576
	word32 a1_572
	word32 a6_574
	word32 a3_573
	word32 s1_571
	word32 s0_570
	word32 ra_69 = mbedtls_mpi_copy(ra_43, fp + -28<i32>, a2, a2, a3_39, a4_115, a5_116, mstatus, 0<32>, dwArg98, dwArgD8, dwArg0118, out s0_570, out s1_571, out a0_57, out a1_572, out a2_113, out a3_573, out a4_115, out a5_116, out a6_574, out a7_575, out s2_121, out s3_122, out s4_576, out s8_124)
	s0_132 = a0_57
	branch a0_57 != 0<32> l230931D0
l23093132:
	word32 a5_86
	word32 a2_577
	word32 a0_81 = mbedtls_mpi_lsb(fp + -40<i32>, a5_116, out a2_577, out a5_86)
	word32 s1_101 = a0_81
	word32 a2_94
	word32 a5_97
	word32 a0_92 = mbedtls_mpi_lsb(fp + -28<i32>, a5_86, out a2_94, out a5_97)
	branch a0_92 >=u a0_81 l23093146
l23093144:
	s1_101 = a0_92
l23093146:
	word32 a0_111
	word32 s1_120
	word32 a1_578
	word32 s4_580
	word32 a3_579
	word32 ra_119 = mbedtls_mpi_shift_r(ra_69, s1_101, a2_94, a5_97, mstatus, dwLoc50, dwLoc4C, dwLoc28, dwLoc18, dwArgA8, dwArgE8, dwArg0128, out s1_120, out a0_111, out a1_578, out a2_113, out a3_579, out a4_115, out a5_116, out s2_121, out s3_122, out s4_580, out s8_124)
	s0_132 = a0_111
	branch a0_111 != 0<32> l230931D0
l23093152:
	word32 a0_135
	word32 s4_583
	word32 a3_582
	word32 a1_581
	word32 s1_144
	word32 ra_143 = mbedtls_mpi_shift_r(ra_119, s1_120, a2_113, a5_116, mstatus, dwLoc50, dwLoc4C, dwLoc28, dwLoc18, dwArgA8, dwArgE8, dwArg0128, out s1_144, out a0_135, out a1_581, out a2_113, out a3_582, out a4_115, out a5_116, out s2_121, out s3_122, out s4_583, out s8_124)
	s0_132 = a0_135
	branch a0_135 != 0<32> l230931D0
l2309315E:
l23093164:
	word32 a2_166
	word32 a4_168
	word32 a5_169
	word32 a1_618
	word32 a3_619
	word32 a6_620
	branch mbedtls_mpi_cmp_int(0<32>, a2_113, out a1_618, out a2_166, out a3_619, out a4_168, out a5_169, out a6_620) != 0<32> l23093186
l23093186:
	word32 a2_175
	word32 a5_178
	word32 a0_187
	word32 s4_587
	word32 a3_586
	word32 a1_585
	word32 s1_584
	word32 ra_195 = mbedtls_mpi_shift_r(ra_143, mbedtls_mpi_lsb(fp + -40<i32>, a5_169, out a2_175, out a5_178), a2_175, a5_178, mstatus, dwLoc50, dwLoc4C, dwLoc28, dwLoc18, dwArgA8, dwArgE8, dwArg0128, out s1_584, out a0_187, out a1_585, out a2_113, out a3_586, out a4_115, out a5_116, out s2_121, out s3_122, out s4_587, out s8_124)
	s0_132 = a0_187
	branch a0_187 != 0<32> l230931D0
l23093198:
	word32 a2_212
	word32 a5_215
	word32 a0_221
	word32 s1_599
	word32 a1_600
	word32 a3_601
	word32 s4_602
	word32 ra_229 = mbedtls_mpi_shift_r(ra_195, mbedtls_mpi_lsb(fp + -28<i32>, a5_116, out a2_212, out a5_215), a2_212, a5_215, mstatus, dwLoc50, dwLoc4C, dwLoc28, dwLoc18, dwArgA8, dwArgE8, dwArg0128, out s1_599, out a0_221, out a1_600, out a2_113, out a3_601, out a4_115, out a5_116, out s2_121, out s3_122, out s4_602, out s8_124)
	s0_132 = a0_221
	branch a0_221 != 0<32> l230931D0
l230931AA:
	word32 ra_269
	word32 a3_248
	word32 a4_249
	word32 a5_250
	word32 a1_603
	word32 a2_604
	word32 a6_605
	branch mbedtls_mpi_cmp_mpi(a2_113, a4_115, a5_116, out a1_603, out a2_604, out a3_248, out a4_249, out a5_250, out a6_605) < 0<32> l230931F0
l230931F0:
	word32 a0_255
	word32 s0_606
	word32 s1_607
	word32 a1_608
	word32 a3_609
	word32 a7_610
	word32 s4_611
	ra_269 = mbedtls_mpi_sub_abs(ra_229, fp + -28<i32>, fp + -28<i32>, fp + -40<i32>, a3_248, a4_249, a5_250, mstatus, dwArg68, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_606, out s1_607, out a0_255, out a1_608, out a2_113, out a3_609, out a4_115, out a5_116, out a7_610, out s2_121, out s3_122, out s4_611, out s8_124)
	s0_132 = a0_255
	branch a0_255 != 0<32> l230931D0
l230931FE:
l230931B6:
	word32 a0_283
	word32 s0_612
	word32 s1_613
	word32 a1_614
	word32 a3_615
	word32 a7_616
	word32 s4_617
	ra_269 = mbedtls_mpi_sub_abs(ra_229, fp + -40<i32>, fp + -40<i32>, fp + -28<i32>, a3_248, a4_249, a5_250, mstatus, dwArg68, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_612, out s1_613, out a0_283, out a1_614, out a2_113, out a3_615, out a4_115, out a5_116, out a7_616, out s2_121, out s3_122, out s4_617, out s8_124)
	s0_132 = a0_283
	branch a0_283 != 0<32> l230931D0
l230931C4:
l230931C8:
	word32 a0_315
	word32 a1_621
	word32 a3_622
	word32 s4_623
	ra_143 = mbedtls_mpi_shift_r(ra_269, 1<32>, a2_113, a5_116, mstatus, dwLoc50, dwLoc4C, dwLoc28, dwLoc18, dwArgA8, dwArgE8, dwArg0128, out s1_144, out a0_315, out a1_621, out a2_113, out a3_622, out a4_115, out a5_116, out s2_121, out s3_122, out s4_623, out s8_124)
	s0_132 = a0_315
	branch a0_315 == 0<32> l23093164
l2309316E:
	word32 a0_340
	word32 a3_343
	word32 s4_591
	word32 a7_590
	word32 s1_589
	word32 s0_588
	word32 ra_348 = mbedtls_mpi_shift_l(ra_143, s1_144, a2_166, a4_168, a5_169, mstatus, 0<32>, dwArg98, dwArgD8, dwArg0118, out s0_588, out s1_589, out a0_340, out a2_113, out a3_343, out a4_115, out a5_116, out a7_590, out s2_121, out s3_122, out s4_591, out s8_124)
	s0_132 = a0_340
	branch a0_340 != 0<32> l230931D0
l2309317A:
	word32 a0_365
	word32 a1_594
	word32 s1_593
	word32 s0_592
	word32 a3_595
	word32 a6_596
	word32 a7_597
	word32 s4_598
	mbedtls_mpi_copy(ra_348, s2_121, fp + -28<i32>, a2_113, a3_343, a4_115, a5_116, mstatus, 0<32>, dwArg98, dwArgD8, dwArg0118, out s0_592, out s1_593, out a0_365, out a1_594, out a2_113, out a3_595, out a4_115, out a5_116, out a6_596, out a7_597, out s2_121, out s3_122, out s4_598, out s8_124)
	s0_132 = a0_365
l230931D0:
	word32 a2_396
	word32 a5_397
	word32 a4_400
	word32 s4_560
	word32 a0_556
	word32 a6_559
	word32 a1_557
	word32 a3_558
	mbedtls_mpi_free(fp + -52<i32>, a2_113, a4_115, a5_116, mstatus, dwArgF8, dwArg0138, out a0_556, out a1_557, out a2_396, out a3_558, out a4_400, out a5_397, out a6_559, out s4_560)
	word32 a2_408
	word32 a5_409
	word32 a4_412
	word32 a6_564
	word32 s4_565
	word32 a3_563
	word32 a0_561
	word32 a1_562
	mbedtls_mpi_free(fp + -40<i32>, a2_396, a4_400, a5_397, mstatus, dwArgF8, dwArg0138, out a0_561, out a1_562, out a2_408, out a3_563, out a4_412, out a5_409, out a6_564, out s4_565)
	word32 a2_420
	word32 a5_421
	word32 a4_424
	word32 s4_427
	word32 a3_568
	word32 a6_569
	word32 a1_567
	word32 a0_566
	mbedtls_mpi_free(fp + -28<i32>, a2_408, a4_412, a5_409, mstatus, dwArgF8, dwArg0138, out a0_566, out a1_567, out a2_420, out a3_568, out a4_424, out a5_421, out a6_569, out s4_427)
	s1Out = dwLoc4C
	a0Out = s0_132
	a2Out = a2_420
	a3Out = s2
	a4Out = a4_424
	a5Out = a5_421
	s2Out = s2_121
	s3Out = s3_122
	s4Out = s4_427
	s8Out = s8_124
	return dwLoc08
mbedtls_mpi_gcd_exit:


word32 mbedtls_mpi_fill_random(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_private
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 sp
mbedtls_mpi_fill_random_entry:
l23093204:
	branch a1 >u 1024<i32> l23093248
l23093248:
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 1024<i32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	mstatusOut = mstatus
	return 0xFFFFFFFC<32>
l2309320C:
	word32 s0_25
	word32 ra_27
	word32 a6_69
	word32 a7_70
	word32 t0_75
	word32 t1_76
	word32 t3_77
	word32 t4_78
	word32 t5_79
	word32 t6_80
	word32 tp_81
	word32 a0_28
	word32 a2_29
	word32 a3_30
	word32 a4_40
	word32 a5_23
	word32 s2_107
	word32 s3_110
	word32 s4_113
	word32 s8_116
	call a2 (retsize: 0;)
		uses: a0:a3,a1:fp + -1040<i32>,a2:a1,a3:a3,a4:a4,a5:a5_23,a6:a6_69,a7:a7_70,mstatus:mstatus,ra:ra,s0:a1,s1:a0,s2:s2_71,s3:s3_72,s4:s4_73,s8:s8_74,Stack +0404:s1,Stack +0408:s0,Stack +040C:ra,t0:t0_75,t1:t1_76,t3:t3_77,t4:t4_78,t5:t5_79,t6:t6_80,tp:tp_81
		defs: a0:a0_28,a2:a2_29,a3:a3_30,a4:a4_68,a5:a5_23,a6:a6_69,a7:a7_70,mstatus:mstatus_67,ra:ra_27,s0:s0_25,s2:s2_71,s3:s3_72,s4:s4_73,s8:s8_74,t0:t0_75,t1:t1_76,t3:t3_77,t4:t4_78,t5:t5_79,t6:t6_80,tp:tp_81
	branch a0_28 != 0<32> l23093236
l2309322C:
	word32 s0_160
	word32 s1_161
	word32 a1_162
	word32 a7_163
	mbedtls_mpi_read_binary(ra_27, fp - 1040<i32>, s0_25, a3_30, a4, mstatus, dwLoc0408, dwLoc03F8, dwLoc0338, dwLoc0328, dwLoc02F8, dwLoc02E8, dwLoc02B8, dwLoc02A8, out s0_160, out s1_161, out a0_28, out a1_162, out a2_29, out a3_30, out a4_40, out a5_23, out a7_163, out s2_107, out s3_110, out s4_113, out s8_116)
l23093236:
	a2Out = a2_29
	a3Out = a3_30
	a4Out = a4_40
	a5Out = a5_23
	s2Out = s2_107
	s3Out = s3_110
	s4Out = s4_113
	s8Out = s8_116
	mstatusOut = mstatus
	return a0_28
mbedtls_mpi_fill_random_exit:


word32 mbedtls_mpi_inv_mod(word32 ra, word32 s0, word32 a1, word32 a2, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0164, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_private
//      ecp_normalize_jac
//      ecp_normalize_jac_many
// MayUse:  a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0164:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_mpi_inv_mod_entry:
l2309324C:
	word32 s2_1018 = a0
	word32 s3_11 = a1
	word32 s1_1005 = a2
	word32 a4_26
	word32 a1_1433
	word32 a6_1434
	word32 a5_1000
	word32 a3_1002
	word32 a2_1306
	branch mbedtls_mpi_cmp_int(0<32>, a2, out a1_1433, out a2_1306, out a3_1002, out a4_26, out a5_1000, out a6_1434) <= 0<32> l23093400
l2309326C:
	dwLoc8C = 0<32>
	dwLoc70 = 1<32>
	word32 s1_72
	word32 a0_84
	word32 a3_1435
	word32 s4_1436
	word32 a5_110
	word32 a4_109
	word32 a2_107
	ra = mbedtls_mpi_gcd(ra, a1, a2, a3_1002, a4_26, mstatus, dwLoc28, 1<32>, 0<32>, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, out s1_72, out a0_84, out a2_107, out a3_1435, out a4_109, out a5_110, out s2_1018, out s3_11, out s4_1436, out s8)
	branch a0_84 != 0<32> l230933CA
l230932B4:
	word32 a6_1483
	word32 a1_1481
	word32 a3_1482
	branch mbedtls_mpi_cmp_int(1<32>, a2_107, out a1_1481, out a2_107, out a3_1482, out a4_109, out a5_110, out a6_1483) != 0<32> l230933CA
l230932C2:
	word32 a0_105
	word32 a3_108
	word32 s1_1484
	word32 a7_1485
	word32 s4_1486
	ra = mbedtls_mpi_mod_mpi(ra, fp + -128<i32>, s3_11, s1_72, s5, s6, s7, s10, s11, mstatus, 1<32>, 0<32>, dwLoc58, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, 0<32>, 1<32>, 0<32>, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_1484, out a0_105, out a2_107, out a3_108, out a4_109, out a5_110, out a7_1485, out s2_1018, out s3_11, out s4_1486, out s5, out s6, out s7, out s8, out s9, out s10, out s11)
	branch a0_105 != 0<32> l230933CA
l230932D2:
	word32 a0_135
	word32 a3_143
	word32 s1_149
	word32 s4_1491
	word32 a7_1490
	word32 a1_1488
	word32 a6_1489
	word32 s0_1487
	ra = mbedtls_mpi_copy(ra, fp + -116<i32>, fp + -128<i32>, a2_107, a3_108, a4_109, a5_110, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0_1487, out s1_149, out a0_135, out a1_1488, out a2_107, out a3_143, out a4_109, out a5_110, out a6_1489, out a7_1490, out s2_1018, out s3_11, out s4_1491, out s8)
	branch a0_135 != 0<32> l230933CA
l230932E0:
	word32 a0_160
	word32 a3_168
	word32 s1_174
	word32 a6_1494
	word32 a7_1495
	word32 s4_1496
	word32 s0_1492
	word32 a1_1493
	ra = mbedtls_mpi_copy(ra, fp + -80<i32>, s1_149, a2_107, a3_143, a4_109, a5_110, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0_1492, out s1_174, out a0_160, out a1_1493, out a2_107, out a3_168, out a4_109, out a5_110, out a6_1494, out a7_1495, out s2_1018, out s3_11, out s4_1496, out s8)
	branch a0_160 != 0<32> l230933CA
l230932EE:
	word32 a0_185
	word32 a3_193
	word32 s4_1502
	word32 a7_1501
	word32 a1_1499
	word32 a6_1500
	word32 s0_1497
	word32 s1_1498
	ra = mbedtls_mpi_copy(ra, fp + -68<i32>, s1_174, a2_107, a3_168, a4_109, a5_110, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0_1497, out s1_1498, out a0_185, out a1_1499, out a2_107, out a3_193, out a4_109, out a5_110, out a6_1500, out a7_1501, out s2_1018, out s3_11, out s4_1502, out s8)
	branch a0_185 != 0<32> l230933CA
l230932FC:
	word32 a3_212
	word32 s1_1503
	word32 a1_1504
	word32 a7_1505
	word32 s4_1506
	ra = mbedtls_mpi_lset(ra, a3_193, a4_109, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1503, out a1_1504, out a2_107, out a3_212, out a4_109, out a5_110, out a7_1505, out s2_1018, out s3_11, out s4_1506, out s8)
	branch fp != 0xFFFFFF98<32> l230933CA
l23093308:
	word32 a3_235
	word32 s1_1507
	word32 s4_1510
	word32 a1_1508
	word32 a7_1509
	ra = mbedtls_mpi_lset(ra, a3_212, a4_109, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1507, out a1_1508, out a2_107, out a3_235, out a4_109, out a5_110, out a7_1509, out s2_1018, out s3_11, out s4_1510, out s8)
	branch fp != 0xFFFFFFA4<32> l230933CA
l23093314:
	word32 a3_258
	word32 a1_1512
	word32 a7_1513
	word32 s4_1514
	word32 s1_1511
	ra = mbedtls_mpi_lset(ra, a3_235, a4_109, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1511, out a1_1512, out a2_107, out a3_258, out a4_109, out a5_110, out a7_1513, out s2_1018, out s3_11, out s4_1514, out s8)
	branch fp != 0xFFFFFFC8<32> l230933CA
l23093320:
	word32 a0_278 = fp + -44<i32>
	word32 a3_1517
	word32 s1_1515
	word32 a1_1516
	word32 a7_1518
	word32 s4_1519
	ra = mbedtls_mpi_lset(ra, a3_258, a4_109, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1515, out a1_1516, out a2_107, out a3_1517, out a4_109, out a5_110, out a7_1518, out s2_1018, out s3_11, out s4_1519, out s8)
l23093328:
	word32 s0_300 = a0_278
	branch a0_278 != 0<32> l230933CA
l2309332C:
	word32 a5_305 = Mem61[a5_110:word32]
	a5_110 = a5_305 & 1<32>
	branch (a5_305 & 1<32>) == 0<32> l230933A2
l230933A2:
	word32 a0_312
	word32 a3_315
	word32 s4_1522
	word32 s1_1520
	word32 a1_1521
	ra = mbedtls_mpi_shift_r(ra, 1<32>, a2_107, a5_305 & 1<32>, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1520, out a0_312, out a1_1521, out a2_107, out a3_315, out a4_109, out a5_110, out s2_1018, out s3_11, out s4_1522, out s8)
	branch a0_312 != 0<32> l230933CA
l230933AE:
	word32 a5_335 = Mem61[a5_110:word32]
	a5_110 = a5_335 & 1<32>
	branch (a5_335 & 1<32>) != 0<32> l23093410
l230933B6:
	word32 a5_338 = Mem61[a5_335 & 1<32>:word32]
	a5_110 = a5_338 & 1<32>
	branch (a5_338 & 1<32>) != 0<32> l23093410
l23093410:
	word32 a0_352
	word32 a3_355
	word32 s0_1594
	word32 s1_1595
	word32 a1_1596
	word32 a7_1597
	word32 s4_1598
	ra = mbedtls_mpi_add_mpi(ra, a0_312, fp + -104<i32>, a3_315, a4_109, a5_110, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1594, out s1_1595, out a0_352, out a1_1596, out a2_107, out a3_355, out a4_109, out a5_110, out a7_1597, out s2_1018, out s3_11, out s4_1598, out s8)
	branch a0_352 != 0<32> l230933CA
l2309341E:
	word32 a0_378
	word32 s0_1607
	word32 s1_1608
	word32 a3_1609
	word32 a7_1610
	word32 s4_1611
	ra = mbedtls_mpi_sub_mpi(ra, a0_352, fp + -92<i32>, a3_355, a4_109, a5_110, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1607, out s1_1608, out a0_378, out a2_107, out a3_1609, out a4_109, out a5_110, out a7_1610, out s2_1018, out s3_11, out s4_1611, out s8)
	branch a0_378 == 0<32> l230933BE
l2309342C:
l230933BE:
	word32 a0_409
	word32 s1_1599
	word32 a1_1600
	word32 a3_1601
	word32 s4_1602
	ra = mbedtls_mpi_shift_r(ra, 1<32>, a2_107, a5_110, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1599, out a0_409, out a1_1600, out a2_107, out a3_1601, out a4_109, out a5_110, out s2_1018, out s3_11, out s4_1602, out s8)
	branch a0_409 == 0<32> l2309342E
l2309342E:
	word32 s1_1603
	word32 a1_1604
	word32 a3_1605
	word32 s4_1606
	ra = mbedtls_mpi_shift_r(ra, 1<32>, a2_107, a5_110, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1603, out a0_278, out a1_1604, out a2_107, out a3_1605, out a4_109, out a5_110, out s2_1018, out s3_11, out s4_1606, out s8)
l23093334:
	s5 = dwArg54
	word32 a5_458 = Mem61[a5_110:word32]
	branch (a5_458 & 1<32>) == 0<32> l23093438
l23093438:
	word32 a0_465
	word32 s1_1523
	word32 a1_1524
	word32 s4_1525
	word32 a3_468
	ra = mbedtls_mpi_shift_r(ra, 1<32>, a2_107, a5_458 & 1<32>, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1523, out a0_465, out a1_1524, out a2_107, out a3_468, out a4_109, out a5_110, out s2_1018, out s3_11, out s4_1525, out s8)
	branch a0_465 != 0<32> l230933CA
l23093444:
	word32 a5_488 = Mem61[a5_110:word32]
	ra = dwArg0164
	a5_110 = a5_488 & 1<32>
	branch (a5_488 & 1<32>) != 0<32> l23093470
l2309344C:
	word32 a5_491 = Mem61[a5_488 & 1<32>:word32]
	a3_468 = dwArg0164
	a5_110 = a5_491 & 1<32>
	branch (a5_491 & 1<32>) != 0<32> l23093470
l23093470:
	word32 a0_505
	word32 a3_508
	word32 a7_1570
	word32 s4_1571
	word32 s1_1568
	word32 a1_1569
	word32 s0_1567
	ra = mbedtls_mpi_add_mpi(dwArg0164, a0_465, fp + -56<i32>, a3_468, a4_109, a5_110, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1567, out s1_1568, out a0_505, out a1_1569, out a2_107, out a3_508, out a4_109, out a5_110, out a7_1570, out s2_1018, out s3_11, out s4_1571, out s8)
	branch a0_505 != 0<32> l230933CA
l2309347E:
	word32 a0_531
	word32 s4_1584
	word32 a7_1583
	word32 a3_1582
	word32 s1_1581
	word32 s0_1580
	ra = mbedtls_mpi_sub_mpi(ra, a0_505, fp + -44<i32>, a3_508, a4_109, a5_110, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1580, out s1_1581, out a0_531, out a2_107, out a3_1582, out a4_109, out a5_110, out a7_1583, out s2_1018, out s3_11, out s4_1584, out s8)
	branch a0_531 == 0<32> l23093454
l2309348C:
l23093454:
	word32 a0_562
	word32 a3_1574
	word32 s4_1575
	word32 s1_1572
	word32 a1_1573
	ra = mbedtls_mpi_shift_r(ra, 1<32>, a2_107, a5_110, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1572, out a0_562, out a1_1573, out a2_107, out a3_1574, out a4_109, out a5_110, out s2_1018, out s3_11, out s4_1575, out s8)
	branch a0_562 != 0<32> l230933CA
l23093460:
	word32 a0_586
	word32 s4_1579
	word32 a3_1578
	word32 s1_1576
	word32 a1_1577
	ra = mbedtls_mpi_shift_r(ra, 1<32>, a2_107, a5_110, mstatus, dwLoc90, 0<32>, 0<32>, dwLoc58, dwArg68, dwArgA8, dwArgE8, out s1_1576, out a0_586, out a1_1577, out a2_107, out a3_1578, out a4_109, out a5_110, out s2_1018, out s3_11, out s4_1579, out s8)
	s0_300 = a0_586
	branch a0_586 == 0<32> l23093334
l2309346E:
l2309333E:
	word32 a3_655
	word32 s0_674
	word32 a1_676
	word32 a3_615
	word32 a4_616
	word32 a5_617
	word32 a2_1527
	word32 a1_1526
	word32 a6_1528
	branch mbedtls_mpi_cmp_mpi(a2_107, a4_109, a5_458 & 1<32>, out a1_1526, out a2_1527, out a3_615, out a4_616, out a5_617, out a6_1528) < 0<32> l2309348E
l2309348E:
	word32 a0_626
	word32 a3_629
	word32 s4_1532
	word32 s1_1530
	word32 a7_1531
	word32 s0_1529
	ra = mbedtls_mpi_sub_mpi(ra, s0_300, fp + -68<i32>, a3_615, a4_616, a5_617, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1529, out s1_1530, out a0_626, out a2_107, out a3_629, out a4_109, out a5_110, out a7_1531, out s2_1018, out s3_11, out s4_1532, out s8)
	branch a0_626 != 0<32> l230933CA
l2309349E:
	word32 a0_652
	word32 s1_1586
	word32 s0_1585
	word32 a7_1587
	word32 s4_1588
	ra = mbedtls_mpi_sub_mpi(ra, a0_626, fp + -56<i32>, a3_629, a4_109, a5_110, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1585, out s1_1586, out a0_652, out a2_107, out a3_655, out a4_109, out a5_110, out a7_1587, out s2_1018, out s3_11, out s4_1588, out s8)
	s0_674 = a0_652
	branch a0_652 != 0<32> l230933CA
l230934AE:
	a1_676 = fp + -44<i32>
l2309334A:
	word32 a0_680
	word32 a3_683
	word32 s0_1533
	word32 s1_1534
	word32 a7_1535
	word32 s4_1536
	ra = mbedtls_mpi_sub_mpi(ra, s0_300, fp + -116<i32>, a3_615, a4_616, a5_617, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1533, out s1_1534, out a0_680, out a2_107, out a3_683, out a4_109, out a5_110, out a7_1535, out s2_1018, out s3_11, out s4_1536, out s8)
	branch a0_680 != 0<32> l230933CA
l23093358:
	word32 a0_706
	word32 s0_1537
	word32 s4_1540
	word32 s1_1538
	word32 a7_1539
	ra = mbedtls_mpi_sub_mpi(ra, a0_680, fp + -104<i32>, a3_683, a4_109, a5_110, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1537, out s1_1538, out a0_706, out a2_107, out a3_655, out a4_109, out a5_110, out a7_1539, out s2_1018, out s3_11, out s4_1540, out s8)
	s0_674 = a0_706
	branch a0_706 != 0<32> l230933CA
l23093366:
	a1_676 = fp + -92<i32>
l2309336A:
	word32 a0_742
	word32 s0_1589
	word32 s1_1590
	word32 a3_1591
	word32 a7_1592
	word32 s4_1593
	ra = mbedtls_mpi_sub_mpi(ra, s0_674, a1_676, a3_655, a4_109, a5_110, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1589, out s1_1590, out a0_742, out a2_107, out a3_1591, out a4_109, out a5_110, out a7_1592, out s2_1018, out s3_11, out s4_1593, out s8)
	s0_300 = a0_742
	branch a0_742 != 0<32> l230933CA
l23093374:
	word32 a6_1543
	word32 a3_1542
	word32 a1_1541
	branch mbedtls_mpi_cmp_int(0<32>, a2_107, out a1_1541, out a2_107, out a3_1542, out a4_109, out a5_110, out a6_1543) != 0<32> l2309332C
l2309337E:
	word32 a3_782
	word32 a6_1545
	word32 a1_1544
	branch mbedtls_mpi_cmp_int(0<32>, a2_107, out a1_1544, out a2_107, out a3_782, out a4_109, out a5_110, out a6_1545) < 0<32> l230934B4
l230934B4:
	word32 a0_796
	word32 s4_1551
	word32 a3_1549
	word32 a7_1550
	word32 a1_1548
	word32 s1_1547
	word32 s0_1546
	ra = mbedtls_mpi_add_mpi(ra, s0_300, fp + -56<i32>, a3_782, a4_109, a5_110, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1546, out s1_1547, out a0_796, out a1_1548, out a2_107, out a3_1549, out a4_109, out a5_110, out a7_1550, out s2_1018, out s3_11, out s4_1551, out s8)
	s0_300 = a0_796
	branch a0_796 == 0<32> l2309337E
l230934C4:
l2309338A:
	word32 a2_828
	word32 a3_829
	word32 a4_830
	word32 a5_831
	word32 a6_1553
	word32 a1_1552
	branch mbedtls_mpi_cmp_mpi(a2_107, a4_109, a5_110, out a1_1552, out a2_828, out a3_829, out a4_830, out a5_831, out a6_1553) >= 0<32> l230934C6
l230934C6:
	word32 a0_841
	word32 a7_1557
	word32 s4_1558
	word32 s1_1555
	word32 a3_1556
	word32 s0_1554
	ra = mbedtls_mpi_sub_mpi(ra, s0_300, fp + -56<i32>, a3_829, a4_830, a5_831, s2_1018, mstatus, 1<32>, dwArg28, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_1554, out s1_1555, out a0_841, out a2_107, out a3_1556, out a4_109, out a5_110, out a7_1557, out s2_1018, out s3_11, out s4_1558, out s8)
	s0_300 = a0_841
	branch a0_841 == 0<32> l2309338A
l230934D6:
l23093396:
	word32 s4_1566
	word32 a7_1565
	word32 a6_1564
	word32 a3_1563
	word32 a1_1562
	word32 a0_1561
	word32 s1_1560
	word32 s0_1559
	ra = mbedtls_mpi_copy(ra, s2_1018, fp + -56<i32>, a2_828, a3_829, a4_830, a5_831, mstatus, 0<32>, dwArg58, dwArg98, dwArgD8, out s0_1559, out s1_1560, out a0_1561, out a1_1562, out a2_107, out a3_1563, out a4_109, out a5_110, out a6_1564, out a7_1565, out s2_1018, out s3_11, out s4_1566, out s8)
l230933CA:
	word32 a2_903
	word32 a5_904
	word32 a4_907
	word32 a6_1440
	word32 s4_1441
	word32 a3_1439
	word32 a0_1437
	word32 a1_1438
	mbedtls_mpi_free(fp + -128<i32>, a2_107, a4_109, a5_110, mstatus, dwArgB8, dwArgF8, out a0_1437, out a1_1438, out a2_903, out a3_1439, out a4_907, out a5_904, out a6_1440, out s4_1441)
	word32 a2_915
	word32 a5_916
	word32 a4_919
	word32 s4_1446
	word32 a3_1444
	word32 a6_1445
	word32 a0_1442
	word32 a1_1443
	mbedtls_mpi_free(fp + -116<i32>, a2_903, a4_907, a5_904, mstatus, dwArgB8, dwArgF8, out a0_1442, out a1_1443, out a2_915, out a3_1444, out a4_919, out a5_916, out a6_1445, out s4_1446)
	word32 a2_927
	word32 a5_928
	word32 a4_931
	word32 a1_1448
	word32 a6_1450
	word32 a3_1449
	word32 a0_1447
	word32 s4_1451
	mbedtls_mpi_free(fp + -104<i32>, a2_915, a4_919, a5_916, mstatus, dwArgB8, dwArgF8, out a0_1447, out a1_1448, out a2_927, out a3_1449, out a4_931, out a5_928, out a6_1450, out s4_1451)
	word32 a2_939
	word32 a5_940
	word32 a4_943
	word32 a1_1453
	word32 a0_1452
	word32 a3_1454
	word32 s4_1456
	word32 a6_1455
	mbedtls_mpi_free(fp + -92<i32>, a2_927, a4_931, a5_928, mstatus, dwArgB8, dwArgF8, out a0_1452, out a1_1453, out a2_939, out a3_1454, out a4_943, out a5_940, out a6_1455, out s4_1456)
	word32 a2_951
	word32 a5_952
	word32 a4_955
	word32 a6_1460
	word32 a1_1458
	word32 a3_1459
	word32 s4_1461
	word32 a0_1457
	mbedtls_mpi_free(fp + -140<i32>, a2_939, a4_943, a5_940, mstatus, dwArgB8, dwArgF8, out a0_1457, out a1_1458, out a2_951, out a3_1459, out a4_955, out a5_952, out a6_1460, out s4_1461)
	word32 a2_963
	word32 a5_964
	word32 a4_967
	word32 a1_1463
	word32 a3_1464
	word32 s4_1466
	word32 a0_1462
	word32 a6_1465
	mbedtls_mpi_free(fp + -80<i32>, a2_951, a4_955, a5_952, mstatus, dwArgB8, dwArgF8, out a0_1462, out a1_1463, out a2_963, out a3_1464, out a4_967, out a5_964, out a6_1465, out s4_1466)
	word32 a2_975
	word32 a5_976
	word32 a4_979
	word32 a6_1470
	word32 a1_1468
	word32 a3_1469
	word32 s4_1471
	word32 a0_1467
	mbedtls_mpi_free(fp + -68<i32>, a2_963, a4_967, a5_964, mstatus, dwArgB8, dwArgF8, out a0_1467, out a1_1468, out a2_975, out a3_1469, out a4_979, out a5_976, out a6_1470, out s4_1471)
	word32 a2_987
	word32 a5_988
	word32 a4_991
	word32 a1_1473
	word32 a3_1474
	word32 a6_1475
	word32 s4_1476
	word32 a0_1472
	mbedtls_mpi_free(fp + -56<i32>, a2_975, a4_979, a5_976, mstatus, dwArgB8, dwArgF8, out a0_1472, out a1_1473, out a2_987, out a3_1474, out a4_991, out a5_988, out a6_1475, out s4_1476)
	word32 a6_1480
	word32 a4_1479
	word32 a0_1477
	word32 a1_1478
	s1_1005 = mbedtls_mpi_free(fp + -44<i32>, a2_987, a4_991, a5_988, mstatus, dwArgB8, dwArgF8, out a0_1477, out a1_1478, out a2_1306, out a3_1002, out a4_1479, out a5_1000, out a6_1480, out s4)
l23093400:
	s1Out = s1_1005
	a0Out = dwLoc8C
	a2Out = a2_1306
	a3Out = a3_1002
	a4Out = dwLoc70
	a5Out = a5_1000
	s2Out = s2_1018
	s3Out = s3_11
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
mbedtls_mpi_inv_mod_exit:


word32 mbedtls_cipher_get_block_size(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_update
//      mbedtls_cipher_finish
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_cipher_get_block_size_entry:
l230934D8:
	branch a0 == 0<32> l230934E4
l230934E4:
l230934DA:
	branch a5 == 0<32> l230934E6
l230934E6:
	a5Out = a5
	return <invalid>
l230934E0:
	a5Out = Mem0[0x14<32>:word32]
	return <invalid>
mbedtls_cipher_get_block_size_exit:


void add_pkcs_padding(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a1 a4 a5
// Preserved: sp
add_pkcs_padding_entry:
l230934E8:
	word32 a1_5 = a1 - a2
	word32 a5_15 = 0<32>
l230934EC:
	branch a5_15 <u a1_5 l230934F2
l230934F2:
	Mem14[a0 + a5_15 + a2:byte] = SLICE(a1_5, byte, 0)
	a5_15 = a5_15 + 1<32> & 255<i32>
l230934F0:
	return
add_pkcs_padding_exit:


void get_pkcs_padding(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 a6 a7
// Preserved: sp
get_pkcs_padding_entry:
l23093504:
	branch a0 == 0<32> l23093550
l23093506:
	branch a2 == 0<32> l23093550
l23093550:
	return
l23093508:
	word32 a6_10 = CONVERT(Mem0[a0 + a1 + -1<i32>:byte], byte, word32)
	word32 a7_12 = a1 - a6_10
	Mem15[a2:word32] = a7_12
	word32 a5_14 = CONVERT(a1 <u a6_10, bool, word32) | CONVERT(a6_10 <u 1<i32>, bool, word32)
	word32 a4_16 = 0<32>
l23093524:
	branch a4_16 != a1 l2309352E
l2309352E:
	a4_16 = a4_16 + 1<32>
	a5_14 = (a5_14 | (CONVERT(a4_16 <u a7_12, bool, word32) ^ 1<i32>) + (a6_10 ^ CONVERT(Mem15[a0 + a4_16:byte], byte, word32))) & 255<i32>
l23093528:
	branch a5_14 != 0<32> l23093558
l23093558:
	return
l2309352A:
	return
get_pkcs_padding_exit:


void add_zeros_padding(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a2 a5
// Preserved: sp
add_zeros_padding_entry:
l23093560:
	branch a2 <u a1 l23093566
l23093566:
	Mem7[a0 + a2:byte] = 0<8>
	a2 = a2 + 1<32>
l23093564:
	return
add_zeros_padding_exit:


void get_no_padding(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
get_no_padding_entry:
l23093572:
	branch a0 == 0<32> l2309357C
l23093574:
	branch a2 == 0<32> l2309357C
l2309357C:
	return
l23093576:
	Mem8[a1:word32] = a2
	return
get_no_padding_exit:


void get_zeros_padding(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
get_zeros_padding_entry:
l23093584:
	branch a0 == 0<32> l230935B8
l23093586:
	branch a2 == 0<32> l230935B8
l230935B8:
	return
l23093588:
	Mem7[a2:word32] = 0<32>
	word32 a5_16 = 0<32>
l2309358E:
	branch a1 != 0<32> l23093594
l23093594:
	word32 a3_10 = a1 + -1<i32>
	word32 a4_17 = CONVERT(CONVERT(Mem13[a0 + a3_10:byte], byte, word32) != 0<32>, bool, word32) | a5_16
	Mem22[(a5_16 ^ a4_17) + a1 | a1:word32] = Mem13[a1:word32]
	a1 = a3_10
	a5_16 = a4_17
l23093590:
	return
get_zeros_padding_exit:


word32 mbedtls_cipher_info_from_type(word32 a0, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_derive_keys
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a3 a5
// Preserved: sp
mbedtls_cipher_info_from_type_entry:
l230935C0:
l230935C8:
	word32 a5_7 = Mem0[a4 + 4<i32>:word32]
	branch a4 != 0<32> l230935D0
l230935D0:
	branch CONVERT(Mem0[a5_7:byte], byte, word32) == a0 l230935CC
l230935D8:
l230935CC:
	a5Out = a5_7
	return a4
mbedtls_cipher_info_from_type_exit:


word32 mbedtls_cipher_info_from_values(word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_gcm_setkey
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut: a0 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
mbedtls_cipher_info_from_values_entry:
l230935DC:
l230935E4:
	word32 a4_7 = Mem0[a5 + 4<i32>:word32]
	branch a5 != 0<32> l230935EC
l230935EC:
	a5 = Mem0[a3 + 24<i32>:word32]
	a3 = CONVERT(Mem0[a3:byte], byte, word32)
	branch a3 != a0 l23093604
l230935F6:
	a5 = Mem0[a3 + 4<i32>:word32]
	branch a3 != a1 l23093604
l230935FC:
	a3 = CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32)
	branch a3 == a2 l230935E8
l23093604:
l230935E8:
	a4Out = a4_7
	return a5
mbedtls_cipher_info_from_values_exit:


word32 mbedtls_cipher_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_setup
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_cipher_init_entry:
l23093608:
l2309360E_thunk_memset:
	word32 t1_16
	word32 a0_17
	word32 a1_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	return memset(ra, a0, 0<32>, 64<i32>, out t1_16, out a0_17, out a1_18, out a2_19, out a3_20, out a4_21, out a5_22)
mbedtls_cipher_init_exit:


word32 mbedtls_cipher_free(word32 ra, word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_transform_free
//      mbedtls_gcm_setkey
//      mbedtls_gcm_free
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a2 a5
// Trashed: a0 a2 a5
// Preserved: ra s0 sp
mbedtls_cipher_free_entry:
l23093612:
	branch a0 == 0<32> l23093640
l23093640:
	a5Out = a5
	return a2
l23093614:
	word32 s0_17 = a0
	word32 a0_10 = Mem8[a0 + 60<i32>:word32]
	branch a0_10 == 0<32> l23093628
l23093620:
	word32 a5_14 = Mem8[Mem8[a5 + 24<i32>:word32] + 32<i32>:word32]
	word32 a2_20
	call a5_14 (retsize: 0;)
		uses: a0:a0_10,a2:a2_20,a5:a5_14,ra:ra,s0:Mem8[a5:word32]
		defs: a2:a2_20,s0:s0_17
l23093628:
	word32 a5_22 = s0_17 + 64<i32>
l2309362C:
	branch s0_17 != a5_22 l23093638
l23093638:
	Mem25[s0_17:byte] = 0<8>
	s0_17 = s0_17 + 1<32>
l23093630:
	a5Out = a5_22
	return dwArg10
mbedtls_cipher_free_exit:


word32 mbedtls_cipher_setkey(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_derive_keys
//      mbedtls_gcm_setkey
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a2 a3 a4 a5 t1
// Preserved: sp
mbedtls_cipher_setkey_entry:
l23093642:
	branch a0 == 0<32> l23093680
l23093644:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23093680
l23093648:
	a5 = Mem0[a4 + 16<i32>:word32]
	a4 = a4 & 2<32>
	branch (a4 & 2<32>) != 0<32> l23093654
l2309364E:
	a5 = Mem0[(a4 & 2<32>) + 4<i32>:word32]
	branch (a4 & 2<32>) != a2 l23093680
l23093654:
	word32 a5_25
	word32 t1_26
	Mem14[a2 + 4<i32>:word32] = a0_6
	Mem17[a0_6 + 8<i32>:byte] = SLICE(a3, byte, 0)
	a4 = 1<32>
	branch a3 == 1<32> l2309366C
l23093660:
	a4 = CONVERT(Mem17[a5 + 1<i32>:byte], byte, word32) + 0xFFFFFFFD<32> & 253<i32>
	branch a4 != 0<32> l23093676
l23093676:
	branch a3 != 0<32> l23093680
l23093680:
	a4Out = a4
	a5Out = a5
	return 0xF9FFFF00<32>
l23093678:
	a5_25 = Mem17[a5 + 24<i32>:word32]
	t1_26 = Mem17[a5_25 + 24<i32>:int32]
l2309366C:
	a5_25 = Mem17[a5 + 24<i32>:word32]
	t1_26 = Mem17[a5_25 + 20<i32>:int32]
l23093672:
	word32 a0_47
	word32 a5_48
	word32 a4_49
	word32 t1_52
	call t1_26 (retsize: 0;)
		uses: a0:Mem17[a0_6 + 60<i32>:word32],a2:a2,a3:a3,a4:a4_37,a5:a5_36,t1:t1_52
		defs: a0:a0_47,a4:a4_49,a5:a5_48,t1:t1_52
	a4Out = a4_49
	a5Out = a5_48
	return a0_47
mbedtls_cipher_setkey_exit:


word32 mbedtls_cipher_set_iv(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_crypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a1 a3 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_cipher_set_iv_entry:
l23093688:
	branch a0 == 0<32> l230936C8
l230936C8:
	a0Out = 0xF9FFFF00<32>
	a1Out = a1
	a3Out = a3
	a5Out = a5
	return s1
l2309368A:
	word32 a0_21
	word32 a0_14 = Mem12[a5:word32]
	branch a5 == 0<32> l230936D8
l23093698:
	branch a1 == 0<32> l230936D8
l2309369A:
	word32 s0_19 = a2
	branch a2 >u 0x10<32> l230936D0
l230936D0:
	a0_21 = 0xF9FFFF80<32>
l230936A2:
	word32 a5_22 = Mem12[0x20<32>:word32]
	branch false l230936B0
l230936A8:
	a5 = Mem12[a5_22 + 12<i32>:word32]
	branch a2 <u a5 l230936D8
l230936D8:
	a0_21 = 0xF9FFFF00<32>
l230936AE:
	s0_19 = a5
l230936B0:
	word32 a6_133
	word32 a7_134
	word32 a4_132
	word32 a2_131
	memcpy(a0_14 + 40<i32>, a1, s0_19, out a1, out a2_131, out a3, out a4_132, out a5, out a6_133, out a7_134)
	Mem47[s0_19 + 56<i32>:word32] = a0_14
	a0_21 = 0<32>
l230936BE:
	a0Out = a0_21
	a1Out = a1
	a3Out = a3
	a5Out = a5
	return a0_14
mbedtls_cipher_set_iv_exit:


word32 mbedtls_cipher_reset(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_crypt
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
mbedtls_cipher_reset_entry:
l230936E0:
	branch a0 == 0<32> l230936EE
l230936E2:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l230936EE
l230936EE:
	return 0xF9FFFF00<32>
l230936E6:
	Mem9[a0_6 + 36<i32>:word32] = 0<32>
	return 0<32>
mbedtls_cipher_reset_exit:


word32 mbedtls_cipher_update(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s5, word32 s7, word32 dwArg38, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_crypt
//      mbedtls_gcm_setkey
//      mbedtls_gcm_starts
//      mbedtls_gcm_update
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_cipher_update_entry:
l230936F6:
	branch a0 != 0<32> l2309371C
l2309371C:
	word32 s5_114
	word32 a0_107
	word32 a0_24 = Mem22[a5:word32]
	s5_114 = s5
	branch a5 == 0<32> l23093700
l23093736:
	s5_114 = a4
	branch a4 == 0<32> l23093700
l2309373A:
	Mem28[a4:word32] = 0<32>
	word32 a5_708
	word32 a0_35 = mbedtls_cipher_get_block_size(a0_24, a5, out a5_708)
	s6 = a3
	word32 s4_203 = a1
	s1 = a2
	word32 s0_173 = Mem28[a4:word32]
	a3 = 1<32>
	s2 = a0_35
	a5 = CONVERT(Mem28[a4 + 1<i32>:byte], byte, word32)
	branch a5 != 1<32> l23093786
l23093786:
	a3 = 6<32>
	branch a5 != 6<32> l230937B0
l230937B0:
	branch a0_35 == 0<32> l230938FA
l230938FA:
	a0_107 = 0xF9FFFC80<32>
l230937B4:
	branch a1 != a3 l230937C2
l230937B8:
	s0_173 = Mem28[0x2A<32>:word32]
	branch true l23093700
l230937BC:
	a3 = a2 & a0_35
	branch a3 != 0<32> l23093700
l23093700:
	a0_107 = 0xF9FFFF00<32>
l230937C2:
	a3 = 2<32>
	branch a5 != 2<32> l230938A6
l230938A6:
	branch a5 != 3<32> l230938CE
l230938CE:
	a3 = 5<32>
	branch a5 != 5<32> l23093902
l23093902:
	a0_107 = 0xF9FFFF80<32>
l230938D4:
	word32 s0_57 = Mem28[a0_35 + 60<i32>:word32]
	word32 tp_90
	word32 t3_91
	word32 t1_92
	word32 s8_94
	word32 t6_436
	word32 t5_435
	word32 t0_433
	word32 t4_434
	call Mem28[a5 + 16<i32>:int32] (retsize: 0;)
		uses: a0:a0_35,a1:a2,a2:s0_57 + 36<i32>,a3:s0_57 + 40<i32>,a4:s0_57 + 20<i32>,a5:a1,a6:a3,a7:a7_95,ra:ra,s0:s0_57,s1:a2,s2:a0_35,s3:s3,s4:a1,s5:a4,s6:a3,s7:s7,s8:s8_94,Stack +0068:dwArg38,Stack +00A8:dwArg78,Stack +00C8:dwArg98,Stack +00E8:dwArgB8,Stack +0114:dwArgE4,Stack +0130:dwArg0100,Stack +0134:dwArg0104,Stack +0158:dwArg0128,t0:t0_433,t1:t1_92,t3:t3_91,t4:t4_434,t5:t5_435,t6:t6_436,tp:tp_90
		defs: a0:a0_75,a1:a1_88,a3:a3_87,a5:a5_85,a7:a7_95,ra:ra_77,s1:s1_78,s2:s2_79,s3:s3_80,s5:s5_82,s6:s6_83,s7:s7_84,s8:s8_94,t0:t0_433,t1:t1_92,t3:t3_91,t4:t4_434,t5:t5_435,t6:t6_436,tp:tp_90
l230938AC:
	word32 s0_99 = Mem28[a0_35 + 60<i32>:word32]
	word32 tp_122
	word32 t3_123
	word32 t1_124
	word32 s8_126
	word32 t6_440
	word32 t5_439
	word32 t4_438
	word32 t0_437
	call Mem28[a5 + 12<i32>:int32] (retsize: 0;)
		uses: a0:a0_35,a1:CONVERT(Mem28[s0_97 + 8<i32>:int8], int8, int32),a2:a2,a3:s0_99 + 36<i32>,a4:s0_99 + 40<i32>,a5:a1,a6:a3,a7:a7_127,ra:ra,s0:s0_99,s1:a2,s2:a0_35,s3:s3,s4:a1,s5:a4,s6:a3,s7:s7,s8:s8_126,Stack +0068:dwArg38,Stack +00A8:dwArg78,Stack +00C8:dwArg98,Stack +00E8:dwArgB8,Stack +0114:dwArgE4,Stack +0130:dwArg0100,Stack +0134:dwArg0104,Stack +0158:dwArg0128,t0:t0_437,t1:t1_124,t3:t3_123,t4:t4_438,t5:t5_439,t6:t6_440,tp:tp_122
		defs: a0:a0_107,a1:a1_120,a3:a3_119,a5:a5_117,a7:a7_127,ra:ra_109,s1:s1_110,s2:s2_111,s3:s3_112,s5:s5_114,s6:s6_115,s7:s7_116,s8:s8_126,t0:t0_437,t1:t1_124,t3:t3_123,t4:t4_438,t5:t5_439,t6:t6_440,tp:tp_122
l230938C8:
	branch a0_107 != 0<32> l23093706
l230938CC:
l230937C8:
	a5 = CONVERT(Mem28[s0_173 + 8<i32>:int8], int8, int32)
	s3 = Mem28[s0_173 + 36<i32>:int32]
	branch a5 != 0<32> l230937F2
l230937F2:
	branch a5 != 1<32> l23093800
l230937F8:
	a5 = a0_35 - s3
	branch a2 <u a5 l230937DA
l230937D2:
	a5 = a0_35 - s3
	branch a5 <u a2 l23093800
l23093800:
	branch s3 == 0<32> l2309384E
l23093804:
	word32 s7_136 = a0_35 - s3
	word32 a0_142 = s3 + 20<i32> + s0_173
	word32 a5_144
	word32 a1_712
	word32 a4_715
	word32 a6_716
	word32 a7_717
	word32 a2_713
	word32 a3_714
	memcpy(a0_142, a1, s7_136, out a1_712, out a2_713, out a3_714, out a4_715, out a5_144, out a6_716, out a7_717)
	word32 s0_159 = Mem28[a0_142 + 60<i32>:word32]
	word32 s4_178
	word32 tp_187
	word32 t3_188
	word32 t1_189
	word32 a6_190
	word32 s8_191
	word32 t0_193
	word32 t4_194
	word32 t5_195
	word32 t6_196
	call Mem28[Mem28[a5_144 + 24<i32>:word32] + 8<i32>:int32] (retsize: 0;)
		uses: a0:a0_142,a1:CONVERT(Mem28[Mem28[a5_144:word32] + 8<i32>:int8], int8, int32),a2:a0_35,a3:s0_159 + 40<i32>,a4:s0_159 + 20<i32>,a5:a3,a6:a6_190,a7:a7_192,ra:ra,s0:s0_159,s1:a2,s2:a0_35,s3:s3_130,s4:a1,s5:a4,s6:a3,s7:s7_136,s8:s8_191,Stack +0068:dwArg38,Stack +00A8:dwArg78,Stack +00C8:dwArg98,Stack +00E8:dwArgB8,Stack +0114:dwArgE4,Stack +0130:dwArg0100,Stack +0134:dwArg0104,Stack +0158:dwArg0128,t0:t0_193,t1:t1_189,t3:t3_188,t4:t4_194,t5:t5_195,t6:t6_196,tp:tp_187
		defs: a0:a0_172,a1:a1_185,a3:a3_184,a5:a5_182,a6:a6_190,a7:a7_192,ra:ra_174,s0:s0_173,s1:s1_175,s2:s2_176,s3:s3_177,s4:s4_178,s5:s5_179,s6:s6_180,s7:s7_181,s8:s8_191,t0:t0_193,t1:t1_189,t3:t3_188,t4:t4_194,t5:t5_195,t6:t6_196,tp:tp_187
	branch a0_107 != 0<32> l23093706
l23093836:
	a5 = Mem28[s5_114:int32] + s2
	Mem201[s5_114:word32] = a5
	Mem202[s0_173 + 36<i32>:word32] = 0<32>
	s6 = s6 + s2
	s4_203 = s4_178 + s7
	s1 = s1 + s3 - s2
l2309384E:
	branch s1 == 0<32> l230937EE
l23093850:
	word32 s3_207 = s1 & s2
	branch s3_207 != 0<32> l23093860
l23093858:
	branch CONVERT(Mem209[s0_173 + 8<i32>:int8], int8, int32) != 0<32> l23093860
l2309385E:
	s3_207 = s2
l23093860:
	s1 = s1 - s3_207
	word32 a0_220 = s0_173 + 20<i32>
	word32 a4_719
	word32 a6_720
	word32 a2_718
	memcpy(a0_220, s4_203 + s1, s3_207, out a1, out a2_718, out a3, out a4_719, out a5, out a6_720, out a7)
	s3 = s3_207 + a5
	Mem237[Mem209[a5 + 36<i32>:word32] + 36<i32>:word32] = s3
	branch s1 == 0<32> l230937EE
l2309387C:
	word32 s0_240 = Mem237[a0_220 + 60<i32>:word32]
	word32 tp_275
	word32 t3_276
	word32 t1_277
	word32 a6_278
	word32 s8_279
	word32 t0_281
	word32 t4_282
	word32 t5_283
	word32 t6_284
	call Mem237[Mem237[a5 + 24<i32>:word32] + 8<i32>:int32] (retsize: 0;)
		uses: a0:a0_220,a1:CONVERT(Mem237[Mem237[a5_222:word32] + 8<i32>:int8], int8, int32),a2:s1_214,a3:s0_240 + 40<i32>,a4:s4_217,a5:s6_247,a6:a6_278,a7:a7_280,ra:ra_250,s0:s0_240,s1:s1_214,s2:s2_206,s3:s3_236,s4:s4_217,s5:s5_253,s6:s6_247,s7:s7_255,s8:s8_279,Stack +0038:dwArg38,Stack +0078:dwArg78,Stack +0098:dwArg98,Stack +00B8:dwArgB8,Stack +00E4:dwArgE4,Stack +0100:dwArg0100,Stack +0104:dwArg0104,Stack +0128:dwArg0128,t0:t0_281,t1:t1_277,t3:t3_276,t4:t4_282,t5:t5_283,t6:t6_284,tp:tp_275
		defs: a0:a0_260,a1:a1_273,a3:a3_272,a5:a5_270,a6:a6_278,a7:a7_280,ra:ra_262,s1:s1_263,s2:s2_264,s3:s3_265,s5:s5_267,s6:s6_268,s7:s7_269,s8:s8_279,t0:t0_281,t1:t1_277,t3:t3_276,t4:t4_282,t5:t5_283,t6:t6_284,tp:tp_275
	branch a0_107 != 0<32> l23093706
l2309389A:
	a5 = Mem237[s5_114:int32]
	s1 = s1 + a5
l230938A0:
	Mem291[s5_114:word32] = s1
l230937DA:
	word32 a6_711
	word32 a2_709
	word32 a4_710
	memcpy(s3 + 20<i32> + s0_173, a1, a2, out a1, out a2_709, out a3, out a4_710, out a5, out a6_711, out a7)
	s1 = a2 + a5
	Mem316[s1 + 36<i32>:word32] = Mem28[a5 + 36<i32>:word32]
l230937EE:
	a0_107 = 0<32>
l2309378C:
	Mem318[a4:word32] = a2
	0<32> = dwArg0128
l230937AC_thunk_mbedtls_gcm_update:
	word32 a0_333
	word32 s0_334
	word32 s1_336
	word32 s2_337
	word32 s3_338
	word32 s4_339
	word32 s5_340
	word32 s6_341
	word32 s7_342
	word32 a5_343
	word32 a3_345
	word32 a1_346
	word32 s8_352
	word32 a7_353
	word32 ra_335 = mbedtls_gcm_update(a0_35, a2, dwArg78, a3, out s0_334, out s1_336, out a0_333, out a1_346, out a3_345, out a5_343, out a7_353, out s2_337, out s3_338, out s4_339, out s5_340, out s6_341, out s7_342, out s8_352)
	s0Out = s0_334
	s1Out = s1_336
	a0Out = a0_333
	a1Out = a1_346
	a3Out = a3_345
	a5Out = a5_343
	a7Out = a7_353
	s2Out = s2_337
	s3Out = s3_338
	s4Out = s4_339
	s5Out = s5_340
	s6Out = s6_341
	s7Out = s7_342
	s8Out = s8_352
	return ra_335
l23093756:
	branch a0_35 != a2 l230938F2
l230938F2:
	a0_107 = 0xF9FFFD80<32>
l23093706:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a0Out = a0_107
	a1Out = a1
	a3Out = a3
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = dwArg78
	s5Out = s5_114
	s6Out = s6
	s7Out = s7
	s8Out = s5
	return ra
l2309375A:
	Mem379[a4:word32] = a0_35
	word32 a1_381 = CONVERT(Mem379[Mem379[a5:word32] + 8<i32>:int8], int8, int32)
	word32 a5_383 = Mem379[a5 + 24<i32>:word32]
	0<32> = dwArg0128
	word32 a0_397
	word32 s0_398
	word32 ra_399
	word32 s1_400
	word32 s2_401
	word32 s3_402
	word32 s4_403
	word32 s5_404
	word32 s6_405
	word32 s7_406
	word32 a5_407
	word32 a3_409
	word32 a1_410
	word32 t1_414
	word32 s8_416
	word32 a7_417
	word32 t0_418
	word32 t4_419
	word32 t5_420
	word32 t6_421
	call Mem379[a5_383 + 4<i32>:int32] (retsize: 0;)
		uses: a0:a0_35,a1:a1_381,a2:dwArg78,a3:a3,a4:a4,a5:a5_383,a6:dwArg98,a7:a7_417,ra:ra,s0:dwArgE4,s1:a2,s2:a0_35,s3:s3,s4:dwArg78,s5:a4,s6:a3,s7:s7,s8:s5,Stack +0038:dwArg38,Stack +0078:dwArg78,Stack +0098:dwArg98,Stack +00B8:dwArgB8,Stack +00E4:dwArgE4,Stack +0100:dwArg0100,Stack +0104:dwArg0104,Stack +0128:dwArg0128,t0:t0_418,t1:t1_414,t3:dwArg38,t4:t4_419,t5:t5_420,t6:t6_421,tp:dwArg0104
		defs: a0:a0_397,a1:a1_410,a3:a3_409,a5:a5_407,a7:a7_417,ra:ra_399,s0:s0_398,s1:s1_400,s2:s2_401,s3:s3_402,s4:s4_403,s5:s5_404,s6:s6_405,s7:s7_406,s8:s8_416,t0:t0_418,t1:t1_414,t4:t4_419,t5:t5_420,t6:t6_421
	s0Out = s0_398
	s1Out = s1_400
	a0Out = a0_397
	a1Out = a1_410
	a3Out = a3_409
	a5Out = a5_407
	a7Out = a7_417
	s2Out = s2_401
	s3Out = s3_402
	s4Out = s4_403
	s5Out = s5_404
	s6Out = s6_405
	s7Out = s7_406
	s8Out = s8_416
	return ra_399
l230936F8:
	s0Out = s0
	s1Out = s1
	a0Out = 0xF9FFFF00<32>
	a1Out = a1
	a3Out = a3
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	return ra
mbedtls_cipher_update_exit:


word32 mbedtls_cipher_finish(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_crypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
mbedtls_cipher_finish_entry:
l2309390A:
	word32 s0_115
	branch a0 == 0<32> l230939F6
l2309391A:
	s1 = Mem15[a5:word32]
	branch a5 == 0<32> l230939F6
l23093920:
	branch a2 == 0<32> l230939F6
l230939F6:
	s0_115 = 0xF9FFFF00<32>
l23093922:
	Mem23[a2:word32] = 0<32>
	word32 a0_25 = Mem23[a3:word32]
	a5 = 3<32>
	a4 = CONVERT(Mem23[a3 + 1<i32>:byte], byte, word32)
	branch a4 == 3<32> l230939EC
l23093932:
	a5 = a4 + -5<i32> & 255<i32>
	branch a5 <=u 2<32> l230939EC
l23093940:
	a5 = 1<32>
	branch a4 != 1<32> l23093954
l23093954:
	branch a4 != 2<32> l230939FE
l230939FE:
	s0_115 = 0xF9FFFF80<32>
l23093958:
	a4 = CONVERT(Mem23[a0_25 + 8<i32>:int8], int8, int32)
	s3 = a2
	word32 s4_37 = a1
	s2 = Mem23[a0_25 + 36<i32>:int32]
	branch a4 != 1<32> l230939DC
l230939DC:
	branch mbedtls_cipher_get_block_size(a0_25, 1<32>, out a5) == s2 l23093990
l230939E4:
	s1 = Mem23[a5 + 12<i32>:word32]
	branch a5 != 0<32> l2309394C
l230939E8:
	branch s2 != 0<32> l2309394C
l230939EC:
	s0_115 = 0<32>
l23093968:
	word32 a0_43 = Mem23[0xD<32>:word32]
	branch true l23093984
l23093984:
	word32 s1_44 = Mem23[a1 + 56<i32>:word32]
	branch a1 != 0<32> l2309398C
l2309398A:
	a3 = Mem23[a1 + 12<i32>:word32]
l2309398C:
	word32 a4_70
	word32 t1_75
	call 1<32> (retsize: 0;)
		uses: a0:a0_43 + 0x14<32>,a1:a1,a2:s2_38,a3:a3_56,a4:a4_70,a5:1<32>,ra:ra,s0:s0,s1:s1_44,s2:s2_38,s3:a2,s4:a1,t1:t1_75
		defs: a4:a4_70,a5:a5_67,ra:ra_60,s0:s0_61,s1:s1_62,s2:s2_63,s3:s3_64,s4:s4_65,t1:t1_75
l23093990:
	word32 a5_80
	word32 a0_79 = mbedtls_cipher_get_block_size(s1, a5, out a5_80)
	word32 s1_87 = Mem23[a0_79 + 60<i32>:word32]
	word32 sp_98
	word32 a0_105
	word32 t1_114
	call Mem23[Mem23[a5_80 + 24<i32>:word32] + 8<i32>:int32] (retsize: 0;)
		uses: a0:a0_79,a1:CONVERT(Mem23[Mem23[a5_80:word32] + 8<i32>:int8], int8, int32),a2:a0_79,a3:s1_87 + 40<i32>,a4:s1_87 + 20<i32>,a5:s4_91,ra:ra_93,s0:s0_94,s1:s1_87,s2:s2_95,s3:s3_96,s4:s4_91,t1:t1_114
		defs: a0:a0_105,a1:a1_111,a3:a3_108,a4:a4_109,a5:a5_106,ra:ra_99,s1:s1_101,s2:s2_102,s3:s3_103,sp:sp_98,t1:t1_114
	s0_115 = a0_105
	branch a0_105 != 0<32> l23093972
l230939B6:
	word32 a5_281
	word32 a0_117 = mbedtls_cipher_get_block_size(s1, a5, out a5_281)
	a5 = CONVERT(Mem23[s1 + 8<i32>:int8], int8, int32)
	a1 = a0_117
	branch a5 != 0<32> l230939F0
l230939F0:
	Mem121[s3:word32] = a0_117
l230939C4:
	word32 s4_125 = Mem23[sp_98 + 36<i32>:word32]
	word32 ra_132
	word32 s1_134
	word32 s2_135
	word32 s3_136
	word32 s4_137
	word32 a0_138
	word32 a5_139
	word32 a3_141
	word32 a4_142
	word32 a1_144
	word32 t1_147
	call Mem23[s1 + 16<i32>:int32] (retsize: 0;)
		uses: a0:s4_125,a1:a0_117,a2:Mem23[sp_98 + 104<i32>:word32],a3:a3_108,a4:a4_142,a5:a5_119,a6:Mem23[sp_98 + 72<i32>:word32],ra:ra_99,s0:Mem23[sp_98 + 136<i32>:word32],s1:s1_101,s2:s2_102,s3:s3_103,s4:s4_125,s8:Mem23[sp_98 + 4<i32>:word32],t1:t1_147,t3:Mem23[sp_98 + 32<i32>:word32]
		defs: a0:a0_138,a1:a1_144,a3:a3_141,a4:a4_142,a5:a5_139,ra:ra_132,s1:s1_134,s2:s2_135,s3:s3_136,s4:s4_137,t1:t1_147
	s1Out = s1_134
	a0Out = a0_138
	a1Out = a1_144
	a3Out = a3_141
	a4Out = a4_142
	a5Out = a5_139
	s2Out = s2_135
	s3Out = s3_136
	s4Out = s4_137
	return ra_132
l2309396C:
	s0_115 = 0<32>
	branch s2 != 0<32> l2309394C
l23093946:
	s0_115 = 0<32>
	branch false l23093972
l2309394C:
	s0_115 = 0xF9FFFD80<32>
l23093972:
	s1Out = s1
	a0Out = s0_115
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	return ra
mbedtls_cipher_finish_exit:


word32 mbedtls_cipher_set_padding_mode(word32 a0, word32 a1, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_derive_keys
//      mbedtls_cipher_setup
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
mbedtls_cipher_set_padding_mode_entry:
l23093A06:
	branch a0 == 0<32> l23093A5C
l23093A08:
	word32 a0_6 = Mem0[a5:word32]
	a4 = CONVERT(Mem0[a5 + 1<i32>:byte], byte, word32)
	a5 = 2<32>
	branch a4 != 2<32> l23093A5C
l23093A5C:
	a4Out = a4
	a5Out = a5
	return 0xF9FFFF00<32>
l23093A14:
	word32 a5_17
	branch a1 == 3<32> l23093A3A
l23093A3A:
	Mem15[0x2309356C<32>:word32] = a0_6
	a5_17 = 0x23093584<32>
l23093A1A:
	branch a1 == 4<32> l23093A4E
l23093A4E:
	Mem20[a0_6 + 12<i32>:word32] = 0<32>
	a5_17 = 0x23093572<32>
l23093A20:
	branch a1 != 0<32> l23093A64
l23093A64:
	a4Out = a4
	a5Out = 4<32>
	return 0xF9FFFF80<32>
l23093A22:
	Mem26[0x230934F4<32>:word32] = a0_6
	a5_17 = 0x23093504<32>
l23093A34:
	Mem31[a5_17 + 16<i32>:word32] = a0_6
	a4Out = a4
	a5Out = a5_17
	return 0<32>
mbedtls_cipher_set_padding_mode_exit:


word32 mbedtls_cipher_setup(word32 ra, word32 a0, word32 a1, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_derive_keys
//      mbedtls_gcm_setkey
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 a4 a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
mbedtls_cipher_setup_entry:
l23093A6C:
	branch a1 == 0<32> l23093AA6
l23093AA6:
	s1Out = s1
	a0Out = 0xF9FFFF00<32>
	a4Out = a4
	a5Out = a5
	return ra
l23093A6E:
	word32 a0_16
	branch a0 == 0<32> l23093AAE
l23093AAE:
	a0_16 = 0xF9FFFF00<32>
l23093A7A:
	word32 a0_20
	word32 a1_21
	word32 a5_25
	word32 s0_33
	word32 a0_36
	word32 a2_37
	word32 tp_39
	word32 a3_40
	word32 t0_42
	word32 t1_43
	call Mem12[a5_25 + 28<i32>:word32] (retsize: 0;)
		uses: a0:a0_20,a1:a1_21,a2:a2_37,a3:a3_40,a4:a4_41,a5:a5_38,ra:memset(ra, a0, 0<32>, 64<i32>, out t1_101, out a0_20, out a1_21, out a2_102, out a3_103, out a4_104, out a5_25),s0:a0,s1:Mem12[a5_25 + 24<i32>:word32],t0:t0_42,t1:t1_43,tp:tp_39
		defs: a0:a0_36,a2:a2_37,a3:a3_40,a4:a4_41,a5:a5_38,ra:ra_34,s0:s0_33,s1:s1_35,t0:t0_42,t1:t1_43,tp:tp_39
	Mem44[a0_36 + 60<i32>:word32] = s0_33
	branch a0_36 == 0<32> l23093AB6
l23093AB6:
	a0_16 = 0xF9FFFE80<32>
l23093A90:
	Mem47[s1:word32] = s0_33
	mbedtls_cipher_set_padding_mode(s0_33, 0<32>, a5, out a4, out a5)
	a0_16 = 0<32>
l23093A9C:
	s1Out = s1
	a0Out = a0_16
	a4Out = a4
	a5Out = a5
	return ra
mbedtls_cipher_setup_exit:


word32 mbedtls_cipher_crypt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s5, word32 s7, word32 dwArg08, word32 dwArg48, word32 dwArg68, word32 dwArg88, word32 dwArgB4, word32 dwArgD0, word32 dwArgD4, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_record
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +00B4:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a5 ra s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_cipher_crypt_entry:
l23093ABE:
	word32 s3_147 = a3
	word32 s4_148 = a4
	word32 s2_146 = a5
	word32 a5_100
	word32 a3_139
	word32 a1_138
	word32 a0_137
	word32 s1_145 = mbedtls_cipher_set_iv(a0, a1, a2, a5, out a0_137, out a1_138, out a3_139, out a5_100)
	branch a0_137 != 0<32> l23093B0A
l23093ADC:
	a0_137 = mbedtls_cipher_reset(s1_145, a5_100)
	branch a0_137 != 0<32> l23093B0A
l23093AE4:
	word32 s0_169
	word32 a7_170
	word32 s6_171
	word32 s7_172
	word32 s8_173
	ra = mbedtls_cipher_update(ra, s1_145, a3, a4, a5, a6, a5_100, a3, s5, s7, dwArg08, dwArg48, dwArg68, dwArg88, dwArgB4, dwArgD0, dwArgD4, dwArgF8, out s0_169, out s1_145, out a0_137, out a1_138, out a3_139, out a5_100, out a7_170, out s2_146, out s3_147, out s4_148, out s5, out s6_171, out s7_172, out s8_173)
	branch a0_137 != 0<32> l23093B0A
l23093AF4:
	word32 a4_90
	ra = mbedtls_cipher_finish(ra, Mem15[a1_138:word32], s1_145, a1_138 + s2_146, fp + -36<i32>, a3_139, a5_100, out s1_145, out a0_137, out a1_138, out a3_139, out a4_90, out a5_100, out s2_146, out s3_147, out s4_148)
	branch a0_137 != 0<32> l23093B0A
l23093B02:
	a5_100 = a5_100 + a4_90
	Mem101[a5_100:word32] = Mem15[a5_100:word32]
l23093B0A:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_145
	a0Out = a0_137
	a1Out = a1_138
	a2Out = dwArg0100
	a3Out = a3_139
	a5Out = a5_100
	s2Out = s2_146
	s3Out = s3_147
	s4Out = s4_148
	s5Out = s5
	return ra
mbedtls_cipher_crypt_exit:


word32 mbedtls_cipher_auth_encrypt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 a6, word32 s5, word32 t4, word32 dwArg38, word32 dwArg84, word32 dwArgA8, word32 dwArgAC, word32 dwArg0128, word32 dwArg0198, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_record
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a6:[0..31] ra:[0..31] s5:[0..31] Stack +0038:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +0128:[0..31] Stack +0198:[0..31] t4:[0..31]
// LiveOut: a0 a5 ra s0 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_cipher_auth_encrypt_entry:
l23093B1A:
	word32 t5_5 = Mem0[a0:int32]
	0<32> = dwArgAC
	branch CONVERT(Mem0[t5_5 + 1<i32>:byte], byte, word32) != 6<32> l23093B4E
l23093B4E:
	s0Out = dwArg08
	a0Out = 0xF9FFFF80<32>
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return ra
l23093B32:
	Mem17[t4:word32] = a6
	word32 a0_23 = Mem22[a0 + 60<i32>:word32]
l23093B4A_thunk_mbedtls_gcm_crypt_and_tag:
	word32 a0_36
	word32 a5_41
	word32 s0_45
	word32 s2_47
	word32 s3_48
	word32 s4_49
	word32 s5_50
	word32 s6_51
	word32 s1_117
	word32 ra_44 = mbedtls_gcm_crypt_and_tag(ra, a0_23, 1<32>, a1, a2, a4, s5, dwArg38, a6, dwArg84, dwArgA8, dwArg0128, dwArg0198, out s0_45, out s1_117, out a0_36, out a5_41, out s2_47, out s3_48, out s4_49, out s5_50, out s6_51)
	s0Out = s0_45
	a0Out = a0_36
	a5Out = a5_41
	s2Out = s2_47
	s3Out = s3_48
	s4Out = s4_49
	s5Out = s5_50
	s6Out = s6_51
	return ra_44
mbedtls_cipher_auth_encrypt_exit:


word32 mbedtls_cipher_auth_decrypt(word32 a0, word32 a1, word32 a2, word32 a4, word32 a6, word32 a7, word32 s5, word32 dwArg24, word32 dwArg48, word32 dwArgC8, word32 dwArg0138, word32 dwArg0154, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a6:[0..31] a7:[0..31] s5:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +00C8:[0..31] Stack +0138:[0..31] Stack +0154:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_cipher_auth_decrypt_entry:
l23093B56:
	branch CONVERT(Mem0[Mem0[a0:int32] + 1<i32>:byte], byte, word32) != 6<32> l23093B9C
l23093B9C:
	s0Out = s0
	s1Out = s1
	a0Out = 0xF9FFFF80<32>
	a5Out = a5
	s2Out = s2
	s3Out = s3
	return ra
l23093B64:
	0<32> = dwArg0154
	Mem25[a1:word32] = a6
	word32 s0_43
	word32 s1_44
	word32 s2_45
	word32 s3_46
	word32 a0_34
	word32 ra_42 = mbedtls_gcm_auth_decrypt(Mem28[a0 + 60<i32>:word32], a1, a2, a4, a7, s5, dwArg24, dwArg48, dwArgC8, dwArg0138, out s0_43, out s1_44, out a0_34, out s2_45, out s3_46)
	branch a0_34 != 0xFFFFFFEE<32> l23093B96
l23093B90:
	a0_34 = 0xF9FFFD00<32>
l23093B96:
	s0Out = s0_43
	s1Out = s1_44
	a0Out = a0_34
	a5Out = 0xFFFFFFEE<32>
	s2Out = s2_45
	s3Out = s3_46
	return ra_42
mbedtls_cipher_auth_decrypt_exit:


void gcm_ctx_free(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
gcm_ctx_free_entry:
l23093BA4:
	word32 a5_13 = mbedtls_gcm_free(ra, a0, a5)
l23093BB8_thunk_vPortFree:
	word32 s0_36
	word32 s1_37
	word32 a0_38
	word32 a1_39
	word32 a2_40
	word32 a3_41
	word32 a4_42
	word32 a5_43
	word32 a6_44
	word32 s4_45
	word32 t3_46
	vPortFree(a0, dwArg10, a5_13, mstatus, dwArg0158, dwArg0198, out s0_36, out s1_37, out a0_38, out a1_39, out a2_40, out a3_41, out a4_42, out a5_43, out a6_44, out s4_45, out t3_46)
	return
gcm_ctx_free_exit:


void gcm_ctx_alloc(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
gcm_ctx_alloc_entry:
l23093BBC:
	word32 s2_79
	word32 a5_78
	word32 a4_77
	word32 a3_76
	word32 a2_75
	word32 a1_74
	word32 s1_73
	word32 s0_72
	word32 s3_80
	word32 s4_81
	word32 s8_82
	word32 ra_21 = mycalloc(ra, s1, 1<32>, 392<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_72, out s1_73, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out s2_79, out s3_80, out s4_81, out s8_82)
	branch false l23093BD4
l23093BD0:
	mbedtls_gcm_init(ra_21, 1<32>)
l23093BD4:
	return
gcm_ctx_alloc_exit:


void gcm_aes_setkey_wrap(word32 ra, word32 s1, word32 a0, word32 a2, word32 a5, word32 s3, word32 s5, word32 s7, word32 dwArg38, word32 dwArg78, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
gcm_aes_setkey_wrap_entry:
l23093BDE:
l23093BE4_thunk_mbedtls_gcm_setkey:
	mbedtls_gcm_setkey(ra, s1, a0, 2<32>, a2, a5, s3, s5, s7, dwArg38, dwArg78, dwArgA4, dwArgC0, dwArgC4, dwArgE8)
	return
gcm_aes_setkey_wrap_exit:


void aes_ctx_free(word32 a0, word32 mstatus, word32 dwArg10, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
aes_ctx_free_entry:
l23093BE8:
	word32 a5_11 = mbedtls_aes_free(a0)
l23093BFC_thunk_vPortFree:
	word32 s0_34
	word32 s1_35
	word32 a0_36
	word32 a1_37
	word32 a2_38
	word32 a3_39
	word32 a4_40
	word32 a5_41
	word32 a6_42
	word32 s4_43
	word32 t3_44
	vPortFree(a0, dwArg10, a5_11, mstatus, dwArg0158, dwArg0198, out s0_34, out s1_35, out a0_36, out a1_37, out a2_38, out a3_39, out a4_40, out a5_41, out a6_42, out s4_43, out t3_44)
	return
aes_ctx_free_exit:


void aes_ctx_alloc(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
aes_ctx_alloc_entry:
l23093C00:
	word32 s2_79
	word32 a5_78
	word32 a4_77
	word32 a3_76
	word32 a2_75
	word32 a1_74
	word32 s1_73
	word32 s0_72
	word32 s3_80
	word32 s4_81
	word32 s8_82
	word32 ra_21 = mycalloc(ra, s1, 1<32>, 280<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_72, out s1_73, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out s2_79, out s3_80, out s4_81, out s8_82)
	branch false l23093C18
l23093C14:
	word32 a1_83
	word32 a4_84
	word32 a5_85
	mbedtls_aes_init(ra_21, 1<32>, out a1_83, out a4_84, out a5_85)
l23093C18:
	return
aes_ctx_alloc_exit:


void aes_setkey_dec_wrap(word32 ra, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
aes_setkey_dec_wrap_entry:
l23093C22:
l23093C22_thunk_mbedtls_aes_setkey_dec:
	mbedtls_aes_setkey_dec(ra, a1)
	return
aes_setkey_dec_wrap_exit:


void aes_setkey_enc_wrap(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 dwArg44, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] Stack +0044:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 s8 t3
// Preserved: sp
aes_setkey_enc_wrap_entry:
l23093C26:
l23093C26_thunk_mbedtls_aes_setkey_enc:
	word32 a0_23
	word32 a1_24
	word32 a3_25
	word32 a4_26
	word32 s4_27
	mbedtls_aes_setkey_enc(a0, a1, a2, a4, a5, dwArg44, dwArg0128, out a0_23, out a1_24, out a3_25, out a4_26, out s4_27)
	return
aes_setkey_enc_wrap_exit:


void aes_crypt_ctr_wrap(word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6, word32 dwArg0C, word32 dwArg74, word32 dwArgB4, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] s0:[0..31] Stack +000C:[0..31] Stack +0074:[0..31] Stack +00B4:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aes_crypt_ctr_wrap_entry:
l23093C2A:
l23093C2A_thunk_mbedtls_aes_crypt_ctr:
	mbedtls_aes_crypt_ctr(s0, a1, a3, a4, a5, a6, dwArg0C, dwArg74, dwArgB4, dwArg0118, dwArg0128)
	return
aes_crypt_ctr_wrap_exit:


void aes_crypt_cfb128_wrap(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 dwArg1C, word32 dwArgA8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] s0:[0..31] Stack +001C:[0..31] Stack +00A8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aes_crypt_cfb128_wrap_entry:
l23093C2E:
l23093C2E_thunk_mbedtls_aes_crypt_cfb128:
	mbedtls_aes_crypt_cfb128(s0, a1, a2, a3, a4, a5, a6, dwArg1C, dwArgA8, dwArg0128)
	return
aes_crypt_cfb128_wrap_exit:


void aes_crypt_cbc_wrap(word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArgF8, word32 dwArg0108, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aes_crypt_cbc_wrap_entry:
l23093C32:
l23093C32_thunk_mbedtls_aes_crypt_cbc:
	word32 s1_39
	word32 a1_40
	word32 a4_41
	word32 s7_42
	word32 s9_43
	word32 s10_44
	word32 s11_45
	mbedtls_aes_crypt_cbc(a1, a2, a3, a4, a5, dwArgF8, dwArg0108, dwArg0198, out s1_39, out a1_40, out a4_41, out s7_42, out s9_43, out s10_44, out s11_45)
	return
aes_crypt_cbc_wrap_exit:


void aes_crypt_ecb_wrap(word32 a1, word32 a2, word32 a3, word32 dwArg2C, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] Stack +002C:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
aes_crypt_ecb_wrap_entry:
l23093C36:
l23093C36_thunk_mbedtls_aes_crypt_ecb:
	word32 s1_37
	word32 s2_38
	word32 s3_39
	word32 s4_40
	word32 s5_41
	word32 s6_42
	word32 s7_43
	word32 s8_44
	word32 s9_45
	word32 s10_46
	word32 s11_47
	mbedtls_aes_crypt_ecb(a1, a2, a3, dwArg2C, dwArg0138, out s1_37, out s2_38, out s3_39, out s4_40, out s5_41, out s6_42, out s7_43, out s8_44, out s9_45, out s10_46, out s11_47)
	return
aes_crypt_ecb_wrap_exit:


word32 debug_send_line.isra.0(word32 a0, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_debug_print_msg
//      mbedtls_debug_print_ret
//      mbedtls_debug_print_buf
//      mbedtls_debug_print_mpi
//      mbedtls_debug_print_crt
// MayUse:  a0:[0..31]
// LiveOut: a0 t1
// Trashed: a0 t1
// Preserved: sp
debug_send_line.isra.0_entry:
l23093C3A:
	word32 t1_8
	word32 a0_9
	call Mem0[a0 + 16<i32>:int32] (retsize: 0;)
		uses: a0:Mem0[a0 + 20<i32>:word32]
		defs: a0:a0_9,t1:t1_8
	a0Out = a0_9
	return t1_8
debug_send_line.isra.0_exit:


word32 mbedtls_debug_print_mpi.part.1(word32 ra, word32 s1, word32 a1, ptr32 & a1Out, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_debug_print_mpi
// MayUse:  a1:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a0 a1 a2
// Trashed: a0 a1 a2 a3 a4 a5 a7 t0 t1 t3 t4
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_debug_print_mpi.part.1_entry:
l23093C42:
	word32 a5_32 = Mem29[Mem29[s1 + 4<i32>:word32] + 8<i32>:word32]
	word32 s1_43 = s1 + 0xFFFFFFFF<32>
l23093C8C:
	word32 a4_45 = s1_43 << 2<u32>
	branch s1_43 != 0<32> l23093D5C
l23093D5C:
	branch Mem29[a5_32 + a4_45:word32] != 0<32> l23093C92
l23093D64:
	s1_43 = s1_43 + 0xFFFFFFFF<32>
l23093C92:
	word32 a5_56 = 0x1F<32>
l23093C9A:
	branch (a1 >>u a5_56 & 1<32>) != 0<32> l23093CA8
l23093CA2:
	a5_56 = a5_56 + 0xFFFFFFFF<32>
	branch a5_56 != 0xFFFFFFFF<32> l23093C9A
l23093CA8:
	word32 s4_98
	word32 s10_634
	word32 s6_630
	word32 a5_626
	word32 a1_622
	word32 s11_635
	word32 s8_632
	word32 s7_631
	word32 s3_628
	word32 a7_627
	word32 a3_624
	word32 a2_623
	word32 s0_620
	word32 s9_633
	word32 s5_629
	word32 a4_625
	word32 a0_621
	word32 s1_119
	word32 s2_122
	word32 ra_153 = snprintf(ra, fp + -576<i32>, 512<i32>, 0x230C8954<32>, dwLoc0228, dwLoc0208, dwLoc01DC, dwLoc01C0, dwLoc01BC, dwLoc0198, dwLoc0174, out s0_620, out s1_119, out a0_621, out a1_622, out a2_623, out a3_624, out a4_625, out a5_626, out a7_627, out s2_122, out s3_628, out s4_98, out s5_629, out s6_630, out s7_631, out s8_632, out s9_633, out s10_634, out s11_635)
	word32 a0_636
	debug_send_line.isra.0(Mem29[s4_98:int32], out a0_636)
	word32 s0_114 = 0<32>
	word32 a4_115 = 1<32>
	word32 s9_116 = 0<32>
	word32 s8_117 = 512<i32>
l23093CDC:
	branch s1_119 != 0xFFFFFFFF<32> l23093D68
l23093D68:
	word32 s10_120 = s1_119 << 2<u32>
	branch a4_115 == 0<32> l23093D78
l23093D6E:
	branch Mem29[Mem29[s2_122 + 8<i32>:int32] + s10_120:word32] == 0<32> l23093DF0
l23093D78:
	word32 s3_127 = 0x18<32>
	word32 s11_128 = 0xFFFFFFF8<32>
l23093D7C:
	branch a4_115 == 0<32> l23093D90
l23093D7E:
	branch (Mem29[Mem29[s2_122 + 8<i32>:int32] + s10_120:word32] >>u s3_127 & 255<i32>) == 0<32> l23093DEA
l23093D90:
	branch (s9_116 & 15<i32>) != 0<32> l23093DC0
l23093D96:
	branch s9_116 == 0<32> l23093DC0
l23093D9A:
	word32 s4_169
	word32 s6_682
	word32 s7_683
	word32 s9_684
	word32 s10_685
	word32 s11_686
	word32 s0_670
	word32 s1_671
	word32 a7_678
	word32 s2_679
	word32 s3_680
	word32 s5_681
	word32 a0_672
	word32 a1_673
	word32 a2_674
	word32 a5_677
	word32 a3_675
	word32 a4_676
	ra_153 = snprintf(ra_153, fp + -576<i32> + s0_114, s8_117 - s0_114, 0x230C930C<32>, dwLoc0228, dwLoc0208, dwLoc01DC, dwLoc01C0, dwLoc01BC, dwLoc0198, dwLoc0174, out s0_670, out s1_671, out a0_672, out a1_673, out a2_674, out a3_675, out a4_676, out a5_677, out a7_678, out s2_679, out s3_680, out s4_169, out s5_681, out s6_682, out s7_683, out s8_117, out s9_684, out s10_685, out s11_686)
	word32 a0_687
	debug_send_line.isra.0(Mem29[s4_169:int32], out a0_687)
	s0_114 = 0<32>
l23093DC0:
	word32 a0_206
	word32 s0_214
	word32 s9_225
	word32 s4_694
	word32 s5_695
	word32 s6_696
	word32 s7_697
	word32 a3_690
	word32 a4_691
	word32 a5_692
	word32 a7_693
	word32 a2_689
	word32 a1_688
	ra_153 = snprintf(ra_153, fp + -576<i32> + s0_114, s8_117 - s0_114, 0x230BFCE8<32>, dwLoc0228, dwLoc0208, dwLoc01DC, dwLoc01C0, dwLoc01BC, dwLoc0198, dwLoc0174, out s0_214, out s1_119, out a0_206, out a1_688, out a2_689, out a3_690, out a4_691, out a5_692, out a7_693, out s2_122, out s3_127, out s4_694, out s5_695, out s6_696, out s7_697, out s8_117, out s9_225, out s10_120, out s11_128)
	s0_114 = s0_214 + a0_206
	s9_116 = s9_225 + 1<32>
	a4_115 = 0<32>
l23093DEA:
	s3_127 = s3_127 + 0xFFFFFFF8<32>
	branch s3_127 != s11_128 l23093D7C
l23093DF0:
	s1_119 = s1_119 + 0xFFFFFFFF<32>
l23093CE2:
	branch a4_115 == 0<32> l23093CFC
l23093CE4:
	word32 a1_638
	word32 a5_642
	word32 a0_255
	word32 s0_263
	word32 s2_644
	word32 a7_643
	word32 a3_640
	word32 a2_639
	word32 s4_646
	word32 s5_647
	word32 s6_648
	word32 s7_649
	word32 s8_650
	word32 s11_653
	word32 s9_651
	word32 s10_652
	word32 s3_645
	word32 a4_641
	word32 s1_637
	ra_153 = snprintf(ra_153, fp + -576<i32> + s0_114, 512<i32> - s0_114, 0x230C8974<32>, dwLoc0228, dwLoc0208, dwLoc01DC, dwLoc01C0, dwLoc01BC, dwLoc0198, dwLoc0174, out s0_263, out s1_637, out a0_255, out a1_638, out a2_639, out a3_640, out a4_641, out a5_642, out a7_643, out s2_644, out s3_645, out s4_646, out s5_647, out s6_648, out s7_649, out s8_650, out s9_651, out s10_652, out s11_653)
	s0_114 = s0_263 + a0_255
l23093CFC:
	word32 s4_302
	word32 s5_303
	word32 s6_304
	word32 a2_658
	word32 a3_659
	word32 s8_666
	word32 s9_667
	word32 s10_668
	word32 s11_669
	word32 a4_660
	word32 a5_661
	word32 a7_662
	word32 s7_665
	word32 s2_663
	word32 s3_664
	word32 s0_654
	word32 s1_655
	word32 a0_656
	word32 a1_657
	snprintf(ra_153, fp + -576<i32> + s0_114, 512<i32> - s0_114, 0x230C930C<32>, dwLoc0228, dwLoc0208, dwLoc01DC, dwLoc01C0, dwLoc01BC, dwLoc0198, dwLoc0174, out s0_654, out s1_655, out a0_656, out a1_657, out a2_658, out a3_659, out a4_660, out a5_661, out a7_662, out s2_663, out s3_664, out s4_302, out s5_303, out s6_304, out s7_665, out s8_666, out s9_667, out s10_668, out s11_669)
	word32 a0_316
	debug_send_line.isra.0(Mem29[s4_302:int32], out a0_316)
	a1Out = s5_303
	a2Out = s6_304
	return a0_316
mbedtls_debug_print_mpi.part.1_exit:


word32 mbedtls_debug_print_msg(word32 ra, word32 a0, word32 a1, word32 a4, word32 a5, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_swap_epochs
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      ssl_set_timer
//      ssl_check_timer
//      mbedtls_ssl_derive_keys
//      mbedtls_ssl_flush_output
//      mbedtls_ssl_send_flight_completed
//      mbedtls_ssl_optimize_checksum
//      mbedtls_ssl_get_record_expansion
//      mbedtls_ssl_handshake
//      ssl_handshake_wrapup_free_hs_transform
//      mbedtls_ssl_handshake_wrapup
//      mbedtls_ssl_setup
//      mbedtls_ssl_free
//      mbedtls_ssl_write_record
//      mbedtls_ssl_resend
//      mbedtls_ssl_fetch_input
//      mbedtls_ssl_prepare_handshake_record
//      mbedtls_ssl_handle_message_type
//      mbedtls_ssl_send_alert_message
//      mbedtls_ssl_write_certificate
//      mbedtls_ssl_write_change_cipher_spec
//      mbedtls_ssl_write_finished
//      mbedtls_ssl_write
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_read_record
//      mbedtls_ssl_parse_certificate
//      mbedtls_ssl_parse_change_cipher_spec
//      mbedtls_ssl_parse_finished
//      mbedtls_ssl_read
//      mbedtls_ssl_handshake_client_step
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 s10 s11 s4 s5 s6 s7 s8 s9 t4
// Trashed: a0 a1 a2 a3 a4 a5 a7 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: ra s0 s1 s2 s3 sp
mbedtls_debug_print_msg_entry:
l23093DF4:
	branch a0 == 0<32> l23093E6A
l23093E1A:
	a0 = Mem19[a5:word32]
	branch a5 == 0<32> l23093E6A
l23093E1E:
	a5 = Mem19[a5 + 16<i32>:word32]
	branch a5 == 0<32> l23093E6A
l23093E22:
	a5 = Mem19[0x4200ECE4<32>:int32]
	branch a5 < a1 l23093E6A
l23093E2E:
	word32 s1_44
	word32 s2_47
	word32 s3_48
	word32 t0_173
	word32 s0_174
	word32 a1_175
	word32 a2_176
	word32 a3_177
	word32 a4_178
	word32 a5_179
	word32 a0_38
	vsnprintf(ra, fp + -560<i32>, 512<i32>, a4, fp + -12<i32>, dwLoc01E8, dwLoc01C8, dwLoc019C, dwLoc0180, dwLoc017C, dwLoc0158, dwLoc0134, out t0_173, out s0_174, out s1_44, out a0_38, out a1_175, out a2_176, out a3_177, out a4_178, out a5_179, out a7, out s2_47, out s3_48, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4)
	a5 = 510<i32>
	branch a0_38 >u 510<i32> l23093E5C
l23093E4E:
	a0_38 = a0_38 + (fp + -48<i32>)
	Mem65[a0_38 + 3584<i32>:byte] = 0xA<8>
	Mem66[a0_38 + 3585<i32>:byte] = 0<8>
	a5 = 0xA<32>
l23093E5C:
	debug_send_line.isra.0(a0_38, out a0)
	a4 = fp + -560<i32>
	a3 = s3_48
	a2 = s2_47
	a1 = s1_44
l23093E6A:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	t4Out = t4
	return a0
mbedtls_debug_print_msg_exit:


word32 mbedtls_debug_print_ret(word32 ra, word32 a1, word32 a3, word32 a5, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_derive_keys
//      mbedtls_ssl_flush_output
//      mbedtls_ssl_write_record
//      mbedtls_ssl_resend
//      mbedtls_ssl_fetch_input
//      mbedtls_ssl_prepare_handshake_record
//      mbedtls_ssl_send_alert_message
//      mbedtls_ssl_write_certificate
//      mbedtls_ssl_write_change_cipher_spec
//      mbedtls_ssl_write_finished
//      mbedtls_ssl_write
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_read_record
//      mbedtls_ssl_parse_certificate
//      mbedtls_ssl_parse_change_cipher_spec
//      mbedtls_ssl_parse_finished
//      mbedtls_ssl_read
//      mbedtls_ssl_handshake_client_step
//      mbedtls_ssl_handshake_server_step
// MayUse:  a1:[0..31] a3:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s10 s11 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: ra s0 s1 s2 s3 sp
mbedtls_debug_print_ret_entry:
l23093E84:
	word32 a0_16 = Mem13[a3:word32]
	branch a3 == 0<32> l23093EEC
l23093EA2:
	a3 = Mem13[a3 + 16<i32>:word32]
	branch a3 == 0<32> l23093EEC
l23093EA6:
	a3 = Mem13[0x4200ECE4<32>:int32]
	branch a3 < a1 l23093EEC
l23093EB2:
	a3 = 0xF9000700<32>
	branch a5 == 0xF9000700<32> l23093EEC
l23093EBC:
	word32 a0_37
	word32 s1_46
	word32 s2_49
	word32 s3_50
	word32 s0_139
	word32 a1_140
	word32 a2_141
	word32 a3_142
	word32 a4_143
	word32 a7_144
	snprintf(ra, fp + -544<i32>, 512<i32>, 0x230C8978<32>, dwLoc0208, dwLoc01E8, dwLoc01BC, dwLoc01A0, dwLoc019C, dwLoc0178, dwLoc0154, out s0_139, out s1_46, out a0_37, out a1_140, out a2_141, out a3_142, out a4_143, out a5, out a7_144, out s2_49, out s3_50, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11)
	debug_send_line.isra.0(a0_37, out a0_16)
	a4 = fp + -544<i32>
	a3 = s3_50
	a2 = s2_49
	a1 = s1_46
l23093EEC:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return a0_16
mbedtls_debug_print_ret_exit:


word32 mbedtls_debug_print_buf(word32 ra, word32 a1, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      mbedtls_ssl_derive_keys
//      mbedtls_ssl_write_record
//      mbedtls_ssl_resend
//      mbedtls_ssl_prepare_handshake_record
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_handshake_client_step
//      mbedtls_ssl_handshake_server_step
// MayUse:  a1:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 t1
// Trashed: a0 a1 a2 a3 a4 a5 a7 t0 t1 t3 t4
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_debug_print_buf_entry:
l23093F06:
	word32 a0_211 = Mem31[a5:word32]
	branch a5 == 0<32> l23093FEA
l23093F44:
	a5 = Mem31[a5 + 16<i32>:word32]
	branch a5 == 0<32> l23093FEA
l23093F48:
	a5 = Mem31[0x4200ECE4<32>:int32]
	branch a5 < a1 l23093FEA
l23093F56:
	word32 a0_52
	word32 a1_560
	word32 s1_559
	word32 s5_568
	word32 s8_571
	word32 s9_572
	word32 s10_573
	word32 s11_574
	word32 s6_569
	word32 s7_570
	word32 a2_561
	word32 a5_564
	word32 s2_565
	word32 s3_566
	word32 s4_567
	word32 a3_562
	word32 a4_563
	word32 s0_101
	word32 ra_59 = snprintf(ra, fp + -576<i32>, 512<i32>, 0x230C88DC<32>, dwLoc0258, dwLoc0238, dwLoc020C, dwLoc01F0, dwLoc01EC, dwLoc01C8, dwLoc01A4, out s0_101, out s1_559, out a0_52, out a1_560, out a2_561, out a3_562, out a4_563, out a5_564, out a7, out s2_565, out s3_566, out s4_567, out s5_568, out s6_569, out s7_570, out s8_571, out s9_572, out s10_573, out s11_574)
	word32 a0_575
	debug_send_line.isra.0(a0_52, out a0_575)
	word32 ra_113 = memset(ra_59, fp + -596<i32>, 0<32>, 0x11<32>, out t1, out a0_211, out a1, out a2, out a3, out a4, out a5)
	word32 s7_106 = 0<32>
	word32 s8_100 = 0<32>
	word32 s6_108 = 512<i32>
	word32 s9_111 = 0x230C9000<32>
	word32 s10_180 = 0x230C0000<32>
l23093FA0:
	branch s8_100 != s0_101 l23094024
l23094024:
	word32 a5_102 = 0x1000000<32>
	branch s8_100 == 0x1000000<32> l23093FC0
l2309402A:
	branch (s8_100 & 15<i32>) != 0<32> l2309407E
l23094032:
	branch s8_100 == 0<32> l23094064
l23094036:
	word32 a0_115
	word32 s10_638
	word32 s11_639
	word32 s2_631
	word32 s5_634
	word32 s7_635
	word32 s8_636
	word32 s9_637
	word32 s3_632
	word32 s4_633
	word32 s1_624
	word32 a3_627
	word32 a4_628
	word32 a5_629
	word32 a7_630
	word32 a1_625
	word32 a2_626
	word32 s0_623
	word32 ra_122 = snprintf(ra_113, fp + -576<i32> + s7_106, s6_108 - s7_106, s9_111 + -1800<i32>, dwLoc0258, dwLoc0238, dwLoc020C, dwLoc01F0, dwLoc01EC, dwLoc01C8, dwLoc01A4, out s0_623, out s1_624, out a0_115, out a1_625, out a2_626, out a3_627, out a4_628, out a5_629, out a7_630, out s2_631, out s3_632, out s4_633, out s5_634, out s6_108, out s7_635, out s8_636, out s9_637, out s10_638, out s11_639)
	word32 a0_640
	debug_send_line.isra.0(a0_115, out a0_640)
	word32 a4_645
	word32 a5_646
	word32 a0_641
	word32 a1_642
	word32 a2_643
	word32 a3_644
	ra_113 = memset(ra_122, fp + -596<i32>, 0<32>, 0x11<32>, out t1, out a0_641, out a1_642, out a2_643, out a3_644, out a4_645, out a5_646)
	s7_106 = 0<32>
l23094064:
	word32 a0_170
	word32 s7_187
	word32 s2_617
	word32 s5_620
	word32 s9_621
	word32 s11_622
	word32 s3_618
	word32 s4_619
	word32 s0_610
	word32 a2_613
	word32 a3_614
	word32 a4_615
	word32 a7_616
	word32 s1_611
	word32 a1_612
	ra_113 = snprintf(ra_113, fp + -576<i32> + s7_106, s6_108 - s7_106, 0x230C8900<32>, dwLoc0258, dwLoc0238, dwLoc020C, dwLoc01F0, dwLoc01EC, dwLoc01C8, dwLoc01A4, out s0_610, out s1_611, out a0_170, out a1_612, out a2_613, out a3_614, out a4_615, out a5_102, out a7_616, out s2_617, out s3_618, out s4_619, out s5_620, out s6_108, out s7_187, out s8_100, out s9_621, out s10_180, out s11_622)
	s7_106 = s7_187 + a0_170
l2309407E:
	word32 a4_205 = a5_102 + s8_100
	word32 a4_215
	word32 s11_222
	word32 s3_224
	word32 s7_228
	word32 s8_229
	word32 s1_603
	word32 a5_606
	word32 s2_607
	word32 s4_608
	word32 s5_609
	word32 a2_604
	word32 a3_605
	ra_113 = snprintf(ra_113, fp + -576<i32> + s7_106, s6_108 - s7_106, s10_180 + -792<i32>, dwLoc0258, dwLoc0238, dwLoc020C, dwLoc01F0, a4_205, dwLoc01C8, dwLoc01A4, out s0_101, out s1_603, out a0_211, out a1, out a2_604, out a3_605, out a4_215, out a5_606, out a7, out s2_607, out s3_224, out s4_608, out s5_609, out s6_108, out s7_228, out s8_229, out s9_111, out s10_180, out s11_222)
	a4 = CONVERT(Mem209[a4_215:byte], byte, word32)
	dwLoc01EC = a4_205
	a2 = dwLoc01AC
	s7_106 = s7_228 + a0_211
	a3 = a4 + -32<i32> & 255<i32>
	branch s11_222 >=u a3 l230940B4
l230940B0:
	a4 = 46<i32>
l230940B4:
	Mem245[s3_224 + (fp + -64<i32>) + 3564<i32>:byte] = SLICE(a4, byte, 0)
	a5 = fp + -64<i32>
	s8_100 = s8_229 + 1<32>
l23093FA4:
	branch s0_101 == 0<32> l23093FEA
l23093FA6:
	word32 s3_248 = 512<i32>
	word32 s6_249 = 0x230BF000<32>
l23093FAE:
	word32 a0_255 = fp + -576<i32> + s7_106
	word32 a1_257 = s3_248 - s7_106
	branch (s0_101 & 15<i32>) != 0<32> l230940C0
l230940C0:
	word32 a0_262
	word32 s0_270
	word32 s7_279
	word32 s11_589
	word32 a7_582
	word32 s5_585
	word32 s8_586
	word32 s9_587
	word32 s10_588
	word32 s2_583
	word32 s4_584
	word32 a2_578
	word32 a3_579
	word32 a4_580
	word32 a5_581
	word32 s1_576
	word32 a1_577
	ra_113 = snprintf(ra_113, a0_255, a1_257, s6_249 + -672<i32>, dwLoc0258, dwLoc0238, dwLoc020C, dwLoc01F0, dwLoc01EC, dwLoc01C8, dwLoc01A4, out s0_270, out s1_576, out a0_262, out a1_577, out a2_578, out a3_579, out a4_580, out a5_581, out a7_582, out s2_583, out s3_248, out s4_584, out s5_585, out s6_249, out s7_279, out s8_586, out s9_587, out s10_588, out s11_589)
	s7_106 = s7_279 + a0_262
	s0_101 = s0_270 + 1<32>
l23093FC0:
	word32 a0_298
	word32 s2_310
	word32 s4_312
	word32 s5_313
	word32 s3_596
	word32 s8_599
	word32 s9_600
	word32 s10_601
	word32 s11_602
	word32 s6_597
	word32 s7_598
	word32 a1_592
	word32 a2_593
	word32 a3_594
	word32 a4_595
	word32 s0_590
	word32 s1_591
	snprintf(ra_113, fp + -576<i32> + s7_106, 512<i32> - s7_106, 0x230C88F8<32>, dwLoc0258, dwLoc0238, dwLoc020C, dwLoc01F0, dwLoc01EC, dwLoc01C8, dwLoc01A4, out s0_590, out s1_591, out a0_298, out a1_592, out a2_593, out a3_594, out a4_595, out a5, out a7, out s2_310, out s3_596, out s4_312, out s5_313, out s6_597, out s7_598, out s8_599, out s9_600, out s10_601, out s11_602)
	a4 = fp + -576<i32>
	a3 = s5_313
	a2 = s4_312
	a1 = s2_310
	t1 = debug_send_line.isra.0(a0_298, out a0_211)
l23093FEA:
	a0Out = a0_211
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	return t1
mbedtls_debug_print_buf_exit:


word32 mbedtls_debug_print_mpi(word32 ra, word32 s1, word32 a0, word32 a1, word32 a5, ptr32 & a1Out, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_debug_print_ecp
//      mbedtls_debug_print_crt
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a0 a1 a2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4
// Preserved: sp
mbedtls_debug_print_mpi_entry:
l230940CE:
	word32 a6_5 = Mem0[a0:int32]
	branch a6_5 == 0<32> l230940F0
l230940D6:
	branch Mem0[a6_5 + 16<i32>:int32] == 0<32> l230940F0
l230940DE:
	branch a5 == 0<32> l230940F0
l230940E0:
	branch Mem0[0x4200ECE4<32>:int32] < a1 l230940F0
l230940F0:
	a1Out = a1
	a2Out = a2
	return a0
l230940EC:
l230940EC_thunk_mbedtls_debug_print_mpi.part.1:
	word32 a1_14
	word32 a2_15
	word32 a0_13 = mbedtls_debug_print_mpi.part.1(ra, s1, a1, out a1_14, out a2_15)
	a1Out = a1_14
	a2Out = a2_15
	return a0_13
mbedtls_debug_print_mpi_exit:


word32 mbedtls_debug_print_ecp.part.2(word32 ra, ptr32 & a1Out, ptr32 & a2Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_debug_print_ecp
// MayUse:  ra:[0..31]
// LiveOut: a0 a1 a2 s10 s11 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: ra s0 s1 s2 s3 s4 s5 sp
mbedtls_debug_print_ecp.part.2_entry:
l230940F2:
	word32 s0_43
	word32 s1_44
	word32 s4_49
	word32 a0_150
	word32 a1_151
	word32 a2_152
	word32 a3_153
	word32 a4_154
	word32 a5_155
	word32 a7_156
	word32 s2_157
	word32 s3_158
	word32 s5_159
	word32 s6_160
	word32 s7_161
	word32 s8_162
	word32 s9_163
	word32 s10_164
	word32 s11_165
	word32 ra_42 = snprintf(ra, fp + -544<i32>, 512<i32>, 0x230C8944<32>, dwLoc0208, dwLoc01E8, dwLoc01BC, dwLoc01A0, dwLoc019C, dwLoc0178, dwLoc0154, out s0_43, out s1_44, out a0_150, out a1_151, out a2_152, out a3_153, out a4_154, out a5_155, out a7_156, out s2_157, out s3_158, out s4_49, out s5_159, out s6_160, out s7_161, out s8_162, out s9_163, out s10_164, out s11_165)
	word32 a1_166
	word32 a2_167
	mbedtls_debug_print_mpi(ra_42, s1_44, s0_43, s1_44, s4_49, out a1_166, out a2_167)
	word32 s0_89
	word32 s1_90
	word32 s10_91
	word32 s11_92
	word32 s4_95
	word32 s7_98
	word32 s8_99
	word32 a1_112
	word32 a2_113
	word32 a0_168
	word32 a1_169
	word32 a2_170
	word32 a3_171
	word32 a4_172
	word32 a5_173
	word32 a7_174
	word32 s2_175
	word32 s3_176
	word32 s5_177
	word32 s6_178
	word32 s9_179
	word32 a0_111 = mbedtls_debug_print_mpi(snprintf(ra_42, fp + -544<i32>, 512<i32>, 0x230C894C<32>, dwLoc0208, dwLoc01E8, dwLoc01BC, dwLoc01A0, dwLoc019C, dwLoc0178, dwLoc0154, out s0_89, out s1_90, out a0_168, out a1_169, out a2_170, out a3_171, out a4_172, out a5_173, out a7_174, out s2_175, out s3_176, out s4_95, out s5_177, out s6_178, out s7_98, out s8_99, out s9_179, out s10_91, out s11_92), s1_90, s0_89, s1_90, s4_95 + 12<i32>, out a1_112, out a2_113)
	a1Out = a1_112
	a2Out = a2_113
	s7Out = s7_98
	s8Out = s8_99
	s10Out = s10_91
	s11Out = s11_92
	return a0_111
mbedtls_debug_print_ecp.part.2_exit:


word32 mbedtls_debug_print_ecp(word32 ra, word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a2Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_debug_print_crt
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 a1 a2 s10 s11 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
mbedtls_debug_print_ecp_entry:
l2309418A:
	word32 a6_5 = Mem0[a0:int32]
	branch a6_5 == 0<32> l230941AA
l23094192:
	branch Mem0[a6_5 + 16<i32>:int32] == 0<32> l230941AA
l2309419A:
	branch Mem0[0x4200ECE4<32>:int32] < a1 l230941AA
l230941AA:
	a1Out = a1
	a2Out = a2
	s7Out = s7
	s8Out = s8
	s10Out = s10
	s11Out = s11
	return a0
l230941A6:
l230941A6_thunk_mbedtls_debug_print_ecp.part.2:
	word32 a1_12
	word32 a2_13
	word32 s10_19
	word32 s11_20
	word32 s7_22
	word32 s8_23
	word32 a0_11 = mbedtls_debug_print_ecp.part.2(ra, out a1_12, out a2_13, out s7_22, out s8_23, out s10_19, out s11_20)
	a1Out = a1_12
	a2Out = a2_13
	s7Out = s7_22
	s8Out = s8_23
	s10Out = s10_19
	s11Out = s11_20
	return a0_11
mbedtls_debug_print_ecp_exit:


word32 mbedtls_debug_print_crt(word32 ra, word32 a1, word32 a4, word32 a5, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_certificate
//      mbedtls_ssl_parse_certificate
//      mbedtls_ssl_handshake_server_step
// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a1 a2 a3 a5 ra s0 s1 s10 s11 s3 s4 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s5 sp
mbedtls_debug_print_crt_entry:
l230941AC:
	word32 a0_203 = Mem29[a5:word32]
	branch a5 == 0<32> l23094286
l230941D4:
	a5 = Mem35[a5 + 16<i32>:word32]
	branch a5 == 0<32> l23094286
l230941D8:
	branch a5 == 0<32> l23094286
l230941DC:
	a5 = Mem35[0x4200ECE4<32>:int32]
	branch a5 < a1 l23094286
l230941EC:
l23094204:
	word32 a0_65
	word32 s1_74
	word32 s2_77
	word32 a4_760
	word32 s11_771
	word32 s8_768
	word32 s9_769
	word32 s10_770
	word32 s7_767
	word32 a5_761
	word32 s4_764
	word32 s5_765
	word32 s6_766
	word32 a7_762
	word32 s3_763
	word32 a1_757
	word32 a2_758
	word32 a3_759
	word32 s0_756
	word32 ra_72 = snprintf(ra, fp + -2112<i32>, 512<i32>, 0x230C8908<32>, dwLoc0848, dwLoc0828, dwLoc07FC, dwLoc07E0, a4, dwLoc07B8, dwLoc0794, out s0_756, out s1_74, out a0_65, out a1_757, out a2_758, out a3_759, out a4_760, out a5_761, out a7_762, out s2_77, out s3_763, out s4_764, out s5_765, out s6_766, out s7_767, out s8_768, out s9_769, out s10_770, out s11_771)
	word32 a0_772
	debug_send_line.isra.0(a0_65, out a0_772)
	word32 s1_109
	word32 s5_115
	word32 s2_112
	word32 ra_107 = mbedtls_x509_crt_info(ra_72, s1_74, fp + -1088<i32>, 1023<i32>, s2_77, s2_77, dwLoc0860, dwLoc085C, dwLoc0850, dwLoc0848, dwLoc0840, dwLoc083C, dwLoc0838, dwLoc0828, dwLoc0824, dwLoc0804, dwLoc07F4, dwLoc0798, dwLoc06EC, out s0, out s1_109, out s2_112, out s3, out s4, out s5_115, out s7, out s10)
	word32 a2_126 = fp + -1088<i32>
	word32 a1_127 = fp + -1088<i32>
	s11 = 0xA<32>
l2309424C:
	word32 a5_132 = CONVERT(Mem131[a2_126:byte], byte, word32)
	branch a5_132 != 0<32> l230942A8
l230942A8:
	s10 = a2_126 + 1<i32>
	branch a5_132 != 0xA<32> l230942E6
l230942B0:
	word32 a2_136 = a2_126 - a1_127
	word32 s9_137 = a2_136 + 1<i32>
	branch a2_136 <=u -510<i32> l230942BE
l230942BA:
	s9_137 = 511<i32>
l230942BE:
	word32 a5_784
	word32 a6_785
	word32 a7_786
	word32 a4_783
	word32 a1_780
	word32 a2_781
	word32 a3_782
	memcpy(fp + -1600<i32>, a1_127, s9_137, out a1_780, out a2_781, out a3_782, out a4_783, out a5_784, out a6_785, out a7_786)
	Mem176[s9_137 + (fp + 0xFFEFC0<32>) + 2560<i32>:byte] = 0<8>
	word32 a0_787
	debug_send_line.isra.0(fp + -1600<i32>, out a0_787)
	s0 = dwLoc0640
	a1_127 = s10
l230942E6:
	a2_126 = s10
l23094252:
	a1 = fp + -1600<i32>
	word32 a5_194
	word32 a2_753
	word32 a3_754
	word32 a4_755
	word32 a0_751
	word32 a1_752
	word32 t1_750
	ra = mbedtls_pk_debug(memset(ra_107, fp + -1600<i32>, 0<32>, 36<i32>, out t1_750, out a0_751, out a1_752, out a2_753, out a3_754, out a4_755, out a5_194), s2_112 + 188<i32>, a5_194, dwLoc0850, out a0_203, out a2, out a5)
	branch a0_203 == 0<32> l230942EA
l230942EA:
	word32 s8_211 = fp + -1600<i32>
	s10 = 1<32>
	s11 = 0x230C9000<32>
l23094302:
	a5 = CONVERT(Mem219[s8_211:byte], byte, word32)
	branch a5 == 0<32> l2309427E
l23094308:
	word32 a0_231
	word32 s1_240
	word32 s9_250
	word32 s6_779
	word32 a4_776
	word32 a5_777
	word32 a7_778
	word32 a3_775
	word32 a1_773
	word32 a2_774
	word32 s8_249
	ra = snprintf(ra, s5_115, 0x10<32>, 0x230BF954<32>, dwLoc0848, dwLoc0828, dwLoc07FC, dwLoc07E0, a4, dwLoc07B8, dwLoc0794, out s0, out s1_240, out a0_231, out a1_773, out a2_774, out a3_775, out a4_776, out a5_777, out a7_778, out s2_112, out s3, out s4, out s5_115, out s6_779, out s7, out s8_249, out s9_250, out s10, out s11)
	word32 a5_254 = CONVERT(Mem219[s8_249:byte], byte, word32)
	Mem255[s9_250 + 2047<i32>:byte] = 0<8>
	branch a5_254 != s10 l2309434C
l2309434C:
	branch a5_254 != 2<32> l23094366
l23094366:
	s0 = Mem255[a0_231:word32]
	debug_send_line.isra.0(a0_231, out a0_203)
	a2 = s3
	a1 = s1_240
l23094352:
	a0_203 = mbedtls_debug_print_ecp(ra, s0, s1_240, out a1, out a2, out s7, out s8_249, out s10, out s11)
l23094330:
	a0_203 = mbedtls_debug_print_mpi(ra, s1_240, s0, s1_240, Mem255[s8_249 + 8<i32>:int32], out a1, out a2)
l23094342:
	s8_211 = s8_249 + 0xC<32>
	a5 = fp + -1564<i32>
	branch s8_211 != fp + -1564<i32> l23094302
l2309434A:
l2309426A:
	s0 = Mem131[a0_203:word32]
	debug_send_line.isra.0(a0_203, out a0_203)
	a2 = s3
	a1 = s1_109
l2309427E:
	branch Mem321[s2_112 + 304<i32>:int32] != 0<32> l23094204
l23094286:
	s0Out = s0
	s1Out = dwLoc64
	a0Out = a0_203
	a1Out = a1
	a2Out = a2
	a3Out = dwArg78
	a5Out = a5
	s3Out = s3
	s4Out = s4
	s7Out = s7
	s9Out = dwArg18
	s10Out = s10
	s11Out = s11
	return dwLoc24
mbedtls_debug_print_crt_exit:


word32 ecp_get_type(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_check_pubkey
//      mbedtls_ecp_check_privkey
//      mbedtls_ecp_mul
// MayUse:  a5:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
ecp_get_type_entry:
l23094378:
	word32 a0_5 = Mem0[a5 + 48<i32>:word32]
	branch a5 == 0<32> l23094386
l23094386:
	return 0<32>
l2309437C:
	return CONVERT(Mem0[a0_5 + 60<i32>:word32] <u 1<i32>, bool, word32) + 1<32>
ecp_get_type_exit:


word32 ecp_safe_invert_jac(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecp_select_comb
//      mbedtls_ecp_mul
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ecp_safe_invert_jac_entry:
l2309438A:
	word32 a0_27
	word32 s1_158
	word32 a3_159
	word32 a7_160
	word32 s4_161
	word32 s8_162
	word32 a5_32
	word32 a4_31
	word32 a2_29
	word32 s3_142
	word32 s2_141
	word32 s0_140
	word32 ra_139 = mbedtls_mpi_sub_mpi(ra, a1 + 0xC<32>, fp + 0xFFFFFFE4<32>, a3, a4, mbedtls_mpi_init(fp + 0xFFFFFFE4<32>), a2, mstatus, dwArg78, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_140, out s1_158, out a0_27, out a2_29, out a3_159, out a4_31, out a5_32, out a7_160, out s2_141, out s3_142, out s4_161, out s8_162)
	branch a0_27 != 0<32> l230943C8
l230943B0:
	word32 a3_54
	word32 a4_55
	word32 a1_163
	word32 a2_164
	word32 a5_165
	word32 a6_166
	word32 s1_167
	word32 a0_168
	word32 a3_169
	word32 s4_170
	ra_139 = mbedtls_mpi_safe_cond_assign(ra_139, fp + 0xFFFFFFE4<32>, s2_141 & CONVERT(mbedtls_mpi_cmp_int(0<32>, a2_29, out a1_163, out a2_164, out a3_54, out a4_55, out a5_165, out a6_166) != 0<32>, bool, word32), a3_54, a4_55, mstatus, dwLoc08, dwArgC8, dwArg0108, dwArg0148, out s0_140, out s1_167, out a0_168, out a2_29, out a3_169, out a4_31, out a5_32, out s2_141, out s3_142, out s4_170)
l230943C8:
	word32 a2_95
	word32 a5_96
	word32 a3_98
	word32 a4_99
	word32 a0_171
	word32 a1_172
	word32 a6_173
	word32 s4_174
	word32 s1_101 = mbedtls_mpi_free(fp + 0xFFFFFFE4<32>, a2_29, a4_31, a5_32, mstatus, dwArg0128, dwArg0168, out a0_171, out a1_172, out a2_95, out a3_98, out a4_99, out a5_96, out a6_173, out s4_174)
	s0Out = s0_140
	s1Out = s1_101
	a0Out = s1_101
	a2Out = a2_95
	a3Out = a3_98
	a4Out = a4_99
	a5Out = a5_96
	s2Out = s2_141
	s3Out = s3_142
	s8Out = dwLoc1C
	return ra_139
ecp_safe_invert_jac_exit:


word32 ecp_select_comb(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_mul
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s2 s3 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ecp_select_comb_entry:
l230943DE:
	word32 s4_33 = a4 >>u 1<u32> & 63<i32>
	word32 s1_114 = a2
	word32 s0_113 = 0<32>
	a4_220 = a4
	a3_218 = a3
l2309440C:
	word32 a3_218
	word32 a4_220
	word32 s1_63
	word32 s0_269
	word32 a2_270
	word32 s4_271
	word32 a5_222
	word32 s3_234
	word32 a0_213
	word32 s2_232
	ra = mbedtls_mpi_safe_cond_assign(ra, s1_114, CONVERT(s4_33 - s0_113 <u 1<i32>, bool, word32), a3_218, a4_220, mstatus, dwLoc18, dwArgB8, dwArgF8, dwArg0138, out s0_269, out s1_63, out a0_213, out a2_270, out a3_218, out a4_220, out a5_222, out s2_232, out s3_234, out s4_271)
	branch a0_213 != 0<32> l2309445E
l23094420:
	word32 s0_87
	word32 s1_88
	word32 a2_268
	ra = mbedtls_mpi_safe_cond_assign(ra, s1_63 + 12<i32>, s2_232, a3_218, a4_220, mstatus, dwLoc18, dwArgB8, dwArgF8, dwArg0138, out s0_87, out s1_88, out a0_213, out a2_268, out a3_218, out a4_220, out a5_222, out s2_232, out s3_234, out s4_33)
	branch a0_213 != 0<32> l2309445E
l2309445E:
	0<32> = dwArg0128
	s0Out = s4
	a0Out = a0_213
	a2Out = dwArgB8
	a3Out = a3_218
	a4Out = a4_220
	a5Out = a5_222
	s2Out = s2_232
	s3Out = s3_234
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s8Out = s5
	return ra
l2309442E:
	s0_113 = s0_87 + 1<32> & 255<i32>
	s1_114 = s1_88 + 36<i32>
	branch a3 != s0_113 l2309440C
l2309443C:
	0<32> = dwArg0128
l2309445A_thunk_ecp_safe_invert_jac:
	word32 a0_131
	word32 a2_133
	word32 a3_134
	word32 a4_135
	word32 a5_136
	word32 s0_140
	word32 s2_142
	word32 s3_143
	word32 s8_145
	word32 s1_272
	word32 ra_139 = ecp_safe_invert_jac(ra, s3_234, a4 >>u 7<u32>, a3_218, a4_220, mstatus, dwArg78, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, out s0_140, out s1_272, out a0_131, out a2_133, out a3_134, out a4_135, out a5_136, out s2_142, out s3_143, out s8_145)
	s0Out = s0_140
	a0Out = a0_131
	a2Out = a2_133
	a3Out = a3_134
	a4Out = a4_135
	a5Out = a5_136
	s2Out = s2_142
	s3Out = s3_143
	s5Out = <invalid>
	s6Out = <invalid>
	s7Out = <invalid>
	s8Out = s8_145
	return ra_139
ecp_select_comb_exit:


word32 ecp_modp(word32 ra, word32 a0, word32 a2, word32 a4, word32 a5, word32 s2, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0114, word32 dwArg0128, word32 dwArg0134, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecp_double_jac
//      ecp_normalize_jac
//      ecp_normalize_jac_many
//      ecp_add_mixed
//      mbedtls_ecp_check_pubkey
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0114:[0..31] Stack +0128:[0..31] Stack +0134:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
ecp_modp_entry:
l23094476:
	word32 a1_13 = Mem11[a5 + 100<i32>:word32]
	branch a5 != 0<32> l2309449A
l2309449A:
	word32 a3_118
	word32 s2_137
	word32 s1_108 = a1_13
	branch a5 < 0<32> l230944C4
l230944C4:
	word32 a6_474
	word32 a1_473
	branch mbedtls_mpi_cmp_int(0<32>, a2, out a1_473, out a2, out a3_118, out a4, out a5, out a6_474) == 0<32> l230944A2
l230944CC:
l230944A2:
	word32 a2_36
	word32 a5_39
	word32 a1_475
	word32 a0_34 = mbedtls_mpi_bitlen(a2, a4, a5, out a1_475, out a2_36, out a3_118, out a4, out a5_39)
	s1_108 = Mem11[a5_39 + 88<i32>:word32]
	a5 = a5_39 << 1<i32>
	branch a5_39 << 1<i32> >=u a0_34 l230944CE
l230944CE:
	word32 t4_225
	word32 t1_224
	word32 t0_223
	word32 sp_49
	word32 a0_56
	word32 a6_61
	word32 t3_62
	word32 a7_219
	word32 t5_226
	word32 t6_227
	word32 a2_114
	call a5_39 << 1<i32> (retsize: 0;)
		uses: a0:a0,a2:a2_36,a4:a4_38,a5:a5_39 << 1<i32>,a6:a6_61,a7:a7_219,mstatus:mstatus,ra:ra,s0:a0,s1:Mem11[(a5_39 << 1<i32>) + 100<i32>:word32] + 4<32>,s10:s10,s11:s11,s2:s2,s3:s3_220,s4:s4_221,s5:s5,s6:s6,s7:s7,s8:s8_222,s9:s9_233,Stack +0018:dwArg08,Stack +0020:dwArg10,Stack +0024:dwArg14,Stack +0038:dwArg28,Stack +0048:dwArg38,Stack +0054:dwArg44,Stack +0058:dwArg48,Stack +0068:dwArg58,Stack +0078:dwArg68,Stack +0088:dwArg78,Stack +0098:dwArg88,Stack +00A8:dwArg98,Stack +00B8:dwArgA8,Stack +00D8:dwArgC8,Stack +00E8:dwArgD8,Stack +00F8:dwArgE8,Stack +0108:dwArgF8,Stack +0118:dwArg0108,Stack +0124:dwArg0114,Stack +0138:dwArg0128,Stack +0144:dwArg0134,t0:t0_223,t1:t1_224,t3:t3_62,t4:t4_225,t5:t5_226,t6:t6_227
		defs: a0:a0_56,a2:a2_57,a3:a3_59,a4:a4_60,a5:a5_55,a6:a6_61,a7:a7_219,mstatus:mstatus_218,ra:ra_51,s1:s1_52,s10:s10_231,s11:s11_232,s3:s3_220,s4:s4_221,s5:s5_229,s6:s6_228,s7:s7_230,s8:s8_222,s9:s9_233,sp:sp_49,t0:t0_223,t1:t1_224,t3:t3_62,t4:t4_225,t5:t5_226,t6:t6_227
	s2_137 = a0_56
	branch a0_56 != 0<32> l230944B6
l230944DA:
	word32 a0_129
	word32 s0_110 = Mem11[a5:word32]
	branch a5 >= 0<32> l230944EA
l230944E0:
	word32 a3_73
	word32 a1_479
	word32 a6_480
	branch mbedtls_mpi_cmp_int(0<32>, a2_114, out a1_479, out a2_114, out a3_73, out a4, out a5, out a6_480) != 0<32> l23094504
l23094504:
	word32 s0_481
	word32 a7_483
	word32 a1_482
	ra = mbedtls_mpi_add_mpi(ra, s0_110, s0_110, a3_73, a4, a5, s2_137, mstatus, Mem11[sp_49 + 152<i32>:word32], Mem11[sp_49 + 184<i32>:word32], Mem11[sp_49 + 216<i32>:word32], Mem11[sp_49 + 248<i32>:word32], Mem11[sp_49 + 264<i32>:word32], Mem11[sp_49 + 280<i32>:word32], Mem11[sp_49 + 312<i32>:word32], out s0_481, out s1_108, out a0_129, out a1_482, out a2_114, out a3_118, out a4, out a5, out a7_483, out s2_137, out s3, out s4, out s8)
	branch a0_129 == 0<32> l230944DA
l230944EA:
	word32 a1_476
	word32 a6_478
	word32 a2_477
	branch mbedtls_mpi_cmp_mpi(a2_114, a4, a5, out a1_476, out a2_477, out a3_118, out a4, out a5, out a6_478) < 0<32> l230944B6
l230944F6:
	word32 a7_485
	word32 a1_484
	ra = mbedtls_mpi_sub_abs(ra, s0_110, s0_110, s1_108, a3_118, a4, a5, mstatus, Mem11[sp_49 + 184<i32>:word32], Mem11[sp_49 + 248<i32>:word32], Mem11[sp_49 + 280<i32>:word32], Mem11[sp_49 + 296<i32>:word32], Mem11[sp_49 + 312<i32>:word32], Mem11[sp_49 + 344<i32>:word32], out s0_110, out s1_108, out a0_129, out a1_484, out a2_114, out a3_118, out a4, out a5, out a7_485, out s2_137, out s3, out s4, out s8)
	branch a0_129 == 0<32> l230944EA
l23094502:
l23094510:
	s2_137 = a0_129
l230944B0:
	s2_137 = 0xFB000080<32>
l230944B6:
	0<32> = dwArg38
	s1Out = s1_108
	a0Out = s2_137
	a2Out = dwArg10
	a3Out = a3_118
	a4Out = a4
	a5Out = a5
	s2Out = s2_137
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l23094486:
	0<32> = dwArg38
l23094496_thunk_mbedtls_mpi_mod_mpi:
	word32 a0_180
	word32 a2_182
	word32 a3_183
	word32 a4_184
	word32 a5_185
	word32 s1_187
	word32 s2_188
	word32 s10_193
	word32 s11_194
	word32 s3_195
	word32 s4_196
	word32 s5_197
	word32 s6_198
	word32 s7_199
	word32 s8_200
	word32 s9_201
	word32 a7_472
	word32 ra_192 = mbedtls_mpi_mod_mpi(ra, a0, a0, a1_13 + 4<i32>, s5, s6, s7, s10, s11, mstatus, dwArg08, dwArg28, dwArg38, dwArg44, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0114, dwArg0128, dwArg0134, out s1_187, out a0_180, out a2_182, out a3_183, out a4_184, out a5_185, out a7_472, out s2_188, out s3_195, out s4_196, out s5_197, out s6_198, out s7_199, out s8_200, out s9_201, out s10_193, out s11_194)
	s1Out = s1_187
	a0Out = a0_180
	a2Out = a2_182
	a3Out = a3_183
	a4Out = a4_184
	a5Out = a5_185
	s2Out = s2_188
	s3Out = s3_195
	s4Out = s4_196
	s5Out = s5_197
	s6Out = s6_198
	s7Out = s7_199
	s8Out = s8_200
	s9Out = s9_201
	s10Out = s10_193
	s11Out = s11_194
	mstatusOut = mstatus
	return ra_192
ecp_modp_exit:


word32 ecp_double_jac(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecp_add_mixed
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ecp_double_jac_entry:
l23094514:
	word32 s6_1002
	word32 s3_1026
	word32 s2_1025
	word32 s8_1004
	word32 s0_101
	word32 a2_1016
	word32 a4_1018
	word32 a5_1019
	word32 a3_181
	word32 a4_182
	word32 ra_113
	word32 s4_118
	mbedtls_mpi_init(fp + -96<i32>)
	mbedtls_mpi_init(fp + -84<i32>)
	mbedtls_mpi_init(fp + -72<i32>)
	mbedtls_mpi_init(fp + -60<i32>)
	branch Mem28[a0 + 24<i32>:int32] != 0<32> l230947DA
l230947DA:
	word32 s1_53
	word32 s5_57
	word32 a0_66
	word32 s4_2755
	word32 a3_2754
	word32 s0_2753
	word32 ra_51 = mbedtls_mpi_mul_mpi(ra, fp + -84<i32>, a2, a2, a3, a4, a0, a2, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2753, out s1_53, out a0_66, out a2_1016, out a3_2754, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2755, out s5_57, out s6_1002, out s8_1004)
	s0_101 = a0_66
	branch a0_66 != 0<32> l2309457E
l230947EA:
	word32 a0_73
	word32 a3_76
	word32 s1_80
	word32 s4_90
	word32 s9_2792
	word32 s5_2791
	word32 ra_86 = ecp_modp(ra_51, s1_53, a2_1016, a4_1018, a5_1019, s2_1025, s5_57, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_80, out a0_73, out a2_1016, out a3_76, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_90, out s5_2791, out s6_1002, out s7, out s8_1004, out s9_2792, out s10, out s11, out mstatus)
	s0_101 = a0_73
	branch a0_73 != 0<32> l2309457E
l230947F8:
	word32 a0_105
	word32 a3_2794
	word32 s0_2793
	word32 s5_2796
	word32 s3_2795
	word32 s1_115
	ra_113 = mbedtls_mpi_mul_int(ra_86, fp + -96<i32>, s1_80, a3_76, a4_1018, s2_1025, s4_90, s6_1002, mstatus, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArg0118, out s0_2793, out s1_115, out a0_105, out a2_1016, out a3_2794, out a4_1018, out a5_1019, out s2_1025, out s3_2795, out s4_118, out s5_2796, out s6_1002, out s8_1004)
	s0_101 = a0_105
	s3_1026 = s2_1025 + 4<i32>
	branch a0_105 != 0<32> l2309457E
l2309480C:
	word32 a2_140
	word32 a3_141
	word32 a4_142
	word32 a5_143
	word32 a6_2798
	word32 a1_2797
	branch mbedtls_mpi_cmp_mpi(a2_1016, a4_1018, a5_1019, out a1_2797, out a2_140, out a3_141, out a4_142, out a5_143, out a6_2798) >= 0<32> l230948AC
l230948AC:
	word32 a0_151
	word32 a1_2800
	word32 s0_2799
	word32 a7_2802
	word32 a3_2801
	ra_113 = mbedtls_mpi_sub_abs(ra_113, fp + -96<i32>, fp + -96<i32>, s3_1026, a3_141, a4_142, a5_143, mstatus, dwArg58, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_2799, out s1_115, out a0_151, out a1_2800, out a2_1016, out a3_2801, out a4_1018, out a5_1019, out a7_2802, out s2_1025, out s3_1026, out s4_118, out s8_1004)
	s0_101 = a0_151
	branch a0_151 == 0<32> l2309480C
l230948BA:
l23094818:
	word32 s6_175 = s2_1025 + 16<i32>
	word32 a2_2804
	word32 a5_2805
	word32 a6_2806
	word32 a1_2803
	branch mbedtls_mpi_cmp_int(0<32>, a2_140, out a1_2803, out a2_2804, out a3_181, out a4_182, out a5_2805, out a6_2806) == 0<32> l23094610
l23094828:
	word32 a2_187 = s4_118 + 24<i32>
	word32 s1_200
	word32 s5_204
	word32 a0_213
	word32 a3_2812
	word32 s4_2813
	word32 s0_2811
	word32 ra_198 = mbedtls_mpi_mul_mpi(ra_113, s1_115, a2_187, a2_187, a3_181, a4_182, s2_1025, s4_118, s6_175, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2811, out s1_200, out a0_213, out a2_1016, out a3_2812, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2813, out s5_204, out s6_1002, out s8_1004)
	s0_101 = a0_213
	branch a0_213 != 0<32> l2309457E
l2309483A:
	word32 a0_221
	word32 a3_224
	word32 s1_228
	word32 s4_238
	word32 s5_2814
	word32 s9_2815
	word32 ra_234 = ecp_modp(ra_198, s1_200, a2_1016, a4_1018, a5_1019, s2_1025, s5_204, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_228, out a0_221, out a2_1016, out a3_224, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_238, out s5_2814, out s6_1002, out s7, out s8_1004, out s9_2815, out s10, out s11, out mstatus)
	s0_101 = a0_221
	branch a0_221 != 0<32> l2309457E
l23094848:
	word32 s5_266
	word32 a0_275
	word32 s0_2816
	word32 s1_2817
	word32 a3_2818
	word32 s4_2819
	word32 ra_260 = mbedtls_mpi_mul_mpi(ra_234, fp + -72<i32>, s1_228, s1_228, a3_224, a4_1018, s2_1025, s4_238, s6_1002, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2816, out s1_2817, out a0_275, out a2_1016, out a3_2818, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2819, out s5_266, out s6_1002, out s8_1004)
	s0_101 = a0_275
	branch a0_275 != 0<32> l2309457E
l23094858:
	word32 a0_280
	word32 a3_283
	word32 s1_287
	word32 s4_297
	word32 s9_2821
	word32 s5_2820
	word32 ra_293 = ecp_modp(ra_260, fp + -72<i32>, a2_1016, a4_1018, a5_1019, s2_1025, s5_266, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_287, out a0_280, out a2_1016, out a3_283, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_297, out s5_2820, out s6_1002, out s7, out s8_1004, out s9_2821, out s10, out s11, out mstatus)
	s0_101 = a0_280
	branch a0_280 != 0<32> l2309457E
l23094866:
	word32 s1_321
	word32 s5_325
	word32 a0_334
	word32 a3_2823
	word32 s4_2824
	word32 s0_2822
	word32 ra_319 = mbedtls_mpi_mul_mpi(ra_293, s1_287, fp + -72<i32>, s6_1002, a3_283, a4_1018, s2_1025, s4_297, s6_1002, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2822, out s1_321, out a0_334, out a2_1016, out a3_2823, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2824, out s5_325, out s6_1002, out s8_1004)
	s0_101 = a0_334
	branch a0_334 != 0<32> l2309457E
l23094876:
	word32 a0_339
	word32 a3_342
	word32 s9_2828
	word32 s1_2825
	word32 s4_2826
	word32 s5_2827
	word32 ra_352 = ecp_modp(ra_319, s1_321, a2_1016, a4_1018, a5_1019, s2_1025, s5_325, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_2825, out a0_339, out a2_1016, out a3_342, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2826, out s5_2827, out s6_1002, out s7, out s8_1004, out s9_2828, out s10, out s11, out mstatus)
	s0_101 = a0_339
	branch a0_339 != 0<32> l2309457E
l23094884:
	word32 a3_2832
	word32 a7_2833
	word32 s1_2830
	word32 a1_2831
	word32 s0_2829
	word32 a0_371
	ra_113 = mbedtls_mpi_add_mpi(ra_352, a0_339, fp + -96<i32>, a3_342, a4_1018, a5_1019, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_2829, out s1_2830, out a0_371, out a1_2831, out a2_1016, out a3_2832, out a4_1018, out a5_1019, out a7_2833, out s2_1025, out s3_1026, out s4_118, out s8_1004)
l2309488E:
	s0_101 = a0_371
	branch a0_371 != 0<32> l2309457E
l23094894:
	word32 a5_407
	word32 a6_2836
	word32 a1_2834
	word32 a2_2835
	branch mbedtls_mpi_cmp_mpi(a2_1016, a4_1018, a5_1019, out a1_2834, out a2_2835, out a3_181, out a4_182, out a5_407, out a6_2836) < 0<32> l23094610
l230948A0:
	word32 a3_2840
	word32 a7_2841
	word32 s1_2838
	word32 a1_2839
	word32 s0_2837
	ra_113 = mbedtls_mpi_sub_abs(ra_113, fp + -96<i32>, fp + -96<i32>, s3_1026, a3_181, a4_182, a5_407, mstatus, dwArg58, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_2837, out s1_2838, out a0_371, out a1_2839, out a2_1016, out a3_2840, out a4_1018, out a5_1019, out a7_2841, out s2_1025, out s3_1026, out s4_118, out s8_1004)
l23094550:
	word32 s1_449
	word32 s5_453
	word32 a0_462
	word32 s4_2758
	word32 a3_2757
	word32 s0_2756
	word32 ra_447 = mbedtls_mpi_mul_mpi(ra, fp + -84<i32>, a2 + 24<i32>, a2 + 24<i32>, a3, a4, a0, a2, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2756, out s1_449, out a0_462, out a2_1016, out a3_2757, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2758, out s5_453, out s6_1002, out s8_1004)
	s0_101 = a0_462
	branch a0_462 != 0<32> l2309457E
l23094560:
	word32 a0_467
	word32 a3_470
	word32 s9_2780
	word32 s4_2778
	word32 s5_2779
	word32 s1_2777
	word32 ra_480 = ecp_modp(ra_447, s1_449, a2_1016, a4_1018, a5_1019, s2_1025, s5_453, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_2777, out a0_467, out a2_1016, out a3_470, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2778, out s5_2779, out s6_1002, out s7, out s8_1004, out s9_2780, out s10, out s11, out mstatus)
	s0_101 = a0_467
	branch a0_467 != 0<32> l2309457E
l2309456C:
	word32 a0_499
	word32 s3_2786
	word32 a7_2785
	word32 a3_2784
	word32 a1_2783
	word32 s1_2782
	word32 s0_2781
	word32 s4_2787
	word32 ra_507 = mbedtls_mpi_add_mpi(ra_480, a0_467, fp + -72<i32>, a3_470, a4_1018, a5_1019, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_2781, out s1_2782, out a0_499, out a1_2783, out a2_1016, out a3_2784, out a4_1018, out a5_1019, out a7_2785, out s2_1025, out s3_2786, out s4_2787, out s8_1004)
	s0_101 = a0_499
	s3_1026 = s2_1025 + 4<i32>
	branch a0_499 == 0<32> l230945BC
l230945BC:
	word32 a3_533
	word32 a4_534
	word32 a5_535
	word32 a1_2788
	word32 a6_2790
	word32 a2_2789
	branch mbedtls_mpi_cmp_mpi(a2_1016, a4_1018, a5_1019, out a1_2788, out a2_2789, out a3_533, out a4_534, out a5_535, out a6_2790) >= 0<32> l230945AE
l230945AE:
	word32 a0_543
	word32 a1_2844
	word32 a3_2845
	word32 a7_2846
	word32 s4_2847
	word32 s0_2842
	word32 s1_2843
	ra_507 = mbedtls_mpi_sub_abs(ra_507, fp + -72<i32>, fp + -72<i32>, s3_1026, a3_533, a4_534, a5_535, mstatus, dwArg58, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_2842, out s1_2843, out a0_543, out a1_2844, out a2_1016, out a3_2845, out a4_1018, out a5_1019, out a7_2846, out s2_1025, out s3_1026, out s4_2847, out s8_1004)
	s0_101 = a0_543
	branch a0_543 != 0<32> l2309457E
l230945C8:
	word32 s0_2848
	word32 a7_2849
	word32 a0_573
	word32 s1_583
	word32 s4_586
	word32 a3_576
	word32 ra_581 = mbedtls_mpi_sub_mpi(ra_507, s0_101, fp + -60<i32>, a3_533, a4_534, a5_535, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_2848, out s1_583, out a0_573, out a2_1016, out a3_576, out a4_1018, out a5_1019, out a7_2849, out s2_1025, out s3_1026, out s4_586, out s8_1004)
l230945D2:
	s0_101 = a0_573
	branch a0_573 != 0<32> l2309457E
l230945D6:
	branch a5_1019 < 0<32> l230947B6
l230947B6:
	word32 a5_609
	word32 a6_2852
	word32 a2_2851
	word32 a1_2850
	branch mbedtls_mpi_cmp_int(0<32>, a2_1016, out a1_2850, out a2_2851, out a3_576, out a4_1018, out a5_609, out a6_2852) == 0<32> l230945DC
l230947C2:
	word32 s0_3018
	word32 a1_3019
	word32 a7_3020
	ra_581 = mbedtls_mpi_add_mpi(ra_581, a0_573, fp + -60<i32>, a3_576, a4_1018, a5_609, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_3018, out s1_583, out a0_573, out a1_3019, out a2_1016, out a3_576, out a4_1018, out a5_1019, out a7_3020, out s2_1025, out s3_1026, out s4_586, out s8_1004)
l230945DC:
	word32 s1_669
	word32 s5_673
	word32 a0_682
	word32 s4_2855
	word32 s0_2853
	word32 a3_2854
	word32 ra_667 = mbedtls_mpi_mul_mpi(ra_581, s1_583, fp + -72<i32>, fp + -60<i32>, a3_576, a4_1018, s2_1025, s4_586, s6_1002, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2853, out s1_669, out a0_682, out a2_1016, out a3_2854, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2855, out s5_673, out s6_1002, out s8_1004)
	s0_101 = a0_682
	branch a0_682 != 0<32> l2309457E
l230945EA:
	word32 a0_696
	word32 a3_699
	word32 s1_703
	word32 s4_713
	word32 s5_2856
	word32 s9_2857
	word32 ra_709 = ecp_modp(ra_667, s1_669, a2_1016, a4_1018, a5_1019, s2_1025, s5_673, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_703, out a0_696, out a2_1016, out a3_699, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_713, out s5_2856, out s6_1002, out s7, out s8_1004, out s9_2857, out s10, out s11, out mstatus)
	s0_101 = a0_696
	branch a0_696 != 0<32> l2309457E
l230945F6:
	word32 a3_2860
	word32 s5_2861
	word32 s1_2859
	word32 s0_2858
	word32 a0_728
	ra_113 = mbedtls_mpi_mul_int(ra_709, fp + -96<i32>, s1_703, a3_699, a4_1018, s2_1025, s4_713, s6_1002, mstatus, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArg0118, out s0_2858, out s1_2859, out a0_728, out a2_1016, out a3_2860, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_118, out s5_2861, out s6_1002, out s8_1004)
l23094600:
	s0_101 = a0_728
	branch a0_728 != 0<32> l2309457E
l23094604:
	word32 a5_766
	word32 a6_2864
	word32 a1_2862
	word32 a2_2863
	branch mbedtls_mpi_cmp_mpi(a2_1016, a4_1018, a5_1019, out a1_2862, out a2_2863, out a3_181, out a4_182, out a5_766, out a6_2864) >= 0<32> l230947CE
l230947CE:
	word32 s0_2865
	word32 s1_2866
	word32 a1_2867
	word32 a3_2868
	word32 a7_2869
	ra_113 = mbedtls_mpi_sub_abs(ra_113, fp + -96<i32>, fp + -96<i32>, s3_1026, a3_181, a4_182, a5_766, mstatus, dwArg58, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_2865, out s1_2866, out a0_728, out a1_2867, out a2_1016, out a3_2868, out a4_1018, out a5_1019, out a7_2869, out s2_1025, out s3_1026, out s4_118, out s8_1004)
l23094610:
	word32 s6_799 = s4_118 + 12<i32>
	word32 s0_2807
	word32 s1_2808
	word32 a3_2809
	word32 s5_825
	word32 a0_834
	word32 s4_2810
	word32 ra_819 = mbedtls_mpi_mul_mpi(ra_113, fp + -72<i32>, s6_799, s6_799, a3_181, a4_182, s2_1025, s4_118, s6_799, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2807, out s1_2808, out a0_834, out a2_1016, out a3_2809, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2810, out s5_825, out s6_1002, out s8_1004)
	s0_101 = a0_834
	branch a0_834 != 0<32> l2309457E
l23094622:
	word32 a0_848
	word32 s5_2873
	word32 s9_2874
	word32 s4_2872
	word32 a3_2871
	word32 s1_2870
	word32 ra_861 = ecp_modp(ra_819, fp + -72<i32>, a2_1016, a4_1018, a5_1019, s2_1025, s5_825, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_2870, out a0_848, out a2_1016, out a3_2871, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2872, out s5_2873, out s6_1002, out s7, out s8_1004, out s9_2874, out s10, out s11, out mstatus)
	s0_101 = a0_848
	branch a0_848 != 0<32> l2309457E
l2309462E:
	word32 a0_879
	word32 s3_2878
	word32 s0_2875
	word32 a3_2876
	word32 a7_2877
	word32 s4_892
	word32 s1_889
	word32 ra_887 = mbedtls_mpi_shift_l(ra_861, 1<32>, a2_1016, a4_1018, a5_1019, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s0_2875, out s1_889, out a0_879, out a2_1016, out a3_2876, out a4_1018, out a5_1019, out a7_2877, out s2_1025, out s3_2878, out s4_892, out s8_1004)
	s0_101 = a0_879
	s3_1026 = s2_1025 + 4<i32>
	branch a0_879 != 0<32> l2309457E
l2309463E:
	word32 a3_913
	word32 a4_914
	word32 a5_915
	word32 a2_2880
	word32 a6_2881
	word32 a1_2879
	branch mbedtls_mpi_cmp_mpi(a2_1016, a4_1018, a5_1019, out a1_2879, out a2_2880, out a3_913, out a4_914, out a5_915, out a6_2881) >= 0<32> l230948BC
l230948BC:
	word32 a0_923
	word32 a3_2884
	word32 a7_2885
	word32 s0_2882
	word32 a1_2883
	ra_887 = mbedtls_mpi_sub_abs(ra_887, fp + -72<i32>, fp + -72<i32>, s3_1026, a3_913, a4_914, a5_915, mstatus, dwArg58, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_2882, out s1_889, out a0_923, out a1_2883, out a2_1016, out a3_2884, out a4_1018, out a5_1019, out a7_2885, out s2_1025, out s3_1026, out s4_892, out s8_1004)
	s0_101 = a0_923
	branch a0_923 == 0<32> l2309463E
l230948CC:
l2309464A:
	word32 s1_962
	word32 s5_966
	word32 a0_975
	word32 s0_2886
	word32 a3_2887
	word32 s4_2888
	word32 ra_960 = mbedtls_mpi_mul_mpi(ra_887, s1_889, s4_892, fp + -72<i32>, a3_913, a4_914, s2_1025, s4_892, s6_1002, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2886, out s1_962, out a0_975, out a2_1016, out a3_2887, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2888, out s5_966, out s6_1002, out s8_1004)
	s0_101 = a0_975
	branch a0_975 != 0<32> l2309457E
l2309465A:
	word32 a0_983
	word32 s9_2893
	word32 s5_2892
	word32 s4_2891
	word32 a3_2890
	word32 s1_2889
	word32 ra_996 = ecp_modp(ra_960, s1_962, a2_1016, a4_1018, a5_1019, s2_1025, s5_966, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_2889, out a0_983, out a2_1016, out a3_2890, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2891, out s5_2892, out s6_1002, out s7, out s8_1004, out s9_2893, out s10, out s11, out mstatus)
	s0_101 = a0_983
	branch a0_983 != 0<32> l2309457E
l23094668:
	word32 a3_2895
	word32 a7_2896
	word32 s0_2894
	word32 a0_1014
	word32 s1_1024
	word32 s4_1027
	word32 ra_1022 = mbedtls_mpi_shift_l(ra_996, 1<32>, a2_1016, a4_1018, a5_1019, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s0_2894, out s1_1024, out a0_1014, out a2_1016, out a3_2895, out a4_1018, out a5_1019, out a7_2896, out s2_1025, out s3_1026, out s4_1027, out s8_1004)
l23094670:
	s0_101 = a0_1014
	branch a0_1014 != 0<32> l2309457E
l23094676:
	word32 a3_1048
	word32 a4_1049
	word32 a5_1050
	word32 a6_2899
	word32 a2_2898
	word32 a1_2897
	branch mbedtls_mpi_cmp_mpi(a2_1016, a4_1018, a5_1019, out a1_2897, out a2_2898, out a3_1048, out a4_1049, out a5_1050, out a6_2899) >= 0<32> l230948CE
l230948CE:
	word32 s0_2900
	word32 a3_2902
	word32 a7_2903
	word32 a1_2901
	ra_1022 = mbedtls_mpi_sub_abs(ra_1022, s1_1024, s1_1024, s3_1026, a3_1048, a4_1049, a5_1050, mstatus, dwArg58, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_2900, out s1_1024, out a0_1014, out a1_2901, out a2_1016, out a3_2902, out a4_1018, out a5_1019, out a7_2903, out s2_1025, out s3_1026, out s4_1027, out s8_1004)
l23094682:
	word32 s5_1100
	word32 a0_1109
	word32 s0_2904
	word32 s1_2905
	word32 a3_2906
	word32 s4_2907
	word32 ra_1094 = mbedtls_mpi_mul_mpi(ra_1022, fp + -60<i32>, fp + -72<i32>, fp + -72<i32>, a3_1048, a4_1049, s2_1025, s4_1027, s6_1002, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2904, out s1_2905, out a0_1109, out a2_1016, out a3_2906, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2907, out s5_1100, out s6_1002, out s8_1004)
	s0_101 = a0_1109
	branch a0_1109 != 0<32> l2309457E
l23094692:
	word32 a0_1117
	word32 s9_2912
	word32 s5_2911
	word32 s4_2910
	word32 s1_2908
	word32 a3_2909
	word32 ra_1130 = ecp_modp(ra_1094, fp + -60<i32>, a2_1016, a4_1018, a5_1019, s2_1025, s5_1100, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_2908, out a0_1117, out a2_1016, out a3_2909, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2910, out s5_2911, out s6_1002, out s7, out s8_1004, out s9_2912, out s10, out s11, out mstatus)
	s0_101 = a0_1117
	branch a0_1117 != 0<32> l2309457E
l230946A0:
	word32 a3_2915
	word32 a7_2916
	word32 s0_2913
	word32 s1_2914
	word32 a0_1148
	word32 s4_1161
	word32 ra_1156 = mbedtls_mpi_shift_l(ra_1130, 1<32>, a2_1016, a4_1018, a5_1019, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s0_2913, out s1_2914, out a0_1148, out a2_1016, out a3_2915, out a4_1018, out a5_1019, out a7_2916, out s2_1025, out s3_1026, out s4_1161, out s8_1004)
l230946A8:
	s0_101 = a0_1148
	branch a0_1148 != 0<32> l2309457E
l230946AE:
	word32 a3_1182
	word32 a4_1183
	word32 a5_1184
	word32 a6_2919
	word32 a2_2918
	word32 a1_2917
	branch mbedtls_mpi_cmp_mpi(a2_1016, a4_1018, a5_1019, out a1_2917, out a2_2918, out a3_1182, out a4_1183, out a5_1184, out a6_2919) >= 0<32> l230948DA
l230948DA:
	word32 a7_2924
	word32 a3_2923
	word32 a1_2922
	word32 s0_2920
	word32 s1_2921
	ra_1156 = mbedtls_mpi_sub_abs(ra_1156, fp + -60<i32>, fp + -60<i32>, s3_1026, a3_1182, a4_1183, a5_1184, mstatus, dwArg58, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_2920, out s1_2921, out a0_1148, out a1_2922, out a2_1016, out a3_2923, out a4_1018, out a5_1019, out a7_2924, out s2_1025, out s3_1026, out s4_1161, out s8_1004)
l230946BA:
	word32 s5_1233
	word32 a0_1242
	word32 s0_2925
	word32 s1_2926
	word32 a3_2927
	word32 s4_2928
	word32 ra_1227 = mbedtls_mpi_mul_mpi(ra_1156, fp + -72<i32>, fp + -96<i32>, fp + -96<i32>, a3_1182, a4_1183, s2_1025, s4_1161, s6_1002, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2925, out s1_2926, out a0_1242, out a2_1016, out a3_2927, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2928, out s5_1233, out s6_1002, out s8_1004)
	s0_101 = a0_1242
	branch a0_1242 != 0<32> l2309457E
l230946CA:
	word32 a0_1250
	word32 a3_1253
	word32 s1_2929
	word32 s4_2930
	word32 s5_2931
	word32 s9_2932
	word32 ra_1263 = ecp_modp(ra_1227, fp + -72<i32>, a2_1016, a4_1018, a5_1019, s2_1025, s5_1233, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_2929, out a0_1250, out a2_1016, out a3_1253, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2930, out s5_2931, out s6_1002, out s7, out s8_1004, out s9_2932, out s10, out s11, out mstatus)
	s0_101 = a0_1250
	branch a0_1250 != 0<32> l2309457E
l230946D8:
	word32 s1_2934
	word32 a7_2935
	word32 s4_2936
	word32 s0_2933
	word32 a0_1282
	word32 a3_1285
	word32 ra_1290 = mbedtls_mpi_sub_mpi(ra_1263, a0_1250, fp + -72<i32>, a3_1253, a4_1018, a5_1019, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_2933, out s1_2934, out a0_1282, out a2_1016, out a3_1285, out a4_1018, out a5_1019, out a7_2935, out s2_1025, out s3_1026, out s4_2936, out s8_1004)
l230946E2:
	s0_101 = a0_1282
	branch a0_1282 != 0<32> l2309457E
l230946E8:
	branch a5_1019 < 0<32> l230948E6
l230948E6:
	word32 a1_2937
	word32 a2_2938
	word32 a6_2939
	branch mbedtls_mpi_cmp_int(0<32>, a2_1016, out a1_2937, out a2_2938, out a3_1285, out a4_1018, out a5_1019, out a6_2939) == 0<32> l230946EE
l230948F2:
	word32 s0_3013
	word32 s1_3014
	word32 a1_3015
	word32 a7_3016
	word32 s4_3017
	ra_1290 = mbedtls_mpi_add_mpi(ra_1290, a0_1282, fp + -72<i32>, a3_1285, a4_1018, a5_1019, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_3013, out s1_3014, out a0_1282, out a1_3015, out a2_1016, out a3_1285, out a4_1018, out a5_1019, out a7_3016, out s2_1025, out s3_1026, out s4_3017, out s8_1004)
l230946EE:
	word32 s0_2940
	word32 a7_2941
	word32 s4_2942
	word32 a0_1366
	word32 s1_1376
	word32 a3_1369
	word32 ra_1374 = mbedtls_mpi_sub_mpi(ra_1290, a0_1282, fp + -72<i32>, a3_1285, a4_1018, a5_1019, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_2940, out s1_1376, out a0_1366, out a2_1016, out a3_1369, out a4_1018, out a5_1019, out a7_2941, out s2_1025, out s3_1026, out s4_2942, out s8_1004)
l230946F8:
	s0_101 = a0_1366
	branch a0_1366 != 0<32> l2309457E
l230946FE:
	branch a5_1019 < 0<32> l230948FE
l230948FE:
	word32 a6_2945
	word32 a1_2943
	word32 a2_2944
	branch mbedtls_mpi_cmp_int(0<32>, a2_1016, out a1_2943, out a2_2944, out a3_1369, out a4_1018, out a5_1019, out a6_2945) == 0<32> l23094704
l2309490A:
	word32 s4_3012
	word32 s0_3009
	word32 a1_3010
	word32 a7_3011
	ra_1374 = mbedtls_mpi_add_mpi(ra_1374, a0_1366, fp + -72<i32>, a3_1369, a4_1018, a5_1019, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_3009, out s1_1376, out a0_1366, out a1_3010, out a2_1016, out a3_1369, out a4_1018, out a5_1019, out a7_3011, out s2_1025, out s3_1026, out s4_3012, out s8_1004)
l23094704:
	word32 a7_2947
	word32 s0_2946
	word32 a0_1450
	word32 s1_1460
	word32 s4_1463
	word32 a3_1453
	word32 ra_1458 = mbedtls_mpi_sub_mpi(ra_1374, a0_1366, s1_1376, a3_1369, a4_1018, a5_1019, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_2946, out s1_1460, out a0_1450, out a2_1016, out a3_1453, out a4_1018, out a5_1019, out a7_2947, out s2_1025, out s3_1026, out s4_1463, out s8_1004)
l2309470E:
	s0_101 = a0_1450
	branch a0_1450 != 0<32> l2309457E
l23094714:
	branch a5_1019 < 0<32> l23094916
l23094916:
	word32 a5_1486
	word32 a2_2949
	word32 a6_2950
	word32 a1_2948
	branch mbedtls_mpi_cmp_int(0<32>, dwArg84, out a1_2948, out a2_2949, out a3_1453, out a4_1018, out a5_1486, out a6_2950) == 0<32> l2309471A
l23094922:
	word32 s0_3006
	word32 a1_3007
	word32 a7_3008
	ra_1458 = mbedtls_mpi_add_mpi(ra_1458, a0_1450, s1_1460, a3_1453, a4_1018, a5_1486, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_3006, out s1_1460, out a0_1450, out a1_3007, out a2_1016, out a3_1453, out a4_1018, out a5_1019, out a7_3008, out s2_1025, out s3_1026, out s4_1463, out s8_1004)
l2309471A:
	word32 s1_1548
	word32 s5_1552
	word32 a0_1561
	word32 s4_2953
	word32 s0_2951
	word32 a3_2952
	word32 ra_1546 = mbedtls_mpi_mul_mpi(ra_1458, s1_1460, s1_1460, fp + -96<i32>, a3_1453, a4_1018, s2_1025, s4_1463, s6_1002, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2951, out s1_1548, out a0_1561, out a2_1016, out a3_2952, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2953, out s5_1552, out s6_1002, out s8_1004)
	s0_101 = a0_1561
	branch a0_1561 != 0<32> l2309457E
l2309472A:
	word32 a0_1584
	word32 a3_1587
	word32 s1_1591
	word32 s9_2956
	word32 s5_2955
	word32 s4_2954
	word32 ra_1597 = ecp_modp(ra_1546, s1_1548, a2_1016, a4_1018, a5_1019, s2_1025, s5_1552, s6_1002, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_1591, out a0_1584, out a2_1016, out a3_1587, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2954, out s5_2955, out s6_1002, out s7, out s8_1004, out s9_2956, out s10, out s11, out mstatus)
	s0_101 = a0_1584
	branch a0_1584 != 0<32> l2309457E
l23094738:
	word32 a0_1616
	word32 s1_1626
	word32 s0_2957
	word32 a7_2958
	word32 s4_1629
	word32 a3_1619
	word32 ra_1624 = mbedtls_mpi_sub_mpi(ra_1597, a0_1584, s1_1591, a3_1587, a4_1018, a5_1019, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_2957, out s1_1626, out a0_1616, out a2_1016, out a3_1619, out a4_1018, out a5_1019, out a7_2958, out s2_1025, out s3_1026, out s4_1629, out s8_1004)
	s0_101 = a0_1616
	s7 = s1_1626
	branch a0_1616 != 0<32> l2309457E
l2309474A:
	branch a5_1019 < 0<32> l2309492E
l2309492E:
	word32 a5_1652
	word32 a6_2961
	word32 a1_2959
	word32 a2_2960
	branch mbedtls_mpi_cmp_int(0<32>, dwArg84, out a1_2959, out a2_2960, out a3_1619, out a4_1018, out a5_1652, out a6_2961) == 0<32> l23094750
l2309493A:
	word32 a0_1663
	word32 s0_3002
	word32 s1_3003
	word32 a1_3004
	word32 a7_3005
	ra_1624 = mbedtls_mpi_add_mpi(ra_1624, s0_101, s1_1626, a3_1619, a4_1018, a5_1652, s2_1025, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_3002, out s1_3003, out a0_1663, out a1_3004, out a2_1016, out a3_1619, out a4_1018, out a5_1019, out a7_3005, out s2_1025, out s3_1026, out s4_1629, out s8_1004)
	s0_101 = a0_1663
	branch a0_1663 == 0<32> l2309474A
l2309494A:
l23094750:
	word32 s5_1715
	word32 a0_1724
	word32 s4_2965
	word32 s1_2963
	word32 a3_2964
	word32 s0_2962
	word32 ra_1709 = mbedtls_mpi_mul_mpi(ra_1624, fp + -60<i32>, s6_1002, s4_1629 + 24<i32>, a3_1619, a4_1018, s2_1025, s4_1629, s6_1002, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_2962, out s1_2963, out a0_1724, out a2_1016, out a3_2964, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2965, out s5_1715, out s6_1002, out s8_1004)
	s0_101 = a0_1724
	branch a0_1724 != 0<32> l2309457E
l23094762:
	word32 a0_1734
	word32 s5_1752
	word32 s9_2969
	word32 a3_2967
	word32 s4_2968
	word32 s1_2966
	word32 ra_1747 = ecp_modp(ra_1709, fp + -60<i32>, a2_1016, a4_1018, a5_1019, s2_1025, s5_1715, s6_1002, s1_1626, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_2966, out a0_1734, out a2_1016, out a3_2967, out a4_1018, out a5_1019, out s2_1025, out s3_1026, out s4_2968, out s5_1752, out s6_1002, out s7, out s8_1004, out s9_2969, out s10, out s11, out mstatus)
	s0_101 = a0_1734
	branch a0_1734 != 0<32> l2309457E
l23094770:
	word32 s4_2974
	word32 a7_2973
	word32 s1_2971
	word32 a3_2972
	word32 s0_2970
	word32 a0_1765
	word32 ra_1773 = mbedtls_mpi_shift_l(ra_1747, 1<32>, a2_1016, a4_1018, a5_1019, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s0_2970, out s1_2971, out a0_1765, out a2_1016, out a3_2972, out a4_1018, out a5_1019, out a7_2973, out s2_1025, out s3_1026, out s4_2974, out s8_1004)
l23094778:
	s0_101 = a0_1765
	branch a0_1765 != 0<32> l2309457E
l2309477E:
	word32 a2_1798
	word32 a3_1799
	word32 a4_1800
	word32 a5_1801
	word32 a6_2976
	word32 a1_2975
	branch mbedtls_mpi_cmp_mpi(a2_1016, a4_1018, a5_1019, out a1_2975, out a2_1798, out a3_1799, out a4_1800, out a5_1801, out a6_2976) >= 0<32> l2309494C
l2309494C:
	word32 a7_2981
	word32 s4_2982
	word32 a1_2979
	word32 a3_2980
	word32 s1_2978
	word32 s0_2977
	ra_1773 = mbedtls_mpi_sub_abs(ra_1773, fp + -60<i32>, fp + -60<i32>, s3_1026, a3_1799, a4_1800, a5_1801, mstatus, dwArg58, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_2977, out s1_2978, out a0_1765, out a1_2979, out a2_1016, out a3_2980, out a4_1018, out a5_1019, out a7_2981, out s2_1025, out s3_1026, out s4_2982, out s8_1004)
l2309478A:
	word32 a0_1834
	word32 a3_1842
	word32 s4_2988
	word32 a7_2987
	word32 a1_2985
	word32 a6_2986
	word32 s0_2983
	word32 s1_2984
	word32 ra_1846 = mbedtls_mpi_copy(ra_1773, s5_1752, fp + -72<i32>, a2_1798, a3_1799, a4_1800, a5_1801, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s0_2983, out s1_2984, out a0_1834, out a1_2985, out a2_1016, out a3_1842, out a4_1018, out a5_1019, out a6_2986, out a7_2987, out s2_1025, out s3_1026, out s4_2988, out s8_1004)
	s0_101 = a0_1834
	branch a0_1834 != 0<32> l2309457E
l23094798:
	word32 a0_1859
	word32 a3_1867
	word32 s4_2994
	word32 s0_2989
	word32 s1_2990
	word32 a1_2991
	word32 a6_2992
	word32 a7_2993
	word32 ra_1871 = mbedtls_mpi_copy(ra_1846, s5_1752 + 12<i32>, fp + -84<i32>, a2_1016, a3_1842, a4_1018, a5_1019, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s0_2989, out s1_2990, out a0_1859, out a1_2991, out a2_1016, out a3_1867, out a4_1018, out a5_1019, out a6_2992, out a7_2993, out s2_1025, out s3_1026, out s4_2994, out s8_1004)
	s0_101 = a0_1859
	branch a0_1859 != 0<32> l2309457E
l230947A8:
	word32 a0_1884
	word32 a7_3000
	word32 s4_3001
	word32 s0_2995
	word32 s1_2996
	word32 a1_2997
	word32 a3_2998
	word32 a6_2999
	mbedtls_mpi_copy(ra_1871, s5_1752 + 24<i32>, fp + -60<i32>, a2_1016, a3_1867, a4_1018, a5_1019, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s0_2995, out s1_2996, out a0_1884, out a1_2997, out a2_1016, out a3_2998, out a4_1018, out a5_1019, out a6_2999, out a7_3000, out s2_1025, out s3_1026, out s4_3001, out s8_1004)
	s0_101 = a0_1884
l2309457E:
	word32 a2_1916
	word32 a5_1917
	word32 a4_1920
	word32 a2_1928
	word32 a5_1929
	word32 a4_1932
	word32 s4_2768
	word32 a6_2767
	word32 a3_2766
	word32 a1_2765
	word32 s4_2763
	word32 a3_2761
	word32 a1_2760
	word32 a0_2759
	word32 a0_2764
	word32 a6_2762
	mbedtls_mpi_free(mbedtls_mpi_free(fp + -96<i32>, a2_1016, a4_1018, a5_1019, mstatus, dwArgE8, dwArg0128, out a0_2759, out a1_2760, out a2_1916, out a3_2761, out a4_1920, out a5_1917, out a6_2762, out s4_2763), a2_1916, a4_1920, a5_1917, mstatus, dwArgE8, dwArg0128, out a0_2764, out a1_2765, out a2_1928, out a3_2766, out a4_1932, out a5_1929, out a6_2767, out s4_2768)
	word32 a2_1940
	word32 a5_1941
	word32 a4_1944
	word32 s4_2773
	word32 a1_2770
	word32 a0_2769
	word32 a3_2771
	word32 a6_2772
	mbedtls_mpi_free(fp + -72<i32>, a2_1928, a4_1932, a5_1929, mstatus, dwArgE8, dwArg0128, out a0_2769, out a1_2770, out a2_1940, out a3_2771, out a4_1944, out a5_1941, out a6_2772, out s4_2773)
	word32 a2_1952
	word32 a5_1953
	word32 a4_1956
	word32 a6_1957
	word32 s4_1959
	word32 a3_2776
	word32 a0_2774
	word32 a1_2775
	mbedtls_mpi_free(fp + -60<i32>, a2_1940, a4_1944, a5_1941, mstatus, dwArgE8, dwArg0128, out a0_2774, out a1_2775, out a2_1952, out a3_2776, out a4_1956, out a5_1953, out a6_1957, out s4_1959)
	s1Out = dwArg28
	a0Out = s0_101
	a2Out = a2_1952
	a3Out = dwArg08
	a4Out = a4_1956
	a5Out = a5_1953
	a6Out = a6_1957
	s2Out = s2_1025
	s3Out = s3_1026
	s4Out = s4_1959
	s5Out = s4
	s6Out = s6_1002
	s7Out = s7
	s8Out = s8_1004
	s9Out = dwLoc5C
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return dwArg68
ecp_double_jac_exit:


word32 ecp_normalize_jac(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgE8, word32 dwArgF4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0124, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecp_normalize_jac_many
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00E8:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0124:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a2 a4 a5 mstatus s10 s11 s2 s3 s4 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ecp_normalize_jac_entry:
l23094958:
	word32 a1_482
	word32 a2_483
	word32 a3_484
	word32 a6_485
	word32 a4_26
	word32 a5_27
	word32 a0_22 = mbedtls_mpi_cmp_int(0<32>, a2, out a1_482, out a2_483, out a3_484, out a4_26, out a5_27, out a6_485)
	word32 s3_119 = a1 + 24<i32>
	word32 s2_111 = a0
	word32 s0_100 = a0_22
	branch a0_22 == 0<32> l23094A14
l23094978:
	mbedtls_mpi_init(fp + -56<i32>)
	mbedtls_mpi_init(fp + -44<i32>)
	word32 a0_44
	word32 a3_47
	word32 s4_60
	word32 s1_486
	word32 s5_487
	word32 s8_488
	word32 a5_108
	word32 a4_107
	word32 a2_105
	word32 ra_59 = mbedtls_mpi_inv_mod(ra, a0_22, a1 + 24<i32>, a0 + 4<i32>, s5, s6, s7, s10, s11, mstatus, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, s1, dwArg64, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0124, out s1_486, out a0_44, out a2_105, out a3_47, out a4_107, out a5_108, out s2_111, out s3_119, out s4_60, out s5_487, out s6, out s7, out s8_488, out s9, out s10, out s11)
	s0_100 = a0_44
	branch a0_44 != 0<32> l23094A08
l23094994:
	word32 s5_89
	word32 a0_98
	word32 s0_500
	word32 s1_501
	word32 a3_502
	word32 s4_503
	word32 s8_504
	word32 ra_83 = mbedtls_mpi_mul_mpi(ra_59, fp + -44<i32>, fp + -56<i32>, fp + -56<i32>, a3_47, a4_107, s2_111, s4_60, s6, mstatus, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0158, out s0_500, out s1_501, out a0_98, out a2_105, out a3_502, out a4_107, out a5_108, out s2_111, out s3_119, out s4_503, out s5_89, out s6, out s8_504)
	s0_100 = a0_98
	branch a0_98 != 0<32> l23094A08
l230949A2:
	word32 a0_103
	word32 a3_106
	word32 s1_110
	word32 s4_120
	word32 s5_505
	word32 s8_506
	word32 ra_116 = ecp_modp(ra_83, fp + -44<i32>, a2_105, a4_107, a5_108, s2_111, s5_89, s6, s7, s10, s11, mstatus, dwLoc38, dwLoc30, dwLoc2C, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgE8, dwArgF4, out s1_110, out a0_103, out a2_105, out a3_106, out a4_107, out a5_108, out s2_111, out s3_119, out s4_120, out s5_505, out s6, out s7, out s8_506, out s9, out s10, out s11, out mstatus)
	s0_100 = a0_103
	branch a0_103 != 0<32> l23094A08
l230949AE:
	word32 s1_144
	word32 s5_148
	word32 a0_157
	word32 s0_507
	word32 a3_508
	word32 s4_509
	word32 s8_510
	word32 ra_142 = mbedtls_mpi_mul_mpi(ra_116, s1_110, s1_110, fp + -44<i32>, a3_106, a4_107, s2_111, s4_120, s6, mstatus, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0158, out s0_507, out s1_144, out a0_157, out a2_105, out a3_508, out a4_107, out a5_108, out s2_111, out s3_119, out s4_509, out s5_148, out s6, out s8_510)
	s0_100 = a0_157
	branch a0_157 != 0<32> l23094A08
l230949BC:
	word32 a0_162
	word32 a3_165
	word32 s1_169
	word32 s4_179
	word32 s5_511
	word32 s8_512
	word32 ra_175 = ecp_modp(ra_142, s1_144, a2_105, a4_107, a5_108, s2_111, s5_148, s6, s7, s10, s11, mstatus, dwLoc38, dwLoc30, dwLoc2C, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgE8, dwArgF4, out s1_169, out a0_162, out a2_105, out a3_165, out a4_107, out a5_108, out s2_111, out s3_119, out s4_179, out s5_511, out s6, out s7, out s8_512, out s9, out s10, out s11, out mstatus)
	s0_100 = a0_162
	branch a0_162 != 0<32> l23094A08
l230949C8:
	word32 s1_204
	word32 s5_208
	word32 a0_217
	word32 s0_513
	word32 a3_514
	word32 s4_515
	word32 s8_516
	word32 ra_202 = mbedtls_mpi_mul_mpi(ra_175, s1_169 + 0xC<32>, s1_169 + 0xC<32>, fp + -44<i32>, a3_165, a4_107, s2_111, s4_179, s6, mstatus, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0158, out s0_513, out s1_204, out a0_217, out a2_105, out a3_514, out a4_107, out a5_108, out s2_111, out s3_119, out s4_515, out s5_208, out s6, out s8_516)
	s0_100 = a0_217
	branch a0_217 != 0<32> l23094A08
l230949D8:
	word32 a0_222
	word32 a3_225
	word32 s1_229
	word32 s4_239
	word32 s5_517
	word32 s8_518
	word32 ra_235 = ecp_modp(ra_202, s1_204, a2_105, a4_107, a5_108, s2_111, s5_208, s6, s7, s10, s11, mstatus, dwLoc38, dwLoc30, dwLoc2C, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgE8, dwArgF4, out s1_229, out a0_222, out a2_105, out a3_225, out a4_107, out a5_108, out s2_111, out s3_119, out s4_239, out s5_517, out s6, out s7, out s8_518, out s9, out s10, out s11, out mstatus)
	s0_100 = a0_222
	branch a0_222 != 0<32> l23094A08
l230949E4:
	word32 s1_263
	word32 s5_267
	word32 a0_276
	word32 s0_519
	word32 a3_520
	word32 s4_521
	word32 s8_522
	word32 ra_261 = mbedtls_mpi_mul_mpi(ra_235, s1_229, s1_229, fp + -56<i32>, a3_225, a4_107, s2_111, s4_239, s6, mstatus, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0158, out s0_519, out s1_263, out a0_276, out a2_105, out a3_520, out a4_107, out a5_108, out s2_111, out s3_119, out s4_521, out s5_267, out s6, out s8_522)
	s0_100 = a0_276
	branch a0_276 != 0<32> l23094A08
l230949F2:
	word32 a0_281
	word32 a3_284
	word32 s1_523
	word32 s4_524
	word32 s5_525
	word32 s8_526
	word32 ra_294 = ecp_modp(ra_261, s1_263, a2_105, a4_107, a5_108, s2_111, s5_267, s6, s7, s10, s11, mstatus, dwLoc38, dwLoc30, dwLoc2C, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgE8, dwArgF4, out s1_523, out a0_281, out a2_105, out a3_284, out a4_107, out a5_108, out s2_111, out s3_119, out s4_524, out s5_525, out s6, out s7, out s8_526, out s9, out s10, out s11, out mstatus)
	s0_100 = a0_281
	branch a0_281 != 0<32> l23094A08
l230949FE:
	word32 s1_527
	word32 a1_528
	word32 a3_529
	word32 a7_530
	word32 s4_531
	word32 s8_532
	mbedtls_mpi_lset(ra_294, a3_284, a4_107, mstatus, dwLoc40, dwLoc3C, dwLoc18, dwLoc08, dwArgB8, dwArgF8, dwArg0138, out s1_527, out a1_528, out a2_105, out a3_529, out a4_107, out a5_108, out a7_530, out s2_111, out s3_119, out s4_531, out s8_532)
	s0_100 = s3_119
l23094A08:
	word32 a2_341
	word32 a5_342
	word32 a4_345
	word32 a0_489
	word32 a1_490
	word32 a3_491
	word32 a6_492
	word32 s4_493
	mbedtls_mpi_free(fp + -56<i32>, a2_105, a4_107, a5_108, mstatus, dwArg0108, dwArg0148, out a0_489, out a1_490, out a2_341, out a3_491, out a4_345, out a5_342, out a6_492, out s4_493)
	word32 a0_494
	word32 a1_495
	word32 a2_496
	word32 a3_497
	word32 a6_498
	word32 s4_499
	mbedtls_mpi_free(fp + -44<i32>, a2_341, a4_345, a5_342, mstatus, dwArg0108, dwArg0148, out a0_494, out a1_495, out a2_496, out a3_497, out a4_26, out a5_27, out a6_498, out s4_499)
l23094A14:
	a2Out = dwArg0138
	a4Out = a4_26
	a5Out = a5_27
	s2Out = s2_111
	s3Out = s3_119
	s4Out = dwArgF4
	s6Out = s6
	s7Out = s7
	s8Out = dwArgD4
	s9Out = s9
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return s0_100
ecp_normalize_jac_exit:


word32 ecp_normalize_jac_many(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ecp_normalize_jac_many_entry:
l23094A24:
	word32 s8_1017
	word32 a2_35
	word32 a5_38
	word32 a4_37
	word32 s2_1005
	word32 s3_1006
	word32 s4_1010
	word32 s0_53
	branch a2 >u 1<32> l23094A60
l23094A60:
	word32 a1_34
	word32 a3_36
	word32 s4_1055
	word32 s1_1054
	word32 s0_1053
	word32 ra_40 = mycalloc(ra, a1, a2, 0xC<32>, a3, a4, 1<32>, mstatus, s6, s4, dwArgB8, dwArgF8, out s0_1053, out s1_1054, out a1_34, out a2_35, out a3_36, out a4_37, out a5_38, out s2_1005, out s3_1006, out s4_1055, out s8_1017)
	s4_1010 = a2
	branch a2 == 0<32> l23094C22
l23094C22:
	s0_53 = 0xFB000280<32>
l23094A72:
	mbedtls_mpi_init(fp + -84<i32>)
	mbedtls_mpi_init(fp + -72<i32>)
	word32 a0_63
	word32 a7_1061
	word32 a6_1060
	word32 a1_1059
	word32 s1_1058
	word32 s0_1057
	word32 s4_151
	word32 a3_102
	word32 a5_108
	word32 a4_100
	word32 a2_105
	word32 s2_114
	word32 ra_147 = mbedtls_mpi_copy(ra_40, a2, a1_34 + 0x18<32>, a2_35, a3_36, a4_37, mbedtls_mpi_init(fp + -60<i32>), mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s0_1057, out s1_1058, out a0_63, out a1_1059, out a2_105, out a3_102, out a4_100, out a5_108, out a6_1060, out a7_1061, out s2_114, out s3_1006, out s4_151, out s8_1017)
	branch a0_63 != 0<32> l23094B08
l23094A92:
	word32 s6_164 = s4_151 + 12<i32>
l23094A98:
	word32 s5_117
	word32 a0_126
	word32 s4_1109
	word32 a3_1108
	word32 s0_1106
	word32 s1_1107
	word32 ra_111 = mbedtls_mpi_mul_mpi(ra_147, s6_164, s6_164 + -12<i32>, a2_105 + 0x18<32>, a3_102, a4_100, s2_114, s4_151, s6_164, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1106, out s1_1107, out a0_126, out a2_105, out a3_1108, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_1109, out s5_117, out s6, out s8_1017)
	branch a0_126 != 0<32> l23094B08
l23094AB0:
	word32 a0_134
	word32 s5_152
	word32 s1_1077
	word32 s9_1078
	ra_147 = ecp_modp(ra_111, s6, a2_105, a4_100, a5_108, s2_114, s5_117, s6, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_1077, out a0_134, out a2_105, out a3_102, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_151, out s5_152, out s6, out s7, out s8_1017, out s9_1078, out s10, out s11, out mstatus)
	branch a0_134 != 0<32> l23094B08
l23094ABC:
	s6_164 = s6 + 0xC<32>
	branch s2_114 != s5_152 + 1<i32> l23094B38
l23094B38:
l23094AC6:
	word32 a0_172
	word32 s9_1080
	word32 s1_1079
	word32 s5_196
	word32 s4_188
	word32 a3_175
	word32 ra_187 = mbedtls_mpi_inv_mod(ra_147, a0_134, s2_114 + s4_151, s3_1006 + 4<i32>, s5_152, s6 + 0xC<32>, s7, s10, s11, mstatus, s2, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, s3, s1, dwArg58, dwArg78, dwArg88, dwArg98, dwArg0104, out s1_1079, out a0_172, out a2_105, out a3_175, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_188, out s5_196, out s6, out s7, out s8_1017, out s9_1080, out s10, out s11)
	branch a0_172 != 0<32> l23094B08
l23094ADE:
	a5_108 = s2_114 << 2<u32>
	s6 = s4_188 + -12<i32>
	s7 = 0xC<32>
l23094AEA:
	word32 a3_312
	word32 ra_322
	word32 s4_326
	word32 a0_309
	branch s5_196 != 0<32> l23094B3C
l23094B3C:
	word32 s5_233
	word32 a0_242
	word32 s4_1084
	word32 a3_1083
	word32 s1_1082
	word32 s0_1081
	word32 ra_227 = mbedtls_mpi_mul_mpi(ra_187, fp + -72<i32>, fp + -84<i32>, s5_196 + s7 + s6, a3_175, a4_100, s2_114, s4_188, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1081, out s1_1082, out a0_242, out a2_105, out a3_1083, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_1084, out s5_233, out s6, out s8_1017)
	branch a0_242 != 0<32> l23094B08
l23094B4E:
	word32 a0_249
	word32 a3_252
	word32 s1_256
	word32 s4_266
	word32 s9_1132
	word32 s5_1131
	word32 ra_262 = ecp_modp(ra_227, fp + -72<i32>, a2_105, a4_100, a5_108, s2_114, s5_233, s6, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_256, out a0_249, out a2_105, out a3_252, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_266, out s5_1131, out s6, out s7, out s8_1017, out s9_1132, out s10, out s11, out mstatus)
	branch a0_249 != 0<32> l23094B08
l23094B5A:
	word32 s5_295
	word32 a0_304
	word32 s4_1136
	word32 a3_1135
	word32 s1_1134
	word32 s0_1133
	word32 ra_289 = mbedtls_mpi_mul_mpi(ra_262, fp + -84<i32>, fp + -84<i32>, Mem21[s1_256 + -4<i32>:int32] + 0x18<32>, a3_252, a4_100, s2_114, s4_266, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1133, out s1_1134, out a0_304, out a2_105, out a3_1135, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_1136, out s5_295, out s6, out s8_1017)
	branch a0_304 != 0<32> l23094B08
l23094B6C:
	word32 s5_1138
	word32 s1_1137
	word32 s9_1139
	ra_322 = ecp_modp(ra_289, fp + -84<i32>, a2_105, a4_100, a5_108, s2_114, s5_295, s6, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_1137, out a0_309, out a2_105, out a3_312, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_326, out s5_1138, out s6, out s7, out s8_1017, out s9_1139, out s10, out s11, out mstatus)
l23094AEE:
	word32 s0_1085
	word32 s1_1086
	word32 a1_1087
	word32 a6_1088
	word32 a7_1089
	ra_322 = mbedtls_mpi_copy(ra_187, fp + -72<i32>, fp + -84<i32>, a2_105, a3_175, a4_100, a5_108, mstatus, dwLoc48, dwArg88, dwArgC8, dwArg0108, out s0_1085, out s1_1086, out a0_309, out a1_1087, out a2_105, out a3_312, out a4_100, out a5_108, out a6_1088, out a7_1089, out s2_114, out s3_1006, out s4_326, out s8_1017)
l23094AF6:
	branch a0_309 != 0<32> l23094B08
l23094AFA:
	word32 s5_390
	word32 a0_399
	word32 s1_1091
	word32 a3_1092
	word32 s4_1093
	word32 s0_1090
	word32 ra_384 = mbedtls_mpi_mul_mpi(ra_322, fp + -60<i32>, fp + -72<i32>, fp + -72<i32>, a3_312, a4_100, s2_114, s4_326, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1090, out s1_1091, out a0_399, out a2_105, out a3_1092, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_1093, out s5_390, out s6, out s8_1017)
	branch a0_399 == 0<32> l23094B76
l23094B76:
	word32 a0_407
	word32 a3_410
	word32 s1_414
	word32 s4_424
	word32 s5_1094
	word32 s9_1095
	word32 ra_420 = ecp_modp(ra_384, fp + -60<i32>, a2_105, a4_100, a5_108, s2_114, s5_390, s6, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_414, out a0_407, out a2_105, out a3_410, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_424, out s5_1094, out s6, out s7, out s8_1017, out s9_1095, out s10, out s11, out mstatus)
	branch a0_407 != 0<32> l23094B08
l23094B82:
	word32 a1_436 = Mem21[s1_414 + -4<i32>:int32]
	word32 s1_448
	word32 s5_452
	word32 a0_461
	word32 s4_1112
	word32 a3_1111
	word32 s0_1110
	word32 ra_446 = mbedtls_mpi_mul_mpi(ra_420, a1_436, a1_436, fp + -60<i32>, a3_410, a4_100, s2_114, s4_424, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1110, out s1_448, out a0_461, out a2_105, out a3_1111, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_1112, out s5_452, out s6, out s8_1017)
	branch a0_461 != 0<32> l23094B08
l23094B92:
	word32 a0_466
	word32 a3_469
	word32 s1_473
	word32 s4_483
	word32 s9_1114
	word32 s5_1113
	word32 ra_479 = ecp_modp(ra_446, Mem21[s1_448 + -4<i32>:int32], a2_105, a4_100, a5_108, s2_114, s5_452, s6, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_473, out a0_466, out a2_105, out a3_469, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_483, out s5_1113, out s6, out s7, out s8_1017, out s9_1114, out s10, out s11, out mstatus)
	branch a0_466 != 0<32> l23094B08
l23094BA0:
	word32 a1_495 = Mem21[s1_473 + -4<i32>:int32]
	word32 s1_508
	word32 s5_512
	word32 a0_521
	word32 s4_1117
	word32 a3_1116
	word32 s0_1115
	word32 ra_506 = mbedtls_mpi_mul_mpi(ra_479, a1_495 + 0xC<32>, a1_495 + 0xC<32>, fp + -60<i32>, a3_469, a4_100, s2_114, s4_483, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1115, out s1_508, out a0_521, out a2_105, out a3_1116, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_1117, out s5_512, out s6, out s8_1017)
	branch a0_521 != 0<32> l23094B08
l23094BB2:
	word32 a0_527
	word32 a3_530
	word32 s1_534
	word32 s4_544
	word32 s9_1119
	word32 s5_1118
	word32 ra_540 = ecp_modp(ra_506, Mem21[s1_508 + -4<i32>:int32] + 0xC<32>, a2_105, a4_100, a5_108, s2_114, s5_512, s6, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_534, out a0_527, out a2_105, out a3_530, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_544, out s5_1118, out s6, out s7, out s8_1017, out s9_1119, out s10, out s11, out mstatus)
	branch a0_527 != 0<32> l23094B08
l23094BC2:
	word32 a1_556 = Mem21[s1_534 + -4<i32>:int32]
	word32 s1_569
	word32 s5_573
	word32 a0_582
	word32 s4_1122
	word32 a3_1121
	word32 s0_1120
	word32 ra_567 = mbedtls_mpi_mul_mpi(ra_540, a1_556 + 0xC<32>, a1_556 + 0xC<32>, fp + -72<i32>, a3_530, a4_100, s2_114, s4_544, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1120, out s1_569, out a0_582, out a2_105, out a3_1121, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_1122, out s5_573, out s6, out s8_1017)
	branch a0_582 != 0<32> l23094B08
l23094BD6:
	word32 a0_588
	word32 a3_591
	word32 s5_606
	word32 s9_1125
	word32 s4_1124
	word32 s1_1123
	word32 ra_601 = ecp_modp(ra_567, Mem21[s1_569 + -4<i32>:int32] + 0xC<32>, a2_105, a4_100, a5_108, s2_114, s5_573, s6, s7, s10, s11, mstatus, dwLoc58, dwLoc50, dwLoc4C, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_1123, out a0_588, out a2_105, out a3_591, out a4_100, out a5_108, out s2_114, out s3_1006, out s4_1124, out s5_606, out s6, out s7, out s8_1017, out s9_1125, out s10, out s11, out mstatus)
	branch a0_588 != 0<32> l23094B08
l23094BE8:
	word32 a0_619
	word32 a3_622
	word32 s1_1126
	word32 ra_626 = mbedtls_mpi_shrink(ra_601, Mem21[s3_1006 + 8<i32>:int32], a3_591, a4_100, mstatus, dwLoc50, dwLoc4C, dwLoc28, dwArgA8, dwArgE8, dwArg0128, out s1_1126, out a0_619, out a2_105, out a3_622, out a4_100, out a5_108, out s2_114, out s3_1006, out s8_1017)
	branch a0_619 != 0<32> l23094B08
l23094BFA:
	word32 a0_644
	word32 s1_652
	word32 a3_1127
	ra_187 = mbedtls_mpi_shrink(ra_626, Mem21[s3_1006 + 8<i32>:int32], a3_622, a4_100, mstatus, dwLoc50, dwLoc4C, dwLoc28, dwArgA8, dwArgE8, dwArg0128, out s1_652, out a0_644, out a2_105, out a3_1127, out a4_100, out a5_108, out s2_114, out s3_1006, out s8_1017)
	branch a0_644 != 0<32> l23094B08
l23094C0E:
	word32 a6_1130
	word32 a1_1129
	word32 a0_1128
	mbedtls_mpi_free(Mem21[s1_652 + -4<i32>:int32] + 0x18<32>, a2_105, a4_100, a5_108, mstatus, dwArgE8, dwArg0128, out a0_1128, out a1_1129, out a2_105, out a3_175, out a4_100, out a5_108, out a6_1130, out s4_188)
	branch s5_606 == 0<32> l23094B08
l23094C1E:
	s5_196 = s5_606 + 0xFFFFFFFF<32>
l23094B08:
	word32 a2_691
	word32 a5_692
	word32 a4_695
	word32 s4_1066
	word32 a6_1065
	word32 a3_1064
	word32 a1_1063
	word32 a0_1062
	mbedtls_mpi_free(fp + -84<i32>, a2_105, a4_100, a5_108, mstatus, dwArgE8, dwArg0128, out a0_1062, out a1_1063, out a2_691, out a3_1064, out a4_695, out a5_692, out a6_1065, out s4_1066)
	word32 a2_703
	word32 a5_704
	word32 a4_707
	word32 s4_1071
	word32 a6_1070
	word32 a3_1069
	word32 a1_1068
	word32 a0_1067
	mbedtls_mpi_free(fp + -72<i32>, a2_691, a4_695, a5_692, mstatus, dwArgE8, dwArg0128, out a0_1067, out a1_1068, out a2_703, out a3_1069, out a4_707, out a5_704, out a6_1070, out s4_1071)
	word32 s4_722
	word32 a1_1073
	word32 a0_1072
	word32 a3_1074
	word32 a5_1075
	word32 a6_1076
	word32 a4_719
	word32 a2_715
	mbedtls_mpi_free(fp + -60<i32>, a2_703, a4_707, a5_704, mstatus, dwArgE8, dwArg0128, out a0_1072, out a1_1073, out a2_715, out a3_1074, out a4_719, out a5_1075, out a6_1076, out s4_722)
	word32 a5_725 = 0xC<32>
	word32 s1_728 = s4_722
	s2_1005 = s2_114 + 0xC<32> + s4_722
l23094B24:
	word32 s4_747
	word32 a1_1097
	word32 a3_1098
	word32 a6_1099
	word32 a0_1096
	s1_728 = mbedtls_mpi_free(s1_728, a2_715, a4_719, a5_725, mstatus, dwArgE8, dwArg0128, out a0_1096, out a1_1097, out a2_715, out a3_1098, out a4_719, out a5_725, out a6_1099, out s4_747)
	branch s2_1005 != s1_728 l23094B24
l23094B30:
	word32 a6_1104
	word32 t3_1105
	word32 a3_1103
	word32 a1_1102
	word32 s1_1100
	word32 a0_1101
	vPortFree(s4_747, a2_715, a5_725, mstatus, dwArgF8, dwArg0138, out s0_53, out s1_1100, out a0_1101, out a1_1102, out a2_35, out a3_1103, out a4_37, out a5_38, out a6_1104, out s4_1010, out t3_1105)
l23094A40:
	word32 s9_1056
	s0_53 = ecp_normalize_jac(ra, a1, a0, Mem21[a1:word32], a2, s5, s6, s7, s10, s11, mstatus, dwLoc5C, dwLoc58, dwLoc48, s2, dwLoc28, dwLoc1C, dwLoc18, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg58, dwArg68, dwArg74, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgC4, dwArgD8, dwArgE8, dwArgF8, out a2_35, out a4_37, out a5_38, out s2_1005, out s3_1006, out s4_1010, out s6, out s7, out s8_1017, out s9_1056, out s10, out s11, out mstatus)
l23094A48:
	s1Out = dwArg28
	a0Out = s0_53
	a2Out = a2_35
	a3Out = dwArg08
	a4Out = a4_37
	a5Out = a5_38
	s2Out = s2_1005
	s3Out = s3_1006
	s4Out = s4_1010
	s5Out = s4
	s6Out = s6
	s7Out = s7
	s8Out = s8_1017
	s9Out = dwLoc5C
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return dwArg68
ecp_normalize_jac_many_exit:


void mbedtls_ecp_point_init.part.2(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_keypair_init
//      mbedtls_ecp_mul
//      mbedtls_ecp_check_pub_priv
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a2 a5
// Preserved: s0 sp
mbedtls_ecp_point_init.part.2_entry:
l23094C2A:
	mbedtls_mpi_init(a0)
	mbedtls_mpi_init(a0 + 12<i32>)
l23094C48_thunk_mbedtls_mpi_init:
	mbedtls_mpi_init(a0 + 24<i32>)
	return
mbedtls_ecp_point_init.part.2_exit:


word32 mbedtls_ecp_point_free.part.4(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_point_free
//      mbedtls_ecp_mul
//      mbedtls_ecp_check_pub_priv
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
mbedtls_ecp_point_free.part.4_entry:
l23094C4C:
	word32 a2_15
	word32 a5_16
	word32 a4_19
	word32 a0_65
	word32 a1_66
	word32 a3_67
	word32 a6_68
	word32 s4_69
	mbedtls_mpi_free(a0, a2, a4, a5, mstatus, dwArg0138, dwArg0178, out a0_65, out a1_66, out a2_15, out a3_67, out a4_19, out a5_16, out a6_68, out s4_69)
	word32 a5_28
	word32 a4_31
	word32 a0_70
	word32 a1_71
	word32 a2_72
	word32 a3_73
	word32 a6_74
	word32 s4_75
	mbedtls_mpi_free(a0 + 12<i32>, a2_15, a4_19, a5_16, mstatus, dwArg0138, dwArg0178, out a0_70, out a1_71, out a2_72, out a3_73, out a4_31, out a5_28, out a6_74, out s4_75)
l23094C6A_thunk_mbedtls_mpi_free:
	word32 a0_41
	word32 a2_42
	word32 a5_43
	word32 a3_45
	word32 a4_46
	word32 s4_49
	word32 a1_76
	word32 a6_77
	word32 s1_48 = mbedtls_mpi_free(a0 + 24<i32>, dwArg10, a4_31, a5_28, mstatus, dwArg0148, dwArg0188, out a0_41, out a1_76, out a2_42, out a3_45, out a4_46, out a5_43, out a6_77, out s4_49)
	a0Out = a0_41
	a2Out = a2_42
	a3Out = a3_45
	a4Out = a4_46
	a5Out = a5_43
	s4Out = s4_49
	return s1_48
mbedtls_ecp_point_free.part.4_exit:


word32 mbedtls_ecp_grp_id_list(ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_config_defaults
// MayUse: 
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
mbedtls_ecp_grp_id_list_entry:
l23094C6E:
	word32 a5_22 = 0x4200F000<32>
	word32 a3_21 = Mem0[0x4200F71C<32>:int32]
	branch a3_21 == 0<32> l23094CA4
l23094CA4:
	word32 a2_16 = 0<32>
	word32 a5_10 = 0x230C8994<32>
l23094C92:
	word32 a1_14 = CONVERT(Mem13[a5_10:byte], byte, word32)
	branch a1_14 != 0<32> l23094C86
l23094C86:
	Mem18[a2_16 + 0x4200F718<32>:byte] = SLICE(a1_14, byte, 0)
	a5_10 = a5_10 + 0xC<32>
	a2_16 = a2_16 + 1<32>
l23094C98:
	a3_21 = a2_16 + 0x4200F718<32>
	Mem23[a3_21:byte] = 0<8>
	Mem25[1<32>:word32] = 0x4200F71C<32>
	a5_22 = 1<32>
l23094C80:
	a3Out = a3_21
	a4Out = 0x4200F71C<32>
	a5Out = a5_22
	return 0x4200F718<32>
mbedtls_ecp_grp_id_list_exit:


void mbedtls_ecp_point_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_keypair_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a2 a5
// Preserved: sp
mbedtls_ecp_point_init_entry:
l23094CB4:
	branch a0 == 0<32> l23094CBA
l23094CBA:
	return
l23094CB6:
l23094CB6_thunk_mbedtls_ecp_point_init.part.2:
	mbedtls_ecp_point_init.part.2(a0)
	return
mbedtls_ecp_point_init_exit:


void mbedtls_ecp_group_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_keypair_init
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_ecp_group_init_entry:
l23094CBC:
	branch a0 == 0<32> l23094CC8
l23094CC8:
	return
l23094CBE:
l23094CC4_thunk_memset:
	word32 t1_33
	word32 a0_34
	word32 a1_35
	word32 a2_36
	word32 a3_37
	word32 a4_38
	word32 a5_39
	memset(ra, a0, 0<32>, 124<i32>, out t1_33, out a0_34, out a1_35, out a2_36, out a3_37, out a4_38, out a5_39)
	return
mbedtls_ecp_group_init_exit:


void mbedtls_ecp_keypair_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      eckey_alloc_wrap
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: s0 sp
mbedtls_ecp_keypair_init_entry:
l23094CCA:
	branch a0 == 0<32> l23094CEE
l23094CEE:
	return
l23094CCC:
	mbedtls_ecp_group_init(ra, a0)
	mbedtls_mpi_init(a0 + 124<i32>)
l23094CEA_thunk_mbedtls_ecp_point_init:
	mbedtls_ecp_point_init(a0 + 136<i32>)
	return
mbedtls_ecp_keypair_init_exit:


word32 mbedtls_ecp_point_free(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_group_free
//      mbedtls_ecp_keypair_free
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: sp
mbedtls_ecp_point_free_entry:
l23094CF0:
	branch a0 == 0<32> l23094CF6
l23094CF6:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1
l23094CF2:
l23094CF2_thunk_mbedtls_ecp_point_free.part.4:
	word32 a0_9
	word32 a2_11
	word32 a3_12
	word32 a4_13
	word32 a5_14
	word32 s4_17
	word32 s1_16 = mbedtls_ecp_point_free.part.4(a0, a2, a4, a5, mstatus, dwArg10, dwArg0138, dwArg0148, dwArg0178, dwArg0188, out a0_9, out a2_11, out a3_12, out a4_13, out a5_14, out s4_17)
	a0Out = a0_9
	a2Out = a2_11
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_14
	s4Out = s4_17
	return s1_16
mbedtls_ecp_point_free_exit:


word32 mbedtls_ecp_group_free(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg38, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_keypair_free
//      mbedtls_ecp_check_pub_priv
//      mbedtls_ecp_group_load
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0000:[0..31] Stack +0038:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s4 t3 tp
// Preserved: s0 sp
mbedtls_ecp_group_free_entry:
l23094CF8:
	branch a0 == 0<32> l23094D74
l23094D74:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	return s1
l23094CFA:
	word32 a0_136 = Mem12[a4 + 96<i32>:word32]
	word32 a5_103 = 1<32>
	branch a4 == 1<32> l23094D34
l23094D0E:
	word32 a2_21
	word32 a5_22
	word32 a4_25
	word32 a0_234
	word32 a1_235
	word32 a3_236
	word32 a6_237
	word32 s4_238
	mbedtls_mpi_free(a0_136 + 4<32>, a2, a4, 1<32>, mstatus, dwArg0138, dwArg0178, out a0_234, out a1_235, out a2_21, out a3_236, out a4_25, out a5_22, out a6_237, out s4_238)
	word32 a2_33
	word32 a5_34
	word32 a4_37
	word32 a0_239
	word32 a1_240
	word32 a3_241
	word32 a6_242
	word32 s4_243
	mbedtls_mpi_free(a0_136 + 16<i32>, a2_21, a4_25, a5_22, mstatus, dwArg0138, dwArg0178, out a0_239, out a1_240, out a2_33, out a3_241, out a4_37, out a5_34, out a6_242, out s4_243)
	word32 a2_45
	word32 a5_46
	word32 a4_49
	word32 a0_244
	word32 a1_245
	word32 a3_246
	word32 a6_247
	word32 s4_248
	mbedtls_mpi_free(a0_136 + 28<i32>, a2_33, a4_37, a5_34, mstatus, dwArg0138, dwArg0178, out a0_244, out a1_245, out a2_45, out a3_246, out a4_49, out a5_46, out a6_247, out s4_248)
	word32 a2_58
	word32 a4_60
	word32 a5_61
	word32 a0_249
	word32 a3_250
	word32 s4_251
	mbedtls_ecp_point_free(a0_136 + 40<i32>, a2_45, a4_49, a5_46, mstatus, dwArg00, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_249, out a2_58, out a3_250, out a4_60, out a5_61, out s4_251)
	word32 a6_252
	word32 s4_253
	mbedtls_mpi_free(a0_136 + 76<i32>, a2_58, a4_60, a5_61, mstatus, dwArg0138, dwArg0178, out a0_136, out a1, out a2, out a3, out a4, out a5_103, out a6_252, out s4_253)
l23094D34:
	word32 s0_118 = Mem12[a5_103 + 116<i32>:word32]
	word32 s1_105 = 0<32>
	branch a5_103 != 0<32> l23094D5E
l23094D5E:
	branch s1_105 <u a5_103 l23094D52
l23094D52:
	word32 a5_91 = s1_105 + 36<i32>
	word32 a3_254
	word32 s4_255
	s1_105 = mbedtls_ecp_point_free(a0_136 + a5_91, a2, a4, a5_91, mstatus, dwArg00, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_136, out a2, out a3_254, out a4, out a5_103, out s4_255)
l23094D66:
	word32 a0_256
	word32 a2_257
	word32 a5_258
	word32 a6_259
	word32 s4_260
	word32 t3_261
	vPortFree(a0_136, a2, a5_103, mstatus, dwArg0148, dwArg0188, out s0_118, out s1_105, out a0_256, out a1, out a2_257, out a3, out a4, out a5_258, out a6_259, out s4_260, out t3_261)
l23094D3E:
	word32 a5_122 = s0_118 + 124<i32>
l23094D42:
	branch s0_118 != a5_122 l23094D6C
l23094D6C:
	Mem125[s0_118:byte] = 0<8>
	s0_118 = s0_118 + 1<32>
l23094D46:
	0<32> = dwArg38
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_122
	s2Out = 36<i32>
	return s1_105
mbedtls_ecp_group_free_exit:


word32 mbedtls_ecp_keypair_free(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg10, word32 dwArg28, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_sec1_der
//      eckey_free_wrap
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0028:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s4 t3 tp
// Preserved: s0 sp
mbedtls_ecp_keypair_free_entry:
l23094D76:
	branch a0 == 0<32> l23094D9A
l23094D9A:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	return s1
l23094D78:
	word32 a2_15
	word32 a4_17
	word32 a5_18
	word32 s2_21
	word32 a1_92
	word32 a3_93
	mbedtls_ecp_group_free(a0, a2, a4, mstatus, dwLoc10, dwArg28, dwArg0118, dwArg0128, dwArg0138, dwArg0158, dwArg0168, dwArg0178, out a1_92, out a2_15, out a3_93, out a4_17, out a5_18, out s2_21)
	word32 a5_28
	word32 a4_31
	word32 a0_94
	word32 a1_95
	word32 a2_96
	word32 a3_97
	word32 a6_98
	word32 s4_99
	mbedtls_mpi_free(a0 + 124<i32>, a2_15, a4_17, a5_18, mstatus, dwArg0138, dwArg0178, out a0_94, out a1_95, out a2_96, out a3_97, out a4_31, out a5_28, out a6_98, out s4_99)
l23094D96_thunk_mbedtls_ecp_point_free:
	word32 a3_44
	word32 a4_45
	word32 a5_46
	word32 a0_100
	word32 a2_101
	word32 s4_102
	word32 s1_48 = mbedtls_ecp_point_free(a0 + 136<i32>, dwArg10, a4_31, a5_28, mstatus, dwArg10, dwArg0138, dwArg0148, dwArg0178, dwArg0188, out a0_100, out a2_101, out a3_44, out a4_45, out a5_46, out s4_102)
	a3Out = a3_44
	a4Out = a4_45
	a5Out = a5_46
	s2Out = s2_21
	return s1_48
mbedtls_ecp_keypair_free_exit:


word32 mbedtls_ecp_copy(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg18, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecp_add_mixed
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ecp_copy_entry:
l23094D9C:
	word32 a2_20
	word32 s0_32
	word32 a1_168
	word32 a7_169
	word32 a0_116
	word32 a3_121
	word32 a4_123
	word32 a5_125
	word32 a6_127
	word32 s1_134
	word32 s2_136
	word32 s3_138
	word32 s4_140
	word32 s8_142
	word32 ra_131 = mbedtls_mpi_copy(ra, a0, a1, a2, a3, a4, a5, mstatus, dwArg08, dwArgD8, dwArg0118, dwArg0158, out s0_32, out s1_134, out a0_116, out a1_168, out a2_20, out a3_121, out a4_123, out a5_125, out a6_127, out a7_169, out s2_136, out s3_138, out s4_140, out s8_142)
	branch a0_116 != 0<32> l23094DD0
l23094DAE:
	word32 s0_56
	word32 a1_170
	word32 a2_171
	word32 a7_172
	ra_131 = mbedtls_mpi_copy(ra_131, s0_32 + 12<i32>, s1_134 + 12<i32>, a2_20, a3_121, a4_123, a5_125, mstatus, dwArg08, dwArgD8, dwArg0118, dwArg0158, out s0_56, out s1_134, out a0_116, out a1_170, out a2_171, out a3_121, out a4_123, out a5_125, out a6_127, out a7_172, out s2_136, out s3_138, out s4_140, out s8_142)
	branch a0_116 != 0<32> l23094DD0
l23094DD0:
	s1Out = s1_134
	a0Out = a0_116
	a2Out = dwArg10
	a3Out = a3_121
	a4Out = a4_123
	a5Out = a5_125
	a6Out = a6_127
	s2Out = s2_136
	s3Out = s3_138
	s4Out = s4_140
	s8Out = s8_142
	return ra_131
l23094DBC:
l23094DCC_thunk_mbedtls_mpi_copy:
	word32 a0_77
	word32 a2_78
	word32 a6_79
	word32 s3_80
	word32 s4_81
	word32 s8_82
	word32 a3_85
	word32 a4_86
	word32 a5_87
	word32 s1_91
	word32 s2_92
	word32 s0_173
	word32 a1_174
	word32 a7_175
	word32 ra_89 = mbedtls_mpi_copy(ra_131, s0_56 + 24<i32>, s1_134 + 24<i32>, dwArg10, a3_121, a4_123, a5_125, mstatus, dwArg18, dwArgE8, dwArg0128, dwArg0168, out s0_173, out s1_91, out a0_77, out a1_174, out a2_78, out a3_85, out a4_86, out a5_87, out a6_79, out a7_175, out s2_92, out s3_80, out s4_81, out s8_82)
	s1Out = s1_91
	a0Out = a0_77
	a2Out = a2_78
	a3Out = a3_85
	a4Out = a4_86
	a5Out = a5_87
	a6Out = a6_79
	s2Out = s2_92
	s3Out = s3_80
	s4Out = s4_81
	s8Out = s8_82
	return ra_89
mbedtls_ecp_copy_exit:


word32 mbedtls_ecp_group_copy(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg44, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_check_pub_priv
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
mbedtls_ecp_group_copy_entry:
l23094DDA:
l23094DDE_thunk_mbedtls_ecp_group_load:
	word32 s1_18
	word32 s2_19
	word32 s4_20
	word32 a0_35
	word32 a1_36
	word32 a2_37
	word32 a3_38
	word32 a4_39
	word32 a5_40
	word32 s0_17 = mbedtls_ecp_group_load(a0, a2, a4, mstatus, dwArg18, dwArg44, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158, dwArg0168, out s1_18, out a0_35, out a1_36, out a2_37, out a3_38, out a4_39, out a5_40, out s2_19, out s4_20)
	s1Out = s1_18
	s2Out = s2_19
	s4Out = s4_20
	return s0_17
mbedtls_ecp_group_copy_exit:


word32 mbedtls_ecp_set_zero(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecp_add_mixed
//      mbedtls_ecp_point_read_binary
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_ecp_set_zero_entry:
l23094DE2:
	word32 a2_157
	word32 a7_158
	word32 a1_106
	word32 a3_109
	word32 a4_111
	word32 a5_113
	word32 s1_122
	word32 s2_124
	word32 s3_126
	word32 s4_128
	word32 s8_130
	word32 ra_119 = mbedtls_mpi_lset(ra, a3, a4, mstatus, dwLoc10, s0, dwArg18, dwArg28, dwArgE8, dwArg0128, dwArg0168, out s1_122, out a1_106, out a2_157, out a3_109, out a4_111, out a5_113, out a7_158, out s2_124, out s3_126, out s4_128, out s8_130)
	branch a0 != 0<32> l23094E0E
l23094DF2:
	a0 = a0 + 12<i32>
	word32 a2_159
	word32 a7_160
	ra_119 = mbedtls_mpi_lset(ra_119, a3_109, a4_111, mstatus, dwLoc10, s0, dwArg18, dwArg28, dwArgE8, dwArg0128, dwArg0168, out s1_122, out a1_106, out a2_159, out a3_109, out a4_111, out a5_113, out a7_160, out s2_124, out s3_126, out s4_128, out s8_130)
	branch a0 != 0xC<32> l23094E0E
l23094E0E:
	s1Out = s1_122
	a0Out = a0
	a1Out = a1_106
	a2Out = dwArg10
	a3Out = a3_109
	a4Out = a4_111
	a5Out = a5_113
	s2Out = s2_124
	s3Out = s3_126
	s4Out = s4_128
	s8Out = s8_130
	return ra_119
l23094DFE:
l23094E0A_thunk_mbedtls_mpi_lset:
	word32 a1_66
	word32 a2_67
	word32 a3_68
	word32 a4_69
	word32 a5_70
	word32 s1_74
	word32 s2_75
	word32 s3_76
	word32 s4_77
	word32 s8_78
	word32 a7_161
	word32 ra_73 = mbedtls_mpi_lset(ra_119, a3_109, a4_111, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArgF8, dwArg0138, dwArg0178, out s1_74, out a1_66, out a2_67, out a3_68, out a4_69, out a5_70, out a7_161, out s2_75, out s3_76, out s4_77, out s8_78)
	s1Out = s1_74
	a0Out = a0 + 24<i32>
	a1Out = a1_66
	a2Out = a2_67
	a3Out = a3_68
	a4Out = a4_69
	a5Out = a5_70
	s2Out = s2_75
	s3Out = s3_76
	s4Out = s4_77
	s8Out = s8_78
	return ra_73
mbedtls_ecp_set_zero_exit:


word32 ecp_add_mixed(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, ptr32 & t1Out, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_mul
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t1 t4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ecp_add_mixed_entry:
l23094E16:
	word32 s0_102
	word32 a2_1639
	word32 a5_1640
	word32 a6_1644
	word32 s6_1278 = a2 + 24<i32>
	word32 s1_13 = a0
	word32 s4_15 = a1
	word32 s2_1024 = a2
	word32 a1_41 = a3
	word32 a6_2297
	word32 a1_2296
	word32 a2_35
	word32 a5_38
	word32 a4_126
	word32 a3_128
	branch mbedtls_mpi_cmp_int(0<32>, a2, out a1_2296, out a2_35, out a3_128, out a4_126, out a5_38, out a6_2297) == 0<32> l23094F32
l23094E44:
	branch Mem31[a3 + 32<i32>:int32] != 0<32> l23094F22
l23094F22:
	word32 a6_2301
	word32 a1_2300
	branch mbedtls_mpi_cmp_int(0<32>, a2_35, out a1_2300, out a2_35, out a3_128, out a4_126, out a5_38, out a6_2301) != 0<32> l23094F52
l23094F52:
	branch Mem31[a3 + 32<i32>:int32] == 0<32> l23094E4C
l23094F5A:
	word32 a1_2524
	branch mbedtls_mpi_cmp_int(1<32>, a2_35, out a1_2524, out a2_1639, out a3_128, out a4_126, out a5_1640, out a6_1644) == 0<32> l23094E4C
l23094F66:
	s0_102 = 0xFB000080<32>
l23094F30:
	a1_41 = a2
l23094F32:
	word32 a0_80
	word32 a4_2299
	word32 a3_2298
	ra = mbedtls_ecp_copy(ra, a1, a1_41, a2_35, a3_128, a4_126, a5_38, mstatus, dwLoc88, dwLoc80, dwLoc78, dwArg48, dwArg58, dwArg88, dwArg98, dwArgC8, dwArgD8, out s1_13, out a0_80, out a2_1639, out a3_2298, out a4_2299, out a5_1640, out a6_1644, out s2_1024, out s3, out s4_15, out s8)
	s0_102 = a0_80
l23094E4C:
	mbedtls_mpi_init(fp + -132<i32>)
	mbedtls_mpi_init(fp + -120<i32>)
	mbedtls_mpi_init(fp + -108<i32>)
	mbedtls_mpi_init(fp + -96<i32>)
	mbedtls_mpi_init(fp + -84<i32>)
	mbedtls_mpi_init(fp + -72<i32>)
	mbedtls_mpi_init(fp + -60<i32>)
	word32 s5_143
	word32 a0_152
	word32 s4_2305
	word32 s1_2303
	word32 a3_2304
	word32 s0_2302
	word32 a5_1006
	word32 a4_1005
	word32 a2_1003
	ra = mbedtls_mpi_mul_mpi(ra, fp + -132<i32>, a2 + 24<i32>, a2 + 24<i32>, a3_128, a4_126, a2, a1, a2 + 24<i32>, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2302, out s1_2303, out a0_152, out a2_1003, out a3_2304, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2305, out s5_143, out s6_1278, out s8)
	s0_102 = a0_152
	branch a0_152 != 0<32> l23094EF6
l23094E88:
	word32 a0_162
	word32 a3_165
	word32 s4_179
	word32 s9_2342
	word32 s1_2340
	word32 s5_2341
	ra = ecp_modp(ra, fp + -132<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_143, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2340, out a0_162, out a2_1003, out a3_165, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_179, out s5_2341, out s6_1278, out s7, out s8, out s9_2342, out s10, out s11, out mstatus)
	s0_102 = a0_162
	branch a0_162 != 0<32> l23094EF6
l23094E94:
	word32 s5_207
	word32 a0_216
	word32 a3_2345
	word32 s4_2346
	word32 s0_2343
	word32 s1_2344
	ra = mbedtls_mpi_mul_mpi(ra, fp + -120<i32>, fp + -132<i32>, s6_1278, a3_165, a4_1005, s2_1024, s4_179, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2343, out s1_2344, out a0_216, out a2_1003, out a3_2345, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2346, out s5_207, out s6_1278, out s8)
	s0_102 = a0_216
	branch a0_216 != 0<32> l23094EF6
l23094EA2:
	word32 a0_221
	word32 a3_224
	word32 s4_238
	word32 s5_239
	word32 s9_2348
	word32 s1_2347
	ra = ecp_modp(ra, fp + -120<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_207, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2347, out a0_221, out a2_1003, out a3_224, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_238, out s5_239, out s6_1278, out s7, out s8, out s9_2348, out s10, out s11, out mstatus)
	s0_102 = a0_221
	branch a0_221 != 0<32> l23094EF6
l23094EAE:
	word32 s5_266
	word32 a0_275
	word32 s4_2352
	word32 s1_2350
	word32 a3_2351
	word32 s0_2349
	ra = mbedtls_mpi_mul_mpi(ra, fp + -132<i32>, fp + -132<i32>, s5_239, a3_224, a4_1005, s2_1024, s4_238, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2349, out s1_2350, out a0_275, out a2_1003, out a3_2351, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2352, out s5_266, out s6_1278, out s8)
	s0_102 = a0_275
	branch a0_275 != 0<32> l23094EF6
l23094EBC:
	word32 a0_280
	word32 a3_283
	word32 s4_297
	word32 s5_298
	word32 s1_2353
	word32 s9_2354
	ra = ecp_modp(ra, fp + -132<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_266, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2353, out a0_280, out a2_1003, out a3_283, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_297, out s5_298, out s6_1278, out s7, out s8, out s9_2354, out s10, out s11, out mstatus)
	s0_102 = a0_280
	branch a0_280 != 0<32> l23094EF6
l23094EC8:
	word32 s5_325
	word32 a0_334
	word32 s4_2358
	word32 s0_2355
	word32 s1_2356
	word32 a3_2357
	ra = mbedtls_mpi_mul_mpi(ra, fp + -120<i32>, fp + -120<i32>, s5_298 + 12<i32>, a3_283, a4_1005, s2_1024, s4_297, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2355, out s1_2356, out a0_334, out a2_1003, out a3_2357, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2358, out s5_325, out s6_1278, out s8)
	s0_102 = a0_334
	branch a0_334 != 0<32> l23094EF6
l23094ED8:
	word32 a0_339
	word32 a3_342
	word32 s5_2361
	word32 s9_2362
	word32 s1_2359
	word32 s4_2360
	ra = ecp_modp(ra, fp + -120<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_325, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2359, out a0_339, out a2_1003, out a3_342, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2360, out s5_2361, out s6_1278, out s7, out s8, out s9_2362, out s10, out s11, out mstatus)
	s0_102 = a0_339
	branch a0_339 != 0<32> l23094EF6
l23094EE4:
	word32 a0_371
	word32 s1_2364
	word32 s4_2366
	word32 a7_2365
	word32 s0_2363
	word32 a3_374
	ra = mbedtls_mpi_sub_mpi(ra, a0_339, fp + -132<i32>, a3_342, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2363, out s1_2364, out a0_371, out a2_1003, out a3_374, out a4_1005, out a5_1006, out a7_2365, out s2_1024, out s3, out s4_2366, out s8)
	s0_102 = a0_371
	branch a0_371 == 0<32> l23094F86
l23094F86:
	branch a5_1006 < 0<32> l23094F6E
l23094F6E:
	word32 a2_2368
	word32 a6_2369
	word32 a1_2367
	branch mbedtls_mpi_cmp_int(0<32>, dwArg54, out a1_2367, out a2_2368, out a3_374, out a4_1005, out a5_1006, out a6_2369) == 0<32> l23094F8C
l23094F78:
	word32 a0_417
	word32 s4_2523
	word32 a7_2522
	word32 a1_2521
	word32 s1_2520
	word32 s0_2519
	ra = mbedtls_mpi_add_mpi(ra, s0_102, fp + -132<i32>, a3_374, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2519, out s1_2520, out a0_417, out a1_2521, out a2_1003, out a3_374, out a4_1005, out a5_1006, out a7_2522, out s2_1024, out s3, out s4_2523, out s8)
	s0_102 = a0_417
	branch a0_417 != 0<32> l23094EF6
l23094F8C:
	s7 = s2_1024 + 12<i32>
	word32 a0_455
	word32 s0_2370
	word32 a3_2371
	word32 a7_2372
	word32 s4_468
	word32 s1_465
	ra = mbedtls_mpi_sub_mpi(ra, s0_102, fp + -120<i32>, a3_374, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2370, out s1_465, out a0_455, out a2_1003, out a3_2371, out a4_1005, out a5_1006, out a7_2372, out s2_1024, out s3, out s4_468, out s8)
	s0_102 = a0_455
	branch a0_455 != 0<32> l23094EF6
l23094FA2:
	branch a5_1006 < 0<32> l2309512A
l2309512A:
	word32 a3_489
	word32 a4_490
	word32 a5_491
	word32 a1_2373
	word32 a6_2374
	branch mbedtls_mpi_cmp_int(0<32>, a2_1003, out a1_2373, out a2_1003, out a3_489, out a4_490, out a5_491, out a6_2374) == 0<32> l23094FA8
l23095136:
	word32 a0_502
	word32 a7_2518
	word32 a3_2517
	word32 a1_2516
	word32 s0_2515
	ra = mbedtls_mpi_add_mpi(ra, s0_102, fp + -120<i32>, a3_489, a4_490, a5_491, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2515, out s1_465, out a0_502, out a1_2516, out a2_1003, out a3_2517, out a4_1005, out a5_1006, out a7_2518, out s2_1024, out s3, out s4_468, out s8)
	s0_102 = a0_502
	branch a0_502 == 0<32> l23094FA2
l23095146:
l23094FA8:
	word32 a0_1524
	word32 a2_531
	word32 a3_532
	word32 a4_533
	word32 a6_2377
	word32 a1_2375
	word32 a5_2376
	branch mbedtls_mpi_cmp_int(0<32>, a2_1003, out a1_2375, out a2_531, out a3_532, out a4_533, out a5_2376, out a6_2377) == 0<32> l23095148
l23095148:
	word32 a3_542
	word32 a4_543
	word32 a1_2378
	word32 a2_2379
	word32 a5_2380
	word32 a6_2381
	branch mbedtls_mpi_cmp_int(0<32>, a2_531, out a1_2378, out a2_2379, out a3_542, out a4_543, out a5_2380, out a6_2381) != 0<32> l23095160
l23095160:
	word32 s1_2505
	word32 a1_2506
	word32 a3_2507
	word32 s4_2508
	ra = mbedtls_ecp_set_zero(ra, s0_102, s4_468, a3_542, a4_543, mstatus, dwLoc90, dwLoc8C, dwLoc78, dwLoc68, s6, dwArg58, dwArg68, dwArg98, dwArgA8, dwArgD8, dwArgE8, out s1_2505, out a0_1524, out a1_2506, out a2_1003, out a3_2507, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2508, out s8)
l23095152:
	word32 s9_2514
	word32 s5_2513
	word32 s4_2512
	word32 a6_2511
	word32 s1_2509
	word32 a3_2510
	ra = ecp_double_jac(ra, s1_465, s1_465, s2_1024, a3_542, a4_543, s2_1024, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc78, dwLoc68, s6, dwLoc38, dwLoc28, dwLoc18, dwLoc0C, dwLoc08, dwArg08, dwArg18, s7, s5, dwArg38, dwArg44, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, out s1_2509, out a0_1524, out a2_1003, out a3_2510, out a4_1005, out a5_1006, out a6_2511, out s2_1024, out s3, out s4_2512, out s5_2513, out s6_1278, out s7, out s8, out s9_2514, out s10, out s11, out mstatus)
l23094FB4:
	word32 s5_640
	word32 a0_649
	word32 s0_2382
	word32 s1_2383
	word32 a3_2384
	word32 s4_2385
	ra = mbedtls_mpi_mul_mpi(ra, fp + -60<i32>, s6_1278, fp + -132<i32>, a3_532, a4_533, s2_1024, s4_468, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2382, out s1_2383, out a0_649, out a2_1003, out a3_2384, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2385, out s5_640, out s6_1278, out s8)
	s0_102 = a0_649
	branch a0_649 != 0<32> l23094EF6
l23094FC4:
	word32 a0_654
	word32 a3_657
	word32 s4_671
	word32 s9_2388
	word32 s1_2386
	word32 s5_2387
	ra = ecp_modp(ra, fp + -60<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_640, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2386, out a0_654, out a2_1003, out a3_657, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_671, out s5_2387, out s6_1278, out s7, out s8, out s9_2388, out s10, out s11, out mstatus)
	s0_102 = a0_654
	branch a0_654 != 0<32> l23094EF6
l23094FD2:
	word32 s5_699
	word32 a0_708
	word32 a3_2391
	word32 s4_2392
	word32 s1_2390
	word32 s0_2389
	ra = mbedtls_mpi_mul_mpi(ra, fp + -108<i32>, fp + -132<i32>, fp + -132<i32>, a3_657, a4_1005, s2_1024, s4_671, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2389, out s1_2390, out a0_708, out a2_1003, out a3_2391, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2392, out s5_699, out s6_1278, out s8)
	s0_102 = a0_708
	branch a0_708 != 0<32> l23094EF6
l23094FE2:
	word32 a0_713
	word32 a3_716
	word32 s4_730
	word32 s1_2393
	word32 s5_2394
	word32 s9_2395
	ra = ecp_modp(ra, fp + -108<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_699, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2393, out a0_713, out a2_1003, out a3_716, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_730, out s5_2394, out s6_1278, out s7, out s8, out s9_2395, out s10, out s11, out mstatus)
	s0_102 = a0_713
	branch a0_713 != 0<32> l23094EF6
l23094FF0:
	word32 s5_758
	word32 a0_767
	word32 s1_2397
	word32 a3_2398
	word32 s4_2399
	word32 s0_2396
	ra = mbedtls_mpi_mul_mpi(ra, fp + -96<i32>, fp + -108<i32>, fp + -132<i32>, a3_716, a4_1005, s2_1024, s4_730, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2396, out s1_2397, out a0_767, out a2_1003, out a3_2398, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2399, out s5_758, out s6_1278, out s8)
	s0_102 = a0_767
	branch a0_767 != 0<32> l23094EF6
l23095000:
	word32 a0_772
	word32 a3_775
	word32 s4_789
	word32 s1_2400
	word32 s5_2401
	word32 s9_2402
	ra = ecp_modp(ra, fp + -96<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_758, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2400, out a0_772, out a2_1003, out a3_775, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_789, out s5_2401, out s6_1278, out s7, out s8, out s9_2402, out s10, out s11, out mstatus)
	s0_102 = a0_772
	branch a0_772 != 0<32> l23094EF6
l2309500E:
	word32 s5_817
	word32 a0_826
	word32 s0_2403
	word32 s1_2404
	word32 a3_2405
	word32 s4_2406
	ra = mbedtls_mpi_mul_mpi(ra, fp + -108<i32>, fp + -108<i32>, s2_1024, a3_775, a4_1005, s2_1024, s4_789, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2403, out s1_2404, out a0_826, out a2_1003, out a3_2405, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2406, out s5_817, out s6_1278, out s8)
	s0_102 = a0_826
	branch a0_826 != 0<32> l23094EF6
l2309501E:
	word32 a0_831
	word32 a3_834
	word32 s4_848
	word32 s9_2409
	word32 s1_2407
	word32 s5_2408
	ra = ecp_modp(ra, fp + -108<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_817, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2407, out a0_831, out a2_1003, out a3_834, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_848, out s5_2408, out s6_1278, out s7, out s8, out s9_2409, out s10, out s11, out mstatus)
	s0_102 = a0_831
	branch a0_831 != 0<32> l23094EF6
l2309502C:
	word32 a0_863
	word32 s1_873
	word32 s0_2410
	word32 a3_2411
	word32 s5_2412
	word32 s4_876
	ra = mbedtls_mpi_mul_int(ra, fp + -132<i32>, fp + -108<i32>, a3_834, a4_1005, s2_1024, s4_848, s6_1278, mstatus, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgE8, out s0_2410, out s1_873, out a0_863, out a2_1003, out a3_2411, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_876, out s5_2412, out s6_1278, out s8)
	s0_102 = a0_863
	branch a0_863 != 0<32> l23094EF6
l23095040:
	word32 a3_899
	word32 a4_900
	word32 a5_901
	word32 a6_2415
	word32 a1_2413
	word32 a2_2414
	branch mbedtls_mpi_cmp_mpi(a2_1003, a4_1005, a5_1006, out a1_2413, out a2_2414, out a3_899, out a4_900, out a5_901, out a6_2415) >= 0<32> l23095168
l23095168:
	word32 a0_909
	word32 s0_2416
	word32 s1_2417
	word32 a1_2418
	word32 a3_2419
	word32 a7_2420
	ra = mbedtls_mpi_sub_abs(ra, fp + -132<i32>, fp + -132<i32>, s1_873 + 4<i32>, a3_899, a4_900, a5_901, mstatus, s5, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, out s0_2416, out s1_2417, out a0_909, out a1_2418, out a2_1003, out a3_2419, out a4_1005, out a5_1006, out a7_2420, out s2_1024, out s3, out s4_876, out s8)
	s0_102 = a0_909
	branch a0_909 == 0<32> l23095040
l23095178:
l2309504C:
	word32 s5_952
	word32 a0_961
	word32 s0_2421
	word32 s1_2422
	word32 a3_2423
	word32 s4_2424
	ra = mbedtls_mpi_mul_mpi(ra, s3, fp + -120<i32>, fp + -120<i32>, a3_899, a4_900, s2_1024, s4_876, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2421, out s1_2422, out a0_961, out a2_1003, out a3_2423, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2424, out s5_952, out s6_1278, out s8)
	s0_102 = a0_961
	branch a0_961 != 0<32> l23094EF6
l2309505C:
	word32 a0_969
	word32 a3_972
	word32 s9_2428
	word32 s5_2427
	word32 s1_2425
	word32 s4_2426
	ra = ecp_modp(ra, s3, a2_1003, a4_1005, a5_1006, s2_1024, s5_952, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2425, out a0_969, out a2_1003, out a3_972, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2426, out s5_2427, out s6_1278, out s7, out s8, out s9_2428, out s10, out s11, out mstatus)
	s0_102 = a0_969
	branch a0_969 != 0<32> l23094EF6
l2309506A:
	word32 a0_1001
	word32 s0_2429
	word32 s1_2430
	word32 a7_2431
	word32 s2_2432
	word32 s4_2433
	word32 a3_1004
	ra = mbedtls_mpi_sub_mpi(ra, a0_969, s3, a3_972, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2429, out s1_2430, out a0_1001, out a2_1003, out a3_1004, out a4_1005, out a5_1006, out a7_2431, out s2_2432, out s3, out s4_2433, out s8)
	s0_102 = a0_1001
	s2_1024 = s3
	branch a0_1001 != 0<32> l23094EF6
l2309507C:
	branch a5_1006 < 0<32> l2309517A
l2309517A:
	word32 a2_2435
	word32 a6_2436
	word32 a1_2434
	branch mbedtls_mpi_cmp_int(0<32>, a2_1003, out a1_2434, out a2_2435, out a3_1004, out a4_1005, out a5_1006, out a6_2436) == 0<32> l23095082
l23095186:
	word32 a0_1048
	word32 s0_2500
	word32 s1_2501
	word32 a1_2502
	word32 a7_2503
	word32 s4_2504
	ra = mbedtls_mpi_add_mpi(ra, s0_102, s2_1024, a3_1004, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2500, out s1_2501, out a0_1048, out a1_2502, out a2_1003, out a3_1004, out a4_1005, out a5_1006, out a7_2503, out s2_1024, out s3, out s4_2504, out s8)
	s0_102 = a0_1048
	branch a0_1048 == 0<32> l2309507C
l23095196:
l23095082:
	word32 s0_2437
	word32 s1_2438
	word32 a7_2439
	word32 s4_2440
	word32 a0_1085
	word32 a3_1088
	ra = mbedtls_mpi_sub_mpi(ra, s0_102, s2_1024, a3_1004, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2437, out s1_2438, out a0_1085, out a2_1003, out a3_1088, out a4_1005, out a5_1006, out a7_2439, out s2_1024, out s3, out s4_2440, out s8)
l2309508C:
	s0_102 = a0_1085
	branch a0_1085 != 0<32> l23094EF6
l23095092:
	branch a5_1006 < 0<32> l23095198
l23095198:
	word32 a1_2441
	word32 a2_2442
	word32 a6_2443
	branch mbedtls_mpi_cmp_int(0<32>, a2_1003, out a1_2441, out a2_2442, out a3_1088, out a4_1005, out a5_1006, out a6_2443) == 0<32> l23095098
l230951A4:
	word32 s4_2499
	word32 s0_2495
	word32 s1_2496
	word32 a1_2497
	word32 a7_2498
	ra = mbedtls_mpi_add_mpi(ra, a0_1085, s2_1024, a3_1088, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2495, out s1_2496, out a0_1085, out a1_2497, out a2_1003, out a3_1088, out a4_1005, out a5_1006, out a7_2498, out s2_1024, out s3, out s4_2499, out s8)
l23095098:
	word32 s0_2444
	word32 s1_2445
	word32 a7_2446
	word32 a0_1167
	word32 s4_1180
	word32 a3_1170
	ra = mbedtls_mpi_sub_mpi(ra, a0_1085, fp + -108<i32>, a3_1088, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2444, out s1_2445, out a0_1167, out a2_1003, out a3_1170, out a4_1005, out a5_1006, out a7_2446, out s2_1024, out s3, out s4_1180, out s8)
l230950A2:
	s0_102 = a0_1167
	branch a0_1167 != 0<32> l23094EF6
l230950A8:
	branch a5_1006 < 0<32> l230951B0
l230951B0:
	word32 a5_1203
	word32 a1_2447
	word32 a2_2448
	word32 a6_2449
	branch mbedtls_mpi_cmp_int(0<32>, a2_1003, out a1_2447, out a2_2448, out a3_1170, out a4_1005, out a5_1203, out a6_2449) == 0<32> l230950AE
l230951BC:
	word32 a1_2493
	word32 a7_2494
	word32 s0_2491
	word32 s1_2492
	ra = mbedtls_mpi_add_mpi(ra, a0_1167, fp + -108<i32>, a3_1170, a4_1005, a5_1203, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2491, out s1_2492, out a0_1167, out a1_2493, out a2_1003, out a3_1170, out a4_1005, out a5_1006, out a7_2494, out s2_1024, out s3, out s4_1180, out s8)
l230950AE:
	word32 s5_1268
	word32 a0_1277
	word32 s4_2453
	word32 s0_2450
	word32 s1_2451
	word32 a3_2452
	ra = mbedtls_mpi_mul_mpi(ra, fp + -108<i32>, fp + -108<i32>, fp + -120<i32>, a3_1170, a4_1005, s2_1024, s4_1180, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2450, out s1_2451, out a0_1277, out a2_1003, out a3_2452, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2453, out s5_1268, out s6_1278, out s8)
	s0_102 = a0_1277
	branch a0_1277 != 0<32> l23094EF6
l230950BE:
	word32 a0_1300
	word32 a3_1303
	word32 s4_1317
	word32 s1_2454
	word32 s5_2455
	word32 s9_2456
	ra = ecp_modp(ra, fp + -108<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_1268, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2454, out a0_1300, out a2_1003, out a3_1303, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_1317, out s5_2455, out s6_1278, out s7, out s8, out s9_2456, out s10, out s11, out mstatus)
	s0_102 = a0_1300
	branch a0_1300 != 0<32> l23094EF6
l230950CC:
	word32 s5_1345
	word32 a0_1354
	word32 a3_2459
	word32 s4_2460
	word32 s0_2457
	word32 s1_2458
	ra = mbedtls_mpi_mul_mpi(ra, fp + -96<i32>, fp + -96<i32>, s7, a3_1303, a4_1005, s2_1024, s4_1317, s6_1278, mstatus, dwArg18, s5, dwArg38, dwArg58, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArg0108, out s0_2457, out s1_2458, out a0_1354, out a2_1003, out a3_2459, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2460, out s5_1345, out s6_1278, out s8)
	s0_102 = a0_1354
	branch a0_1354 != 0<32> l23094EF6
l230950DC:
	word32 a0_1359
	word32 a3_1362
	word32 s1_2461
	word32 s4_2462
	word32 s5_2463
	word32 s9_2464
	ra = ecp_modp(ra, fp + -96<i32>, a2_1003, a4_1005, a5_1006, s2_1024, s5_1345, s6_1278, s7, s10, s11, mstatus, dwLoc88, dwLoc80, dwLoc7C, dwLoc68, s6, s0, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA4, out s1_2461, out a0_1359, out a2_1003, out a3_1362, out a4_1005, out a5_1006, out s2_1024, out s3, out s4_2462, out s5_2463, out s6_1278, out s7, out s8, out s9_2464, out s10, out s11, out mstatus)
	s0_102 = a0_1359
	branch a0_1359 != 0<32> l23094EF6
l230950EA:
	word32 s0_2465
	word32 s1_2466
	word32 a7_2467
	word32 a0_1391
	word32 s4_1404
	word32 a3_1394
	ra = mbedtls_mpi_sub_mpi(ra, a0_1359, fp + -72<i32>, a3_1362, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2465, out s1_2466, out a0_1391, out a2_1003, out a3_1394, out a4_1005, out a5_1006, out a7_2467, out s2_1024, out s3, out s4_1404, out s8)
l230950F4:
	s0_102 = a0_1391
	branch a0_1391 != 0<32> l23094EF6
l230950FA:
	branch a5_1006 < 0<32> l230951C8
l230951C8:
	word32 a1_2468
	word32 a6_2469
	branch mbedtls_mpi_cmp_int(0<32>, a2_1003, out a1_2468, out a2_1003, out a3_1394, out a4_1005, out a5_1006, out a6_2469) == 0<32> l23095100
l230951D4:
	word32 s0_2487
	word32 s1_2488
	word32 a1_2489
	word32 a7_2490
	ra = mbedtls_mpi_add_mpi(ra, a0_1391, fp + -72<i32>, a3_1394, a4_1005, a5_1006, s2_1024, mstatus, dwArg08, s5, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, out s0_2487, out s1_2488, out a0_1391, out a1_2489, out a2_1003, out a3_1394, out a4_1005, out a5_1006, out a7_2490, out s2_1024, out s3, out s4_1404, out s8)
l23095100:
	word32 a0_1474
	word32 s4_1478
	word32 a3_1482
	word32 s1_2471
	word32 a1_2472
	word32 a6_2473
	word32 a7_2474
	word32 s0_2470
	ra = mbedtls_mpi_copy(ra, s4_1404, s2_1024, a2_1003, a3_1394, a4_1005, a5_1006, mstatus, dwLoc78, dwArg58, dwArg98, dwArgD8, out s0_2470, out s1_2471, out a0_1474, out a1_2472, out a2_1003, out a3_1482, out a4_1005, out a5_1006, out a6_2473, out a7_2474, out s2_1024, out s3, out s4_1478, out s8)
	s0_102 = a0_1474
	branch a0_1474 != 0<32> l23094EF6
l2309510E:
	word32 a0_1499
	word32 s4_1503
	word32 a3_1507
	word32 a7_2479
	word32 a6_2478
	word32 a1_2477
	word32 s0_2475
	word32 s1_2476
	ra = mbedtls_mpi_copy(ra, s4_1478 + 12<i32>, fp + -72<i32>, a2_1003, a3_1482, a4_1005, a5_1006, mstatus, dwLoc78, dwArg58, dwArg98, dwArgD8, out s0_2475, out s1_2476, out a0_1499, out a1_2477, out a2_1003, out a3_1507, out a4_1005, out a5_1006, out a6_2478, out a7_2479, out s2_1024, out s3, out s4_1503, out s8)
	s0_102 = a0_1499
	branch a0_1499 != 0<32> l23094EF6
l2309511E:
	word32 s4_2486
	word32 s0_2480
	word32 s1_2481
	word32 a1_2482
	word32 a3_2483
	word32 a6_2484
	word32 a7_2485
	ra = mbedtls_mpi_copy(ra, s4_1503 + 24<i32>, fp + -60<i32>, a2_1003, a3_1507, a4_1005, a5_1006, mstatus, dwLoc78, dwArg58, dwArg98, dwArgD8, out s0_2480, out s1_2481, out a0_1524, out a1_2482, out a2_1003, out a3_2483, out a4_1005, out a5_1006, out a6_2484, out a7_2485, out s2_1024, out s3, out s4_2486, out s8)
l2309515C:
	s0_102 = a0_1524
l23094EF6:
	word32 a2_1562
	word32 a5_1563
	word32 a4_1566
	word32 a0_2306
	word32 a1_2307
	word32 a3_2308
	word32 a6_2309
	word32 s4_2310
	mbedtls_mpi_free(fp + -132<i32>, a2_1003, a4_1005, a5_1006, mstatus, dwArgB8, dwArgF8, out a0_2306, out a1_2307, out a2_1562, out a3_2308, out a4_1566, out a5_1563, out a6_2309, out s4_2310)
	word32 a2_1574
	word32 a5_1575
	word32 a4_1578
	word32 a6_2314
	word32 s4_2315
	word32 a1_2312
	word32 a3_2313
	word32 a0_2311
	mbedtls_mpi_free(fp + -120<i32>, a2_1562, a4_1566, a5_1563, mstatus, dwArgB8, dwArgF8, out a0_2311, out a1_2312, out a2_1574, out a3_2313, out a4_1578, out a5_1575, out a6_2314, out s4_2315)
	word32 a2_1586
	word32 a5_1587
	word32 a4_1590
	word32 a1_2317
	word32 a6_2319
	word32 s4_2320
	word32 a3_2318
	word32 a0_2316
	mbedtls_mpi_free(fp + -108<i32>, a2_1574, a4_1578, a5_1575, mstatus, dwArgB8, dwArgF8, out a0_2316, out a1_2317, out a2_1586, out a3_2318, out a4_1590, out a5_1587, out a6_2319, out s4_2320)
	word32 a2_1598
	word32 a5_1599
	word32 a4_1602
	word32 a3_2323
	word32 a6_2324
	word32 s4_2325
	word32 a0_2321
	word32 a1_2322
	mbedtls_mpi_free(fp + -96<i32>, a2_1586, a4_1590, a5_1587, mstatus, dwArgB8, dwArgF8, out a0_2321, out a1_2322, out a2_1598, out a3_2323, out a4_1602, out a5_1599, out a6_2324, out s4_2325)
	word32 a2_1615
	word32 a5_1616
	word32 a4_1619
	word32 s4_2330
	word32 a6_2329
	word32 a0_2326
	word32 a1_2327
	word32 a3_2328
	mbedtls_mpi_free(s3, a2_1598, a4_1602, a5_1599, mstatus, dwArgB8, dwArgF8, out a0_2326, out a1_2327, out a2_1615, out a3_2328, out a4_1619, out a5_1616, out a6_2329, out s4_2330)
	word32 a2_1627
	word32 a5_1628
	word32 a4_1631
	word32 a1_2332
	word32 a6_2334
	word32 s4_2335
	word32 a3_2333
	word32 a0_2331
	mbedtls_mpi_free(fp + -72<i32>, a2_1615, a4_1619, a5_1616, mstatus, dwArgB8, dwArgF8, out a0_2331, out a1_2332, out a2_1627, out a3_2333, out a4_1631, out a5_1628, out a6_2334, out s4_2335)
	word32 a0_2336
	word32 a1_2337
	word32 a3_2338
	word32 a4_2339
	s1_13 = mbedtls_mpi_free(fp + -60<i32>, a2_1627, a4_1631, a5_1628, mstatus, dwArgB8, dwArgF8, out a0_2336, out a1_2337, out a2_1639, out a3_2338, out a4_2339, out a5_1640, out a6_1644, out s4_15)
l23094F3A:
	word32 t4_1655 = Mem31[dwLoc48 + 376<i32>:word32]
	word32 s9_1656 = Mem31[dwLoc48 + 408<i32>:word32]
	word32 s5_1657 = Mem31[dwLoc48 + 440<i32>:word32]
	word32 a3_1659 = Mem31[dwLoc48 + 504<i32>:word32]
	t1Out = dwLoc6C
	s0Out = s0_102
	s1Out = s1_13
	a0Out = dwLoc8C
	a2Out = a2_1639
	a3Out = a3_1659
	a4Out = dwLoc70
	a5Out = a5_1640
	a6Out = a6_1644
	s2Out = s2_1024
	s3Out = s3
	s4Out = s4_15
	s5Out = s5_1657
	s6Out = s6_1278
	s7Out = s7
	s8Out = s8
	s9Out = s9_1656
	s10Out = s10
	s11Out = s11
	t4Out = t4_1655
	mstatusOut = mstatus
	return ra
ecp_add_mixed_exit:


word32 ecp_mul_comb(word32 ra, word32 a0, word32 a2, word32 a4, word32 a5, word32 s3, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s11:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: a0 a2 a4 a5 mstatus
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
ecp_mul_comb_entry:
l230951E0:
	word32 s0_1150
	mbedtls_mpi_init(fp + -412<i32>)
	mbedtls_mpi_init(fp + -400<i32>)
	word32 dwLoc014C_1537 = a4
	word32 s10_231 = a2
	word32 dwLoc01C8_1550 = a0 + 76<i32>
	word32 a5_1435 = 1<32>
	word32 a5_2791
	word32 a4_1438
	branch mbedtls_mpi_get_bit(0<32>, a0 + 76<i32>, out a4_1438, out a5_2791) != 1<32> l230956A0
l230956A0:
	s0_1150 = 0xFB000080<32>
l23095242:
	word32 s4_60 = CONVERT(Mem49[a0 + 92<i32>:int32] >u 383<i32>, bool, word32)
	word32 a6_2793
	word32 a1_2792
	word32 a4_117
	word32 a3_120
	word32 a5_110
	word32 a2_1192
	word32 a0_61 = mbedtls_mpi_cmp_mpi(a2, a4_1438, 383<i32>, out a1_2792, out a2_1192, out a3_120, out a4_117, out a5_110, out a6_2793)
	word32 s4_68 = s4_60 + 4<32>
	word32 s7_1018 = a0_61
	branch a0_61 != 0<32> l230952F0
l230952F0:
	s7_1018 = 0<32>
l23095260:
	word32 a1_2794
	word32 a6_2795
	branch mbedtls_mpi_cmp_mpi(a2_1192, a4_117, a5_110, out a1_2794, out a2_1192, out a3_120, out a4_117, out a5_110, out a6_2795) != 0<32> l23095270
l2309526C:
	s4_68 = s4_60 + 5<32>
	s7_1018 = 1<32>
l23095270:
	word32 s5_84 = Mem49[a0 + 92<i32>:int32]
	branch s4_68 <u s5_84 l2309527A
l23095278:
	s4_68 = 2<32>
l2309527A:
	word32 s3_1014
	word32 s2_1006
	word32 a4_1194
	word32 s6_228 = 1<32> << s4_68 + -1<i32>
	word32 s9_1020 = s6_228 & 255<i32>
	word32 s5_214 = s5_84 + 0xFFFFFFFF<32> + s4_68 >>u s4_68
	branch s7_1018 == 0<32> l2309529C
l23095294:
	branch Mem49[a0 + 116<i32>:int32] != 0<32> l23095440
l2309529C:
	word32 a3_127
	word32 s0_132
	word32 s1_2796
	word32 a1_2797
	word32 s3_2798
	word32 s4_2799
	word32 s8_2800
	word32 ra_131 = mycalloc(ra, a0, s6_228, 36<i32>, a3_120, a4_117, a5_110, mstatus, dwLoc01B0, dwLoc01AC, dwLocB8, dwLoc78, out s0_132, out s1_2796, out a1_2797, out a2_1192, out a3_127, out a4_1194, out a5_110, out s2_1006, out s3_2798, out s4_2799, out s8_2800)
	branch s6_228 == 0<32> l23095698
l23095698:
	s0_1150 = 0xFB000280<32>
l230952AC:
	word32 a0_146
	word32 a6_2801
	word32 s8_1492
	word32 s1_155
	word32 s4_158
	word32 a3_149
	word32 ra_154 = mbedtls_ecp_copy(ra_131, s6_228, s0_132, a2_1192, a3_127, a4_1194, a5_110, mstatus, a0 + 76<i32>, dwLoc01C0, dwLoc01B8, dwLocF8, dwLocE8, dwLocB8, dwLocA8, dwLoc78, dwLoc68, out s1_155, out a0_146, out a2_1192, out a3_149, out a4_1194, out a5_110, out a6_2801, out s2_1006, out s3_1014, out s4_158, out s8_1492)
	s0_1150 = a0_146
	branch a0_146 != 0<32> l2309531E
l230952B6:
	word32 s11_169 = 0<32>
	word32 a4_170 = 1<32>
l230952BA:
	word32 a6_173 = a4_170 >>u s8_1492
	branch a6_173 == 0<32> l230952F4
l230952F4:
	word32 a3_182 = a4_170 + 36<i32> + s3_1014
	word32 a0_189
	word32 s8_2928
	word32 a6_195
	ra_154 = mbedtls_ecp_copy(ra_154, a3_182, (a4_170 >>u 1<u32>) + 36<i32> + s3_1014, a2_1192, a3_182, a4_170, 36<i32>, mstatus, a0 + 76<i32>, a6_173, dwLoc01B8, dwLocF8, dwLocE8, dwLocB8, dwLocA8, dwLoc78, dwLoc68, out s1_155, out a0_189, out a2_1192, out a3_149, out a4_1194, out a5_110, out a6_195, out s2_1006, out s3_1014, out s4_158, out s8_2928)
	0<32> = dwLocB8
	dwLoc01C0 = a6_173
	s0_1150 = a0_189
	branch a0_189 == 0<32> l230953AC
l230953AC:
	s8_1492 = dwLoc012C
	branch s5_214 != a6_195 l23095390
l23095390:
	dwLoc01C0 = a6_195
	word32 a6_238
	word32 a0_257
	word32 s8_2929
	ra_154 = ecp_double_jac(ra_154, s1_155, s1_155, a3_149, a3_149, a4_1194, s2_1006, s6_228, s7_1018, s10_231, s11_169, mstatus, a0 + 76<i32>, dwLoc01B8, dwLoc01A8, dwLoc0198, dwLoc0178, dwLoc0168, dwLoc0158, a4, a5, dwLoc0138, dwLoc0128, dwLoc011C, dwLoc0118, dwLoc0108, dwLocFC, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocB8, dwLocA8, dwLoc98, out s1_155, out a0_257, out a2_1192, out a3_149, out a4_1194, out a5_110, out a6_238, out s2_1006, out s3_1014, out s4_158, out s5_214, out s6_228, out s7_1018, out s8_2929, out s9_1020, out s10_231, out s11_169, out mstatus)
	s0_1150 = a0_257
	branch a0_257 != 0<32> l2309531E
l230953A4:
	0<32> = dwLocB8
	a6_195 = a6_238 + 1<32>
l230953B0:
	Mem271[(s11_169 << 2<u32>) + (fp + -64<i32>) + 3832<i32>:word32] = a3_149
	a2_1192 = s11_169 + 1<i32>
	a4_170 = a4_1194 << 1<i32> & 255<i32>
	s11_169 = a2_1192 & 255<i32>
l230952C2:
	word32 a0_293
	word32 a3_2802
	word32 s1_1314
	word32 s6_1328
	word32 s5_1329
	word32 s10_1334
	word32 s11_1335
	word32 s8_1480
	word32 s4_1349
	word32 ra_1330 = ecp_normalize_jac_many(ra_154, s1_155, s1_155, fp + -328<i32>, s11_169, a3_149, a4_170, s2_1006, s3_1014, s4_158, s5_214, s6_228, s7_1018, s10_231, s11_169, mstatus, dwLoc01CC, a0 + 76<i32>, dwLoc01B8, dwLoc01AC, dwLoc01A8, dwLoc0198, dwLoc0178, dwLoc0168, dwLoc015C, dwLoc0158, a5, dwLoc013C, dwLoc0138, dwLoc0128, dwLoc011C, dwLoc0118, dwLoc010C, dwLoc0108, dwLocFC, dwLocF8, dwLocE8, dwLocD8, dwLocCC, dwLocC8, dwLocA8, dwLoc98, out s1_1314, out a0_293, out a2_1192, out a3_2802, out a4_1194, out a5_110, out s2_1006, out s3_1014, out s4_1349, out s5_1329, out s6_1328, out s7_1018, out s8_1480, out s9_1020, out s10_1334, out s11_1335, out mstatus)
	s0_1150 = a0_293
	branch a0_293 != 0<32> l2309531E
l230952D0:
	word32 a2_1491 = 0<32>
	a4_1194 = 1<32>
	word32 a7_1300 = 36<i32>
l230952D8:
	word32 a3_1306 = a4_1194
	branch a4_1194 >>u s8_1480 != 0<32> l23095426
l23095426:
	word32 a0_346
	word32 s1_356
	word32 s6_373
	word32 s8_2830
	word32 s4_2829
	ra = ecp_normalize_jac_many(ra_1330, s1_1314, s1_1314, fp + -328<i32>, a2_1491, a4_1194, a4_1194, s2_1006, s3_1014, s4_1349, s5_1329, s6_1328, s7_1018, s10_1334, s11_1335, mstatus, dwLoc01CC, a0 + 76<i32>, dwLoc01B8, dwLoc01AC, dwLoc01A8, dwLoc0198, dwLoc0178, dwLoc0168, dwLoc015C, dwLoc0158, a5, dwLoc013C, dwLoc0138, dwLoc0128, dwLoc011C, dwLoc0118, dwLoc010C, dwLoc0108, dwLocFC, dwLocF8, dwLocE8, dwLocD8, dwLocCC, dwLocC8, dwLocA8, dwLoc98, out s1_356, out a0_346, out a2_1192, out a3_120, out a4_1194, out a5_110, out s2_1006, out s3_1014, out s4_2829, out s5_214, out s6_373, out s7_1018, out s8_2830, out s9_1020, out s10_231, out s11, out mstatus)
	s0_1150 = a0_346
	branch a0_346 != 0<32> l2309531E
l23095434:
	branch s7_1018 == 0<32> l23095440
l23095438:
	Mem376[s1_356 + 116<i32>:word32] = s3_1014
	Mem377[s1_356 + 120<i32>:word32] = s6_373
l23095440:
	word32 a5_383
	word32 a4_384
	mbedtls_mpi_get_bit(0<32>, a5_110, out a4_384, out a5_383)
	word32 a0_396
	word32 a3_404
	word32 s0_2831
	word32 s4_2836
	word32 a7_2835
	word32 s8_2837
	word32 a6_2834
	word32 a1_2833
	word32 s1_2832
	word32 ra_408 = mbedtls_mpi_copy(ra, fp + -412<i32>, s10_231, a2_1192, a3_120, a4_384, a5_383, mstatus, dwLoc01B8, dwLocE8, dwLocA8, dwLoc68, out s0_2831, out s1_2832, out a0_396, out a1_2833, out a2_1192, out a3_404, out a4_1194, out a5_110, out a6_2834, out a7_2835, out s2_1006, out s3_1014, out s4_2836, out s8_2837)
	s0_1150 = a0_396
	branch a0_396 != 0<32> l2309531E
l23095458:
	word32 a0_422
	word32 a3_425
	word32 s8_436
	word32 a7_2840
	word32 s1_2839
	word32 s4_2841
	word32 s0_2838
	word32 ra_430 = mbedtls_mpi_sub_mpi(ra_408, a0_396, fp + -400<i32>, a3_404, a4_1194, a5_110, s2_1006, mstatus, dwLoc0138, dwLoc0118, dwLocF8, dwLocD8, dwLocC8, dwLocB8, dwLoc98, out s0_2838, out s1_2839, out a0_422, out a2_1192, out a3_425, out a4_1194, out a5_110, out a7_2840, out s2_1006, out s3_1014, out s4_2841, out s8_436)
	s0_1150 = a0_422
	branch a0_422 != 0<32> l2309531E
l23095468:
	word32 a0_450
	word32 s4_463
	word32 a3_2844
	word32 s1_2843
	word32 s0_2842
	word32 ra_458 = mbedtls_mpi_safe_cond_assign(ra_430, fp + -400<i32>, CONVERT(s8_436 != 0xFFFFFFFF<32>, bool, word32), a3_425, a4_1194, mstatus, dwLoc01B8, dwLocE8, dwLocA8, dwLoc68, out s0_2842, out s1_2843, out a0_450, out a2_1192, out a3_2844, out a4_1194, out a5_110, out s2_1006, out s3_1014, out s4_463)
	s0_1150 = a0_450
	branch a0_450 != 0<32> l2309531E
l2309547E:
	word32 s0_477 = fp + -328<i32>
	word32 a5_2851
	word32 a4_2850
	word32 a1_2847
	word32 a0_2846
	word32 t1_2845
	word32 a3_2849
	word32 a2_2848
	word32 ra_484 = memset(ra_458, fp + -328<i32>, 0<32>, s5_214 + 1<i32>, out t1_2845, out a0_2846, out a1_2847, out a2_2848, out a3_2849, out a4_2850, out a5_2851)
	word32 s10_1012 = fp + -328<i32>
	word32 s6_488 = 0<32>
l23095490:
	branch s5_214 != s6_488 l230955A8
l230955A8:
	word32 a5_491 = s6_488
	s11 = 0<32>
l230955AC:
	word32 a5_499
	word32 a4_2927
	Mem507[s10_1012:byte] = SLICE(mbedtls_mpi_get_bit(a5_491, a5_491, out a4_2927, out a5_499) << s11 | CONVERT(Mem497[s10_1012:byte], byte, word32), byte, 0)
	dwLoc01C8_1550 = a5_491
	s11 = s11 + 1<32>
	a5_491 = a5_499 + s5_214
	branch s11 <u s4_463 l230955AC
l230955CE:
	s6_488 = s6_488 + 1<32>
	s10_1012 = s10_1012 + 1<32>
l23095494:
	word32 a7_517 = fp + -328<i32> + s6_488
	word32 a1_518 = 0<32>
l2309549C:
	branch s0_477 != a7_517 l230955D4
l230955D4:
	word32 a2_522 = CONVERT(Mem521[s0_477 + 1<i32>:byte], byte, word32)
	word32 a4_526 = a2_522 ^ a1_518
	word32 a6_523 = CONVERT(Mem521[s0_477:byte], byte, word32)
	word32 a5_527 = ~a4_526
	s0_477 = s0_477 + 1<32>
	Mem535[s0_477 + 4095<i32>:byte] = SLICE((a5_527 & 1<32>) << 7<i32> | a6_523, byte, 0)
	word32 a4_531 = CONVERT(SLICE(a4_526, byte, 0), byte, int32)
	word32 a3_537 = CONVERT(SLICE(a6_523 + (a5_527 & 1<32>), byte, 0), byte, int32)
	Mem541[s0_477:byte] = SLICE(a4_531 ^ a3_537, byte, 0)
	a1_518 = (a2_522 & a1_518 | a4_531 & a3_537) & 255<i32>
l230954A0:
	mbedtls_ecp_point_init.part.2(fp + -364<i32>)
	word32 a0_575
	word32 a3_578
	word32 s0_2852
	word32 a5_1048
	word32 a2_1057
	word32 s8_1019
	word32 s5_1016
	word32 s6_1017
	word32 a4_1051
	word32 ra_1011 = ecp_select_comb(ra_484, s3_1014, s9_1020, CONVERT(Mem521[fp + -64<i32> + s6_488 + -264<i32>:byte], byte, word32), mstatus, dwLoc0158, dwLoc0138, dwLoc0118, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocB8, dwLocA8, dwLoc98, dwLoc88, dwLoc68, out s0_2852, out a0_575, out a2_1057, out a3_578, out a4_1051, out a5_1048, out s2_1006, out s3_1014, out s5_1016, out s6_1017, out s7_1018, out s8_1019)
	s0_1150 = a0_575
	branch a0_575 != 0<32> l23095672
l230954C0:
	s5_1016 = s2_1006 + 24<i32>
	word32 s4_2855
	word32 a7_2854
	word32 a1_2853
	word32 s1_1053
	word32 a3_1050
	ra_1011 = mbedtls_mpi_lset(ra_1011, a3_578, a4_1051, mstatus, dwLoc01D0, dwLoc01CC, dwLoc01A8, dwLoc0198, dwLocD8, dwLoc98, dwLoc58, out s1_1053, out a1_2853, out a2_1057, out a3_1050, out a4_1051, out a5_1048, out a7_2854, out s2_1006, out s3_1014, out s4_2855, out s8_1019)
	s0_1150 = s2_1006 + 24<i32>
	branch s2_1006 != 0x18<32> l23095672
l230954D2:
	branch a5_1048 == 0<32> l2309566A
l230954D8:
	mbedtls_mpi_init(fp + -388<i32>)
	mbedtls_mpi_init(fp + -376<i32>)
	s10_1012 = 0xC<32>
	s11 = s1_1053 + 4<i32>
	s1_1502 = s1_1053
l230954F4:
	word32 s1_1502
	word32 a3_2856
	word32 s4_658
	word32 a5_1026
	word32 a4_1002
	word32 a2_1000
	mbedtls_mpi_fill_random(ra_1011, s2_1006 + 24<i32>, s1_1502, fp + -388<i32>, dwLoc012C, a4, a3_1050, a4_1051, mstatus, out a2_1000, out a3_2856, out a4_1002, out a5_1026, out s2_1006, out s3_1014, out s4_658, out s8_1019, out mstatus)
l23095500:
	word32 a1_2857
	word32 a3_2858
	word32 a6_2859
	branch mbedtls_mpi_cmp_mpi(a2_1000, a4_1002, a5_1026, out a1_2857, out a2_1057, out a3_2858, out a4_1051, out a5_1048, out a6_2859) >= 0<32> l23095612
l23095612:
	word32 a0_686
	word32 a1_2924
	word32 a3_2925
	word32 a5_2926
	ra_1011 = mbedtls_mpi_shift_r(ra_1011, 1<32>, a2_1057, a5_1048, mstatus, dwLoc01D0, dwLoc01CC, dwLoc01A8, dwLoc0198, dwLocD8, dwLoc98, dwLoc58, out s1_1502, out a0_686, out a1_2924, out a2_1000, out a3_2925, out a4_1002, out a5_2926, out s2_1006, out s3_1014, out s4_658, out s8_1019)
	a5_1026 = a0_686
	branch a0_686 == 0<32> l23095500
l2309550C:
	s10_1012 = s10_1012 + 0xFFFFFFFF<32>
	branch s10_1012 == 0<32> l230956A8
l230956A8:
	s0_1150 = 0xFB000300<32>
l23095512:
	word32 a5_2862
	word32 a2_2861
	word32 a1_2860
	word32 a6_2863
	branch mbedtls_mpi_cmp_int(1<32>, a2_1057, out a1_2860, out a2_2861, out a3_1050, out a4_1051, out a5_2862, out a6_2863) <= 0<32> l230954F4
l2309551E:
	word32 a0_754
	word32 a5_2866
	word32 s4_2867
	word32 a3_2865
	word32 s1_2864
	ra_1011 = mbedtls_mpi_mul_mpi(ra_1011, s2_1006 + 24<i32>, s2_1006 + 24<i32>, fp + -388<i32>, a3_1050, a4_1051, s2_1006, s4_658, s6_1017, mstatus, dwLoc0128, dwLoc0118, dwLoc0108, dwLocE8, dwLocD8, dwLocC8, dwLocA8, dwLoc98, dwLoc88, dwLoc38, out s0_1150, out s1_2864, out a0_754, out a2_1000, out a3_2865, out a4_1002, out a5_2866, out s2_1006, out s3_1014, out s4_2867, out s5_1016, out s6_1017, out s8_1019)
	a5_1026 = a0_754
	branch a0_754 != 0<32> l23095620
l2309552E:
	word32 a0_761
	word32 a3_764
	word32 s4_778
	word32 a5_2869
	word32 s1_2868
	ra_1011 = ecp_modp(ra_1011, s5_1016, a2_1000, a4_1002, a0_754, s2_1006, s5_1016, s6_1017, s7_1018, s10_1012, s1_1053 + 4<i32>, mstatus, dwLoc01C8_1550, dwLoc01C0, dwLoc01BC, dwLoc01A8, dwLoc0198, dwLoc018C, dwLoc0188, dwLoc0178, dwLoc0168, dwLoc0158, a5, dwLoc0138, dwLoc0128, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocBC, dwLocA8, dwLoc9C, out s1_2868, out a0_761, out a2_1000, out a3_764, out a4_1002, out a5_2869, out s2_1006, out s3_1014, out s4_778, out s5_1016, out s6_1017, out s7_1018, out s8_1019, out s9_1020, out s10_1012, out s11, out mstatus)
	a5_1026 = a0_761
	branch a0_761 != 0<32> l23095620
l2309553C:
	word32 a0_815
	word32 a5_2872
	word32 s1_2870
	word32 s4_2873
	word32 a3_2871
	ra_1011 = mbedtls_mpi_mul_mpi(ra_1011, fp + -376<i32>, fp + -388<i32>, fp + -388<i32>, a3_764, a4_1002, s2_1006, s4_778, s6_1017, mstatus, dwLoc0128, dwLoc0118, dwLoc0108, dwLocE8, dwLocD8, dwLocC8, dwLocA8, dwLoc98, dwLoc88, dwLoc38, out s0_1150, out s1_2870, out a0_815, out a2_1000, out a3_2871, out a4_1002, out a5_2872, out s2_1006, out s3_1014, out s4_2873, out s5_1016, out s6_1017, out s8_1019)
	a5_1026 = a0_815
	branch a0_815 != 0<32> l23095620
l2309554A:
	word32 a0_820
	word32 a3_823
	word32 s4_837
	word32 a5_2875
	word32 s1_2874
	ra_1011 = ecp_modp(ra_1011, fp + -376<i32>, a2_1000, a4_1002, a0_815, s2_1006, s5_1016, s6_1017, s7_1018, s10_1012, s11, mstatus, dwLoc01C8_1550, dwLoc01C0, dwLoc01BC, dwLoc01A8, dwLoc0198, dwLoc018C, dwLoc0188, dwLoc0178, dwLoc0168, dwLoc0158, a5, dwLoc0138, dwLoc0128, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocBC, dwLocA8, dwLoc9C, out s1_2874, out a0_820, out a2_1000, out a3_823, out a4_1002, out a5_2875, out s2_1006, out s3_1014, out s4_837, out s5_1016, out s6_1017, out s7_1018, out s8_1019, out s9_1020, out s10_1012, out s11, out mstatus)
	a5_1026 = a0_820
	branch a0_820 != 0<32> l23095620
l23095556:
	word32 a0_874
	word32 a5_2878
	word32 s4_2879
	word32 s1_2876
	word32 a3_2877
	ra_1011 = mbedtls_mpi_mul_mpi(ra_1011, s2_1006, s2_1006, fp + -376<i32>, a3_823, a4_1002, s2_1006, s4_837, s6_1017, mstatus, dwLoc0128, dwLoc0118, dwLoc0108, dwLocE8, dwLocD8, dwLocC8, dwLocA8, dwLoc98, dwLoc88, dwLoc38, out s0_1150, out s1_2876, out a0_874, out a2_1000, out a3_2877, out a4_1002, out a5_2878, out s2_1006, out s3_1014, out s4_2879, out s5_1016, out s6_1017, out s8_1019)
	a5_1026 = a0_874
	branch a0_874 != 0<32> l23095620
l23095564:
	word32 a0_879
	word32 a3_882
	word32 s4_896
	word32 a5_2881
	word32 s1_2880
	ra_1011 = ecp_modp(ra_1011, s2_1006, a2_1000, a4_1002, a0_874, s2_1006, s5_1016, s6_1017, s7_1018, s10_1012, s11, mstatus, dwLoc01C8_1550, dwLoc01C0, dwLoc01BC, dwLoc01A8, dwLoc0198, dwLoc018C, dwLoc0188, dwLoc0178, dwLoc0168, dwLoc0158, a5, dwLoc0138, dwLoc0128, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocBC, dwLocA8, dwLoc9C, out s1_2880, out a0_879, out a2_1000, out a3_882, out a4_1002, out a5_2881, out s2_1006, out s3_1014, out s4_896, out s5_1016, out s6_1017, out s7_1018, out s8_1019, out s9_1020, out s10_1012, out s11, out mstatus)
	a5_1026 = a0_879
	branch a0_879 != 0<32> l23095620
l23095570:
	word32 a0_933
	word32 a5_2884
	word32 s1_2882
	word32 s4_2885
	word32 a3_2883
	ra_1011 = mbedtls_mpi_mul_mpi(ra_1011, fp + -376<i32>, fp + -376<i32>, fp + -388<i32>, a3_882, a4_1002, s2_1006, s4_896, s6_1017, mstatus, dwLoc0128, dwLoc0118, dwLoc0108, dwLocE8, dwLocD8, dwLocC8, dwLocA8, dwLoc98, dwLoc88, dwLoc38, out s0_1150, out s1_2882, out a0_933, out a2_1000, out a3_2883, out a4_1002, out a5_2884, out s2_1006, out s3_1014, out s4_2885, out s5_1016, out s6_1017, out s8_1019)
	a5_1026 = a0_933
	branch a0_933 != 0<32> l23095620
l2309557E:
	word32 a0_938
	word32 a3_941
	word32 a5_2887
	word32 s4_2888
	word32 s1_2886
	ra_1011 = ecp_modp(ra_1011, fp + -376<i32>, a2_1000, a4_1002, a0_933, s2_1006, s5_1016, s6_1017, s7_1018, s10_1012, s11, mstatus, dwLoc01C8_1550, dwLoc01C0, dwLoc01BC, dwLoc01A8, dwLoc0198, dwLoc018C, dwLoc0188, dwLoc0178, dwLoc0168, dwLoc0158, a5, dwLoc0138, dwLoc0128, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocBC, dwLocA8, dwLoc9C, out s1_2886, out a0_938, out a2_1000, out a3_941, out a4_1002, out a5_2887, out s2_1006, out s3_1014, out s4_2888, out s5_1016, out s6_1017, out s7_1018, out s8_1019, out s9_1020, out s10_1012, out s11, out mstatus)
	a5_1026 = a0_938
	branch a0_938 != 0<32> l23095620
l2309558A:
	word32 s4_983
	word32 a0_993
	word32 a3_2890
	word32 a5_2891
	word32 s1_2889
	ra_1011 = mbedtls_mpi_mul_mpi(ra_1011, s2_1006 + 12<i32>, s2_1006 + 12<i32>, fp + -376<i32>, a3_941, a4_1002, s2_1006, s2_1006 + 12<i32>, s6_1017, mstatus, dwLoc0128, dwLoc0118, dwLoc0108, dwLocE8, dwLocD8, dwLocC8, dwLocA8, dwLoc98, dwLoc88, dwLoc38, out s0_1150, out s1_2889, out a0_993, out a2_1000, out a3_2890, out a4_1002, out a5_2891, out s2_1006, out s3_1014, out s4_983, out s5_1016, out s6_1017, out s8_1019)
	a5_1026 = a0_993
	branch a0_993 != 0<32> l23095620
l2309559C:
	word32 a0_998
	word32 a3_2893
	word32 a5_2894
	word32 s4_2895
	word32 s1_2892
	ra_1011 = ecp_modp(ra_1011, s4_983, a2_1000, a4_1002, a0_993, s2_1006, s5_1016, s6_1017, s7_1018, s10_1012, s11, mstatus, dwLoc01C8_1550, dwLoc01C0, dwLoc01BC, dwLoc01A8, dwLoc0198, dwLoc018C, dwLoc0188, dwLoc0178, dwLoc0168, dwLoc0158, a5, dwLoc0138, dwLoc0128, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocBC, dwLocA8, dwLoc9C, out s1_2892, out a0_998, out a2_1000, out a3_2893, out a4_1002, out a5_2894, out s2_1006, out s3_1014, out s4_2895, out s5_1016, out s6_1017, out s7_1018, out s8_1019, out s9_1020, out s10_1012, out s11, out mstatus)
	a5_1026 = a0_998
l23095620:
	word32 a2_1035
	word32 a5_1036
	word32 a4_1039
	word32 a6_2899
	word32 a0_2896
	word32 s4_2900
	word32 a1_2897
	word32 a3_2898
	mbedtls_mpi_free(fp + -388<i32>, a2_1000, a4_1002, a5_1026, mstatus, dwLoc88, dwLoc48, out a0_2896, out a1_2897, out a2_1035, out a3_2898, out a4_1039, out a5_1036, out a6_2899, out s4_2900)
	dwLoc014C_1537 = a5_1026
	word32 a1_2902
	word32 s4_2905
	word32 a2_2903
	word32 a6_2904
	word32 a0_2901
	s1_1053 = mbedtls_mpi_free(fp + -376<i32>, a2_1035, a4_1039, a5_1036, mstatus, dwLoc88, dwLoc48, out a0_2901, out a1_2902, out a2_2903, out a3_1050, out a4_1051, out a5_1048, out a6_2904, out s4_2905)
	a2_1057 = dwLocEC
	branch a5_1048 == 0<32> l2309566A
l2309566A:
	a2_1057 = dwLocEC
	word32 s4_1058 = 0xFFFFFFFF<32>
l2309566C:
	s6_1017 = s6_1017 + 0xFFFFFFFF<32>
	branch s6_1017 != s4_1058 l23095636
l23095636:
	word32 s4_2919
	word32 s1_2916
	word32 a6_2918
	word32 a3_2917
	word32 a0_1100
	ra_1011 = ecp_double_jac(ra_1011, s1_1053, s1_1053, s2_1006, a3_1050, a4_1051, s2_1006, s6_1017, s7_1018, s10_1012, s11, mstatus, dwLoc01C8_1550, dwLoc01B8, dwLoc01A8, dwLoc0198, dwLoc0178, dwLoc0168, dwLoc0158, dwLoc014C_1537, a5, dwLoc0138, dwLoc0128, dwLoc011C, dwLoc0118, dwLoc0108, dwLocFC, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocB8, dwLocA8, dwLoc98, out s1_2916, out a0_1100, out a2_1057, out a3_2917, out a4_1051, out a5_1048, out a6_2918, out s2_1006, out s3_1014, out s4_2919, out s5_1016, out s6_1017, out s7_1018, out s8_1019, out s9_1020, out s10_1012, out s11, out mstatus)
	branch a0_1100 != 0<32> l23095666
l23095642:
	word32 s0_1121
	word32 a3_2920
	ra_1011 = ecp_select_comb(ra_1011, s3_1014, s9_1020, CONVERT(Mem1515[fp + -328<i32> + s6_1017:byte], byte, word32), mstatus, dwLoc0158, dwLoc0138, dwLoc0118, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocB8, dwLocA8, dwLoc98, dwLoc88, dwLoc68, out s0_1121, out a0_1100, out a2_1057, out a3_2920, out a4_1051, out a5_1048, out s2_1006, out s3_1014, out s5_1016, out s6_1017, out s7_1018, out s8_1019)
	branch a0_1100 != 0<32> l23095666
l23095658:
	word32 t1_2921
	word32 a6_2922
	word32 t4_2923
	ra_1011 = ecp_add_mixed(ra_1011, s0_1121, s2_1006, s2_1006, fp + -364<i32>, s5_1016, s6_1017, s7_1018, s10_1012, s11, mstatus, dwLoc01C8_1550, dwLoc01B8, dwLoc0198, dwLoc018C, dwLoc0188, dwLoc017C, dwLoc0178, dwLoc0168, dwLoc0158, dwLoc014C_1537, a5, dwLoc0138, dwLoc012C, dwLoc0128, dwLoc0118, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, out t1_2921, out s0_1150, out s1_1053, out a0_1100, out a2_1057, out a3_1050, out a4_1051, out a5_1048, out a6_2922, out s2_1006, out s3_1014, out s4_1058, out s5_1016, out s6_1017, out s7_1018, out s8_1019, out s9_1020, out s10_1012, out s11, out t4_2923, out mstatus)
	branch a0_1100 == 0<32> l2309566C
l23095666:
	s0_1150 = a0_1100
l23095632:
	s0_1150 = a5_1048
l23095672:
	word32 a3_1193
	word32 a0_2906
	word32 s4_2907
	mbedtls_ecp_point_free.part.4(fp + -364<i32>, a2_1057, a4_1051, a5_1048, mstatus, dwLoc01C0, dwLoc98, dwLoc88, dwLoc58, dwLoc48, out a0_2906, out a2_1192, out a3_1193, out a4_1194, out a5_110, out s4_2907)
	branch s0_1150 != 0<32> l2309531E
l2309567C:
	word32 a0_1221
	word32 s1_1231
	word32 s0_2908
	word32 s8_2910
	word32 a3_2909
	word32 ra_1229 = ecp_safe_invert_jac(ra_1011, s2_1006, s8_1019, a3_1193, a4_1194, mstatus, dwLoc0158, dwLoc0138, dwLoc0118, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, dwLocB8, dwLocA8, dwLoc88, dwLoc68, out s0_2908, out s1_1231, out a0_1221, out a2_1192, out a3_2909, out a4_1194, out a5_110, out s2_1006, out s3_1014, out s8_2910)
	s0_1150 = a0_1221
	branch a0_1221 != 0<32> l2309531E
l2309568C:
	word32 s10_2914
	word32 s8_2913
	word32 s11_2915
	word32 s6_2912
	word32 s4_2911
	s0_1150 = ecp_normalize_jac(ra_1229, s1_1231, s1_1231, s2_1006, a2_1192, s5_1016, s6_1017, s7_1018, s10_1012, s11, mstatus, dwLoc01CC, dwLoc01C8_1550, dwLoc01B8, dwLoc01A8, dwLoc0198, dwLoc018C, dwLoc0188, dwLoc016C, dwLoc0168, dwLoc0158, a5, dwLoc0138, dwLoc0128, dwLoc0118, dwLoc0108, dwLocFC, dwLocE8, dwLocDC, dwLocD8, dwLocC8, dwLocAC, dwLoc98, dwLoc88, dwLoc78, out a2_1192, out a4_1194, out a5_110, out s2_1006, out s3_1014, out s4_2911, out s6_2912, out s7_1018, out s8_2913, out s9_1020, out s10_2914, out s11_2915, out mstatus)
l230952E2:
	word32 t4_1303 = a2_1491 + a4_1194 & 255<i32>
	word32 a6_1304 = a4_1194 + a7_1300 + s3_1014
l2309540E:
	word32 a2_1307 = t4_1303 - a3_1306
	word32 t1_1309 = a3_1306 + -1<i32>
	branch a3_1306 != 0<32> l230953CC
l230953CC:
	word32 a2_1311 = t1_1309 + a7_1300
	dwLoc013C = t4_1303
	dwLoc01BC = a4_1194
	dwLoc01C0 = t1_1309
	word32 a0_1336
	word32 t1_1355
	word32 s8_2805
	word32 s0_2803
	word32 a3_2804
	ra_1330 = ecp_add_mixed(ra_1330, s0_1150, a6_1304 + a2_1311, a2_1311 + s3_1014, a6_1304, s5_1329, s6_1328, s7_1018, s10_1334, s11_1335, mstatus, a0 + 76<i32>, dwLoc01B8, dwLoc0198, dwLoc018C, dwLoc0188, dwLoc017C, dwLoc0178, dwLoc0168, dwLoc0158, a4, a5, dwLoc0138, dwLoc012C, dwLoc0128, dwLoc0118, dwLoc0108, dwLocF8, dwLocE8, dwLocD8, dwLocC8, out t1_1355, out s0_2803, out s1_1314, out a0_1336, out a2_1192, out a3_2804, out a4_1194, out a5_110, out a6_1304, out s2_1006, out s3_1014, out s4_1349, out s5_1329, out s6_1328, out s7_1018, out s8_2805, out s9_1020, out s10_1334, out s11_1335, out t4_1303, out mstatus)
	s0_1150 = a0_1336
	branch a0_1336 != 0<32> l2309531E
l2309531E:
	branch s7_1018 != 0<32> l23095342
l23095322:
	word32 s1_1368 = 0<32>
	word32 s4_1369 = 36<i32>
l23095328:
	word32 a5_2808
	word32 a3_2807
	word32 a0_2806
	s1_1368 = mbedtls_ecp_point_free(s1_1368 + s4_1369 + s3_1014, a2_1192, a4_1194, a5_110, mstatus, dwLoc01C0, dwLoc98, dwLoc88, dwLoc58, dwLoc48, out a0_2806, out a2_1192, out a3_2807, out a4_1194, out a5_2808, out s4_1369)
	a5_110 = s1_1368 & 255<i32>
	branch (s1_1368 & 255<i32>) <u s9_1020 l23095328
l2309533C:
	word32 t3_2815
	word32 s4_2814
	word32 a6_2813
	word32 a3_2812
	word32 a1_2811
	word32 s1_2809
	word32 a0_2810
	vPortFree(s3_1014, a2_1192, s1_1368 & 255<i32>, mstatus, dwLoc78, dwLoc38, out s0_1150, out s1_2809, out a0_2810, out a1_2811, out a2_1192, out a3_2812, out a4_1194, out a5_110, out a6_2813, out s4_2814, out t3_2815)
l23095342:
	word32 a2_1422
	word32 a5_1423
	word32 a4_1426
	word32 s4_2820
	word32 a0_2816
	word32 a6_2819
	word32 a3_2818
	word32 a1_2817
	mbedtls_mpi_free(fp + -412<i32>, a2_1192, a4_1194, a5_110, mstatus, dwLoc88, dwLoc48, out a0_2816, out a1_2817, out a2_1422, out a3_2818, out a4_1426, out a5_1423, out a6_2819, out s4_2820)
	word32 a0_2821
	word32 s4_2825
	word32 a6_2824
	word32 a3_2823
	word32 a1_2822
	mbedtls_mpi_free(fp + -400<i32>, a2_1422, a4_1426, a5_1423, mstatus, dwLoc88, dwLoc48, out a0_2821, out a1_2822, out a2, out a3_2823, out a4_1438, out a5_1435, out a6_2824, out s4_2825)
	branch s0_1150 == 0<32> l23095356
l23095350:
	word32 a0_2826
	word32 s4_2828
	word32 a3_2827
	mbedtls_ecp_point_free(s2_1006, a2, a4_1438, a5_1435, mstatus, dwLoc01C0, dwLoc98, dwLoc88, dwLoc58, dwLoc48, out a0_2826, out a2, out a3_2827, out a4_1438, out a5_1435, out s4_2828)
l23095356:
	a2Out = a2
	a4Out = a4_1438
	a5Out = a5_1435
	mstatusOut = mstatus
	return s0_1150
ecp_mul_comb_exit:
l230953F0:
	0<32> = dwArg00
	Mem1486[s3 + (fp + -64<i32>) + 3832<i32>:word32] = a0 + 76<i32>
	s8_1480 = a6_1304
	s0_1150 = dwArg04
	a3_1306 = t1_1355
	a7_1300 = 36<i32>
l2309541C:
	a4_1194 = a4_1194 << 1<i32> & 255<i32>
	a2_1491 = a2_1307 & 255<i32>


word32 mbedtls_ecp_point_read_binary(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_sec1_der
//      mbedtls_pk_parse_subpubkey
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ecp_point_read_binary_entry:
l230956B0:
	branch a3 != 0<32> l230956CE
l230956CE:
	word32 a5_6 = CONVERT(Mem0[a2:byte], byte, word32)
	branch a5_6 != 0<32> l230956E0
l230956E0:
	word32 a0_182
	word32 a5_267
	word32 a4_266
	word32 a1_185
	word32 a3_190
	word32 a0_25 = mbedtls_mpi_size(a2, a4, a5_6, out a1_185, out a3_190, out a4_266, out a5_267)
	word32 s1_18 = a2
	word32 s2_21 = a3
	word32 s0_210 = a1
	word32 a4_193 = CONVERT(Mem20[a2:byte], byte, word32)
	word32 a5_197 = 4<32>
	word32 s3_219 = a0_25
	branch a4_193 != 4<32> l23095744
l23095744:
	a0_182 = 0xFB000180<32>
l23095704:
	a5_197 = (a0_25 << 1<u32>) + 1<32>
	branch a3 != a5_197 l230956BA
l230956BA:
	a0_182 = 0xFB000080<32>
l2309570E:
	word32 s8_271
	word32 s4_270
	word32 a7_269
	word32 a2_268
	ra = mbedtls_mpi_read_binary(ra, a2 + 1<i32>, a0_25, a3_190, a4_193, mstatus, s2, dwLoc08, dwArgB8, dwArgC8, dwArgF8, dwArg0108, dwArg0138, dwArg0148, out s0_210, out s1_18, out a0_182, out a1_185, out a2_268, out a3_190, out a4_193, out a5_197, out a7_269, out s2_21, out s3_219, out s4_270, out s8_271)
	branch a0_182 != 0<32> l230956C0
l2309571C:
	word32 s8_275
	word32 s4_274
	word32 a7_273
	word32 a2_272
	ra = mbedtls_mpi_read_binary(ra, s3_219 + 1<i32> + s1_18, s3_219, a3_190, a4_193, mstatus, s2, dwLoc08, dwArgB8, dwArgC8, dwArgF8, dwArg0108, dwArg0138, dwArg0148, out s0_210, out s1_18, out a0_182, out a1_185, out a2_272, out a3_190, out a4_193, out a5_197, out a7_273, out s2_21, out s3_219, out s4_274, out s8_275)
	branch a0_182 != 0<32> l230956C0
l230956C0:
	s0Out = s0_210
	s1Out = s1_18
	a0Out = a0_182
	a1Out = a1_185
	a2Out = dwArg48
	a3Out = a3_190
	a4Out = a4_193
	a5Out = a5_197
	s2Out = s2_21
	s3Out = s3_219
	s4Out = dwArg04
	return ra
l2309572E:
l23095740_thunk_mbedtls_mpi_lset:
	word32 a1_108
	word32 a2_109
	word32 a3_110
	word32 a4_111
	word32 a5_112
	word32 s1_116
	word32 s2_117
	word32 s3_118
	word32 s4_119
	word32 a7_276
	word32 s8_277
	word32 ra_115 = mbedtls_mpi_lset(ra, a3_190, a4_193, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArgF8, dwArg0138, dwArg0178, out s1_116, out a1_108, out a2_109, out a3_110, out a4_111, out a5_112, out a7_276, out s2_117, out s3_118, out s4_119, out s8_277)
	s0Out = s0_210
	s1Out = s1_116
	a0Out = s0_210 + 24<i32>
	a1Out = a1_108
	a2Out = a2_109
	a3Out = a3_110
	a4Out = a4_111
	a5Out = a5_112
	s2Out = s2_117
	s3Out = s3_118
	s4Out = s4_119
	return ra_115
l230956D4:
	a5 = 1<32>
	branch a3 != 1<32> l230956B2
l230956DA:
l230956DC_thunk_mbedtls_ecp_set_zero:
	word32 a1_130
	word32 a2_131
	word32 a3_132
	word32 a4_133
	word32 a5_134
	word32 s1_138
	word32 s2_139
	word32 s3_140
	word32 s4_141
	word32 a0_150
	word32 s8_278
	word32 ra_137 = mbedtls_ecp_set_zero(ra, s0, a1, a3, a4, mstatus, dwArg00, dwArg04, dwArg18, dwArg28, dwArg38, dwArgE8, dwArgF8, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out s1_138, out a0_150, out a1_130, out a2_131, out a3_132, out a4_133, out a5_134, out s2_139, out s3_140, out s4_141, out s8_278)
	s0Out = s0
	s1Out = s1_138
	a0Out = a0_150
	a1Out = a1_130
	a2Out = a2_131
	a3Out = a3_132
	a4Out = a4_133
	a5Out = a5_134
	s2Out = s2_139
	s3Out = s3_140
	s4Out = s4_141
	return ra_137
l230956B2:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFB000080<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return ra
mbedtls_ecp_point_read_binary_exit:


word32 mbedtls_ecp_check_pubkey(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s4, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_sec1_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_ecp_mul
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ecp_check_pubkey_entry:
l2309574C:
	word32 s0_108
	word32 s3_130 = a1
	word32 s1_12 = a0
	word32 a2_23
	word32 a6_823
	word32 a5_26
	word32 a4_25
	word32 a1_22
	word32 a3_24
	branch mbedtls_mpi_cmp_int(1<32>, a2, out a1_22, out a2_23, out a3_24, out a4_25, out a5_26, out a6_823) != 0<32> l23095780
l23095768:
	a5_26 = 1<32>
	branch ecp_get_type(a5_26) != 1<32> l230958BA
l230958BA:
	s0_108 = 0xFB000080<32>
l23095774:
	word32 a2_38
	word32 a6_824
	branch mbedtls_mpi_cmp_int(0<32>, a2_23, out a1_22, out a2_38, out a3_24, out a4_25, out a5_26, out a6_824) >= 0<32> l23095788
l23095788:
	word32 a2_49
	word32 a6_825
	branch mbedtls_mpi_cmp_int(0<32>, a2_38, out a1_22, out a2_49, out a3_24, out a4_25, out a5_26, out a6_825) < 0<32> l23095780
l23095798:
	s2 = a0 + 4<i32>
	word32 a2_60
	word32 a6_826
	branch mbedtls_mpi_cmp_mpi(a2_49, a4_25, a5_26, out a1_22, out a2_60, out a3_24, out a4_25, out a5_26, out a6_826) >= 0<32> l23095780
l230957A8:
	word32 a2_827
	word32 a6_828
	branch mbedtls_mpi_cmp_mpi(a2_60, a4_25, a5_26, out a1_22, out a2_827, out a3_24, out a4_25, out a5_26, out a6_828) >= 0<32> l23095780
l230957B4:
	mbedtls_mpi_init(fp + -56<i32>)
	mbedtls_mpi_init(fp + -44<i32>)
	word32 a0_106
	word32 s0_829
	word32 a3_831
	word32 s4_832
	word32 s8_833
	word32 s1_830
	word32 a5_119
	word32 a4_118
	word32 a2_116
	ra = mbedtls_mpi_mul_mpi(ra, fp + -56<i32>, a1 + 12<i32>, a1 + 12<i32>, a3_24, a4_25, a0 + 4<i32>, s4, s6, mstatus, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0158, out s0_829, out s1_830, out a0_106, out a2_116, out a3_831, out a4_118, out a5_119, out s2, out s3_130, out s4_832, out s5, out s6, out s8_833)
	s0_108 = a0_106
	branch a0_106 != 0<32> l23095854
l230957CE:
	word32 a0_114
	word32 a3_117
	word32 s4_131
	word32 s9_845
	word32 s8_844
	word32 s1_843
	ra = ecp_modp(ra, fp + -56<i32>, a2_116, a4_118, a5_119, s2, s5, s6, s7, s10, s11, mstatus, dwLoc38, dwLoc30, dwLoc2C, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgE8, dwArgF4, out s1_843, out a0_114, out a2_116, out a3_117, out a4_118, out a5_119, out s2, out s3_130, out s4_131, out s5, out s6, out s7, out s8_844, out s9_845, out s10, out s11, out mstatus)
	s0_108 = a0_114
	branch a0_114 != 0<32> l23095854
l230957DA:
	word32 a0_168
	word32 s8_850
	word32 s4_849
	word32 s0_846
	word32 a3_848
	word32 s1_847
	ra = mbedtls_mpi_mul_mpi(ra, fp + -44<i32>, s3_130, s3_130, a3_117, a4_118, s2, s4_131, s6, mstatus, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0158, out s0_846, out s1_847, out a0_168, out a2_116, out a3_848, out a4_118, out a5_119, out s2, out s3_130, out s4_849, out s5, out s6, out s8_850)
	s0_108 = a0_168
	branch a0_168 != 0<32> l23095854
l230957E8:
	word32 a0_173
	word32 a3_176
	word32 s8_853
	word32 s9_854
	word32 s4_852
	word32 s1_851
	ra = ecp_modp(ra, fp + -44<i32>, a2_116, a4_118, a5_119, s2, s5, s6, s7, s10, s11, mstatus, dwLoc38, dwLoc30, dwLoc2C, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgE8, dwArgF4, out s1_851, out a0_173, out a2_116, out a3_176, out a4_118, out a5_119, out s2, out s3_130, out s4_852, out s5, out s6, out s7, out s8_853, out s9_854, out s10, out s11, out mstatus)
	s0_108 = a0_173
	branch a0_173 != 0<32> l23095854
l230957F4:
	word32 a3_240
	word32 s4_219
	branch a5_119 != 0<32> l23095886
l23095886:
	word32 s0_855
	word32 s1_856
	word32 a1_857
	word32 a3_858
	word32 a7_859
	word32 s8_860
	word32 a0_206
	ra = mbedtls_mpi_add_mpi(ra, a0_173, fp + -44<i32>, a3_176, a4_118, a5_119, s2, mstatus, s1, dwArg78, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_855, out s1_856, out a0_206, out a1_857, out a2_116, out a3_858, out a4_118, out a5_119, out a7_859, out s2, out s3_130, out s4_219, out s8_860)
l23095892:
	s0_108 = a0_206
	branch a0_206 != 0<32> l23095854
l23095896:
	word32 a5_242
	word32 a1_899
	word32 a2_900
	word32 a6_901
	branch mbedtls_mpi_cmp_mpi(a2_116, a4_118, a5_119, out a1_899, out a2_900, out a3_240, out a4_118, out a5_242, out a6_901) < 0<32> l2309580C
l230958A2:
	word32 s0_902
	word32 s1_903
	word32 a1_904
	word32 a3_905
	word32 a7_906
	word32 s8_907
	ra = mbedtls_mpi_sub_abs(ra, fp + -44<i32>, fp + -44<i32>, s2, a3_240, a4_118, a5_242, mstatus, dwArg78, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_902, out s1_903, out a0_206, out a1_904, out a2_116, out a3_905, out a4_118, out a5_119, out a7_906, out s2, out s3_130, out s4_219, out s8_907)
l230957F8:
	word32 s4_861
	word32 a0_275
	ra = mbedtls_mpi_sub_int(ra, a0_173, fp + -44<i32>, 3<32>, a3_176, s2, mstatus, dwArg38, s1, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out a0_275, out a2_116, out a3_240, out a4_118, out a5_119, out s2, out s3_130, out s4_861)
l23095802:
	s0_108 = a0_275
	branch a0_275 != 0<32> l23095854
l23095806:
	s4_219 = dwArgA4
	branch a5_119 < 0<32> l23095870
l23095870:
	word32 a5_311
	word32 a1_862
	word32 a2_863
	word32 a6_864
	branch mbedtls_mpi_cmp_int(0<32>, a2_116, out a1_862, out a2_863, out a3_240, out a4_118, out a5_311, out a6_864) == 0<32> l2309580C
l2309587A:
	word32 s0_893
	word32 s1_894
	word32 a1_895
	word32 a7_896
	word32 s4_897
	word32 s8_898
	ra = mbedtls_mpi_add_mpi(ra, a0_275, fp + -44<i32>, a3_240, a4_118, a5_311, s2, mstatus, s1, dwArg78, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_893, out s1_894, out a0_275, out a1_895, out a2_116, out a3_240, out a4_118, out a5_119, out a7_896, out s2, out s3_130, out s4_897, out s8_898)
l2309580C:
	word32 a0_384
	word32 s0_865
	word32 s1_866
	word32 a3_867
	word32 s4_868
	word32 s8_869
	ra = mbedtls_mpi_mul_mpi(ra, fp + -44<i32>, fp + -44<i32>, s3_130, a3_240, a4_118, s2, s4_219, s6, mstatus, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0158, out s0_865, out s1_866, out a0_384, out a2_116, out a3_867, out a4_118, out a5_119, out s2, out s3_130, out s4_868, out s5, out s6, out s8_869)
	s0_108 = a0_384
	branch a0_384 != 0<32> l23095854
l2309581A:
	word32 a0_398
	word32 a3_401
	word32 s1_870
	word32 s4_871
	word32 s8_872
	word32 s9_873
	ra = ecp_modp(ra, fp + -44<i32>, a2_116, a4_118, a5_119, s2, s5, s6, s7, s10, s11, mstatus, dwLoc38, dwLoc30, dwLoc2C, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgE8, dwArgF4, out s1_870, out a0_398, out a2_116, out a3_401, out a4_118, out a5_119, out s2, out s3_130, out s4_871, out s5, out s6, out s7, out s8_872, out s9_873, out s10, out s11, out mstatus)
	s0_108 = a0_398
	branch a0_398 != 0<32> l23095854
l23095826:
	word32 s0_874
	word32 s1_875
	word32 a1_876
	word32 a3_877
	word32 a7_878
	word32 s4_879
	word32 s8_880
	word32 a0_430
	ra = mbedtls_mpi_add_mpi(ra, a0_398, fp + -44<i32>, a3_401, a4_118, a5_119, s2, mstatus, s1, dwArg78, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, out s0_874, out s1_875, out a0_430, out a1_876, out a2_116, out a3_877, out a4_118, out a5_119, out a7_878, out s2, out s3_130, out s4_879, out s8_880)
l23095832:
	s0_108 = a0_430
	branch a0_430 != 0<32> l23095854
l23095836:
	word32 a2_463
	word32 a3_464
	word32 a4_465
	word32 a5_466
	word32 a1_881
	word32 a6_882
	branch mbedtls_mpi_cmp_mpi(a2_116, a4_118, a5_119, out a1_881, out a2_463, out a3_464, out a4_465, out a5_466, out a6_882) >= 0<32> l230958AE
l230958AE:
	word32 s0_883
	word32 s1_884
	word32 a1_885
	word32 a3_886
	word32 a7_887
	word32 s4_888
	word32 s8_889
	ra = mbedtls_mpi_sub_abs(ra, fp + -44<i32>, fp + -44<i32>, s2, a3_464, a4_465, a5_466, mstatus, dwArg78, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s0_883, out s1_884, out a0_430, out a1_885, out a2_116, out a3_886, out a4_118, out a5_119, out a7_887, out s2, out s3_130, out s4_888, out s8_889)
l23095842:
	word32 a1_890
	word32 a3_891
	word32 a6_892
	word32 a0_498 = mbedtls_mpi_cmp_mpi(a2_463, a4_465, a5_466, out a1_890, out a2_116, out a3_891, out a4_118, out a5_119, out a6_892)
	s0_108 = a0_498
	branch a0_498 == 0<32> l23095854
l2309584E:
	s0_108 = 0xFB000380<32>
l23095854:
	word32 a2_516
	word32 a5_517
	word32 a4_520
	word32 a3_836
	word32 s4_838
	word32 a6_837
	word32 a1_835
	word32 a0_834
	mbedtls_mpi_free(fp + -56<i32>, a2_116, a4_118, a5_119, mstatus, dwArg0108, dwArg0148, out a0_834, out a1_835, out a2_516, out a3_836, out a4_520, out a5_517, out a6_837, out s4_838)
	word32 s4_842
	word32 a0_839
	word32 a6_841
	word32 a2_840
	s1_12 = mbedtls_mpi_free(fp + -44<i32>, a2_516, a4_520, a5_517, mstatus, dwArg0108, dwArg0148, out a0_839, out a1_22, out a2_840, out a3_24, out a4_25, out a5_26, out a6_841, out s4_842)
l23095780:
	s0_108 = 0xFB000380<32>
l23095860:
	s0Out = s0_108
	s1Out = s1_12
	a0Out = s0_108
	a1Out = a1_22
	a2Out = dwArg0138
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_26
	s2Out = s2
	s3Out = s3_130
	s4Out = dwArgF4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_ecp_check_pubkey_exit:


word32 mbedtls_ecp_check_privkey(word32 a2, word32 a5, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_sec1_der
//      mbedtls_ecp_mul
// MayUse:  a2:[0..31] a5:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 t3 tp
// Preserved: s0 sp
mbedtls_ecp_check_privkey_entry:
l230958C2:
	word32 a5_18
	branch ecp_get_type(a5) != 1<32> l23095906
l23095906:
	a5_18 = 0xFB000080<32>
l230958D8:
	word32 a2_24
	word32 a5_27
	word32 a1_84
	word32 a6_85
	branch mbedtls_mpi_cmp_int(1<32>, a2, out a1_84, out a2_24, out a3, out a4, out a5_27, out a6_85) < 0<32> l230958F4
l230958E4:
	a5_18 = 0<32>
	word32 a1_86
	word32 a2_87
	word32 a5_88
	word32 a6_89
	branch mbedtls_mpi_cmp_mpi(a2_24, a4, a5_27, out a1_86, out a2_87, out a3, out a4, out a5_88, out a6_89) < 0<32> l230958FA
l230958F4:
	a5_18 = 0xFB000380<32>
l230958FA:
	a0Out = a5_18
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_18
	return a0
mbedtls_ecp_check_privkey_exit:


word32 mbedtls_ecp_mul(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a5, word32 s2, word32 s4, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_sec1_der
//      mbedtls_ecp_check_pub_priv
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a4 a5 mstatus ra s1 s10 s11 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ecp_mul_entry:
l2309590E:
	word32 s0_43
	word32 s1_195 = a0
	word32 s3_203 = a2
	word32 s2_201 = a3
	word32 s6_208 = a5
	word32 a2_36
	word32 a1_245
	word32 a3_246
	word32 a6_247
	word32 a4_182
	word32 a5_184
	branch mbedtls_mpi_cmp_int(1<32>, a2, out a1_245, out a2_36, out a3_246, out a4_182, out a5_184, out a6_247) != 0<32> l2309597E
l2309597E:
	s0_43 = 0xFB000080<32>
l23095938:
	word32 a0_46
	word32 a2_47
	word32 a3_248
	s1_195 = mbedtls_ecp_check_privkey(a2_36, a5_184, out a0_46, out a2_47, out a3_248, out a4_182, out a5_184)
	s0_43 = a0_46
	branch a0_46 != 0<32> l23095984
l23095944:
	word32 a0_63
	word32 s5_79
	word32 s0_249
	word32 a1_250
	word32 a2_251
	word32 a3_252
	word32 s4_253
	ra = mbedtls_ecp_check_pubkey(ra, s1_195, s1_195, a3, a2_47, a1, a5, s7, s10, s11, mstatus, s4, s2, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg48, dwArg58, s1, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0128, dwArg0138, out s0_249, out s1_195, out a0_63, out a1_250, out a2_251, out a3_252, out a4_182, out a5_184, out s2_201, out s3_203, out s4_253, out s5_79, out s6_208, out s7, out s10, out s11, out mstatus)
	s0_43 = a0_63
	branch a0_63 != 0<32> l23095984
l23095950:
	a5_184 = 1<32>
	branch ecp_get_type(a5_184) != 1<32> l23095984
l23095984:
	0<32> = dwArgA8
	s1Out = s1_195
	a0Out = s0_43
	a2Out = dwArg48
	a4Out = a4_182
	a5Out = a5_184
	s2Out = s2_201
	s3Out = s3_203
	s6Out = s6_208
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
l2309595C:
	0<32> = dwArgA8
l2309597A_thunk_ecp_mul_comb:
	word32 a4_123
	word32 a5_124
	word32 a2_125
	word32 mstatus_136
	word32 a0_121 = ecp_mul_comb(ra, s1_195, dwArg48, s5_79, s6_208, s3_203, s11, mstatus, dwArg00, dwArg04, out a2_125, out a4_123, out a5_124, out mstatus_136)
	s1Out = s1_195
	a0Out = a0_121
	a2Out = a2_125
	a4Out = a4_123
	a5Out = a5_124
	s2Out = s2_201
	s3Out = s3_203
	s6Out = s6_208
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus_136
	return ra
mbedtls_ecp_mul_exit:


void mbedtls_ecp_check_pub_priv(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s3, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      eckey_check_pair
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ecp_check_pub_priv_entry:
l2309599A:
	word32 a5_17 = CONVERT(Mem15[a0:byte], byte, word32)
	branch a5_17 != 0<32> l230959C6
l230959C6:
	word32 a4_19 = CONVERT(Mem15[a1:byte], byte, word32)
	branch a4_19 != a5_17 l230959AE
l230959CE:
	word32 a2_28
	word32 a4_30
	word32 a5_31
	word32 a3_366
	word32 a6_367
	word32 a1_365
	branch mbedtls_mpi_cmp_mpi(a2, a4_19, a5_17, out a1_365, out a2_28, out a3_366, out a4_30, out a5_31, out a6_367) != 0<32> l230959AE
l230959E2:
	word32 a2_38
	word32 a4_40
	word32 a5_41
	word32 a3_369
	word32 a6_370
	word32 a1_368
	branch mbedtls_mpi_cmp_mpi(a2_28, a4_30, a5_31, out a1_368, out a2_38, out a3_369, out a4_40, out a5_41, out a6_370) != 0<32> l230959AE
l230959F2:
	word32 a6_376
	word32 a5_375
	word32 a3_373
	word32 a4_374
	word32 a2_372
	word32 a1_371
	branch mbedtls_mpi_cmp_mpi(a2_38, a4_40, a5_41, out a1_371, out a2_372, out a3_373, out a4_374, out a5_375, out a6_376) != 0<32> l230959AE
l23095A02:
	mbedtls_ecp_point_init.part.2(fp + -192<i32>)
	word32 a2_62
	word32 a4_64
	word32 a5_381
	word32 a1_379
	word32 a3_380
	word32 a0_378
	word32 t1_377
	word32 ra_66 = memset(ra, fp + -156<i32>, 0<32>, 124<i32>, out t1_377, out a0_378, out a1_379, out a2_62, out a3_380, out a4_64, out a5_381)
	word32 s1_80
	word32 s2_81
	word32 s4_82
	word32 s0_79 = mbedtls_ecp_group_copy(fp + -156<i32>, a2_62, a4_64, mstatus, dwLocA8, dwLoc7C, dwArg48, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, out s1_80, out s2_81, out s4_82)
	word32 a0_95
	word32 mstatus_113
	word32 s11_388
	word32 s10_387
	word32 s6_385
	word32 s7_386
	word32 s3_384
	word32 s1_382
	word32 s2_383
	word32 a5_100
	word32 a4_131
	word32 a2_129
	mbedtls_ecp_mul(ra_66, s1_80, fp + -192<i32>, s0_79 + 124<i32>, s0_79 + 40<i32>, 0<32>, s2_81, s4_82, s7, s10, s11, mstatus, dwLocC0, dwLocBC, dwLocB8, dwLocA8, dwLoc98, dwLoc78, s2, dwLoc48, dwLoc3C, dwLoc38, dwLoc28, dwLoc18, dwLoc0C, dwLoc08, dwArg08, s3, s1, dwArg28, dwArg38, dwArg68, dwArg78, out s1_382, out a0_95, out a2_129, out a4_131, out a5_100, out s2_383, out s3_384, out s6_385, out s7_386, out s10_387, out s11_388, out mstatus_113)
	branch a0_95 != 0<32> l23095A5A
l23095A34:
	word32 a1_399
	word32 a3_400
	word32 a6_401
	branch mbedtls_mpi_cmp_mpi(a2_129, a4_131, a5_100, out a1_399, out a2_129, out a3_400, out a4_131, out a5_100, out a6_401) != 0<32> l23095A54
l23095A3E:
	word32 a1_402
	word32 a3_403
	word32 a6_404
	branch mbedtls_mpi_cmp_mpi(a2_129, a4_131, a5_100, out a1_402, out a2_129, out a3_403, out a4_131, out a5_100, out a6_404) != 0<32> l23095A54
l23095A48:
	word32 a1_405
	word32 a3_406
	word32 a6_407
	branch mbedtls_mpi_cmp_mpi(a2_129, a4_131, a5_100, out a1_405, out a2_129, out a3_406, out a4_131, out a5_100, out a6_407) == 0<32> l23095A5A
l23095A54:
l23095A5A:
	word32 a2_170
	word32 a4_172
	word32 a3_390
	word32 s4_392
	word32 a5_391
	word32 a0_389
	mbedtls_ecp_point_free.part.4(fp + -192<i32>, a2_129, a4_131, a5_100, mstatus_113, dwLocB0, dwArg78, dwArg88, dwArgB8, dwArgC8, out a0_389, out a2_170, out a3_390, out a4_172, out a5_391, out s4_392)
	word32 a2_394
	word32 a3_395
	word32 a1_393
	word32 a5_397
	word32 a4_396
	word32 s2_398
	mbedtls_ecp_group_free(fp + -156<i32>, a2_170, a4_172, mstatus_113, dwLocC0, dwLoc88, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, out a1_393, out a2_394, out a3_395, out a4_396, out a5_397, out s2_398)
l230959AE:
l230959B4:
	return
mbedtls_ecp_check_pub_priv_exit:


void ecp_mod_koblitz.constprop.0(word32 ra, word32 a2, word32 a5, word32 s4, word32 s6, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecp_mod_p224k1
//      ecp_mod_p256k1
// MayUse:  a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s6:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ecp_mod_koblitz.constprop.0_entry:
l23095A68:
	branch a5 <u a2 l23095B5C
l23095B5C:
	return
l23095A6E:
	branch a2 <u a5 - a2 l23095B34
l23095B34:
l23095A96:
l23095A98:
	word32 a1_39
	word32 a2_40
	word32 a5_452
	word32 a3_450
	word32 a4_451
	word32 t1_448
	word32 a0_449
	word32 ra_44 = memset(ra, fp + -76<i32>, 0<32>, 44<i32>, out t1_448, out a0_449, out a1_39, out a2_40, out a3_450, out a4_451, out a5_452)
	word32 a5_57
	word32 a7_456
	word32 a2_454
	word32 a6_455
	word32 a1_453
	word32 a4_56
	word32 a3_61
	memcpy(fp + -76<i32>, a1_39 + (a2 << 2<u32>), a2_40 << 2<i32>, out a1_453, out a2_454, out a3_61, out a4_56, out a5_57, out a6_455, out a7_456)
	word32 a5_71 = a5_57 + a4_56
	word32 a5_73 = a2
l23095AC0:
	branch a5_73 <u a4_56 l23095B38
l23095B38:
	a3_61 = a5_73 << 2<u32>
	a4_56 = a4_56 + a3_61
	Mem82[a4_56:word32] = 0<32>
	a5_73 = a5_73 + 1<32>
l23095AC6:
	word32 a3_101
	word32 a4_102
	word32 a5_103
	word32 s0_107
	word32 s1_108
	word32 s2_109
	word32 a0_121
	word32 s6_122
	word32 s5_460
	word32 s8_461
	word32 s3_458
	word32 s4_459
	word32 a2_457
	word32 ra_106 = mbedtls_mpi_mul_mpi(ra_44, fp + -100<i32>, fp + -100<i32>, fp + -88<i32>, a3_61, a4_56, fp + -76<i32>, s4, s6, mstatus, dwArg38, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArg0128, out s0_107, out s1_108, out a0_121, out a2_457, out a3_101, out a4_102, out a5_103, out s2_109, out s3_458, out s4_459, out s5_460, out s6_122, out s8_461)
	branch a0_121 != 0<32> l23095B26
l23095AD2:
	word32 a4_465
	word32 a3_464
	word32 a7_466
	word32 a5_130
	word32 s2_136
	word32 s3_137
	word32 s4_138
	word32 a0_147
	word32 s1_462
	word32 a1_463
	word32 s0_134
	word32 ra_133 = mbedtls_mpi_add_abs(ra_106, s0_107, s1_108, s1_108, fp + -100<i32>, a3_101, a4_102, a5_103, s2_109, mstatus, a5_71, dwArg48, dwArg68, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, out s0_134, out s1_462, out a0_147, out a1_463, out a3_464, out a4_465, out a5_130, out a7_466, out s2_136, out s3_137, out s4_138)
	branch a0_147 != 0<32> l23095B26
l23095ADE:
	branch s0_134 <u a5_130 - s0_134 l23095B48
l23095B48:
l23095AE6:
l23095AE8:
	word32 t1_467
	word32 a3_469
	word32 a0_468
	word32 a4_470
	word32 a5_471
	word32 a1_158
	word32 a2_159
	word32 ra_163 = memset(ra_133, s2_136, 0<32>, 44<i32>, out t1_467, out a0_468, out a1_158, out a2_159, out a3_469, out a4_470, out a5_471)
	word32 a1_472
	word32 a2_473
	word32 a6_474
	word32 a5_175
	word32 a3_179
	word32 a7_475
	word32 a4_174
	memcpy(s2_136, a1_158 + s3_137, a2_159 << 2<i32>, out a1_472, out a2_473, out a3_179, out a4_174, out a5_175, out a6_474, out a7_475)
	word32 a5_189 = a5_175 + a4_174
	a5_191 = a5_189
l23095B0A:
	word32 a5_191
	branch s0_134 <u a5_191 l23095B4C
l23095B4C:
	a4_174 = s0_134 << 2<u32>
	a5_191 = a5_191 + a4_174
	Mem199[a5_191:word32] = 0<32>
	s0_134 = s0_134 + 1<32>
l23095B10:
	word32 a3_216
	word32 a4_217
	word32 a5_218
	word32 s0_222
	word32 s1_223
	word32 s2_224
	word32 a0_236
	word32 a2_476
	word32 s3_477
	word32 s4_478
	word32 s5_479
	word32 s6_480
	word32 s8_481
	word32 ra_221 = mbedtls_mpi_mul_mpi(ra_163, fp + -100<i32>, fp + -100<i32>, fp + -88<i32>, a3_179, a4_174, s2_136, s4_138, s6_122, mstatus, dwArg38, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArg0128, out s0_222, out s1_223, out a0_236, out a2_476, out a3_216, out a4_217, out a5_218, out s2_224, out s3_477, out s4_478, out s5_479, out s6_480, out s8_481)
	branch a0_236 != 0<32> l23095B26
l23095B1C:
	word32 s0_482
	word32 s1_483
	word32 a0_484
	word32 a1_485
	word32 a3_486
	word32 a4_487
	word32 a5_488
	word32 a7_489
	word32 s2_490
	word32 s3_491
	word32 s4_492
	mbedtls_mpi_add_abs(ra_221, s0_222, s1_223, s1_223, fp + -100<i32>, a3_216, a4_217, a5_218, s2_224, mstatus, a5_189, dwArg48, dwArg68, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, out s0_482, out s1_483, out a0_484, out a1_485, out a3_486, out a4_487, out a5_488, out a7_489, out s2_490, out s3_491, out s4_492)
l23095B26:
	return
ecp_mod_koblitz.constprop.0_exit:


void ecp_mod_p224k1(word32 ra, word32 a5, word32 s4, word32 s6, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s6:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ecp_mod_p224k1_entry:
l23095B60:
l23095B6A_thunk_ecp_mod_koblitz.constprop.0:
	ecp_mod_koblitz.constprop.0(ra, 7<32>, a5, s4, s6, mstatus, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0128)
	return
ecp_mod_p224k1_exit:


void ecp_mod_p256k1(word32 ra, word32 a5, word32 s4, word32 s6, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s6:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ecp_mod_p256k1_entry:
l23095B6E:
l23095B78_thunk_ecp_mod_koblitz.constprop.0:
	ecp_mod_koblitz.constprop.0(ra, 8<32>, a5, s4, s6, mstatus, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0128)
	return
ecp_mod_p256k1_exit:


word32 mbedtls_ecp_group_load(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg44, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_use_ecparams
//      mbedtls_ecp_group_copy
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
mbedtls_ecp_group_load_entry:
l23095B7C:
	word32 s1_111
	word32 a1_105
	word32 a0_117
	word32 a3_107
	word32 a2_106
	word32 a5_109
	word32 a4_108
	word32 a4_134
	word32 a5_101
	word32 a1_18
	word32 a4_21
	word32 a2_225
	word32 a3_226
	word32 a5_227
	word32 s2_112
	mbedtls_ecp_group_free(a0, a2, a4, mstatus, dwLoc20, dwArg18, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158, dwArg0168, out a1_18, out a2_225, out a3_226, out a4_21, out a5_227, out s2_112)
	Mem31[a0:byte] = SLICE(a1_18, byte, 0)
	branch a1_18 == 0xB<32> l23095C1E
l23095C1E:
	Mem34[0x230C8A4C<32>:word32] = a0
	Mem37[0x230CBB30<32>:word32] = a0
	Mem40[0x230CBB40<32>:word32] = a0
	Mem43[0x58<32>:word32] = a0
	Mem47[0x23095BC4<32>:word32] = a0
	Mem48[0x230C8A74<32>:word32] = a0
	Mem52[0xF<32>:word32] = a0
	Mem53[0x33<32>:word32] = a0
	Mem55[0x3F<32>:word32] = a0
	Mem57[5<32>:word32] = a0
	Mem58[0x11<32>:word32] = a0
	Mem59[0x15<32>:word32] = a0
	Mem60[0x1D<32>:word32] = a0
	Mem61[0x21<32>:word32] = a0
	Mem62[0x4D<32>:word32] = a0
	Mem63[0x29<32>:word32] = a0
	Mem64[0x230C8A18<32>:word32] = a0
	Mem65[0x35<32>:word32] = a0
	a4_134 = 0x230C89E8<32>
	a5_101 = 0x230C8A04<32>
l23095B98:
	branch a1_18 == 0xC<32> l23095C82
l23095C82:
	Mem70[0x230C8AC8<32>:word32] = a0
	Mem73[0x230CBB38<32>:word32] = a0
	Mem77[0x230CBB48<32>:word32] = a0
	Mem81[0x23095BD2<32>:word32] = a0
	Mem82[0x230C8AF0<32>:word32] = a0
	Mem86[0x10<32>:word32] = a0
	Mem87[0x58<32>:word32] = a0
	Mem88[0x34<32>:word32] = a0
	Mem90[0x40<32>:word32] = a0
	Mem92[5<32>:word32] = a0
	Mem93[0x11<32>:word32] = a0
	Mem94[0x15<32>:word32] = a0
	Mem95[0x1D<32>:word32] = a0
	Mem96[0x21<32>:word32] = a0
	Mem97[0x4D<32>:word32] = a0
	Mem98[0x29<32>:word32] = a0
	Mem99[0x230C8A8C<32>:word32] = a0
	Mem100[0x35<32>:word32] = a0
	a4_134 = 0x230C8A5C<32>
	a5_101 = 0x230C8A7C<32>
l23095B9E:
	branch a1_18 != 3<32> l23095CE4
l23095CE4:
	s1_111 = mbedtls_ecp_group_free(a0, dwArg44, a4_21, mstatus, dwLoc20, dwArg18, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158, dwArg0168, out a1_105, out a2_106, out a3_107, out a4_108, out a5_109, out s2_112)
	a0_117 = 0xFB000180<32>
l23095BA4:
	Mem120[0x230C8B68<32>:word32] = a0
	Mem123[0x230C8B00<32>:word32] = a0
	Mem127[0x230C8B90<32>:word32] = a0
	Mem130[0x10<32>:word32] = a0
	Mem131[0x28<32>:word32] = a0
	Mem132[0x58<32>:word32] = a0
	Mem133[0x34<32>:word32] = a0
	Mem135[0x40<32>:word32] = a0
	Mem137[5<32>:word32] = a0
	Mem138[0x1D<32>:word32] = a0
	Mem139[0x4D<32>:word32] = a0
	Mem140[0x29<32>:word32] = a0
	Mem141[0x230C8B2C<32>:word32] = a0
	Mem142[0x35<32>:word32] = a0
	a4_134 = 0x230C8AFC<32>
	a5_101 = 0x230C8B1C<32>
l23095BEC:
	Mem146[a5_101 + 60<i32>:word32] = a0
	Mem149[0x4200ED40<32>:word32] = a0
	Mem151[0x41<32>:word32] = a0
	Mem152[0x45<32>:word32] = a0
	word32 a2_158
	word32 a4_160
	word32 a5_161
	word32 a1_228
	word32 a3_229
	Mem162[mbedtls_mpi_bitlen(dwArg44, a4_134, 0x4200ECF8<32>, out a1_228, out a2_158, out a3_229, out a4_160, out a5_161) + 88<i32>:word32] = a0
	Mem170[mbedtls_mpi_bitlen(a2_158, a4_160, a5_161, out a1_105, out a2_106, out a3_107, out a4_108, out a5_109) + 92<i32>:word32] = a0
	Mem171[0x61<32>:word32] = a0
	s1_111 = 1<32>
	a0_117 = 0<32>
l23095C14:
	s1Out = s1_111
	a0Out = a0_117
	a1Out = a1_105
	a2Out = a2_106
	a3Out = a3_107
	a4Out = a4_108
	a5Out = a5_109
	s2Out = s2_112
	s4Out = dwArg04
	return a0
mbedtls_ecp_group_load_exit:


word32 gcm_mult(word32 s1, word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_auth_encrypt
//      mbedtls_gcm_starts
//      mbedtls_gcm_update
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] s1:[0..31]
// LiveOut: a1 a5 a7 s0 s1 s2
// Trashed: a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
gcm_mult_entry:
l23095CF2:
	word32 a3_17 = ((CONVERT(Mem9[a1 + 15<i32>:byte], byte, word32) & 0xF<32>) << 3<i32>) + a0
	word32 t3_13 = 0xF<32>
	word32 t1_18 = Mem9[a3_17 + 192<i32>:int32]
	word32 a4_19 = Mem9[a3_17 + 196<i32>:int32]
	word32 a3_101 = Mem9[Mem9[a5 + 64<i32>:word32] + 68<i32>:word32]
l23095D1E:
	word32 a6_35 = CONVERT(Mem9[a1 + t3_13:byte], byte, word32)
	word32 t5_36 = Mem9[((a5 & 15<i32>) << 3<i32>) + 0x230C8B80<32>:int32]
	word32 s0_42 = a5 >>u 4<u32> | a3_101 << 0x1C<u32>
	word32 t4_46 = t1_18 << 0x1C<u32> | a3_101 >>u 4<u32>
	word32 s1_49 = a4_19 << 0x1C<u32> | t1_18 >>u 4<u32>
	word32 s2_52 = a4_19 >>u 4<u32>
	branch t3_13 == 0xF<32> l23095D88
l23095D66:
	word32 a3_56 = ((a6_35 & 15<i32>) << 3<u32>) + a0
	word32 a5_58 = t5_36 << 16<i32> ^ s2_52
	a4_19 = Mem9[a3_56 + 196<i32>:int32] ^ a5_58
	t1_18 = Mem9[a3_56 + 192<i32>:int32] ^ s1_49
	a5 = a5_58 ^ s0_42
	a3_101 = Mem9[Mem9[a5_58 + 64<i32>:word32] + 68<i32>:word32] ^ t4_46
l23095D88:
	word32 a6_75 = (a6_35 >>u 4<u32> << 3<i32>) + a0
	word32 a7_76 = a3_101 << 0x1C<u32> | a5 >>u 4<u32>
	a4_19 = Mem9[a6_75 + 196<i32>:int32] ^ a4_19 >>u 4<u32> ^ Mem9[((a5 & 0xF<32>) << 3<i32>) + 0x230C8B80<32>:word32] << 16<i32>
	t3_13 = t3_13 + 0xFFFFFFFF<32>
	t1_18 = Mem9[a6_75 + 192<i32>:int32] ^ (a4_19 << 0x1C<u32> | t1_18 >>u 4<u32>)
	a5 = Mem9[a6_75 + 64<i32>:int32] ^ a7_76
	a3_101 = Mem9[a6_75 + 68<i32>:int32] ^ (t1_18 << 0x1C<u32> | a3_101 >>u 4<i32>)
	branch t3_13 != 0xFFFFFFFF<32> l23095D1E
l23095DE4:
	Mem108[a2:byte] = SLICE(a4_19 >>u 0x18<u32>, byte, 0)
	Mem110[a2 + 1<i32>:byte] = SLICE(a4_19 >>u 0x10<u32>, byte, 0)
	Mem111[a2 + 3<i32>:byte] = SLICE(a4_19, byte, 0)
	Mem114[a2 + 4<i32>:byte] = SLICE(t1_18 >>u 0x18<u32>, byte, 0)
	Mem116[a2 + 5<i32>:byte] = SLICE(t1_18 >>u 0x10<u32>, byte, 0)
	Mem118[a2 + 6<i32>:byte] = SLICE(t1_18 >>u 8<u32>, byte, 0)
	Mem120[a2 + 8<i32>:byte] = SLICE(a3_101 >>u 0x18<u32>, byte, 0)
	Mem122[a2 + 9<i32>:byte] = SLICE(a3_101 >>u 0x10<u32>, byte, 0)
	Mem124[a2 + 10<i32>:byte] = SLICE(a3_101 >>u 8<u32>, byte, 0)
	Mem126[a2 + 12<i32>:byte] = SLICE(a5 >>u 0x18<u32>, byte, 0)
	Mem131[s1 + 13<i32>:byte] = SLICE(a5 >>u 0x10<u32>, byte, 0)
	Mem133[s1 + 2<i32>:byte] = SLICE(a4_19 >>u 8<u32>, byte, 0)
	Mem134[s1 + 7<i32>:byte] = SLICE(t1_18, byte, 0)
	Mem135[s1 + 11<i32>:byte] = SLICE(a3_101, byte, 0)
	Mem136[s1 + 14<i32>:byte] = SLICE(a5 >>u 8<u32>, byte, 0)
	Mem137[s1 + 15<i32>:byte] = SLICE(a5, byte, 0)
	s1Out = s1_49
	a1Out = a4_19 >>u 8<u32>
	a5Out = a5
	a7Out = a7_76
	s2Out = s2_52
	return dwArg14
gcm_mult_exit:


void mbedtls_gcm_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gcm_ctx_alloc
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_gcm_init_entry:
l23095E5E:
l23095E64_thunk_memset:
	word32 t1_16
	word32 a0_17
	word32 a1_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	memset(ra, a0, 0<32>, 392<i32>, out t1_16, out a0_17, out a1_18, out a2_19, out a3_20, out a4_21, out a5_22)
	return
mbedtls_gcm_init_exit:


void mbedtls_gcm_setkey(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a5, word32 s3, word32 s5, word32 s7, word32 dwArg38, word32 dwArg78, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gcm_aes_setkey_wrap
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a5:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_gcm_setkey_entry:
l23095E68:
	word32 a4_25
	branch mbedtls_cipher_info_from_values(a1, a3, 1<32>, a3, a5, out a4_25) == 0<32> l2309603A
l2309603A:
l23095E86:
	branch a4_25 != 0x10<32> l2309602E
l23095E92:
	word32 a5_354
	mbedtls_cipher_free(ra, a0, 0x10<32>, out a5_354)
	word32 a0_38
	word32 a4_43
	word32 a5_44
	word32 s1_46
	word32 ra_45 = mbedtls_cipher_setup(ra, a0, a3, out s1_46, out a0_38, out a4_43, out a5_44)
	branch a0_38 != 0<32> l2309602E
l23095EA4:
	word32 a4_355
	word32 a5_356
	branch mbedtls_cipher_setkey(a0, s1_46, 1<32>, a4_43, a5_44, out a4_355, out a5_356) != 0<32> l2309602E
l23095EB4:
	word32 a5_68
	word32 a0_80
	word32 s0_83
	word32 s6_372
	word32 s7_373
	word32 s8_374
	word32 s3_369
	word32 s4_370
	word32 s5_371
	word32 a5_366
	word32 a7_367
	word32 s2_368
	word32 s1_363
	word32 a1_364
	word32 a3_365
	word32 a2_360
	word32 a3_361
	word32 a4_362
	word32 t1_357
	word32 a0_358
	word32 a1_359
	mbedtls_cipher_update(memset(ra_45, fp + -32<i32>, 0<32>, 0x10<32>, out t1_357, out a0_358, out a1_359, out a2_360, out a3_361, out a4_362, out a5_68), a0, fp + -32<i32>, 0x10<32>, fp + -32<i32>, fp + -36<i32>, a5_68, s3, s5, s7, dwLoc08, dwArg38, s1, dwArg78, dwArgA4, dwArgC0, dwArgC4, dwArgE8, out s0_83, out s1_363, out a0_80, out a1_364, out a3_365, out a5_366, out a7_367, out s2_368, out s3_369, out s4_370, out s5_371, out s6_372, out s7_373, out s8_374)
	branch a0_80 != 0<32> l2309602E
l23095ED2:
	Mem139[s0_83 + 196<i32>:word32] = 0<32>
	Mem143[s0_83 + 68<i32>:word32] = 0<32>
	word32 a4_138 = CONVERT(bLoc18, byte, word32) << 24<i32> | CONVERT(bLoc17, byte, word32) << 16<i32> | CONVERT(bLoc15, byte, word32) | CONVERT(bLoc16, byte, word32) << 8<i32>
	Mem144[s0_83 + 132<i32>:word32] = a4_138
	word32 a2_125 = CONVERT(bLoc1C, byte, word32) << 24<i32> | CONVERT(bLoc1B, byte, word32) << 16<i32> | CONVERT(bLoc19, byte, word32) | CONVERT(bLoc1A, byte, word32) << 8<i32>
	Mem147[s0_83 + 256<i32>:word32] = a2_125
	word32 a5_126 = CONVERT(bLoc20, byte, word32) << 24<i32> | CONVERT(bLoc1F, byte, word32) << 16<i32> | CONVERT(bLoc1D, byte, word32) | CONVERT(bLoc1E, byte, word32) << 8<i32>
	Mem148[s0_83 + 260<i32>:word32] = a5_126
	Mem152[s0_83 + 192<i32>:word32] = 0<32>
	Mem153[s0_83 + 64<i32>:word32] = 0<32>
	word32 a3_150 = CONVERT(bLoc14, byte, word32) << 24<i32> | CONVERT(bLoc13, byte, word32) << 16<i32> | CONVERT(bLoc11, byte, word32) | CONVERT(bLoc12, byte, word32) << 8<i32>
	Mem154[s0_83 + 128<i32>:word32] = a3_150
	word32 a6_155 = 3<32>
	word32 a7_156 = 4<32>
l23095F74:
	a3_150 = a4_138 << 0x1F<u32> | a3_150 >>u 1<i32>
	word32 a1_178 = (a7_156 << 3<u32>) + s0_83
	Mem180[a3_150 + 64<i32>:word32] = a1_178
	a4_138 = a2_125 << 0x1F<u32> | a4_138 >>u 1<i32>
	Mem181[a4_138 + 68<i32>:word32] = a1_178
	a2_125 = a5_126 << 0x1F<u32> | a2_125 >>u 1<i32>
	Mem182[a1_178 + 192<i32>:word32] = a2_125
	a5_126 = a5_126 >>u 1<i32> ^ (a3_150 & 1<i32>) + 0xE1000000<32>
	Mem183[a1_178 + 196<i32>:word32] = a5_126
	a6_155 = a6_155 + 0xFFFFFFFF<32>
	a7_156 = a7_156 >> 1<u32>
	branch a6_155 != 0<32> l23095F74
l23095FBA:
	word32 a3_187 = 3<32>
	word32 a2_188 = 2<32>
l23095FC6:
	word32 a1_192 = a2_188 << 3<u32>
	word32 t1_196 = s0_83 + 192<i32> + a1_192
	word32 a7_194 = s0_83 + 64<i32> + a1_192
	word32 s1_198 = Mem197[t1_196:int32]
	word32 t2_199 = Mem197[t1_196 + 4<i32>:int32]
	word32 t0_200 = Mem197[a7_194:int32]
	word32 t6_201 = Mem197[a7_194 + 4<i32>:int32]
	word32 a5_203 = s0_83 + 72<i32> + 128<i32>
	word32 a4_204 = 8<32>
l23095FE8:
	word32 t3_210 = t1_196 + a4_204
	Mem214[t3_210:word32] = Mem206[a5_203 + 0<i32>:int32] ^ s1_198
	a5_203 = a5_203 + 8<32>
	Mem218[t3_210 + 4<i32>:word32] = Mem214[a5_203 + 124<i32>:int32] ^ t2_199
	word32 t3_221 = a7_194 + a4_204
	Mem225[t3_221:word32] = Mem218[a5_203 + -8<i32>:int32] ^ t0_200
	Mem229[t3_221 + 4<i32>:word32] = Mem225[a5_203 + -4<i32>:int32] ^ t6_201
	a4_204 = a4_204 + 8<32>
	branch a1_192 != a4_204 l23095FE8
l23096028:
	a3_187 = a3_187 + 0xFFFFFFFF<32>
	a2_188 = a2_188 << 1<i32>
	branch a3_187 != 0<32> l23095FC6
l2309602E:
	return
mbedtls_gcm_setkey_exit:


word32 mbedtls_gcm_starts(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 s5, word32 dwArg28, word32 dwArg68, word32 dwArg94, word32 dwArgB0, word32 dwArgB4, word32 dwArgD8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_auth_encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] ra:[0..31] s5:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0094:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a5 a7 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_gcm_starts_entry:
l2309603E:
	word32 a5_163
	word32 a2_544
	word32 a3_545
	word32 a4_546
	word32 a5_547
	word32 a0_535
	word32 a4_539
	word32 a5_540
	word32 t1_541
	word32 a0_542
	word32 a1_543
	word32 a1_536
	word32 a2_537
	word32 a3_538
	word32 t1_534
	word32 ra_204 = memset(memset(ra, a0 + 352<i32>, 0<32>, 0x10<32>, out t1_534, out a0_535, out a1_536, out a2_537, out a3_538, out a4_539, out a5_540), a0 + 368<i32>, 0<32>, 0x10<32>, out t1_541, out a0_542, out a1_543, out a2_544, out a3_545, out a4_546, out a5_547)
	Mem65[a0 + 320<i32>:word32] = 0<32>
	Mem66[a0 + 328<i32>:word32] = 0<32>
	Mem67[a0 + 384<i32>:word32] = a1
	Mem68[a0 + 324<i32>:word32] = 0<32>
	Mem69[a0 + 332<i32>:word32] = 0<32>
	word32 s1_127 = a0 + 352<i32>
	word32 s0_117 = a0
	word32 s5_138 = a2
	word32 s7_18 = a1
	word32 s2_137 = a3
	branch a3 != 0xC<32> l230960E8
l230960E8:
	word32 a4_553
	word32 a5_554
	word32 t1_548
	word32 a0_549
	word32 a1_550
	word32 a2_551
	word32 a3_552
	ra_204 = memset(ra_204, fp + -64<i32>, 0<32>, 0x10<32>, out t1_548, out a0_549, out a1_550, out a2_551, out a3_552, out a4_553, out a5_554)
l23096114:
	branch s2_137 != 0<32> l2309613E
l2309613E:
	s7_18 = s2_137
	branch s2_137 <=u 0x10<32> l23096146
l23096144:
	s7_18 = 0x10<32>
l23096146:
	word32 a4_103 = s1_127
	word32 a5_101 = 0<32>
l2309614A:
	a4_103 = a4_103 + 1<32>
	Mem110[a4_103 + 4095<i32>:byte] = SLICE(CONVERT(Mem104[s5_138 + a5_101:byte], byte, word32) ^ CONVERT(Mem104[a4_103:byte], byte, word32), byte, 0)
	a5_101 = a5_101 + 1<32>
	branch s7_18 != a5_101 l2309614A
l23096164:
	word32 s2_128
	word32 a1_572
	word32 a5_573
	word32 a7_574
	s0_117 = gcm_mult(s1_127, s0_117, s1_127, s1_127, a5_101, out s1_127, out a1_572, out a5_573, out a7_574, out s2_128)
	s2_137 = s2_128 - s7_18
	s5_138 = s5_138 + s7_18
l23096118:
	word32 a4_139 = s1_127
	word32 a5_143 = fp + -64<i32>
l2309611C:
	a4_139 = a4_139 + 1<32>
	Mem152[a4_139 + 4095<i32>:byte] = SLICE(CONVERT(Mem145[a4_139:byte], byte, word32) ^ CONVERT(Mem145[a5_143:byte], byte, word32), byte, 0)
	a5_143 = a5_143 + 1<32>
	branch a0 + 368<i32> != a4_139 l2309611C
l23096132:
	word32 a1_562
	word32 a7_563
	word32 s2_564
	s0_117 = gcm_mult(s1_127, s0_117, s1_127, s1_127, a5_143, out s1_127, out a1_562, out a5_163, out a7_563, out s2_564)
l2309609C:
	word32 a3_557
	word32 a4_558
	word32 a5_559
	word32 a6_560
	word32 a7_561
	word32 a1_555
	word32 a2_556
	memcpy(a0 + 352<i32>, a2, 0xC<32>, out a1_555, out a2_556, out a3_557, out a4_558, out a5_559, out a6_560, out a7_561)
	Mem194[a0 + 367<i32>:byte] = 1<8>
	a5_163 = 1<32>
l230960AC:
	word32 a0_222
	word32 s4_226
	word32 a1_566
	word32 a3_567
	word32 s2_568
	word32 s7_569
	word32 s8_570
	word32 s1_565
	word32 s0_225
	word32 s5_230
	word32 s6_235
	word32 a5_232
	word32 a7_238
	word32 s3_240
	mbedtls_cipher_update(ra_204, s0_117, s1_127, 0x10<32>, s0_117 + 336<i32>, fp + -68<i32>, a5_163, a5, s5_138, s7_18, dwLoc18, dwArg28, s5, dwArg68, dwArg94, dwArgB0, dwArgB4, dwArgD8, out s0_225, out s1_565, out a0_222, out a1_566, out a3_567, out a5_232, out a7_238, out s2_568, out s3_240, out s4_226, out s5_230, out s6_235, out s7_569, out s8_570)
	word32 s2_247 = a0_222
	branch a0_222 != 0<32> l230960CE
l230960C0:
	Mem248[s0_225 + 328<i32>:word32] = s3_240
	Mem249[s0_225 + 332<i32>:word32] = 0<32>
	s5_230 = 0x10<32>
l230960CA:
	branch s3_240 != 0<32> l23096176
l23096176:
	word32 s1_252 = s3_240
	branch s3_240 <=u 0x10<32> l2309617E
l2309617C:
	s1_252 = 0x10<32>
l2309617E:
	word32 a4_257 = s4_226
	word32 a5_258 = 0<32>
l23096182:
	a4_257 = a4_257 + 1<32>
	Mem269[a4_257 + 4095<i32>:byte] = SLICE(CONVERT(Mem263[s6_235 + a5_258:byte], byte, word32) ^ CONVERT(Mem263[a4_257:byte], byte, word32), byte, 0)
	a5_258 = a5_258 + 1<32>
	branch s1_252 != a5_258 l23096182
l2309619C:
	word32 s1_286
	word32 a1_571
	s0_225 = gcm_mult(s1_252, s0_225, s4_226, s4_226, a5_258, out s1_286, out a1_571, out a5_232, out a7_238, out s2_247)
	s3_240 = s3_240 - s1_286
	s6_235 = s6_235 + s1_286
l230960CE:
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = s2_247
	a5Out = a5_232
	a7Out = a7_238
	s2Out = s2_247
	s3Out = s3_240
	s4Out = dwArg0168
	s5Out = s5_230
	s6Out = s6_235
	return dwLoc08
mbedtls_gcm_starts_exit:


word32 mbedtls_gcm_update(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_update
//      mbedtls_cipher_auth_encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a3 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_gcm_update_entry:
l230961AE:
	word32 a0_125
	word32 a5_129
	word32 s2_120
	word32 s0_193 = a0
	word32 s1_204 = a1
	word32 s6_117 = a2
	word32 s7_118 = a3
	branch a2 >=u a3 l230961DC
l230961D2:
	a5_129 = a3 - a2
	a0_125 = 0xFFFFFFEC<32>
	s2_120 = s2
	branch a5_129 <u a1 l23096222
l230961DC:
	word32 a2_37 = Mem24[a0 + 320<i32>:int32]
	word32 a4_40 = a1 + a2_37
	word32 a3_38 = Mem24[a0 + 324<i32>:int32]
	a5_129 = CONVERT(a4_40 <u a1, bool, word32) + a3_38
	branch a5_129 <u a3_38 l230962CE
l230961F2:
	branch a3_38 != a5_129 l230961FA
l230961F6:
	branch a4_40 <u a2_37 l230962CE
l230961FA:
	branch a5_129 >u 0xF<32> l230962CE
l23096200:
	branch a5_129 != 0xF<32> l2309620A
l23096204:
	branch a4_40 >u 0xFFFFFFE0<32> l230962CE
l230962CE:
	a0_125 = 0xFFFFFFEC<32>
	s2_120 = s2
l2309620A:
	Mem51[a0 + 320<i32>:word32] = a4_40
	Mem53[a0 + 324<i32>:word32] = a5_129
	s2_120 = 0x10<32>
	s3 = a0 + 363<i32>
	word32 s4_122 = a0 + 352<i32>
	s5 = 1<32>
l2309621E:
	branch s1_204 != 0<32> l2309623A
l2309623A:
	branch s2_120 >=u s1_204 l23096242
l23096240:
l23096242:
	word32 a4_64 = s0_193 + 367<i32>
l23096246:
	word32 a5_69 = CONVERT(Mem66[a4_64:byte], byte, word32) + 1<32> & 255<i32>
	Mem70[a4_64:byte] = SLICE(a5_69, byte, 0)
	branch a5_69 != 0<32> l2309625C
l23096256:
	a4_64 = a4_64 + 0xFFFFFFFF<32>
	branch a4_64 != s3 l23096246
l2309625C:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg56 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg228 = <invalid>
	word32 stackArg256 = <invalid>
	word32 stackArg260 = <invalid>
	word32 stackArg296 = <invalid>
	word32 s0_115
	word32 s1_116
	word32 s8_124
	word32 a3_507
	ra = mbedtls_cipher_update(ra, s0_193, s4_122, 0x10<32>, fp + -64<i32>, fp + -68<i32>, a5, s3, s5, s7_118, stackArg56, stackArg120, stackArg152, stackArg184, stackArg228, stackArg256, stackArg260, stackArg296, out s0_115, out s1_116, out a0_125, out a1, out a3_507, out a5_129, out a7, out s2_120, out s3, out s4_122, out s5, out s6_117, out s7_118, out s8_124)
	branch a0_125 != 0<32> l23096222
l2309626C:
	word32 a5_134 = s0_115 + 368<i32>
	word32 a4_135 = 0<32>
l23096274:
	word32 a1_142 = s6_117 + a4_135
	branch Mem138[s0_115 + 384<i32>:int32] != 0<32> l2309628C
l2309627E:
	Mem147[a5_134:byte] = SLICE(CONVERT(Mem138[a1_142:byte], byte, word32) ^ CONVERT(Mem138[a5_134:byte], byte, word32), byte, 0)
l2309628C:
	word32 a3_157 = CONVERT(Mem154[fp + -64<i32> + a4_135:byte], byte, word32) ^ CONVERT(Mem154[a1_142:byte], byte, word32)
	Mem161[s7_118 + a4_135:byte] = SLICE(a3_157, byte, 0)
	branch Mem161[s0_115 + 384<i32>:int32] != s5 l230962B4
l230962AA:
	Mem169[a5_134:byte] = SLICE(a3_157 ^ CONVERT(Mem161[a5_134:byte], byte, word32), byte, 0)
l230962B4:
	a4_135 = a4_135 + 1<32>
	a5_134 = a5_134 + 1<32>
	branch s8_124 != a4_135 l23096274
l230962BC:
	word32 s1_194
	s0_193 = gcm_mult(s1_116, s0_115, s0_115 + 368<i32>, s0_115 + 368<i32>, a5_134, out s1_194, out a1, out a5_129, out a7, out s2_120)
	s1_204 = s1_194 - s8_124
	s6_117 = s6_117 + s8_124
	s7_118 = s7_118 + s8_124
l23096220:
	a0_125 = 0<32>
l23096222:
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a0_125
	a1Out = a1
	a3Out = s2
	a5Out = a5_129
	a7Out = a7
	s2Out = s2_120
	s3Out = s3
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6_117
	s7Out = s7_118
	s8Out = dwArg0148
	return dwLoc08
mbedtls_gcm_update_exit:


word32 mbedtls_gcm_finish(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_gcm_crypt_and_tag
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
mbedtls_gcm_finish_entry:
l230962D2:
	word32 a0_159
	word32 s5_100 = Mem23[a0 + 320<i32>:int32]
	word32 s7_27 = Mem23[a0 + 328<i32>:int32]
	word32 s1_136 = Mem23[a0 + 324<i32>:int32] << 3<i32> | s5_100 >>u 0x1D<u32>
	word32 s2_137 = s7_27 >>u 0x1D<u32> | Mem23[a0 + 332<i32>:int32] << 3<i32>
	word32 a5_156 = 0xC<32>
	branch a2 >u 0xFFFFFFF0<32> l23096424
l23096424:
	a0_159 = 0xFFFFFFEC<32>
l23096314:
	word32 a1_321
	word32 a2_322
	word32 a3_323
	word32 a4_324
	word32 a6_326
	word32 a5_325
	word32 a7_327
	memcpy(a1, a0 + 336<i32>, a2, out a1_321, out a2_322, out a3_323, out a4_324, out a5_325, out a6_326, out a7_327)
	s6 = a2
	s3 = s5_100 << 3<u32>
	a5_156 = s5_100 << 3<u32> | s7_27 << 3<u32> | (s1_136 | s2_137)
	branch a5_156 != 0<32> l23096352
l23096352:
	word32 t1_328
	word32 a0_329
	word32 a1_330
	word32 a2_331
	word32 a3_332
	word32 a4_333
	word32 a5_334
	ra = memset(ra, fp + -64<i32>, 0<32>, 0x10<32>, out t1_328, out a0_329, out a1_330, out a2_331, out a3_332, out a4_333, out a5_334)
	s5_100 = s5_100 << 11<i32>
	s3 = s5_100 << 11<i32> | (s5_100 << 0x13<32>) >>u 0x18<u32>
	word32 a5_110 = fp + -64<i32>
	word32 a4_112 = a0 + 368<i32>
l230963E8:
	a4_112 = a4_112 + 1<32>
	Mem121[a4_112 + 4095<i32>:byte] = SLICE(CONVERT(Mem114[a4_112:byte], byte, word32) ^ CONVERT(Mem114[a5_110:byte], byte, word32), byte, 0)
	a5_110 = a5_110 + 1<32>
	branch a4_112 != a0 + 384<i32> l230963E8
l230963FE:
	word32 a1_335
	word32 a5_336
	word32 a7_337
	word32 s0_135 = gcm_mult(a0 + 368<i32>, a0, a0 + 368<i32>, a0 + 368<i32>, a5_110, out s1_136, out a1_335, out a5_336, out a7_337, out s2_137)
	word32 a1_146 = s0_135
	s6 = a2 + s0_135
l2309640C:
	a1_146 = a1_146 + 1<32>
	a5_156 = CONVERT(Mem150[a1_146:byte], byte, word32) ^ CONVERT(Mem150[s1_136:byte], byte, word32)
	Mem157[a1_146 + 4095<i32>:byte] = SLICE(a5_156, byte, 0)
	s1_136 = s1_136 + 1<32>
	branch s6 != a1_146 l2309640C
l23096422:
l23096338:
	a0_159 = 0<32>
l2309633A:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_136
	a0Out = a0_159
	a5Out = a5_156
	s2Out = s2_137
	s3Out = s3
	s4Out = dwArgF4
	s5Out = s5_100
	s6Out = s6
	return ra
mbedtls_gcm_finish_exit:


word32 mbedtls_gcm_crypt_and_tag(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a6, word32 s5, word32 dwArg38, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArg0128, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_auth_encrypt
//      mbedtls_gcm_auth_decrypt
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a6:[0..31] ra:[0..31] s5:[0..31] Stack +0038:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +0128:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_gcm_crypt_and_tag_entry:
l23096428:
	word32 a7_41
	word32 s0_43
	word32 a0_160
	word32 a5_169
	word32 s1_178
	word32 s2_180
	word32 s3_182
	word32 s4_184
	word32 s5_186
	word32 s6_188
	word32 ra_175 = mbedtls_gcm_starts(ra, a0, a1, a3, a4, a6, s5, dwLoc08, dwArg38, ra, dwArg80, dwArg84, dwArgA8, out s0_43, out s1_178, out a0_160, out a5_169, out a7_41, out s2_180, out s3_182, out s4_184, out s5_186, out s6_188)
	branch a0_160 != 0<32> l23096478
l23096450:
	word32 s0_74
	word32 a1_216
	word32 a3_217
	word32 a7_218
	word32 s7_219
	word32 s8_220
	ra_175 = mbedtls_gcm_update(s0_43, s3_182, a7_41, s4_184, out s0_74, out s1_178, out a0_160, out a1_216, out a3_217, out a5_169, out a7_218, out s2_180, out s3_182, out s4_184, out s5_186, out s6_188, out s7_219, out s8_220)
	branch a0_160 != 0<32> l23096478
l23096478:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_178
	a0Out = a0_160
	a5Out = a5_169
	s2Out = s2_180
	s3Out = s3_182
	s4Out = s4_184
	s5Out = s5_186
	s6Out = s6_188
	return ra_175
l23096460:
	0<32> = dwArg0128
l23096474_thunk_mbedtls_gcm_finish:
	word32 a0_109
	word32 a5_112
	word32 s0_114
	word32 s1_115
	word32 s2_116
	word32 s4_117
	word32 s5_118
	word32 s3_126
	word32 s6_127
	word32 ra_125 = mbedtls_gcm_finish(ra_175, s0_74, s1_178, s2_180, dwArg0198, out s0_114, out s1_115, out a0_109, out a5_112, out s2_116, out s3_126, out s4_117, out s5_118, out s6_127)
	s0Out = s0_114
	s1Out = s1_115
	a0Out = a0_109
	a5Out = a5_112
	s2Out = s2_116
	s3Out = s3_126
	s4Out = s4_117
	s5Out = s5_118
	s6Out = s6_127
	return ra_125
mbedtls_gcm_crypt_and_tag_exit:


word32 mbedtls_gcm_auth_decrypt(word32 a0, word32 a2, word32 a3, word32 a5, word32 a7, word32 s5, word32 dwArg44, word32 dwArg68, word32 dwArgE8, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_cipher_auth_decrypt
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] s5:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +00E8:[0..31] Stack +0158:[0..31]
// LiveOut: a0 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_gcm_auth_decrypt_entry:
l23096488:
	word32 s2_50
	word32 s3_51
	word32 s4_52
	word32 s5_197
	word32 s6_198
	word32 a5_196
	word32 s0_48
	word32 a0_138
	word32 s1_156
	word32 ra_47 = mbedtls_gcm_crypt_and_tag(dwLoc18, a0, 0<32>, a2, a3, a5, s5, dwLoc08, a7, dwArg44, dwArg68, dwArgE8, dwArg0158, out s0_48, out s1_156, out a0_138, out a5_196, out s2_50, out s3_51, out s4_52, out s5_197, out s6_198)
	word32 a5_65 = 0<32>
	branch a0_138 == 0<32> l230964E4
l230964E4:
	branch a5_65 != s2_50 l230964CE
l230964CE:
	a5_65 = a5_65 + 1<32>
	a0_138 = a0_138 | CONVERT(Mem36[s4_52 + a5_65:byte], byte, word32) ^ CONVERT(Mem36[s3_51 + a5_65:byte], byte, word32)
l230964E8:
	s1_156 = s1_156 + s0_48
	branch a0_138 == 0<32> l230964BE
l230964EC:
	branch s0_48 != s1_156 l230964F4
l230964F4:
	Mem84[s0_48:byte] = 0<8>
	s0_48 = s0_48 + 1<32>
l230964F0:
	a0_138 = 0xFFFFFFEE<32>
l230964BE:
	s0Out = dwArg0158
	s1Out = s1_156
	a0Out = a0_138
	s2Out = s2_50
	s3Out = s3_51
	return ra_47
mbedtls_gcm_auth_decrypt_exit:


word32 mbedtls_gcm_free(word32 ra, word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gcm_ctx_free
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a5
// Trashed: a0 a2 a5
// Preserved: s0 sp
mbedtls_gcm_free_entry:
l230964FC:
	word32 a5_30
	mbedtls_cipher_free(ra, a0, a5, out a5_30)
	word32 s0_15 = a0
l2309650C:
	branch s0_15 != a0 + 392<i32> l23096518
l23096518:
	Mem17[s0_15:byte] = 0<8>
	s0_15 = s0_15 + 1<32>
l23096510:
	return a0 + 392<i32>
mbedtls_gcm_free_exit:


word32 mbedtls_md_info_from_type(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_sign
//      mbedtls_pk_verify_ext
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      mbedtls_rsa_pkcs1_verify
//      tls_prf_sha256
//      mbedtls_ssl_derive_keys
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_md_info_from_type_entry:
l23096520:
	word32 a0_5 = a0 + 0xFFFFFFFD<32> & 255<i32>
	branch a0_5 >u 3<32> l2309653C
l2309653C:
	a5Out = 3<32>
	return 0<32>
l2309652C:
	word32 a0_13 = Mem0[(a0_5 << 2<i32>) + 0x230C8C00<32>:word32]
	a5Out = 0x230C8C00<32>
	return a0_13
mbedtls_md_info_from_type_exit:


word32 mbedtls_md_init(word32 ra, word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      tls_prf_sha256
//      mbedtls_ssl_setup
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_md_init_entry:
l23096540:
l23096544_thunk_memset:
	word32 a3_10
	word32 a4_11
	word32 a5_12
	word32 t1_19
	word32 a0_20
	word32 a1_21
	word32 a2_22
	word32 ra_13 = memset(ra, a0, 0<32>, 0xC<32>, out t1_19, out a0_20, out a1_21, out a2_22, out a3_10, out a4_11, out a5_12)
	a3Out = a3_10
	a4Out = a4_11
	a5Out = a5_12
	return ra_13
mbedtls_md_init_exit:


word32 mbedtls_md_free(word32 ra, word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      tls_prf_sha256
//      mbedtls_ssl_transform_free
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a2 a5
// Trashed: a0 a2 a5
// Preserved: a1 a3 a4 a6 ra s0 s1 s4 sp t3 tp
mbedtls_md_free_entry:
l23096548:
	branch a0 == 0<32> l23096594
l23096594:
	a5Out = a5
	return a2
l2309654A:
	word32 sp_14 = fp + 0xFFFFFFF0<32>
	word32 a0_10 = Mem8[a5:word32]
	branch a5 == 0<32> l2309657C
l23096556:
	word32 a0_12 = Mem8[a0_10 + 4<i32>:word32]
	branch a0_12 == 0<32> l2309655E
l2309655A:
	word32 a5_13 = Mem8[a5 + 36<i32>:word32]
	word32 t3_82
	word32 s4_81
	word32 a1_79
	word32 a6_80
	word32 tp_78
	word32 s1_77
	word32 a3_76
	call a5_13 (retsize: 0;)
		uses: a0:a0_12,a1:a1_79,a2:a2_20,a3:a3_76,a4:a4_19,a5:a5_13,a6:a6_80,mstatus:mstatus,ra:ra,s0:a0_10,s1:s1_77,s4:s4_81,t3:t3_82,tp:tp_78
		defs: a0:a0_15,a1:a1_79,a2:a2_20,a3:a3_76,a4:a4_19,a5:a5_18,a6:a6_80,s1:s1_77,s4:s4_81,sp:sp_14,t3:t3_82,tp:tp_78
l2309655E:
	word32 s0_23 = Mem8[a5 + 8<i32>:word32]
	branch a5 == 0<32> l23096574
l23096562:
	word32 a4_29 = (Mem8[a4 + 12<i32>:word32] << 1<i32>) + a5
l2309656A:
	branch a5 != a4_29 l23096584
l23096584:
	Mem32[a5:byte] = 0<8>
	a5 = a5 + 1<32>
l2309656E:
	word32 t3_169
	word32 s1_160
	word32 a0_161
	word32 a2_163
	word32 a1_162
	word32 s4_168
	word32 a6_167
	word32 a5_166
	word32 a4_165
	word32 a3_164
	vPortFree(a0_12, a2, a5, mstatus, Mem36[sp_14 + 344<i32>:word32], Mem36[sp_14 + 408<i32>:word32], out s0_23, out s1_160, out a0_161, out a1_162, out a2_163, out a3_164, out a4_165, out a5_166, out a6_167, out s4_168, out t3_169)
l23096574:
	a5 = s0_23 + 12<i32>
l23096578:
	branch s0_23 != a5 l2309658C
l2309658C:
	Mem62[s0_23:byte] = 0<8>
	s0_23 = s0_23 + 1<32>
l2309657C:
	a5Out = a5
	return dwArg10
mbedtls_md_free_exit:


word32 mbedtls_md_setup(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      tls_prf_sha256
//      mbedtls_ssl_derive_keys
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
mbedtls_md_setup_entry:
l23096596:
	branch a1 == 0<32> l230965E0
l23096598:
	branch a0 == 0<32> l230965E0
l230965E0:
	s1Out = s1
	a0Out = 0xFAFFFF00<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	mstatusOut = mstatus
	return ra
l2309659A:
	word32 a0_105
	word32 a1_17 = Mem15[a5 + 32<i32>:word32]
	word32 a1_23
	word32 a0_24
	word32 tp_31
	word32 a6_97
	word32 t0_101
	word32 t1_102
	word32 t3_103
	word32 s0_25
	word32 a5_125
	word32 ra_141
	word32 s1_148
	word32 s2_152
	word32 s3_158
	word32 s4_164
	word32 s8_100
	call a5 (retsize: 0;)
		uses: a0:a0,a1:a1_17,a2:a2,a3:a3,a4:a4,a5:a5,a6:a6_97,mstatus:mstatus,ra:ra,s0:a0,s1:a1_17,s2:a2,s3:s3_98,s4:s4_99,s8:s8_100,Stack +0000:s2,Stack +0004:s0,Stack +0080:s1,Stack +0084:ra,t0:t0_101,t1:t1_102,t3:t3_103,tp:tp_31
		defs: a0:a0_24,a1:a1_23,a3:a3_96,a4:a4_95,a5:a5_29,a6:a6_97,mstatus:mstatus_94,ra:ra_28,s0:s0_25,s1:s1_26,s2:s2_27,s3:s3_98,s4:s4_99,s8:s8_100,t0:t0_101,t1:t1_102,t3:t3_103,tp:tp_31
	Mem32[a0_24 + 4<i32>:word32] = s0_25
	branch a0_24 == 0<32> l230965C8
l230965B2:
	branch s2_152 == 0<32> l230965D0
l230965B6:
	word32 a1_38
	word32 a2_225
	ra_141 = mycalloc(ra_141, Mem32[a1_23 + 12<i32>:word32], 2<32>, a1_23, a3, a4, a5_125, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_25, out s1_148, out a1_38, out a2_225, out a3, out a4, out a5_125, out s2_152, out s3_158, out s4_164, out s8_100)
	Mem55[0xA<32>:word32] = s0_25
	branch true l230965D0
l230965D0:
	Mem58[s1_148:word32] = s0_25
	a0_105 = 0<32>
l230965C2:
	call a5_125 (retsize: 0;)
		uses: a0:2<32>,a1:a1_38,a3:a3_40,a4:a4_41,a5:a5_42,mstatus:mstatus,ra:ra_44,s1:Mem55[a5_42 + 36<i32>:word32],Stack +0020:dwArg10,Stack +0024:dwArg14,Stack +0118:dwArg0108,Stack +0158:dwArg0148
		defs: a3:a3_64,a4:a4_65,a5:a5_66,ra:ra_68,s1:s1_70,s2:s2_71,s3:s3_72,s4:s4_73,s8:s8_74
l230965C8:
	a0_105 = 0xFAFFFE80<32>
l230965D4:
	0<32> = dwArg38
	s1Out = s1_148
	a0Out = a0_105
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_125
	s2Out = s2_152
	s3Out = s3_158
	s4Out = s4_164
	s8Out = s8_100
	mstatusOut = mstatus
	return ra_141
mbedtls_md_setup_exit:


word32 mbedtls_md_starts(word32 ra, word32 a0, word32 a5, word32 dwArg10, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mgf_mask
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut: a5 ra
// Trashed: a0 a2 a5 ra
// Preserved: sp
mbedtls_md_starts_entry:
l230965E8:
	branch a0 == 0<32> l23096600
l230965EA:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23096600
l23096600:
	a5Out = a5
	return ra
l230965EE:
	word32 a5_13 = Mem11[a5 + 16<i32>:word32]
	word32 a5_16
	word32 ra_17
	call a5_13 (retsize: 0;)
		uses: a0:Mem11[a0_6 + 4<i32>:word32],a2:dwArg10,a5:a5_13,ra:ra,Stack +0084:ra
		defs: a5:a5_16,ra:ra_17
	a5Out = a5_16
	return ra_17
mbedtls_md_starts_exit:


word32 mbedtls_md_update(word32 ra, word32 a0, word32 a5, word32 dwArg10, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mgf_mask
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut: a5 ra
// Trashed: a0 a2 a5 ra
// Preserved: sp
mbedtls_md_update_entry:
l23096608:
	branch a0 == 0<32> l23096620
l2309660A:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23096620
l23096620:
	a5Out = a5
	return ra
l2309660E:
	word32 a5_13 = Mem11[a5 + 20<i32>:word32]
	word32 a5_16
	word32 ra_17
	call a5_13 (retsize: 0;)
		uses: a0:Mem11[a0_6 + 4<i32>:word32],a2:dwArg10,a5:a5_13,ra:ra,Stack +0084:ra
		defs: a5:a5_16,ra:ra_17
	a5Out = a5_16
	return ra_17
mbedtls_md_update_exit:


word32 mbedtls_md_finish(word32 ra, word32 a0, word32 a5, word32 dwArg10, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mgf_mask
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut: a2 a5 ra
// Trashed: a0 a2 a5 ra
// Preserved: sp
mbedtls_md_finish_entry:
l23096628:
	branch a0 == 0<32> l23096640
l2309662A:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23096640
l23096640:
	a2Out = a2
	a5Out = a5
	return ra
l2309662E:
	word32 a5_13 = Mem11[a5 + 24<i32>:word32]
	word32 a5_16
	word32 ra_17
	call a5_13 (retsize: 0;)
		uses: a0:Mem11[a0_6 + 4<i32>:word32],a2:dwArg10,a5:a5_13,ra:ra,Stack +0084:ra
		defs: a5:a5_16,ra:ra_17
	a2Out = dwArg10
	a5Out = a5_16
	return ra_17
mbedtls_md_finish_exit:


word32 mbedtls_md(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a1 a5 ra
// Trashed: a0 a1 a2 a3 a5 ra
// Preserved: sp
mbedtls_md_entry:
l23096648:
	branch a0 == 0<32> l23096662
l23096662:
	a1Out = a1
	a5Out = a0
	return ra
l2309664C:
	word32 a5_19
	word32 ra_20
	word32 a1_21
	call Mem9[a0 + 28<i32>:word32] (retsize: 0;)
		uses: a0:a1,a1:a2,a2:a3,a3:a3,ra:ra,Stack +0084:ra
		defs: a1:a1_21,a5:a5_19,ra:ra_20
	a1Out = a1_21
	a5Out = a5_19
	return ra_20
mbedtls_md_exit:


word32 mbedtls_md_hmac_starts(word32 ra, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 s2, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tls_prf_sha256
//      mbedtls_ssl_derive_keys
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s2:[0..31] s4:[0..31]
// LiveOut: a2 a4 a5 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3
// Preserved: sp
mbedtls_md_hmac_starts_entry:
l2309666A:
	branch a0 == 0<32> l2309673C
l2309673C:
	s0Out = s0
	s1Out = s1
	a2Out = a2
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return ra
l2309666C:
	word32 sp_145 = fp + -64<i32>
	word32 a0_20 = Mem18[a5:word32]
	branch a5 == 0<32> l23096744
l23096680:
	word32 a0_23 = Mem18[a4 + 8<i32>:word32]
	branch a4 == 0<32> l23096744
l23096744:
l23096684:
	word32 a5_26 = Mem18[a4 + 12<i32>:word32]
	word32 s1_221 = a1
	word32 s3_220 = a2
	branch a4 >=u a2 l230966B2
l2309668E:
	word32 a5_31 = Mem18[a5_26 + 16<i32>:word32]
	word32 sp_33
	word32 a0_34
	word32 ra_36
	word32 s1_37
	word32 s2_38
	word32 s3_39
	word32 s4_40
	word32 a5_41
	word32 a4_42
	call a5_31 (retsize: 0;)
		uses: a0:Mem18[a0_23 + 4<i32>:word32],a1:a1,a2:a2,a3:a3_90,a4:a4,a5:a5_31,a6:a6_89,ra:ra,s0:a0_20,s1:a1,s2:s2,s3:a2,s4:s4,s8:s8_88,t0:t0_232,t1:t1_233,t3:t3_87
		defs: a0:a0_34,a4:a4_42,a5:a5_41,ra:ra_36,s1:s1_37,s2:s2_38,s3:s3_39,s4:s4_40,sp:sp_33
	word32 a5_52 = Mem18[a5_41 + 20<i32>:word32]
	word32 sp_55
	word32 a0_56
	word32 ra_58
	word32 s1_59
	word32 s2_60
	word32 s3_61
	word32 s4_62
	word32 a5_63
	word32 a4_64
	word32 a2_66
	call a5_52 (retsize: 0;)
		uses: a0:a0_34,a1:s1_37,a2:s3_39,a3:a3_90,a4:a4_42,a5:a5_52,a6:a6_89,ra:ra_36,s0:Mem18[a0_34 + 4<i32>:word32],s1:sp_33,s2:s2_38,s3:s3_39,s4:s4_40,s8:s8_88,t0:t0_232,t1:t1_233,t3:t3_87
		defs: a0:a0_56,a2:a2_66,a4:a4_64,a5:a5_63,ra:ra_58,s1:s1_59,s2:s2_60,s3:s3_61,s4:s4_62,sp:sp_55
	word32 a5_74 = Mem18[a5_63 + 24<i32>:word32]
	word32 t3_87
	word32 s8_88
	word32 a6_89
	word32 a3_90
	word32 t1_233
	word32 t0_232
	call a5_74 (retsize: 0;)
		uses: a0:a0_56,a1:sp_55,a2:a2_66,a3:a3_90,a4:a4_64,a5:a5_74,a6:a6_89,ra:ra_58,s0:Mem18[a0_56 + 4<i32>:word32],s1:s1_59,s2:s2_60,s3:s3_61,s4:s4_62,s8:s8_88,t0:t0_232,t1:t1_233,t3:t3_87
		defs: a2:a2_86,a3:a3_90,a5:a5_83,a6:a6_89,ra:ra_78,s1:s1_79,s8:s8_88,sp:sp_75,t0:t0_232,t1:t1_233,t3:t3_87
	s3_220 = Mem18[a5_26 + 8<i32>:int32]
l230966B2:
	word32 s2_96 = Mem18[Mem18[a5_26:word32] + 8<i32>:int32]
	word32 s4_101 = s2_96 + a2
	word32 a2_105
	word32 a0_116
	word32 t1_330
	word32 a4_332
	word32 a5_333
	word32 a3_331
	word32 a0_325
	word32 a3_327
	word32 a4_328
	word32 a5_329
	word32 a1_326
	word32 t1_324
	word32 a1_117
	word32 a2_118
	word32 ra_122 = memset(memset(ra, s2_96, 54<i32>, a2, out t1_324, out a0_325, out a1_326, out a2_105, out a3_327, out a4_328, out a5_329), s4_101, 92<i32>, a2_105, out t1_330, out a0_116, out a1_117, out a2_118, out a3_331, out a4_332, out a5_333)
	word32 a5_125 = 0<32>
l230966D8:
	branch s3_220 != a5_125 l23096710
l23096710:
	word32 a2_131 = s1_221 + a5_125
	word32 a3_129 = s2_96 + a5_125
	a1_117 = CONVERT(Mem132[a2_131:byte], byte, word32)
	Mem136[a3_129:byte] = SLICE(CONVERT(Mem132[a3_129:byte], byte, word32) ^ a1_117, byte, 0)
	word32 a3_138 = s4_101 + a5_125
	a2_118 = CONVERT(Mem136[a2_131:byte], byte, word32)
	Mem143[a3_138:byte] = SLICE(CONVERT(Mem136[a3_138:byte], byte, word32) ^ a2_118, byte, 0)
	a5_125 = a5_125 + 1<32>
l230966DC:
	word32 a5_146 = sp_145
l230966DE:
	Mem148[a5_146:byte] = 0<8>
	word32 a4_150 = sp_145 + 32<i32>
	a5_146 = a5_146 + 1<32>
	branch a5_146 != a4_150 l230966DE
l230966EA:
	word32 a5_156 = Mem148[a5_146 + 16<i32>:word32]
	word32 a0_168
	word32 ra_170
	word32 s1_171
	word32 s2_172
	word32 s3_173
	word32 s4_174
	word32 a4_176
	word32 a2_178
	call a5_156 (retsize: 0;)
		uses: a0:a0_116,a1:a1_164,a2:a2_166,a3:a3_205,a4:a4_150,a5:a5_156,a6:a6_204,ra:ra_122,s0:Mem148[a0_116 + 4<i32>:word32],s1:s1_221,s2:s2_96,s3:s3_220,s4:s4_101,s8:s8_203,t0:t0_206,t1:t1_207,t3:t3_202
		defs: a0:a0_168,a2:a2_178,a4:a4_176,ra:ra_170,s1:s1_171,s2:s2_172,s3:s3_173,s4:s4_174
	word32 t3_202
	word32 s8_203
	word32 a6_204
	word32 a3_205
	word32 t0_206
	word32 t1_207
	call a4_176 (retsize: 0;)
		uses: a0:a0_168,a1:s2_172,a2:a2_178,a3:a3_205,a4:a4_176,a5:Mem148[a2_178 + 12<i32>:word32],a6:a6_204,ra:ra_170,s0:Mem148[a0_168 + 4<i32>:word32],s1:s1_171,s2:s2_172,s3:s3_173,s4:s4_174,s8:s8_203,t0:t0_206,t1:t1_207,t3:t3_202
		defs: a3:a3_205,a4:a4_199,a5:a5_198,a6:a6_204,ra:ra_193,s1:s1_194,s2:s2_195,s3:s3_196,s8:s8_203,t0:t0_206,t1:t1_207,t3:t3_202
l23096700:
	s0Out = dwArg0158
	s1Out = s1
	a2Out = dwArg0138
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArgF4
	s8Out = dwArgD4
	return ra
mbedtls_md_hmac_starts_exit:


word32 mbedtls_md_hmac_update(word32 ra, word32 a0, word32 a4, word32 a5, word32 dwArg10, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tls_prf_sha256
//      mbedtls_ssl_write_record
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut: a0 a4 a5 ra
// Trashed: a0 a2 a4 a5 ra
// Preserved: sp
mbedtls_md_hmac_update_entry:
l2309674C:
	branch a0 == 0<32> l23096768
l2309674E:
	branch a5 == 0<32> l23096768
l23096752:
	word32 a0_8 = Mem0[a4 + 8<i32>:word32]
	branch a4 == 0<32> l23096768
l23096768:
	a0Out = 0xFAFFFF00<32>
	a4Out = a4
	a5Out = a5
	return ra
l23096756:
	word32 a5_15 = Mem13[a5 + 20<i32>:word32]
	word32 a5_18
	word32 a4_19
	word32 ra_20
	call a5_15 (retsize: 0;)
		uses: a0:Mem13[a0_8 + 4<i32>:word32],a2:dwArg10,a4:a4,a5:a5_15,ra:ra,Stack +0084:ra
		defs: a4:a4_19,a5:a5_18,ra:ra_20
	a0Out = 0<32>
	a4Out = a4_19
	a5Out = a5_18
	return ra_20
mbedtls_md_hmac_update_exit:


word32 mbedtls_md_hmac_finish(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a4, word32 a5, word32 s2, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tls_prf_sha256
//      mbedtls_ssl_write_record
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a4 a5 ra s1 s2
// Trashed: a0 a1 a2 a4 a5 ra s0 s1 s2 tp
// Preserved: sp
mbedtls_md_hmac_finish_entry:
l23096770:
	branch a0 == 0<32> l230967CC
l23096772:
	branch a4 == 0<32> l230967CC
l23096776:
	word32 a0_8 = Mem0[a5 + 8<i32>:word32]
	branch a5 == 0<32> l230967CC
l230967CC:
	s1Out = s1
	a0Out = 0xFAFFFF00<32>
	a1Out = a1
	a2Out = a2
	a4Out = a4
	a5Out = a5
	s2Out = s2
	return ra
l2309677A:
	word32 a0_29
	word32 a4_30
	word32 a5_31
	word32 ra_32
	word32 s2_34
	word32 s1_35
	word32 a1_36
	call a5 (retsize: 0;)
		uses: a0:Mem19[a0_8 + 4<i32>:word32],a1:fp + -48<i32>,a2:dwArg0100,a4:Mem19[a5 + 24<i32>:word32],a5:a5,ra:ra,s0:a0_8,s1:s1 + a5,s2:a1,Stack +0010:s2,Stack +0014:s0,Stack +0090:s1,Stack +0094:ra,tp:dwArg0104
		defs: a0:a0_29,a1:a1_36,a4:a4_30,a5:a5_31,ra:ra_32,s1:s1_35,s2:s2_34
	word32 a5_41 = Mem19[a5_31 + 16<i32>:word32]
	word32 a0_43
	word32 a4_44
	word32 ra_46
	word32 s2_48
	word32 s1_49
	word32 a2_51
	call a5_41 (retsize: 0;)
		uses: a0:a0_29,a1:a1_36,a2:dwArg0100,a4:a4_30,a5:a5_41,ra:ra_32,s0:Mem19[a0_29 + 4<i32>:word32],s1:s1_35,s2:s2_34,tp:dwArg0104
		defs: a0:a0_43,a2:a2_51,a4:a4_44,ra:ra_46,s1:s1_49,s2:s2_48
	word32 sp_58
	word32 a0_59
	word32 a4_60
	word32 ra_62
	word32 s2_64
	word32 s1_65
	word32 a2_67
	call a4_44 (retsize: 0;)
		uses: a0:a0_43,a1:s1_49,a2:dwArg0100,a4:a4_44,a5:Mem19[a2_51 + 12<i32>:word32],ra:ra_46,s0:Mem19[a0_43 + 4<i32>:word32],s1:s1_49,s2:s2_48,tp:dwArg0104
		defs: a0:a0_59,a2:a2_67,a4:a4_60,ra:ra_62,s1:s1_65,s2:s2_64,sp:sp_58
	word32 a0_75
	word32 a4_76
	word32 a5_77
	word32 ra_78
	word32 s2_80
	word32 s1_81
	call a4_60 (retsize: 0;)
		uses: a0:a0_59,a1:sp_58,a2:dwArg0100,a4:a4_60,a5:Mem19[a2_67 + 8<i32>:word32],ra:ra_62,s0:Mem19[a0_59 + 4<i32>:word32],s1:s1_65,s2:s2_64,tp:dwArg0104
		defs: a0:a0_75,a4:a4_76,a5:a5_77,ra:ra_78,s1:s1_81,s2:s2_80
	word32 a5_88 = Mem19[a5_77 + 24<i32>:word32]
	word32 a4_91
	word32 a5_92
	word32 ra_93
	word32 s2_95
	word32 s1_96
	word32 a1_97
	call a5_88 (retsize: 0;)
		uses: a0:a0_75,a1:s2_80,a2:dwArg0100,a4:a4_76,a5:a5_88,ra:ra_78,s0:Mem19[a0_75 + 4<i32>:word32],s1:s1_81,s2:s2_80,tp:dwArg0104
		defs: a1:a1_97,a4:a4_91,a5:a5_92,ra:ra_93,s1:s1_96,s2:s2_95
	0<32> = dwArg0128
	s1Out = s1_96
	a0Out = 0<32>
	a1Out = a1_97
	a2Out = dwArg0100
	a4Out = a4_91
	a5Out = a5_92
	s2Out = s2_95
	return ra_93
mbedtls_md_hmac_finish_exit:


word32 mbedtls_md_hmac_reset(word32 ra, word32 a0, word32 a1, word32 a5, ptr32 & s0Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tls_prf_sha256
//      mbedtls_ssl_write_record
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a4 a5 ra s0
// Trashed: a0 a1 a2 a4 a5 ra s0 s8 t3
// Preserved: sp
mbedtls_md_hmac_reset_entry:
l230967D4:
	branch a0 == 0<32> l23096804
l230967D6:
	branch a5 == 0<32> l23096804
l23096804:
	s0Out = s0
	a4Out = a4
	a5Out = a5
	return ra
l230967DA:
	word32 a0_15 = Mem13[a1 + 8<i32>:word32]
	branch a1 == 0<32> l2309680C
l2309680C:
l230967E6:
	word32 a5_20 = Mem16[a5 + 16<i32>:word32]
	word32 sp_22
	word32 a0_23
	word32 ra_25
	word32 a1_27
	word32 a4_29
	call a5_20 (retsize: 0;)
		uses: a0:Mem16[a0_15 + 4<i32>:word32],a1:a1,a2:a2_43,a4:a4_44,a5:a5_20,ra:ra,s0:a0_15,s8:s8_46,t3:t3_45
		defs: a0:a0_23,a1:a1_27,a4:a4_29,ra:ra_25,sp:sp_22
	word32 a2_34 = Mem16[sp_22 + 100<i32>:word32]
	word32 a2_43
	word32 t3_45
	word32 s8_46
	call a4_29 (retsize: 0;)
		uses: a0:a0_23,a1:a1_27,a2:a2_34,a4:a4_44,a5:Mem16[a2_34 + 12<i32>:word32],ra:ra_25,s0:Mem16[a0_23 + 4<i32>:word32],s8:s8_46,t3:t3_45
		defs: a2:a2_43,a4:a4_44,a5:a5_39,ra:ra_40,s0:s0_41,s8:s8_46,t3:t3_45
l230967FC:
	s0Out = s0
	a4Out = a4
	a5Out = a5
	return ra
mbedtls_md_hmac_reset_exit:


word32 mbedtls_md_process(word32 ra, word32 a0, word32 a5, word32 dwArg10, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut: a0 a5 ra
// Trashed: a0 a2 a5 ra
// Preserved: sp
mbedtls_md_process_entry:
l23096814:
	branch a0 == 0<32> l2309682C
l23096816:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2309682C
l2309682C:
	a0Out = 0xFAFFFF00<32>
	a5Out = a5
	return ra
l2309681A:
	word32 a5_13 = Mem11[a5 + 44<i32>:word32]
	word32 a5_16
	word32 ra_17
	call a5_13 (retsize: 0;)
		uses: a0:Mem11[a0_6 + 4<i32>:word32],a2:dwArg10,a5:a5_13,ra:ra,Stack +0084:ra
		defs: a5:a5_16,ra:ra_17
	a0Out = 0<32>
	a5Out = a5_16
	return ra_17
mbedtls_md_process_exit:


word32 mbedtls_md_get_size(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_sign
//      mbedtls_pk_verify_ext
//      mgf_mask
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      mbedtls_rsa_pkcs1_verify
//      tls_prf_sha256
//      mbedtls_ssl_derive_keys
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
mbedtls_md_get_size_entry:
l23096834:
	branch a0 == 0<32> l2309683C
l2309683C:
	return 0<32>
l23096836:
	return CONVERT(Mem0[a0 + 8<i32>:byte], byte, word32)
mbedtls_md_get_size_exit:


void md5_process_wrap(word32 a0, word32 a1, word32 dwArg3C, word32 dwArgE4, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] Stack +003C:[0..31] Stack +00E4:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
md5_process_wrap_entry:
l23096840:
l23096840_thunk_mbedtls_md5_process:
	word32 s1_36
	word32 s2_37
	word32 s3_38
	word32 s4_39
	word32 s5_40
	word32 s6_41
	mbedtls_md5_process(a0, a1, dwArg3C, dwArgE4, dwArg0148, out s1_36, out s2_37, out s3_38, out s4_39, out s5_40, out s6_41)
	return
md5_process_wrap_exit:


void md5_clone_wrap(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
md5_clone_wrap_entry:
l23096844:
l23096844_thunk_mbedtls_md5_clone:
	mbedtls_md5_clone(a0, a1)
	return
md5_clone_wrap_exit:


void md5_ctx_free(word32 a0, word32 mstatus, word32 dwArg10, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
md5_ctx_free_entry:
l23096848:
	word32 a5_11 = mbedtls_md5_free(a0)
l2309685C_thunk_vPortFree:
	word32 s0_34
	word32 s1_35
	word32 a0_36
	word32 a1_37
	word32 a2_38
	word32 a3_39
	word32 a4_40
	word32 a5_41
	word32 a6_42
	word32 s4_43
	word32 t3_44
	vPortFree(a0, dwArg10, a5_11, mstatus, dwArg0158, dwArg0198, out s0_34, out s1_35, out a0_36, out a1_37, out a2_38, out a3_39, out a4_40, out a5_41, out a6_42, out s4_43, out t3_44)
	return
md5_ctx_free_exit:


void md5_ctx_alloc(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
md5_ctx_alloc_entry:
l23096860:
	word32 s2_79
	word32 a5_78
	word32 a4_77
	word32 a3_76
	word32 a2_75
	word32 a1_74
	word32 s1_73
	word32 s0_72
	word32 s3_80
	word32 s4_81
	word32 s8_82
	word32 ra_21 = mycalloc(ra, s1, 1<32>, 88<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_72, out s1_73, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out s2_79, out s3_80, out s4_81, out s8_82)
	branch false l23096878
l23096874:
	word32 a1_83
	mbedtls_md5_init(ra_21, 1<32>, out a1_83)
l23096878:
	return
md5_ctx_alloc_exit:


void md5_finish_wrap(word32 a2, word32 dwArg28, word32 dwArg88, word32 dwArgA4, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] Stack +00A4:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
md5_finish_wrap_entry:
l23096882:
l23096882_thunk_mbedtls_md5_finish:
	word32 s1_37
	word32 s2_38
	word32 s5_39
	word32 s6_40
	mbedtls_md5_finish(a2, dwArg28, dwArg88, dwArgA4, dwArg0108, out s1_37, out s2_38, out s5_39, out s6_40)
	return
md5_finish_wrap_exit:


void md5_update_wrap(word32 a1, word32 a2, word32 a5, word32 dwArg1C, word32 dwArg48, word32 dwArgA8, word32 dwArgC4, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] Stack +00C4:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
md5_update_wrap_entry:
l23096886:
l23096886_thunk_mbedtls_md5_update:
	word32 a5_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	mbedtls_md5_update(a1, a2, a5, dwArg1C, dwArg48, dwArgA8, dwArgC4, dwArg0128, out a5_40, out s2_41, out s3_42, out s4_43)
	return
md5_update_wrap_exit:


void md5_starts_wrap(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
md5_starts_wrap_entry:
l2309688A:
l2309688A_thunk_mbedtls_md5_starts:
	mbedtls_md5_starts(a0)
	return
md5_starts_wrap_exit:


void sha1_process_wrap(word32 a0, word32 a1, word32 dwArg3C, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] Stack +003C:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sha1_process_wrap_entry:
l2309688E:
l2309688E_thunk_mbedtls_sha1_process:
	word32 s1_36
	word32 s2_37
	word32 s3_38
	word32 s4_39
	word32 s5_40
	word32 s6_41
	mbedtls_sha1_process(a0, a1, dwArg3C, dwArg0148, out s1_36, out s2_37, out s3_38, out s4_39, out s5_40, out s6_41)
	return
sha1_process_wrap_exit:


void sha1_clone_wrap(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
sha1_clone_wrap_entry:
l23096892:
l23096892_thunk_mbedtls_sha1_clone:
	mbedtls_sha1_clone(a0, a1)
	return
sha1_clone_wrap_exit:


void sha1_ctx_free(word32 a0, word32 mstatus, word32 dwArg10, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
sha1_ctx_free_entry:
l23096896:
	word32 a5_11 = mbedtls_sha1_free(a0)
l230968AA_thunk_vPortFree:
	word32 s0_34
	word32 s1_35
	word32 a0_36
	word32 a1_37
	word32 a2_38
	word32 a3_39
	word32 a4_40
	word32 a5_41
	word32 a6_42
	word32 s4_43
	word32 t3_44
	vPortFree(a0, dwArg10, a5_11, mstatus, dwArg0158, dwArg0198, out s0_34, out s1_35, out a0_36, out a1_37, out a2_38, out a3_39, out a4_40, out a5_41, out a6_42, out s4_43, out t3_44)
	return
sha1_ctx_free_exit:


void sha1_ctx_alloc(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
sha1_ctx_alloc_entry:
l230968AE:
	word32 s2_79
	word32 a5_78
	word32 a4_77
	word32 a3_76
	word32 a2_75
	word32 a1_74
	word32 s1_73
	word32 s0_72
	word32 s3_80
	word32 s4_81
	word32 s8_82
	word32 ra_21 = mycalloc(ra, s1, 1<32>, 92<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_72, out s1_73, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out s2_79, out s3_80, out s4_81, out s8_82)
	branch false l230968C6
l230968C2:
	mbedtls_sha1_init(ra_21, 1<32>)
l230968C6:
	return
sha1_ctx_alloc_exit:


void sha1_finish_wrap(word32 a2, word32 dwArg28, word32 dwArg88, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sha1_finish_wrap_entry:
l230968D0:
l230968D0_thunk_mbedtls_sha1_finish:
	mbedtls_sha1_finish(a2, dwArg28, dwArg88, dwArg0108)
	return
sha1_finish_wrap_exit:


void sha1_update_wrap(word32 a1, word32 a2, word32 a5, word32 dwArg1C, word32 dwArg48, word32 dwArgA8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sha1_update_wrap_entry:
l230968D4:
l230968D4_thunk_mbedtls_sha1_update:
	word32 a5_39
	mbedtls_sha1_update(a1, a2, a5, dwArg1C, dwArg48, dwArgA8, dwArg0128, out a5_39)
	return
sha1_update_wrap_exit:


void sha1_starts_wrap(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
sha1_starts_wrap_entry:
l230968D8:
l230968D8_thunk_mbedtls_sha1_starts:
	mbedtls_sha1_starts(a0)
	return
sha1_starts_wrap_exit:


void sha224_process_wrap(word32 t1, word32 a0, word32 a1, word32 a3, word32 a7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a7:[0..31] t1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sha224_process_wrap_entry:
l230968DC:
l230968DC_thunk_mbedtls_sha256_process:
	word32 a3_24
	word32 a7_25
	mbedtls_sha256_process(t1, a0, a1, a3, a7, out a3_24, out a7_25)
	return
sha224_process_wrap_exit:


void sha224_clone_wrap(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
sha224_clone_wrap_entry:
l230968E0:
l230968E0_thunk_mbedtls_sha256_clone:
	word32 a2_18
	word32 a5_19
	word32 a7_20
	mbedtls_sha256_clone(a0, a1, out a2_18, out a5_19, out a7_20)
	return
sha224_clone_wrap_exit:


void sha224_ctx_free(word32 a0, word32 mstatus, word32 dwArg10, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
sha224_ctx_free_entry:
l230968E4:
	word32 a5_11
	mbedtls_sha256_free(a0, out a5_11)
l230968F8_thunk_vPortFree:
	word32 s0_34
	word32 s1_35
	word32 a0_36
	word32 a1_37
	word32 a2_38
	word32 a3_39
	word32 a4_40
	word32 a5_41
	word32 a6_42
	word32 s4_43
	word32 t3_44
	vPortFree(a0, dwArg10, a5_11, mstatus, dwArg0158, dwArg0198, out s0_34, out s1_35, out a0_36, out a1_37, out a2_38, out a3_39, out a4_40, out a5_41, out a6_42, out s4_43, out t3_44)
	return
sha224_ctx_free_exit:


void sha224_ctx_alloc(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
sha224_ctx_alloc_entry:
l230968FC:
	word32 s2_79
	word32 a5_78
	word32 a4_77
	word32 a3_76
	word32 a2_75
	word32 a1_74
	word32 s1_73
	word32 s0_72
	word32 s3_80
	word32 s4_81
	word32 s8_82
	word32 ra_21 = mycalloc(ra, s1, 1<32>, 116<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_72, out s1_73, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out s2_79, out s3_80, out s4_81, out s8_82)
	branch false l23096914
l23096910:
	word32 t1_83
	word32 a3_84
	word32 a4_85
	word32 a5_86
	mbedtls_sha256_init(ra_21, 1<32>, out t1_83, out a3_84, out a4_85, out a5_86)
l23096914:
	return
sha224_ctx_alloc_exit:


void sha224_wrap(word32 ra, word32 a0, word32 a1, word32 a7, word32 s2, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a7:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sha224_wrap_entry:
l2309691E:
l23096920_thunk_mbedtls_sha256:
	mbedtls_sha256(ra, a0, a1, a7, s2, dwArg08)
	return
sha224_wrap_exit:


void sha256_wrap(word32 ra, word32 a0, word32 a1, word32 a7, word32 s2, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a7:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sha256_wrap_entry:
l23096924:
l23096926_thunk_mbedtls_sha256:
	mbedtls_sha256(ra, a0, a1, a7, s2, dwArg08)
	return
sha256_wrap_exit:


void sha224_finish_wrap(word32 t1, word32 a2, word32 a5, word32 a7, word32 dwArg28, word32 dwArg88)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] a7:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] t1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sha224_finish_wrap_entry:
l2309692A:
l2309692A_thunk_mbedtls_sha256_finish:
	word32 s1_34
	word32 a5_35
	word32 s2_36
	word32 s3_37
	word32 s4_38
	word32 s5_39
	mbedtls_sha256_finish(t1, a2, a5, a7, dwArg28, dwArg88, out s1_34, out a5_35, out s2_36, out s3_37, out s4_38, out s5_39)
	return
sha224_finish_wrap_exit:


void sha224_update_wrap(word32 t1, word32 a1, word32 a2, word32 a3, word32 a5, word32 a7, word32 dwArg48, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] t1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
sha224_update_wrap_entry:
l2309692E:
l2309692E_thunk_mbedtls_sha256_update:
	word32 a2_36
	word32 a3_37
	word32 a5_38
	word32 a7_39
	mbedtls_sha256_update(t1, a1, a2, a3, a5, a7, dwArg48, dwArgA8, out a2_36, out a3_37, out a5_38, out a7_39)
	return
sha224_update_wrap_exit:


void sha224_starts_wrap(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a5
// Preserved: sp
sha224_starts_wrap_entry:
l23096932:
l23096934_thunk_mbedtls_sha256_starts:
	mbedtls_sha256_starts(a0, 1<32>)
	return
sha224_starts_wrap_exit:


void sha256_starts_wrap(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a5
// Preserved: sp
sha256_starts_wrap_entry:
l23096938:
l2309693A_thunk_mbedtls_sha256_starts:
	mbedtls_sha256_starts(a0, 0<32>)
	return
sha256_starts_wrap_exit:


word32 oid_sig_alg_from_asn1.part.0(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_oid_get_sig_alg_desc
//      mbedtls_oid_get_sig_alg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a1 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
oid_sig_alg_from_asn1.part.0_entry:
l2309693E:
	word32 s1_12 = a0
l23096950:
	word32 s0_20
	branch a0 != 0<32> l23096958
l23096958:
	s1_12 = Mem10[a5 + 4<i32>:word32]
	s0_20 = Mem10[a2 + 4<i32>:word32]
	branch a2 == a5 l23096964
l23096964:
	s1_12 = Mem10[a1 + 8<i32>:word32]
	word32 a3_80
	word32 a4_81
	a0 = memcmp(a0, a1, a2, out a1, out a2, out a3_80, out a4_81, out a5)
	branch a0 != 0<32> l23096960
l23096960:
l23096954:
	s0_20 = 0<32>
l2309696C:
	a0Out = s0_20
	a1Out = a1
	a5Out = a5
	return s1_12
oid_sig_alg_from_asn1.part.0_exit:


word32 mbedtls_oid_get_attr_short_name(word32 a0, word32 a1, word32 a2, word32 a5, word32 dwArg38, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_dn_gets
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut: a0 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
mbedtls_oid_get_attr_short_name_entry:
l23096978:
	branch a0 != 0<32> l230969AE
l230969AE:
	word32 s1_16 = a0
	a1_25 = a1
l2309698A:
	word32 a1_25
	branch a0 != 0<32> l23096980
l23096980:
	s1_16 = Mem13[a5 + 4<i32>:word32]
	branch a2 == a5 l2309699E
l2309699E:
	s1_16 = Mem13[a1_25 + 8<i32>:word32]
	word32 a3_103
	word32 a4_104
	a0 = memcmp(a0, a1_25, a2, out a1_25, out a2, out a3_103, out a4_104, out a5)
	branch a0 != 0<32> l23096988
l230969A6:
	Mem35[a1:word32] = a5
l23096988:
l2309698E:
	a0 = -46<i32>
l23096992:
	0<32> = dwArg38
	a0Out = a0
	return s1_16
l2309697A:
	a0Out = -46<i32>
	return s1
mbedtls_oid_get_attr_short_name_exit:


word32 mbedtls_oid_get_x509_ext_type(word32 a0, word32 a1, word32 a2, word32 a5, word32 dwArg38, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
mbedtls_oid_get_x509_ext_type_entry:
l230969C6:
	branch a0 != 0<32> l230969FC
l230969FC:
	word32 s1_16 = a0
	a1_25 = a1
l230969D8:
	word32 a1_25
	branch a0 != 0<32> l230969CE
l230969CE:
	s1_16 = Mem13[a5 + 4<i32>:word32]
	branch a2 == a5 l230969EC
l230969EC:
	s1_16 = Mem13[a1_25 + 8<i32>:word32]
	word32 a3_106
	word32 a4_107
	a0 = memcmp(a0, a1_25, a2, out a1_25, out a2, out a3_106, out a4_107, out a5)
	branch a0 != 0<32> l230969D6
l230969F4:
	Mem35[a1:word32] = a5
l230969D6:
l230969DC:
	a0 = -46<i32>
l230969E0:
	0<32> = dwArg38
	a0Out = a0
	a1Out = a1_25
	a5Out = a5
	s2Out = a1
	return s1_16
l230969C8:
	a0Out = -46<i32>
	a1Out = a1
	a5Out = a5
	s2Out = s2
	return s1
mbedtls_oid_get_x509_ext_type_exit:


word32 mbedtls_oid_get_extended_key_usage(word32 a0, word32 a1, word32 a2, word32 a5, word32 dwArg38, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_info
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut: a0 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
mbedtls_oid_get_extended_key_usage_entry:
l23096A14:
	branch a0 != 0<32> l23096A4A
l23096A4A:
	word32 s1_16 = a0
	a1_25 = a1
l23096A26:
	word32 a1_25
	branch a0 != 0<32> l23096A1C
l23096A1C:
	s1_16 = Mem13[a5 + 4<i32>:word32]
	branch a2 == a5 l23096A3A
l23096A3A:
	s1_16 = Mem13[a1_25 + 8<i32>:word32]
	word32 a3_103
	word32 a4_104
	a0 = memcmp(a0, a1_25, a2, out a1_25, out a2, out a3_103, out a4_104, out a5)
	branch a0 != 0<32> l23096A24
l23096A42:
	Mem35[a1:word32] = a5
l23096A24:
l23096A2A:
	a0 = -46<i32>
l23096A2E:
	0<32> = dwArg38
	a0Out = a0
	return s1_16
l23096A16:
	a0Out = -46<i32>
	return s1
mbedtls_oid_get_extended_key_usage_exit:


word32 mbedtls_oid_get_sig_alg_desc(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_sig_alg_gets
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
mbedtls_oid_get_sig_alg_desc_entry:
l23096A62:
	branch a0 != 0<32> l23096A76
l23096A76:
	word32 a0_21
	word32 a0_13
	word32 a5_18
	word32 a1_58
	word32 s1_19 = oid_sig_alg_from_asn1.part.0(a0, a1, a2, a5, out a0_13, out a1_58, out a5_18)
	branch a0_13 == 0<32> l23096A6A
l23096A6A:
	a0_21 = -46<i32>
l23096A84:
	Mem24[a5_18:word32] = a1
	a0_21 = 0<32>
l23096A6E:
	a0Out = a0_21
	return s1_19
l23096A64:
	a0Out = -46<i32>
	return s1
mbedtls_oid_get_sig_alg_desc_exit:


word32 mbedtls_oid_get_sig_alg(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_get_sig_alg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a1 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
mbedtls_oid_get_sig_alg_entry:
l23096A8C:
	branch a0 != 0<32> l23096AA2
l23096AA2:
	word32 a0_24
	word32 a0_16
	word32 a1_17
	word32 a5_21
	word32 s1_22 = oid_sig_alg_from_asn1.part.0(a0, a1, a2, a5, out a0_16, out a1_17, out a5_21)
	branch a0_16 == 0<32> l23096A94
l23096A94:
	a0_24 = -46<i32>
l23096AB4:
	Mem26[s1_22:byte] = SLICE(CONVERT(Mem10[a0_16 + 16<i32>:byte], byte, word32), byte, 0)
	a5_21 = CONVERT(Mem26[a0_16 + 17<i32>:byte], byte, word32)
	Mem29[a2:byte] = SLICE(a5_21, byte, 0)
	a0_24 = 0<32>
l23096A98:
	a0Out = a0_24
	a1Out = a1_17
	a5Out = a5_21
	return s1_22
l23096A8E:
	a0Out = -46<i32>
	a1Out = a1
	a5Out = a5
	return s1
mbedtls_oid_get_sig_alg_exit:


word32 mbedtls_oid_get_pk_alg(word32 a0, word32 a1, word32 a2, word32 a5, word32 dwArg38, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_get_pk_alg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
mbedtls_oid_get_pk_alg_entry:
l23096AC8:
	branch a0 != 0<32> l23096B00
l23096B00:
	word32 s1_16 = a0
	a1_25 = a1
l23096ADA:
	word32 a1_25
	branch a0 != 0<32> l23096AD0
l23096AD0:
	s1_16 = Mem13[a5 + 4<i32>:word32]
	word32 s0_24 = Mem13[a2 + 4<i32>:word32]
	branch a2 == a5 l23096AEE
l23096AEE:
	s1_16 = Mem13[a1_25 + 8<i32>:word32]
	a0 = memcmp(a0, a1_25, a2, out a1_25, out a2, out a3, out a4, out a5)
	branch a0 != 0<32> l23096AD8
l23096AF6:
	a5 = CONVERT(Mem13[s0_24 + 16<i32>:byte], byte, word32)
	Mem35[a1:byte] = SLICE(a5, byte, 0)
l23096AD8:
l23096ADE:
	a0 = -46<i32>
l23096AE2:
	0<32> = dwArg38
	a0Out = a0
	a1Out = a1_25
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = a1
	return s1_16
l23096ACA:
	a0Out = -46<i32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	return s1
mbedtls_oid_get_pk_alg_exit:


word32 mbedtls_oid_get_ec_grp(word32 a0, word32 a1, word32 a2, word32 a5, word32 dwArg38, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_use_ecparams
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
mbedtls_oid_get_ec_grp_entry:
l23096B18:
	branch a0 != 0<32> l23096B50
l23096B50:
	word32 s1_16 = a0
	a1_25 = a1
l23096B2A:
	word32 a1_25
	branch a0 != 0<32> l23096B20
l23096B20:
	s1_16 = Mem13[a5 + 4<i32>:word32]
	word32 s0_24 = Mem13[a2 + 4<i32>:word32]
	branch a2 == a5 l23096B3E
l23096B3E:
	s1_16 = Mem13[a1_25 + 8<i32>:word32]
	a0 = memcmp(a0, a1_25, a2, out a1_25, out a2, out a3, out a4, out a5)
	branch a0 != 0<32> l23096B28
l23096B46:
	a5 = CONVERT(Mem13[s0_24 + 16<i32>:byte], byte, word32)
	Mem35[a1:byte] = SLICE(a5, byte, 0)
l23096B28:
l23096B2E:
	a0 = -46<i32>
l23096B32:
	0<32> = dwArg38
	a0Out = a0
	a1Out = a1_25
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = a1
	return s1_16
l23096B1A:
	a0Out = -46<i32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	return s1
mbedtls_oid_get_ec_grp_exit:


word32 mbedtls_oid_get_md_alg(word32 a0, word32 a1, word32 a2, word32 a5, word32 dwArg38, ptr32 & a0Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] Stack +0038:[0..31]
// LiveOut: a0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
mbedtls_oid_get_md_alg_entry:
l23096B68:
	branch a0 != 0<32> l23096BA0
l23096BA0:
	word32 s1_16 = a0
	a1_25 = a1
l23096B7A:
	word32 a1_25
	branch a0 != 0<32> l23096B70
l23096B70:
	s1_16 = Mem13[a5 + 4<i32>:word32]
	word32 s0_24 = Mem13[a2 + 4<i32>:word32]
	branch a2 == a5 l23096B8E
l23096B8E:
	s1_16 = Mem13[a1_25 + 8<i32>:word32]
	word32 a3_104
	word32 a4_105
	a0 = memcmp(a0, a1_25, a2, out a1_25, out a2, out a3_104, out a4_105, out a5)
	branch a0 != 0<32> l23096B78
l23096B96:
	Mem35[a1:byte] = SLICE(CONVERT(Mem13[s0_24 + 16<i32>:byte], byte, word32), byte, 0)
l23096B78:
l23096B7E:
	a0 = -46<i32>
l23096B82:
	0<32> = dwArg38
	a0Out = a0
	s2Out = a1
	return s1_16
l23096B6A:
	a0Out = -46<i32>
	s2Out = s2
	return s1
mbedtls_oid_get_md_alg_exit:


word32 mbedtls_oid_get_oid_by_md(word32 a0, word32 a1, word32 a2, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_sign
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a5
// Preserved: sp
mbedtls_oid_get_oid_by_md_entry:
l23096BB8:
l23096BC0:
	word32 a5_7 = Mem0[a4:word32]
	branch a4 != 0<32> l23096BCA
l23096BCA:
	branch CONVERT(Mem0[a5_7 + 16<i32>:byte], byte, word32) != a0 l23096BDC
l23096BDC:
l23096BD2:
	Mem13[a4:word32] = a1
	Mem18[Mem13[a5_7 + 4<i32>:word32]:word32] = a2
	return 0<32>
l23096BC4:
	return -46<i32>
mbedtls_oid_get_oid_by_md_exit:


word32 pem_aes_decrypt(word32 ra, word32 a4, word32 a5, ptr32 & a4Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pem_read_buffer
// MayUse:  a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a1 a4 s10 s11 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
pem_aes_decrypt_entry:
l23096BE0:
	word32 a1_535
	word32 a1_532
	word32 a5_534
	word32 a4_533
	word32 ra_49 = mbedtls_md5_init(mbedtls_aes_init(ra, fp + -312<i32>, out a1_532, out a4_533, out a5_534), fp + -400<i32>, out a1_535)
	word32 a5_62
	word32 s2_69
	word32 s3_536
	word32 s4_537
	mbedtls_md5_update(a4, a5, mbedtls_md5_starts(fp + -400<i32>), dwLoc01A4, dwLoc0178, dwLoc0118, dwLocFC, dwLoc98, out a5_62, out s2_69, out s3_536, out s4_537)
	word32 s1_127
	word32 s4_541
	word32 s3_540
	word32 s2_539
	word32 a5_538
	word32 s5_133
	word32 s2_130
	word32 s6_134
	mbedtls_md5_finish(mbedtls_md5_update(s2_69, 8<32>, a5_62, dwLoc01A4, dwLoc0178, dwLoc0118, dwLocFC, dwLoc98, out a5_538, out s2_539, out s3_540, out s4_541), dwLoc0198, dwLoc0138, dwLoc011C, dwLocB8, out s1_127, out s2_130, out s5_133, out s6_134)
	word32 s0_146 = fp + -432<i32>
	branch s1_127 != 0x10<32> l23096CA8
l23096CA8:
	word32 a6_547
	word32 a7_548
	word32 a5_546
	word32 a4_545
	word32 a1_542
	word32 a3_544
	word32 a2_543
	memcpy(fp + -432<i32>, fp + -448<i32>, 0x10<32>, out a1_542, out a2_543, out a3_544, out a4_545, out a5_546, out a6_547, out a7_548)
	word32 a5_174
	word32 s3_182
	word32 s4_183
	word32 s2_549
	mbedtls_md5_update(fp + -448<i32>, 0x10<32>, mbedtls_md5_starts(fp + -400<i32>), dwLoc01A4, dwLoc0178, dwLoc0118, dwLocFC, dwLoc98, out a5_174, out s2_549, out s3_182, out s4_183)
	word32 a5_205
	word32 s2_212
	word32 s4_551
	word32 s3_550
	mbedtls_md5_update(s3_182, s4_183, a5_174, dwLoc01A4, dwLoc0178, dwLoc0118, dwLocFC, dwLoc98, out a5_205, out s2_212, out s3_550, out s4_551)
	word32 s1_270
	word32 a5_552
	word32 s2_553
	word32 s3_554
	word32 s4_555
	s0_146 = mbedtls_md5_finish(mbedtls_md5_update(s2_212, 8<32>, a5_205, dwLoc01A4, dwLoc0178, dwLoc0118, dwLocFC, dwLoc98, out a5_552, out s2_553, out s3_554, out s4_555), dwLoc0198, dwLoc0138, dwLoc011C, dwLocB8, out s1_270, out s2_130, out s5_133, out s6_134)
	word32 a2_290 = 0x10<32>
	branch s1_270 == 32<i32> l23096CE4
l23096CE0:
	a2_290 = s1_270 + -16<i32>
l23096CE4:
	word32 a5_567
	word32 a6_568
	word32 a7_569
	word32 a1_563
	word32 a4_566
	word32 a2_564
	word32 a3_565
	memcpy(fp + -416<i32>, fp + -448<i32>, a2_290, out a1_563, out a2_564, out a3_565, out a4_566, out a5_567, out a6_568, out a7_569)
	mbedtls_md5_free(fp + -400<i32>)
	word32 a5_312 = fp + -448<i32>
l23096CF2:
	Mem314[a5_312:byte] = 0<8>
	a5_312 = a5_312 + 1<32>
	branch a5_312 != s0_146 l23096CF2
l23096CFC:
l23096C46:
	word32 a7_562
	word32 a2_557
	word32 a3_558
	word32 a6_561
	word32 a4_559
	word32 a5_560
	word32 a1_556
	memcpy(fp + -432<i32>, fp + -448<i32>, 0x10<32>, out a1_556, out a2_557, out a3_558, out a4_559, out a5_560, out a6_561, out a7_562)
	mbedtls_md5_free(fp + -400<i32>)
	word32 a5_333 = fp + -448<i32>
l23096C50:
	Mem335[a5_333:byte] = 0<8>
	a5_333 = a5_333 + 1<32>
	branch a5_333 != fp + -432<i32> l23096C50
l23096C5A:
	mbedtls_aes_setkey_dec(ra_49, s0_146)
	word32 a1_394
	word32 a4_396
	word32 s10_400
	word32 s11_401
	word32 s7_406
	word32 s9_407
	word32 s1_399
	word32 s0_390 = mbedtls_aes_crypt_cbc(0<32>, s6_134, s2_130, s5_133, s5_133, dwLocC8, dwLocB8, dwLoc28, out s1_399, out a1_394, out a4_396, out s7_406, out s9_407, out s10_400, out s11_401)
	mbedtls_aes_free(fp + -312<i32>)
l23096C7E:
	s1_399 = s1_399 + 0xFFFFFFFF<32>
	branch s1_399 != 0xFFFFFFFF<32> l23096CFE
l23096CFE:
	Mem422[s0_390:byte] = 0<8>
	s0_390 = s0_390 + 1<32>
l23096C84:
	a4Out = a4_396
	s7Out = s7_406
	s9Out = s9_407
	s10Out = s10_400
	s11Out = s11_401
	return a1_394
pem_aes_decrypt_exit:


word32 mbedtls_pem_init(word32 ra, word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_parse_key
//      mbedtls_x509_crt_parse
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_pem_init_entry:
l23096D06:
l23096D0A_thunk_memset:
	word32 a5_12
	word32 t1_17
	word32 a0_18
	word32 a1_19
	word32 a2_20
	word32 a3_21
	word32 a4_22
	word32 ra_13 = memset(ra, a0, 0<32>, 0xC<32>, out t1_17, out a0_18, out a1_19, out a2_20, out a3_21, out a4_22, out a5_12)
	a5Out = a5_12
	return ra_13
mbedtls_pem_init_exit:


word32 mbedtls_pem_read_buffer(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a6, word32 s2, word32 mstatus, word32 dwArg74, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_parse_key
//      mbedtls_x509_crt_parse
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0074:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_pem_read_buffer_entry:
l23096D0E:
	word32 s2_149
	word32 s0_26
	branch a0 == 0<32> l23096FFE
l23096FFE:
	s0_26 = 0xFEFFFB80<32>
	s2_149 = s2
l23096D28:
	s7 = a6
	s5 = a5
	s3 = a4
	s2_149 = a3
	s6 = a2
	word32 a3_1241
	word32 a0_42 = strstr(ra, a3, a1, out a1, out a3_1241, out a4, out a5)
	branch a0_42 != 0<32> l23096D60
l23096D60:
	word32 a3_1242
	word32 a0_55 = strstr(ra, a3, a2, out a1, out a3_1242, out a4, out a5)
	branch a0_55 == 0<32> l23096D40
l23096D6C:
	branch a0_42 >=u a0_55 l23096D40
l23096D70:
	word32 a2_1243
	word32 a4_1245
	word32 a3_1244
	word32 a5_1246
	word32 s0_72 = a0_42 + strlen(a1, out a1, out a2_1243, out a3_1244, out a4_1245, out a5_1246)
	branch CONVERT(Mem23[s0_72:byte], byte, word32) != 32<i32> l23096D86
l23096D84:
	s0_72 = s0_72 + 1<32>
l23096D86:
	branch CONVERT(Mem23[s0_72:byte], byte, word32) != 0xD<32> l23096D92
l23096D90:
	s0_72 = s0_72 + 1<32>
l23096D92:
	a4 = CONVERT(Mem23[s0_72:byte], byte, word32)
	a5 = 0xA<32>
	branch a4 != 0xA<32> l23096D40
l23096D9C:
	word32 a3_1248
	word32 a5_1250
	word32 a4_1249
	word32 a2_1247
	word32 a2_100 = a0_55 + strlen(a2, out a1, out a2_1247, out a3_1248, out a4_1249, out a5_1250)
	word32 s8_284 = s0_72 + 1<i32>
	branch CONVERT(Mem23[a2_100:byte], byte, word32) != 32<i32> l23096DB8
l23096DB6:
	a2_100 = a2_100 + 1<32>
l23096DB8:
	branch CONVERT(Mem23[a2_100:byte], byte, word32) != 0xD<32> l23096DC4
l23096DC2:
	a2_100 = a2_100 + 1<32>
l23096DC4:
	branch CONVERT(Mem23[a2_100:byte], byte, word32) != 0xA<32> l23096DD0
l23096DCE:
	a2_100 = a2_100 + 1<32>
l23096DD0:
	Mem123[a6:word32] = a2_100 - a3
	a5 = a0_55 - s8_284
	a4 = 0x15<32>
	branch a5 <= 0x15<32> l23096F70
l23096DE2:
	word32 a3_1252
	word32 a2_1251
	branch memcmp(s8_284, 0x230C98A8<32>, 0x16<32>, out a1, out a2_1251, out a3_1252, out a4, out a5) != 0<32> l23096F70
l23096F70:
	s6 = 0<32>
	s7 = 0<32>
l23096DF6:
	a5 = CONVERT(Mem123[s0_72 + 23<i32>:byte], byte, word32)
	s2_149 = s0_72 + 23<i32>
	branch a5 != 0xD<32> l23096E0C
l23096E04:
	a5 = CONVERT(Mem123[s0_72 + 24<i32>:byte], byte, word32)
	s2_149 = s0_72 + 24<i32>
l23096E0C:
	a4 = 0xA<32>
	branch a5 == 0xA<32> l23096E1A
l23096E1A:
	word32 s0_155 = s2_149 + 1<i32>
	s6 = a0_55 - s0_155
	a5 = 0xD<32>
	branch s6 > 0xD<32> l23096E30
l23096E30:
	word32 a3_1285
	word32 a2_1284
	branch memcmp(s0_155, 0x230C98C0<32>, 0xE<32>, out a1, out a2_1284, out a3_1285, out a4, out a5) != 0<32> l23096E28
l23096E42:
	a5 = 0x15<32>
	branch s6 <= 0x15<32> l23096E28
l23096E48:
	s6 = 5<32>
	word32 a3_1287
	word32 a4_1288
	word32 a5_1289
	word32 a2_1286
	branch memcmp(s0_155, 0x230C98D0<32>, 0x16<32>, out a1, out a2_1286, out a3_1287, out a4_1288, out a5_1289) == 0<32> l23096E84
l23096E5C:
	s6 = 6<32>
	word32 a5_1293
	word32 a3_1291
	word32 a4_1292
	word32 a2_1290
	branch memcmp(s0_155, 0x230C98E8<32>, 0x16<32>, out a1, out a2_1290, out a3_1291, out a4_1292, out a5_1293) == 0<32> l23096E84
l23096E70:
	word32 a2_1294
	word32 a3_1295
	branch memcmp(s0_155, 0x230C9900<32>, 0x16<32>, out a1, out a2_1294, out a3_1295, out a4, out a5) != 0<32> l23096E28
l23096E82:
	s6 = 7<32>
l23096E84:
	a5 = a0_55 - (s2_149 + 23<i32>)
	a4 = 0x1F<32>
	branch a5 > 0x1F<32> l23096E9A
l23096E9A:
	word32 a0_1297
	word32 a1_1298
	word32 a2_1299
	word32 a3_1300
	word32 t1_1296
	word32 a5_1302
	word32 a4_1301
	ra = memset(ra, fp + -64<i32>, 0<32>, 0x10<32>, out t1_1296, out a0_1297, out a1_1298, out a2_1299, out a3_1300, out a4_1301, out a5_1302)
	a5 = 0<32>
	a1 = 32<i32>
l23096EAE:
	a4 = CONVERT(Mem241[s2_149 + a5 + 23<i32>:byte], byte, word32)
	word32 a3_243 = a4 + -48<i32>
	branch (a4 + -48<i32> & 255<i32>) <=u 9<32> l23096ED2
l23096EC2:
	branch (a4 + -65<i32> & 255<i32>) >u 5<32> l23096F5E
l23096F5E:
	branch (a4 + -97<i32> & 255<i32>) >u 5<32> l23096E92
l23096F6A:
	a3_243 = a4 + -87<i32>
l23096ECE:
	a3_243 = a4 + -55<i32>
l23096ED2:
	branch (a5 & 1<i32>) != 0<32> l23096EDA
l23096ED8:
	a3_243 = a3_243 << 4<i32>
l23096EDA:
	word32 a4_263 = (a5 >>u 1<u32>) + (fp + -64<i32>)
	Mem270[a4_263:byte] = SLICE(a3_243 | CONVERT(Mem241[a4_263:byte], byte, word32), byte, 0)
	a5 = a5 + 1<32>
	branch a5 != 32<i32> l23096EAE
l23096EF2:
	word32 a3_278 = s2_149 + 56<i32>
	branch CONVERT(Mem270[s2_149 + 55<i32>:byte], byte, word32) == 0xD<32> l23096F04
l23096F00:
	a3_278 = s2_149 + 55<i32>
l23096F04:
	a4 = CONVERT(Mem270[a3_278:byte], byte, word32)
	a5 = 0xA<32>
	branch a4 != 0xA<32> l23096E12
l23096F0E:
	s8_284 = a3_278 + 1<i32>
	s7 = 1<32>
l23096F14:
	branch s8_284 >=u a0_55 l23096E12
l23096F18:
	word32 a0_303
	word32 a3_322
	word32 s4_1255
	word32 a2_1253
	word32 a5_1254
	word32 s1_309 = mbedtls_base64_decode(0<32>, 0<32>, fp + -68<i32>, s8_284, a0_55 - s8_284, out a0_303, out a1, out a2_1253, out a3_322, out a4, out a5_1254, out s2_149, out s3, out s4_1255, out s5)
	a5 = -44<i32>
	branch a0_303 == -44<i32> l23097006
l23097006:
	s0_26 = 0xFEFFFED4<32>
l23096F32:
	word32 s1_360
	word32 s8_364
	word32 a3_1258
	word32 s2_1259
	word32 s4_1260
	word32 a2_1257
	word32 s0_1256
	word32 ra_358 = mycalloc(ra, s1_309, 1<32>, a1, a3_322, a4, -44<i32>, mstatus, s2, s0, dwArgC8, dwArg0108, out s0_1256, out s1_360, out a1, out a2_1257, out a3_1258, out a4, out a5, out s2_1259, out s3, out s4_1260, out s8_364)
	s2_149 = 1<32>
	branch false l2309700E
l2309700E:
	s0_26 = 0xFEFFFE80<32>
l23096F3E:
	word32 a3_1261
	word32 a0_376
	word32 a2_377
	word32 s4_385
	mbedtls_base64_decode(1<32>, a1, fp + -68<i32>, s8_364, s1_360, out a0_376, out a1, out a2_377, out a3_1261, out a4, out a5, out s2_149, out s3, out s4_385, out s5)
	s0_26 = a0_376
	branch a0_376 == 0<32> l23096F76
l23096F76:
	branch s7 == 0<32> l23096FF2
l23096F7A:
	branch s3 != 0<32> l23096F8C
l23096F8C:
	branch s6 != 5<32> l23096FD0
l23096FD0:
	branch s6 != 6<32> l23096FE0
l23096FE0:
	branch s6 != 7<32> l23096FA2
l23096FE6:
l23096FD6:
l23096F94:
l23096F9C:
	a1 = pem_aes_decrypt(ra_358, s3, s5, out a4, out s7, out s9, out s10, out s11)
l23096FA2:
	a5 = 2<32>
	branch a4 <=u 2<32> l23096FC2
l23096FAA:
	a5 = 48<i32>
	branch CONVERT(Mem328[s2_149:byte], byte, word32) != 48<i32> l23096FC2
l23096FB6:
	a4 = CONVERT(Mem328[s2_149 + 1<i32>:byte], byte, word32)
	a5 = 131<i32>
	branch a4 <=u 131<i32> l23096FF2
l23096FF2:
	Mem467[s4_385:word32] = s2_149
	Mem469[s4_385 + 4<i32>:word32] = a5
l23096FC2:
	word32 a3_1280
	word32 a2_1279
	word32 a0_1278
	word32 a6_1281
	word32 s4_1282
	word32 t3_1283
	word32 s1_1277
	word32 s0_489
	vPortFree(s2_149, dwArg74, a5, mstatus, dwArg0108, dwArg0148, out s0_489, out s1_1277, out a0_1278, out a1, out a2_1279, out a3_1280, out a4, out a5, out a6_1281, out s4_1282, out t3_1283)
	s0_26 = s0_489 + -896<i32>
l23096F7E:
	word32 a6_1274
	word32 t3_1276
	word32 a3_1273
	word32 s4_1275
	word32 s1_1270
	word32 a0_1271
	word32 a2_1272
	word32 s0_504
	vPortFree(s2_149, a2_377, a5, mstatus, dwArg0108, dwArg0148, out s0_504, out s1_1270, out a0_1271, out a1, out a2_1272, out a3_1273, out a4, out a5, out a6_1274, out s4_1275, out t3_1276)
	s0_26 = s0_504 + -768<i32>
l23096F4E:
	word32 t3_1269
	word32 a0_1263
	word32 a2_1264
	word32 a5_1266
	word32 s4_1268
	word32 s1_1262
	word32 a6_1267
	word32 a3_1265
	word32 s0_518
	vPortFree(s2_149, a2_377, a5, mstatus, dwArg0108, dwArg0148, out s0_518, out s1_1262, out a0_1263, out a1, out a2_1264, out a3_1265, out a4, out a5_1266, out a6_1267, out s4_1268, out t3_1269)
	a5 = 0xFEFFFF00<32>
	s0_26 = s0_518 + 0xFEFFFF00<32>
l23096E92:
	s0_26 = 0xFEFFFE00<32>
l23096E28:
	s0_26 = 0xFEFFFD80<32>
l23096E12:
	s0_26 = 0xFEFFFF00<32>
l23096D40:
	s0_26 = 0xFEFFFF80<32>
l23096D46:
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = s0_26
	a1Out = a1
	a2Out = dwArg01A8
	a3Out = s2
	a4Out = a4
	a5Out = a5
	s2Out = s2_149
	s3Out = s3
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArg0148
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return dwLoc08
mbedtls_pem_read_buffer_exit:


word32 mbedtls_pem_free(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_parse_key
//      mbedtls_x509_crt_parse
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
mbedtls_pem_free_entry:
l23097016:
	word32 a2_14
	word32 a5_17
	word32 a0_20
	word32 a3_72
	word32 a4_73
	word32 a1_71
	word32 s1_70
	word32 s0_69
	word32 a6_74
	word32 s4_75
	word32 t3_76
	vPortFree(Mem7[a0:word32], a2, a5, mstatus, dwArg0148, dwArg0188, out s0_69, out s1_70, out a0_20, out a1_71, out a2_14, out a3_72, out a4_73, out a5_17, out a6_74, out s4_75, out t3_76)
	word32 a3_28
	word32 a4_29
	word32 s1_31
	word32 s0_36
	word32 s4_37
	word32 a0_77
	word32 a1_78
	word32 a2_79
	word32 a5_80
	word32 a6_81
	word32 t3_82
	vPortFree(a0_20, a2_14, a5_17, mstatus, dwArg0148, dwArg0188, out s0_36, out s1_31, out a0_77, out a1_78, out a2_79, out a3_28, out a4_29, out a5_80, out a6_81, out s4_37, out t3_82)
	s0_40 = s0_36
l2309702E:
	word32 s0_40
	branch s0_40 != s0_36 + 12<i32> l2309703A
l2309703A:
	Mem42[s0_40:byte] = 0<8>
	s0_40 = s0_40 + 1<32>
l23097032:
	a3Out = a3_28
	a4Out = a4_29
	a5Out = s0_36 + 12<i32>
	s4Out = s4_37
	return s1_31
mbedtls_pem_free_exit:


word32 mbedtls_md5_init(word32 ra, word32 a0, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      md5_ctx_alloc
//      pem_aes_decrypt
//      mbedtls_md5
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a1 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_md5_init_entry:
l23097042:
l23097048_thunk_memset:
	word32 a1_8
	word32 t1_17
	word32 a0_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	word32 ra_13 = memset(ra, a0, 0<32>, 88<i32>, out t1_17, out a0_18, out a1_8, out a2_19, out a3_20, out a4_21, out a5_22)
	a1Out = a1_8
	return ra_13
mbedtls_md5_init_exit:


word32 mbedtls_md5_free(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      md5_ctx_free
//      pem_aes_decrypt
//      mbedtls_md5
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_md5_free_entry:
l2309704C:
	a0_5 = a0
	branch a0 != 0<32> l2309705A
l2309705A:
	word32 a0_5
	branch a0_5 != a0 + 88<i32> l23097054
l23097054:
	Mem7[a0_5:byte] = 0<8>
	a0_5 = a0_5 + 1<32>
l2309705E:
l23097052:
	return a0 + 88<i32>
mbedtls_md5_free_exit:


void mbedtls_md5_clone(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      md5_clone_wrap
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
mbedtls_md5_clone_entry:
l23097060:
	word32 a1_26
	word32 a2_27
	word32 a3_28
	word32 a4_29
	word32 a5_30
	word32 a6_31
	word32 a7_32
	memcpy(a0, a1, 88<i32>, out a1_26, out a2_27, out a3_28, out a4_29, out a5_30, out a6_31, out a7_32)
	return
mbedtls_md5_clone_exit:


word32 mbedtls_md5_starts(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      md5_starts_wrap
//      pem_aes_decrypt
//      mbedtls_md5
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
mbedtls_md5_starts_entry:
l23097072:
	Mem6[0x67452309<32>:word32] = a0
	Mem9[0xEFCDAB95<32>:word32] = a0
	Mem12[0x98BADD0E<32>:word32] = a0
	Mem15[a0:word32] = 0<32>
	Mem16[a0 + 4<i32>:word32] = 0<32>
	Mem17[0x1032548A<32>:word32] = a0
	return 0x10325476<32>
mbedtls_md5_starts_exit:


word32 mbedtls_md5_process(word32 a0, word32 a1, word32 dwArg3C, word32 dwArgE4, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      md5_process_wrap
//      mbedtls_md5_update
// MayUse:  a0:[0..31] a1:[0..31] Stack +003C:[0..31] Stack +00E4:[0..31] Stack +0148:[0..31]
// LiveOut: s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_md5_process_entry:
l230970A4:
	word32 s8_43 = CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1:byte], byte, word32)))
	word32 t5_172 = Mem27[a0 + 8<i32>:int32]
	word32 a2_200 = CONVERT(Mem27[a1 + 62<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 61<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 60<i32>:byte], byte, word32))
	word32 a6_176 = Mem27[a0 + 20<i32>:int32]
	word32 a7_210 = ((a1 ^ a6_176) & a2_200 ^ a6_176) + ((t5_172 + 0xD76AA478<32>) + s8_43)
	word32 s3_58 = CONVERT(Mem27[a1 + 7<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 4<i32>:byte], byte, word32)))
	word32 a7_214 = (a7_210 >>u 0x19<u32> | a7_210 << 7<u32>) + a2_200
	word32 t6_219 = ((a2_200 ^ a1) & a7_214 ^ a1) + ((a6_176 + 0xE8C7B756<32>) + s3_58)
	word32 t0_73 = CONVERT(Mem27[a1 + 11<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 10<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 9<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 8<i32>:byte], byte, word32)))
	word32 t6_223 = (t6_219 >>u 0x14<u32> | t6_219 << 0xC<u32>) + a7_214
	word32 t3_228 = ((a2_200 ^ a7_214) & t6_223 ^ a2_200) + ((a1 + 0x242070DB<32>) + t0_73)
	word32 s4_88 = CONVERT(Mem27[a1 + 15<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 14<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 12<i32>:byte], byte, word32)))
	word32 t3_235 = (t3_228 << 17<i32> | t3_228 >>u 0xF<u32>) + t6_223
	word32 t1_240 = ((a7_214 ^ t6_223) & t3_235 ^ a7_214) + ((a2_200 + 0xC1BDCEEE<32>) + s4_88)
	word32 s0_66 = CONVERT(Mem27[a1 + 19<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem27[a1 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 16<i32>:byte], byte, word32)) | CONVERT(Mem27[a1 + 18<i32>:byte], byte, word32) << 16<i32>)
	word32 t1_247 = (t1_240 << 22<i32> | t1_240 >>u 0xA<u32>) + t3_235
	word32 a7_252 = ((t6_223 ^ t3_235) & t1_247 ^ t6_223) + ((s0_66 + 0xF57C0FAF<32>) + a7_214)
	word32 s5_103 = CONVERT(Mem27[a1 + 23<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 22<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 21<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 20<i32>:byte], byte, word32)))
	word32 a7_259 = (a7_252 >>u 0x19<u32> | a7_252 << 7<u32>) + t1_247
	word32 t6_264 = ((t3_235 ^ t1_247) & a7_259 ^ t3_235) + ((s5_103 + 0x4787C62A<32>) + t6_223)
	word32 a3_118 = CONVERT(Mem27[a1 + 27<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem27[a1 + 25<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 24<i32>:byte], byte, word32)) | CONVERT(Mem27[a1 + 26<i32>:byte], byte, word32) << 16<i32>)
	word32 t6_271 = (t6_264 >>u 0x14<u32> | t6_264 << 0xC<u32>) + a7_259
	word32 t3_276 = ((t1_247 ^ a7_259) & t6_271 ^ t1_247) + ((a3_118 + 0xA8304613<32>) + t3_235)
	word32 s7_133 = CONVERT(Mem27[a1 + 31<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 30<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 29<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 28<i32>:byte], byte, word32)))
	word32 t3_283 = (t3_276 << 17<i32> | t3_276 >>u 0xF<u32>) + t6_271
	word32 t1_288 = ((a7_259 ^ t6_271) & t3_283 ^ a7_259) + ((s7_133 + 0xFD469501<32>) + t1_247)
	word32 s2_146 = CONVERT(Mem27[a1 + 35<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 34<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 33<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 32<i32>:byte], byte, word32)))
	word32 t1_295 = (t1_288 << 22<i32> | t1_288 >>u 0xA<u32>) + t3_283
	word32 a7_300 = ((t6_271 ^ t3_283) & t1_295 ^ t6_271) + ((s2_146 + 0x698098D8<32>) + a7_259)
	word32 t4_121 = CONVERT(Mem27[a1 + 39<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 38<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 37<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 36<i32>:byte], byte, word32)))
	word32 a7_307 = (a7_300 >>u 0x19<u32> | a7_300 << 7<u32>) + t1_295
	word32 t6_312 = ((t3_283 ^ t1_295) & a7_307 ^ t3_283) + ((t4_121 + 0x8B44F7AF<32>) + t6_271)
	word32 a5_158 = CONVERT(Mem27[a1 + 43<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem27[a1 + 41<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 40<i32>:byte], byte, word32)) | CONVERT(Mem27[a1 + 42<i32>:byte], byte, word32) << 16<i32>)
	word32 t6_319 = (t6_312 >>u 0x14<u32> | t6_312 << 0xC<u32>) + a7_307
	word32 t3_324 = ((t1_295 ^ a7_307) & t6_319 ^ t1_295) + ((a5_158 + 0xF5FFFBB1<32>) + t3_283)
	word32 t2_149 = CONVERT(Mem27[a1 + 47<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 46<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 45<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 44<i32>:byte], byte, word32)))
	word32 t3_331 = (t3_324 << 17<i32> | t3_324 >>u 0xF<u32>) + t6_319
	word32 t1_336 = ((a7_307 ^ t6_319) & t3_331 ^ a7_307) + ((t2_149 + 0x895CD7BE<32>) + t1_295)
	word32 a4_168 = CONVERT(Mem27[a1 + 51<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem27[a1 + 49<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 48<i32>:byte], byte, word32)) | CONVERT(Mem27[a1 + 50<i32>:byte], byte, word32) << 16<i32>)
	word32 t1_343 = (t1_336 << 22<i32> | t1_336 >>u 0xA<u32>) + t3_331
	word32 a7_348 = ((t6_319 ^ t3_331) & t1_343 ^ t6_319) + ((a4_168 + 0x6B901122<32>) + a7_307)
	word32 s1_184 = CONVERT(Mem27[a1 + 55<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem27[a1 + 53<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 52<i32>:byte], byte, word32)) | CONVERT(Mem27[a1 + 54<i32>:byte], byte, word32) << 16<i32>)
	word32 a7_355 = (a7_348 >>u 0x19<u32> | a7_348 << 7<u32>) + t1_343
	word32 t6_360 = ((t3_331 ^ t1_343) & a7_355 ^ t3_331) + ((s1_184 + 0xFD987193<32>) + t6_319)
	word32 s6_194 = CONVERT(Mem27[a1 + 59<i32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem27[a1 + 58<i32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem27[a1 + 57<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem27[a1 + 56<i32>:byte], byte, word32)))
	word32 t6_367 = (t6_360 >>u 0x14<u32> | t6_360 << 0xC<u32>) + a7_355
	word32 t3_372 = ((t1_343 ^ a7_355) & t6_367 ^ t1_343) + ((s6_194 + 0xA679438E<32>) + t3_331)
	word32 s9_204 = CONVERT(Mem27[a1 + 63<i32>:byte], byte, word32) << 24<i32> | a2_200
	word32 t3_379 = (t3_372 << 17<i32> | t3_372 >>u 0xF<u32>) + t6_367
	word32 t1_384 = ((a7_355 ^ t6_367) & t3_379 ^ a7_355) + ((s9_204 + 0x49B40821<32>) + t1_343)
	word32 t1_390 = (t1_384 << 22<i32> | t1_384 >>u 0xA<u32>) + t3_379
	word32 a7_396 = ((t3_379 ^ t1_390) & t6_367 ^ t3_379) + ((s3_58 + 0xF61E2562<32>) + a7_355)
	word32 a7_402 = (a7_396 >>u 0x1B<u32> | a7_396 << 5<u32>) + t1_390
	word32 t6_408 = ((t1_390 ^ a7_402) & t3_379 ^ t1_390) + ((a3_118 + 0xC040B340<32>) + t6_367)
	word32 t6_414 = (t6_408 >>u 0x17<u32> | t6_408 << 9<u32>) + a7_402
	word32 t3_420 = ((a7_402 ^ t6_414) & t1_390 ^ a7_402) + ((t2_149 + 0x265E5A51<32>) + t3_379)
	word32 t3_426 = (t3_420 >>u 0x12<u32> | t3_420 << 0xE<u32>) + t6_414
	word32 t1_432 = ((t6_414 ^ t3_426) & a7_402 ^ t6_414) + ((s8_43 + 0xE9B6C7AA<32>) + t1_390)
	word32 t1_438 = (t1_432 << 20<i32> | t1_432 >>u 0xC<u32>) + t3_426
	word32 a7_444 = ((t3_426 ^ t1_438) & t6_414 ^ t3_426) + ((s5_103 + 0xD62F105D<32>) + a7_402)
	word32 a7_450 = (a7_444 >>u 0x1B<u32> | a7_444 << 5<u32>) + t1_438
	word32 t6_456 = ((t1_438 ^ a7_450) & t3_426 ^ t1_438) + ((a5_158 + 0x2441453<32>) + t6_414)
	word32 t6_462 = (t6_456 >>u 0x17<u32> | t6_456 << 9<u32>) + a7_450
	word32 t3_468 = ((a7_450 ^ t6_462) & t1_438 ^ a7_450) + ((s9_204 + 0xD8A1E681<32>) + t3_426)
	word32 t3_474 = (t3_468 >>u 0x12<u32> | t3_468 << 0xE<u32>) + t6_462
	word32 t1_480 = ((t6_462 ^ t3_474) & a7_450 ^ t6_462) + ((s0_66 + 0xE7D3FBC8<32>) + t1_438)
	word32 t1_486 = (t1_480 << 20<i32> | t1_480 >>u 0xC<u32>) + t3_474
	word32 a7_492 = ((t3_474 ^ t1_486) & t6_462 ^ t3_474) + ((t4_121 + 0x21E1CDE6<32>) + a7_450)
	word32 a7_498 = (a7_492 >>u 0x1B<u32> | a7_492 << 5<u32>) + t1_486
	word32 t6_504 = ((t1_486 ^ a7_498) & t3_474 ^ t1_486) + ((s6_194 + 0xC33707D6<32>) + t6_462)
	word32 t6_510 = (t6_504 >>u 0x17<u32> | t6_504 << 9<u32>) + a7_498
	word32 t3_516 = ((a7_498 ^ t6_510) & t1_486 ^ a7_498) + ((s4_88 + 0xF4D50D87<32>) + t3_474)
	word32 t3_522 = (t3_516 >>u 0x12<u32> | t3_516 << 0xE<u32>) + t6_510
	word32 t1_528 = ((t6_510 ^ t3_522) & a7_498 ^ t6_510) + ((s2_146 + 0x455A14ED<32>) + t1_486)
	word32 t1_534 = (t1_528 << 20<i32> | t1_528 >>u 0xC<u32>) + t3_522
	word32 a7_540 = ((t3_522 ^ t1_534) & t6_510 ^ t3_522) + ((s1_184 + 0xA9E3E905<32>) + a7_498)
	word32 a7_546 = (a7_540 >>u 0x1B<u32> | a7_540 << 5<u32>) + t1_534
	word32 t6_552 = ((t1_534 ^ a7_546) & t3_522 ^ t1_534) + ((t0_73 + 0xFCEFA3F8<32>) + t6_510)
	word32 t6_558 = (t6_552 >>u 0x17<u32> | t6_552 << 9<u32>) + a7_546
	word32 t3_564 = ((a7_546 ^ t6_558) & t1_534 ^ a7_546) + ((s7_133 + 0x676F02D9<32>) + t3_522)
	word32 t3_568 = (t3_564 >>u 0x12<u32> | t3_564 << 0xE<u32>) + t6_558
	word32 s10_569 = t6_558 ^ t3_568
	word32 t1_573 = (s10_569 & a7_546 ^ t6_558) + ((a4_168 + 0x8D2A4C8A<32>) + t1_534)
	word32 t1_579 = (t1_573 << 20<i32> | t1_573 >>u 0xC<u32>) + t3_568
	word32 a7_583 = (s10_569 ^ t1_579) + ((s5_103 + 0xFFFA3942<32>) + a7_546)
	word32 a7_590 = (a7_583 >>u 0x1C<u32> | a7_583 << 4<u32>) + t1_579
	word32 s10_594 = (t3_568 ^ t1_579 ^ a7_590) + (t6_558 + (s2_146 + 0x8771F681<32>))
	word32 s10_601 = (s10_594 >>u 0x15<u32> | s10_594 << 0xB<u32>) + a7_590
	word32 t6_605 = (t1_579 ^ a7_590 ^ s10_601) + (t3_568 + (t2_149 + 0x6D9D6122<32>))
	word32 t6_612 = (t6_605 >>u 0x10<u32> | t6_605 << 0x10<u32>) + s10_601
	word32 t3_616 = (a7_590 ^ s10_601 ^ t6_612) + (t1_579 + (s6_194 + 0xFDE5380C<32>))
	word32 t3_623 = (t3_616 << 23<i32> | t3_616 >>u 9<u32>) + t6_612
	word32 a7_627 = (s10_601 ^ t6_612 ^ t3_623) + ((s3_58 + 0xA4BEEA44<32>) + a7_590)
	word32 a7_634 = (a7_627 >>u 0x1C<u32> | a7_627 << 4<u32>) + t3_623
	word32 t1_638 = (t6_612 ^ t3_623 ^ a7_634) + (s10_601 + (s0_66 + 0x4BDECFA9<32>))
	word32 t1_645 = (t1_638 >>u 0x15<u32> | t1_638 << 0xB<u32>) + a7_634
	word32 t6_649 = (t3_623 ^ a7_634 ^ t1_645) + ((s7_133 + 0xF6BB4B60<32>) + t6_612)
	word32 t6_656 = (t6_649 >>u 0x10<u32> | t6_649 << 0x10<u32>) + t1_645
	word32 s10_660 = (a7_634 ^ t1_645 ^ t6_656) + (t3_623 + (a5_158 + 0xBEBFBC70<32>))
	word32 s10_667 = (s10_660 << 23<i32> | s10_660 >>u 9<u32>) + t6_656
	word32 t3_671 = (t1_645 ^ t6_656 ^ s10_667) + (a7_634 + (s1_184 + 0x289B7EC6<32>))
	word32 t3_678 = (t3_671 >>u 0x1C<u32> | t3_671 << 4<u32>) + s10_667
	word32 t1_682 = (t6_656 ^ s10_667 ^ t3_678) + ((s8_43 + 0xEAA127FA<32>) + t1_645)
	word32 t1_689 = (t1_682 >>u 0x15<u32> | t1_682 << 0xB<u32>) + t3_678
	word32 t6_693 = (s10_667 ^ t3_678 ^ t1_689) + ((s4_88 + 0xD4EF3085<32>) + t6_656)
	word32 t6_700 = (t6_693 >>u 0x10<u32> | t6_693 << 0x10<u32>) + t1_689
	word32 a7_704 = (t3_678 ^ t1_689 ^ t6_700) + (s10_667 + (a3_118 + 0x4881D05<32>))
	word32 a7_711 = (a7_704 << 23<i32> | a7_704 >>u 9<u32>) + t6_700
	word32 t3_715 = (t1_689 ^ t6_700 ^ a7_711) + ((t4_121 + 0xD9D4D039<32>) + t3_678)
	word32 t3_722 = (t3_715 >>u 0x1C<u32> | t3_715 << 4<u32>) + a7_711
	word32 s10_726 = (t6_700 ^ a7_711 ^ t3_722) + (t1_689 + (a4_168 + 0xE6DB99E5<32>))
	word32 s10_733 = (s10_726 >>u 0x15<u32> | s10_726 << 0xB<u32>) + t3_722
	word32 t1_737 = (a7_711 ^ t3_722 ^ s10_733) + (t6_700 + (s9_204 + 0x1FA27CF8<32>))
	word32 t1_744 = (t1_737 >>u 0x10<u32> | t1_737 << 0x10<u32>) + s10_733
	word32 a7_748 = (t3_722 ^ s10_733 ^ t1_744) + ((t0_73 + 0xC4AC5665<32>) + a7_711)
	word32 a7_755 = (a7_748 << 23<i32> | a7_748 >>u 9<u32>) + t1_744
	word32 t6_760 = ((~s10_733 | a7_755) ^ t1_744) + (t3_722 + (s8_43 + 0xF4292244<32>))
	word32 t6_767 = (t6_760 >>u 0x1A<u32> | t6_760 << 6<u32>) + a7_755
	word32 t3_772 = ((~t1_744 | t6_767) ^ a7_755) + (s10_733 + (s7_133 + 0x432AFF97<32>))
	word32 t3_779 = (t3_772 >>u 0x16<u32> | t3_772 << 0xA<u32>) + t6_767
	word32 t1_784 = ((~a7_755 | t3_779) ^ t6_767) + ((s6_194 + 0xAB9423A7<32>) + t1_744)
	word32 t1_791 = (t1_784 >>u 0x11<u32> | t1_784 << 0xF<u32>) + t3_779
	word32 a7_796 = ((~t6_767 | t1_791) ^ t3_779) + ((s5_103 + 0xFC93A039<32>) + a7_755)
	word32 a7_803 = (a7_796 << 21<i32> | a7_796 >>u 0xB<u32>) + t1_791
	word32 t6_808 = ((~t3_779 | a7_803) ^ t1_791) + ((a4_168 + 0x655B59C3<32>) + t6_767)
	word32 t6_815 = (t6_808 >>u 0x1A<u32> | t6_808 << 6<u32>) + a7_803
	word32 a4_820 = ((~t1_791 | t6_815) ^ a7_803) + (t3_779 + (s4_88 + 0x8F0CCC92<32>))
	word32 a4_827 = (a4_820 >>u 22<i32> | a4_820 << 0xA<u32>) + t6_815
	word32 t1_832 = ((~a7_803 | a4_827) ^ t6_815) + ((a5_158 + 0xFFEFF47D<32>) + t1_791)
	word32 t1_839 = (t1_832 >>u 0x11<u32> | t1_832 << 0xF<u32>) + a4_827
	word32 s3_840 = s3_58 + 0x85845DD1<32> + a7_803
	word32 a7_844 = ((~t6_815 | t1_839) ^ a4_827) + s3_840
	word32 a7_851 = (a7_844 << 21<i32> | a7_844 >>u 0xB<u32>) + t1_839
	word32 s2_852 = s2_146 + 0x6FA87E4F<32> + t6_815
	word32 t6_856 = ((~a4_827 | a7_851) ^ t1_839) + s2_852
	word32 t6_863 = (t6_856 >>u 0x1A<u32> | t6_856 << 6<u32>) + a7_851
	word32 t3_868 = ((~t1_839 | t6_863) ^ a7_851) + (a4_827 + (s9_204 + 0xFE2CE6E0<32>))
	word32 t3_875 = (t3_868 >>u 0x16<u32> | t3_868 << 0xA<u32>) + t6_863
	word32 t1_880 = ((~a7_851 | t3_875) ^ t6_863) + ((a3_118 + 0xA3014314<32>) + t1_839)
	word32 t1_887 = (t1_880 >>u 0x11<u32> | t1_880 << 0xF<u32>) + t3_875
	word32 s1_888 = s1_184 + 0x4E0811A1<32> + a7_851
	word32 a7_892 = ((~t6_863 | t1_887) ^ t3_875) + s1_888
	word32 a7_899 = (a7_892 << 21<i32> | a7_892 >>u 0xB<u32>) + t1_887
	word32 a5_904 = ((~t3_875 | a7_899) ^ t1_887) + (t6_863 + (s0_66 + 0xF7537E82<32>))
	word32 a5_911 = (a5_904 >>u 26<i32> | a5_904 << 6<u32>) + a7_899
	word32 a4_916 = ((~t1_887 | a5_911) ^ a7_899) + (t3_875 + (t2_149 + 0xBD3AF235<32>))
	word32 a4_923 = (a4_916 >>u 22<i32> | a4_916 << 0xA<u32>) + a5_911
	word32 a3_928 = ((~a7_899 | a4_923) ^ a5_911) + (t1_887 + (t0_73 + 0x2AD7D2BB<32>))
	word32 a3_933 = (a3_928 >>u 17<i32> | a3_928 << 0xF<u32>) + a4_923
	word32 a0_205 = Mem27[a2_200 + 12<i32>:word32]
	Mem949[a0_205 + 8<i32>:word32] = t5_172 + a5_911
	word32 a5_941 = ((~a5_911 | a3_933) ^ a4_923) + (a7_899 + (t4_121 + 0xEB86D391<32>))
	Mem950[dwArgE4 + (a5_941 >>u 0xB<u32> | a5_941 << 21<i32>) + 12<i32>:word32] = a0_205
	Mem951[a3_933 + a1 + 16<i32>:word32] = a0_205
	Mem952[a4_923 + a6_176 + 20<i32>:word32] = a0_205
	0<32> = dwArg0148
	0<32> = dwArg3C
	s1Out = s1_888
	s2Out = s2_852
	s3Out = s3_840
	s4Out = dwArg98
	s5Out = 0x655B59C3<32>
	s6Out = 0xFC93A039<32>
	return dwLoc04
mbedtls_md5_process_exit:


word32 mbedtls_md5_update.part.0(word32 a1, word32 a2, word32 a5, word32 dwArg1C, word32 dwArg48, word32 dwArgA8, word32 dwArgC4, word32 dwArg0128, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_md5_update
//      mbedtls_md5_finish
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] Stack +00C4:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a5 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_md5_update.part.0_entry:
l23097C7E:
	word32 a0_21 = Mem19[a5:word32]
	word32 a5_27 = a5 + a2
	Mem28[a5_27:word32] = a0_21
	word32 s1_100 = a0_21
	word32 s2_115 = a1
	word32 s3_116 = a5 & 63<i32>
	word32 s0_111 = a2
	branch a5_27 >=u a2 l23097CAA
l23097CA4:
	Mem32[a5_27 + 5<32>:word32] = Mem28[a5_27 + 4<i32>:word32]
l23097CAA:
	branch (a5 & 63<i32>) == 0<32> l23097CDC
l23097CAE:
	word32 s4_35 = 64<i32> - (a5 & 63<i32>)
	branch a2 <u s4_35 l23097CDC
l23097CBA:
	word32 a7_323
	word32 a6_322
	word32 a5_321
	word32 a3_319
	word32 a4_320
	word32 a1_317
	word32 a2_318
	memcpy(a0_21 + 24<i32> + (a5 & 63<i32>), a1, s4_35, out a1_317, out a2_318, out a3_319, out a4_320, out a5_321, out a6_322, out a7_323)
	word32 s2_73
	word32 s4_75
	word32 s5_325
	word32 s6_326
	word32 s3_324
	s0_111 = mbedtls_md5_process(a0_21, a0_21 + 24<i32>, dwArg1C, dwArgC4, dwArg0128, out s1_100, out s2_73, out s3_324, out s4_75, out s5_325, out s6_326)
	s2_115 = s2_73 + s4_75
	s3_116 = 0<32>
l23097CDC:
	word32 s4_131 = s0_111
	word32 s6_119 = s2_115 + s0_111
	word32 s5_118 = 63<i32>
l23097CF2:
	word32 a1_98 = s6_119 - s4_131
	branch s5_118 <u s4_131 l23097CE8
l23097CE8:
	word32 s4_117
	s0_111 = mbedtls_md5_process(s1_100, a1_98, dwArg1C, dwArgC4, dwArg0128, out s1_100, out s2_115, out s3_116, out s4_117, out s5_118, out s6_119)
	s4_131 = s4_117 + -64<i32>
l23097CFA:
	word32 a2_133 = s0_111 >>u 6<u32>
	word32 a1_138 = (a2_133 << 6<u32>) + s2_115
	branch a2_133 + -64<i32> + s0_111 == 0<32> l23097D2C
l23097D2C:
	0<32> = dwArgA8
	a2Out = dwArg48
	a5Out = -64<i32>
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	s6Out = <invalid>
	return <invalid>
l23097D10:
	0<32> = dwArgA8
	word32 a0_157 = s1_100 + 24<i32> + s3_116
l23097D28_thunk_memcpy:
	word32 a5_161
	word32 a2_164
	word32 a3_328
	word32 a4_329
	word32 a1_327
	word32 a6_330
	word32 a7_331
	memcpy(a0_157, a1_138, dwArg48, out a1_327, out a2_164, out a3_328, out a4_329, out a5_161, out a6_330, out a7_331)
	a2Out = a2_164
	a5Out = a5_161
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	s5Out = <invalid>
	s6Out = <invalid>
	return <invalid>
mbedtls_md5_update.part.0_exit:


word32 mbedtls_md5_update(word32 a1, word32 a2, word32 a5, word32 dwArg1C, word32 dwArg48, word32 dwArgA8, word32 dwArgC4, word32 dwArg0128, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      md5_update_wrap
//      pem_aes_decrypt
//      mbedtls_md5_finish
//      mbedtls_md5
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] Stack +00C4:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a5 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_md5_update_entry:
l23097D40:
	branch a2 == 0<32> l23097D46
l23097D46:
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return a2
l23097D42:
l23097D42_thunk_mbedtls_md5_update.part.0:
	word32 a2_9
	word32 a5_12
	word32 s2_19
	word32 s3_20
	word32 s4_21
	word32 s5_98
	word32 s6_99
	mbedtls_md5_update.part.0(a1, a2, a5, dwArg1C, dwArg48, dwArgA8, dwArgC4, dwArg0128, out a2_9, out a5_12, out s2_19, out s3_20, out s4_21, out s5_98, out s6_99)
	a5Out = a5_12
	s2Out = s2_19
	s3Out = s3_20
	s4Out = s4_21
	return a2_9
mbedtls_md5_update_exit:


word32 mbedtls_md5_finish(word32 a2, word32 dwArg28, word32 dwArg88, word32 dwArgA4, word32 dwArg0108, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      md5_finish_wrap
//      pem_aes_decrypt
//      mbedtls_md5
// MayUse:  a2:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] Stack +00A4:[0..31] Stack +0108:[0..31]
// LiveOut: s0 s1 s2 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_md5_finish_entry:
l23097D48:
	word32 a5_25
	branch (a2 & 63<i32>) >u 55<i32> l23097E16
l23097E16:
	a5_25 = 120<i32>
l23097D74:
	a5_25 = 56<i32>
l23097D78:
	word32 a5_41
	word32 s4_161
	word32 s3_160
	word32 s2_159
	mbedtls_md5_update(0x230C9918<32>, a5_25 - (a2 & 63<i32>), a5_25, dwLoc04, dwArg28, dwArg88, dwArgA4, dwArg0108, out a5_41, out s2_159, out s3_160, out s4_161)
	word32 a5_72
	word32 s2_79
	word32 s5_82
	word32 s6_83
	word32 a2_162
	word32 s3_163
	word32 s4_164
	word32 s1_76 = mbedtls_md5_update.part.0(fp + 0xFFFFFFE8<32>, 8<32>, a5_41, dwLoc04, dwArg28, dwArg88, dwArgA4, dwArg0108, out a2_162, out a5_72, out s2_79, out s3_163, out s4_164, out s5_82, out s6_83)
	Mem96[s1_76:byte] = SLICE(a5_72, byte, 0)
	word32 s0_97 = Mem96[a5_72 + 8<i32>:word32]
	Mem99[s1_76 + 1<i32>:byte] = SLICE(a5_72 >>u 8<i32>, byte, 0)
	Mem101[s1_76 + 2<i32>:byte] = SLICE(CONVERT(Mem99[s0_97 + 10<i32>:uint16], uint16, word32), byte, 0)
	word32 a5_102 = CONVERT(Mem101[s0_97 + 11<i32>:byte], byte, word32)
	Mem103[s1_76 + 3<i32>:byte] = SLICE(a5_102, byte, 0)
	Mem105[s1_76 + 4<i32>:byte] = SLICE(a5_102, byte, 0)
	word32 s0_106 = Mem105[a5_102 + 12<i32>:word32]
	Mem108[s1_76 + 5<i32>:byte] = SLICE(a5_102 >>u 8<i32>, byte, 0)
	Mem110[s1_76 + 6<i32>:byte] = SLICE(CONVERT(Mem108[s0_106 + 14<i32>:uint16], uint16, word32), byte, 0)
	word32 a5_111 = CONVERT(Mem110[s0_106 + 15<i32>:byte], byte, word32)
	Mem112[s1_76 + 7<i32>:byte] = SLICE(a5_111, byte, 0)
	Mem114[s1_76 + 8<i32>:byte] = SLICE(a5_111, byte, 0)
	word32 s0_115 = Mem114[a5_111 + 16<i32>:word32]
	Mem117[s1_76 + 9<i32>:byte] = SLICE(a5_111 >>u 8<i32>, byte, 0)
	Mem119[s1_76 + 10<i32>:byte] = SLICE(CONVERT(Mem117[s0_115 + 18<i32>:uint16], uint16, word32), byte, 0)
	word32 a5_120 = CONVERT(Mem119[s0_115 + 19<i32>:byte], byte, word32)
	Mem121[s1_76 + 11<i32>:byte] = SLICE(a5_120, byte, 0)
	Mem123[s1_76 + 12<i32>:byte] = SLICE(a5_120, byte, 0)
	word32 s0_124 = Mem123[a5_120 + 20<i32>:word32]
	Mem126[s1_76 + 13<i32>:byte] = SLICE(a5_120 >>u 8<i32>, byte, 0)
	Mem128[s1_76 + 14<i32>:byte] = SLICE(CONVERT(Mem126[s0_124 + 22<i32>:uint16], uint16, word32), byte, 0)
	Mem130[s1_76 + 15<i32>:byte] = SLICE(CONVERT(Mem128[s0_124 + 23<i32>:byte], byte, word32), byte, 0)
	s1Out = s1_76
	s2Out = s2_79
	s5Out = s5_82
	s6Out = s6_83
	return s0_124
mbedtls_md5_finish_exit:


void mbedtls_md5(word32 ra, word32 a0, word32 dwArg08, word32 dwArg24, word32 dwArg28, word32 dwArg44, word32 dwArg88, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_md5_entry:
l23097E1C:
	word32 a1_18
	mbedtls_md5_init(ra, fp + -104<i32>, out a1_18)
	word32 a5_114
	word32 s2_115
	word32 s3_116
	word32 s4_117
	word32 s1_118
	word32 s2_119
	word32 s5_120
	word32 s6_121
	mbedtls_md5_finish(mbedtls_md5_update(a0, a1_18, mbedtls_md5_starts(fp + -104<i32>), dwLoc64, dwLoc38, dwArg28, dwArg44, dwArgA8, out a5_114, out s2_115, out s3_116, out s4_117), dwLoc58, dwArg08, dwArg24, dwArg88, out s1_118, out s2_119, out s5_120, out s6_121)
	mbedtls_md5_free(fp + -104<i32>)
	return
mbedtls_md5_exit:


word32 mbedtls_sha1_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha1_ctx_alloc
//      mbedtls_sha1
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a1
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_sha1_init_entry:
l23097E5A:
l23097E60_thunk_memset:
	word32 a1_8
	word32 t1_16
	word32 a0_17
	word32 a2_18
	word32 a3_19
	word32 a4_20
	word32 a5_21
	memset(ra, a0, 0<32>, 92<i32>, out t1_16, out a0_17, out a1_8, out a2_18, out a3_19, out a4_20, out a5_21)
	return a1_8
mbedtls_sha1_init_exit:


word32 mbedtls_sha1_free(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha1_ctx_free
//      mbedtls_sha1
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_sha1_free_entry:
l23097E64:
	a0_5 = a0
	branch a0 != 0<32> l23097E72
l23097E72:
	word32 a0_5
	branch a0_5 != a0 + 92<i32> l23097E6C
l23097E6C:
	Mem7[a0_5:byte] = 0<8>
	a0_5 = a0_5 + 1<32>
l23097E76:
l23097E6A:
	return a0 + 92<i32>
mbedtls_sha1_free_exit:


void mbedtls_sha1_clone(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha1_clone_wrap
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
mbedtls_sha1_clone_entry:
l23097E78:
	word32 a1_26
	word32 a2_27
	word32 a3_28
	word32 a4_29
	word32 a5_30
	word32 a6_31
	word32 a7_32
	memcpy(a0, a1, 92<i32>, out a1_26, out a2_27, out a3_28, out a4_29, out a5_30, out a6_31, out a7_32)
	return
mbedtls_sha1_clone_exit:


word32 mbedtls_sha1_starts(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha1_starts_wrap
//      mbedtls_sha1
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
mbedtls_sha1_starts_entry:
l23097E8A:
	Mem6[0x67452309<32>:word32] = a0
	Mem9[0xEFCDAB95<32>:word32] = a0
	Mem12[0x98BADD0E<32>:word32] = a0
	Mem15[0x1032548A<32>:word32] = a0
	Mem18[a0:word32] = 0<32>
	Mem19[a0 + 4<i32>:word32] = 0<32>
	Mem20[0xC3D2E208<32>:word32] = a0
	return 0xC3D2E1F0<32>
mbedtls_sha1_starts_exit:


word32 mbedtls_sha1_process(word32 a0, word32 a1, word32 dwArg3C, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha1_process_wrap
//      mbedtls_sha1_update
// MayUse:  a0:[0..31] a1:[0..31] Stack +003C:[0..31] Stack +0148:[0..31]
// LiveOut: s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha1_process_entry:
l23097EC6:
	word32 a1_190 = CONVERT(Mem27[a1 + 62<i32>:byte], byte, word32)
	word32 a0_194 = Mem27[(a1_190 << 8<i32>) + 20<i32>:word32]
	word32 s4_169 = Mem27[a0 + 16<i32>:int32]
	word32 s3_173 = Mem27[a0 + 8<i32>:int32]
	word32 a2_43 = CONVERT(Mem27[a1:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) << 8<i32>
	word32 s6_213 = Mem27[a0_194 + 12<i32>:int32] << 30<i32> | Mem27[a0_194 + 12<i32>:int32] >>u 2<u32>
	word32 a4_54 = CONVERT(Mem27[a1 + 4<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 5<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 7<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 6<i32>:byte], byte, word32) << 8<i32>
	word32 a1_210 = (s3_173 << 5<u32> | s3_173 >>u 0x1B<u32>) + (Mem27[a0 + 24<i32>:int32] + 0x5A827999<32>) + ((s4_169 ^ a1_190 << 8<i32>) & Mem27[a0_194 + 12<i32>:int32] ^ Mem27[a0_194 + 20<i32>:int32]) + a2_43
	word32 s11_226 = s3_173 << 0x1E<u32> | s3_173 >>u 2<u32>
	word32 a3_62 = CONVERT(Mem27[a1 + 8<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 9<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 11<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 10<i32>:byte], byte, word32) << 8<i32>
	word32 s7_224 = (a1_210 << 5<u32> | a1_210 >>u 0x1B<u32>) + ((((s4_169 ^ s6_213) & s3_173 ^ s4_169) + (Mem27[a0_194 + 20<i32>:int32] + 0x5A827999<32>)) + a4_54)
	word32 a1_238 = a1_210 << 30<i32> | a1_210 >>u 2<u32>
	word32 t0_70 = CONVERT(Mem27[a1 + 12<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 13<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 15<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 14<i32>:byte], byte, word32) << 8<i32>
	word32 s9_239 = (s7_224 << 5<u32> | s7_224 >>u 0x1B<u32>) + (((s6_213 ^ s11_226) & a1_210 ^ s6_213) + ((s4_169 + 0x5A827999<32>) + a3_62))
	word32 s7_251 = s7_224 << 30<i32> | s7_224 >>u 2<u32>
	word32 t5_80 = CONVERT(Mem27[a1 + 16<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 17<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 19<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 18<i32>:byte], byte, word32) << 8<i32>
	word32 s10_252 = (s9_239 << 5<u32> | s9_239 >>u 0x1B<u32>) + (((s11_226 ^ a1_238) & s7_224 ^ s11_226) + ((s6_213 + 0x5A827999<32>) + t0_70))
	word32 s9_264 = s9_239 << 30<i32> | s9_239 >>u 2<u32>
	word32 t3_94 = CONVERT(Mem27[a1 + 20<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 21<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 23<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 22<i32>:byte], byte, word32) << 8<i32>
	word32 s6_265 = (s10_252 << 5<u32> | s10_252 >>u 0x1B<u32>) + (((a1_238 ^ s7_251) & s9_239 ^ a1_238) + ((s11_226 + 0x5A827999<32>) + t5_80))
	word32 a1_278 = s10_252 << 0x1E<u32> | s10_252 >>u 2<u32>
	word32 a7_108 = CONVERT(Mem27[a1 + 24<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 25<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 27<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 26<i32>:byte], byte, word32) << 8<i32>
	word32 s11_275 = (s6_265 << 5<u32> | s6_265 >>u 0x1B<u32>) + (((s7_251 ^ s9_264) & s10_252 ^ s7_251) + ((t3_94 + 0x5A827999<32>) + a1_238))
	word32 s6_290 = s6_265 << 30<i32> | s6_265 >>u 2<u32>
	word32 s8_118 = CONVERT(Mem27[a1 + 28<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 29<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 31<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 30<i32>:byte], byte, word32) << 8<i32>
	word32 s5_293 = (s11_275 << 5<u32> | s11_275 >>u 0x1B<u32>) + (((s9_264 ^ a1_278) & s6_265 ^ s9_264) + ((a7_108 + 0x5A827999<32>) + s7_251))
	word32 s11_303 = s11_275 << 30<i32> | s11_275 >>u 2<u32>
	word32 t6_126 = CONVERT(Mem27[a1 + 32<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 33<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 35<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 34<i32>:byte], byte, word32) << 8<i32>
	word32 s9_304 = (s5_293 << 5<u32> | s5_293 >>u 0x1B<u32>) + (((a1_278 ^ s6_290) & s11_275 ^ a1_278) + (s9_264 + (s8_118 + 0x5A827999<32>)))
	word32 s5_316 = s5_293 << 30<i32> | s5_293 >>u 2<u32>
	word32 t4_134 = CONVERT(Mem27[a1 + 36<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 37<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 39<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 38<i32>:byte], byte, word32) << 8<i32>
	word32 s10_319 = (s9_304 << 5<u32> | s9_304 >>u 0x1B<u32>) + (((s6_290 ^ s11_303) & s5_293 ^ s6_290) + ((t6_126 + 0x5A827999<32>) + a1_278))
	word32 s9_329 = s9_304 << 30<i32> | s9_304 >>u 2<u32>
	word32 t1_142 = CONVERT(Mem27[a1 + 40<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 41<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 43<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 42<i32>:byte], byte, word32) << 8<i32>
	word32 s6_330 = (s10_319 << 5<u32> | s10_319 >>u 0x1B<u32>) + (((s11_303 ^ s5_316) & s9_304 ^ s11_303) + (s6_290 + (t4_134 + 0x5A827999<32>)))
	word32 s10_342 = s10_319 << 30<i32> | s10_319 >>u 2<u32>
	word32 a6_150 = CONVERT(Mem27[a1 + 44<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 45<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 47<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 46<i32>:byte], byte, word32) << 8<i32>
	word32 s7_345 = (s6_330 << 5<u32> | s6_330 >>u 0x1B<u32>) + (((s5_316 ^ s9_329) & s10_319 ^ s5_316) + ((t1_142 + 0x5A827999<32>) + s11_303))
	word32 s6_355 = s6_330 << 30<i32> | s6_330 >>u 2<u32>
	word32 a5_160 = CONVERT(Mem27[a1 + 48<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 49<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 51<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 50<i32>:byte], byte, word32) << 8<i32>
	word32 s5_358 = (s7_345 << 5<u32> | s7_345 >>u 0x1B<u32>) + (((s9_329 ^ s10_342) & s6_330 ^ s9_329) + (s5_316 + (a6_150 + 0x5A827999<32>)))
	word32 s7_368 = s7_345 << 30<i32> | s7_345 >>u 2<u32>
	word32 s1_175 = CONVERT(Mem27[a1 + 52<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 53<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 55<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 54<i32>:byte], byte, word32) << 8<i32>
	word32 a1_371 = (s5_358 << 5<u32> | s5_358 >>u 0x1B<u32>) + (((s10_342 ^ s6_355) & s7_345 ^ s10_342) + ((a5_160 + 0x5A827999<32>) + s9_329))
	word32 s5_381 = s5_358 << 30<i32> | s5_358 >>u 2<u32>
	word32 s0_185 = CONVERT(Mem27[a1 + 56<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 57<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 59<i32>:byte], byte, word32) | CONVERT(Mem27[a1 + 58<i32>:byte], byte, word32) << 8<i32>
	word32 s10_382 = (a1_371 << 5<u32> | a1_371 >>u 0x1B<u32>) + (((s6_355 ^ s7_368) & s5_358 ^ s6_355) + (s10_342 + (s1_175 + 0x5A827999<32>)))
	word32 a2_410 = a2_43 ^ a3_62 ^ t6_126 ^ s1_175
	word32 a1_394 = a1_371 << 30<i32> | a1_371 >>u 2<u32>
	word32 t2_193 = CONVERT(Mem27[a1 + 60<i32>:byte], byte, word32) << 24<i32> | CONVERT(Mem27[a1 + 61<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem27[a1 + 63<i32>:byte], byte, word32) | a1_190 << 8<i32>
	word32 s11_397 = (s10_382 << 5<u32> | s10_382 >>u 0x1B<u32>) + (((s7_368 ^ s5_381) & a1_371 ^ s7_368) + ((s0_185 + 0x5A827999<32>) + s6_355))
	word32 a4_425 = a4_54 ^ t0_70 ^ t4_134 ^ s0_185
	word32 s10_409 = s10_382 << 30<i32> | s10_382 >>u 2<u32>
	word32 a2_415 = a2_410 >>u 31<i32> | a2_410 << 1<u32>
	word32 s7_411 = (s11_397 << 5<u32> | s11_397 >>u 0x1B<u32>) + (((s5_381 ^ a1_394) & s10_382 ^ s5_381) + (s7_368 + (t2_193 + 0x5A827999<32>)))
	word32 a3_448 = a3_62 ^ t5_80 ^ t1_142 ^ t2_193
	word32 s11_429 = s11_397 << 30<i32> | s11_397 >>u 2<u32>
	word32 a4_432 = a4_425 >>u 31<i32> | a4_425 << 1<u32>
	word32 s9_435 = (s7_411 << 5<u32> | s7_411 >>u 0x1B<u32>) + (((a1_394 ^ s10_409) & s11_397 ^ a1_394) + ((a2_415 + 0x5A827999<32>) + s5_381))
	word32 t0_463 = t0_70 ^ t3_94 ^ a6_150 ^ a2_415
	word32 s7_447 = s7_411 << 30<i32> | s7_411 >>u 2<u32>
	word32 a3_453 = a3_448 >>u 31<i32> | a3_448 << 1<u32>
	word32 a1_449 = (s9_435 << 5<u32> | s9_435 >>u 0x1B<u32>) + (((s10_409 ^ s11_429) & s7_411 ^ s10_409) + (a1_394 + (a4_432 + 0x5A827999<32>)))
	word32 t5_482 = t5_80 ^ a7_108 ^ a5_160 ^ a4_432
	word32 s9_467 = s9_435 << 30<i32> | s9_435 >>u 2<u32>
	word32 t0_470 = t0_463 >>u 0x1F<u32> | t0_463 << 1<u32>
	word32 s6_474 = (a1_449 << 5<u32> | a1_449 >>u 0x1B<u32>) + (((s11_429 ^ s7_447) & s9_435 ^ s11_429) + ((a3_453 + 0x5A827999<32>) + s10_409))
	word32 t3_502 = t3_94 ^ s8_118 ^ s1_175 ^ a3_453
	word32 a1_486 = a1_449 << 30<i32> | a1_449 >>u 2<u32>
	word32 t5_489 = t5_482 >>u 0x1F<u32> | t5_482 << 1<u32>
	word32 s5_492 = (s6_474 << 5<u32> | s6_474 >>u 0x1B<u32>) + (((s7_447 ^ s9_467) & a1_449 ^ s7_447) + ((t0_470 + 0x5A827999<32>) + s11_429))
	word32 a7_520 = a7_108 ^ t6_126 ^ s0_185 ^ t0_470
	word32 s6_506 = s6_474 << 30<i32> | s6_474 >>u 2<u32>
	word32 t3_509 = t3_502 >>u 0x1F<u32> | t3_502 << 1<u32>
	word32 s7_511 = (s5_492 << 5<u32> | s5_492 >>u 0x1B<u32>) + (((s9_467 ^ a1_486) ^ s6_474) + (s7_447 + (t5_489 + 0x6ED9EBA1<32>)))
	word32 a1_542 = s8_118 ^ t4_134 ^ t2_193 ^ t5_489
	word32 s5_524 = s5_492 << 30<i32> | s5_492 >>u 2<u32>
	word32 a7_528 = a7_520 >>u 0x1F<u32> | a7_520 << 1<u32>
	word32 s10_527 = (s7_511 << 5<u32> | s7_511 >>u 0x1B<u32>) + (((a1_486 ^ s6_506) ^ s5_492) + ((t3_509 + 0x6ED9EBA1<32>) + s9_467))
	word32 t6_556 = t6_126 ^ t1_142 ^ a2_415 ^ t3_509
	word32 s7_539 = s7_511 << 30<i32> | s7_511 >>u 2<u32>
	word32 a1_545 = a1_542 >>u 31<i32> | a1_542 << 1<u32>
	word32 s11_547 = (s10_527 << 5<u32> | s10_527 >>u 0x1B<u32>) + (((s6_506 ^ s5_524) ^ s7_511) + ((a7_528 + 0x6ED9EBA1<32>) + a1_486))
	word32 t4_574 = t4_134 ^ a6_150 ^ a4_432 ^ a7_528
	word32 s10_560 = s10_527 << 30<i32> | s10_527 >>u 2<u32>
	word32 t6_563 = t6_556 >>u 0x1F<u32> | t6_556 << 1<u32>
	word32 s6_565 = (s11_547 << 5<u32> | s11_547 >>u 0x1B<u32>) + (((s5_524 ^ s7_539) ^ s10_527) + (s6_506 + (a1_545 + 0x6ED9EBA1<32>)))
	word32 t1_592 = t1_142 ^ a5_160 ^ a3_453 ^ a1_545
	word32 s11_578 = s11_547 << 30<i32> | s11_547 >>u 2<u32>
	word32 t4_581 = t4_574 >>u 0x1F<u32> | t4_574 << 1<u32>
	word32 s5_583 = (s6_565 << 5<u32> | s6_565 >>u 0x1B<u32>) + (((s7_539 ^ s10_560) ^ s11_547) + (s5_524 + (t6_563 + 0x6ED9EBA1<32>)))
	word32 a6_610 = a6_150 ^ s1_175 ^ t0_470 ^ t6_563
	word32 s6_596 = s6_565 << 30<i32> | s6_565 >>u 2<u32>
	word32 t1_600 = t1_592 >>u 0x1F<u32> | t1_592 << 1<u32>
	word32 s7_599 = (s5_583 << 5<u32> | s5_583 >>u 0x1B<u32>) + (((s10_560 ^ s11_578) ^ s6_565) + (s7_539 + (t4_581 + 0x6ED9EBA1<32>)))
	word32 a5_628 = a5_160 ^ s0_185 ^ t5_489 ^ t4_581
	word32 s5_614 = s5_583 << 30<i32> | s5_583 >>u 2<u32>
	word32 a6_617 = a6_610 >>u 0x1F<u32> | a6_610 << 1<u32>
	word32 s9_619 = (s7_599 << 5<u32> | s7_599 >>u 0x1B<u32>) + (((s11_578 ^ s6_596) ^ s5_583) + ((t1_600 + 0x6ED9EBA1<32>) + s10_560))
	word32 s1_646 = s1_175 ^ t2_193 ^ t3_509 ^ t1_600
	word32 s7_632 = s7_599 << 30<i32> | s7_599 >>u 2<u32>
	word32 a5_635 = a5_628 >>u 31<i32> | a5_628 << 1<u32>
	word32 s8_637 = (s9_619 << 5<u32> | s9_619 >>u 0x1B<u32>) + (((s6_596 ^ s5_614) ^ s7_599) + ((a6_617 + 0x6ED9EBA1<32>) + s11_578))
	word32 s0_664 = s0_185 ^ a2_415 ^ a7_528 ^ a6_617
	word32 s9_650 = s9_619 << 30<i32> | s9_619 >>u 2<u32>
	word32 s1_653 = s1_646 >>u 31<i32> | s1_646 << 1<u32>
	word32 s6_655 = (s8_637 << 5<u32> | s8_637 >>u 0x1B<u32>) + (((s5_614 ^ s7_632) ^ s9_619) + (s6_596 + (a5_635 + 0x6ED9EBA1<32>)))
	word32 t2_682 = t2_193 ^ a4_432 ^ a1_545 ^ a5_635
	word32 s8_668 = s8_637 << 30<i32> | s8_637 >>u 2<u32>
	word32 s0_671 = s0_664 >>u 31<i32> | s0_664 << 1<u32>
	word32 s5_673 = (s6_655 << 5<u32> | s6_655 >>u 0x1B<u32>) + (((s7_632 ^ s9_650) ^ s8_637) + (s5_614 + (s1_653 + 0x6ED9EBA1<32>)))
	word32 a2_700 = a2_415 ^ a3_453 ^ t6_563 ^ s1_653
	word32 s6_686 = s6_655 << 30<i32> | s6_655 >>u 2<u32>
	word32 t2_689 = t2_682 >>u 0x1F<u32> | t2_682 << 1<u32>
	word32 s7_691 = (s5_673 << 5<u32> | s5_673 >>u 0x1B<u32>) + (((s9_650 ^ s8_668) ^ s6_655) + (s7_632 + (s0_671 + 0x6ED9EBA1<32>)))
	word32 a4_718 = a4_432 ^ t0_470 ^ t4_581 ^ s0_671
	word32 s5_704 = s5_673 << 30<i32> | s5_673 >>u 2<u32>
	word32 a2_708 = a2_700 >>u 31<i32> | a2_700 << 1<u32>
	word32 s10_707 = (s7_691 << 5<u32> | s7_691 >>u 0x1B<u32>) + (((s8_668 ^ s6_686) ^ s5_673) + ((t2_689 + 0x6ED9EBA1<32>) + s9_650))
	word32 a3_736 = a3_453 ^ t5_489 ^ t1_600 ^ t2_689
	word32 s7_722 = s7_691 << 30<i32> | s7_691 >>u 2<u32>
	word32 a4_725 = a4_718 >>u 31<i32> | a4_718 << 1<u32>
	word32 s11_727 = (s10_707 << 5<u32> | s10_707 >>u 0x1B<u32>) + (((s6_686 ^ s5_704) ^ s7_691) + ((a2_708 + 0x6ED9EBA1<32>) + s8_668))
	word32 t0_754 = t0_470 ^ t3_509 ^ a6_617 ^ a2_708
	word32 s10_740 = s10_707 << 30<i32> | s10_707 >>u 2<u32>
	word32 a3_743 = a3_736 >>u 31<i32> | a3_736 << 1<u32>
	word32 s6_745 = (s11_727 << 5<u32> | s11_727 >>u 0x1B<u32>) + (((s5_704 ^ s7_722) ^ s10_707) + (s6_686 + (a4_725 + 0x6ED9EBA1<32>)))
	word32 t5_772 = t5_489 ^ a7_528 ^ a5_635 ^ a4_725
	word32 s11_758 = s11_727 << 30<i32> | s11_727 >>u 2<u32>
	word32 t0_762 = t0_754 >>u 0x1F<u32> | t0_754 << 1<u32>
	word32 s5_761 = (s6_745 << 5<u32> | s6_745 >>u 0x1B<u32>) + (((s7_722 ^ s10_740) ^ s11_727) + (s5_704 + (a3_743 + 0x6ED9EBA1<32>)))
	word32 t3_790 = t3_509 ^ a1_545 ^ s1_653 ^ a3_743
	word32 s6_776 = s6_745 << 30<i32> | s6_745 >>u 2<u32>
	word32 t5_780 = t5_772 >>u 0x1F<u32> | t5_772 << 1<u32>
	word32 s9_779 = (s5_761 << 5<u32> | s5_761 >>u 0x1B<u32>) + (((s10_740 ^ s11_758) ^ s6_745) + ((t0_762 + 0x6ED9EBA1<32>) + s7_722))
	word32 a7_808 = a7_528 ^ t6_563 ^ s0_671 ^ t0_762
	word32 s5_794 = s5_761 << 30<i32> | s5_761 >>u 2<u32>
	word32 t3_797 = t3_790 >>u 0x1F<u32> | t3_790 << 1<u32>
	word32 s8_799 = (s9_779 << 5<u32> | s9_779 >>u 0x1B<u32>) + (((s11_758 ^ s6_776) ^ s5_761) + ((t5_780 + 0x6ED9EBA1<32>) + s10_740))
	word32 a1_826 = a1_545 ^ t4_581 ^ t2_689 ^ t5_780
	word32 s9_812 = s9_779 << 30<i32> | s9_779 >>u 2<u32>
	word32 a7_815 = a7_808 >>u 0x1F<u32> | a7_808 << 1<u32>
	word32 s11_817 = (s8_799 << 5<u32> | s8_799 >>u 0x1B<u32>) + (((s6_776 ^ s5_794) ^ s9_779) + (s11_758 + (t3_797 + 0x6ED9EBA1<32>)))
	word32 t6_844 = t6_563 ^ t1_600 ^ a2_708 ^ t3_797
	word32 s8_830 = s8_799 << 30<i32> | s8_799 >>u 2<u32>
	word32 a1_833 = a1_826 >>u 31<i32> | a1_826 << 1<u32>
	word32 s7_834 = (s11_817 << 5<u32> | s11_817 >>u 0x1B<u32>) + (((s5_794 ^ s9_812) ^ s8_799) + ((a7_815 + 0x6ED9EBA1<32>) + s6_776))
	word32 t4_870 = t4_581 ^ a6_617 ^ a4_725 ^ a7_815
	word32 t6_851 = t6_844 >>u 0x1F<u32> | t6_844 << 1<u32>
	word32 s10_854 = (s7_834 << 5<u32> | s7_834 >>u 0x1B<u32>) + (((s9_812 ^ s8_830) ^ s11_817) + ((a1_833 + 0x6ED9EBA1<32>) + s5_794))
	word32 s11_848 = s11_817 << 30<i32> | s11_817 >>u 2<u32>
	word32 t1_886 = t1_600 ^ a5_635 ^ a3_743 ^ a1_833
	word32 s7_869 = s7_834 << 30<i32> | s7_834 >>u 2<u32>
	word32 t4_875 = t4_870 >>u 0x1F<u32> | t4_870 << 1<u32>
	word32 s9_871 = ((s7_834 | s11_848) & s8_830 | s7_834 & s11_848) + (((t6_851 + 0x8F1BBCDC<32>) + s9_812) + (s10_854 << 5<u32> | s10_854 >>u 0x1B<u32>))
	word32 a6_906 = a6_617 ^ s1_653 ^ t0_762 ^ t6_851
	word32 t1_893 = t1_886 >>u 0x1F<u32> | t1_886 << 1<u32>
	word32 s6_894 = (s9_871 << 5<u32> | s9_871 >>u 0x1B<u32>) + (((s10_854 | s7_869) & s11_848 | s10_854 & s7_869) + ((t4_875 + 0x8F1BBCDC<32>) + s8_830))
	word32 s10_890 = s10_854 << 30<i32> | s10_854 >>u 2<u32>
	word32 a5_926 = a5_635 ^ s0_671 ^ t5_780 ^ t4_875
	word32 s9_910 = s9_871 << 30<i32> | s9_871 >>u 2<u32>
	word32 a6_913 = a6_906 >>u 0x1F<u32> | a6_906 << 1<u32>
	word32 s11_915 = ((s9_871 | s10_890) & s7_869 | s9_871 & s10_890) + (((t1_893 + 0x8F1BBCDC<32>) + s11_848) + (s6_894 << 5<u32> | s6_894 >>u 0x1B<u32>))
	word32 s1_950 = s1_653 ^ t2_689 ^ t3_797 ^ t1_893
	word32 a5_933 = a5_926 >>u 31<i32> | a5_926 << 1<u32>
	word32 s5_934 = (s11_915 << 5<u32> | s11_915 >>u 0x1B<u32>) + (((s6_894 | s9_910) & s10_890 | s6_894 & s9_910) + ((a6_913 + 0x8F1BBCDC<32>) + s7_869))
	word32 s6_930 = s6_894 << 30<i32> | s6_894 >>u 2<u32>
	word32 s0_966 = s0_671 ^ a2_708 ^ a7_815 ^ a6_913
	word32 s11_949 = s11_915 << 30<i32> | s11_915 >>u 2<u32>
	word32 s1_955 = s1_950 >>u 31<i32> | s1_950 << 1<u32>
	word32 s10_951 = ((s11_915 | s6_930) & s9_910 | s11_915 & s6_930) + (((a5_933 + 0x8F1BBCDC<32>) + s10_890) + (s5_934 << 5<u32> | s5_934 >>u 0x1B<u32>))
	word32 t2_986 = t2_689 ^ a4_725 ^ a1_833 ^ a5_933
	word32 s0_973 = s0_966 >>u 31<i32> | s0_966 << 1<u32>
	word32 s8_974 = (s10_951 << 5<u32> | s10_951 >>u 0x1B<u32>) + (((s5_934 | s11_949) & s6_930 | s5_934 & s11_949) + ((s1_955 + 0x8F1BBCDC<32>) + s9_910))
	word32 s5_970 = s5_934 << 30<i32> | s5_934 >>u 2<u32>
	word32 a2_1006 = a2_708 ^ a3_743 ^ t6_851 ^ s1_955
	word32 s10_990 = s10_951 << 30<i32> | s10_951 >>u 2<u32>
	word32 t2_993 = t2_986 >>u 0x1F<u32> | t2_986 << 1<u32>
	word32 s6_995 = ((s10_951 | s5_970) & s11_949 | s10_951 & s5_970) + (((s0_973 + 0x8F1BBCDC<32>) + s6_930) + (s8_974 << 5<u32> | s8_974 >>u 0x1B<u32>))
	word32 a4_1026 = a4_725 ^ t0_762 ^ t4_875 ^ s0_973
	word32 a2_1013 = a2_1006 >>u 31<i32> | a2_1006 << 1<u32>
	word32 s7_1014 = (s6_995 << 5<u32> | s6_995 >>u 0x1B<u32>) + (((s8_974 | s10_990) & s5_970 | s8_974 & s10_990) + ((t2_993 + 0x8F1BBCDC<32>) + s11_949))
	word32 s8_1010 = s8_974 << 30<i32> | s8_974 >>u 2<u32>
	word32 a3_1046 = a3_743 ^ t5_780 ^ t1_893 ^ t2_993
	word32 s6_1030 = s6_995 << 30<i32> | s6_995 >>u 2<u32>
	word32 a4_1033 = a4_1026 >>u 31<i32> | a4_1026 << 1<u32>
	word32 s5_1035 = ((s6_995 | s8_1010) & s10_990 | s6_995 & s8_1010) + (((a2_1013 + 0x8F1BBCDC<32>) + s5_970) + (s7_1014 << 5<u32> | s7_1014 >>u 0x1B<u32>))
	word32 t0_1066 = t0_762 ^ t3_797 ^ a6_913 ^ a2_1013
	word32 a3_1053 = a3_1046 >>u 31<i32> | a3_1046 << 1<u32>
	word32 s9_1054 = (s5_1035 << 5<u32> | s5_1035 >>u 0x1B<u32>) + (((s7_1014 | s6_1030) & s8_1010 | s7_1014 & s6_1030) + ((a4_1033 + 0x8F1BBCDC<32>) + s10_990))
	word32 s7_1050 = s7_1014 << 30<i32> | s7_1014 >>u 2<u32>
	word32 t5_1086 = t5_780 ^ a7_815 ^ a5_933 ^ a4_1033
	word32 s5_1070 = s5_1035 << 30<i32> | s5_1035 >>u 2<u32>
	word32 t0_1073 = t0_1066 >>u 0x1F<u32> | t0_1066 << 1<u32>
	word32 s8_1075 = ((s5_1035 | s7_1050) & s6_1030 | s5_1035 & s7_1050) + (((a3_1053 + 0x8F1BBCDC<32>) + s8_1010) + (s9_1054 << 5<u32> | s9_1054 >>u 0x1B<u32>))
	word32 t3_1106 = t3_797 ^ a1_833 ^ s1_955 ^ a3_1053
	word32 t5_1093 = t5_1086 >>u 0x1F<u32> | t5_1086 << 1<u32>
	word32 s6_1094 = (s8_1075 << 5<u32> | s8_1075 >>u 0x1B<u32>) + (((s9_1054 | s5_1070) & s7_1050 | s9_1054 & s5_1070) + (s6_1030 + (t0_1073 + 0x8F1BBCDC<32>)))
	word32 s9_1090 = s9_1054 << 30<i32> | s9_1054 >>u 2<u32>
	word32 a7_1126 = a7_815 ^ t6_851 ^ s0_973 ^ t0_1073
	word32 s8_1110 = s8_1075 << 30<i32> | s8_1075 >>u 2<u32>
	word32 t3_1113 = t3_1106 >>u 0x1F<u32> | t3_1106 << 1<u32>
	word32 s7_1115 = ((s8_1075 | s9_1090) & s5_1070 | s8_1075 & s9_1090) + (((t5_1093 + 0x8F1BBCDC<32>) + s7_1050) + (s6_1094 << 5<u32> | s6_1094 >>u 0x1B<u32>))
	word32 a1_1146 = a1_833 ^ t4_875 ^ t2_993 ^ t5_1093
	word32 a7_1133 = a7_1126 >>u 0x1F<u32> | a7_1126 << 1<u32>
	word32 s5_1134 = (s7_1115 << 5<u32> | s7_1115 >>u 0x1B<u32>) + (((s6_1094 | s8_1110) & s9_1090 | s6_1094 & s8_1110) + (s5_1070 + (t3_1113 + 0x8F1BBCDC<32>)))
	word32 s6_1130 = s6_1094 << 30<i32> | s6_1094 >>u 2<u32>
	word32 t6_1166 = t6_851 ^ t1_893 ^ a2_1013 ^ t3_1113
	word32 s7_1150 = s7_1115 << 30<i32> | s7_1115 >>u 2<u32>
	word32 a1_1153 = a1_1146 >>u 31<i32> | a1_1146 << 1<u32>
	word32 s9_1155 = ((s7_1115 | s6_1130) & s8_1110 | s7_1115 & s6_1130) + (((a7_1133 + 0x8F1BBCDC<32>) + s9_1090) + (s5_1134 << 5<u32> | s5_1134 >>u 0x1B<u32>))
	word32 t4_1186 = t4_875 ^ a6_913 ^ a4_1033 ^ a7_1133
	word32 t6_1173 = t6_1166 >>u 0x1F<u32> | t6_1166 << 1<u32>
	word32 s8_1174 = (s9_1155 << 5<u32> | s9_1155 >>u 0x1B<u32>) + (((s5_1134 | s7_1150) & s6_1130 | s5_1134 & s7_1150) + (s8_1110 + (a1_1153 + 0x8F1BBCDC<32>)))
	word32 s5_1170 = s5_1134 << 30<i32> | s5_1134 >>u 2<u32>
	word32 t1_1206 = t1_893 ^ a5_933 ^ a3_1053 ^ a1_1153
	word32 s9_1190 = s9_1155 << 30<i32> | s9_1155 >>u 2<u32>
	word32 t4_1193 = t4_1186 >>u 0x1F<u32> | t4_1186 << 1<u32>
	word32 s6_1195 = ((s9_1155 | s5_1170) & s7_1150 | s9_1155 & s5_1170) + (((t6_1173 + 0x8F1BBCDC<32>) + s6_1130) + (s8_1174 << 5<u32> | s8_1174 >>u 0x1B<u32>))
	word32 a6_1226 = a6_913 ^ s1_955 ^ t0_1073 ^ t6_1173
	word32 t1_1213 = t1_1206 >>u 0x1F<u32> | t1_1206 << 1<u32>
	word32 s7_1214 = (s6_1195 << 5<u32> | s6_1195 >>u 0x1B<u32>) + (((s8_1174 | s9_1190) & s5_1170 | s8_1174 & s9_1190) + (s7_1150 + (t4_1193 + 0x8F1BBCDC<32>)))
	word32 s8_1210 = s8_1174 << 30<i32> | s8_1174 >>u 2<u32>
	word32 a5_1242 = a5_933 ^ s0_973 ^ t5_1093 ^ t4_1193
	word32 s6_1230 = s6_1195 << 30<i32> | s6_1195 >>u 2<u32>
	word32 a6_1233 = a6_1226 >>u 0x1F<u32> | a6_1226 << 1<u32>
	word32 s5_1238 = ((s6_1195 | s8_1210) & s9_1190 | s6_1195 & s8_1210) + (((t1_1213 + 0x8F1BBCDC<32>) + s5_1170) + (s7_1214 << 5<u32> | s7_1214 >>u 0x1B<u32>))
	word32 s1_1266 = s1_955 ^ t2_993 ^ t3_1113 ^ t1_1213
	word32 s7_1245 = s7_1214 << 30<i32> | s7_1214 >>u 2<u32>
	word32 a5_1249 = a5_1242 >>u 31<i32> | a5_1242 << 1<u32>
	word32 s9_1256 = (s5_1238 << 5<u32> | s5_1238 >>u 0x1B<u32>) + (((s7_1214 | s6_1230) & s8_1210 | s7_1214 & s6_1230) + (s9_1190 + (a6_1233 + 0x8F1BBCDC<32>)))
	word32 s0_1284 = s0_973 ^ a2_1013 ^ a7_1133 ^ a6_1233
	word32 s5_1270 = s5_1238 << 30<i32> | s5_1238 >>u 2<u32>
	word32 s1_1273 = s1_1266 >>u 31<i32> | s1_1266 << 1<u32>
	word32 s8_1275 = (s9_1256 << 5<u32> | s9_1256 >>u 0x1B<u32>) + (((s6_1230 ^ s7_1245) ^ s5_1238) + (s8_1210 + (a5_1249 + 0xCA62C1D6<32>)))
	word32 t2_1302 = t2_993 ^ a4_1033 ^ a1_1153 ^ a5_1249
	word32 s9_1288 = s9_1256 << 30<i32> | s9_1256 >>u 2<u32>
	word32 s0_1291 = s0_1284 >>u 31<i32> | s0_1284 << 1<u32>
	word32 s6_1293 = (s8_1275 << 5<u32> | s8_1275 >>u 0x1B<u32>) + (((s7_1245 ^ s5_1270) ^ s9_1256) + (s6_1230 + (s1_1273 + 0xCA62C1D6<32>)))
	word32 a2_1320 = a2_1013 ^ a3_1053 ^ t6_1173 ^ s1_1273
	word32 s8_1306 = s8_1275 << 30<i32> | s8_1275 >>u 2<u32>
	word32 t2_1309 = t2_1302 >>u 0x1F<u32> | t2_1302 << 1<u32>
	word32 s7_1311 = (s6_1293 << 5<u32> | s6_1293 >>u 0x1B<u32>) + (((s5_1270 ^ s9_1288) ^ s8_1275) + (s7_1245 + (s0_1291 + 0xCA62C1D6<32>)))
	word32 a4_1338 = a4_1033 ^ t0_1073 ^ t4_1193 ^ s0_1291
	word32 s6_1324 = s6_1293 << 30<i32> | s6_1293 >>u 2<u32>
	word32 a2_1327 = a2_1320 >>u 31<i32> | a2_1320 << 1<u32>
	word32 s5_1329 = (s7_1311 << 5<u32> | s7_1311 >>u 0x1B<u32>) + (((s9_1288 ^ s8_1306) ^ s6_1293) + (s5_1270 + (t2_1309 + 0xCA62C1D6<32>)))
	word32 a3_1356 = a3_1053 ^ t5_1093 ^ t1_1213 ^ t2_1309
	word32 s7_1342 = s7_1311 << 30<i32> | s7_1311 >>u 2<u32>
	word32 a4_1345 = a4_1338 >>u 31<i32> | a4_1338 << 1<u32>
	word32 s9_1347 = (s5_1329 << 5<u32> | s5_1329 >>u 0x1B<u32>) + (((s8_1306 ^ s6_1324) ^ s7_1311) + (s9_1288 + (a2_1327 + 0xCA62C1D6<32>)))
	word32 t0_1375 = t0_1073 ^ t3_1113 ^ a6_1233 ^ a2_1327
	word32 s5_1360 = s5_1329 << 30<i32> | s5_1329 >>u 2<u32>
	word32 a3_1363 = a3_1356 >>u 31<i32> | a3_1356 << 1<u32>
	word32 s8_1365 = (s9_1347 << 5<u32> | s9_1347 >>u 0x1B<u32>) + (((s6_1324 ^ s7_1342) ^ s5_1329) + (s8_1306 + (a4_1345 + 0xCA62C1D6<32>)))
	word32 t5_1392 = t5_1093 ^ a7_1133 ^ a5_1249 ^ a4_1345
	word32 s9_1378 = s9_1347 << 30<i32> | s9_1347 >>u 2<u32>
	word32 t0_1381 = t0_1375 >>u 0x1F<u32> | t0_1375 << 1<u32>
	word32 s6_1383 = (s8_1365 << 5<u32> | s8_1365 >>u 0x1B<u32>) + (((s7_1342 ^ s5_1360) ^ s9_1347) + (s6_1324 + (a3_1363 + 0xCA62C1D6<32>)))
	word32 t3_1410 = t3_1113 ^ a1_1153 ^ s1_1273 ^ a3_1363
	word32 s8_1396 = s8_1365 << 30<i32> | s8_1365 >>u 2<u32>
	word32 t5_1399 = t5_1392 >>u 0x1F<u32> | t5_1392 << 1<u32>
	word32 s7_1401 = (s6_1383 << 5<u32> | s6_1383 >>u 0x1B<u32>) + (((s5_1360 ^ s9_1378) ^ s8_1365) + (s7_1342 + (t0_1381 + 0xCA62C1D6<32>)))
	word32 a7_1428 = a7_1133 ^ t6_1173 ^ s0_1291 ^ t0_1381
	word32 s6_1414 = s6_1383 << 30<i32> | s6_1383 >>u 2<u32>
	word32 t3_1417 = t3_1410 >>u 0x1F<u32> | t3_1410 << 1<u32>
	word32 s5_1419 = (s7_1401 << 5<u32> | s7_1401 >>u 0x1B<u32>) + (((s9_1378 ^ s8_1396) ^ s6_1383) + (s5_1360 + (t5_1399 + 0xCA62C1D6<32>)))
	word32 a1_1446 = a1_1153 ^ t4_1193 ^ t2_1309 ^ t5_1399
	word32 s7_1432 = s7_1401 << 30<i32> | s7_1401 >>u 2<u32>
	word32 a7_1435 = a7_1428 >>u 0x1F<u32> | a7_1428 << 1<u32>
	word32 s9_1437 = (s5_1419 << 5<u32> | s5_1419 >>u 0x1B<u32>) + (((s8_1396 ^ s6_1414) ^ s7_1401) + (s9_1378 + (t3_1417 + 0xCA62C1D6<32>)))
	word32 t6_1464 = t6_1173 ^ t1_1213 ^ a2_1327 ^ t3_1417
	word32 s5_1450 = s5_1419 << 30<i32> | s5_1419 >>u 2<u32>
	word32 a1_1453 = a1_1446 >>u 31<i32> | a1_1446 << 1<u32>
	word32 s8_1455 = (s9_1437 << 5<u32> | s9_1437 >>u 0x1B<u32>) + (((s6_1414 ^ s7_1432) ^ s5_1419) + (s8_1396 + (a7_1435 + 0xCA62C1D6<32>)))
	word32 t4_1482 = t4_1193 ^ a6_1233 ^ a4_1345 ^ a7_1435
	word32 s9_1468 = s9_1437 << 30<i32> | s9_1437 >>u 2<u32>
	word32 t6_1471 = t6_1464 >>u 0x1F<u32> | t6_1464 << 1<u32>
	word32 s6_1473 = (s8_1455 << 5<u32> | s8_1455 >>u 0x1B<u32>) + (((s7_1432 ^ s5_1450) ^ s9_1437) + (s6_1414 + (a1_1453 + 0xCA62C1D6<32>)))
	word32 a3_1500 = t1_1213 ^ a5_1249 ^ a3_1363 ^ a1_1453
	word32 s8_1486 = s8_1455 << 30<i32> | s8_1455 >>u 2<u32>
	word32 t4_1489 = t4_1482 >>u 0x1F<u32> | t4_1482 << 1<u32>
	word32 s7_1491 = (s6_1473 << 5<u32> | s6_1473 >>u 0x1B<u32>) + (((s5_1450 ^ s9_1468) ^ s8_1455) + (s7_1432 + (t6_1471 + 0xCA62C1D6<32>)))
	word32 t6_1517 = a6_1233 ^ s1_1273 ^ t0_1381 ^ t6_1471
	word32 s6_1504 = s6_1473 << 30<i32> | s6_1473 >>u 2<u32>
	word32 a3_1507 = a3_1500 >>u 31<i32> | a3_1500 << 1<u32>
	word32 s5_1511 = (s7_1491 << 5<u32> | s7_1491 >>u 0x1B<u32>) + (((s9_1468 ^ s8_1486) ^ s6_1473) + (s5_1450 + (t4_1489 + 0xCA62C1D6<32>)))
	word32 t4_1536 = a5_1249 ^ s0_1291 ^ t5_1399 ^ t4_1489
	word32 s7_1524 = s7_1491 << 30<i32> | s7_1491 >>u 2<u32>
	word32 t6_1525 = t6_1517 >>u 0x1F<u32> | t6_1517 << 1<u32>
	word32 s9_1528 = s9_1468 + (a3_1507 + 0xCA62C1D6<32>) + ((s8_1486 ^ s6_1504) ^ s7_1491) + (s5_1511 << 5<u32> | s5_1511 >>u 0x1B<u32>)
	word32 s1_1547 = s1_1273 ^ t2_1309
	word32 s5_1543 = s5_1511 << 30<i32> | s5_1511 >>u 2<u32>
	word32 t4_1544 = t4_1536 >>u 0x1F<u32> | t4_1536 << 1<u32>
	word32 s8_1538 = (s9_1528 << 5<u32> | s9_1528 >>u 0x1B<u32>) + (((s6_1504 ^ s7_1524) ^ s5_1511) + (s8_1486 + (t6_1525 + 0xCA62C1D6<32>)))
	word32 a3_1554 = s1_1547 ^ t3_1417 ^ a3_1507
	word32 s9_1562 = s9_1528 << 30<i32> | s9_1528 >>u 2<u32>
	word32 s6_1558 = s6_1504 + (t4_1544 + 0xCA62C1D6<32>) + ((s7_1524 ^ s5_1543) ^ s9_1528) + (s8_1538 << 5<u32> | s8_1538 >>u 0x1B<u32>)
	word32 t6_1573 = s0_1291 ^ a2_1327 ^ a7_1435 ^ t6_1525
	word32 s8_1579 = s8_1538 << 30<i32> | s8_1538 >>u 2<u32>
	word32 s7_1574 = s7_1524 + ((a3_1554 << 1<u32> | a3_1554 >>u 31<i32>) + 0xCA62C1D6<32>) + ((s5_1543 ^ s9_1562) ^ s8_1538) + (s6_1558 << 5<u32> | s6_1558 >>u 0x1B<u32>)
	word32 s5_1594 = s5_1543 + ((t6_1573 << 1<u32> | t6_1573 >>u 0x1F<u32>) + 0xCA62C1D6<32>) + ((s9_1562 ^ s8_1579) ^ s6_1558) + (s7_1574 << 5<u32> | s7_1574 >>u 0x1B<u32>)
	word32 t4_1588 = t2_1309 ^ a4_1345 ^ a1_1453 ^ t4_1544
	word32 s6_1599 = s6_1558 << 30<i32> | s6_1558 >>u 2<u32>
	word32 a5_1606 = s5_1594 << 5<u32> | s5_1594 >>u 0x1B<u32>
	Mem1611[Mem27[a5_1606 + 12<i32>:word32] + 8<i32>:word32] = s9_1562 + ((t4_1588 << 1<u32> | t4_1588 >>u 0x1F<u32>) + (s3_173 + 0xCA62C1D6<32>)) + ((s8_1579 ^ s6_1599) ^ s7_1574) + a5_1606
	word32 s5_1612 = s5_1594 + a5_1606
	Mem1618[Mem1611[(s7_1574 >>u 2<u32>) + 20<i32>:word32] + 12<i32>:word32] = s5_1612
	word32 a0_1620 = Mem1618[(s7_1574 >>u 2<u32>) + 24<i32>:word32]
	Mem1621[a0_1620 + 16<i32>:word32] = s4_169 + (s7_1574 >>u 2<u32> | s7_1574 << 30<i32>)
	word32 s6_1619 = s6_1599 + (s7_1574 >>u 2<u32>)
	Mem1622[a0_1620 + 20<i32>:word32] = s6_1619
	Mem1624[a0_1620 + 24<i32>:word32] = s8_1579 + (s7_1574 >>u 2<u32>)
	0<32> = dwArg0148
	0<32> = dwArg3C
	s1Out = s1_1547
	s2Out = 0xCA62C1D6<32>
	s3Out = s3_173 + 0xCA62C1D6<32>
	s4Out = dwArg98
	s5Out = s5_1612
	s6Out = s6_1619
	return dwLoc04
mbedtls_sha1_process_exit:


word32 mbedtls_sha1_update.part.0(word32 a1, word32 a2, word32 a5, word32 dwArg1C, word32 dwArg48, word32 dwArgA8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_sha1_update
//      mbedtls_sha1_finish
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a5 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha1_update.part.0_entry:
l2309949E:
	word32 a0_21 = Mem19[a5:word32]
	word32 a5_27 = a5 + a2
	Mem28[a5_27:word32] = a0_21
	word32 s1_101 = a0_21
	word32 s2_117 = a1
	word32 s3_118 = a5 & 63<i32>
	word32 s0_113 = a2
	branch a5_27 >=u a2 l230994CA
l230994C4:
	Mem32[a5_27 + 5<32>:word32] = Mem28[a5_27 + 4<i32>:word32]
l230994CA:
	branch (a5 & 63<i32>) == 0<32> l230994FC
l230994CE:
	word32 s4_35 = 64<i32> - (a5 & 63<i32>)
	branch a2 <u s4_35 l230994FC
l230994DA:
	word32 a7_317
	word32 a5_315
	word32 a6_316
	word32 a4_314
	word32 a3_313
	word32 a1_311
	word32 a2_312
	memcpy(a0_21 + 28<i32> + (a5 & 63<i32>), a1, s4_35, out a1_311, out a2_312, out a3_313, out a4_314, out a5_315, out a6_316, out a7_317)
	word32 s2_74
	word32 s4_76
	word32 s6_320
	word32 s5_319
	word32 s3_318
	s0_113 = mbedtls_sha1_process(a0_21, a0_21 + 28<i32>, dwArg1C, dwArg0128, out s1_101, out s2_74, out s3_318, out s4_76, out s5_319, out s6_320)
	s2_117 = s2_74 + s4_76
	s3_118 = 0<32>
l230994FC:
	word32 s4_133 = s0_113
	word32 s6_121 = s2_117 + s0_113
	word32 s5_100 = 63<i32>
l23099512:
	word32 a1_99 = s6_121 - s4_133
	branch s5_100 <u s4_133 l23099508
l23099508:
	word32 s4_119
	s0_113 = mbedtls_sha1_process(s1_101, a1_99, dwArg1C, dwArg0128, out s1_101, out s2_117, out s3_118, out s4_119, out s5_100, out s6_121)
	s4_133 = s4_119 + -64<i32>
l2309951A:
	word32 a2_135 = s0_113 >>u 6<u32>
	word32 a1_140 = (a2_135 << 6<u32>) + s2_117
	branch a2_135 + -64<i32> + s0_113 == 0<32> l2309954C
l2309954C:
	0<32> = dwArgA8
	s1Out = <invalid>
	a2Out = dwArg48
	a5Out = -64<i32>
	return <invalid>
l23099530:
	0<32> = dwArgA8
	word32 a0_159 = s1_101 + 28<i32> + s3_118
l23099548_thunk_memcpy:
	word32 a5_163
	word32 a2_166
	word32 a7_325
	word32 a4_323
	word32 a6_324
	word32 a3_322
	word32 a1_321
	memcpy(a0_159, a1_140, dwArg48, out a1_321, out a2_166, out a3_322, out a4_323, out a5_163, out a6_324, out a7_325)
	s1Out = <invalid>
	a2Out = a2_166
	a5Out = a5_163
	return <invalid>
mbedtls_sha1_update.part.0_exit:


word32 mbedtls_sha1_update(word32 a1, word32 a2, word32 a5, word32 dwArg1C, word32 dwArg48, word32 dwArgA8, word32 dwArg0128, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha1_update_wrap
//      mbedtls_sha1_finish
//      mbedtls_sha1
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] Stack +001C:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha1_update_entry:
l23099560:
	branch a2 == 0<32> l23099566
l23099566:
	a5Out = a5
	return a2
l23099562:
l23099562_thunk_mbedtls_sha1_update.part.0:
	word32 a2_9
	word32 a5_12
	word32 s1_94
	mbedtls_sha1_update.part.0(a1, a2, a5, dwArg1C, dwArg48, dwArgA8, dwArg0128, out s1_94, out a2_9, out a5_12)
	a5Out = a5_12
	return a2_9
mbedtls_sha1_update_exit:


void mbedtls_sha1_finish(word32 a2, word32 dwArg28, word32 dwArg88, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha1_finish_wrap
//      mbedtls_sha1
// MayUse:  a2:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha1_finish_entry:
l23099568:
	word32 a5_43
	branch (a2 & 63<i32>) >u 55<i32> l23099690
l23099690:
	a5_43 = 120<i32>
l230995D0:
	a5_43 = 56<i32>
l230995D4:
	word32 a5_59
	mbedtls_sha1_update(0x230C9958<32>, a5_43 - (a2 & 63<i32>), a5_43, dwLoc04, dwArg28, dwArg88, dwArg0108, out a5_59)
	word32 s1_94
	word32 a5_186
	word32 a2_185
	word32 s0_93 = mbedtls_sha1_update.part.0(fp + 0xFFFFFFE8<32>, 8<32>, a5_59, dwLoc04, dwArg28, dwArg88, dwArg0108, out s1_94, out a2_185, out a5_186)
	Mem114[s1_94:byte] = SLICE(CONVERT(Mem38[s0_93 + 11<i32>:byte], byte, word32), byte, 0)
	word32 a5_115 = CONVERT(Mem114[s0_93 + 10<i32>:uint16], uint16, word32)
	Mem116[s1_94 + 1<i32>:byte] = SLICE(a5_115, byte, 0)
	Mem119[s1_94 + 2<i32>:byte] = SLICE(a5_115 >>u 8<i32>, byte, 0)
	word32 s0_120 = Mem119[(a5_115 >>u 8<i32>) + 8<i32>:word32]
	Mem121[s1_94 + 3<i32>:byte] = SLICE(a5_115 >>u 8<i32>, byte, 0)
	Mem123[s1_94 + 4<i32>:byte] = SLICE(CONVERT(Mem121[s0_120 + 15<i32>:byte], byte, word32), byte, 0)
	word32 a5_124 = CONVERT(Mem123[s0_120 + 14<i32>:uint16], uint16, word32)
	Mem125[s1_94 + 5<i32>:byte] = SLICE(a5_124, byte, 0)
	Mem128[s1_94 + 6<i32>:byte] = SLICE(a5_124 >>u 8<i32>, byte, 0)
	word32 s0_129 = Mem128[(a5_124 >>u 8<i32>) + 12<i32>:word32]
	Mem130[s1_94 + 7<i32>:byte] = SLICE(a5_124 >>u 8<i32>, byte, 0)
	Mem132[s1_94 + 8<i32>:byte] = SLICE(CONVERT(Mem130[s0_129 + 19<i32>:byte], byte, word32), byte, 0)
	word32 a5_133 = CONVERT(Mem132[s0_129 + 18<i32>:uint16], uint16, word32)
	Mem134[s1_94 + 9<i32>:byte] = SLICE(a5_133, byte, 0)
	Mem137[s1_94 + 10<i32>:byte] = SLICE(a5_133 >>u 8<i32>, byte, 0)
	word32 s0_138 = Mem137[(a5_133 >>u 8<i32>) + 16<i32>:word32]
	Mem139[s1_94 + 11<i32>:byte] = SLICE(a5_133 >>u 8<i32>, byte, 0)
	Mem141[s1_94 + 12<i32>:byte] = SLICE(CONVERT(Mem139[s0_138 + 23<i32>:byte], byte, word32), byte, 0)
	word32 a5_142 = CONVERT(Mem141[s0_138 + 22<i32>:uint16], uint16, word32)
	Mem143[s1_94 + 13<i32>:byte] = SLICE(a5_142, byte, 0)
	Mem146[s1_94 + 14<i32>:byte] = SLICE(a5_142 >>u 8<i32>, byte, 0)
	word32 s0_147 = Mem146[(a5_142 >>u 8<i32>) + 20<i32>:word32]
	Mem148[s1_94 + 15<i32>:byte] = SLICE(a5_142 >>u 8<i32>, byte, 0)
	Mem151[s1_94 + 16<i32>:byte] = SLICE(CONVERT(Mem148[s0_147 + 27<i32>:byte], byte, word32), byte, 0)
	word32 a5_152 = CONVERT(Mem151[s0_147 + 26<i32>:uint16], uint16, word32)
	Mem153[s1_94 + 17<i32>:byte] = SLICE(a5_152, byte, 0)
	Mem156[s1_94 + 18<i32>:byte] = SLICE(a5_152 >>u 8<i32>, byte, 0)
	Mem159[s1_94 + 19<i32>:byte] = SLICE(a5_152 >>u 8<i32>, byte, 0)
	return
mbedtls_sha1_finish_exit:


void mbedtls_sha1(word32 ra, word32 a0, word32 dwArg08, word32 dwArg28, word32 dwArg88, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha1_entry:
l23099696:
	word32 a5_112
	mbedtls_sha1_finish(mbedtls_sha1_update(a0, mbedtls_sha1_init(ra, fp + -108<i32>), mbedtls_sha1_starts(fp + -108<i32>), dwLoc64, dwLoc38, dwArg28, dwArgA8, out a5_112), dwLoc58, dwArg08, dwArg88)
	mbedtls_sha1_free(fp + -108<i32>)
	return
mbedtls_sha1_exit:


word32 mbedtls_ssl_ciphersuite_from_id(word32 a0, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_list_ciphersuites
//      mbedtls_ssl_get_ciphersuite_name
//      mbedtls_ssl_handshake_client_step
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_ciphersuite_from_id_entry:
l230996D4:
l230996DC:
	word32 a5_10 = Mem0[a4:word32]
	branch a4 != 0<32> l230996E6
l230996E6:
	branch a4 == a0 l230996E2
l230996EA:
l230996E0:
	a5_10 = 0<32>
l230996E2:
	a5Out = a5_10
	return a5_10
mbedtls_ssl_ciphersuite_from_id_exit:


word32 mbedtls_ssl_list_ciphersuites(ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_config_defaults
// MayUse: 
// LiveOut: a0 s0 s1 s2 s3 s4 s5
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
mbedtls_ssl_list_ciphersuites_entry:
l230996F0:
	word32 s1_112
	word32 a4_5 = Mem0[0x4200F720<32>:int32]
	s1_112 = s1
	branch a4_5 == 0<32> l23099724
l23099724:
	word32 s0_22 = 0x4201E90C<32>
	s2 = 0x4200F720<32>
	s1_112 = 0x230C9A58<32>
	s5 = 0x4201E920<32>
l2309974E:
	s3 = Mem28[s1_112:int32]
	branch s3 != 0<32> l2309973A
l2309973A:
	branch s0_22 >=u 0x4201E920<32> l23099756
l2309973E:
	word32 a5_125
	branch mbedtls_ssl_ciphersuite_from_id(s3, a4_5, out a5_125) == 0<32> l2309974C
l23099746:
	Mem36[s0_22:word32] = s3
	s0_22 = s0_22 + 4<32>
l2309974C:
	s1_112 = s1_112 + 4<32>
l23099756:
	Mem42[s0_22:word32] = 0<32>
	Mem46[0x4200F720<32>:word32] = 1<32>
l2309970E:
	s1Out = s1_112
	a0Out = 0x4201E90C<32>
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	return s1
mbedtls_ssl_list_ciphersuites_exit:


word32 mbedtls_ssl_get_ciphersuite_name(word32 a0, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_derive_keys
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a5
// Preserved: sp
mbedtls_ssl_get_ciphersuite_name_entry:
l23099762:
	word32 a0_11
	word32 a5_22
	word32 a0_8 = mbedtls_ssl_ciphersuite_from_id(a0, a4, out a5_22)
	branch a0_8 == 0<32> l23099774
l23099774:
	a0_11 = 0x230B6434<32>
l2309976C:
	a0_11 = Mem5[a0_8 + 4<i32>:word32]
l2309976E:
	return a0_11
mbedtls_ssl_get_ciphersuite_name_exit:


word32 mbedtls_ssl_get_ciphersuite_sig_pk_alg(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
mbedtls_ssl_get_ciphersuite_sig_pk_alg_entry:
l2309977E:
	word32 a0_11
	word32 a0_5 = CONVERT(Mem0[a0 + 10<i32>:byte], byte, word32)
	branch a0_5 >u 0xA<32> l230997A8
l230997A8:
	a0_11 = 0<32>
l23099788:
	word32 a5_9 = 1<32> << a0_5
	a0_11 = 1<32>
	branch (a5_9 & 142<i32>) != 0<32> l230997AA
l23099796:
	a0_11 = 2<32>
	branch (a5_9 & 1536<i32>) != 0<32> l230997AA
l230997AA:
	return a0_11
l2309979E:
	return CONVERT((a5_9 & 0x10<32>) != 0<32>, bool, word32) << 2<i32>
mbedtls_ssl_get_ciphersuite_sig_pk_alg_exit:


void mbedtls_ssl_own_key(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_own_key_entry:
l230997AC:
	branch a5 == 0<32> l230997B4
l230997B0:
	a5 = Mem0[a5 + 8<i32>:word32]
	branch a5 != 0<32> l230997BA
l230997B4:
	branch Mem0[a5 + 76<i32>:word32] == 0<32> l230997BC
l230997BA:
l230997BC:
	return
mbedtls_ssl_own_key_exit:


void mbedtls_ssl_hs_hdr_len.isra.0(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_hs_hdr_len.isra.0_entry:
l230997C0:
	branch (CONVERT(Mem0[a0 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l230997CC
l230997CC:
	return
l230997C8:
	return
mbedtls_ssl_hs_hdr_len.isra.0_exit:


word32 mbedtls_ssl_handshake_client_step(word32 ra, word32 a5, word32 mstatus, word32 dwArg88, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_step
// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0088:[0..31]
// LiveOut: a0 a4 a5 mstatus ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_handshake_client_step_entry:
l230997D0:
	word32 sp_1690 = fp + -160<i32>
	branch a5 == 0x10<32> l23099918
l230997F4:
	word32 a0_33 = Mem29[0x40<32>:word32]
	branch false l23099918
l230997FC:
	word32 a5_43
	word32 s11_50
	word32 t4_1844
	word32 s10_1843
	word32 s9_1842
	word32 s8_1841
	word32 s7_1840
	word32 s5_1838
	word32 s6_1839
	word32 a7_1836
	word32 s4_1837
	word32 a4_1835
	word32 a1_1832
	word32 a2_1833
	word32 a3_1834
	mbedtls_debug_print_msg(ra, a0_33, 2<32>, 0x230C9DD0<32>, a5, out a1_1832, out a2_1833, out a3_1834, out a4_1835, out a5_43, out a7_1836, out s4_1837, out s5_1838, out s6_1839, out s7_1840, out s8_1841, out s9_1842, out s10_1843, out s11_50, out t4_1844)
	word32 a0_62
	word32 s2_74
	word32 s10_1853
	word32 s9_1852
	word32 s7_1851
	word32 s5_1850
	word32 s4_1849
	word32 a3_1847
	word32 a4_1848
	word32 a2_1846
	word32 a1_1845
	word32 s11_108
	mbedtls_ssl_flush_output(ra, s11_50, a5_43, dwArg88, out s1, out a0_62, out a1_1845, out a2_1846, out a3_1847, out a4_1848, out a5, out s2_74, out s3, out s4_1849, out s5_1850, out s7_1851, out s9_1852, out s10_1853, out s11_108)
	word32 s0_105 = a0_62
	branch a0_62 != 0<32> l2309988A
l23099822:
	branch (CONVERT(Mem29[Mem29[s11_108:int32] + 116<i32>:uint16], uint16, word32) & 2<32>) != 0<32> l23099868
l23099868:
	branch CONVERT(Mem29[Mem29[s11_108 + 48<i32>:int32] + 52<i32>:byte], byte, word32) != 1<32> l2309982E
l23099876:
	word32 a0_125
	word32 s10_1890
	word32 s9_1889
	word32 s7_1888
	word32 s6_1887
	word32 s5_1886
	word32 s4_1885
	word32 s2_1884
	word32 a4_1883
	word32 a3_1882
	word32 a2_1881
	word32 a1_1880
	ra = mbedtls_ssl_resend(ra, a0_62, s11_108, 1<32>, s2_74, mstatus, dwArg88, out s0_105, out s1, out a0_125, out a1_1880, out a2_1881, out a3_1882, out a4_1883, out a5, out s2_1884, out s3, out s4_1885, out s5_1886, out s6_1887, out s7_1888, out s9_1889, out s10_1890, out s11_108, out mstatus)
	branch a0_125 == 0<32> l2309982E
l2309987E:
l2309982E:
	branch Mem29[s11_108 + 4<i32>:int32] != 0xC<32> l23099848
l23099838:
	branch Mem29[Mem29[s11_108 + 48<i32>:int32] + 344<i32>:int32] == 0<32> l23099848
l23099842:
	Mem134[s11_108 + 4<i32>:word32] = 0x11<32>
l23099848:
	a5 = Mem136[s11_108 + 4<i32>:int32]
	branch a5 <=u 0x11<32> l23099856
l23099856:
	switch (Mem136[s11_108 + 4<i32>:int32]) { l23099882 l230998AA }
l230998AA:
	word32 a2_157
	word32 a4_159
	word32 s11_162
	word32 t4_1879
	word32 s10_1878
	word32 s9_1877
	word32 s8_1876
	word32 s7_1875
	word32 s5_1873
	word32 s6_1874
	word32 a7_1871
	word32 s4_1872
	word32 a3_1869
	word32 a5_1870
	word32 a1_1868
	mbedtls_debug_print_msg(ra, s11_108, 2<32>, 0x230C9DE4<32>, a5, out a1_1868, out a2_157, out a3_1869, out a4_159, out a5_1870, out a7_1871, out s4_1872, out s5_1873, out s6_1874, out s7_1875, out s8_1876, out s9_1877, out s10_1878, out s11_162, out t4_1879)
	word32 a5_174 = Mem136[a4_159 + 24<i32>:word32]
	branch a4_159 != 0<32> l230998EA
l230998EA:
	Mem176[s11_162 + 8<i32>:word32] = CONVERT(Mem136[a5_174 + 114<i32>:byte], byte, word32)
	Mem178[s11_162 + 12<i32>:word32] = CONVERT(Mem176[a5_174 + 115<i32>:byte], byte, word32)
	word32 a0_179 = CONVERT(Mem178[a5_174 + 112<i32>:byte], byte, word32)
	branch a0_179 != 0<32> l23099920
l23099920:
	word32 a5_1573
	word32 a3_1575
	word32 s5_181 = Mem178[s11_162 + 160<i32>:int32]
	mbedtls_ssl_write_version(a0_179, CONVERT(Mem178[Mem178[a2_157 + 116<i32>:word32] + 113<i32>:byte], byte, word32), a2_157 >>u 1<i32> & 1<32>, s5_181 + 4<i32>)
	word32 a7_1910
	word32 t4_1911
	word32 a4_1908
	word32 a5_1909
	word32 a2_1906
	word32 a3_1907
	word32 a1_1905
	word32 s4_206
	word32 s6_208
	word32 s7_209
	word32 s8_210
	word32 s9_211
	word32 s10_204
	word32 s5_207
	word32 s11_1714
	word32 a0_197 = mbedtls_debug_print_msg(ra, s11_162, 3<32>, 0x230C9E64<32>, CONVERT(Mem178[s5_181 + 4<i32>:byte], byte, word32), out a1_1905, out a2_1906, out a3_1907, out a4_1908, out a5_1909, out a7_1910, out s4_206, out s5_207, out s6_208, out s7_209, out s8_210, out s9_211, out s10_204, out s11_1714, out t4_1911)
	word32 a4_218 = CONVERT(Mem178[Mem178[s11_1714:int32] + 116<i32>:uint16], uint16, word32)
	word32 s2_217 = Mem178[s11_1714 + 48<i32>:int32]
	word32 a4_219 = a4_218 & 2<32>
	branch (a4_218 & 2<32>) == 0<32> l23099C0A
l23099968:
	a4_219 = Mem178[s2_217 + 36<i32>:int32]
	branch a4_219 == 0<32> l23099C0A
l23099C0A:
	word32 s2_255
	word32 s4_257
	word32 s5_258
	word32 s6_259
	word32 s7_260
	word32 s8_261
	word32 s9_262
	word32 s10_263
	word32 s11_264
	word32 a0_265
	word32 a4_267
	word32 a6_275
	word32 t3_276
	word32 t0_277
	word32 tp_278
	word32 t2_280
	word32 t6_281
	call a4_219 (retsize: 0;)
		uses: a1:s2_217 + 216<i32>,a2:4<32>,a5:Mem178[a0_197 + 28<i32>:word32],a6:a6_275,mstatus:mstatus_247,ra:ra_153,s0:s0_232,s1:s1_148,s10:s10_204,s11:s11_205,s2:s2_217,s3:s3_236,s4:s4_206,s5:s5_207,s6:s6_208,s7:s7_209,s8:s8_210,s9:s9_211,Stack +0128:dwArg88,t0:t0_277,t2:t2_280,t3:t3_276,t6:t6_281,tp:tp_278
		defs: a0:a0_265,a4:a4_267,a6:a6_275,mstatus:mstatus_279,ra:ra_252,s1:s1_254,s10:s10_263,s11:s11_264,s2:s2_255,s3:s3_256,s4:s4_257,s5:s5_258,s6:s6_259,s7:s7_260,s8:s8_261,s9:s9_262,sp:sp_251,t0:t0_277,t2:t2_280,t3:t3_276,t6:t6_281,tp:tp_278
	s0_105 = a0_265
	branch a0_265 != 0<32> l23099C30
l23099C1A:
	word32 a0_302
	word32 a6_312
	word32 t3_313
	word32 t0_314
	word32 tp_315
	word32 t2_317
	word32 t6_318
	call a4_267 (retsize: 0;)
		uses: a1:s2_255 + 220<i32>,a2:0x1C<32>,a5:Mem178[a0_265 + 28<i32>:word32],a6:a6_312,mstatus:mstatus_279,ra:ra_252,s0:a0_265,s1:s1_254,s10:s10_263,s11:s11_264,s2:s2_255,s3:s3_256,s4:s4_257,s5:s5_258,s6:s6_259,s7:s7_260,s8:s8_261,s9:s9_262,Stack +0088:dwArg88,t0:t0_314,t2:t2_317,t3:t3_313,t6:t6_318,tp:tp_315
		defs: a0:a0_302,a6:a6_312,mstatus:mstatus_316,ra:ra_289,s1:s1_291,s10:s10_300,s11:s11_301,s2:s2_292,s3:s3_293,s4:s4_294,s5:s5_295,s6:s6_296,s7:s7_297,s8:s8_298,s9:s9_299,sp:sp_288,t0:t0_314,t2:t2_317,t3:t3_313,t6:t6_318,tp:tp_315
	s0_105 = a0_302
	branch a0_302 == 0<32> l23099970
l23099C30:
	a5_1573 = s0_105
	a3_1575 = 759<i32>
l23099970:
	word32 a6_375
	word32 a1_327 = Mem178[s11_1714 + 48<i32>:int32]
	word32 a5_329 = s5_207 + 6<i32>
	Mem334[sp_1690 + 140<i32>:word32] = a5_329
	word32 a5_336
	word32 a6_1930
	word32 a7_1931
	word32 a3_1928
	word32 a4_1929
	word32 a1_1926
	word32 a2_1927
	memcpy(a5_329, a1_327 + 216<i32>, 32<i32>, out a1_1926, out a2_1927, out a3_1928, out a4_1929, out a5_336, out a6_1930, out a7_1931)
	word32 a4_1935
	word32 a5_1936
	word32 a7_1937
	word32 a3_1934
	word32 a0_358
	word32 a1_1932
	word32 a2_1933
	mbedtls_debug_print_buf(ra, 3<32>, a5_336, out a0_358, out a1_1932, out a2_1933, out a3_1934, out a4_1935, out a5_1936, out a7_1937)
	word32 a5_370 = 0x10<32>
	word32 a6_371 = Mem334[Mem334[s11_1714 + 44<i32>:int32] + 8<i32>:int32]
	branch a6_371 >u 0xFFFFFFE0<32> l230999C2
l230999B8:
	a5_370 = Mem334[Mem334[s11_1714 + 48<i32>:int32] + 328<i32>:int32]
	a6_375 = a6_371
	branch a5_370 != 0<32> l230999C4
l230999C2:
	a6_375 = 0<32>
l230999C4:
	branch a5_370 == 0<32> l230999F0
l230999C8:
	word32 a1_381 = Mem334[a5_370 + 104<i32>:word32]
	branch a5_370 == 0<32> l230999F0
l230999CC:
	word32 a0_445
	word32 a6_455
	word32 t3_456
	word32 t0_457
	word32 tp_458
	word32 t2_460
	word32 t6_461
	call a6_371 + -16<i32> (retsize: 0;)
		uses: a1:a1_381 + 0xC<32>,a2:32<i32>,a5:Mem334[a0_358 + 28<i32>:word32],a6:a6_455,mstatus:mstatus_427,ra:ra_357,s0:s0_396,s1:s1_354,s10:s10_424,s11:s11_325,s2:s2_401,s3:s3_404,s4:s4_407,s5:s5_328,s6:s6_412,s7:s7_415,s8:s8_418,s9:s9_421,Stack +0088:dwArg88,t0:t0_457,t2:t2_460,t3:t3_456,t6:t6_461,tp:tp_458
		defs: a0:a0_445,a5:a5_446,a6:a6_455,mstatus:mstatus_459,ra:ra_432,s1:s1_434,s11:s11_444,s3:s3_436,s5:s5_438,sp:sp_431,t0:t0_457,t2:t2_460,t3:t3_456,t6:t6_461,tp:tp_458
	branch a0_445 != 0<32> l2309988A
l230999E2:
	Mem466[0x28<32>:word32] = Mem334[s11_1714 + 44<i32>:int32]
	a6_375 = 32<i32>
l230999F0:
	Mem471[s5_207 + 38<i32>:byte] = SLICE(a6_375, byte, 0)
	word32 s0_468 = s5_207 + 39<i32>
	word32 a5_472 = 0<32>
l230999FA:
	branch a6_375 != a5_472 l23099C40
l23099C40:
	Mem483[s5_207 + a5_472 + 39<i32>:byte] = SLICE(CONVERT(Mem476[Mem476[s11_1714 + 44<i32>:int32] + a5_472 + 12<i32>:byte], byte, word32), byte, 0)
	a5_472 = a5_472 + 1<32>
l230999FE:
	Mem497[sp_1690 + 140<i32>:word32] = a6_375
	word32 s9_1960
	word32 s8_1959
	word32 s7_1958
	word32 s6_1957
	word32 s5_1956
	word32 a7_1955
	word32 a5_1954
	word32 a4_1953
	word32 a2_1951
	word32 a3_1952
	word32 a1_1950
	word32 s10_1961
	word32 t4_1962
	word32 s4_509
	word32 s11_1717
	mbedtls_debug_print_msg(ra, s11_1714, 3<32>, 0x230C9EA4<32>, a6_375, out a1_1950, out a2_1951, out a3_1952, out a4_1953, out a5_1954, out a7_1955, out s4_509, out s5_1956, out s6_1957, out s7_1958, out s8_1959, out s9_1960, out s10_1961, out s11_1717, out t4_1962)
	word32 a0_1963
	word32 a1_1964
	word32 a2_1965
	word32 a4_1966
	word32 a5_1967
	word32 a7_1968
	word32 a3_1718
	mbedtls_debug_print_buf(ra, 3<32>, s0_468, out a0_1963, out a1_1964, out a2_1965, out a3_1718, out a4_1966, out a5_1967, out a7_1968)
	word32 a5_539 = CONVERT(Mem497[Mem497[s11_1717:int32] + 116<i32>:uint16], uint16, word32)
	branch (a5_539 & 2<32>) == 0<32> l23099A72
l23099A46:
	branch (a5_539 & 2<32>) != 0<32> l23099C56
l23099C56:
	word32 a1_553
	word32 a0_1969
	word32 a2_1970
	word32 a3_1971
	word32 a4_1972
	word32 a5_1973
	word32 a7_1974
	mbedtls_debug_print_buf(ra, 3<32>, a5_539 & 2<32>, out a0_1969, out a1_553, out a2_1970, out a3_1971, out a4_1972, out a5_1973, out a7_1974)
	Mem565[s4_509:byte] = SLICE(CONVERT(Mem497[Mem497[s11_1717 + 48<i32>:int32] + 40<i32>:byte], byte, word32), byte, 0)
	word32 a1_1975
	word32 a2_1976
	word32 a4_1977
	word32 a5_1978
	word32 a6_1979
	word32 a7_1980
	memcpy(s4_509 + 1<i32>, a1_553, CONVERT(Mem565[Mem565[s11_1717 + 48<i32>:int32] + 40<i32>:byte], byte, word32), out a1_1975, out a2_1976, out a3_1718, out a4_1977, out a5_1978, out a6_1979, out a7_1980)
	s4_509 = CONVERT(Mem565[Mem565[s11_1717 + 48<i32>:int32] + 40<i32>:byte], byte, word32) + (s4_509 + 1<i32>)
l23099A54:
	word32 s4_600
	word32 a1_1981
	word32 a2_1982
	word32 a4_1983
	word32 a5_1984
	word32 a7_1985
	word32 s5_1986
	word32 s6_1987
	word32 s7_1988
	word32 s8_1989
	word32 s9_1990
	word32 s10_1991
	word32 t4_1992
	mbedtls_debug_print_msg(ra, s11_1717, 3<32>, 0x230C9EE4<32>, a5_539 & 2<32>, out a1_1981, out a2_1982, out a3_1718, out a4_1983, out a5_1984, out a7_1985, out s4_600, out s5_1986, out s6_1987, out s7_1988, out s8_1989, out s9_1990, out s10_1991, out s11_1717, out t4_1992)
	Mem610[s4_600:byte] = 0<8>
	s4_509 = s4_509 + 1<i32>
l23099A72:
	word32 a4_614 = Mem613[s11_1717 + 12<i32>:int32]
	word32 s3_1726 = s4_509 + 2<i32>
	word32 a4_1716 = a4_614 << 2<i32>
	word32 s2_620 = Mem613[Mem613[s11_1717:int32] + (a4_614 << 2<i32>):int32]
	word32 s0_1725 = 0<32>
	word32 s6_1720 = 0x230CA000<32>
l23099A8C:
	word32 a0_625 = Mem624[s2_620:int32]
	branch a0_625 != 0<32> l23099C9A
l23099C9A:
	word32 a5_1993
	branch mbedtls_ssl_ciphersuite_from_id(a0_625, a4_1716, out a5_1993) == 0<32> l23099CF6
l23099CA0:
	word32 a5_630 = Mem624[s11_1717:int32]
	a4_1716 = CONVERT(Mem624[a5_630 + 113<i32>:byte], byte, word32)
	branch a4_1716 < a3_1718 l23099CF6
l23099CAE:
	a4_1716 = CONVERT(Mem624[a5_630 + 115<i32>:byte], byte, word32)
	word32 a0_635 = Mem624[a3_1718 + 24<i32>:word32]
	branch a3_1718 < a4_1716 l23099CF6
l23099CB8:
	branch (CONVERT(Mem624[a5_630 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l23099CC8
l23099CC0:
	branch (CONVERT(Mem624[a0_635 + 28<i32>:byte], byte, word32) & 4<32>) != 0<32> l23099CF6
l23099CC8:
	word32 a1_2096
	word32 a2_2097
	word32 a5_2098
	word32 a7_2099
	word32 s5_2100
	word32 s7_2101
	word32 s8_2102
	word32 s9_2103
	word32 s10_2104
	word32 t4_2105
	mbedtls_debug_print_msg(ra, s11_1717, 3<32>, s6_1720 + -232<i32>, Mem624[s2_620:int32], out a1_2096, out a2_2097, out a3_1718, out a4_1716, out a5_2098, out a7_2099, out s4_509, out s5_2100, out s6_1720, out s7_2101, out s8_2102, out s9_2103, out s10_2104, out s11_1717, out t4_2105)
	s3_1726 = s3_1726 + 2<32>
	Mem682[s3_1726 + 4094<i32>:byte] = SLICE(Mem624[s2_620:int32] >> 8<i32>, byte, 0)
	Mem684[s3_1726 + 4095<i32>:byte] = Mem682[s2_620:byte]
	s0_1725 = s0_1725 + 1<32>
l23099CF6:
	s2_620 = s2_620 + 4<32>
l23099A94:
	Mem688[s3_1726 + 1<i32>:byte] = 0xFF<8>
	Mem691[s3_1726:byte] = 0<8>
	word32 a5_689 = s0_1725 + 1<i32>
	Mem694[s4_509:byte] = SLICE(a5_689 >>u 7<u32>, byte, 0)
	Mem696[s4_509 + 1<i32>:byte] = SLICE(a5_689 << 1<u32>, byte, 0)
	word32 s11_711
	word32 a1_1994
	word32 a2_1995
	word32 a3_1996
	word32 a4_1997
	word32 a5_1998
	word32 a7_1999
	word32 s4_2000
	word32 s5_2001
	word32 s6_2002
	word32 s7_2003
	word32 s8_2004
	word32 s9_2005
	word32 s10_2006
	word32 t4_2007
	mbedtls_debug_print_msg(ra, s11_1717, 3<32>, 0x230C9F3C<32>, a5_689, out a1_1994, out a2_1995, out a3_1996, out a4_1997, out a5_1998, out a7_1999, out s4_2000, out s5_2001, out s6_2002, out s7_2003, out s8_2004, out s9_2005, out s10_2006, out s11_711, out t4_2007)
	word32 s11_737
	word32 a1_2008
	word32 a2_2009
	word32 a3_2010
	word32 a4_2011
	word32 a5_2012
	word32 a7_2013
	word32 s4_2014
	word32 s5_2015
	word32 s6_2016
	word32 s7_2017
	word32 s8_2018
	word32 s9_2019
	word32 s10_2020
	word32 t4_2021
	mbedtls_debug_print_msg(ra, s11_711, 3<32>, 0x230C9F60<32>, 1<32>, out a1_2008, out a2_2009, out a3_2010, out a4_2011, out a5_2012, out a7_2013, out s4_2014, out s5_2015, out s6_2016, out s7_2017, out s8_2018, out s9_2019, out s10_2020, out s11_737, out t4_2021)
	word32 a1_2022
	word32 a2_2023
	word32 a3_2024
	word32 a4_2025
	word32 a5_2026
	word32 a7_2027
	word32 s4_2028
	word32 s5_2029
	word32 s6_2030
	word32 s7_2031
	word32 s8_2032
	word32 s9_2033
	word32 s10_2034
	word32 t4_2035
	word32 s11_1003
	mbedtls_debug_print_msg(ra, s11_737, 3<32>, 0x230C9F80<32>, 0<32>, out a1_2022, out a2_2023, out a3_2024, out a4_2025, out a5_2026, out a7_2027, out s4_2028, out s5_2029, out s6_2030, out s7_2031, out s8_2032, out s9_2033, out s10_2034, out s11_1003, out t4_2035)
	Mem775[s3_1726 + 2<i32>:byte] = 1<8>
	Mem776[s3_1726 + 3<i32>:byte] = 0<8>
	word32 a5_777 = Mem776[s11_1003 + 180<i32>:int32]
	word32 s4_1015 = s3_1726 + 4<i32>
	word32 s7_780 = 0<32>
	branch a5_777 == 0<32> l23099B6C
l23099B18:
	word32 s0_781 = Mem776[s11_1003 + 160<i32>:int32]
	word32 s6_801
	word32 a1_2036
	word32 a2_2037
	word32 a3_2038
	word32 a4_2039
	word32 a5_2040
	word32 a7_2041
	word32 s5_2042
	word32 s7_2043
	word32 s8_2044
	word32 s9_2045
	word32 s10_2046
	word32 t4_2047
	mbedtls_debug_print_msg(ra, s11_1003, 3<32>, 0x230C9FA0<32>, a5_777, out a1_2036, out a2_2037, out a3_2038, out a4_2039, out a5_2040, out a7_2041, out s4_1015, out s5_2042, out s6_801, out s7_2043, out s8_2044, out s9_2045, out s10_2046, out s11_1003, out t4_2047)
	word32 a5_813
	word32 a1_2048
	word32 a2_2049
	word32 a3_2050
	word32 a4_2051
	word32 a0_810 = strlen(Mem776[s11_1003 + 180<i32>:int32], out a1_2048, out a2_2049, out a3_2050, out a4_2051, out a5_813)
	branch s0_781 + 0x4000000<32> <u s6_801 l23099B52
l23099B46:
	s7_780 = a0_810 + 9<i32>
	branch s0_781 + 0x4000000<32> - s6_801 >=u a0_810 + 9<i32> l23099CFA
l23099CFA:
	Mem821[s3_1726 + 8<i32>:byte] = SLICE(a0_810 + 5<i32> >>u 8<i32>, byte, 0)
	Mem824[s3_1726 + 9<i32>:byte] = SLICE((a0_810 & 255<i32>) + 5<i32>, byte, 0)
	Mem827[s3_1726 + 10<i32>:byte] = SLICE(a0_810 + 3<i32> >>u 8<i32>, byte, 0)
	Mem829[s3_1726 + 11<i32>:byte] = SLICE((a0_810 & 255<i32>) + 3<i32>, byte, 0)
	Mem831[s3_1726 + 6<i32>:byte] = 0<8>
	Mem832[s3_1726 + 7<i32>:byte] = 0<8>
	Mem833[s3_1726 + 12<i32>:byte] = 0<8>
	Mem834[s3_1726 + 13<i32>:byte] = SLICE(a0_810 >>u 8<u32>, byte, 0)
	Mem835[s3_1726 + 14<i32>:byte] = SLICE(a0_810 & 255<i32>, byte, 0)
	word32 a1_2065
	word32 a2_2066
	word32 a3_2067
	word32 a4_2068
	word32 a5_2069
	word32 a6_2070
	word32 a7_2071
	memcpy(s3_1726 + 15<i32>, Mem835[s11_1003 + 180<i32>:int32], a0_810, out a1_2065, out a2_2066, out a3_2067, out a4_2068, out a5_2069, out a6_2070, out a7_2071)
l23099B52:
	word32 a1_2052
	word32 a2_2053
	word32 a3_2054
	word32 a4_2055
	word32 a5_2056
	word32 a7_2057
	word32 s5_2058
	word32 s6_2059
	word32 s7_2060
	word32 s8_2061
	word32 s9_2062
	word32 s10_2063
	word32 t4_2064
	mbedtls_debug_print_msg(ra, s11_1003, 1<32>, 0x230C9FD0<32>, a5_813, out a1_2052, out a2_2053, out a3_2054, out a4_2055, out a5_2056, out a7_2057, out s4_1015, out s5_2058, out s6_2059, out s7_2060, out s8_2061, out s9_2062, out s10_2063, out s11_1003, out t4_2064)
	s7_780 = 0<32>
l23099B6C:
	word32 a5_1001 = 0<32>
	branch CONVERT(Mem882[Mem882[s11_1003:int32] + 113<i32>:byte], byte, word32) != 3<32> l23099D66
l23099B7C:
	word32 s2_895 = Mem882[s11_1003 + 160<i32>:int32]
	word32 a1_2072
	word32 a2_2073
	word32 a3_2074
	word32 a4_2075
	word32 a5_2076
	word32 a7_2077
	word32 s5_2078
	word32 s6_2079
	word32 s8_2080
	word32 s9_2081
	word32 s10_2082
	word32 t4_2083
	word32 a0_897 = mbedtls_debug_print_msg(ra, s11_1003, 3<32>, 0x230C9FE4<32>, 0<32>, out a1_2072, out a2_2073, out a3_2074, out a4_2075, out a5_2076, out a7_2077, out s4_1015, out s5_2078, out s6_2079, out s7_780, out s8_2080, out s9_2081, out s10_2082, out s11_1003, out t4_2083)
	word32 s9_917 = Mem882[Mem882[s11_1003:int32] + 88<i32>:int32]
	word32 a5_918 = 0<32>
l23099BA2:
	branch Mem882[(a5_918 << 1<u32>) + s9_917:word32] != 0<32> l23099D48
l23099D48:
	a5_918 = a5_918 + 2<32>
l23099BAE:
	word32 s0_930 = s7_780 + 2<i32> + s4_1015
	branch s2_895 + 0x4000000<32> <u s0_930 l23099D4C
l23099BBC:
	a5_918 = a5_918 + 6<32>
	branch s2_895 + 0x4000000<32> - s0_930 <u a5_918 l23099D4C
l23099D4C:
	word32 a1_2084
	word32 a2_2085
	word32 a3_2086
	word32 a4_2087
	word32 a5_2088
	word32 a7_2089
	word32 s5_2090
	word32 s6_2091
	word32 s8_2092
	word32 s9_2093
	word32 s10_2094
	word32 t4_2095
	mbedtls_debug_print_msg(ra, s11_1003, 1<32>, 0x230C9FD0<32>, a5_918, out a1_2084, out a2_2085, out a3_2086, out a4_2087, out a5_2088, out a7_2089, out s4_1015, out s5_2090, out s6_2091, out s7_780, out s8_2092, out s9_2093, out s10_2094, out s11_1003, out t4_2095)
	a5_1001 = 0<32>
l23099BC4:
	word32 s8_968 = s0_930 + 6<i32>
	word32 a5_969 = 0<32>
l23099BCC:
	word32 s2_976 = a5_969 + 2<i32>
	branch a0_897 != 0<32> l23099F24
l23099F24:
	a0_897 = mbedtls_ssl_hash_from_md_alg(a0_897)
	Mem980[s8_968:byte] = SLICE(a0_897, byte, 0)
	Mem982[s8_968 + 1<i32>:byte] = 1<8>
	a5_969 = s2_976
	s8_968 = s8_968 + 2<32>
l23099BDC:
	Mem987[s0_930 + 1<i32>:byte] = 0xD<8>
	word32 a4_988 = a5_969 & 255<i32>
	Mem991[s0_930 + 3<i32>:byte] = SLICE(a4_988 + 2<i32>, byte, 0)
	Mem993[s0_930:byte] = 0<8>
	Mem994[s0_930 + 2<i32>:byte] = SLICE(s2_976 >>u 8<u32>, byte, 0)
	Mem995[s0_930 + 4<i32>:byte] = SLICE(a5_969 >>u 8<u32>, byte, 0)
	Mem996[s0_930 + 5<i32>:byte] = SLICE(a4_988, byte, 0)
	a5_1001 = a5_969 + 6<32>
l23099D66:
	word32 s7_1002 = s7_780 + a5_1001
	word32 a5_1009 = 0<32>
	branch (CONVERT(Mem1005[Mem1005[s11_1003:int32] + 116<i32>:uint16], uint16, word32) & 448<i32>) == 0<32> l23099DC6
l23099D78:
	word32 s2_1011 = Mem1005[s11_1003 + 160<i32>:int32]
	word32 a1_2106
	word32 a2_2107
	word32 a3_2108
	word32 a4_2109
	word32 a7_2110
	word32 s5_2111
	word32 s6_2112
	word32 s8_2113
	word32 s9_2114
	word32 s10_2115
	word32 t4_2116
	word32 a5_1030
	mbedtls_debug_print_msg(ra, s11_1003, 3<32>, 0x230CA018<32>, 0x4000000<32>, out a1_2106, out a2_2107, out a3_2108, out a4_2109, out a5_1030, out a7_2110, out s4_1015, out s5_2111, out s6_2112, out s7_1002, out s8_2113, out s9_2114, out s10_2115, out s11_1003, out t4_2116)
	word32 s0_1018 = s7_1002 + 2<i32> + s4_1015
	branch s2_1011 + 0x4000000<32> <u s0_1018 l23099DAC
l23099DA2:
	a5_1030 = 4<32>
	branch s2_1011 + 0x4000000<32> - s0_1018 >u 4<32> l23099F36
l23099F36:
	Mem1051[s0_1018:byte] = 0<8>
	Mem1052[s0_1018 + 1<i32>:byte] = 1<8>
	Mem1053[s0_1018 + 2<i32>:byte] = 0<8>
	Mem1054[s0_1018 + 3<i32>:byte] = 1<8>
	Mem1059[s0_1018 + 4<i32>:byte] = SLICE(Mem1054[Mem1054[s11_1003:int32] + 116<i32>:word32] >>u 6<i32> & 7<32>, byte, 0)
	a5_1009 = 5<32>
l23099DAC:
	word32 a1_2117
	word32 a2_2118
	word32 a3_2119
	word32 a4_2120
	word32 a5_2121
	word32 a7_2122
	word32 s5_2123
	word32 s6_2124
	word32 s8_2125
	word32 s9_2126
	word32 s10_2127
	word32 t4_2128
	mbedtls_debug_print_msg(ra, s11_1003, 1<32>, 0x230C9FD0<32>, a5_1030, out a1_2117, out a2_2118, out a3_2119, out a4_2120, out a5_2121, out a7_2122, out s4_1015, out s5_2123, out s6_2124, out s7_1002, out s8_2125, out s9_2126, out s10_2127, out s11_1003, out t4_2128)
	a5_1009 = 0<32>
l23099DC6:
	word32 s7_1093 = s7_1002 + a5_1009
	word32 s0_1098 = 0<32>
	word32 a5_1099 = Mem1095[Mem1095[s11_1003:int32] + 96<i32>:word32]
	branch a5_1099 == 0<32> l23099E30
l23099DD2:
	word32 s8_1122
	word32 a1_2129
	word32 a2_2130
	word32 a3_2131
	word32 a4_2132
	word32 a5_2133
	word32 a7_2134
	word32 s5_2135
	word32 s6_2136
	word32 s9_2137
	word32 s10_2138
	word32 t4_2139
	mbedtls_debug_print_msg(ra, s11_1003, 3<32>, 0x230CA04C<32>, a5_1099, out a1_2129, out a2_2130, out a3_2131, out a4_2132, out a5_2133, out a7_2134, out s4_1015, out s5_2135, out s6_2136, out s7_1093, out s8_1122, out s9_2137, out s10_2138, out s11_1003, out t4_2139)
	word32 s2_1129 = Mem1095[Mem1095[s11_1003:int32] + 96<i32>:int32]
l23099DF6:
	word32 a0_1132 = Mem1095[s2_1129:int32]
	branch a0_1132 != 0<32> l23099F5A
l23099F5A:
	word32 a1_2140
	word32 a2_2141
	word32 a3_2142
	word32 a4_2143
	word32 a5_2144
	s0_1098 = s0_1098 + ((strlen(a0_1132, out a1_2140, out a2_2141, out a3_2142, out a4_2143, out a5_2144) & 255<i32>) + 1<32>)
	s2_1129 = s2_1129 + 4<32>
l23099DFE:
	word32 s2_1148 = s7_1093 + 2<i32> + s4_1015
	word32 a5_1150 = s8_1122 + 0x4000000<32>
	branch s8_1122 + 0x4000000<32> <u s2_1148 l23099E16
l23099E0C:
	a5_1150 = s8_1122 + 0x4000000<32> - s2_1148
	branch a5_1150 >=u s0_1098 + 6<32> l23099F6A
l23099F6A:
	Mem1154[s2_1148:byte] = 0<8>
	Mem1155[s2_1148 + 1<i32>:byte] = 0x10<8>
	word32 s0_1158 = s2_1148 + 6<i32>
	word32 s8_1159 = Mem1155[Mem1155[s11_1003:int32] + 96<i32>:int32]
l23099F80:
	word32 a0_1162 = Mem1161[s8_1159:int32]
	branch a0_1162 != 0<32> l23099FB2
l23099FB2:
	word32 a1_2157
	word32 a2_2158
	word32 a3_2159
	word32 a4_2160
	word32 a5_2161
	word32 a0_1163 = strlen(a0_1162, out a1_2157, out a2_2158, out a3_2159, out a4_2160, out a5_2161)
	Mem1170[s0_1158:byte] = SLICE(a0_1163, byte, 0)
	word32 a1_2162
	word32 a2_2163
	word32 a3_2164
	word32 a4_2165
	word32 a5_2166
	word32 a6_2167
	word32 a7_2168
	memcpy(s0_1158 + 1<i32>, Mem1170[s8_1159:int32], a0_1163 & 255<i32>, out a1_2162, out a2_2163, out a3_2164, out a4_2165, out a5_2166, out a6_2167, out a7_2168)
	s8_1159 = s8_1159 + 4<32>
	s0_1158 = s0_1158 + (CONVERT(Mem1170[s0_1158:byte], byte, word32) + 1<32>)
l23099F86:
	s0_1098 = s0_1158 - s2_1148
	Mem1195[s2_1148 + 4<i32>:byte] = SLICE(s0_1098 + -6<i32> >>u 8<i32>, byte, 0)
	Mem1198[s2_1148 + 5<i32>:byte] = SLICE((s0_1098 & 255<i32>) + -6<i32>, byte, 0)
	Mem1202[s2_1148 + 2<i32>:byte] = SLICE(s0_1098 + -4<i32> >>u 8<i32>, byte, 0)
	Mem1203[s2_1148 + 3<i32>:byte] = SLICE((s0_1098 & 255<i32>) + 0xFFFFFFFC<32>, byte, 0)
l23099E16:
	word32 a1_2145
	word32 a2_2146
	word32 a3_2147
	word32 a4_2148
	word32 a5_2149
	word32 a7_2150
	word32 s5_2151
	word32 s6_2152
	word32 s8_2153
	word32 s9_2154
	word32 s10_2155
	word32 t4_2156
	mbedtls_debug_print_msg(ra, s11_1003, 1<32>, 0x230C9FD0<32>, a5_1150, out a1_2145, out a2_2146, out a3_2147, out a4_2148, out a5_2149, out a7_2150, out s4_1015, out s5_2151, out s6_2152, out s7_1093, out s8_2153, out s9_2154, out s10_2155, out s11_1003, out t4_2156)
	s0_1098 = 0<32>
l23099E30:
	word32 s0_1244 = s0_1098 + s7_1093
	word32 s7_1245 = 0<32>
	branch (CONVERT(Mem1238[Mem1238[s11_1003:int32] + 116<i32>:uint16], uint16, word32) & 512<i32>) == 0<32> l23099E9A
l23099E42:
	word32 a5_1269
	word32 s8_1281
	word32 s9_1282
	word32 a1_2180
	word32 a2_2181
	word32 a3_2182
	word32 a4_2183
	word32 a7_2184
	word32 s4_2185
	word32 s5_2186
	word32 s6_2187
	word32 s7_2188
	word32 s10_2189
	word32 t4_2190
	mbedtls_debug_print_msg(ra, s11_1003, 3<32>, 0x230CA070<32>, Mem1238[s11_1003 + 44<i32>:int32], out a1_2180, out a2_2181, out a3_2182, out a4_2183, out a5_1269, out a7_2184, out s4_2185, out s5_2186, out s6_2187, out s7_2188, out s8_1281, out s9_1282, out s10_2189, out s11_1003, out t4_2190)
	word32 s2_1257 = s0_1244 + 2<i32> + s4_1015
	branch s9_1282 <u s2_1257 l23099E80
l23099E74:
	branch s9_1282 - s2_1257 >=u s8_1281 + 4<i32> l23099FD6
l23099FD6:
	Mem1290[s2_1257 + 1<i32>:byte] = 0x23<8>
	Mem1292[s2_1257:byte] = 0<8>
	Mem1293[s2_1257 + 2<i32>:byte] = SLICE(s8_1281 >>u 8<u32>, byte, 0)
	Mem1294[s2_1257 + 3<i32>:byte] = SLICE(s8_1281, byte, 0)
	branch Mem1294[Mem1294[s11_1003 + 44<i32>:int32] + 100<i32>:word32] == 0<32> l2309A026
l23099FF6:
	branch s8_1281 == 0<32> l2309A026
l2309A026:
	s7_1245 = 4<32>
l23099FFA:
	word32 a1_1307
	word32 s8_1318
	word32 a2_2205
	word32 a3_2206
	word32 a4_2207
	word32 a5_2208
	word32 a7_2209
	word32 s4_2210
	word32 s5_2211
	word32 s6_2212
	word32 s9_2213
	word32 s10_2214
	word32 t4_2215
	mbedtls_debug_print_msg(ra, s11_1003, 3<32>, 0x230CA0A0<32>, s8_1281, out a1_1307, out a2_2205, out a3_2206, out a4_2207, out a5_2208, out a7_2209, out s4_2210, out s5_2211, out s6_2212, out s7_1245, out s8_1318, out s9_2213, out s10_2214, out s11_1003, out t4_2215)
	word32 a1_2216
	word32 a2_2217
	word32 a3_2218
	word32 a4_2219
	word32 a5_2220
	word32 a6_2221
	word32 a7_2222
	memcpy(s2_1257 + 4<i32>, a1_1307, s8_1318, out a1_2216, out a2_2217, out a3_2218, out a4_2219, out a5_2220, out a6_2221, out a7_2222)
l23099E80:
	word32 a1_2191
	word32 a2_2192
	word32 a3_2193
	word32 a4_2194
	word32 a5_2195
	word32 a7_2196
	word32 s4_2197
	word32 s5_2198
	word32 s6_2199
	word32 s7_2200
	word32 s8_2201
	word32 s9_2202
	word32 s10_2203
	word32 t4_2204
	mbedtls_debug_print_msg(ra, s11_1003, 1<32>, 0x230C9FD0<32>, a5_1269, out a1_2191, out a2_2192, out a3_2193, out a4_2194, out a5_2195, out a7_2196, out s4_2197, out s5_2198, out s6_2199, out s7_2200, out s8_2201, out s9_2202, out s10_2203, out s11_1003, out t4_2204)
	s7_1245 = 0<32>
l23099E9A:
	word32 s0_1375 = s0_1244 + s7_1245
	word32 s5_1399
	word32 s6_1400
	word32 a1_2169
	word32 a2_2170
	word32 a3_2171
	word32 a4_2172
	word32 a5_2173
	word32 a7_2174
	word32 s7_2175
	word32 s8_2176
	word32 s9_2177
	word32 s10_2178
	word32 t4_2179
	word32 s4_1398
	word32 s11_1397
	mbedtls_debug_print_msg(ra, s11_1003, 3<32>, 0x230CA0C4<32>, s0_1375, out a1_2169, out a2_2170, out a3_2171, out a4_2172, out a5_2173, out a7_2174, out s4_1398, out s5_1399, out s6_1400, out s7_2175, out s8_2176, out s9_2177, out s10_2178, out s11_1397, out t4_2179)
	branch s0_1375 == 0<32> l23099EC8
l23099EB8:
	Mem1424[s3_1726 + 4<i32>:byte] = SLICE(s0_1375 >>u 8<u32>, byte, 0)
	Mem1425[s3_1726 + 5<i32>:byte] = SLICE(s0_1375, byte, 0)
	s4_1398 = s6_1400 + s0_1375
l23099EC8:
	Mem1429[s11_1397 + 164<i32>:word32] = 0x16<32>
	word32 a5_1430 = Mem1429[s11_1397 + 160<i32>:int32]
	Mem1434[s11_1397 + 168<i32>:word32] = s4_1398 - s5_1399
	Mem1436[a5_1430:byte] = 1<8>
	Mem1439[s11_1397 + 4<i32>:word32] = Mem1436[s11_1397 + 4<i32>:int32] + 1<32>
	word32 a5_1441 = CONVERT(Mem1439[Mem1439[s11_1397:int32] + 116<i32>:uint16], uint16, word32)
	word32 a5_1442 = a5_1441 & 2<32>
	branch (a5_1441 & 2<32>) == 0<32> l23099EFC
l23099EF6:
	ra = mbedtls_ssl_send_flight_completed(ra, 1<32>, a5_1441 & 2<32>, Mem1439[sp_1690:word32], Mem1439[sp_1690 + 4<i32>:word32], out s1, out a5_1442, out s11_1397)
l23099EFC:
	word32 a5_1520
	word32 s11_1527
	word32 a0_1541
	word32 s0_2223
	word32 a1_2224
	word32 a2_2225
	word32 a3_2226
	word32 a4_2227
	word32 s2_2228
	word32 s4_2229
	word32 s5_2230
	ra = mbedtls_ssl_write_record(ra, s1, s11_1397, a5_1442, mstatus, out s0_2223, out s1, out a0_1541, out a1_2224, out a2_2225, out a3_2226, out a4_2227, out a5_1520, out s2_2228, out s3, out s4_2229, out s5_2230, out s11_1527, out mstatus)
	branch a0_1541 == 0<32> l2309A02A
l2309A02A:
	word32 a1_2231
	word32 a2_2232
	word32 a3_2233
	word32 a4_2234
	word32 a7_2235
	word32 s4_2236
	word32 s5_2237
	word32 s6_2238
	word32 s7_2239
	word32 s8_2240
	word32 s9_2241
	word32 s10_2242
	word32 s11_2243
	word32 t4_2244
	mbedtls_debug_print_msg(ra, s11_1527, 2<32>, 0x230CA0F0<32>, a5_1520, out a1_2231, out a2_2232, out a3_2233, out a4_2234, out a5, out a7_2235, out s4_2236, out s5_2237, out s6_2238, out s7_2239, out s8_2240, out s9_2241, out s10_2242, out s11_2243, out t4_2244)
l23099F08:
	a5_1573 = a0_1541
	a3_1575 = 1045<i32>
l23099F16:
	word32 s10_1948
	word32 s11_1949
	word32 s9_1947
	word32 s8_1946
	word32 s7_1945
	word32 s6_1944
	word32 s5_1943
	word32 s4_1942
	word32 a4_1941
	word32 a3_1940
	word32 a1_1938
	word32 a2_1939
	mbedtls_debug_print_ret(ra, 1<32>, a3_1575, a5_1573, out a1_1938, out a2_1939, out a3_1940, out a4_1941, out a5, out s4_1942, out s5_1943, out s6_1944, out s7_1945, out s8_1946, out s9_1947, out s10_1948, out s11_1949)
l23099900:
	word32 s11_1924
	word32 t4_1925
	word32 s9_1922
	word32 s10_1923
	word32 s7_1920
	word32 s8_1921
	word32 s5_1918
	word32 s6_1919
	word32 a7_1916
	word32 s4_1917
	word32 a3_1914
	word32 a4_1915
	word32 a1_1912
	word32 a2_1913
	mbedtls_debug_print_msg(ra, s11_162, 1<32>, 0x230C9E0C<32>, a5_174, out a1_1912, out a2_1913, out a3_1914, out a4_1915, out a5, out a7_1916, out s4_1917, out s5_1918, out s6_1919, out s7_1920, out s8_1921, out s9_1922, out s10_1923, out s11_1924, out t4_1925)
l230998CA:
	word32 t4_1904
	word32 s10_1902
	word32 s11_1903
	word32 s8_1900
	word32 s9_1901
	word32 s6_1898
	word32 s7_1899
	word32 s5_1897
	word32 s4_1896
	word32 a7_1895
	word32 a4_1894
	word32 a3_1893
	word32 a2_1892
	word32 a1_1891
	mbedtls_debug_print_msg(ra, s11_162, 1<32>, 0x230C9DFC<32>, a5_174, out a1_1891, out a2_1892, out a3_1893, out a4_1894, out a5, out a7_1895, out s4_1896, out s5_1897, out s6_1898, out s7_1899, out s8_1900, out s9_1901, out s10_1902, out s11_1903, out t4_1904)
l23099882:
	Mem1660[s11_108 + 4<i32>:word32] = 1<32>
l23099852:
l2309B222:
l2309A492:
	word32 t4_1867
	word32 s11_1866
	word32 s10_1865
	word32 s9_1864
	word32 s7_1862
	word32 s8_1863
	word32 s5_1860
	word32 s6_1861
	word32 s4_1859
	word32 a7_1858
	word32 a4_1857
	word32 a3_1856
	word32 a2_1855
	word32 a1_1854
	mbedtls_debug_print_msg(ra, s11_108, 1<32>, 0x230CA894<32>, a5, out a1_1854, out a2_1855, out a3_1856, out a4_1857, out a5, out a7_1858, out s4_1859, out s5_1860, out s6_1861, out s7_1862, out s8_1863, out s9_1864, out s10_1865, out s11_1866, out t4_1867)
l23099918:
l2309988A:
	word32 s2_1703 = Mem1695[sp_1690 + 72<i32>:word32]
	word32 a4_1704 = Mem1695[sp_1690 + 104<i32>:word32]
	word32 a0_1705 = Mem1695[sp_1690 + 136<i32>:word32]
	word32 s5_1710 = Mem1695[Mem1695[sp_1690 + 200<i32>:word32] + 316<i32>:word32]
	s1Out = s1
	a0Out = a0_1705
	a4Out = a4_1704
	a5Out = a5
	s2Out = s2_1703
	s3Out = s3
	s5Out = s5_1710
	mstatusOut = mstatus
	return ra
mbedtls_ssl_handshake_client_step_exit:


void mbedtls_ssl_own_key(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_own_key_entry:
l2309B234:
	branch a5 == 0<32> l2309B23C
l2309B238:
	a5 = Mem0[a5 + 8<i32>:word32]
	branch a5 != 0<32> l2309B242
l2309B23C:
	branch Mem0[a5 + 76<i32>:word32] == 0<32> l2309B244
l2309B242:
l2309B244:
	return
mbedtls_ssl_own_key_exit:


word32 mbedtls_ssl_handshake_server_step(word32 ra, word32 a5, word32 s5, word32 mstatus, word32 dwArg18, word32 dwArgC4, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_step
// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0018:[0..31] Stack +00C4:[0..31]
// LiveOut: a0 a4 a5 mstatus s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus s10 s11 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 sp
mbedtls_ssl_handshake_server_step_entry:
l2309B248:
	word32 s0_105
	word32 a4_133 = 0x10<32>
	branch a5 != 0x10<32> l2309B278
l2309B278:
	word32 a0_33 = Mem29[0x40<32>:word32]
	branch true l2309B282
l2309B282:
	word32 a5_43
	word32 s10_49
	word32 t4_4159
	word32 a2_4148
	word32 s6_4154
	word32 s11_4158
	word32 s9_4157
	word32 s8_4156
	word32 s7_4155
	word32 a3_4149
	word32 s5_4153
	word32 s4_4152
	word32 a7_4151
	word32 a4_4150
	word32 a1_4147
	mbedtls_debug_print_msg(ra, a0_33, 2<32>, 0x230CA908<32>, a5, out a1_4147, out a2_4148, out a3_4149, out a4_4150, out a5_43, out a7_4151, out s4_4152, out s5_4153, out s6_4154, out s7_4155, out s8_4156, out s9_4157, out s10_49, out s11_4158, out t4_4159)
	word32 a0_62
	word32 a1_4161
	word32 a2_4162
	word32 a3_4163
	word32 a5_4164
	word32 s3_4165
	word32 s4_4166
	word32 s7_4167
	word32 s9_4168
	word32 s11_4169
	word32 s1_4160
	word32 s10_107
	word32 s2_109
	mbedtls_ssl_flush_output(ra, s10_49, a5_43, dwArg18, out s1_4160, out a0_62, out a1_4161, out a2_4162, out a3_4163, out a4_133, out a5_4164, out s2_109, out s3_4165, out s4_4166, out s5, out s7_4167, out s9_4168, out s10_107, out s11_4169)
	s0_105 = a0_62
	branch a0_62 != 0<32> l2309B2F6
l2309B2A8:
	branch (CONVERT(Mem29[Mem29[s10_107:int32] + 116<i32>:uint16], uint16, word32) & 2<32>) != 0<32> l2309B2D4
l2309B2D4:
	branch CONVERT(Mem29[Mem29[s10_107 + 48<i32>:int32] + 52<i32>:byte], byte, word32) != 1<32> l2309B2B4
l2309B2E2:
	word32 a0_125
	word32 a1_4206
	word32 s3_4210
	word32 s6_4212
	word32 s7_4213
	word32 s11_4215
	word32 s9_4214
	word32 s4_4211
	word32 a2_4207
	word32 a3_4208
	word32 a5_4209
	word32 s1_4205
	ra = mbedtls_ssl_resend(ra, a0_62, s10_107, 1<32>, s2_109, mstatus, dwArg18, out s0_105, out s1_4205, out a0_125, out a1_4206, out a2_4207, out a3_4208, out a4_133, out a5_4209, out s2_109, out s3_4210, out s4_4211, out s5, out s6_4212, out s7_4213, out s9_4214, out s10_107, out s11_4215, out mstatus)
	branch a0_125 == 0<32> l2309B2B4
l2309B2EA:
	s0_105 = a0_125
l2309B2B4:
	word32 s7_129 = Mem29[s10_107 + 4<i32>:int32]
	branch s7_129 <=u 0x12<32> l2309B2C2
l2309B2C2:
	a4_133 = 0x230CA8BC<32>
	word32 a5_135 = Mem29[(s7_129 << 2<u32>) + 0x230CA8BC<32>:word32]
	switch (Mem29[s10_107 + 4<i32>:int32]) { l2309B2EE l2309B31E }
l2309B31E:
	word32 a5_2657
	word32 a3_2659
	word32 a5_145
	word32 s10_151
	word32 s9_4193
	word32 s11_4194
	word32 t4_4195
	word32 s4_4188
	word32 s5_4189
	word32 s6_4190
	word32 s7_4191
	word32 s8_4192
	word32 a2_4184
	word32 a7_4187
	word32 a3_4185
	word32 a4_4186
	word32 a1_4183
	mbedtls_debug_print_msg(ra, s10_107, 2<32>, 0x230CA91C<32>, a5_135, out a1_4183, out a2_4184, out a3_4185, out a4_4186, out a5_145, out a7_4187, out s4_4188, out s5_4189, out s6_4190, out s7_4191, out s8_4192, out s9_4193, out s10_151, out s11_4194, out t4_4195)
	word32 a0_169
	word32 s10_179
	word32 s2_181
	word32 s11_4204
	word32 s6_4200
	word32 s7_4201
	word32 s8_4202
	word32 s9_4203
	word32 s0_4196
	word32 s3_4197
	word32 s4_4198
	word32 s5_4199
	word32 ra_1000 = mbedtls_ssl_fetch_input(ra, s0_105, s10_151, 5<32>, a5_145, s2_109, mstatus, s5, dwArg18, out s0_4196, out a0_169, out s2_181, out s3_4197, out s4_4198, out s5_4199, out s6_4200, out s7_4201, out s8_4202, out s9_4203, out s10_179, out s11_4204, out mstatus)
	s0_105 = a0_169
	branch a0_169 == 0<32> l2309B35E
l2309B35E:
	word32 s0_201 = Mem29[s10_179 + 88<i32>:int32]
	branch (CONVERT(Mem29[Mem29[s10_179:int32] + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2309B372
l2309B370:
l2309B372:
	word32 a2_4218
	word32 a7_4222
	word32 a5_4221
	word32 a4_4220
	word32 a3_4219
	word32 a1_4217
	word32 a0_4216
	mbedtls_debug_print_buf(ra_1000, 4<32>, s0_201, out a0_4216, out a1_4217, out a2_4218, out a3_4219, out a4_4220, out a5_4221, out a7_4222)
	word32 a3_4225
	word32 a4_4226
	word32 a5_4227
	word32 a7_4228
	word32 s4_4229
	word32 t4_4236
	word32 s5_4230
	word32 s9_4234
	word32 s11_4235
	word32 s6_4231
	word32 s7_4232
	word32 s8_4233
	word32 a1_4223
	word32 a2_4224
	word32 s10_1008
	mbedtls_debug_print_msg(ra_1000, s10_179, 3<32>, 0x230CA944<32>, CONVERT(Mem29[s0_201:byte], byte, word32), out a1_4223, out a2_4224, out a3_4225, out a4_4226, out a5_4227, out a7_4228, out s4_4229, out s5_4230, out s6_4231, out s7_4232, out s8_4233, out s9_4234, out s10_1008, out s11_4235, out t4_4236)
	word32 a5_1029 = 0x16<32>
	branch CONVERT(Mem29[s0_201:byte], byte, word32) == 0x16<32> l2309B3D2
l2309B3D2:
	word32 a3_257 = Mem29[s10_1008 + 92<i32>:int32]
	word32 a4_264 = CONVERT(Mem29[a3_257 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem29[a3_257:byte], byte, word32)
	word32 s10_280
	word32 a1_4237
	word32 a2_4238
	word32 a4_4240
	word32 a5_4241
	word32 s9_4248
	word32 s11_4249
	word32 t4_4250
	word32 s6_4245
	word32 s7_4246
	word32 s8_4247
	word32 s5_4244
	word32 s4_4243
	word32 a7_4242
	word32 a3_4239
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CA984<32>, CONVERT(SLICE(a4_264 << 8<u32> | a4_264 >>u 8<i32>, word16, 0), word16, word32), out a1_4237, out a2_4238, out a3_4239, out a4_4240, out a5_4241, out a7_4242, out s4_4243, out s5_4244, out s6_4245, out s7_4246, out s8_4247, out s9_4248, out s10_280, out s11_4249, out t4_4250)
	word32 a2_303
	word32 s8_4260
	word32 s9_4261
	word32 s11_4262
	word32 t4_4263
	word32 s5_4257
	word32 s6_4258
	word32 s7_4259
	word32 a3_4252
	word32 a4_4253
	word32 a5_4254
	word32 a7_4255
	word32 s4_4256
	word32 a1_4251
	mbedtls_debug_print_msg(ra_1000, s10_280, 3<32>, 0x230CA9A8<32>, CONVERT(Mem29[s0_201 + 1<i32>:byte], byte, word32), out a1_4251, out a2_303, out a3_4252, out a4_4253, out a5_4254, out a7_4255, out s4_4256, out s5_4257, out s6_4258, out s7_4259, out s8_4260, out s9_4261, out s10_1008, out s11_4262, out t4_4263)
	a5_1029 = 2<32>
	word32 a5_4264
	branch mbedtls_ssl_read_version(fp + -232<i32>, fp + -228<i32>, a2_303 >>u 1<i32> & 1<32>, s0_201 + 1<i32>, out a5_4264) > 2<32> l2309B452
l2309B452:
	branch (CONVERT(Mem29[Mem29[s10_1008:int32] + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2309B48A
l2309B45E:
	word32 a1_334 = Mem29[s10_1008 + 84<i32>:int32]
	a5_1029 = CONVERT(Mem29[a1_334:byte], byte, word32)
	branch a5_1029 != 0<32> l2309B46E
l2309B468:
	a5_1029 = CONVERT(Mem29[a1_334 + 1<i32>:byte], byte, word32)
	branch a5_1029 == 0<32> l2309B47C
l2309B47C:
	word32 a6_4270
	word32 a7_4271
	word32 a4_4268
	word32 a5_4269
	word32 a1_4265
	word32 a2_4266
	word32 a3_4267
	memcpy(Mem29[s10_1008 + 144<i32>:int32] + 2<32>, a1_334 + 2<32>, 6<32>, out a1_4265, out a2_4266, out a3_4267, out a4_4268, out a5_4269, out a6_4270, out a7_4271)
l2309B48A:
	word32 a4_356 = Mem29[s10_1008 + 92<i32>:int32]
	word32 a5_360 = CONVERT(Mem29[a4_356 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem29[a4_356:byte], byte, word32)
	word32 s8_365 = CONVERT(SLICE(a5_360 << 8<u32> | a5_360 >>u 8<i32>, word16, 0), word16, word32)
	a5_1029 = 0x4000000<32>
	branch s8_365 <=u 0x4000000<32> l2309B4C0
l2309B4C0:
	word32 a1_368 = 5<32>
	word32 a5_369 = CONVERT(Mem29[Mem29[s10_1008:int32] + 116<i32>:uint16], uint16, word32)
	branch (a5_369 & 2<32>) == 0<32> l2309B4D0
l2309B4CE:
	a1_368 = 0xD<32>
l2309B4D0:
	word32 a0_391
	word32 s10_401
	word32 s11_402
	word32 s2_403
	word32 s3_404
	word32 s4_405
	word32 s5_406
	word32 s6_407
	word32 s7_408
	word32 s8_409
	word32 s9_410
	word32 s0_4272
	ra_1000 = mbedtls_ssl_fetch_input(ra_1000, dwArgC4, s10_1008, a1_368 + s8_365, a5_369 & 2<32>, s2_181, mstatus, s5, dwArg18, out s0_4272, out a0_391, out s2_403, out s3_404, out s4_405, out s5_406, out s6_407, out s7_408, out s8_409, out s9_410, out s10_401, out s11_402, out mstatus)
	s0_105 = a0_391
	branch a0_391 == 0<32> l2309B4EC
l2309B4EC:
	branch (CONVERT(Mem29[Mem29[s10_401:int32] + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2309B552
l2309B552:
	Mem425[s10_401 + 116<i32>:word32] = 0<32>
l2309B4F8:
	Mem427[s10_401 + 124<i32>:word32] = s8_409 + 13<i32>
l2309B500:
	word32 s1_430 = Mem429[s10_401 + 100<i32>:int32]
	word32 a3_4301
	word32 a4_4302
	word32 a7_4304
	word32 a5_4303
	word32 a2_4300
	word32 a0_4298
	word32 a1_4299
	mbedtls_debug_print_buf(ra_1000, 4<32>, s1_430, out a0_4298, out a1_4299, out a2_4300, out a3_4301, out a4_4302, out a5_4303, out a7_4304)
	word32 a5_456 = Mem429[Mem429[s10_401 + 48<i32>:int32] + 196<i32>:int32]
	word32 s1_471
	word32 s8_478
	word32 a3_485
	word32 a6_491
	word32 a7_492
	word32 t3_493
	word32 t0_494
	word32 t1_495
	word32 t4_496
	word32 tp_497
	word32 t5_499
	word32 sp_1097
	call a5_456 (retsize: 0;)
		uses: a0:s10_401,a1:s1_430,a2:s8_409,a3:a3_485,a5:a5_456,a6:a6_491,a7:a7_492,mstatus:mstatus_417,ra:ra_416,s0:a0_391,s1:s1_430,s10:s10_401,s11:s11_402,s2:s2_403,s3:s3_404,s4:s4_405,s5:s5_406,s6:s6_407,s7:s7_408,s8:s8_409,s9:s9_410,Stack +0128:dwArg18,Stack +01D4:dwArgC4,t0:t0_494,t1:t1_495,t3:t3_493,t4:t4_496,t5:t5_499,tp:tp_497
		defs: a3:a3_485,a6:a6_491,a7:a7_492,mstatus:mstatus_498,ra:ra_469,s0:s0_470,s1:s1_471,s10:s10_480,s8:s8_478,sp:sp_468,t0:t0_494,t1:t1_495,t3:t3_493,t4:t4_496,t5:t5_499,tp:tp_497
	word32 a5_502 = CONVERT(Mem429[Mem429[s10_1008:int32] + 116<i32>:uint16], uint16, word32)
	word32 a4_501 = 4<32>
	a5_1029 = a5_502 & 2<32>
	branch (a5_502 & 2<32>) == 0<32> l2309B540
l2309B53E:
	a4_501 = 0xC<32>
l2309B540:
	branch s8_478 >=u a4_501 l2309B558
l2309B558:
	word32 a7_4289
	word32 s4_4290
	word32 s5_4291
	word32 s6_4292
	word32 s7_4293
	word32 s8_4294
	word32 s9_4295
	word32 s11_4296
	word32 t4_4297
	word32 a4_4287
	word32 a5_4288
	word32 a3_4286
	word32 a2_4285
	word32 a1_4284
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CA9E4<32>, CONVERT(Mem429[s1_471:byte], byte, word32), out a1_4284, out a2_4285, out a3_4286, out a4_4287, out a5_4288, out a7_4289, out s4_4290, out s5_4291, out s6_4292, out s7_4293, out s8_4294, out s9_4295, out s10_1008, out s11_4296, out t4_4297)
	a5_1029 = 1<32>
	branch CONVERT(Mem429[s1_471:byte], byte, word32) == 1<32> l2309B58C
l2309B58C:
	word32 s8_566
	word32 s11_4316
	word32 t4_4317
	word32 a1_4305
	word32 s5_4312
	word32 s9_4315
	word32 s6_4313
	word32 s7_4314
	word32 a5_4309
	word32 a7_4310
	word32 s4_4311
	word32 a4_4308
	word32 a3_4307
	word32 a2_4306
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CAA08<32>, CONVERT(Mem429[s1_471 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem429[s1_471 + 2<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem429[s1_471 + 3<i32>:byte], byte, word32), out a1_4305, out a2_4306, out a3_4307, out a4_4308, out a5_4309, out a7_4310, out s4_4311, out s5_4312, out s6_4313, out s7_4314, out s8_566, out s9_4315, out s10_1008, out s11_4316, out t4_4317)
	a5_1029 = CONVERT(Mem429[s1_471 + 1<i32>:byte], byte, word32)
	branch a5_1029 != 0<32> l2309B5EC
l2309B5BE:
	word32 a2_574 = 4<32>
	word32 a3_575 = CONVERT(Mem429[Mem429[s10_1008:int32] + 116<i32>:uint16], uint16, word32)
	branch (a3_575 & 2<32>) == 0<32> l2309B5CE
l2309B5CC:
	a2_574 = 0xC<32>
l2309B5CE:
	word32 a5_583 = CONVERT(Mem429[s1_471 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem429[s1_471 + 2<i32>:byte], byte, word32)
	a5_1029 = CONVERT(SLICE(a5_583 >>u 8<i32> | a5_583 << 8<u32>, word16, 0), word16, word32) + a2_574
	branch s8_566 == a5_1029 l2309B5FA
l2309B5FA:
	word32 a5_624
	branch (a3_575 & 2<32>) == 0<32> l2309B678
l2309B5FC:
	word32 a3_594 = Mem429[s10_1008 + 100<i32>:int32]
	word32 a4_598 = CONVERT(Mem429[a3_594 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem429[a3_594 + 4<i32>:byte], byte, word32)
	word32 a5_604 = CONVERT(SLICE(a4_598 << 8<u32> | a4_598 >>u 8<i32>, word16, 0), word16, word32)
	Mem605[a5_604 + 28<i32>:word32] = Mem429[s10_1008 + 48<i32>:int32]
	Mem608[a5_604 + 0x21<32>:word32] = Mem605[s10_1008 + 48<i32>:int32]
	word32 a0_609 = Mem608[s10_1008 + 100<i32>:int32]
	word32 a5_2626 = CONVERT(Mem608[a0_609 + 6<i32>:byte], byte, word32)
	branch a5_2626 == 0<32> l2309B650
l2309B650:
	a5_2626 = CONVERT(Mem608[a0_609 + 7<i32>:byte], byte, word32)
	branch a5_2626 != 0<32> l2309B630
l2309B656:
	a5_2626 = CONVERT(Mem608[a0_609 + 8<i32>:byte], byte, word32)
	branch a5_2626 != 0<32> l2309B630
l2309B65C:
	word32 a1_4357
	word32 a2_4358
	word32 a3_4359
	word32 a4_4360
	branch memcmp(a0_609 + 1<32>, a0_609 + 9<i32>, 3<32>, out a1_4357, out a2_4358, out a3_4359, out a4_4360, out a5_2626) != 0<32> l2309B630
l2309B66A:
	a5_624 = 0xC<32>
	branch (CONVERT(Mem608[Mem608[s10_1008:int32] + 116<i32>:uint16], uint16, word32) & 2<32>) != 0<32> l2309B67A
l2309B678:
	a5_624 = 4<32>
l2309B67A:
	word32 s1_630 = s1_471 + a5_624
	word32 s8_633 = s8_566 - a5_624
	a5_1029 = 37<i32>
	branch s8_633 >u 37<i32> l2309B696
l2309B696:
	word32 a2_654
	word32 a4_4334
	word32 a5_4335
	word32 a7_4336
	word32 a1_4332
	word32 a3_4333
	word32 a0_4331
	mbedtls_debug_print_buf(ra_1000, 3<32>, s1_630, out a0_4331, out a1_4332, out a2_654, out a3_4333, out a4_4334, out a5_4335, out a7_4336)
	word32 a5_4337
	mbedtls_ssl_read_version(s10_1008 + 8<i32>, s10_1008 + 12<i32>, a2_654 >>u 1<i32> & 1<32>, s1_630, out a5_4337)
	Mem675[Mem662[s10_1008 + 48<i32>:int32] + 332<i32>:word32] = Mem662[s10_1008 + 8<i32>:int32]
	word32 a6_677 = Mem675[s10_1008 + 12<i32>:int32]
	Mem678[Mem675[s10_1008 + 48<i32>:int32] + 336<i32>:word32] = a6_677
	word32 a4_679 = Mem678[s10_1008:int32]
	word32 a5_680 = Mem678[s10_1008 + 8<i32>:int32]
	word32 a3_682 = CONVERT(Mem678[a4_679 + 115<i32>:byte], byte, word32)
	branch a5_680 < CONVERT(Mem678[a4_679 + 114<i32>:byte], byte, word32) l2309B6FA
l2309B6F6:
	branch a6_677 >= a3_682 l2309B728
l2309B728:
	word32 a5_684
	word32 a3_683 = CONVERT(Mem678[a4_679 + 112<i32>:byte], byte, word32)
	branch a3_683 >= a5_680 l2309B73E
l2309B73E:
	a5_684 = CONVERT(Mem678[a4_679 + 113<i32>:byte], byte, word32)
	branch a5_684 < a6_677 l2309B738
l2309B730:
	Mem685[s10_1008 + 8<i32>:word32] = a3_683
	a5_684 = CONVERT(Mem685[a4_679 + 113<i32>:byte], byte, word32)
l2309B738:
	Mem689[s10_1008 + 12<i32>:word32] = a5_684
l2309B746:
	word32 a4_4365
	word32 a5_4366
	word32 a7_4367
	word32 a3_4364
	word32 a1_4362
	word32 a2_4363
	word32 a0_4361
	mbedtls_debug_print_buf(ra_1000, 3<32>, s1_630 + 2<i32>, out a0_4361, out a1_4362, out a2_4363, out a3_4364, out a4_4365, out a5_4366, out a7_4367)
	word32 a1_4368
	word32 a2_4369
	word32 a6_4373
	word32 a7_4374
	word32 a5_4372
	word32 a4_4371
	word32 a3_4370
	memcpy(Mem717[s10_1008 + 48<i32>:int32] + 216<i32>, s1_630 + 2<i32>, 32<i32>, out a1_4368, out a2_4369, out a3_4370, out a4_4371, out a5_4372, out a6_4373, out a7_4374)
	word32 s3_735 = CONVERT(Mem717[s1_630 + 34<i32>:byte], byte, word32)
	a5_1029 = 32<i32>
	branch s3_735 >u 32<i32> l2309B78E
l2309B786:
	branch s8_633 >=u s3_735 + 36<i32> l2309B79C
l2309B79C:
	word32 a5_4380
	word32 a7_4381
	word32 a1_4376
	word32 a4_4379
	word32 a2_4377
	word32 a3_4378
	word32 a0_4375
	mbedtls_debug_print_buf(ra_1000, 3<32>, s1_630 + 35<i32>, out a0_4375, out a1_4376, out a2_4377, out a3_4378, out a4_4379, out a5_4380, out a7_4381)
	Mem763[Mem717[s10_1008 + 44<i32>:int32] + 8<i32>:word32] = s3_735
	word32 a2_769
	word32 a3_4385
	word32 a4_4386
	word32 a5_4387
	word32 t1_4382
	word32 a0_4383
	word32 a1_4384
	ra_1000 = memset(ra_1000, Mem763[s10_1008 + 44<i32>:int32] + 0xC<32>, 0<32>, 32<i32>, out t1_4382, out a0_4383, out a1_4384, out a2_769, out a3_4385, out a4_4386, out a5_4387)
	word32 a5_4392
	word32 a6_4393
	word32 a7_4394
	word32 a1_4388
	word32 a2_4389
	word32 a3_4390
	word32 a4_4391
	memcpy(Mem763[a2_769 + 8<i32>:word32] + 0xC<32>, s1_630 + 35<i32>, a2_769, out a1_4388, out a2_4389, out a3_4390, out a4_4391, out a5_4392, out a6_4393, out a7_4394)
	word32 s3_765 = s3_735 + 35<i32>
	branch (CONVERT(Mem763[Mem763[s10_1008:int32] + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2309B85A
l2309B7F2:
	a5_1029 = s1_630 + (s3_735 + 35<i32>)
	word32 s2_797 = CONVERT(Mem763[a5_1029:byte], byte, word32)
	branch s8_633 >=u ((s3_735 + 35<i32>) + s2_797) + 3<32> l2309B810
l2309B810:
	word32 a3_4398
	word32 a4_4399
	word32 a7_4400
	word32 a1_4396
	word32 a2_4397
	word32 a0_4395
	mbedtls_debug_print_buf(ra_1000, 3<32>, s1_630 + (s3_735 + 36<i32>), out a0_4395, out a1_4396, out a2_4397, out a3_4398, out a4_4399, out a5_1029, out a7_4400)
	branch s2_797 == 0<32> l2309B840
l2309B840:
	word32 s5_835
	word32 a2_4402
	word32 a4_4404
	word32 s9_4410
	word32 t4_4412
	word32 s11_4411
	word32 a5_4405
	word32 s7_4409
	word32 s6_4408
	word32 s4_4407
	word32 a7_4406
	word32 a3_4403
	word32 a1_4401
	mbedtls_debug_print_msg(ra_1000, s10_1008, 2<32>, 0x230CAAAC<32>, a5_1029, out a1_4401, out a2_4402, out a3_4403, out a4_4404, out a5_4405, out a7_4406, out s4_4407, out s5_835, out s6_4408, out s7_4409, out s8_633, out s9_4410, out s10_1008, out s11_4411, out t4_4412)
	s3_765 = s5_835
l2309B85A:
	word32 a5_847 = s1_630 + s3_765
	word32 s6_1089 = CONVERT(Mem763[a5_847:byte], byte, word32) << 8<i32> | CONVERT(Mem763[a5_847 + 1<i32>:byte], byte, word32)
	a5_1029 = 1<32>
	branch s6_1089 <= 1<32> l2309B886
l2309B872:
	word32 s9_854 = s3_765 + s6_1089
	branch s8_633 <u s9_854 + 3<i32> l2309B886
l2309B87E:
	word32 s5_1741 = s6_1089 & 1<i32>
	branch (s6_1089 & 1<i32>) == 0<32> l2309B894
l2309B894:
	word32 s3_1546 = s3_765 + 2<32> + s1_630
	word32 a4_4417
	word32 a5_4418
	word32 a7_4419
	word32 a2_4415
	word32 a3_4416
	word32 a1_4414
	word32 a0_4413
	mbedtls_debug_print_buf(ra_1000, 3<32>, s3_1546, out a0_4413, out a1_4414, out a2_4415, out a3_4416, out a4_4417, out a5_4418, out a7_4419)
	word32 a6_884 = CONVERT(Mem763[s1_630 + (s9_854 + 2<32>):byte], byte, word32)
	a5_1029 = 0xF<32>
	word32 s2_1560 = 0x230C8000<32>
	branch a6_884 >u 0xFFFFFFF0<32> l2309B8D6
l2309B8CC:
	word32 s9_888 = s9_854 + 2<32> + a6_884
	branch s8_633 >=u s9_888 + 1<i32> l2309B8E8
l2309B8E8:
	Mem904[sp_1097 + 8<i32>:word32] = s9_888 + 1<i32>
	word32 a7_911
	word32 a0_4420
	word32 a1_4421
	word32 a2_4422
	word32 a3_4423
	word32 a4_4424
	word32 a5_4425
	mbedtls_debug_print_buf(ra_1000, 3<32>, s1_630 + (s9_854 + 3<i32>), out a0_4420, out a1_4421, out a2_4422, out a3_4423, out a4_4424, out a5_4425, out a7_911)
	Mem918[Mem904[s10_1008 + 44<i32>:int32] + 4<i32>:word32] = 0<32>
	branch (CONVERT(Mem918[Mem918[s10_1008:int32] + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2309B924
l2309B91C:
	Mem923[Mem918[s10_1008 + 44<i32>:int32] + 4<i32>:word32] = 0<32>
l2309B924:
	a5_1029 = s9_888 + 3<i32>
	branch a7_911 >=u s8_633 l2309B972
l2309B92C:
	branch s8_633 >=u s9_888 + 3<i32> l2309B93E
l2309B93E:
	s5_1741 = CONVERT(Mem930[s1_630 + a7_911:byte], byte, word32) << 8<i32> | CONVERT(Mem930[(s9_888 + s1_630) + 2<i32>:byte], byte, word32)
	branch s5_1741 <=u 0xFFFFFFFD<32> l2309B964
l2309B95C:
	branch s8_633 == s5_1741 + (s9_888 + 3<i32>) l2309B972
l2309B972:
	word32 s1_1192 = s1_630 + (s9_888 + 3<i32>)
	word32 a5_4444
	word32 a7_4445
	word32 a1_4440
	word32 a4_4443
	word32 a2_4441
	word32 a3_4442
	word32 a0_4439
	mbedtls_debug_print_buf(ra_1000, 3<32>, s1_1192, out a0_4439, out a1_4440, out a2_4441, out a3_4442, out a4_4443, out a5_4444, out a7_4445)
l2309B990:
	word32 a4_1363
	word32 a5_1359
	branch s5_1741 != 0<32> l2309BA0C
l2309BA0C:
	word32 a5_976 = CONVERT(Mem971[s1_1192 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem971[s1_1192:byte], byte, word32)
	word32 a4_984 = CONVERT(Mem971[s1_1192 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem971[s1_1192 + 2<i32>:byte], byte, word32)
	a5_1029 = CONVERT(SLICE(a5_976 >>u 8<i32> | a5_976 << 8<u32>, word16, 0), word16, word32)
	branch s5_1741 >=u CONVERT(SLICE(a4_984 << 8<u32> | a4_984 >>u 8<i32>, word16, 0), word16, word32) + 4<i32> l2309BA5A
l2309BA5A:
	word32 s8_1091
	word32 s4_1087
	word32 a4_1062
	word32 a4_1066
	word32 a5_1065
	branch a5_1029 == 0xD<32> l2309BC4C
l2309BC4C:
	word32 s4_1010
	word32 s8_1014
	word32 a5_4526
	word32 s7_4530
	word32 s11_4532
	word32 t4_4533
	word32 s9_4531
	word32 a7_4527
	word32 s5_4528
	word32 s6_4529
	word32 a3_4524
	word32 a4_4525
	word32 a1_4522
	word32 a2_4523
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CAB64<32>, 0x230CB000<32>, out a1_4522, out a2_4523, out a3_4524, out a4_4525, out a5_4526, out a7_4527, out s4_1010, out s5_4528, out s6_4529, out s7_4530, out s8_1014, out s9_4531, out s10_1008, out s11_4532, out t4_4533)
	word32 a4_1024 = CONVERT(Mem971[s1_1192 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem971[s1_1192 + 4<i32>:byte], byte, word32)
	word32 a3_1022 = s1_1192 + s8_1014
	a5_1029 = CONVERT(SLICE(a4_1024 << 8<u32> | a4_1024 >>u 8<i32>, word16, 0), word16, word32)
	branch s4_1010 != a5_1029 + 2<i32> l2309BC8C
l2309BC88:
	a5_1029 = a5_1029 & 1<32>
	branch (a5_1029 & 1<32>) == 0<32> l2309BC9A
l2309BC9A:
	word32 s11_1033 = Mem971[Mem971[s10_1008:int32] + 88<i32>:int32]
l2309BCA2:
	branch Mem1035[s11_1033:int32] != 0<32> l2309BCC2
l2309BCC2:
	word32 s9_1038 = s1_1192 + 6<i32>
l2309BCC6:
	branch s9_1038 <u a3_1022 l2309BCCE
l2309BCCE:
	word32 a5_1043 = Mem1042[s11_1033:int32]
	word32 a0_1044 = CONVERT(Mem1042[s9_1038:byte], byte, word32)
	Mem1046[sp_1097 + 136<i32>:word32] = a3_1022
	Mem1047[sp_1097 + 8<i32>:word32] = a5_1043
	word32 a5_1050
	branch a5_1050 != mbedtls_ssl_md_alg_from_hash(a0_1044, out a5_1050) l2309BD10
l2309BD10:
	s9_1038 = s9_1038 + 2<32>
l2309BCE6:
	Mem1059[CONVERT(Mem1047[s9_1038:byte], byte, word32):word32] = Mem1047[s10_1008 + 48<i32>:int32]
	a4_1062 = 0x230CAB8C<32>
	a5_1029 = Mem1059[Mem1059[s10_1008 + 48<i32>:int32]:word32]
l2309BCCA:
	s11_1033 = s11_1033 + 4<32>
l2309BCA8:
	a5_1065 = 0x230CB000<32>
	a4_1066 = 0x230CABBC<32>
l2309BC8C:
l2309BA60:
	word32 a2_1451
	word32 a5_1404
	branch a5_1029 >u 0xD<32> l2309BA7A
l2309BA7A:
	branch a5_1029 == 35<i32> l2309BD56
l2309BD56:
	word32 a4_4654
	word32 s9_4658
	word32 t4_4660
	word32 s11_4659
	word32 a5_4655
	word32 a7_4656
	word32 s7_4657
	word32 a2_4652
	word32 a3_4653
	word32 a1_4651
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CAC04<32>, 0x230CB000<32>, out a1_4651, out a2_4652, out a3_4653, out a4_4654, out a5_4655, out a7_4656, out s4_1087, out s5, out s6_1089, out s7_4657, out s8_1091, out s9_4658, out s10_1008, out s11_4659, out t4_4660)
	word32 a4_1103
	ra_1000 = mbedtls_ssl_session_init(ra_1000, sp_1097 + 92<i32>, out a4_1103)
	word32 a5_1109 = Mem971[a4_1103 + 64<i32>:word32]
	branch a4_1103 == 0<32> l2309BB62
l2309BD7E:
	branch Mem971[a5_1109 + 60<i32>:word32] == 0<32> l2309BB62
l2309BD84:
	Mem1114[Mem971[s10_1008 + 48<i32>:int32] + 344<i32>:word32] = 1<32>
	word32 a4_1126
	word32 s11_4712
	word32 t4_4713
	word32 a5_4708
	word32 a7_4709
	word32 s7_4710
	word32 s9_4711
	word32 a1_4705
	word32 a2_4706
	word32 a3_4707
	word32 a0_1121 = mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CA818<32>, s4_1087, out a1_4705, out a2_4706, out a3_4707, out a4_1126, out a5_4708, out a7_4709, out s4_1087, out s5, out s6_1089, out s7_4710, out s8_1091, out s9_4711, out s10_1008, out s11_4712, out t4_4713)
	branch s4_1087 == 0<32> l2309BB62
l2309BDAC:
	word32 a0_1146
	word32 a5_1147
	word32 a1_1148
	word32 a2_1149
	call a4_1126 (retsize: 0;)
		uses: a0:a0_1121,a1:sp_1097 + 92<i32>,a4:a4_1126,a5:Mem1114[a0_1121 + 68<i32>:word32],ra:ra_1105
		defs: a0:a0_1146,a1:a1_1148,a2:a2_1149,a5:a5_1147,s10:s10_1153
	branch a0_1146 == 0<32> l2309BE14
l2309BE14:
	word32 a1_1167 = Mem1114[a2_1149 + 8<i32>:word32]
	Mem1169[sp_1097 + 176<i32>:word32] = a2_1149
	word32 a5_1171
	word32 a1_1173
	word32 a2_1174
	word32 a6_4716
	word32 a7_4717
	word32 a3_4714
	word32 a4_4715
	memcpy(sp_1097 + 104<i32>, a1_1167 + 0xC<32>, a2_1149, out a1_1173, out a2_1174, out a3_4714, out a4_4715, out a5_1171, out a6_4716, out a7_4717)
	word32 a0_4718
	word32 a5_4722
	word32 s4_4723
	word32 a2_4719
	word32 a3_4720
	word32 a4_4721
	s1_1192 = mbedtls_ssl_session_free(ra_1000, Mem1169[s10_1008 + 44<i32>:int32], a1_1173, a2_1174, a5_1171, mstatus, Mem1169[sp_1097 + 296<i32>:word32], Mem1169[sp_1097 + 328<i32>:word32], Mem1169[sp_1097 + 360<i32>:word32], Mem1169[sp_1097 + 392<i32>:word32], out a0_4718, out a2_4719, out a3_4720, out a4_4721, out a5_4722, out s4_4723)
	word32 a1_4724
	word32 a7_4730
	word32 a2_4725
	word32 a6_4729
	word32 a5_4728
	word32 a4_4727
	word32 a3_4726
	memcpy(Mem1169[s10_1008 + 44<i32>:int32], sp_1097 + 92<i32>, 116<i32>, out a1_4724, out a2_4725, out a3_4726, out a4_4727, out a5_4728, out a6_4729, out a7_4730)
	word32 a5_1212 = sp_1097 + 92<i32>
l2309BE3C:
	Mem1214[a5_1212:byte] = 0<8>
	a5_1212 = a5_1212 + 1<32>
	branch a5_1212 != sp_1097 + 208<i32> l2309BE3C
l2309BE48:
	word32 a1_4754
	word32 a2_4755
	word32 a3_4756
	word32 a7_4759
	word32 a5_4758
	word32 a4_4757
	word32 s9_4761
	word32 s11_4762
	word32 s7_4760
	word32 t4_4763
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CAC6C<32>, 0x230CB000<32>, out a1_4754, out a2_4755, out a3_4756, out a4_4757, out a5_4758, out a7_4759, out s4_1087, out s5, out s6_1089, out s7_4760, out s8_1091, out s9_4761, out s10_1008, out s11_4762, out t4_4763)
	Mem1248[Mem1214[s10_1008 + 48<i32>:int32] + 328<i32>:word32] = 1<32>
	Mem1250[Mem1248[s10_1008 + 48<i32>:int32] + 344<i32>:word32] = 0<32>
l2309BDC0:
	Mem1251[sp_1097 + 8<i32>:word32] = a0_1146
	word32 s4_4735
	word32 a4_4734
	word32 a3_4733
	word32 a2_4732
	word32 a0_4731
	s1_1192 = mbedtls_ssl_session_free(ra_1000, sp_1097 + 92<i32>, a1_1148, a2_1149, a5_1147, mstatus, Mem1251[sp_1097 + 296<i32>:word32], Mem1251[sp_1097 + 328<i32>:word32], Mem1251[sp_1097 + 360<i32>:word32], Mem1251[sp_1097 + 392<i32>:word32], out a0_4731, out a2_4732, out a3_4733, out a4_4734, out a5_1065, out s4_4735)
	branch a5_1065 != 0xF8FFFE80<32> l2309BDE2
l2309BDE2:
	branch a5_1065 != 0xF9000280<32> l2309BDFA
l2309BDFA:
	word32 a3_4748
	word32 s7_4751
	word32 s11_4753
	word32 s9_4752
	word32 a4_4749
	word32 a5_4750
	word32 a1_4746
	word32 a2_4747
	mbedtls_debug_print_ret(ra_1000, 1<32>, 483<i32>, a5_1065, out a1_4746, out a2_4747, out a3_4748, out a4_4749, out a5_4750, out s4_1087, out s5, out s6_1089, out s7_4751, out s8_1091, out s9_4752, out s10_1008, out s11_4753)
l2309BDEC:
	a4_1066 = 0x230CAC3C<32>
l2309BDD4:
	a4_1066 = 0x230CAC24<32>
l2309BCB4:
	word32 a7_4741
	word32 a5_4740
	word32 a4_4739
	word32 a3_4738
	word32 a2_4737
	word32 s7_4742
	word32 s9_4743
	word32 s11_4744
	word32 t4_4745
	word32 a1_4736
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, a4_1066, a5_1065, out a1_4736, out a2_4737, out a3_4738, out a4_4739, out a5_4740, out a7_4741, out s4_1087, out s5, out s6_1089, out s7_4742, out s8_1091, out s9_4743, out s10_1008, out s11_4744, out t4_4745)
l2309BA82:
	branch a5_1029 == 0xFFFFF01<32> l2309BBFA
l2309BBFA:
	word32 a7_4666
	word32 t4_4670
	word32 s11_4669
	word32 s9_4668
	word32 s7_4667
	word32 a1_4661
	word32 a5_4665
	word32 a4_4664
	word32 a3_4663
	word32 a2_4662
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CA3FC<32>, a5_1029, out a1_4661, out a2_4662, out a3_4663, out a4_4664, out a5_4665, out a7_4666, out s4_1087, out s5, out s6_1089, out s7_4667, out s8_1091, out s9_4668, out s10_1008, out s11_4669, out t4_4670)
	a5_1359 = 1<32>
	branch s4_1087 != 1<32> l2309BC1E
l2309BC18:
	a5_1359 = CONVERT(Mem971[s1_1192 + 4<i32>:byte], byte, word32)
	branch a5_1359 == 0<32> l2309BC46
l2309BC46:
	Mem1361[s10_1008 + 188<i32>:word32] = s4_1087
l2309BC1E:
	a4_1363 = 0x230CA41C<32>
l2309BA8C:
	branch a5_1029 != 0x10<32> l2309BA6C
l2309BA92:
	word32 a3_4673
	word32 a5_4674
	word32 a7_4675
	word32 s7_4676
	word32 s9_4677
	word32 s11_4678
	word32 t4_4679
	word32 a1_4671
	word32 a2_4672
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CA484<32>, a5_1029, out a1_4671, out a2_4672, out a3_4673, out a4_133, out a5_4674, out a7_4675, out s4_1087, out s5, out s6_1089, out s7_4676, out s8_1091, out s9_4677, out s10_1008, out s11_4678, out t4_4679)
	word32 s11_1392 = Mem971[Mem971[s10_1008:int32] + 96<i32>:int32]
	branch s11_1392 == 0<32> l2309BB62
l2309BAB6:
	branch s4_1087 <=u 3<32> l2309B3CA
l2309BABC:
	word32 a5_1397 = CONVERT(Mem971[s1_1192 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem971[s1_1192 + 4<i32>:byte], byte, word32)
	a4_133 = s4_1087 + -2<i32>
	branch CONVERT(SLICE(a5_1397 >>u 8<i32> | a5_1397 << 8<u32>, word16, 0), word16, word32) != s4_1087 + -2<i32> l2309B3CA
l2309BADC:
	a5_1404 = s1_1192 + 6<i32>
	Mem1405[sp_1097 + 8<i32>:word32] = a5_1404
	word32 s9_1406 = s1_1192 + s8_1091
l2309BAE6:
	word32 a0_1409 = Mem1408[s11_1392:int32]
	branch a0_1409 != 0<32> l2309BE74
l2309BE74:
	word32 a3_4682
	word32 a4_4683
	word32 a1_4680
	word32 a2_4681
	a4_133 = strlen(a0_1409, out a1_4680, out a2_4681, out a3_4682, out a4_4683, out a5_1404)
l2309BE7C:
	branch s9_1406 != a5_1404 l2309BE84
l2309BE84:
	branch s9_1406 <u a5_1404 l2309B3CA
l2309BE88:
	word32 a6_1421 = a5_1404 + 1<i32>
	word32 a5_1423 = CONVERT(Mem1422[a5_1404:byte], byte, word32)
	branch a5_1423 == 0<32> l2309B3CA
l2309BE94:
	branch a4_133 != a5_1423 l2309BEBC
l2309BE98:
	word32 a1_1426 = Mem1422[s11_1392:int32]
	Mem1430[sp_1097 + 140<i32>:word32] = a5_1423
	Mem1431[sp_1097 + 12<i32>:word32] = a4_133
	Mem1432[sp_1097 + 136<i32>:word32] = a6_1421
	word32 a3_4693
	word32 a2_4692
	word32 a1_4691
	word32 a0_1433 = memcmp(a6_1421, a1_1426, a4_133, out a1_4691, out a2_4692, out a3_4693, out a4_133, out a5_1423)
	s4_1087 = Mem1432[sp_1097 + 8<i32>:word32]
	s8_1091 = Mem1432[sp_1097 + 196<i32>:word32]
	branch a0_1433 != 0<32> l2309BEBC
l2309BEBC:
	a5_1404 = a5_1423 + a6_1421
l2309BEB2:
	Mem1449[s10_1008 + 184<i32>:word32] = Mem1432[s11_1392:int32]
l2309BE80:
	s11_1392 = s11_1392 + 4<32>
l2309BAEE:
	a2_1451 = 120<i32>
l2309BA64:
	branch a5_1029 == 0<32> l2309BAF4
l2309BAF4:
	word32 t4_4543
	word32 a5_4538
	word32 s11_4542
	word32 s9_4541
	word32 s7_4540
	word32 a7_4539
	word32 a4_4537
	word32 a3_4536
	word32 a2_4535
	word32 a1_4534
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CAB1C<32>, a5_1029, out a1_4534, out a2_4535, out a3_4536, out a4_4537, out a5_4538, out a7_4539, out s4_1087, out s5, out s6_1089, out s7_4540, out s8_1091, out s9_4541, out s10_1008, out s11_4542, out t4_4543)
	word32 a5_1478 = Mem971[Mem971[s10_1008:int32] + 44<i32>:word32]
	branch a5_1478 == 0<32> l2309BB62
l2309BB14:
	word32 s11_1493
	word32 s7_1497
	word32 s9_1499
	word32 a5_4648
	word32 a7_4649
	word32 t4_4650
	word32 a1_4644
	word32 a2_4645
	word32 a3_4646
	word32 a4_4647
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CAB38<32>, a5_1478, out a1_4644, out a2_4645, out a3_4646, out a4_4647, out a5_4648, out a7_4649, out s4_1087, out s5, out s6_1089, out s7_1497, out s8_1091, out s9_1499, out s10_1008, out s11_1493, out t4_4650)
	word32 a4_1507 = CONVERT(Mem971[s1_1192 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem971[s1_1192 + 4<i32>:byte], byte, word32)
	a5_1029 = CONVERT(SLICE(a4_1507 << 8<u32> | a4_1507 >>u 8<i32>, word16, 0), word16, word32)
	branch s4_1087 == a5_1029 + 2<i32> l2309BB5A
l2309BB5A:
	word32 a2_1514 = s1_1192 + 6<i32>
l2309BB60:
	branch a5_1029 != 0<32> l2309BB82
l2309BB82:
	word32 a4_1522 = CONVERT(Mem971[a2_1514 + 2<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem971[a2_1514 + 1<i32>:byte], byte, word32)
	word32 a3_1527 = CONVERT(SLICE(a4_1522 << 8<u32> | a4_1522 >>u 8<i32>, word16, 0), word16, word32)
	branch a5_1029 >=u a3_1527 + 3<i32> l2309BBB0
l2309BBB0:
	word32 a0_1529 = CONVERT(Mem971[a2_1514:byte], byte, word32)
	branch a0_1529 != 0<32> l2309BBF0
l2309BBF0:
	a5_1029 = a5_1029 + (0xFFFFFFFD<32> - a3_1527)
	a2_1514 = a2_1514 + (a3_1527 + 3<i32>)
l2309BBB6:
	word32 a0_1570
	word32 a3_1573
	word32 a6_1579
	word32 a7_1580
	word32 t3_1581
	word32 t0_1582
	word32 t1_1583
	word32 t4_1584
	word32 tp_1585
	word32 t5_1587
	call a3_1527 + 3<i32> (retsize: 0;)
		uses: a1:s10_1492,a2:a2_1517 + 3<32>,a3:a3_1573,a5:Mem971[a0_1529 + 48<i32>:word32],a6:a6_1579,a7:a7_1580,mstatus:mstatus_1184,ra:ra_1000,s0:s0_1542,s1:s1_970,s10:s10_1492,s11:s11_1493,s2:s2_995,s3:s3_1546,s4:s4_1494,s5:s5_1495,s6:s6_1496,s7:s7_1497,s8:s8_1498,s9:s9_1499,Stack +0018:dwArg18,Stack +00C4:dwArgC4,t0:t0_1582,t1:t1_1583,t3:t3_1581,t4:t4_1584,t5:t5_1587,tp:tp_1585
		defs: a0:a0_1570,a3:a3_1573,a6:a6_1579,a7:a7_1580,mstatus:mstatus_1586,ra:ra_1557,s0:s0_1558,s1:s1_1559,s10:s10_1568,s2:s2_1560,s3:s3_1561,s4:s4_1562,s5:s5_1563,s6:s6_1564,s8:s8_1566,sp:sp_1556,t0:t0_1582,t1:t1_1583,t3:t3_1581,t4:t4_1584,t5:t5_1587,tp:tp_1585
	branch a0_1570 == 0<32> l2309BB62
l2309BBC8:
	word32 s6_4700
	word32 s7_4701
	word32 s8_4702
	word32 s9_4703
	word32 s11_4704
	word32 a3_4696
	word32 s5_4699
	word32 a4_4697
	word32 s4_4698
	word32 a1_4694
	word32 a2_4695
	mbedtls_debug_print_ret(ra_1000, 1<32>, 123<i32>, a0_1570, out a1_4694, out a2_4695, out a3_4696, out a4_4697, out a5_1404, out s4_4698, out s5_4699, out s6_4700, out s7_4701, out s8_4702, out s9_4703, out s10_1008, out s11_4704)
	a2_1451 = 112<i32>
l2309BBE4:
	word32 a0_4685
	word32 s2_4686
	word32 s8_4688
	word32 s9_4689
	word32 s10_4690
	word32 s3_4687
	word32 s0_4684
	mbedtls_ssl_send_alert_message(ra_1000, s10_1008, a2_1451, a5_1404, mstatus, out s0_4684, out a0_4685, out a4_133, out s2_4686, out s3_4687, out s5, out s8_4688, out s9_4689, out s10_4690, out mstatus)
l2309BBA2:
l2309BB4C:
l2309BA66:
	branch a5_1029 == 1<32> l2309BD14
l2309BD14:
	Mem1673[sp_1097 + 8<i32>:word32] = a5_1029
	word32 a2_4545
	word32 a3_4546
	word32 a4_4547
	word32 a7_4548
	word32 s7_4549
	word32 s9_4550
	word32 s11_4551
	word32 t4_4552
	word32 a1_4544
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CABE0<32>, a5_1029, out a1_4544, out a2_4545, out a3_4546, out a4_4547, out a5_1029, out a7_4548, out s4_1087, out s5, out s6_1089, out s7_4549, out s8_1091, out s9_4550, out s10_1008, out s11_4551, out t4_4552)
	branch s4_1087 != a5_1029 l2309BD3E
l2309BD34:
	a5_1029 = CONVERT(Mem1673[s1_1192 + 4<i32>:byte], byte, word32)
	branch a5_1029 <=u 4<32> l2309BD4C
l2309BD4C:
	Mem1697[Mem1673[s10_1008 + 44<i32>:int32] + 112<i32>:byte] = SLICE(a5_1029, byte, 0)
l2309BD3E:
l2309BA6C:
	a4_1062 = 0x230CA49C<32>
l2309BD02:
	word32 a5_4557
	word32 a7_4558
	word32 s9_4560
	word32 s11_4561
	word32 t4_4562
	word32 s7_4559
	word32 a4_4556
	word32 a2_4554
	word32 a3_4555
	word32 a1_4553
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, a4_1062, a5_1029, out a1_4553, out a2_4554, out a3_4555, out a4_4556, out a5_4557, out a7_4558, out s4_1087, out s5, out s6_1089, out s7_4559, out s8_1091, out s9_4560, out s10_1008, out s11_4561, out t4_4562)
l2309BB62:
	word32 s4_1740 = s5 - s4_1087
	s5_1741 = s4_1740 + -4<i32>
	a5_1029 = 2<32>
	s1_1192 = s1_1192 + s8_1091
	branch s4_1740 >u 0xFFFFFFF9<32> l2309B990
l2309BB74:
l2309BA4C:
l2309B994:
	word32 a5_1761 = s3_1546
l2309B99A:
	branch CONVERT(Mem971[a5_1761:byte], byte, word32) != 0<32> l2309BEC0
l2309B9A2:
	branch CONVERT(Mem971[a5_1761 + 1<i32>:byte], byte, word32) != 255<i32> l2309BEC0
l2309BEC0:
	a5_1761 = a5_1761 + 2<32>
	branch a5_1761 - s3_1546 <u s6_1089 l2309B99A
l2309BECA:
	word32 a5_1780 = Mem971[s10_1008:int32]
	branch Mem971[s10_1008 + 188<i32>:int32] == 1<32> l2309B9C8
l2309BED8:
	word32 a5_1781 = CONVERT(Mem971[a5_1780 + 116<i32>:uint16], uint16, word32)
	a5_1359 = a5_1781 & 48<i32>
	branch (a5_1781 & 48<i32>) != 32<i32> l2309B9C8
l2309BEE8:
	a4_1363 = 0x230CA4C4<32>
l2309BC2A:
	word32 a5_1804
	word32 s10_1810
	word32 s11_4520
	word32 t4_4521
	word32 s6_4516
	word32 s7_4517
	word32 s8_4518
	word32 s9_4519
	word32 a7_4513
	word32 s4_4514
	word32 s5_4515
	word32 a1_4509
	word32 a2_4510
	word32 a3_4511
	word32 a4_4512
	mbedtls_debug_print_msg(ra_1000, s10_1008, 1<32>, a4_1363, a5_1359, out a1_4509, out a2_4510, out a3_4511, out a4_4512, out a5_1804, out a7_4513, out s4_4514, out s5_4515, out s6_4516, out s7_4517, out s8_4518, out s9_4519, out s10_1810, out s11_4520, out t4_4521)
	word32 a0_1827
	mbedtls_ssl_send_fatal_handshake_failure(ra_1000, s10_1810, a5_1804, mstatus, out a0_1827, out a4_133, out s5, out mstatus)
	s0_105 = a0_1827
	branch a0_1827 != 0<32> l2309B2F6
l2309BC42:
l2309B9AA:
	word32 s9_4456
	word32 s11_4457
	word32 t4_4458
	word32 s4_4452
	word32 s5_4453
	word32 s7_4454
	word32 s8_4455
	word32 a4_4449
	word32 a5_4450
	word32 a7_4451
	word32 a1_4446
	word32 a2_4447
	word32 a3_4448
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CAC98<32>, a5_1761, out a1_4446, out a2_4447, out a3_4448, out a4_4449, out a5_4450, out a7_4451, out s4_4452, out s5_4453, out s6_1089, out s7_4454, out s8_4455, out s9_4456, out s10_1008, out s11_4457, out t4_4458)
	Mem1884[s10_1008 + 188<i32>:word32] = 1<32>
l2309B9C8:
	word32 s5_1891 = Mem1886[Mem1886[s10_1008:int32] + (Mem1886[s10_1008 + 12<i32>:int32] << 2<i32>):int32]
	word32 a5_1892 = 0<32>
l2309B9DA:
	branch Mem1886[s5_1891:int32] != 0<32> l2309BEF6
l2309BEF6:
	word32 s4_1897 = s3_1546
l2309BEF8:
	word32 a0_1900 = Mem1886[s5_1891:int32]
	branch CONVERT(Mem1886[s4_1897:byte], byte, word32) != (a0_1900 >> 8<u32> & 255<i32>) l2309BF82
l2309BF0C:
	branch CONVERT(Mem1886[s4_1897 + 1<i32>:byte], byte, word32) != (a0_1900 & 255<i32>) l2309BF82
l2309BF18:
	word32 a5_1908
	branch mbedtls_ssl_ciphersuite_from_id(a0_1900, a0_1900 & 255<i32>, out a5_1908) != 0<32> l2309BF3E
l2309BF3E:
	word32 a4_2285
	word32 a5_2083
	word32 a4_1925
	word32 s9_4493
	word32 s11_4494
	word32 t4_4495
	word32 s8_4492
	word32 a5_4490
	word32 a7_4491
	word32 a1_4487
	word32 a2_4488
	word32 a3_4489
	word32 s7_1932
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CACC0<32>, a5_1908, out a1_4487, out a2_4488, out a3_4489, out a4_1925, out a5_4490, out a7_4491, out s4_1897, out s5_1891, out s6_1089, out s7_1932, out s8_4492, out s9_4493, out s10_1008, out s11_4494, out t4_4495)
	word32 a5_1939 = Mem1886[s10_1008 + 12<i32>:int32]
	branch a5_1939 < a4_1925 l2309BF68
l2309BF62:
	word32 s1_1941 = Mem1886[a4_1925 + 24<i32>:word32]
	branch a4_1925 >= a5_1939 l2309BF90
l2309BF90:
	branch (CONVERT(Mem1886[Mem1886[s10_1008:int32] + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2309BFA4
l2309BF9C:
	branch (CONVERT(Mem1886[s1_1941 + 28<i32>:byte], byte, word32) & 4<32>) != 0<32> l2309BF80
l2309BFA4:
	word32 a0_1949 = mbedtls_ssl_get_ciphersuite_sig_pk_alg(s1_1941)
	word32 a5_1954 = Mem1886[s10_1008 + 48<i32>:int32]
	branch Mem1886[a5_1954 + 16<i32>:int32] != 0<32> l2309BFC0
l2309BFB8:
	a5_1954 = Mem1886[s10_1008:int32]
l2309BFC0:
	branch a0_1949 == 0<32> l2309C07E
l2309BFC4:
	word32 a5_1973
	word32 s10_1979
	word32 s8_4584
	word32 s9_4585
	word32 t4_4586
	word32 s4_4580
	word32 s5_4581
	word32 s6_4582
	word32 s7_4583
	word32 a3_4577
	word32 a4_4578
	word32 a7_4579
	word32 a1_4575
	word32 a2_4576
	word32 s11_1980
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, 0x230CACF8<32>, a5_1954, out a1_4575, out a2_4576, out a3_4577, out a4_4578, out a5_1973, out a7_4579, out s4_4580, out s5_4581, out s6_4582, out s7_4583, out s8_4584, out s9_4585, out s10_1979, out s11_1980, out t4_4586)
	branch s11_1980 != 0<32> l2309C008
l2309C008:
	word32 a4_2063
	word32 s1_2008
	word32 s9_2010
	word32 a5_2014
	word32 a3_4590
	word32 s4_4591
	word32 s7_4592
	word32 a1_4588
	word32 a2_4589
	word32 a0_4587
	word32 s11_2022
	ra_1000 = mbedtls_debug_print_crt(ra_1000, 3<32>, 0x230CAD38<32>, Mem1886[s11_1980:int32], out s0_105, out s1_2008, out a0_4587, out a1_4588, out a2_4589, out a3_4590, out a5_2014, out s3_1546, out s4_4591, out s7_4592, out s9_2010, out s10_1008, out s11_2022)
	word32 a5_4593
	branch mbedtls_pk_can_do(Mem1886[s11_2022 + 4<i32>:int32], s9_2010, a5_2014, out a5_4593) != 0<32> l2309C0E0
l2309C0E0:
	word32 a0_2042
	word32 s8_2054
	word32 a5_4618
	word32 s4_4619
	word32 s1_4617
	s0_105 = mbedtls_ssl_check_cert_usage(Mem1886[s11_2022:int32], s1_2008, 1<32>, out s1_4617, out a0_2042, out a5_4618, out s3_1546, out s4_4619, out s8_2054)
	branch a0_2042 == 0<32> l2309C0FE
l2309C0FE:
	branch Mem1886[s10_1008 + 12<i32>:int32] > 2<32> l2309C056
l2309C108:
	branch CONVERT(Mem1886[Mem1886[s11_2022:int32] + 296<i32>:byte], byte, word32) == 4<32> l2309C056
l2309C116:
	branch s8_2054 != 0<32> l2309C11C
l2309C11A:
l2309C11C:
	a4_2063 = 0x230CADBC<32>
l2309C0F0:
	a4_2063 = 0x230CAD84<32>
l2309C030:
	a4_2063 = 0x230CAD64<32>
l2309C03C:
	word32 s11_2090
	word32 s8_2095
	word32 a2_4621
	word32 a3_4622
	word32 a7_4624
	word32 s4_4625
	word32 s9_4629
	word32 t4_4630
	word32 s7_4628
	word32 s6_4627
	word32 s5_4626
	word32 a4_4623
	word32 a1_4620
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, a4_2063, 0x230CB000<32>, out a1_4620, out a2_4621, out a3_4622, out a4_4623, out a5_2083, out a7_4624, out s4_4625, out s5_4626, out s6_4627, out s7_4628, out s8_2095, out s9_4629, out s10_1008, out s11_2090, out t4_4630)
	s11_1980 = Mem1886[s11_2090 + 8<i32>:int32]
	branch s11_1980 != 0<32> l2309C008
l2309C050:
	branch s8_2095 == 0<32> l2309BFFA
l2309C054:
	s11_2022 = s8_2095
l2309C056:
	Mem2111[Mem1886[s10_1008 + 48<i32>:int32] + 8<i32>:word32] = s11_2022
	word32 a2_4767
	word32 a3_4768
	word32 a1_4766
	word32 s1_4764
	word32 a0_4765
	word32 s7_4771
	word32 s4_4770
	word32 s3_4769
	word32 s11_4773
	word32 s9_4772
	ra_1000 = mbedtls_debug_print_crt(ra_1000, 3<32>, 0x230CADF8<32>, Mem2111[Mem2111[Mem2111[s10_1008 + 48<i32>:int32] + 8<i32>:word32]:word32], out s0_105, out s1_4764, out a0_4765, out a1_4766, out a2_4767, out a3_4768, out a5_1954, out s3_4769, out s4_4770, out s7_4771, out s9_4772, out s10_1008, out s11_4773)
l2309C07E:
	word32 s1_2151 = Mem2149[a5_1954 + 4<i32>:word32]
	word32 a2_2164
	word32 s5_2171
	word32 s9_4572
	word32 s11_4573
	word32 t4_4574
	word32 s4_4568
	word32 s8_4571
	word32 s6_4569
	word32 s7_4570
	word32 a4_4565
	word32 a5_4566
	word32 a7_4567
	word32 a3_4564
	word32 a1_4563
	word32 s10_2168
	mbedtls_debug_print_msg(ra_1000, s10_1008, 2<32>, 0x230CAE20<32>, a5_1954, out a1_4563, out a2_2164, out a3_4564, out a4_4565, out a5_4566, out a7_4567, out s4_4568, out s5_2171, out s6_4569, out s7_4570, out s8_4571, out s9_4572, out s10_2168, out s11_4573, out t4_4574)
	Mem2182[Mem2149[s5_2171:int32]:word32] = Mem2149[s10_2168 + 44<i32>:int32]
	Mem2184[s1_2151:word32] = Mem2182[s10_2168 + 64<i32>:int32]
	Mem2187[s10_2168 + 4<i32>:word32] = Mem2184[s10_2168 + 4<i32>:int32] + 1<32>
	word32 a5_2189 = CONVERT(Mem2187[Mem2187[s10_2168:int32] + 116<i32>:uint16], uint16, word32)
	word32 a5_2190 = a5_2189 & 2<32>
	branch (a5_2189 & 2<32>) == 0<32> l2309C0C4
l2309C0BE:
	ra_1000 = mbedtls_ssl_recv_flight_completed(ra_1000, a2_2164, a5_2189 & 2<32>, mstatus, Mem2187[sp_1097:word32], Mem2187[sp_1097 + 4<i32>:word32], Mem2187[sp_1097 + 312<i32>:word32], Mem2187[sp_1097 + 376<i32>:word32], out a5_2190, out s10_2168)
l2309C0C4:
	word32 s10_4641
	word32 s11_4642
	word32 t4_4643
	word32 s4_4636
	word32 s6_4637
	word32 s7_4638
	word32 s8_4639
	word32 s9_4640
	word32 a2_4632
	word32 a7_4635
	word32 a3_4633
	word32 a5_4634
	word32 a1_4631
	mbedtls_debug_print_msg(ra_1000, s10_2168, 2<32>, 0x230CAEC0<32>, a5_2190, out a1_4631, out a2_4632, out a3_4633, out a4_133, out a5_4634, out a7_4635, out s4_4636, out s5, out s6_4637, out s7_4638, out s8_4639, out s9_4640, out s10_4641, out s11_4642, out t4_4643)
l2309BFE2:
	word32 a1_4594
	word32 a3_4596
	word32 s7_4602
	word32 t4_4606
	word32 s11_4605
	word32 s9_4604
	word32 s8_4603
	word32 a4_4597
	word32 s6_4601
	word32 s5_4600
	word32 s4_4599
	word32 a7_4598
	word32 a2_4595
	mbedtls_debug_print_msg(ra_1000, s10_1979, 3<32>, 0x230CAD1C<32>, a5_1973, out a1_4594, out a2_4595, out a3_4596, out a4_4597, out a5_2083, out a7_4598, out s4_4599, out s5_4600, out s6_4601, out s7_4602, out s8_4603, out s9_4604, out s10_1008, out s11_4605, out t4_4606)
l2309BFFA:
	a4_2285 = 0x230CAE3C<32>
l2309BF68:
	a5_2083 = 0x230CB000<32>
	a4_2285 = 0x230CACD8<32>
l2309BF74:
	word32 a3_4609
	word32 a4_4610
	word32 a5_4611
	word32 a7_4612
	word32 s8_4613
	word32 s9_4614
	word32 s11_4615
	word32 t4_4616
	word32 a1_4607
	word32 a2_4608
	mbedtls_debug_print_msg(ra_1000, s10_1008, 3<32>, a4_2285, a5_2083, out a1_4607, out a2_4608, out a3_4609, out a4_4610, out a5_4611, out a7_4612, out s4_1897, out s5_1891, out s6_1089, out s7_1932, out s8_4613, out s9_4614, out s10_1008, out s11_4615, out t4_4616)
l2309BF80:
	a5_1892 = s7_1932
l2309BF82:
	s4_1897 = s4_1897 + 2<32>
	branch s4_1897 - s3_1546 <u s6_1089 l2309BEF8
l2309BF8C:
	s5_1891 = s5_1891 + 4<32>
l2309BF20:
	word32 a1_4496
	word32 t4_4508
	word32 a2_4497
	word32 s8_4504
	word32 s11_4507
	word32 s9_4505
	word32 s10_4506
	word32 s4_4501
	word32 s6_4502
	word32 s7_4503
	word32 a7_4500
	word32 a5_4499
	word32 a3_4498
	mbedtls_debug_print_msg(ra_1000, s10_1008, 1<32>, 0x230C6E20<32>, a5_1908, out a1_4496, out a2_4497, out a3_4498, out a4_133, out a5_4499, out a7_4500, out s4_4501, out s5, out s6_4502, out s7_4503, out s8_4504, out s9_4505, out s10_4506, out s11_4507, out t4_4508)
l2309C914:
	s0_105 = 0xF9000400<32>
l2309B9E2:
	branch a5_1892 == 0<32> l2309C12A
l2309C12A:
	word32 a5_2394
	word32 s10_2400
	word32 a4_4462
	word32 s6_4466
	word32 s8_4468
	word32 s9_4469
	word32 t4_4471
	word32 s11_4470
	word32 s7_4467
	word32 a7_4463
	word32 s4_4464
	word32 s5_4465
	word32 a2_4460
	word32 a3_4461
	word32 a1_4459
	mbedtls_debug_print_msg(ra_1000, s10_1008, 1<32>, 0x230CAEA0<32>, a5_1892, out a1_4459, out a2_4460, out a3_4461, out a4_4462, out a5_2394, out a7_4463, out s4_4464, out s5_4465, out s6_4466, out s7_4467, out s8_4468, out s9_4469, out s10_2400, out s11_4470, out t4_4471)
	word32 a0_4472
	s0_105 = mbedtls_ssl_send_fatal_handshake_failure(ra_1000, s10_2400, a5_2394, mstatus, out a0_4472, out a4_133, out s5, out mstatus) + -896<i32>
l2309B9E6:
	word32 a5_2459
	word32 s10_2465
	word32 s7_4481
	word32 s8_4482
	word32 s9_4483
	word32 s11_4484
	word32 t4_4485
	word32 s5_4479
	word32 s6_4480
	word32 a2_4474
	word32 s4_4478
	word32 a7_4477
	word32 a4_4476
	word32 a3_4475
	word32 a1_4473
	mbedtls_debug_print_msg(ra_1000, s10_1008, 1<32>, 0x230CAE6C<32>, a5_1892, out a1_4473, out a2_4474, out a3_4475, out a4_4476, out a5_2459, out a7_4477, out s4_4478, out s5_4479, out s6_4480, out s7_4481, out s8_4482, out s9_4483, out s10_2465, out s11_4484, out t4_4485)
	word32 a0_4486
	s0_105 = mbedtls_ssl_send_fatal_handshake_failure(ra_1000, s10_2465, a5_2459, mstatus, out a0_4486, out a4_133, out s5, out mstatus) + 1664<i32>
l2309B964:
l2309B930:
l2309B8D6:
l2309B8E2:
l2309B886:
l2309B832:
l2309B802:
l2309B78E:
l2309B6FA:
	Mem2544[sp_1097:word32] = a3_682
	word32 a5_2555
	word32 s10_2561
	word32 a1_4338
	word32 a3_4340
	word32 s7_4346
	word32 t4_4350
	word32 s11_4349
	word32 s9_4348
	word32 s8_4347
	word32 a4_4341
	word32 s6_4345
	word32 s5_4344
	word32 s4_4343
	word32 a7_4342
	word32 a2_4339
	mbedtls_debug_print_msg(ra_1000, s10_1008, 1<32>, 0x230CAA6C<32>, a5_680, out a1_4338, out a2_4339, out a3_4340, out a4_4341, out a5_2555, out a7_4342, out s4_4343, out s5_4344, out s6_4345, out s7_4346, out s8_4347, out s9_4348, out s10_2561, out s11_4349, out t4_4350)
	word32 s0_2585
	word32 s3_4353
	word32 s8_4354
	word32 s9_4355
	word32 s10_4356
	word32 a0_4351
	word32 s2_4352
	mbedtls_ssl_send_alert_message(ra_1000, s10_2561, 70<i32>, a5_2555, mstatus, out s0_2585, out a0_4351, out a4_133, out s2_4352, out s3_4353, out s5, out s8_4354, out s9_4355, out s10_4356, out mstatus)
	s0_105 = s0_2585 + 384<i32>
l2309B688:
l2309B630:
	word32 s10_4328
	word32 s11_4329
	word32 t4_4330
	word32 s6_4324
	word32 s7_4325
	word32 s8_4326
	word32 s9_4327
	word32 a5_4321
	word32 a7_4322
	word32 s4_4323
	word32 a1_4318
	word32 a2_4319
	word32 a3_4320
	mbedtls_debug_print_msg(ra_1000, s10_1008, 1<32>, 0x230CAA2C<32>, a5_2626, out a1_4318, out a2_4319, out a3_4320, out a4_133, out a5_4321, out a7_4322, out s4_4323, out s5, out s6_4324, out s7_4325, out s8_4326, out s9_4327, out s10_4328, out s11_4329, out t4_4330)
	s0_105 = 0xF8FFFF80<32>
l2309B5EC:
l2309B57E:
l2309B544:
l2309B4DC:
	a5_2657 = a0_391
	a3_2659 = 1209<i32>
l2309B4B2:
l2309B46E:
l2309B444:
l2309B3B2:
l2309B3BE:
l2309B3C2:
	word32 a5_4429
	word32 a7_4430
	word32 s6_4432
	word32 s7_4433
	word32 s11_4437
	word32 t4_4438
	word32 s10_4436
	word32 s9_4435
	word32 s8_4434
	word32 s4_4431
	word32 a3_4428
	word32 a1_4426
	word32 a2_4427
	mbedtls_debug_print_msg(ra_1000, s10_1008, 1<32>, 0x230CA968<32>, a5_1029, out a1_4426, out a2_4427, out a3_4428, out a4_133, out a5_4429, out a7_4430, out s4_4431, out s5, out s6_4432, out s7_4433, out s8_4434, out s9_4435, out s10_4436, out s11_4437, out t4_4438)
l2309B3CA:
	s0_105 = 0xF8000700<32>
l2309B342:
	a5_2657 = a0_169
	a3_2659 = 1104<i32>
l2309B350:
	word32 a2_4274
	word32 a5_4276
	word32 s10_4282
	word32 s11_4283
	word32 s4_4277
	word32 s9_4281
	word32 s8_4280
	word32 s7_4279
	word32 s6_4278
	word32 a3_4275
	word32 a1_4273
	mbedtls_debug_print_ret(ra_1000, 1<32>, a3_2659, a5_2657, out a1_4273, out a2_4274, out a3_4275, out a4_133, out a5_4276, out s4_4277, out s5, out s6_4278, out s7_4279, out s8_4280, out s9_4281, out s10_4282, out s11_4283)
l2309B2EE:
	Mem2774[s10_107 + 4<i32>:word32] = 1<32>
	s0_105 = s7_129
l2309B2BE:
l2309CE8C:
	word32 a5_4173
	word32 a7_4174
	word32 s6_4176
	word32 s7_4177
	word32 s11_4181
	word32 t4_4182
	word32 s10_4180
	word32 s9_4179
	word32 s8_4178
	word32 s4_4175
	word32 a3_4172
	word32 a1_4170
	word32 a2_4171
	mbedtls_debug_print_msg(ra, s10_107, 1<32>, 0x230CA894<32>, s7_129, out a1_4170, out a2_4171, out a3_4172, out a4_133, out a5_4173, out a7_4174, out s4_4175, out s5, out s6_4176, out s7_4177, out s8_4178, out s9_4179, out s10_4180, out s11_4181, out t4_4182)
l2309B27E:
l2309B274:
l2309CEA8:
	s0_105 = 0xF8FFFF00<32>
l2309B2F6:
	a4Out = a4_133
	a5Out = dwArgE8
	s3Out = dwArgC8
	s5Out = s5
	mstatusOut = mstatus
	return s0_105
mbedtls_ssl_handshake_server_step_exit:


word32 mbedtls_x509_get_serial(word32 a1, word32 a2, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a1 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 tp
// Preserved: s0 sp
mbedtls_x509_get_serial_entry:
l2309CEBC:
	word32 a0_5 = Mem0[a5:word32]
	branch a1 - a5 <= 0<32> l2309CF14
l2309CF14:
	a0Out = 0xFDFFFD20<32>
	a1Out = a1
	a5Out = a5
	return s1
l2309CEC6:
	branch (CONVERT(Mem0[a5:byte], byte, word32) & 127<i32>) != 2<32> l2309CF1C
l2309CF1C:
	a0Out = 0xFDFFFD1E<32>
	a1Out = a1
	a5Out = a5
	return s1
l2309CED4:
	word32 a5_40
	Mem23[a5 + 1<i32>:word32] = a0_5
	word32 a5_24 = CONVERT(Mem23[a5:byte], byte, word32)
	Mem28[a2 + 0x1000<32>:word32] = a5_24
	word32 s1_26 = a2
	word32 a1_32
	word32 a4_34
	word32 a5_35
	word32 a2_83
	word32 a3_84
	word32 a0_30 = mbedtls_asn1_get_len(a1, a2 + 4<32>, a5_24, out a1_32, out a2_83, out a3_84, out a4_34, out a5_35)
	branch a0_30 == 0<32> l2309CF08
l2309CF08:
	word32 s0_37 = Mem28[a5_35:word32]
	s1_26 = Mem28[a4_34 + 4<i32>:word32]
	Mem39[a5_35 + 8<i32>:word32] = s1_26
	a5_40 = a5_35 + a4_34
	Mem41[a5_40:word32] = s0_37
l2309CEF6:
	a5_40 = 0xFDFFFD80<32>
	a0_30 = a0_30 + 0xFDFFFD80<32>
l2309CEFE:
	a0Out = a0_30
	a1Out = a1_32
	a5Out = a5_40
	return s1_26
mbedtls_x509_get_serial_exit:


word32 mbedtls_x509_get_alg(word32 a1, word32 a2, word32 a3, word32 a5, word32 dwArgA4, word32 dwArg0118, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a2 a5 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mbedtls_x509_get_alg_entry:
l2309CF24:
	word32 a1_10
	word32 s2_18
	word32 s3_19
	word32 s4_60
	word32 a4_59
	word32 a3_58
	word32 a2_57
	word32 a0_24
	word32 a5_14
	word32 s1_17 = mbedtls_asn1_get_alg(a1, a2, a3, a5, dwArgA4, dwArg0118, out a0_24, out a1_10, out a2_57, out a3_58, out a4_59, out a5_14, out s2_18, out s3_19, out s4_60)
	branch a0_24 == 0<32> l2309CF36
l2309CF2E:
	a5_14 = 0xFDFFFD00<32>
	a0_24 = a0_24 + 0xFDFFFD00<32>
l2309CF36:
	a0Out = a0_24
	a1Out = a1_10
	a2Out = dwArg10
	a5Out = a5_14
	s2Out = s2_18
	s3Out = s3_19
	return s1_17
mbedtls_x509_get_alg_exit:


word32 mbedtls_x509_get_name(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a4 a5 ra s1 s2 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
mbedtls_x509_get_name_entry:
l2309CF3C:
	word32 s1_130 = a0
	word32 s6_169 = a2
	word32 s4_162 = 0x50581008<32>
	word32 s3_124 = 0xFDFFFC80<32>
l2309CF62:
	word32 a0_121
	word32 a2_424
	word32 a3_425
	word32 a4_111
	word32 a1_109
	word32 a0_40 = mbedtls_asn1_get_tag(a1, fp + -56<i32>, 49<i32>, a5, out a1_109, out a2_424, out a3_425, out a4_111, out a5)
	branch a0_40 == 0<32> l2309CF90
l2309CF90:
	word32 s0_115 = s6_169
	s7 = 0x1E<32>
	s2 = Mem47[s1_130:int32] + a5
	s6_169 = 1<32>
l2309CF9E:
	word32 a2_418
	word32 a3_108
	word32 a0_107 = mbedtls_asn1_get_tag(s2, fp + -52<i32>, 48<i32>, a5, out a1_109, out a2_418, out a3_108, out a4_111, out a5)
	branch a0_107 == 0<32> l2309CFD4
l2309CFD4:
	s1_130 = Mem70[a5:word32]
	a4_111 = s2 - a5
	branch a4_111 > 0<32> l2309CFE6
l2309CFE6:
	word32 a5_73 = CONVERT(Mem70[a5:byte], byte, word32)
	Mem77[a5_73:word32] = s0_115
	word32 a2_419
	a0_107 = mbedtls_asn1_get_tag(s2, s0_115 + 4<i32>, 6<32>, a5_73, out a1_109, out a2_419, out a3_108, out a4_111, out a5)
	branch a0_107 != 0<32> l2309CFAE
l2309CFFC:
	s1_130 = Mem77[a5:word32]
	s0_115 = Mem77[a4_111 + 4<i32>:word32]
	Mem89[a5 + 8<i32>:word32] = s0_115
	a5 = a5 + a4_111
	Mem91[a5:word32] = s1_130
	a4_111 = s2 - a5
	branch a4_111 <= 0<32> l2309CFDE
l2309D00E:
	a4_111 = CONVERT(Mem91[a5:byte], byte, word32)
	branch a4_111 >u 0x1E<32> l2309D048
l2309D016:
	word32 a4_96 = s4_162 >>u a4_111
	a4_111 = a4_96 & 1<32>
	branch (a4_96 & 1<32>) == 0<32> l2309D048
l2309D048:
	a0_121 = 0xFDFFFC1E<32>
l2309D01E:
	Mem101[a5 + 1<i32>:word32] = s1_130
	word32 a5_102 = CONVERT(Mem101[a5:byte], byte, word32)
	Mem105[a5_102 + 12<i32>:word32] = s0_115
	word32 a2_420
	a0_107 = mbedtls_asn1_get_len(s2, s0_115 + 16<i32>, a5_102, out a1_109, out a2_420, out a3_108, out a4_111, out a5)
	branch a0_107 != 0<32> l2309CFAE
l2309D038:
	word32 s1_114 = Mem105[a5:word32]
	s0_115 = Mem105[a4_111 + 16<i32>:word32]
	Mem116[a5 + 20<i32>:word32] = s0_115
	a5 = a5 + a4_111
	Mem118[a5:word32] = s1_114
	Mem119[s0_115 + 24<i32>:word32] = 0<32>
l2309CFDE:
	a0_121 = 0xFDFFFC20<32>
l2309CFAE:
	a0_121 = a0_107 + s3_124
	branch a0_121 != 0<32> l2309CF7A
l2309CFB2:
	s1_130 = Mem128[a5:word32]
	branch a5 == s2 l2309D050
l2309D050:
	branch a1 == s2 l2309D068
l2309D068:
	a0_121 = 0<32>
l2309D054:
	word32 s0_158
	word32 s8_423
	word32 a2_421
	word32 a3_422
	ra = mycalloc(ra, s1_130, 1<32>, 32<i32>, a3_108, a4_111, a5, mstatus, dwLoc20, dwLoc1C, dwArgD8, dwArg0118, out s0_158, out s1_130, out a1_109, out a2_421, out a3_422, out a4_111, out a5, out s2, out s3_124, out s4_162, out s8_423)
	Mem168[0x19<32>:word32] = s0_158
	s6_169 = 1<32>
	branch true l2309CF62
l2309D066:
l2309CFB8:
	Mem175[s0_115 + 28<i32>:byte] = 1<8>
	word32 s0_185
	word32 s8_417
	word32 a2_415
	word32 a3_416
	ra = mycalloc(ra, s1_130, 1<32>, 32<i32>, a3_108, a4_111, a5, mstatus, dwLoc20, dwLoc1C, dwArgD8, dwArg0118, out s0_185, out s1_130, out a1_109, out a2_415, out a3_416, out a4_111, out a5, out s2, out s3_124, out s4_162, out s8_417)
	Mem195[0x19<32>:word32] = s0_185
	s0_115 = 1<32>
	branch true l2309CF9E
l2309CFCC:
	s6_169 = 1<32>
	a0_121 = 0xFD000780<32>
l2309CF72:
	a5 = 0xFDFFFC80<32>
	a0_121 = a0_40 + 0xFDFFFC80<32>
l2309CF7A:
	0<32> = dwArg0198
	s1Out = s1_130
	a0Out = a0_121
	a1Out = a1_109
	a4Out = a4_111
	a5Out = a5
	s2Out = s2
	s5Out = a1
	s6Out = s6_169
	s7Out = s7
	return ra
mbedtls_x509_get_name_exit:


word32 mbedtls_x509_get_sig(word32 a1, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a5 s1 s2 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
mbedtls_x509_get_sig_entry:
l2309D06C:
	branch a1 - a5 <= 0<32> l2309D0B6
l2309D0B6:
	a0Out = 0xFDFFFB20<32>
	a1Out = a1
	a2Out = a2
	a5Out = a5
	s2Out = s2
	s8Out = s8
	return s1
l2309D076:
	word32 a5_38
	word32 s2_23 = CONVERT(Mem18[a5:byte], byte, word32)
	word32 a1_25
	word32 a4_28
	word32 a5_29
	word32 a3_100
	word32 a0_24
	word32 a2_26
	word32 s1_31 = mbedtls_asn1_get_bitstring_null(a1, fp + 0xFFFFFFEC<32>, a5, out a0_24, out a1_25, out a2_26, out a3_100, out a4_28, out a5_29)
	branch a0_24 == 0<32> l2309D0A4
l2309D0A4:
	Mem34[s1_31:word32] = s2_23
	Mem35[a4_28 + 4<i32>:word32] = s1_31
	word32 s0_36 = Mem35[a5_29:word32]
	Mem37[a5_29 + 8<i32>:word32] = s1_31
	a5_38 = a5_29 + a4_28
	Mem39[a5_38:word32] = s0_36
	a2_26 = dwArgA4
l2309D090:
	a5_38 = 0xFDFFFB80<32>
	a0_24 = a0_24 + 0xFDFFFB80<32>
l2309D098:
	a0Out = a0_24
	a1Out = a1_25
	a2Out = a2_26
	a5Out = a5_38
	s2Out = s2_23
	s8Out = dwLoc1C
	return s1_31
mbedtls_x509_get_sig_exit:


word32 mbedtls_x509_get_sig_alg(word32 a0, word32 a2, word32 a3, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut: a0 a1 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
mbedtls_x509_get_sig_alg_entry:
l2309D0BE:
	branch a5 != 0<32> l2309D0FA
l2309D0FA:
	a0Out = 0xFDFFF800<32>
	a1Out = a1
	a5Out = a5
	return s1
l2309D0C2:
	word32 a1_21
	word32 a0_20
	word32 a5_25
	word32 s1_26 = mbedtls_oid_get_sig_alg(a0, a2, a3, a5, out a0_20, out a1_21, out a5_25)
	branch a0_20 == 0<32> l2309D0E4
l2309D0E4:
	branch a5_25 == 5<32> l2309D0EE
l2309D0EC:
	branch a5_25 != 0<32> l2309D0F2
l2309D0EE:
	branch a5_25 == 0<32> l2309D0DC
l2309D0F2:
	a0_20 = 0xFDFFFD00<32>
l2309D0D4:
	a5_25 = 0xFDFFFA00<32>
	a0_20 = a0_20 + 0xFDFFFA00<32>
l2309D0DC:
	a0Out = a0_20
	a1Out = a1_21
	a5Out = a5_25
	return s1_26
mbedtls_x509_get_sig_alg_exit:


word32 mbedtls_x509_get_ext(word32 a1, word32 a2, word32 a3, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut: a0 a1 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 s8 t3
// Preserved: sp
mbedtls_x509_get_ext_entry:
l2309D102:
	branch a5 != a1 l2309D10C
l2309D10C:
	word32 a5_14 = CONVERT(Mem13[a5:byte], byte, word32)
	Mem19[a5_14:word32] = a2
	word32 s1_16 = a2
	word32 a2_100
	word32 a3_101
	word32 a4_102
	word32 a1_24
	word32 a5_28
	word32 a0_22 = mbedtls_asn1_get_tag(a1, a2 + 4<32>, a3 | 160<i32>, a5_14, out a1_24, out a2_100, out a3_101, out a4_102, out a5_28)
	branch a0_22 != 0<32> l2309D14A
l2309D12A:
	Mem32[a5_28 + 8<i32>:word32] = a2
	s1_16 = Mem32[a2 + 4<i32>:word32] + a5_28
	word32 a4_42
	word32 a5_43
	word32 a2_103
	word32 a3_104
	word32 a0_37 = mbedtls_asn1_get_tag(s1_16, fp + 0xFFFFFFEC<32>, 48<i32>, a5_28, out a1_24, out a2_103, out a3_104, out a4_42, out a5_43)
	branch a0_37 == 0<32> l2309D154
l2309D154:
	a0_22 = 0<32>
	a5_28 = a5_43 + a4_42
	branch s1_16 == a5_28 l2309D14A
l2309D160:
	a0_22 = 0xFDFFFA9A<32>
l2309D142:
	a5_28 = 0xFDFFFB00<32>
	a0_22 = a0_37 + 0xFDFFFB00<32>
l2309D14A:
	a0Out = a0_22
	a1Out = a1_24
	a5Out = a5_28
	return s1_16
l2309D108:
	a0Out = 0<32>
	a1Out = a1
	a5Out = a5
	return s1
mbedtls_x509_get_ext_exit:


word32 mbedtls_x509_dn_gets(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_info
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 t0 t1 t3 t4 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_x509_dn_gets_entry:
l2309D168:
	word32 s3_11 = a1
	word32 s6_13 = a2
	word32 s1_15 = a0
	word32 t1_613
	word32 a1_615
	word32 a3_616
	word32 a0_614
	word32 a4_617
	word32 a5_618
	word32 a2_106
	word32 ra_124 = memset(ra, fp + -304<i32>, 0<32>, 256<i32>, out t1_613, out a0_614, out a1_615, out a2_106, out a3_616, out a4_617, out a5_618)
	word32 s2_103 = a2
	word32 s0_121 = a1
	word32 a5_105 = 0<32>
	word32 s8_118 = 0x230CB000<32>
	word32 s9_149 = 0x230CB000<32>
	word32 s4_252 = 0x230CB340<32>
	word32 s5_253 = 0x230BE808<32>
l2309D1CC:
	word32 a0_265
	branch s2_103 != 0<32> l2309D1D6
l2309D1D6:
	branch Mem56[s2_103 + 8<i32>:int32] != 0<32> l2309D1E2
l2309D1E2:
	branch s2_103 == s6_13 l2309D236
l2309D1E6:
	word32 a2_60 = s4_252
	branch a5_105 != 0<32> l2309D1EC
l2309D1EA:
	a2_60 = s5_253
l2309D1EC:
	word32 a0_76
	word32 s0_84
	word32 a3_621
	word32 a4_622
	word32 a7_623
	word32 s5_626
	word32 s3_624
	word32 s4_625
	word32 s1_619
	word32 s6_627
	word32 s7_628
	word32 a1_620
	word32 s11_629
	ra_124 = snprintf(ra_124, s1_15, s0_121, a2_60, dwLoc0128, dwLoc0108, dwLocDC, dwLocC0, 0<32>, dwLoc98, dwLoc74, out s0_84, out s1_619, out a0_76, out a1_620, out a2_106, out a3_621, out a4_622, out a5_105, out a7_623, out s2_103, out s3_624, out s4_625, out s5_626, out s6_627, out s7_628, out s8_118, out s9_149, out s10, out s11_629)
	branch a0_76 >= 0<32> l2309D22E
l2309D22E:
	branch a0_76 >=u s0_84 l2309D1F8
l2309D232:
	s0_121 = s0_84 - a0_76
l2309D236:
	word32 s2_137
	word32 ra_132
	word32 s7_142
	word32 s1_134
	word32 s0_133
	word32 a0_125
	word32 a0_109
	word32 s1_115 = mbedtls_oid_get_attr_short_name(s2_103, fp + -308<i32>, a2_106, a5_105, dwLoc0108, out a0_109)
	branch a0_109 != 0<32> l2309D298
l2309D298:
	word32 a5_634
	word32 a7_635
	word32 s3_636
	word32 s4_637
	word32 s8_640
	word32 s9_641
	word32 s11_642
	word32 s5_638
	word32 s6_639
	word32 a4_633
	word32 a3_632
	word32 a1_630
	word32 a2_631
	ra_132 = snprintf(ra_124, s1_115, s0_121, s8_118 + 840<i32>, dwLoc0128, dwLoc0108, dwLocDC, dwLocC0, 0<32>, dwLoc98, dwLoc74, out s0_133, out s1_134, out a0_125, out a1_630, out a2_631, out a3_632, out a4_633, out a5_634, out a7_635, out s2_137, out s3_636, out s4_637, out s5_638, out s6_639, out s7_142, out s8_640, out s9_641, out s10, out s11_642)
l2309D240:
	word32 s9_654
	word32 s11_655
	word32 a1_643
	word32 a3_645
	word32 a4_646
	word32 a5_647
	word32 a7_648
	word32 s5_651
	word32 s6_652
	word32 s8_653
	word32 s3_649
	word32 s4_650
	word32 a2_644
	ra_132 = snprintf(ra_124, s1_115, s0_121, s9_149 + 836<i32>, dwLoc0128, dwLoc0108, dwLocDC, dwLocC0, 0<32>, dwLoc98, dwLoc74, out s0_133, out s1_134, out a0_125, out a1_643, out a2_644, out a3_645, out a4_646, out a5_647, out a7_648, out s2_137, out s3_649, out s4_650, out s5_651, out s6_652, out s7_142, out s8_653, out s9_654, out s10, out s11_655)
l2309D24E:
	branch a0_125 < 0<32> l2309D1F8
l2309D252:
	branch a0_125 >=u s0_133 l2309D1F8
l2309D256:
	word32 s0_179 = s0_133 - a0_125
	word32 s1_181 = s1_134 + a0_125
	word32 a5_182 = 0<32>
l2309D268:
	branch a5_182 <u Mem188[s2_137 + 16<i32>:int32] l2309D2A6
l2309D2A6:
	branch a5_182 == 255<i32> l2309D270
l2309D2AA:
	word32 a4_194 = CONVERT(Mem188[Mem188[s2_137 + 20<i32>:int32] + a5_182:byte], byte, word32)
	branch a4_194 <=u 0x1F<32> l2309D2C8
l2309D2B8:
	branch a4_194 == 127<i32> l2309D2C8
l2309D2BC:
	branch (a4_194 + 127<i32> & 255<i32>) >u 0x1E<32> l2309D2CC
l2309D2C8:
	a4_194 = 63<i32>
l2309D2CC:
	Mem209[fp + -304<i32> + a5_182:byte] = SLICE(a4_194, byte, 0)
	a5_182 = a5_182 + 1<32>
l2309D270:
	Mem232[a5_182 + (fp + -48<i32>) + 3840<i32>:byte] = 0<8>
	word32 a0_238
	word32 s0_246
	word32 s1_247
	word32 a1_656
	word32 a3_657
	word32 a4_658
	word32 a5_659
	word32 s11_662
	word32 a7_660
	word32 s7_661
	ra_124 = snprintf(ra_132, s1_181, s0_179, s7_142 + -1672<i32>, dwLoc0128, dwLoc0108, dwLocDC, dwLocC0, 0<32>, dwLoc98, dwLoc74, out s0_246, out s1_247, out a0_238, out a1_656, out a2_106, out a3_657, out a4_658, out a5_659, out a7_660, out s2_103, out s3_11, out s4_252, out s5_253, out s6_13, out s7_661, out s8_118, out s9_149, out s10, out s11_662)
	branch a0_238 < 0<32> l2309D1F8
l2309D28A:
	branch a0_238 >=u s0_246 l2309D1F8
l2309D28E:
	s0_121 = s0_246 - a0_238
	s1_15 = s1_247 + a0_238
	a5_105 = CONVERT(Mem232[s2_103 + 28<i32>:byte], byte, word32)
l2309D1F8:
	a0_265 = 0xFD000680<32>
l2309D1DC:
	s2_103 = Mem267[s2_103 + 24<i32>:int32]
l2309D1D0:
	a0_265 = s3_11 - s0_121
l2309D1FE:
	s10Out = s10
	return a0_265
mbedtls_x509_dn_gets_exit:


word32 mbedtls_x509_serial_gets(word32 ra, word32 a0, word32 a1, word32 a2, word32 s7, word32 s9, word32 dwArg08, word32 dwArg1C, word32 dwArg34, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_info
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0034:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31]
// LiveOut: a0 ra s0 s1 s10 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
mbedtls_x509_serial_gets_entry:
l2309D2D8:
	word32 s3_100 = Mem27[a2 + 4<i32>:int32]
	word32 s4_111 = a0
	word32 s1_128 = a1
	word32 s5_102 = a2
	branch s3_100 <=u 32<i32> l2309D306
l2309D304:
	s3_100 = 0x1C<32>
l2309D306:
	word32 s0_110 = a1
	word32 s2_112 = 0<32>
	word32 s8_105 = s3_100 + -1<i32>
	word32 s9_106 = 0x230CB000<32>
	word32 s7_104 = 0x230C6DBC<32>
	word32 s10_129 = 1<32>
l2309D324:
	word32 a0_143
	branch s2_112 != s3_100 l2309D350
l2309D350:
	word32 a5_52 = Mem27[s5_102 + 8<i32>:int32]
	branch s2_112 != 0<32> l2309D362
l2309D358:
	branch s3_100 == s10_129 l2309D362
l2309D35C:
	branch CONVERT(Mem27[a5_52:byte], byte, word32) == 0<32> l2309D3AA
l2309D362:
	branch s2_112 <u s8_105 l2309D370
l2309D36E:
l2309D370:
	word32 a0_87
	word32 s0_95
	word32 s4_101
	word32 a7_439
	word32 s11_441
	word32 s6_440
	word32 a1_434
	word32 a5_438
	word32 a2_435
	word32 a3_436
	word32 a4_437
	ra = snprintf(ra, s4_111, s0_110, s9_106 + 856<i32>, dwLoc18, dwArg08, dwArg34, s9, s7, dwArg78, dwArg9C, out s0_95, out s1_128, out a0_87, out a1_434, out a2_435, out a3_436, out a4_437, out a5_438, out a7_439, out s2_112, out s3_100, out s4_101, out s5_102, out s6_440, out s7_104, out s8_105, out s9_106, out s10_129, out s11_441)
	branch a0_87 >= 0<32> l2309D3A2
l2309D3A2:
	branch a0_87 >=u s0_95 l2309D380
l2309D3A6:
	s0_110 = s0_95 - a0_87
	s4_111 = s4_101 + a0_87
l2309D3AA:
	s2_112 = s2_112 + 1<32>
l2309D328:
	branch Mem27[s5_102 + 4<i32>:int32] == s2_112 l2309D34A
l2309D330:
	word32 a0_119
	word32 s0_127
	word32 s8_431
	word32 s11_433
	word32 s9_432
	word32 a2_423
	word32 a4_425
	word32 a5_426
	word32 s6_430
	word32 a7_427
	word32 s4_428
	word32 s5_429
	word32 a3_424
	word32 a1_422
	ra = snprintf(ra, s4_111, s0_110, 0x230CB360<32>, dwLoc18, dwArg08, dwArg34, s9, s7, dwArg78, dwArg9C, out s0_127, out s1_128, out a0_119, out a1_422, out a2_423, out a3_424, out a4_425, out a5_426, out a7_427, out s2_112, out s3_100, out s4_428, out s5_429, out s6_430, out s7_104, out s8_431, out s9_432, out s10_129, out s11_433)
	branch a0_119 < 0<32> l2309D380
l2309D344:
	branch a0_119 >=u s0_127 l2309D380
l2309D380:
	a0_143 = 0xFD000680<32>
l2309D348:
	s0_110 = s0_127 - a0_119
l2309D34A:
	a0_143 = s1_128 - s0_110
l2309D386:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s0Out = s4
	s1Out = s1_128
	a0Out = a0_143
	s2Out = s2_112
	s3Out = s3_100
	s4Out = dwArg78
	s7Out = s7_104
	s10Out = s10_129
	return ra
mbedtls_x509_serial_gets_exit:


word32 mbedtls_x509_sig_alg_gets(word32 ra, word32 a1, word32 a2, word32 a5, word32 dwArg18, word32 dwArg44, word32 dwArg60, word32 dwArg88, word32 dwArgAC, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_info
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a5 ra s0 s10 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
mbedtls_x509_sig_alg_gets_entry:
l2309D3AE:
	word32 s7_165
	word32 s3_156
	word32 s2_153
	word32 s10_147
	word32 ra_139
	word32 a5_133
	word32 a0_119
	word32 s0_40
	word32 a0_19
	word32 s1_25 = mbedtls_oid_get_sig_alg_desc(a2, fp + 0xFFFFFFEC<32>, a2, a5, out a0_19)
	branch a0_19 == 0<32> l2309D3EE
l2309D3EE:
	word32 s11_198
	word32 s8_196
	word32 s9_197
	word32 s5_194
	word32 s6_195
	word32 a7_192
	word32 s4_193
	word32 a3_190
	word32 a4_191
	word32 a1_188
	word32 a2_189
	word32 s1_187
	ra_139 = snprintf(ra, s1_25, a1, 0x230C6978<32>, dwLoc08, dwArg18, dwArg44, dwArg60, 0<32>, dwArg88, dwArgAC, out s0_40, out s1_187, out a0_119, out a1_188, out a2_189, out a3_190, out a4_191, out a5_133, out a7_192, out s2_153, out s3_156, out s4_193, out s5_194, out s6_195, out s7_165, out s8_196, out s9_197, out s10_147, out s11_198)
l2309D3C6:
	word32 s11_210
	word32 s8_208
	word32 s9_209
	word32 s5_206
	word32 s6_207
	word32 a7_204
	word32 s4_205
	word32 a3_202
	word32 a4_203
	word32 a1_200
	word32 a2_201
	word32 s1_199
	ra_139 = snprintf(ra, s1_25, a1, 0x230BD284<32>, dwLoc08, dwArg18, dwArg44, dwArg60, 0<32>, dwArg88, dwArgAC, out s0_40, out s1_199, out a0_119, out a1_200, out a2_201, out a3_202, out a4_203, out a5_133, out a7_204, out s2_153, out s3_156, out s4_205, out s5_206, out s6_207, out s7_165, out s8_208, out s9_209, out s10_147, out s11_210)
l2309D3D6:
	branch a0_119 < 0<32> l2309D3DE
l2309D3DA:
	branch a0_119 <u s0_40 l2309D3E4
l2309D3DE:
	a0_119 = 0xFD000680<32>
l2309D3E4:
	s0Out = s0_40
	a0Out = a0_119
	a5Out = a5_133
	s2Out = s2_153
	s3Out = s3_156
	s4Out = dwArg04
	s7Out = s7_165
	s10Out = s10_147
	return ra_139
mbedtls_x509_sig_alg_gets_exit:


word32 mbedtls_x509_key_size_helper(word32 ra, word32 a0, word32 a1, word32 dwArg08, word32 dwArg28, word32 dwArg54, word32 dwArg70, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_info
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a5 ra s1 s10 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
mbedtls_x509_key_size_helper_entry:
l2309D402:
	word32 a0_39
	word32 a0_15
	word32 a5_20
	word32 s0_23
	word32 s1_24
	word32 s10_25
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s9_118
	word32 s11_119
	word32 a7_116
	word32 s8_117
	word32 a3_114
	word32 a4_115
	word32 a1_112
	word32 a2_113
	word32 ra_22 = snprintf(ra, a0, a1, 0x230CB34C<32>, dwArg08, dwArg28, dwArg54, dwArg70, ra, dwArg98, dwArgBC, out s0_23, out s1_24, out a0_15, out a1_112, out a2_113, out a3_114, out a4_115, out a5_20, out a7_116, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31, out s7_32, out s8_117, out s9_118, out s10_25, out s11_119)
	branch a0_15 < 0<32> l2309D42A
l2309D41C:
	branch a0_15 >=u s0_23 l2309D42A
l2309D42A:
	a0_39 = 0xFD000680<32>
l2309D420:
	a0_39 = 0<32>
l2309D422:
	s1Out = s1_24
	a0Out = a0_39
	a5Out = a5_20
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s10Out = s10_25
	return ra_22
mbedtls_x509_key_size_helper_exit:


word32 mbedtls_x509_time_is_past()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
// MayUse: 
// LiveOut: a0
// Trashed: a0
// Preserved: sp
mbedtls_x509_time_is_past_entry:
l2309D432:
	return 0<32>
mbedtls_x509_time_is_past_exit:


word32 mbedtls_x509_time_is_future()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
// MayUse: 
// LiveOut: a0
// Trashed: a0
// Preserved: sp
mbedtls_x509_time_is_future_entry:
l2309D436:
	return 0<32>
mbedtls_x509_time_is_future_exit:


word32 mbedtls_base64_decode(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pem_read_buffer
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
mbedtls_base64_decode_entry:
l2309D43A:
	word32 a5_17 = 0<32>
	word32 a6_18 = 0<32>
	word32 a7_105 = 0<32>
l2309D46E:
	word32 a0_148
	branch a7_105 <u a4 l2309D48A
l2309D48A:
	word32 t4_31 = 0<32>
l2309D48C:
	word32 t6_34 = a3 + a7_105
	word32 t1_36 = CONVERT(Mem16[t6_34:byte], byte, word32)
	branch t1_36 == 32<i32> l2309D476
l2309D476:
	a7_105 = a7_105 + 1<32>
	t4_31 = t4_31 + 1<32>
	branch a4 != a7_105 l2309D48C
l2309D498:
	branch a4 == a7_105 l2309D47E
l2309D49C:
	s5 = a4 - a7_105
	branch s5 <=u 1<32> l2309D4B4
l2309D4A4:
	branch t1_36 != 0xD<32> l2309D4B4
l2309D4B4:
	branch t1_36 == 0xA<32> l2309D4B0
l2309D4A8:
	branch CONVERT(Mem16[t6_34 + 1<i32>:byte], byte, word32) != 0xA<32> l2309D4B8
l2309D4B8:
	branch t4_31 != 0<32> l2309D4C6
l2309D4BC:
	branch t1_36 != 61<i32> l2309D4CC
l2309D4CC:
	branch CONVERT(SLICE(t1_36, byte, 0), byte, int32) < 0<32> l2309D4C6
l2309D4C0:
	a5_17 = a5_17 + 1<32>
	branch a5_17 <=u 2<32> l2309D4D8
l2309D4D8:
	word32 t1_80 = CONVERT(Mem16[t1_36 + 0x230CB368<32>:byte], byte, word32)
	branch t1_80 == 127<i32> l2309D4C6
l2309D4E2:
	branch t1_80 >u 63<i32> l2309D4E8
l2309D4E6:
	branch a5_17 != 0<32> l2309D4C6
l2309D4E8:
	a6_18 = a6_18 + 1<32>
l2309D4C6:
	a0_148 = -44<i32>
l2309D4B0:
	a7_105 = a7_105 + 1<32>
l2309D472:
	a4 = a7_105
l2309D47E:
	branch a6_18 != 0<32> l2309D4EC
l2309D4EC:
	word32 a6_117 = (a6_18 >>u 3<u32>) + 6<32> - a5_17 + ((a6_18 & 7<i32>) + 0xD<32> >>u 3<u32>)
	branch a0 == 0<32> l2309D53A
l2309D50C:
	branch a1 <u a6_117 l2309D53A
l2309D53A:
	Mem147[a2:word32] = a6_117
	a0_148 = -42<i32>
l2309D510:
	a4 = a4 + a3
	word32 a5_161 = a0
	word32 a6_162 = 0<32>
	word32 a7_163 = 3<32>
	word32 t1_164 = 0<32>
l2309D530:
	branch a4 != a3 l2309D552
l2309D552:
	word32 t3_174 = CONVERT(Mem173[a3:byte], byte, word32)
	word32 a1_176 = t3_174 + -10<i32> & 255<i32>
	branch a1_176 >u 0x16<32> l2309D56A
l2309D562:
	word32 a1_179 = 0x400009<32> >>u a1_176
	a1 = a1_179 & 1<32>
	branch (a1_179 & 1<32>) != 0<32> l2309D5A0
l2309D56A:
	word32 a1_186 = CONVERT(Mem173[t3_174 + 0x230CB368<32>:byte], byte, word32)
	t1_164 = t1_164 + 1<32>
	a1 = a1_186 & 63<i32>
	a7_163 = a7_163 - CONVERT(a1_186 <u -65<i32>, bool, word32)
	a6_162 = a1_186 & 63<i32> | a6_162 << 6<i32>
	branch t1_164 != 4<32> l2309D5A0
l2309D58C:
	t1_164 = 0<32>
	branch a7_163 == 0<32> l2309D5A0
l2309D592:
	Mem206[a5_161:byte] = SLICE(a6_162 >>u 0x10<u32>, byte, 0)
	a1 = a6_162 >>u 0x10<u32>
	branch a7_163 != 1<32> l2309D5A4
l2309D5A4:
	Mem210[a5_161 + 1<i32>:byte] = SLICE(a6_162 >>u 8<u32>, byte, 0)
	a1 = a6_162 >>u 8<u32>
	branch a7_163 != 2<32> l2309D5B4
l2309D5B4:
	Mem213[a5_161 + 2<i32>:byte] = SLICE(a6_162, byte, 0)
	a5_161 = a5_161 + 3<32>
l2309D5B0:
	a5_161 = a5_161 + 2<32>
l2309D59E:
	a5_161 = a5_161 + 1<32>
l2309D5A0:
	a3 = a3 + 1<32>
l2309D534:
	a5_17 = a5_161 - a0
	Mem227[a5_17:word32] = a2
l2309D482:
	Mem228[a2:word32] = 0<32>
l2309D486:
	a0_148 = 0<32>
l2309D542:
	a0Out = a0_148
	a1Out = a1
	a2Out = s2
	a3Out = a3
	a4Out = a4
	a5Out = a5_17
	s2Out = 63<i32>
	s3Out = 2<32>
	s4Out = dwArg28
	s5Out = s5
	return 127<i32>
mbedtls_base64_decode_exit:


void utils_notifier_chain_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_hbn_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a2
// Preserved: sp
utils_notifier_chain_init_entry:
l2309D5BC:
	utils_list_init(a0)
	return
utils_notifier_chain_init_exit:


word32 utils_notifier_chain_register(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_hbn_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a2
// Trashed: a0 a2 a5
// Preserved: sp
utils_notifier_chain_register_entry:
l2309D5CC:
	branch a0 == 0<32> l2309D5E4
l2309D5E4:
l2309D5CE:
	branch a1 == 0<32> l2309D5E6
l2309D5E6:
	return a2
l2309D5D2:
	utils_list_push_back(a1, 0xFFFFFFFF<32>)
	return dwArg10
utils_notifier_chain_register_exit:


word32 utils_notifier_chain_call(word32 ra, word32 s0, word32 a0, word32 a1, word32 a5, ptr32 & s1Out, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_hbn_enter
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a2 ra s1
// Trashed: a0 a1 a2 a5 ra s1 tp
// Preserved: s0 sp
utils_notifier_chain_call_entry:
l2309D5EA:
	branch a0 == 0<32> l2309D614
l2309D614:
	s1Out = s1
	a2Out = a2
	return ra
l2309D5EC:
	word32 a0_12 = Mem11[s0:word32]
	word32 s1_14 = a1
l2309D5F8:
	branch s0 != 0<32> l2309D606
l2309D606:
	word32 a5_33
	word32 s0_18 = Mem11[a5 + 4<i32>:word32]
	branch a5 == 0<32> l2309D610
l2309D60A:
	word32 a2_31
	word32 tp_32
	call a5 (retsize: 0;)
		uses: a0:a0_19,a1:s1_21,a2:a2_31,a5:a5_33,ra:ra_23,s0:Mem11[a0_19 + 8<i32>:word32],s1:s1_21,tp:tp_32
		defs: a0:a0_26,a2:a2_31,a5:a5_33,ra:ra_28,s0:s0_29,s1:s1_27,tp:tp_32
	a5 = a5_33
l2309D610:
	s0 = Mem11[s0_18:word32]
l2309D5FA:
	s1Out = s1_14
	a2Out = dwArg10
	return ra
utils_notifier_chain_call_exit:


word32 fabs(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_number
//      __ieee754_pow
// MayUse:  a1:[0..30]
// LiveOut: a1
// Trashed: a1
// Preserved: sp
fabs_entry:
l2309D618:
	return CONVERT(SLICE(a1, word31, 0), word31, word32)
fabs_exit:


word32 floor(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_number
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
floor_entry:
l2309D624:
	word32 a4_134
	word32 a3_133
	word32 a5_6 = a1 >> 0x14<u32> & 2047<i32>
	word32 s2_125 = a1
	word32 s4_124 = a0
	branch a5_6 > -1042<i32> l2309D738
l2309D738:
	branch a5_6 <= -1074<i32> l2309D768
l2309D768:
	word32 s5_33 = -1<i32> >>u a5_6 + -1043<i32>
	a3_133 = a0
	a4_134 = a1
	branch (s5_33 & a0) == 0<32> l2309D6D4
l2309D784:
	word32 a1_44
	word32 a1_274
	word32 a4_275
	word32 a5_276
	branch __gedf2(__adddf3(ra, a0, a1, Mem22[0x4200ED28<p32>:int32], Mem22[0x4200ED2C<p32>:int32], fflags, frm, out a1_44), a1_44, 0<i32>, 0<i32>, fflags, frm, out a1_274, out a4_275, out a5_276) <= 0<32> l2309D6CC
l2309D7A8:
	branch a1 < 0<32> l2309D7D4
l2309D7D4:
	branch a5_6 == -1043<i32> l2309D800
l2309D800:
	s2_125 = a1 + 1<i32>
l2309D7DC:
	word32 s3_71 = (1<i32> << 52<i32> - (a5_6 + -1023<i32>)) + a0
	branch s3_71 >=u a0 l2309D808
l2309D808:
	s4_124 = s3_71
l2309D7F4:
	s2_125 = a1 + 1<i32>
	s4_124 = s3_71
l2309D7AC:
	s4_124 = s4_124 & ~s5_33
l2309D740:
	a3_133 = a0
	a4_134 = a1
	branch a5_6 != -2047<i32> l2309D6D4
l2309D750:
	word32 a1_85
	a3_133 = __adddf3(ra, a0, a1, a0, a1, fflags, frm, out a1_85)
	a4_134 = a1_85
l2309D66C:
	branch a5_6 < 0xFFFFFC01<32> l2309D704
l2309D704:
	word32 a1_100
	word32 a1_268
	word32 a4_269
	word32 a5_270
	branch __gedf2(__adddf3(ra, a0, a1, Mem22[0x4200ED28<p32>:int32], Mem22[0x4200ED2C<p32>:int32], fflags, frm, out a1_100), a1_100, 0<i32>, 0<i32>, fflags, frm, out a1_268, out a4_269, out a5_270) <= 0<32> l2309D6CC
l2309D728:
	branch a1 < 0<32> l2309D7B8
l2309D7B8:
	s4_124 = 0<i32>
	branch (CONVERT(SLICE(a1, word31, 0), word31, word32) | a0) == 0<32> l2309D6CC
l2309D7CC:
	s2_125 = 0xBFF00000<32>
l2309D72C:
	s4_124 = 0<i32>
	s2_125 = 0<i32>
l2309D670:
	word32 s5_130 = 0xFFFFF<32> >> a5_6 + -1023<i32>
	a3_133 = a0
	a4_134 = a1
	branch (s5_130 & a1 | a0) == 0<32> l2309D6D4
l2309D690:
	word32 a1_140
	word32 a4_272
	word32 a1_271
	word32 a5_273
	branch __gedf2(__adddf3(ra, a0, a1, Mem22[0x4200ED28<p32>:int32], Mem22[0x4200ED2C<p32>:int32], fflags, frm, out a1_140), a1_140, 0<i32>, 0<i32>, fflags, frm, out a1_271, out a4_272, out a5_273) <= 0<32> l2309D6CC
l2309D6B4:
	branch a1 >= 0<32> l2309D6C0
l2309D6B8:
	s2_125 = (0x100000<32> >> a5_6 + -1023<i32>) + a1
l2309D6C0:
	s2_125 = s2_125 & ~s5_130
	s4_124 = 0<i32>
l2309D6CC:
	a3_133 = s4_124
	a4_134 = s2_125
l2309D6D4:
	a1Out = a4_134
	return a3_133
floor_exit:


void modf(word32 ra, word32 a0, word32 a1, word32 a2, word32 fflags, word32 frm)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: ra sp
modf_entry:
l2309D810:
	word32 a6_22
	word32 t1_21
	word32 a4_6 = a1 >> 0x14<u32> & 2047<i32>
	word32 a5_11 = a1
	branch a4_6 > -1042<i32> l2309D878
l2309D878:
	branch a4_6 > -1074<i32> l2309D850
l2309D880:
	word32 a4_17 = -1<i32> >>u a4_6 + -1043<i32>
	branch (a4_17 & a0) == 0<32> l2309D850
l2309D894:
	word32 a3_20 = ~a4_17 & a0
	t1_21 = a3_20
	a6_22 = a3_20
l2309D834:
	branch a4_6 < 0xFFFFFC01<32> l2309D8DC
l2309D8DC:
	Mem28[a2:word32] = 0<i32>
	Mem29[a2 + 4<i32>:word32] = a1 & 0x80000000<32>
	return
l2309D838:
	word32 a6_35 = 0xFFFFF<32> >> a4_6 + -1023<i32>
	branch (a6_35 & a1 | a0) != 0<32> l2309D8A8
l2309D8A8:
	a5_11 = ~a6_35 & a1
	t1_21 = 0<i32>
	a6_22 = 0<i32>
l2309D8BC:
	Mem45[a2:word32] = t1_21
	Mem47[a2 + 4<i32>:word32] = a5_11
	word32 a1_106
	__subdf3(ra, a0, a1, a6_22, a5_11, fflags, frm, out a1_106)
	return
l2309D850:
	Mem78[a2 + 4<i32>:word32] = a1
	Mem81[a2:word32] = a0
	return
modf_exit:


word32 pow(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      parse_value
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 fflags frm
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 s3 s4 s5 sp
pow_entry:
l2309D904:
	word32 a1_29
	word32 s2_45
	word32 s3_46
	word32 fflags_158
	word32 frm_159
	word32 a0_28 = __ieee754_pow(ra, a0, a1, a2, a3, fflags, frm, out a1_29, out s2_45, out s3_46, out fflags_158, out frm_159)
	word32 s4_171 = a0_28
	word32 s5_172 = a1_29
	branch Mem17[0x4200F724<p32>:int32] == -1<i32> l2309D9DC
l2309D954:
	branch __unorddf2(a2, a3, a2, a3, fflags_158, frm_159) != 0<32> l2309D9DC
l2309D96C:
	branch __unorddf2(s2_45, s3_46, s2_45, s3_46, fflags_158, frm_159) != 0<32> l2309DA68
l2309DA68:
	word32 a5_431
	word32 a4_430
	word32 a1_429
	branch __eqdf2(a2, a3, 0<i32>, 0<i32>, fflags_158, frm_159, out a1_429, out a4_430, out a5_431) != 0<32> l2309D9DC
l2309D98C:
	word32 a5_434
	word32 a4_433
	word32 a1_432
	branch __eqdf2(s2_45, s3_46, 0<i32>, 0<i32>, fflags_158, frm_159, out a1_432, out a4_433, out a5_434) != 0<32> l2309DA08
l2309DA08:
	branch finite(a1_29) == 0<32> l2309DA8C
l2309DA8C:
	branch finite(s3_46) == 0<32> l2309DA18
l2309DA9C:
	branch finite(a3) == 0<32> l2309DA18
l2309DAAC:
	branch __unorddf2(a0_28, a1_29, a0_28, a1_29, fflags_158, frm_159) != 0<32> l2309DB4C
l2309DB4C:
	word32 a5_447
	Mem140[__errno(out a5_447):word32] = 33<i32>
	word32 a0_143
	word32 a1_144
	word32 a3_450
	word32 s1_449
	word32 s2_451
	word32 s0_448
	word32 s3_452
	word32 s5_453
	word32 s6_454
	word32 s7_455
	word32 s9_456
	__divdf3(ra, 0<i32>, 0<i32>, 0<i32>, 0<i32>, fflags_158, frm_159, out s0_448, out s1_449, out a0_143, out a1_144, out a3_450, out s2_451, out s3_452, out s5_453, out s6_454, out s7_455, out s9_456, out fflags_158, out frm_159)
	s4_171 = a0_143
	s5_172 = a1_144
l2309DAC4:
	word32 a5_457
	Mem176[__errno(out a5_457):word32] = 34<i32>
	word32 a1_458
	word32 a4_459
	word32 a5_460
	word32 a7_461
	branch __ledf2(s2_45, s3_46, 0<i32>, 0<i32>, fflags_158, frm_159, out a1_458, out a4_459, out a5_460, out a7_461) < 0<32> l2309DB1C
l2309DB1C:
	word32 a1_202
	word32 a1_462
	word32 a4_463
	word32 a5_464
	branch __eqdf2(rint(ra, a2, a3, fflags_158, frm_159, out a1_202), a1_202, a2, a3, fflags_158, frm_159, out a1_462, out a4_463, out a5_464) == 0<32> l2309DAE8
l2309DB38:
	s4_171 = Mem176[0x4200ED30<p32>:int32]
	s5_172 = Mem176[0x4200ED34<p32>:int32]
l2309DAE8:
	s4_171 = Mem176[0x4200ED38<p32>:int32]
	s5_172 = Mem176[0x4200ED3C<p32>:int32]
l2309DA18:
	word32 a5_445
	word32 a4_444
	word32 a1_443
	branch __eqdf2(a0_28, a1_29, 0<i32>, 0<i32>, fflags_158, frm_159, out a1_443, out a4_444, out a5_445) != 0<32> l2309D9DC
l2309DA30:
	branch finite(s3_46) == 0<32> l2309D9DC
l2309DA40:
	branch finite(a3) == 0<32> l2309D9DC
l2309DA50:
	word32 a5_446
	Mem260[__errno(out a5_446):word32] = 34<i32>
	s4_171 = 0<i32>
	s5_172 = 0<i32>
l2309D99C:
	word32 a5_437
	word32 a4_436
	word32 a1_435
	branch __eqdf2(a2, a3, 0<i32>, 0<i32>, fflags_158, frm_159, out a1_435, out a4_436, out a5_437) == 0<32> l2309DA78
l2309DA78:
	s4_171 = Mem17[0x4200ED20<p32>:int32]
	s5_172 = Mem17[0x4200ED24<p32>:int32]
l2309D9B4:
	branch finite(a3) == 0<32> l2309D9DC
l2309D9C4:
	word32 a7_441
	word32 a5_440
	word32 a4_439
	word32 a1_438
	branch __ledf2(a2, a3, 0<i32>, 0<i32>, fflags_158, frm_159, out a1_438, out a4_439, out a5_440, out a7_441) < 0<32> l2309DAFC
l2309DAFC:
	word32 a5_442
	Mem305[__errno(out a5_442):word32] = 33<i32>
	s4_171 = Mem305[0x4200ED30<p32>:int32]
	s5_172 = Mem305[0x4200ED34<p32>:int32]
l2309D9DC:
	a1Out = s5_172
	fflagsOut = fflags_158
	frmOut = frm_159
	return s4_171
pow_exit:


word32 __ieee754_pow(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pow
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 fflags frm s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: ra s0 s1 s10 s11 sp
__ieee754_pow_entry:
l2309DB78:
	word32 a1_100
	word32 a0_102
	branch (a3 & 0x7FFFFFFF<32> | a2) == 0<32> l2309DCC0
l2309DBC4:
	word32 s0_270 = a1 & 0x7FFFFFFF<32>
	word32 s5_275 = a1
	branch (a1 & 0x7FFFFFFF<32>) <= 0x7FF00000<32> l2309DC2C
l2309DC2C:
	branch (a1 & 0x7FFFFFFF<32>) == 0x7FF00000<32> l2309DCCC
l2309DCCC:
	branch a0 != 0<32> l2309DCD4
l2309DCD0:
	branch (a1 & 0x7FFFFFFF<32>) >= (a3 & 0x7FFFFFFF<32>) l2309DC34
l2309DC30:
	branch (a3 & 0x7FFFFFFF<32>) > 0x7FF00000<32> l2309DBD8
l2309DC34:
	branch (a3 & 0x7FFFFFFF<32>) == 0x7FF00000<32> l2309DE94
l2309DE94:
	branch a2 == 0<32> l2309DC3C
l2309DE98:
l2309DC3C:
	word32 s10_290 = 0<i32>
	branch a1 < 0<32> l2309DD18
l2309DD18:
	branch (a3 & 0x7FFFFFFF<32>) >= 0x43400000<32> l2309DE9C
l2309DE9C:
	s10_290 = 2<i32>
l2309DD20:
	branch (a3 & 0x7FFFFFFF<32>) < 0x3FF00000<32> l2309DD58
l2309DD28:
	word32 a3_63 = (a3 & 0x7FFFFFFF<32>) >> 0x14<u32>
	branch a3_63 <= -1043<i32> l2309EA84
l2309EA84:
	branch a2 != 0<32> l2309DDB8
l2309DDB8:
	a1_100 = fabs(a1)
	branch a0 != 0<32> l2309DEA4
l2309EA88:
	word32 a3_69 = 20<i32> - (a3_63 + -1023<i32>)
	word32 a2_70 = (a3 & 0x7FFFFFFF<32>) >> a3_69
	s10_290 = a2
	branch a2_70 << a3_69 == (a3 & 0x7FFFFFFF<32>) l2309EAA0
l2309EAA0:
	s10_290 = 2<i32> - (a2_70 & 1<i32>)
l2309EA9C:
l2309DD38:
	word32 a3_77 = 52<i32> - (a3_63 + -1023<i32>)
	word32 a2_78 = a2 >>u a3_77
	branch a2_78 << a3_77 != a2 l2309DD58
l2309DD4C:
	s10_290 = 2<i32> - (a2_78 & 1<i32>)
l2309DD58:
	branch a2 == 0<32> l2309DC60
l2309DC54:
	branch a2 != 0<32> l2309DD5C
l2309DC58:
	branch (a3 & 0x7FFFFFFF<32>) == 0x7FF00000<32> l2309DE08
l2309DE08:
	branch ((a1 & 0x7FFFFFFF<32>) + 0xC0100000<32> | a0) == 0<32> l2309DCC0
l2309DCC0:
	a0_102 = 0<i32>
	a1_100 = 0x3FF00000<32>
l2309DE18:
	branch (a1 & 0x7FFFFFFF<32>) < 0x3FF00000<32> l2309E8C0
l2309E8C0:
	branch a3 >= 0<32> l2309DE2C
l2309E8C4:
	a0_102 = 0<i32>
	a1_100 = a3 ^ 0x80000000<32>
l2309DE20:
	a1_100 = a3
	a0_102 = 0<i32>
	branch a3 >= 0<32> l2309DBF0
l2309DC60:
	branch (a3 & 0x7FFFFFFF<32>) == 0x3FF00000<32> l2309DE38
l2309DE38:
	a0_102 = a0
	a1_100 = a1
	branch a3 >= 0<32> l2309DBF0
l2309DE44:
	word32 s0_4517
	word32 s1_4518
	word32 a3_4519
	word32 s2_4520
	word32 s3_4521
	word32 s5_4522
	word32 s6_4523
	word32 s7_4524
	word32 s9_4525
	__divdf3(ra, Mem33[0x4200ED20<p32>:int32], Mem33[0x4200ED24<p32>:int32], a0, a1, fflags, frm, out s0_4517, out s1_4518, out a0_102, out a1_100, out a3_4519, out s2_4520, out s3_4521, out s5_4522, out s6_4523, out s7_4524, out s9_4525, out fflags, out frm)
l2309DC68:
	branch a3 == 0x40000000<32> l2309EA6C
l2309EA6C:
	word32 s3_4051
	word32 a3_4049
	word32 s2_4050
	word32 s1_4048
	word32 s5_4053
	word32 s6_4054
	word32 s0_4047
	word32 s4_4052
	word32 s9_4057
	word32 s7_4055
	word32 s8_4056
	__muldf3(ra, a0, a1, a0, a1, fflags, frm, out s0_4047, out s1_4048, out a0_102, out a1_100, out a3_4049, out s2_4050, out s3_4051, out s4_4052, out s5_4053, out s6_4054, out s7_4055, out s8_4056, out s9_4057, out fflags, out frm)
l2309DC70:
	branch a3 != 0x3FE00000<32> l2309DD5C
l2309DC78:
	branch a1 < 0<32> l2309DD5C
l2309DD5C:
	a1_100 = fabs(a1)
	branch a0 == 0<32> l2309DDC0
l2309DDC0:
	a0_102 = a0
	branch (a1 & 0x7FFFFFFF<32>) == 0<32> l2309DDD4
l2309DDC4:
	branch CONVERT(SLICE(a1, word30, 0), word30, word32) != 0x3FF00000<32> l2309DD6C
l2309DDD4:
	branch a3 < 0<32> l2309DE6C
l2309DE6C:
	word32 s2_4080
	word32 s3_4081
	word32 s1_4078
	word32 a3_4079
	word32 s6_4082
	word32 s9_4084
	word32 s7_4083
	ra = __divdf3(ra, Mem33[0x4200ED20<p32>:int32], Mem33[0x4200ED24<p32>:int32], a0, a1_100, fflags, frm, out s0_270, out s1_4078, out a0_102, out a1_100, out a3_4079, out s2_4080, out s3_4081, out s5_275, out s6_4082, out s7_4083, out s9_4084, out fflags, out frm)
l2309DDD8:
	branch s5_275 >= 0<32> l2309DBF0
l2309DDDC:
	branch (s0_270 + 0xC0100000<32> | s10_290) != 0<32> l2309EAD4
l2309EAD4:
	branch s10_290 == 1<i32> l2309EAE0
l2309EAE0:
	a1_100 = a1_100 ^ 0x80000000<32>
l2309EADC:
l2309DDEC:
	word32 a1_307
	word32 a0_306 = __subdf3(ra, a0_102, a1_100, a0_102, a1_100, fflags, frm, out a1_307)
	word32 s9_4093
	word32 s2_4088
	word32 a3_4087
	word32 s0_4085
	word32 s1_4086
	word32 s3_4089
	word32 s7_4092
	word32 s6_4091
	word32 s5_4090
	__divdf3(ra, a0_306, a1_307, a0_306, a1_307, fflags, frm, out s0_4085, out s1_4086, out a0_102, out a1_100, out a3_4087, out s2_4088, out s3_4089, out s5_4090, out s6_4091, out s7_4092, out s9_4093, out fflags, out frm)
l2309DD6C:
	word32 t3_348 = (a1 >>u 0x1F<u32>) + -1<i32>
	word32 a0_426 = a0
	branch (s10_290 | t3_348) == 0<32> l2309DEA4
l2309DEA4:
	word32 a1_366
	word32 a0_365 = __subdf3(ra, a0, a1, a0, a1, fflags, frm, out a1_366)
	word32 s2_4061
	word32 s1_4059
	word32 a3_4060
	word32 s0_4058
	word32 s3_4062
	word32 s5_4063
	word32 s6_4064
	word32 s9_4066
	word32 s7_4065
	__divdf3(ra, a0_365, a1_366, a0_365, a1_366, fflags, frm, out s0_4058, out s1_4059, out a0_102, out a1_100, out a3_4060, out s2_4061, out s3_4062, out s5_4063, out s6_4064, out s7_4065, out s9_4066, out fflags, out frm)
l2309DD7C:
	word32 s1_1615
	word32 fflags_1529
	word32 frm_1530
	word32 ra_1531
	word32 s9_1541
	word32 s5_1537
	branch (a3 & 0x7FFFFFFF<32>) <= 0x41E00000<32> l2309DEC8
l2309DEC8:
	word32 a2_411 = 0<i32>
	branch (a1 & 0x7FF00000<32>) != 0<32> l2309DEFC
l2309DED8:
	word32 a1_429
	word32 s0_4161
	word32 s7_4169
	word32 s8_4170
	word32 s1_4162
	word32 s2_4164
	word32 s3_4165
	word32 a3_4163
	word32 s4_4166
	word32 s6_4168
	word32 s5_4167
	word32 s9_4171
	ra = __muldf3(ra, a0, a1_100, Mem33[0x4200ED90<p32>:int32], Mem33[0x4200ED94<p32>:int32], fflags, frm, out s0_4161, out s1_4162, out a0_426, out a1_429, out a3_4163, out s2_4164, out s3_4165, out s4_4166, out s5_4167, out s6_4168, out s7_4169, out s8_4170, out s9_4171, out fflags, out frm)
	s0_270 = a1_429
	a2_411 = -53<i32>
l2309DEFC:
	word32 dwLoc78_3308
	word32 dwLoc74_3309
	word32 dwLoc70_3304
	word32 dwLoc44_3307
	word32 dwLoc48_3306
	word32 dwLoc6C_3305
	word32 a6_466 = s0_270 & 0xFFFFF<32>
	word32 t4_470 = (s0_270 >> 0x14<u32>) + -1023<i32> + a2_411
	word32 s8_471 = a6_466 | 0x3FF00000<32>
	branch a6_466 <= 0x3988E<32> l2309E8D4
l2309E8D4:
l2309DF28:
	branch a6_466 <= 0xBB679<32> l2309EAEC
l2309EAEC:
	dwLoc70_3304 = Mem478[0x4200ED40<p32>:int32]
	dwLoc6C_3305 = Mem478[0x4200ED44<p32>:int32]
	dwLoc48_3306 = Mem485[0x4200ED48<p32>:int32]
	dwLoc44_3307 = Mem485[0x4200ED4C<p32>:int32]
	dwLoc78_3308 = Mem491[0x4200ED50<p32>:int32]
	dwLoc74_3309 = Mem491[0x4200ED54<p32>:int32]
l2309DF34:
	t4_470 = t4_470 + 1<i32>
	s8_471 = (a6_466 | 0x3FF00000<32>) - 0x100000<32>
l2309DF44:
	dwLoc70_3304 = 0<32>
	dwLoc6C_3305 = 0<32>
	dwLoc48_3306 = 0<32>
	dwLoc44_3307 = 0<32>
	dwLoc78_3308 = Mem478[0x4200ED20<p32>:int32]
	dwLoc74_3309 = Mem478[0x4200ED24<p32>:int32]
l2309DF68:
	word32 a1_4201
	__subdf3(ra, a0_426, s8_471, dwLoc78_3308, dwLoc74_3309, fflags, frm, out a1_4201)
	word32 s2_4205
	word32 s3_4206
	word32 s5_4207
	word32 s9_4208
	word32 s4_4213
	word32 a0_4210
	word32 s5_4214
	word32 a3_4211
	word32 s2_4212
	word32 s0_4209
	word32 s6_4215
	word32 s9_4217
	word32 s4_4219
	word32 a3_4218
	word32 s9_4221
	word32 s5_4220
	word32 s7_4216
	word32 a1_563
	word32 a0_577
	word32 a1_578
	word32 fflags_592
	word32 frm_593
	word32 s6_601
	word32 s7_602
	word32 a1_612
	word32 fflags_626
	word32 frm_627
	word32 s1_630
	word32 s3_632
	word32 s8_637
	word32 a0_650
	word32 a1_651
	word32 fflags_665
	word32 frm_666
	word32 s0_668
	word32 s1_669
	word32 s2_670
	word32 s3_671
	word32 s6_674
	word32 s7_675
	word32 s8_676
	word32 a3_4204
	word32 s1_4203
	word32 s0_4202
	word32 ra_667 = __muldf3(__muldf3(__divdf3(ra, Mem561[0x4200ED20<p32>:int32], Mem561[0x4200ED24<p32>:int32], __adddf3(ra, a0_426, s8_471, dwLoc78_3308, dwLoc74_3309, fflags, frm, out a1_563), a1_563, fflags, frm, out s0_4202, out s1_4203, out a0_577, out a1_578, out a3_4204, out s2_4205, out s3_4206, out s5_4207, out s6_601, out s7_602, out s9_4208, out fflags_592, out frm_593), s6_601, s7_602, a0_577, a1_578, fflags_592, frm_593, out s0_4209, out s1_630, out a0_4210, out a1_612, out a3_4211, out s2_4212, out s3_632, out s4_4213, out s5_4214, out s6_4215, out s7_4216, out s8_637, out s9_4217, out fflags_626, out frm_627), s1_630, a1_612, 0<i32>, (s8_637 >> 1<u32> | 0x20000000<32>) + 0x80000<32> + s3_632, fflags_626, frm_627, out s0_668, out s1_669, out a0_650, out a1_651, out a3_4218, out s2_670, out s3_671, out s4_4219, out s5_4220, out s6_674, out s7_675, out s8_676, out s9_4221, out fflags_665, out frm_666)
	word32 a1_4222
	__subdf3(ra_667, s6_674, s7_675, a0_650, a1_651, fflags_665, frm_666, out a1_4222)
	word32 s4_4228
	word32 s5_4229
	word32 s2_4226
	word32 s3_4227
	word32 s1_4224
	word32 a3_4225
	word32 s0_4223
	word32 s8_4230
	word32 s9_4231
	word32 a1_699
	word32 a1_713
	word32 a0_724
	word32 a1_725
	word32 fflags_739
	word32 frm_740
	word32 s6_748
	word32 s7_749
	word32 ra_741 = __muldf3(ra_667, __subdf3(ra_667, s2_670, s8_676, __subdf3(ra_667, 0<i32>, s3_671, dwLoc78_3308, dwLoc74_3309, fflags_665, frm_666, out a1_699), a1_699, fflags_665, frm_666, out a1_713), a1_713, s1_669, s0_668, fflags_665, frm_666, out s0_4223, out s1_4224, out a0_724, out a1_725, out a3_4225, out s2_4226, out s3_4227, out s4_4228, out s5_4229, out s6_748, out s7_749, out s8_4230, out s9_4231, out fflags_739, out frm_740)
	word32 s7_4238
	word32 s1_4232
	word32 a3_4233
	word32 s3_4235
	word32 s9_4240
	word32 s5_4236
	word32 s6_4237
	word32 s8_4239
	word32 s2_4234
	word32 s1_4253
	word32 s2_4244
	word32 a3_4243
	word32 s1_4242
	word32 s7_4249
	word32 s9_4251
	word32 s0_4252
	word32 a3_4254
	word32 s8_4250
	word32 s4_4246
	word32 s6_4248
	word32 s5_4247
	word32 s3_4245
	word32 s4_4255
	word32 s9_4260
	word32 s5_4256
	word32 s6_4257
	word32 s7_4258
	word32 s8_4259
	word32 s0_4241
	word32 a1_757
	word32 a0_772
	word32 a1_773
	word32 fflags_787
	word32 frm_788
	word32 s0_790
	word32 s4_794
	word32 a0_806
	word32 a1_807
	word32 fflags_821
	word32 frm_822
	word32 a0_840
	word32 a1_841
	word32 fflags_855
	word32 frm_856
	word32 s2_860
	word32 s3_861
	word32 ra_857 = __muldf3(__muldf3(__muldf3(ra_741, __subdf3(ra_741, s6_748, s7_749, a0_724, a1_725, fflags_739, frm_740, out a1_757), a1_757, a0_577, a1_578, fflags_739, frm_740, out s0_790, out s1_4232, out a0_772, out a1_773, out a3_4233, out s2_4234, out s3_4235, out s4_794, out s5_4236, out s6_4237, out s7_4238, out s8_4239, out s9_4240, out fflags_787, out frm_788), s4_794, s0_790, s4_794, s0_790, fflags_787, frm_788, out s0_4241, out s1_4242, out a0_806, out a1_807, out a3_4243, out s2_4244, out s3_4245, out s4_4246, out s5_4247, out s6_4248, out s7_4249, out s8_4250, out s9_4251, out fflags_821, out frm_822), a0_806, a1_807, Mem803[0x4200ED98<p32>:int32], Mem803[0x4200ED9C<p32>:int32], fflags_821, frm_822, out s0_4252, out s1_4253, out a0_840, out a1_841, out a3_4254, out s2_860, out s3_861, out s4_4255, out s5_4256, out s6_4257, out s7_4258, out s8_4259, out s9_4260, out fflags_855, out frm_856)
	word32 s0_4261
	word32 s1_4262
	word32 s4_4264
	word32 a3_4263
	word32 s7_4267
	word32 s5_4265
	word32 s6_4266
	word32 s9_4269
	word32 s8_4268
	word32 a1_875
	word32 a0_885
	word32 a1_886
	word32 fflags_900
	word32 frm_901
	word32 s2_905
	word32 s3_906
	word32 ra_902 = __muldf3(ra_857, __adddf3(ra_857, a0_840, a1_841, Mem803[0x4200EDA0<p32>:int32], Mem803[0x4200EDA4<p32>:int32], fflags_855, frm_856, out a1_875), a1_875, s2_860, s3_861, fflags_855, frm_856, out s0_4261, out s1_4262, out a0_885, out a1_886, out a3_4263, out s2_905, out s3_906, out s4_4264, out s5_4265, out s6_4266, out s7_4267, out s8_4268, out s9_4269, out fflags_900, out frm_901)
	word32 s0_4270
	word32 s1_4271
	word32 s6_4275
	word32 a3_4272
	word32 s4_4273
	word32 s7_4276
	word32 s8_4277
	word32 s5_4274
	word32 s9_4278
	word32 a1_918
	word32 a0_928
	word32 a1_929
	word32 fflags_943
	word32 frm_944
	word32 s2_948
	word32 s3_949
	word32 ra_945 = __muldf3(ra_902, __adddf3(ra_902, a0_885, a1_886, Mem803[0x4200EDA8<p32>:int32], Mem803[0x4200EDAC<p32>:int32], fflags_900, frm_901, out a1_918), a1_918, s2_905, s3_906, fflags_900, frm_901, out s0_4270, out s1_4271, out a0_928, out a1_929, out a3_4272, out s2_948, out s3_949, out s4_4273, out s5_4274, out s6_4275, out s7_4276, out s8_4277, out s9_4278, out fflags_943, out frm_944)
	word32 a3_4281
	word32 s0_4279
	word32 s4_4282
	word32 s5_4283
	word32 s1_4280
	word32 s7_4285
	word32 s9_4287
	word32 s6_4284
	word32 s8_4286
	word32 a1_961
	word32 a0_971
	word32 a1_972
	word32 fflags_986
	word32 frm_987
	word32 s2_991
	word32 s3_992
	word32 ra_988 = __muldf3(ra_945, __adddf3(ra_945, a0_928, a1_929, Mem803[0x4200EDB0<p32>:int32], Mem803[0x4200EDB4<p32>:int32], fflags_943, frm_944, out a1_961), a1_961, s2_948, s3_949, fflags_943, frm_944, out s0_4279, out s1_4280, out a0_971, out a1_972, out a3_4281, out s2_991, out s3_992, out s4_4282, out s5_4283, out s6_4284, out s7_4285, out s8_4286, out s9_4287, out fflags_986, out frm_987)
	word32 s4_4291
	word32 s0_4288
	word32 s1_4289
	word32 a3_4290
	word32 s9_4296
	word32 s6_4293
	word32 s7_4294
	word32 s8_4295
	word32 s5_4292
	word32 a1_1004
	word32 a0_1014
	word32 a1_1015
	word32 fflags_1029
	word32 frm_1030
	word32 s2_1034
	word32 s3_1035
	word32 ra_1031 = __muldf3(ra_988, __adddf3(ra_988, a0_971, a1_972, Mem803[0x4200EDB8<p32>:int32], Mem803[0x4200EDBC<p32>:int32], fflags_986, frm_987, out a1_1004), a1_1004, s2_991, s3_992, fflags_986, frm_987, out s0_4288, out s1_4289, out a0_1014, out a1_1015, out a3_4290, out s2_1034, out s3_1035, out s4_4291, out s5_4292, out s6_4293, out s7_4294, out s8_4295, out s9_4296, out fflags_1029, out frm_1030)
	word32 s1_4298
	word32 a3_4299
	word32 s3_4301
	word32 s2_4300
	word32 s0_4297
	word32 a3_4310
	word32 a0_4308
	word32 s7_4305
	word32 s8_4306
	word32 s5_4303
	word32 s4_4302
	word32 s6_4304
	word32 s2_4311
	word32 a1_4309
	word32 s9_4307
	word32 s5_4313
	word32 s8_4316
	word32 s7_4315
	word32 s3_4312
	word32 s6_4314
	word32 s9_4317
	word32 a1_1047
	word32 a0_1061
	word32 a1_1062
	word32 fflags_1076
	word32 frm_1077
	word32 fflags_1110
	word32 frm_1111
	word32 s0_1113
	word32 s1_1114
	word32 s4_1117
	word32 ra_1112 = __muldf3(__muldf3(ra_1031, s2_1034, s3_1035, s2_1034, s3_1035, fflags_1029, frm_1030, out s0_4297, out s1_4298, out a0_1061, out a1_1062, out a3_4299, out s2_4300, out s3_4301, out s4_4302, out s5_4303, out s6_4304, out s7_4305, out s8_4306, out s9_4307, out fflags_1076, out frm_1077), __adddf3(ra_1031, a0_1014, a1_1015, Mem803[0x4200EDC0<p32>:int32], Mem803[0x4200EDC4<p32>:int32], fflags_1029, frm_1030, out a1_1047), a1_1047, a0_1061, a1_1062, fflags_1076, frm_1077, out s0_1113, out s1_1114, out a0_4308, out a1_4309, out a3_4310, out s2_4311, out s3_4312, out s4_1117, out s5_4313, out s6_4314, out s7_4315, out s8_4316, out s9_4317, out fflags_1110, out frm_1111)
	word32 s6_4321
	word32 a3_4318
	word32 s4_4319
	word32 s5_4320
	word32 s8_4323
	word32 a1_1130
	word32 a0_1140
	word32 a1_1141
	word32 fflags_1155
	word32 frm_1156
	word32 s0_1158
	word32 s1_1159
	word32 s2_1160
	word32 s3_1161
	word32 s9_4324
	word32 s7_4322
	word32 ra_1157 = __muldf3(ra_1112, __adddf3(ra_1112, s4_1117, s0_1113, s1_1114, s0_1113, fflags_1110, frm_1111, out a1_1130), a1_1130, a0_772, a1_773, fflags_1110, frm_1111, out s0_1158, out s1_1159, out a0_1140, out a1_1141, out a3_4318, out s2_1160, out s3_1161, out s4_4319, out s5_4320, out s6_4321, out s7_4322, out s8_4323, out s9_4324, out fflags_1155, out frm_1156)
	word32 a1_4325
	__adddf3(ra_1157, a0_1140, a1_1141, s2_1160, s3_1161, fflags_1155, frm_1156, out a1_4325)
	word32 a3_4326
	word32 a0_1185
	word32 a1_1186
	word32 fflags_1200
	word32 frm_1201
	word32 s0_1203
	word32 s1_1204
	word32 s2_1205
	word32 s3_1206
	word32 s6_1209
	word32 s7_1210
	word32 s5_4328
	word32 s9_4330
	word32 s8_4329
	word32 s4_4327
	word32 ra_1202 = __muldf3(ra_1157, s1_1159, s0_1158, s1_1159, s0_1158, fflags_1155, frm_1156, out s0_1203, out s1_1204, out a0_1185, out a1_1186, out a3_4326, out s2_1205, out s3_1206, out s4_4327, out s5_4328, out s6_1209, out s7_1210, out s8_4329, out s9_4330, out fflags_1200, out frm_1201)
	word32 a1_1218
	word32 a1_1231
	__adddf3(ra_1202, __adddf3(ra_1202, a0_1185, a1_1186, Mem1058[s7_1210:int32], Mem1058[s7_1210 + 4<i32>:int32], fflags_1200, frm_1201, out a1_1218), a1_1218, s2_1205, s3_1206, fflags_1200, frm_1201, out a1_1231)
	word32 a0_1244
	word32 a1_1245
	word32 fflags_1259
	word32 frm_1260
	word32 s0_1262
	word32 s2_1264
	word32 s4_1266
	word32 s6_1268
	word32 s7_1269
	word32 s1_4331
	word32 s5_4334
	word32 s8_4335
	word32 s9_4336
	word32 s3_4333
	word32 a3_4332
	word32 ra_1261 = __muldf3(ra_1202, s1_1204, s0_1203, s6_1209, a1_1231, fflags_1200, frm_1201, out s0_1262, out s1_4331, out a0_1244, out a1_1245, out a3_4332, out s2_1264, out s3_4333, out s4_1266, out s5_4334, out s6_1268, out s7_1269, out s8_4335, out s9_4336, out fflags_1259, out frm_1260)
	word32 a1_1279
	word32 a1_1293
	word32 a1_1307
	word32 fflags_1333
	word32 frm_1334
	word32 s2_1338
	word32 s6_1342
	word32 a0_1352
	word32 a1_1353
	word32 fflags_1367
	word32 frm_1368
	word32 s0_1370
	word32 s1_1371
	word32 s8_1378
	word32 s1_4338
	word32 a3_4341
	word32 a1_4340
	word32 a0_4339
	word32 s0_4337
	word32 s7_4345
	word32 s4_4343
	word32 s8_4346
	word32 s4_4351
	word32 s3_4342
	word32 s5_4344
	word32 a3_4348
	word32 s9_4347
	word32 s3_4350
	word32 s2_4349
	word32 s9_4355
	word32 s6_4353
	word32 s7_4354
	word32 s5_4352
	word32 ra_1369 = __muldf3(__muldf3(ra_1261, __subdf3(ra_1261, s2_1205, s3_1206, __subdf3(ra_1261, __subdf3(ra_1261, s6_1268, s2_1264, Mem1229[s7_1269:int32], Mem1229[s7_1269 + 4<i32>:int32], fflags_1259, frm_1260, out a1_1279), a1_1279, a0_1185, a1_1186, fflags_1259, frm_1260, out a1_1293), a1_1293, fflags_1259, frm_1260, out a1_1307), a1_1307, s4_1266, s0_1262, fflags_1259, frm_1260, out s0_4337, out s1_4338, out a0_4339, out a1_4340, out a3_4341, out s2_1338, out s3_4342, out s4_4343, out s5_4344, out s6_1342, out s7_4345, out s8_4346, out s9_4347, out fflags_1333, out frm_1334), a0_772, a1_773, s6_1342, s2_1338, fflags_1333, frm_1334, out s0_1370, out s1_1371, out a0_1352, out a1_1353, out a3_4348, out s2_4349, out s3_4350, out s4_4351, out s5_4352, out s6_4353, out s7_4354, out s8_1378, out s9_4355, out fflags_1367, out frm_1368)
	word32 a1_1385
	word32 a1_1402
	__adddf3(ra_1369, a0_1244, a1_1245, __adddf3(ra_1369, s0_1370, s1_1371, a0_1352, a1_1353, fflags_1367, frm_1368, out a1_1385), a1_1385, fflags_1367, frm_1368, out a1_1402)
	word32 fflags_1431
	word32 frm_1432
	word32 s0_1434
	word32 s1_1435
	word32 s4_1438
	word32 s6_1440
	word32 s7_1441
	word32 s8_1442
	word32 a0_4356
	word32 s5_4361
	word32 s3_4360
	word32 s2_4359
	word32 a1_4357
	word32 a3_4358
	word32 s9_4362
	word32 ra_1433 = __muldf3(ra_1369, s8_1378, a1_1402, Mem1275[0x4200EDD0<p32>:int32], Mem1275[0x4200EDD4<p32>:int32], fflags_1367, frm_1368, out s0_1434, out s1_1435, out a0_4356, out a1_4357, out a3_4358, out s2_4359, out s3_4360, out s4_1438, out s5_4361, out s6_1440, out s7_1441, out s8_1442, out s9_4362, out fflags_1431, out frm_1432)
	word32 a1_1451
	word32 a1_1465
	word32 fflags_1493
	word32 frm_1494
	word32 s4_1500
	word32 s8_1504
	word32 a0_1514
	word32 a1_1515
	word32 s0_1532
	word32 s1_1533
	word32 s2_1534
	word32 s3_1535
	word32 a1_4366
	word32 s0_4363
	word32 s1_4364
	word32 a0_4365
	word32 s2_4368
	word32 s6_4371
	word32 a3_4367
	word32 s3_4369
	word32 s7_4372
	word32 s5_4370
	word32 s9_4373
	word32 a3_4374
	word32 s4_4375
	word32 s6_4376
	word32 s7_4377
	word32 s8_4378
	ra_1531 = __muldf3(__muldf3(ra_1433, __subdf3(ra_1433, s0_1434, s1_1435, __subdf3(ra_1433, s8_1442, s4_1438, s6_1440, s7_1441, fflags_1431, frm_1432, out a1_1451), a1_1451, fflags_1431, frm_1432, out a1_1465), a1_1465, Mem1275[0x4200EDD8<p32>:int32], Mem1275[0x4200EDDC<p32>:int32], fflags_1431, frm_1432, out s0_4363, out s1_4364, out a0_4365, out a1_4366, out a3_4367, out s2_4368, out s3_4369, out s4_1500, out s5_4370, out s6_4371, out s7_4372, out s8_1504, out s9_4373, out fflags_1493, out frm_1494), s8_1504, s4_1500, Mem1275[0x4200EDE0<p32>:int32], Mem1275[0x4200EDE4<p32>:int32], fflags_1493, frm_1494, out s0_1532, out s1_1533, out a0_1514, out a1_1515, out a3_4374, out s2_1534, out s3_1535, out s4_4375, out s5_1537, out s6_4376, out s7_4377, out s8_4378, out s9_1541, out fflags_1529, out frm_1530)
	word32 a1_1547
	word32 a1_1558
	word32 a0_1557 = __adddf3(ra_1531, __adddf3(ra_1531, s0_1532, s1_1533, a0_1514, a1_1515, fflags_1529, frm_1530, out a1_1547), a1_1547, dwLoc48_3306, dwLoc44_3307, fflags_1529, frm_1530, out a1_1558)
	word32 a1_1571
	word32 a0_1570 = __floatsidf(t4_470, out a1_1571)
	word32 a1_1581
	word32 a1_1592
	word32 a1_1603
	__adddf3(ra_1531, __adddf3(ra_1531, __adddf3(ra_1531, s2_1534, s3_1535, a0_1557, a1_1558, fflags_1529, frm_1530, out a1_1581), a1_1581, dwLoc70_3304, dwLoc6C_3305, fflags_1529, frm_1530, out a1_1592), a1_1592, a0_1570, a1_1571, fflags_1529, frm_1530, out a1_1603)
	word32 a1_1618
	word32 a1_1630
	word32 a1_1642
	word32 a1_4379
	__subdf3(ra_1531, a0_1557, a1_1558, __subdf3(ra_1531, __subdf3(ra_1531, __subdf3(ra_1531, 0<i32>, a1_1603, a0_1570, a1_1571, fflags_1529, frm_1530, out a1_1618), a1_1618, dwLoc70_3304, dwLoc6C_3305, fflags_1529, frm_1530, out a1_1630), a1_1630, s2_1534, s3_1535, fflags_1529, frm_1530, out a1_1642), a1_1642, fflags_1529, frm_1530, out a1_4379)
	s1_1615 = a1_1603
l2309DD84:
	branch (a3 & 0x7FFFFFFF<32>) <= 0x43F00000<32> l2309E8E0
l2309E8E0:
	branch (a1 & 0x7FFFFFFF<32>) <= 0x3FEFFFFE<32> l2309DD94
l2309E8EC:
	branch (a1 & 0x7FFFFFFF<32>) > 0x3FF00000<32> l2309DE64
l2309E8F0:
	word32 a1_1677
	word32 fflags_1707
	word32 frm_1708
	word32 s0_1710
	word32 s1_1711
	word32 a0_1728
	word32 a1_1729
	word32 fflags_1743
	word32 frm_1744
	word32 s0_1746
	word32 s1_1747
	word32 a0_1764
	word32 a1_1765
	word32 fflags_1779
	word32 frm_1780
	word32 s0_1782
	word32 s1_1783
	word32 a0_4094
	word32 s7_4111
	word32 a1_4095
	word32 s2_4097
	word32 a3_4096
	word32 s4_4099
	word32 s3_4098
	word32 s2_4106
	word32 s3_4107
	word32 s4_4108
	word32 s5_4109
	word32 s6_4101
	word32 s8_4103
	word32 s9_4104
	word32 s7_4102
	word32 s5_4100
	word32 s8_4112
	word32 a3_4105
	word32 s6_4110
	word32 s2_4115
	word32 s9_4113
	word32 a3_4114
	word32 s3_4116
	word32 s4_4117
	word32 s6_4119
	word32 s7_4120
	word32 s8_4121
	word32 s5_4118
	word32 s9_4122
	word32 ra_1781 = __muldf3(__muldf3(__muldf3(ra, __subdf3(ra, a0, a1_100, Mem33[0x4200ED20<p32>:int32], Mem33[0x4200ED24<p32>:int32], fflags, frm, out a1_1677), a1_1677, Mem1675[0x4200ED60<p32>:int32], Mem1675[0x4200ED64<p32>:int32], fflags, frm, out s0_1710, out s1_1711, out a0_4094, out a1_4095, out a3_4096, out s2_4097, out s3_4098, out s4_4099, out s5_4100, out s6_4101, out s7_4102, out s8_4103, out s9_4104, out fflags_1707, out frm_1708), s0_1710, s1_1711, Mem1675[0x4200ED68<p32>:int32], Mem1675[0x4200ED6C<p32>:int32], fflags_1707, frm_1708, out s0_1746, out s1_1747, out a0_1728, out a1_1729, out a3_4105, out s2_4106, out s3_4107, out s4_4108, out s5_4109, out s6_4110, out s7_4111, out s8_4112, out s9_4113, out fflags_1743, out frm_1744), s0_1746, s1_1747, Mem1675[0x4200ED70<p32>:int32], Mem1675[0x4200ED74<p32>:int32], fflags_1743, frm_1744, out s0_1782, out s1_1783, out a0_1764, out a1_1765, out a3_4114, out s2_4115, out s3_4116, out s4_4117, out s5_4118, out s6_4119, out s7_4120, out s8_4121, out s9_4122, out fflags_1779, out frm_1780)
	word32 a1_1799
	word32 a0_1810
	word32 a1_1811
	word32 fflags_1825
	word32 frm_1826
	word32 s0_1828
	word32 s1_1829
	word32 a3_4123
	word32 s2_4124
	word32 s3_4125
	word32 s5_4127
	word32 s4_4126
	word32 s6_4128
	word32 s8_4130
	word32 s9_4131
	word32 s7_4129
	word32 ra_1827 = __muldf3(ra_1781, __subdf3(ra_1781, Mem1761[0x4200ED78<p32>:int32], Mem1761[0x4200ED7C<p32>:int32], a0_1764, a1_1765, fflags_1779, frm_1780, out a1_1799), a1_1799, s0_1782, s1_1783, fflags_1779, frm_1780, out s0_1828, out s1_1829, out a0_1810, out a1_1811, out a3_4123, out s2_4124, out s3_4125, out s4_4126, out s5_4127, out s6_4128, out s7_4129, out s8_4130, out s9_4131, out fflags_1825, out frm_1826)
	word32 a1_4132
	__subdf3(ra_1827, Mem1761[0x4200ED80<p32>:int32], Mem1761[0x4200ED84<p32>:int32], a0_1810, a1_1811, fflags_1825, frm_1826, out a1_4132)
	word32 a0_1860
	word32 a1_1861
	word32 fflags_1875
	word32 frm_1876
	word32 s6_1884
	word32 s7_1885
	word32 a0_1892
	word32 a1_1893
	word32 fflags_1907
	word32 frm_1908
	word32 a0_1924
	word32 a1_1925
	word32 s2_1944
	word32 s3_1945
	word32 s0_4133
	word32 s3_4137
	word32 s4_4138
	word32 s1_4134
	word32 s2_4136
	word32 a3_4135
	word32 s5_4148
	word32 s5_4139
	word32 s8_4140
	word32 s9_4141
	word32 s4_4147
	word32 s3_4146
	word32 s2_4145
	word32 a3_4144
	word32 s1_4143
	word32 s0_4142
	word32 s7_4150
	word32 s6_4149
	word32 s8_4151
	word32 s4_4156
	word32 s8_4159
	word32 s9_4152
	word32 s0_4153
	word32 a3_4155
	word32 s1_4154
	word32 s6_4157
	word32 s7_4158
	ra_1531 = __muldf3(__muldf3(__muldf3(ra_1827, s0_1828, s1_1829, s0_1828, s1_1829, fflags_1825, frm_1826, out s0_4133, out s1_4134, out a0_1860, out a1_1861, out a3_4135, out s2_4136, out s3_4137, out s4_4138, out s5_4139, out s6_1884, out s7_1885, out s8_4140, out s9_4141, out fflags_1875, out frm_1876), s6_1884, s7_1885, a0_1860, a1_1861, fflags_1875, frm_1876, out s0_4142, out s1_4143, out a0_1892, out a1_1893, out a3_4144, out s2_4145, out s3_4146, out s4_4147, out s5_4148, out s6_4149, out s7_4150, out s8_4151, out s9_4152, out fflags_1907, out frm_1908), a0_1892, a1_1893, Mem1761[0x4200ED88<p32>:int32], Mem1761[0x4200ED8C<p32>:int32], fflags_1907, frm_1908, out s0_4153, out s1_4154, out a0_1924, out a1_1925, out a3_4155, out s2_1944, out s3_1945, out s4_4156, out s5_1537, out s6_4157, out s7_4158, out s8_4159, out s9_1541, out fflags_1529, out frm_1530)
	word32 a1_1959
	word32 a0_1958 = __subdf3(ra_1531, a0_1728, a1_1729, a0_1924, a1_1925, fflags_1529, frm_1530, out a1_1959)
	word32 a1_1975
	__adddf3(ra_1531, s2_1944, s3_1945, a0_1958, a1_1959, fflags_1529, frm_1530, out a1_1975)
	word32 a1_1990
	word32 a1_4160
	__subdf3(ra_1531, a0_1958, a1_1959, __subdf3(ra_1531, 0<i32>, a1_1975, s2_1944, s3_1945, fflags_1529, frm_1530, out a1_1990), a1_1990, fflags_1529, frm_1530, out a1_4160)
	s1_1615 = a1_1975
l2309E414:
	word32 dwLoc78_3341
	word32 dwLoc74_3342
	branch (s10_290 + -1<i32> | t3_348) != 0<32> l2309E8AC
l2309E8AC:
	dwLoc78_3341 = Mem2024[s5_1537:int32]
	dwLoc74_3342 = Mem2024[s5_1537 + 4<i32>:int32]
l2309E420:
	dwLoc78_3341 = Mem2024[0x4200ED58<p32>:int32]
	dwLoc74_3342 = Mem2024[0x4200ED5C<p32>:int32]
l2309E438:
	word32 s11_2204
	word32 a5_2206
	word32 s0_2237
	word32 a1_2056
	word32 fflags_2086
	word32 frm_2087
	word32 s2_2091
	word32 s3_2092
	word32 s9_2098
	word32 a0_2105
	word32 a1_2106
	word32 fflags_2120
	word32 frm_2121
	word32 s0_2123
	word32 s1_2124
	word32 s6_2129
	word32 s7_2130
	word32 s8_2131
	word32 s3_4187
	word32 s1_4176
	word32 a0_4177
	word32 a1_4178
	word32 s0_4175
	word32 s7_4183
	word32 s8_4184
	word32 a3_4185
	word32 a3_4179
	word32 s4_4180
	word32 s6_4182
	word32 s5_4181
	word32 s2_4186
	word32 s4_4188
	word32 s9_4190
	word32 s5_4189
	word32 ra_2122 = __muldf3(__muldf3(ra_1531, __subdf3(ra_1531, s9_1541, a3, 0<i32>, a3, fflags_1529, frm_1530, out a1_2056), a1_2056, 0<i32>, s1_1615, fflags_1529, frm_1530, out s0_4175, out s1_4176, out a0_4177, out a1_4178, out a3_4179, out s2_2091, out s3_2092, out s4_4180, out s5_4181, out s6_4182, out s7_4183, out s8_4184, out s9_2098, out fflags_2086, out frm_2087), s2_2091, s3_2092, s9_2098, a3, fflags_2086, frm_2087, out s0_2123, out s1_2124, out a0_2105, out a1_2106, out a3_4185, out s2_4186, out s3_4187, out s4_4188, out s5_4189, out s6_2129, out s7_2130, out s8_2131, out s9_4190, out fflags_2120, out frm_2121)
	word32 a1_4191
	__adddf3(ra_2122, s6_2129, s7_2130, a0_2105, a1_2106, fflags_2120, frm_2121, out a1_4191)
	word32 a0_2152
	word32 a1_2153
	word32 fflags_2167
	word32 frm_2168
	word32 s2_2172
	word32 s3_2173
	word32 s0_4192
	word32 s4_4195
	word32 a3_4194
	word32 s1_4193
	word32 s7_4198
	word32 s5_4196
	word32 s6_4197
	word32 s8_4199
	word32 s9_4200
	word32 ra_2169 = __muldf3(ra_2122, s0_2123, s1_2124, s8_2131, a3, fflags_2120, frm_2121, out s0_4192, out s1_4193, out a0_2152, out a1_2153, out a3_4194, out s2_2172, out s3_2173, out s4_4195, out s5_4196, out s6_4197, out s7_4198, out s8_4199, out s9_4200, out fflags_2167, out frm_2168)
	word32 a1_2187
	word32 a0_2186 = __adddf3(ra_2169, s2_2172, s3_2173, a0_2152, a1_2153, fflags_2167, frm_2168, out a1_2187)
	word32 s6_2197 = a1_2187
	branch a1_2187 < 0x40900000<32> l2309E83C
l2309E83C:
	word32 a5_2201 = CONVERT(SLICE(a1_2187, word31, 0), word31, word32)
	branch a5_2201 <= 0x4090CBFF<32> l2309EAB0
l2309EAB0:
	s11_2204 = 0<i32>
	branch a5_2201 <= 0x3FE00000<32> l2309E5BC
l2309EAC0:
	a5_2206 = a5_2201 >> 0x14<u32>
l2309E850:
	branch (a1_2187 + 0x3F6F3400<32> | a0_2186) != 0<32> l2309E880
l2309E864:
	word32 a1_2214
	word32 a1_4412
	word32 a4_4413
	word32 a5_4414
	branch __gedf2(__subdf3(ra_2169, a0_2186, a1_2187, a0_2152, a1_2153, fflags_2167, frm_2168, out a1_2214), a1_2214, s2_2172, s3_2173, fflags_2167, frm_2168, out a1_4412, out a4_4413, out a5_4414) < 0<32> l2309E534
l2309E880:
	s0_2237 = 0x4200EDF0<p32>
l2309E4D8:
	branch (a1_2187 - 0x40900000<32> | a0_2186) != 0<32> l2309EAC8
l2309E4E4:
	word32 a1_2248
	word32 a1_2263
	word32 a5_4174
	word32 a4_4173
	word32 a1_4172
	branch __gedf2(__adddf3(ra_2169, s2_2172, s3_2173, Mem2242[0x4200EDE8<p32>:int32], Mem2242[0x4200EDEC<p32>:int32], fflags_2167, frm_2168, out a1_2248), a1_2248, __subdf3(ra_2169, a0_2186, a1_2187, a0_2152, a1_2153, fflags_2167, frm_2168, out a1_2263), a1_2263, fflags_2167, frm_2168, out a1_4172, out a4_4173, out a5_4174) > 0<32> l2309EAC8
l2309EAC8:
	s0_2237 = 0x4200ED28<p32>
l2309E888:
	word32 a0_2310
	word32 a1_2311
	word32 fflags_2325
	word32 frm_2326
	word32 s0_2328
	word32 s1_4391
	word32 a3_4392
	word32 s2_4393
	word32 s3_4394
	word32 s4_4395
	word32 s5_4396
	word32 s6_4397
	word32 s7_4398
	word32 s8_4399
	word32 s9_4400
	word32 s0_4401
	word32 s1_4402
	word32 a3_4403
	word32 s2_4404
	word32 s3_4405
	word32 s4_4406
	word32 s5_4407
	word32 s6_4408
	word32 s7_4409
	word32 s8_4410
	word32 s9_4411
	__muldf3(__muldf3(ra_2169, dwLoc78_3341, dwLoc74_3342, Mem2242[s0_2237:int32], Mem2242[s0_2237 + 4<i32>:int32], fflags_2167, frm_2168, out s0_2328, out s1_4391, out a0_2310, out a1_2311, out a3_4392, out s2_4393, out s3_4394, out s4_4395, out s5_4396, out s6_4397, out s7_4398, out s8_4399, out s9_4400, out fflags_2325, out frm_2326), a0_2310, a1_2311, Mem2242[s0_2328:int32], Mem2242[s0_2328 + 4<i32>:int32], fflags_2325, frm_2326, out s0_4401, out s1_4402, out a0_102, out a1_100, out a3_4403, out s2_4404, out s3_4405, out s4_4406, out s5_4407, out s6_4408, out s7_4409, out s8_4410, out s9_4411, out fflags, out frm)
l2309E534:
	a5_2206 = a1_2187 >> 0x14<u32> & 2047<i32>
l2309E53C:
	word32 a5_2376 = (0x100000<32> >> a5_2206 + -1022<i32>) + a1_2187
	word32 a4_2378 = a5_2376 >> 0x14<u32> & 2047<i32>
	word32 a1_2383 = ~(0xFFFFF<32> >> a4_2378 + -1023<i32>) & a5_2376
	word32 s4_2390 = (a5_2376 & 0xFFFFF<32> | 0x100000<32>) >> 20<i32> - (a4_2378 + -1023<i32>)
	branch a1_2187 >= 0<32> l2309E58C
l2309E588:
	s4_2390 = 0<32> - s4_2390
l2309E58C:
	word32 a1_2412
	word32 a1_2434
	__adddf3(ra_2169, s2_2172, s3_2173, __subdf3(ra_2169, a0_2152, a1_2153, 0<i32>, a1_2383, fflags_2167, frm_2168, out a1_2412), a1_2412, fflags_2167, frm_2168, out a1_2434)
	s6_2197 = a1_2434
	s11_2204 = s4_2390 << 0x14<u32>
l2309E5BC:
	word32 a1_3073
	word32 fflags_2475
	word32 frm_2476
	word32 s0_2478
	word32 s1_2479
	word32 s2_2480
	word32 s3_2481
	word32 s6_2484
	word32 s8_2486
	word32 a0_4415
	word32 a1_4416
	word32 a3_4417
	word32 s4_4418
	word32 s5_4419
	word32 s7_4420
	word32 s9_4421
	word32 ra_2477 = __muldf3(ra_2169, 0<i32>, s6_2197, Mem2242[0x4200EDF8<p32>:int32], Mem2242[0x4200EDFC<p32>:int32], fflags_2167, frm_2168, out s0_2478, out s1_2479, out a0_4415, out a1_4416, out a3_4417, out s2_2480, out s3_2481, out s4_4418, out s5_4419, out s6_2484, out s7_4420, out s8_2486, out s9_4421, out fflags_2475, out frm_2476)
	word32 a1_2496
	word32 a1_2510
	word32 fflags_2538
	word32 frm_2539
	word32 s8_2549
	word32 a0_2559
	word32 a1_2560
	word32 fflags_2574
	word32 frm_2575
	word32 s0_2577
	word32 s1_2578
	word32 s6_2583
	word32 s7_2584
	word32 s0_4422
	word32 s1_4423
	word32 a0_4424
	word32 a1_4425
	word32 a3_4426
	word32 s2_4427
	word32 s3_4428
	word32 s4_4429
	word32 s5_4430
	word32 s6_4431
	word32 s7_4432
	word32 s9_4433
	word32 a3_4434
	word32 s2_4435
	word32 s3_4436
	word32 s4_4437
	word32 s5_4438
	word32 s8_4439
	word32 s9_4440
	word32 ra_2576 = __muldf3(__muldf3(ra_2477, __subdf3(ra_2477, s2_2480, s3_2481, __subdf3(ra_2477, s8_2486, s6_2484, s0_2478, s1_2479, fflags_2475, frm_2476, out a1_2496), a1_2496, fflags_2475, frm_2476, out a1_2510), a1_2510, Mem2242[0x4200EE00<p32>:int32], Mem2242[0x4200EE04<p32>:int32], fflags_2475, frm_2476, out s0_4422, out s1_4423, out a0_4424, out a1_4425, out a3_4426, out s2_4427, out s3_4428, out s4_4429, out s5_4430, out s6_4431, out s7_4432, out s8_2549, out s9_4433, out fflags_2538, out frm_2539), s8_2549, s6_2484, Mem2242[0x4200EE08<p32>:int32], Mem2242[0x4200EE0C<p32>:int32], fflags_2538, frm_2539, out s0_2577, out s1_2578, out a0_2559, out a1_2560, out a3_4434, out s2_4435, out s3_4436, out s4_4437, out s5_4438, out s6_2583, out s7_2584, out s8_4439, out s9_4440, out fflags_2574, out frm_2575)
	word32 a1_2592
	word32 a0_2591 = __adddf3(ra_2576, s0_2577, s1_2578, a0_2559, a1_2560, fflags_2574, frm_2575, out a1_2592)
	word32 a1_2607
	word32 a0_2606 = __adddf3(ra_2576, s6_2583, s7_2584, a0_2591, a1_2592, fflags_2574, frm_2575, out a1_2607)
	word32 a1_2620
	word32 a1_4441
	__subdf3(ra_2576, a0_2591, a1_2592, __subdf3(ra_2576, a0_2606, a1_2607, s6_2583, s7_2584, fflags_2574, frm_2575, out a1_2620), a1_2620, fflags_2574, frm_2575, out a1_4441)
	word32 a0_2649
	word32 a1_2650
	word32 fflags_2664
	word32 frm_2665
	word32 a0_2683
	word32 a1_2684
	word32 fflags_2698
	word32 frm_2699
	word32 s2_2703
	word32 s3_2704
	word32 s0_4442
	word32 s1_4443
	word32 a3_4444
	word32 s2_4445
	word32 s3_4446
	word32 s4_4447
	word32 s5_4448
	word32 s6_4449
	word32 s7_4450
	word32 s8_4451
	word32 s9_4452
	word32 s0_4453
	word32 s1_4454
	word32 a3_4455
	word32 s4_4456
	word32 s5_4457
	word32 s6_4458
	word32 s7_4459
	word32 s8_4460
	word32 s9_4461
	word32 ra_2700 = __muldf3(__muldf3(ra_2576, a0_2606, a1_2607, a0_2606, a1_2607, fflags_2574, frm_2575, out s0_4442, out s1_4443, out a0_2649, out a1_2650, out a3_4444, out s2_4445, out s3_4446, out s4_4447, out s5_4448, out s6_4449, out s7_4450, out s8_4451, out s9_4452, out fflags_2664, out frm_2665), a0_2649, a1_2650, Mem2242[0x4200EE10<p32>:int32], Mem2242[0x4200EE14<p32>:int32], fflags_2664, frm_2665, out s0_4453, out s1_4454, out a0_2683, out a1_2684, out a3_4455, out s2_2703, out s3_2704, out s4_4456, out s5_4457, out s6_4458, out s7_4459, out s8_4460, out s9_4461, out fflags_2698, out frm_2699)
	word32 a1_2716
	word32 a0_2727
	word32 a1_2728
	word32 fflags_2742
	word32 frm_2743
	word32 s2_2747
	word32 s3_2748
	word32 s0_4462
	word32 s1_4463
	word32 a3_4464
	word32 s4_4465
	word32 s5_4466
	word32 s6_4467
	word32 s7_4468
	word32 s8_4469
	word32 s9_4470
	word32 ra_2744 = __muldf3(ra_2700, __subdf3(ra_2700, a0_2683, a1_2684, Mem2242[0x4200EE18<p32>:int32], Mem2242[0x4200EE1C<p32>:int32], fflags_2698, frm_2699, out a1_2716), a1_2716, s2_2703, s3_2704, fflags_2698, frm_2699, out s0_4462, out s1_4463, out a0_2727, out a1_2728, out a3_4464, out s2_2747, out s3_2748, out s4_4465, out s5_4466, out s6_4467, out s7_4468, out s8_4469, out s9_4470, out fflags_2742, out frm_2743)
	word32 a1_2760
	word32 a0_2770
	word32 a1_2771
	word32 fflags_2785
	word32 frm_2786
	word32 s2_2790
	word32 s3_2791
	word32 s0_4471
	word32 s1_4472
	word32 a3_4473
	word32 s4_4474
	word32 s5_4475
	word32 s6_4476
	word32 s7_4477
	word32 s8_4478
	word32 s9_4479
	word32 ra_2787 = __muldf3(ra_2744, __adddf3(ra_2744, a0_2727, a1_2728, Mem2242[0x4200EE20<p32>:int32], Mem2242[0x4200EE24<p32>:int32], fflags_2742, frm_2743, out a1_2760), a1_2760, s2_2747, s3_2748, fflags_2742, frm_2743, out s0_4471, out s1_4472, out a0_2770, out a1_2771, out a3_4473, out s2_2790, out s3_2791, out s4_4474, out s5_4475, out s6_4476, out s7_4477, out s8_4478, out s9_4479, out fflags_2785, out frm_2786)
	word32 a1_2803
	word32 a0_2814
	word32 a1_2815
	word32 fflags_2829
	word32 frm_2830
	word32 s2_2834
	word32 s3_2835
	word32 s0_4480
	word32 s1_4481
	word32 a3_4482
	word32 s4_4483
	word32 s5_4484
	word32 s6_4485
	word32 s7_4486
	word32 s8_4487
	word32 s9_4488
	word32 ra_2831 = __muldf3(ra_2787, __subdf3(ra_2787, a0_2770, a1_2771, Mem2242[0x4200EE28<p32>:int32], Mem2242[0x4200EE2C<p32>:int32], fflags_2785, frm_2786, out a1_2803), a1_2803, s2_2790, s3_2791, fflags_2785, frm_2786, out s0_4480, out s1_4481, out a0_2814, out a1_2815, out a3_4482, out s2_2834, out s3_2835, out s4_4483, out s5_4484, out s6_4485, out s7_4486, out s8_4487, out s9_4488, out fflags_2829, out frm_2830)
	word32 a1_2847
	word32 a0_2857
	word32 a1_2858
	word32 fflags_2872
	word32 frm_2873
	word32 s0_2875
	word32 s1_2876
	word32 a3_4489
	word32 s2_4490
	word32 s3_4491
	word32 s4_4492
	word32 s5_4493
	word32 s6_4494
	word32 s7_4495
	word32 s8_4496
	word32 s9_4497
	word32 ra_2874 = __muldf3(ra_2831, __adddf3(ra_2831, a0_2814, a1_2815, Mem2242[0x4200EE30<p32>:int32], Mem2242[0x4200EE34<p32>:int32], fflags_2829, frm_2830, out a1_2847), a1_2847, s2_2834, s3_2835, fflags_2829, frm_2830, out s0_2875, out s1_2876, out a0_2857, out a1_2858, out a3_4489, out s2_4490, out s3_4491, out s4_4492, out s5_4493, out s6_4494, out s7_4495, out s8_4496, out s9_4497, out fflags_2872, out frm_2873)
	word32 a1_2890
	word32 a0_2905
	word32 a1_2906
	word32 fflags_2920
	word32 frm_2921
	word32 s8_2931
	word32 s9_2932
	word32 s0_4498
	word32 s1_4499
	word32 a3_4500
	word32 s2_4501
	word32 s3_4502
	word32 s4_4503
	word32 s5_4504
	word32 s6_4505
	word32 s7_4506
	word32 ra_2922 = __muldf3(ra_2874, s0_2875, s1_2876, __subdf3(ra_2874, s0_2875, s1_2876, a0_2857, a1_2858, fflags_2872, frm_2873, out a1_2890), a1_2890, fflags_2872, frm_2873, out s0_4498, out s1_4499, out a0_2905, out a1_2906, out a3_4500, out s2_4501, out s3_4502, out s4_4503, out s5_4504, out s6_4505, out s7_4506, out s8_2931, out s9_2932, out fflags_2920, out frm_2921)
	word32 a1_2942
	word32 fflags_2970
	word32 frm_2971
	word32 s0_2973
	word32 s1_2974
	word32 s6_2979
	word32 s7_2980
	word32 a0_2989
	word32 a1_2990
	word32 s0_3007
	word32 s1_3008
	word32 s2_3009
	word32 s3_3010
	word32 s4_3011
	word32 s5_3012
	word32 s6_3013
	word32 s7_3014
	word32 a0_4507
	word32 a1_4508
	word32 a3_4509
	word32 s2_4510
	word32 s3_4511
	word32 s5_4512
	word32 s9_4513
	word32 a3_4514
	word32 s8_4515
	word32 s9_4516
	word32 frm_3005
	word32 fflags_3004
	word32 ra_3006 = __muldf3(__divdf3(ra_2922, a0_2905, a1_2906, __subdf3(ra_2922, s8_2931, s9_2932, Mem2242[0x4200EE38<p32>:int32], Mem2242[0x4200EE3C<p32>:int32], fflags_2920, frm_2921, out a1_2942), a1_2942, fflags_2920, frm_2921, out s0_2973, out s1_2974, out a0_4507, out a1_4508, out a3_4509, out s2_4510, out s3_4511, out s5_4512, out s6_2979, out s7_2980, out s9_4513, out fflags_2970, out frm_2971), s0_2973, s1_2974, s6_2979, s7_2980, fflags_2970, frm_2971, out s0_3007, out s1_3008, out a0_2989, out a1_2990, out a3_4514, out s2_3009, out s3_3010, out s4_3011, out s5_3012, out s6_3013, out s7_3014, out s8_4515, out s9_4516, out fflags_3004, out frm_3005)
	word32 a1_3020
	word32 a1_3033
	word32 a1_3045
	word32 a1_3059
	word32 a0_3058 = __subdf3(ra_3006, Mem2242[s5_3012:int32], Mem2242[s5_3012 + 4<i32>:int32], __subdf3(ra_3006, __subdf3(ra_3006, s2_3009, s3_3010, __adddf3(ra_3006, a0_2989, a1_2990, s6_3013, s7_3014, fflags_3004, frm_3005, out a1_3020), a1_3020, fflags_3004, frm_3005, out a1_3033), a1_3033, s0_3007, s1_3008, fflags_3004, frm_3005, out a1_3045), a1_3045, fflags_3004, frm_3005, out a1_3059)
	word32 a5_3069 = s11_2204 + a1_3059
	branch a5_3069 >> 0x14<u32> <= 0<32> l2309EB44
l2309EB44:
	a0_3058 = scalbn(ra_3006, a0_3058, a1_3059, s4_3011, fflags_3004, frm_3005, out a1_3073, out fflags_3004, out frm_3005)
l2309E828:
	a1_3073 = a5_3069
l2309E82C:
	word32 s0_4380
	word32 s1_4381
	word32 a3_4382
	word32 s2_4383
	word32 s3_4384
	word32 s4_4385
	word32 s5_4386
	word32 s6_4387
	word32 s7_4388
	word32 s8_4389
	word32 s9_4390
	__muldf3(ra_3006, a0_3058, a1_3073, dwLoc78_3341, dwLoc74_3342, fflags_3004, frm_3005, out s0_4380, out s1_4381, out a0_102, out a1_100, out a3_4382, out s2_4383, out s3_4384, out s4_4385, out s5_4386, out s6_4387, out s7_4388, out s8_4389, out s9_4390, out fflags, out frm)
l2309DD8C:
	branch (a1 & 0x7FFFFFFF<32>) >= 0x3FF00000<32> l2309DE64
l2309DE64:
	branch a3 > 0<32> l2309DD98
l2309DE68:
l2309DD94:
	branch a3 >= 0<32> l2309DE2C
l2309DE2C:
	a0_102 = 0<i32>
	a1_100 = 0<i32>
l2309DD98:
	word32 a2_3150 = Mem33[0x4200ED28<p32>:int32]
	word32 a3_3151 = Mem33[0x4200ED2C<p32>:int32]
	word32 s3_4071
	word32 s0_4067
	word32 s1_4068
	word32 a3_4069
	word32 s2_4070
	word32 s4_4072
	word32 s5_4073
	word32 s7_4075
	word32 s6_4074
	word32 s8_4076
	word32 s9_4077
	__muldf3(ra, a2_3150, a3_3151, a2_3150, a3_3151, fflags, frm, out s0_4067, out s1_4068, out a0_102, out a1_100, out a3_4069, out s2_4070, out s3_4071, out s4_4072, out s5_4073, out s6_4074, out s7_4075, out s8_4076, out s9_4077, out fflags, out frm)
l2309DC7C:
l2309DCBC_thunk___ieee754_sqrt:
	word32 fflags_3213
	word32 frm_3214
	word32 s2_3215
	word32 s3_3216
	word32 a1_3231
	word32 a0_3230 = __ieee754_sqrt(ra, a0, a1, fflags, frm, out a1_3231, out s2_3215, out s3_3216, out fflags_3213, out frm_3214)
	a1Out = a1_3231
	s2Out = s2_3215
	s3Out = s3_3216
	fflagsOut = fflags_3213
	frmOut = frm_3214
	return a0_3230
l2309DBD8:
	a1_100 = 0x3FF00000<32>
	a0_102 = 0<i32>
	branch ((a1 & 0x7FFFFFFF<32>) + 0xC0100000<32> | a0) != 0<32> l2309DCD4
l2309DCD4:
l2309DD14_thunk_nan:
	word32 a1_3260
	word32 a0_3259 = nan(out a1_3260)
	a1Out = a1_3260
	s2Out = s2
	s3Out = s3
	fflagsOut = fflags
	frmOut = frm
	return a0_3259
l2309DBF0:
	a1Out = a1_100
	s2Out = s2
	s3Out = s3
	fflagsOut = fflags
	frmOut = frm
	return a0_102
__ieee754_pow_exit:


word32 __ieee754_sqrt(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __ieee754_pow
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 fflags frm s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: ra s0 s1 sp
__ieee754_sqrt_entry:
l2309EB50:
	word32 s0_115 = a0
	branch (a1 & 0x7FF00000<32>) == 0x7FF00000<32> l2309ED80
l2309ED80:
	word32 a0_20
	word32 a1_21
	word32 fflags_35
	word32 frm_36
	word32 s0_38
	word32 s1_39
	word32 s2_40
	word32 s3_41
	word32 a1_51
	word32 s6_728
	word32 s7_729
	word32 s8_730
	word32 s9_731
	word32 a3_725
	word32 s4_726
	word32 s5_727
	word32 a0_60 = __adddf3(__muldf3(ra, a0, a1, a0, a1, fflags, frm, out s0_38, out s1_39, out a0_20, out a1_21, out a3_725, out s2_40, out s3_41, out s4_726, out s5_727, out s6_728, out s7_729, out s8_730, out s9_731, out fflags_35, out frm_36), a0_20, a1_21, s0_38, s1_39, fflags_35, frm_36, out a1_51)
	a1Out = a1_51
	s2Out = s2_40
	s3Out = s3_41
	fflagsOut = fflags_35
	frmOut = frm_36
	return a0_60
l2309EB74:
	word32 a4_121
	word32 a4_116
	word32 t3_127
	word32 a1_118
	word32 a2_126
	word32 a7_125
	word32 a6_124
	word32 a5_119 = a1
	word32 a3_117 = a0
	branch a1 <= 0<32> l2309ECD0
l2309ECD0:
	a4_116 = a1
	branch (CONVERT(SLICE(a1, word31, 0), word31, word32) | a0) == 0<32> l2309ECB4
l2309ECE4:
	branch a1 != 0<32> l2309EDBC
l2309EDBC:
	word32 a1_76
	word32 a0_75 = __subdf3(ra, a0, a1, a0, a1, fflags, frm, out a1_76)
	word32 a0_87
	word32 a1_88
	word32 s6_736
	word32 s7_737
	word32 s9_738
	word32 s0_732
	word32 s1_733
	word32 a3_734
	word32 s5_735
	__divdf3(ra, a0_75, a1_76, a0_75, a1_76, fflags, frm, out s0_732, out s1_733, out a0_87, out a1_88, out a3_734, out s2, out s3, out s5_735, out s6_736, out s7_737, out s9_738, out fflags, out frm)
	s0_115 = a0_87
	a4_116 = a1_88
l2309ECE8:
	a1_118 = a3_117 >>u 0xB<u32>
	a5_119 = a5_119 + -21<i32>
	a4_121 = a1_118
	a3_117 = a3_117 << 0x15<u32>
	branch a1_118 == 0<32> l2309ECE8
l2309ECFC:
	branch a1_118 >>u 0x14<u32> != 0<32> l2309EDF4
l2309EDF4:
	a6_124 = a3_117
	a7_125 = 32<i32>
	a2_126 = -1<i32>
l2309EB80:
	t3_127 = a1 >> 0x14<u32>
	branch a1 >> 0x14<u32> == 0<32> l2309EDE0
l2309EDE0:
	a4_121 = a1
	a5_119 = 0<i32>
l2309ED04:
	a2_126 = 0<i32>
l2309ED10:
	a4_121 = a4_121 << 1<u32>
	word32 a0_135 = a2_126 + 1<i32>
	branch a4_121 << 0xB<u32> >= 0<32> l2309ED0C
l2309ED0C:
	a2_126 = a0_135
l2309ED20:
	a6_124 = a3_117
	a7_125 = 32<i32> - a0_135
	a1_118 = a4_121
	a3_117 = a3_117 << a0_135
l2309ED34:
	t3_127 = a5_119 - a2_126
	a5_119 = a6_124 >>u a7_125 | a1_118
l2309EB88:
	word32 t3_160 = t3_127 + -1023<i32>
	word32 a5_166 = ((a5_119 & 0xFFFFF<32> | 0x100000<32>) << 1<u32>) + (a3_117 >>u 0x1F<u32>)
	word32 a4_167 = a3_117 << 1<u32>
	branch (t3_160 & 1<i32>) == 0<32> l2309EBC4
l2309EBB4:
	a5_166 = (a5_166 << 1<u32>) + (a4_167 >>u 0x1F<u32>)
	a4_167 = a3_117 << 2<u32>
l2309EBC4:
	word32 a1_174 = 22<i32>
	word32 t4_175 = 0<i32>
	word32 a3_176 = 0<i32>
	word32 a2_177 = 0x200000<32>
l2309EBD8:
	word32 a0_180 = a3_176 + a2_177
	word32 a6_182 = a4_167 >>u 0x1F<u32>
	a1_174 = a1_174 + -1<i32>
	branch a5_166 < a0_180 l2309EBF4
l2309EBE8:
	a5_166 = a5_166 - a0_180
	a3_176 = a0_180 + a2_177
	t4_175 = t4_175 + a2_177
l2309EBF4:
	a5_166 = a6_182 + (a5_166 << 1<u32>)
	a4_167 = a4_167 << 1<u32>
	a2_177 = a2_177 >>u 1<u32>
	branch a1_174 != 0<32> l2309EBD8
l2309EC08:
	word32 t1_199 = 0<i32>
	word32 a6_200 = 32<i32>
	word32 a2_201 = 0x80000000<32>
l2309EC38:
	word32 a7_209
	word32 a5_210
	word32 a0_204 = a2_201 + a1_174
	branch a3_176 >= a5_166 l2309EC18
l2309EC18:
	branch a5_166 == a3_176 l2309ED54
l2309ED54:
	branch a4_167 <u a0_204 l2309EC1C
l2309ED58:
	a1_174 = a0_204 + a2_201
	branch a0_204 < 0<32> l2309ED44
l2309ED60:
	a7_209 = a5_166
	a5_210 = 0<i32>
l2309EC1C:
	a6_200 = a6_200 + -1<i32>
	a5_166 = (a5_166 << 1<u32>) + (a4_167 >>u 0x1F<u32>)
	a4_167 = a4_167 << 1<u32>
	a2_201 = a2_201 >>u 1<u32>
	branch a6_200 == 0<32> l2309EC80
l2309EC40:
	a1_174 = a0_204 + a2_201
	a7_209 = a3_176
	branch a0_204 < 0<32> l2309ED44
l2309ED44:
	a7_209 = a3_176 + (~a1_174 >>u 0x1F<u32>)
l2309EC4C:
	a5_210 = a5_166 - a3_176 - CONVERT(a4_167 <u a0_204, bool, word32)
l2309EC58:
	word32 a4_241 = a4_167 - a0_204
	a6_200 = a6_200 + -1<i32>
	t1_199 = t1_199 + a2_201
	a3_176 = a7_209
	a5_166 = (a5_210 << 1<u32>) + (a4_241 >>u 0x1F<u32>)
	a4_167 = a4_241 << 1<u32>
	a2_201 = a2_201 >>u 1<u32>
	branch a6_200 != 0<32> l2309EC38
l2309EC80:
	branch (a5_166 | a4_167) != 0<32> l2309ED6C
l2309ED6C:
	branch t1_199 == -1<i32> l2309EDEC
l2309EDEC:
	t4_175 = t4_175 + 1<i32>
l2309ED74:
	a6_200 = t1_199 + 1<i32> >>u 1<u32>
l2309EC88:
	a6_200 = t1_199 >>u 1<u32>
l2309EC8C:
	word32 a4_281 = t4_175 >> 1<u32>
	branch (t4_175 & 1<i32>) == 0<32> l2309ECA8
l2309ECA0:
	a6_200 = a6_200 | 0x80000000<32>
l2309ECA8:
	s0_115 = a6_200
	a4_116 = (t3_160 >> 1<u32> << 0x14<u32>) + (a4_281 + 0x3FE00000<32>)
l2309ECB4:
	a1Out = a4_116
	s2Out = s2
	s3Out = s3
	fflagsOut = fflags
	frmOut = frm
	return s0_115
__ieee754_sqrt_exit:


word32 finite(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pow
// MayUse:  a1:[0..30]
// LiveOut: a0
// Trashed: a0 a1
// Preserved: sp
finite_entry:
l2309EE04:
	return CONVERT(SLICE(a1, word31, 0), word31, word32) + 0x80100000<32> >>u 0x1F<u32>
finite_exit:


word32 nan(ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __ieee754_pow
// MayUse: 
// LiveOut: a0 a1
// Trashed: a0 a1 a5
// Preserved: sp
nan_entry:
l2309EE1C:
	word32 a0_6 = Mem0[0x4200EE40<p32>:int32]
	a1Out = Mem0[0x4200EE44<p32>:int32]
	return a0_6
nan_exit:


word32 rint(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pow
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3
// Preserved: ra s0 s1 s2 s3 sp
rint_entry:
l2309EE30:
	word32 t1_111
	word32 a7_112
	word32 a6_122
	word32 a4_6 = a1 >> 0x14<u32> & 2047<i32>
	word32 t3_132 = a1
	branch a4_6 > -1042<i32> l2309EFE0
l2309EFE0:
	branch a4_6 <= -1074<i32> l2309F010
l2309F010:
	word32 a2_27 = -1<i32> >>u a4_6 + -1043<i32>
	a7_112 = a0
	t1_111 = a1
	branch (a2_27 & a0) == 0<32> l2309EF18
l2309F02C:
	a6_122 = a0
	branch (a2_27 >>u 1<u32> & a0) == 0<32> l2309EEC8
l2309F03C:
	a6_122 = ~(a2_27 >>u 1<u32>) & a0 | 0x40000000<32> >> a4_6 + -1043<i32>
l2309EFE8:
	a7_112 = a0
	t1_111 = a1
	branch a4_6 != -2047<i32> l2309EF18
l2309EFF8:
	word32 a1_47
	a7_112 = __adddf3(ra, a0, a1, a0, a1, fflags, frm, out a1_47)
	t1_111 = a1_47
l2309EE6C:
	branch a4_6 < 0xFFFFFC01<32> l2309EF3C
l2309EF3C:
	a7_112 = a0
	t1_111 = a1
	branch (a1 & 0x7FFFFFFF<32> | a0) == 0<32> l2309EF18
l2309EF58:
	word32 a3_71 = 0x230CB3E8<p32> + ((a1 >>u 0x1F<u32>) << 3<u32>)
	word32 a4_65 = CONVERT(SLICE(a1, word20, 0), word20, word32) | a0
	word32 s2_73 = Mem16[a3_71:int32]
	word32 s3_74 = Mem16[a3_71 + 4<i32>:int32]
	t1_111 = a1_100 & 0x7FFFFFFF<32> | (a1 >>u 0x1F<u32>) << 0x1F<u32>
	word32 a1_85
	word32 a1_100
	a7_112 = __subdf3(ra, __adddf3(ra, s2_73, s3_74, a0, (0<32> - a4_65 | a4_65) >>u 0xC<u32> & 0x80000<32> | a1 & 0xFFFE0000<32>, fflags, frm, out a1_85), a1_85, s2_73, s3_74, fflags, frm, out a1_100)
l2309EE70:
	word32 a1_115 = 0xFFFFF<32> >> a4_6 + -1023<i32>
	a7_112 = a0
	t1_111 = a1
	branch (a1_115 & a1 | a0) == 0<32> l2309EF18
l2309EE90:
	a6_122 = a1_115 >>u 1<u32> & a1 | a0
	branch a6_122 == 0<32> l2309EEC8
l2309EEA0:
	a6_122 = 0<32> - CONVERT(a4_6 <u -1043<i32>, bool, word32) & 0x80000000<32>
	t3_132 = ~(a1_115 >>u 1<u32>) & a1 | 0x40000<32> >> a4_6 + -1023<i32>
l2309EEC8:
	word32 t1_137 = 0x230CB3E8<p32> + ((a1 >>u 0x1F<u32>) << 3<u32>)
	word32 s0_139 = Mem16[t1_137:int32]
	word32 s1_140 = Mem16[t1_137 + 4<i32>:int32]
	word32 a1_151
	word32 a1_167
	a7_112 = __subdf3(ra, __adddf3(ra, s0_139, s1_140, a6_122, t3_132, fflags, frm, out a1_151), a1_151, s0_139, s1_140, fflags, frm, out a1_167)
	t1_111 = a1_167
l2309EF18:
	a1Out = t1_111
	return a7_112
rint_exit:


word32 scalbn(word32 ra, word32 a0, word32 a1, word32 a2, word32 fflags, word32 frm, ptr32 & a1Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __ieee754_pow
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 fflags frm
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: ra s0 sp
scalbn_entry:
l2309F054:
	word32 a4_118
	word32 a5_10 = a1 >> 0x14<u32> & 2047<i32>
	word32 s0_108 = a2
	branch a5_10 != 0<32> l2309F10C
l2309F10C:
	a4_118 = a1
	branch a5_10 != 2047<i32> l2309F0B0
l2309F118:
	word32 a1_21
	word32 a0_20 = __adddf3(ra, a0, a1, a0, a1, fflags, frm, out a1_21)
	a1Out = a1_21
	fflagsOut = fflags
	frmOut = frm
	return a0_20
l2309F070:
	branch (CONVERT(SLICE(a1, word31, 0), word31, word32) | a0) == 0<32> l2309F0FC
l2309F080:
	word32 s1_379
	word32 a3_380
	word32 s2_381
	word32 s3_382
	word32 s4_383
	word32 s5_384
	word32 s6_385
	word32 s7_386
	word32 s8_387
	word32 s9_388
	ra = __muldf3(ra, a0, a1, Mem9[0x4200EE48<p32>:int32], Mem9[0x4200EE4C<p32>:int32], fflags, frm, out s0_108, out s1_379, out a0, out a1, out a3_380, out s2_381, out s3_382, out s4_383, out s5_384, out s6_385, out s7_386, out s8_387, out s9_388, out fflags, out frm)
	a4_118 = a1
	branch s0_108 < 0xFFFF3CB0<32> l2309F1D4
l2309F1D4:
	word32 a0_74
	word32 a1_75
	word32 fflags_89
	word32 frm_90
	word32 s0_389
	word32 s1_390
	word32 a3_391
	word32 s2_392
	word32 s3_393
	word32 s4_394
	word32 s5_395
	word32 s6_396
	word32 s7_397
	word32 s8_398
	word32 s9_399
	__muldf3(ra, a0, a1, Mem9[0x4200EDF0<p32>:int32], Mem9[0x4200EDF4<p32>:int32], fflags, frm, out s0_389, out s1_390, out a0_74, out a1_75, out a3_391, out s2_392, out s3_393, out s4_394, out s5_395, out s6_396, out s7_397, out s8_398, out s9_399, out fflags_89, out frm_90)
	a1Out = a1_75
	fflagsOut = fflags_89
	frmOut = frm_90
	return a0_74
l2309F0A4:
	a5_10 = (a1 >> 0x14<u32> & 2047<i32>) + -54<i32>
l2309F0B0:
	word32 a7_176
	word32 a6_175
	word32 a5_173
	word32 a5_110 = s0_108 + a5_10
	branch a5_110 > 2046<i32> l2309F134
l2309F0BC:
	branch a5_110 > 0<32> l2309F1B0
l2309F1B0:
	a1Out = a4_118 & 0x800FFFFF<32> | a5_110 << 0x14<u32>
	fflagsOut = fflags
	frmOut = frm
	return a0
l2309F0C0:
	branch a5_110 >= -53<i32> l2309F170
l2309F170:
	word32 a0_139
	word32 a1_140
	word32 fflags_154
	word32 frm_155
	word32 s0_400
	word32 s1_401
	word32 a3_402
	word32 s2_403
	word32 s3_404
	word32 s4_405
	word32 s5_406
	word32 s6_407
	word32 s7_408
	word32 s8_409
	word32 s9_410
	__muldf3(ra, a0, a5_110 + 54<i32> << 0x14<u32> | a4_118 & 0x800FFFFF<32>, Mem9[0x4200EE60<p32>:int32], Mem9[0x4200EE64<p32>:int32], fflags, frm, out s0_400, out s1_401, out a0_139, out a1_140, out a3_402, out s2_403, out s3_404, out s4_405, out s5_406, out s6_407, out s7_408, out s8_409, out s9_410, out fflags_154, out frm_155)
	a1Out = a1_140
	fflagsOut = fflags_154
	frmOut = frm_155
	return a0_139
l2309F0C8:
	branch s0_108 > 0xC350<32> l2309F134
l2309F134:
	a5_173 = 0x4200ED28<p32>
	a6_175 = Mem9[0x4200ED28<p32>:int32]
	a7_176 = Mem9[0x4200ED2C<p32>:int32]
	branch a1 >= 0<32> l2309F0E8
l2309F148:
	word32 s0_422
	word32 s1_423
	word32 a3_424
	word32 s2_425
	word32 s3_426
	word32 s4_427
	word32 s5_428
	word32 s6_429
	word32 s7_430
	word32 s8_431
	word32 s9_432
	__muldf3(ra, Mem9[0x4200EE50<p32>:int32], Mem9[0x4200EE54<p32>:int32], Mem9[0x4200ED28<p32>:int32], Mem9[0x4200ED2C<p32>:int32], fflags, frm, out s0_422, out s1_423, out a0, out a1, out a3_424, out s2_425, out s3_426, out s4_427, out s5_428, out s6_429, out s7_430, out s8_431, out s9_432, out fflags, out frm)
l2309F0D4:
	a5_173 = 0x4200EDF0<p32>
	a6_175 = Mem9[0x4200EDF0<p32>:int32]
	a7_176 = Mem9[0x4200EDF4<p32>:int32]
	branch a1 < 0<32> l2309F1F8
l2309F1F8:
	a6_175 = Mem9[0x4200EE58<p32>:int32]
	a7_176 = Mem9[0x4200EE5C<p32>:int32]
l2309F0E8:
	word32 s0_411
	word32 s1_412
	word32 a3_413
	word32 s2_414
	word32 s3_415
	word32 s4_416
	word32 s5_417
	word32 s6_418
	word32 s7_419
	word32 s8_420
	word32 s9_421
	__muldf3(ra, a6_175, a7_176, Mem9[a5_173:int32], Mem9[a5_173 + 4<i32>:int32], fflags, frm, out s0_411, out s1_412, out a0, out a1, out a3_413, out s2_414, out s3_415, out s4_416, out s5_417, out s6_418, out s7_419, out s8_420, out s9_421, out fflags, out frm)
l2309F0FC:
	a1Out = a1
	fflagsOut = fflags
	frmOut = frm
	return a0
scalbn_exit:


word32 __lshrdi3(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      EF_Ctrl_Read_PowerOffset_Opt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
__lshrdi3_entry:
l2309F20C:
	branch a2 == 0<32> l2309F22C
l2309F210:
	word32 a5_5 = 32<i32> - a2
	branch a5_5 > 0<32> l2309F230
l2309F230:
	a0 = a0 >>u a2 | a1 << a5_5
l2309F21C:
	a0 = a1 >>u a2 + -32<i32>
l2309F228:
l2309F22C:
	return a0
__lshrdi3_exit:


word32 __ashldi3(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      seg_rx_reset
//      bt_mesh_trans_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
__ashldi3_entry:
l2309F244:
	branch a2 == 0<32> l2309F264
l2309F248:
	a5 = 32<i32> - a2
	branch a5 > 0<32> l2309F268
l2309F268:
	a4 = a0 << a2
	a1 = a1 << a2 | a0 >>u a5
l2309F254:
	a4 = 0<i32>
	a1 = a0 << a2 + -32<i32>
l2309F260:
	a0 = a4
l2309F264:
	a1Out = a1
	a4Out = a4
	a5Out = a5
	return a0
__ashldi3_exit:


word32 __clzsi2(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_payload_handle
//      txl_transmit_trigger
//      rc_get_initial_rate_config
//      ke_evt_schedule
//      rxu_mgt_ind_handler
//      apm_start_req_handler
//      heartbeat_pub_set
//      hb_sub_send_status.constprop.14
//      vTaskSwitchContext
//      bloop_run
//      __adddf3
//      __divdf3
//      __muldf3
//      __subdf3
//      __floatsidf
//      __floatunsidf
//      __extendsfdf2
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
__clzsi2_entry:
l2309F27C:
	word32 a5_10
	branch a0 >=u 0x10000<32> l2309F2B4
l2309F2B4:
	a5_10 = 16<i32>
	branch a0 <u 0x1000000<32> l2309F290
l2309F2C0:
	a5_10 = 24<i32>
l2309F284:
	a5_10 = CONVERT(a0 >u 255<i32>, bool, word32) << 3<u32>
l2309F290:
	word32 a5_18 = 0x230CB470<p32> + (a0 >>u a5_10)
	word32 a4_13 = 32<i32> - a5_10
	word32 a0_22 = a4_13 - CONVERT(Mem0[a5_18:byte], byte, word32)
	a4Out = a4_13
	a5Out = a5_18
	return a0_22
__clzsi2_exit:


word32 __popcountsi2(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sub_update
//      ack_timeout
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
__popcountsi2_entry:
l2309F2C8:
	word32 a0_10 = a0 - (a0 >>u 1<u32> & 0x55555555<32>)
	a4Out = 0x33333333<32>
	a5Out = 0x1010101<32>
	word32 a5_14 = (a0_10 & 0x33333333<32>) + (a0_10 >>u 2<u32> & 0x33333333<32>)
	return ((a5_14 >>u 4<u32>) + a5_14 & 0xF0F0F0F<32>) + 0x1010101<32> >>u 0x18<u32>
__popcountsi2_exit:


word32 __floatundisf(word32 ra, word32 a0, word32 a1, word32 fflags, word32 frm, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & fa0Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iperf_server_udp_recv_fn
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a5 fa0 fflags frm s1 s2 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fflags frm s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: ra s0 sp
__floatundisf_entry:
l2309F31C:
	branch a1 <u 0x200000<32> l2309F34C
l2309F334:
	branch a0 << 0x15<u32> == 0<32> l2309F34C
l2309F33C:
l2309F34C:
	word32 a1_19
	word32 a0_34
	word32 a1_35
	word32 fflags_49
	word32 frm_50
	word32 s0_52
	word32 s1_53
	word32 s2_54
	word32 s4_56
	word32 s5_57
	word32 s6_58
	word32 s7_59
	word32 s9_61
	word32 a3_113
	word32 s3_114
	word32 s8_115
	word32 ra_51 = __muldf3(ra, __floatunsidf(a1, out a1_19), a1_19, Mem7[0x4200EE68<p32>:int32], Mem7[0x4200EE6C<p32>:int32], fflags, frm, out s0_52, out s1_53, out a0_34, out a1_35, out a3_113, out s2_54, out s3_114, out s4_56, out s5_57, out s6_58, out s7_59, out s8_115, out s9_61, out fflags_49, out frm_50)
	word32 a1_66
	word32 a1_74
	word32 a0_73 = __adddf3(ra_51, __floatunsidf(s0_52, out a1_66), a1_66, a0_34, a1_35, fflags_49, frm_50, out a1_74)
	word32 a3_84
	word32 a5_86
	word32 fa0_89
	word32 a2_116
	word32 a4_117
	word32 a1_82 = __truncdfsf2(ra_51, a0_73, a1_74, fflags_49, frm_50, out a2_116, out a3_84, out a4_117, out a5_86, out fa0_89)
	a0Out = a0_73
	a1Out = a1_82
	a3Out = a3_84
	a5Out = a5_86
	s2Out = s2_54
	s4Out = s4_56
	s5Out = s5_57
	s6Out = s6_58
	s7Out = s7_59
	s9Out = s9_61
	fa0Out = fa0_89
	fflagsOut = fflags_49
	frmOut = frm_50
	return s1_53
__floatundisf_exit:


word32 __divdi3(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hb_sub_send_status.constprop.14
//      uptime_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5 t6
// Preserved: sp
__divdi3_entry:
l2309F398:
	word32 a7_10 = 0<i32>
	branch a1 >= 0<32> l2309F3B4
l2309F3A0:
	a0 = 0<32> - a0
	a1 = 0<32> - a1 - CONVERT(a0 != 0<32>, bool, word32)
	a7_10 = -1<i32>
l2309F3B4:
	branch a3 >= 0<32> l2309F3CC
l2309F3B8:
	a2 = 0<32> - a2
	a7_10 = ~a7_10
	a3 = 0<32> - a3 - CONVERT(a2 != 0<32>, bool, word32)
l2309F3CC:
	word32 t3_141
	word32 a5_106
	word32 a6_151 = a2
	word32 a4_155 = a3
	word32 t1_178 = a0
	word32 t3_292 = a1
	branch a3 != 0<32> l2309F680
l2309F680:
	branch a1 <u a3 l2309F80C
l2309F80C:
	t3_141 = 0<i32>
	a5_106 = 0<i32>
l2309F684:
	word32 a4_35
	branch a3 >=u 0x10000<32> l2309F6D0
l2309F6D0:
	a4_35 = 16<i32>
	branch a3 <u 0x1000000<32> l2309F698
l2309F6DC:
	a4_35 = 24<i32>
l2309F68C:
	a4_35 = CONVERT(a3 >u 255<i32>, bool, word32) << 3<u32>
l2309F698:
	word32 a6_52 = CONVERT(Mem0[0x230CB470<p32> + (a3 >>u a4_35):byte], byte, word32) + a4_35
	t3_141 = 32<i32> - a6_52
	branch t3_141 != 0<32> l2309F6E4
l2309F6E4:
	word32 a3_57 = a2 >>u a6_52 | a3 << t3_141
	word32 a5_60 = a1 >>u a6_52
	word32 a1_64 = a0 >>u a6_52 | a1 << t3_141
	word32 t5_67 = CONVERT(SLICE(a3_57, word16, 0), word16, word32)
	word32 a5_70 = a5_60 >>u (a3_57 >>u 0x10<u32>)
	word32 a2_69 = a2 << t3_141
	word32 a4_72 = (a5_60 & a3_57 >>u 0x10<u32>) << 0x10<u32> | a1_64 >>u 0x10<u32>
	word32 t1_73 = t5_67 + a5_70
	word32 t4_74 = a5_70
	branch a4_72 >=u t1_73 l2309F748
l2309F730:
	a4_72 = a4_72 + a3_57
	t4_74 = a5_70 + -1<i32>
	branch a4_72 <u a3_57 l2309F748
l2309F73C:
	branch a4_72 >=u t1_73 l2309F748
l2309F740:
	t4_74 = a5_70 + -2<i32>
	a4_72 = a4_72 + a3_57
l2309F748:
	word32 a4_81 = a4_72 - t1_73
	word32 a4_87 = a4_81 >>u (a3_57 >>u 0x10<u32>)
	word32 a6_101 = (a4_81 & a3_57 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a1_64, word16, 0), word16, word32)
	word32 t5_91 = t5_67 + a4_87
	word32 a5_105 = a4_87
	branch a6_101 >=u t5_91 l2309F788
l2309F770:
	a6_101 = a6_101 + a3_57
	a5_105 = a4_87 + -1<i32>
	branch a6_101 <u a3_57 l2309F788
l2309F77C:
	branch a6_101 >=u t5_91 l2309F788
l2309F780:
	a5_105 = a4_87 + -2<i32>
	a6_101 = a6_101 + a3_57
l2309F788:
	a5_106 = t4_74 << 0x10<u32> | a5_105
	word32 a3_115 = (a5_106 >>u 0x10<u32>) + (a2_69 & 0xFFFF<32>)
	word32 t4_114 = (a5_106 & 0xFFFF<32>) + (a2_69 & 0xFFFF<32>)
	word32 a6_103 = a6_101 - t5_91
	word32 a4_119 = (t4_114 >>u 0x10<u32>) + (((a5_106 & 0xFFFF<32>) + (a2_69 >>u 0x10<u32>)) + a3_115)
	word32 a1_120 = (a5_106 >>u 0x10<u32>) + (a2_69 >>u 0x10<u32>)
	branch a4_119 >=u a3_115 l2309F7D0
l2309F7CC:
	a1_120 = a1_120 + 0x10000<32>
l2309F7D0:
	word32 a1_125 = (a4_119 >>u 0x10<u32>) + a1_120
	branch a6_103 <u a1_125 l2309F804
l2309F7DC:
	branch a6_103 != a1_125 l2309F4B8
l2309F7E0:
	t3_141 = 0<i32>
	branch a0 << t3_141 >=u ((a4_119 & 0xFFFF<32>) << 0x10<u32>) + (t4_114 & 0xFFFF<32>) l2309F5A0
l2309F804:
	a5_106 = a5_106 + -1<i32>
l2309F6BC:
	a5_106 = 1<i32>
	branch a3 <u a1 l2309F5A0
l2309F6C4:
	a5_106 = CONVERT(a0 <u a2, bool, word32) ^ 1<i32>
l2309F3E0:
	branch a1 >=u a2 l2309F4D4
l2309F4D4:
	branch a2 != 0<32> l2309F4E0
l2309F4D8:
	a6_151 = 1<i32> >>u a3
l2309F4E0:
	branch a6_151 >=u 0x10000<32> l2309F5C0
l2309F5C0:
	a4_155 = 16<i32>
	branch a6_151 <u 0x1000000<32> l2309F4F4
l2309F5CC:
	a4_155 = 24<i32>
l2309F4E8:
	branch a6_151 <=u 255<i32> l2309F4F4
l2309F4F0:
	a4_155 = 8<i32>
l2309F4F4:
	word32 a1_220
	word32 a5_170 = CONVERT(Mem0[0x230CB470<p32> + (a6_151 >>u a4_155):byte], byte, word32) + a4_155
	word32 a3_171 = 32<i32> - a5_170
	branch a3_171 != 0<32> l2309F5D4
l2309F5D4:
	a6_151 = a6_151 << a3_171
	word32 a4_175 = a1 >>u a5_170
	word32 a2_182 = a0 >>u a5_170 | a1 << a3_171
	word32 a1_185 = CONVERT(SLICE(a6_151, word16, 0), word16, word32)
	word32 a4_187 = a4_175 >>u (a6_151 >>u 0x10<u32>)
	t1_178 = a0 << a3_171
	word32 a5_189 = (a4_175 & a6_151 >>u 0x10<u32>) << 0x10<u32> | a2_182 >>u 0x10<u32>
	word32 a3_190 = a1_185 + a4_187
	word32 t3_191 = a4_187
	branch a5_189 >=u a3_190 l2309F630
l2309F618:
	a5_189 = a5_189 + a6_151
	t3_191 = a4_187 + -1<i32>
	branch a5_189 <u a6_151 l2309F630
l2309F624:
	branch a5_189 >=u a3_190 l2309F630
l2309F628:
	t3_191 = a4_187 + -2<i32>
	a5_189 = a5_189 + a6_151
l2309F630:
	word32 a3_198 = a5_189 - a3_190
	word32 a3_204 = a3_198 >>u (a6_151 >>u 0x10<u32>)
	word32 a4_207 = a1_185 + a3_204
	word32 a1_208 = (a3_198 & a6_151 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a2_182, word16, 0), word16, word32)
	word32 a5_209 = a3_204
	branch a1_208 >=u a4_207 l2309F670
l2309F658:
	a1_208 = a1_208 + a6_151
	a5_209 = a3_204 + -1<i32>
	branch a1_208 <u a6_151 l2309F670
l2309F664:
	branch a1_208 >=u a4_207 l2309F670
l2309F668:
	a5_209 = a3_204 + -2<i32>
	a1_208 = a1_208 + a6_151
l2309F670:
	a1_220 = a1_208 - a4_207
	t3_141 = t3_191 << 0x10<u32> | a5_209
l2309F510:
	a1_220 = a1 - a6_151
	t3_141 = 1<i32>
l2309F518:
	word32 a0_227 = a6_151 >>u 0x10<u32>
	word32 a2_228 = a6_151 << 0x10<u32>
	word32 a4_237 = a1_220 >>u a0_227
	word32 a1_239 = (a2_228 >>u 0x10<u32>) + a4_237
	word32 a3_241 = (a1_220 & a0_227) << 0x10<u32> | t1_178 >>u 0x10<u32>
	word32 a5_242 = a4_237
	branch a3_241 >=u a1_239 l2309F55C
l2309F544:
	a3_241 = a3_241 + a6_151
	a5_242 = a4_237 + -1<i32>
	branch a3_241 <u a6_151 l2309F55C
l2309F550:
	branch a3_241 >=u a1_239 l2309F55C
l2309F554:
	a5_242 = a4_237 + -2<i32>
	a3_241 = a3_241 + a6_151
l2309F55C:
	word32 a3_249 = a3_241 - a1_239
	word32 a3_255 = a3_249 >>u a0_227
	word32 t1_257 = (a3_249 & a0_227) << 0x10<u32> | CONVERT(SLICE(t1_178, word16, 0), word16, word32)
	word32 a1_259 = (a2_228 >>u 0x10<u32>) + a3_255
	word32 a0_260 = a3_255
	branch t1_257 >=u a1_259 l2309F598
l2309F584:
	word32 t1_262 = a6_151 + t1_257
	a0_260 = a3_255 + -1<i32>
	branch t1_262 <u a6_151 l2309F598
l2309F590:
	branch t1_262 >=u a1_259 l2309F598
l2309F594:
	a0_260 = a3_255 + -2<i32>
l2309F598:
	a5_106 = a5_242 << 0x10<u32> | a0_260
l2309F3EC:
	word32 a5_272
	branch a2 >=u 0x10000<32> l2309F4C0
l2309F4C0:
	a5_272 = 16<i32>
	branch a2 <u 0x1000000<32> l2309F400
l2309F4CC:
	a5_272 = 24<i32>
l2309F3F4:
	a5_272 = CONVERT(a2 >u 255<i32>, bool, word32) << 3<u32>
l2309F400:
	word32 a5_284 = CONVERT(Mem0[0x230CB470<p32> + (a2 >>u a5_272):byte], byte, word32) + a5_272
	word32 a4_286 = 32<i32> - a5_284
	branch a4_286 == 0<32> l2309F430
l2309F41C:
	a6_151 = a2 << a4_286
	t3_292 = a0 >>u a5_284 | a1 << a4_286
	t1_178 = a0 << a4_286
l2309F430:
	word32 a2_296 = a6_151 >>u 0x10<u32>
	word32 a1_300 = a6_151 << 0x10<u32>
	word32 t3_305 = t3_292 >>u a2_296
	word32 a4_307 = (t3_292 & a2_296) << 0x10<u32> | t1_178 >>u 0x10<u32>
	word32 a3_308 = (a1_300 >>u 0x10<u32>) + t3_305
	word32 a5_309 = t3_305
	branch a4_307 >=u a3_308 l2309F474
l2309F45C:
	a4_307 = a4_307 + a6_151
	a5_309 = t3_305 + -1<i32>
	branch a4_307 <u a6_151 l2309F474
l2309F468:
	branch a4_307 >=u a3_308 l2309F474
l2309F46C:
	a5_309 = t3_305 + -2<i32>
	a4_307 = a4_307 + a6_151
l2309F474:
	word32 a4_316 = a4_307 - a3_308
	word32 a4_322 = a4_316 >>u a2_296
	word32 t1_324 = (a4_316 & a2_296) << 0x10<u32> | CONVERT(SLICE(t1_178, word16, 0), word16, word32)
	word32 a1_326 = (a1_300 >>u 0x10<u32>) + a4_322
	word32 a0_327 = a4_322
	branch t1_324 >=u a1_326 l2309F4B0
l2309F49C:
	word32 t1_329 = a6_151 + t1_324
	a0_327 = a4_322 + -1<i32>
	branch t1_329 <u a6_151 l2309F4B0
l2309F4A8:
	branch t1_329 >=u a1_326 l2309F4B0
l2309F4AC:
	a0_327 = a4_322 + -2<i32>
l2309F4B0:
	a5_106 = a5_309 << 0x10<u32> | a0_327
l2309F4B8:
	t3_141 = 0<i32>
l2309F5A0:
	word32 a0_340 = a5_106
	word32 a1_345 = t3_141
	branch a7_10 == 0<32> l2309F5BC
l2309F5AC:
	a0_340 = 0<32> - a5_106
	a5_106 = CONVERT(a0_340 != 0<32>, bool, word32)
	a1_345 = 0<32> - t3_141 - a5_106
l2309F5BC:
	a1Out = a1_345
	a5Out = a5_106
	return a0_340
__divdi3_exit:


void __moddi3(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uptime_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a4 a5 a6 a7 t1
// Preserved: a2 a3 sp t3 t4 t5 t6
__moddi3_entry:
l2309F818:
	word32 a7_10 = 0<i32>
	branch a1 >= 0<32> l2309F834
l2309F820:
	a0 = 0<32> - a0
	a1 = 0<32> - a1 - CONVERT(a0 != 0<32>, bool, word32)
	a7_10 = -1<i32>
l2309F834:
	branch a3 >= 0<32> l2309F848
l2309F838:
	a2 = 0<32> - a2
	a3 = 0<32> - a3 - CONVERT(a2 != 0<32>, bool, word32)
l2309F848:
	word32 t1_187 = a2
	word32 a4_191 = a3
	word32 a5_214 = a0
	word32 a6_28 = a1
	branch a3 != 0<32> l2309FAA8
l2309FAA8:
	branch a1 <u a3 l2309F924
l2309FAAC:
	word32 a4_31
	branch a3 >=u 0x10000<32> l2309FB08
l2309FB08:
	a4_31 = 16<i32>
	branch a3 <u 0x1000000<32> l2309FAC0
l2309FB14:
	a4_31 = 24<i32>
l2309FAB4:
	a4_31 = CONVERT(a3 >u 255<i32>, bool, word32) << 3<u32>
l2309FAC0:
	word32 t5_48 = CONVERT(Mem0[0x230CB470<p32> + (a3 >>u a4_31):byte], byte, word32) + a4_31
	word32 t4_49 = 32<i32> - t5_48
	branch t4_49 != 0<32> l2309FB1C
l2309FB1C:
	word32 a3_53 = a2 >>u t5_48 | a3 << t4_49
	word32 a4_56 = a1 >>u t5_48
	word32 a5_61 = a0 >>u t5_48 | a1 << t4_49
	word32 a1_63 = CONVERT(SLICE(a3_53, word16, 0), word16, word32)
	word32 a4_67 = a4_56 >>u (a3_53 >>u 0x10<u32>)
	word32 a2_65 = a2 << t4_49
	word32 a0_66 = a0 << t4_49
	word32 t1_69 = (a4_56 & a3_53 >>u 0x10<u32>) << 0x10<u32> | a5_61 >>u 0x10<u32>
	word32 t6_70 = a1_63 + a4_67
	word32 t3_71 = a4_67
	branch t1_69 >=u t6_70 l2309FB84
l2309FB6C:
	t1_69 = t1_69 + a3_53
	t3_71 = a4_67 + -1<i32>
	branch t1_69 <u a3_53 l2309FB84
l2309FB78:
	branch t1_69 >=u t6_70 l2309FB84
l2309FB7C:
	t3_71 = a4_67 + -2<i32>
	t1_69 = t1_69 + a3_53
l2309FB84:
	word32 t1_78 = t1_69 - t6_70
	word32 t1_84 = t1_78 >>u (a3_53 >>u 0x10<u32>)
	word32 t6_86 = (t1_78 & a3_53 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a5_61, word16, 0), word16, word32)
	word32 a1_88 = a1_63 + t1_84
	word32 a5_102 = t1_84
	branch t6_86 >=u a1_88 l2309FBC4
l2309FBAC:
	t6_86 = t6_86 + a3_53
	a5_102 = t1_84 + -1<i32>
	branch t6_86 <u a3_53 l2309FBC4
l2309FBB8:
	branch t6_86 >=u a1_88 l2309FBC4
l2309FBBC:
	a5_102 = t1_84 + -2<i32>
	t6_86 = t6_86 + a3_53
l2309FBC4:
	word32 t3_103 = t3_71 << 0x10<u32> | a5_102
	word32 a5_112 = (t3_103 >>u 0x10<u32>) + (a2_65 & 0xFFFF<32>)
	word32 a4_111 = (t3_103 & 0xFFFF<32>) + (a2_65 & 0xFFFF<32>)
	word32 a1_97 = t6_86 - a1_88
	word32 t3_114 = (t3_103 >>u 0x10<u32>) + (a2_65 >>u 0x10<u32>)
	word32 a6_117 = (a4_111 >>u 0x10<u32>) + (((t3_103 & 0xFFFF<32>) + (a2_65 >>u 0x10<u32>)) + a5_112)
	branch a6_117 >=u a5_112 l2309FC0C
l2309FC08:
	t3_114 = t3_114 + 0x10000<32>
l2309FC0C:
	word32 t3_122 = (a6_117 >>u 0x10<u32>) + t3_114
	word32 a4_129 = ((a6_117 & 0xFFFF<32>) << 0x10<u32>) + (a4_111 & 0xFFFF<32>)
	branch a1_97 <u t3_122 l2309FC38
l2309FC30:
	branch a1_97 != t3_122 l2309FC4C
l2309FC34:
	branch a0_66 >=u a4_129 l2309FC4C
l2309FC38:
l2309FC4C:
l2309FAE4:
	branch a3 <u a1 l2309FAEC
l2309FAE8:
	branch a0 <u a2 l2309FAFC
l2309FAEC:
l2309FAFC:
l2309F85C:
	branch a1 >=u a2 l2309F954
l2309F954:
	branch a2 != 0<32> l2309F960
l2309F958:
	t1_187 = 1<i32> >>u a3
l2309F960:
	branch t1_187 >=u 0x10000<32> l2309FA08
l2309FA08:
	a4_191 = 16<i32>
	branch t1_187 <u 0x1000000<32> l2309F974
l2309FA14:
	a4_191 = 24<i32>
l2309F968:
	branch t1_187 <=u 255<i32> l2309F974
l2309F970:
	a4_191 = 8<i32>
l2309F974:
	word32 a1_247
	word32 a6_206 = CONVERT(Mem0[0x230CB470<p32> + (t1_187 >>u a4_191):byte], byte, word32) + a4_191
	word32 t3_207 = 32<i32> - a6_206
	branch t3_207 != 0<32> l2309FA1C
l2309FA1C:
	t1_187 = t1_187 << t3_207
	word32 a2_211 = a1 >>u a6_206
	word32 a6_219 = a0 >>u a6_206 | a1 << t3_207
	word32 a1_221 = CONVERT(SLICE(t1_187, word16, 0), word16, word32)
	a5_214 = a0 << t3_207
	word32 a4_225 = (a2_211 & t1_187 >>u 0x10<u32>) << 0x10<u32> | a6_219 >>u 0x10<u32>
	word32 a2_226 = a1_221 + (a2_211 >>u (t1_187 >>u 0x10<u32>))
	branch a4_225 >=u a2_226 l2309FA6C
l2309FA5C:
	a4_225 = a4_225 + t1_187
	branch a4_225 <u t1_187 l2309FA6C
l2309FA64:
	branch a4_225 >=u a2_226 l2309FA6C
l2309FA68:
	a4_225 = a4_225 + t1_187
l2309FA6C:
	word32 a3_231 = a4_225 - a2_226
	word32 a3_240 = a1_221 + (a3_231 >>u (t1_187 >>u 0x10<u32>))
	word32 a1_241 = (a3_231 & t1_187 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a6_219, word16, 0), word16, word32)
	branch a1_241 >=u a3_240 l2309FAA0
l2309FA90:
	a1_241 = a1_241 + t1_187
	branch a1_241 <u t1_187 l2309FAA0
l2309FA98:
	branch a1_241 >=u a3_240 l2309FAA0
l2309FA9C:
	a1_241 = a1_241 + t1_187
l2309FAA0:
	a1_247 = a1_241 - a3_240
l2309F990:
	a1_247 = a1 - t1_187
l2309F994:
	word32 a3_251 = t1_187 >>u 0x10<u32>
	word32 a0_252 = t1_187 << 0x10<u32>
	word32 a4_264 = (a1_247 & a3_251) << 0x10<u32> | a5_214 >>u 0x10<u32>
	word32 a1_265 = (a0_252 >>u 0x10<u32>) + (a1_247 >>u a3_251)
	branch a4_264 >=u a1_265 l2309F9CC
l2309F9BC:
	a4_264 = a4_264 + t1_187
	branch a4_264 <u t1_187 l2309F9CC
l2309F9C4:
	branch a4_264 >=u a1_265 l2309F9CC
l2309F9C8:
	a4_264 = a4_264 + t1_187
l2309F9CC:
	word32 a1_270 = a4_264 - a1_265
	word32 a1_278 = (a0_252 >>u 0x10<u32>) + (a1_270 >>u a3_251)
	word32 a5_280 = (a1_270 & a3_251) << 0x10<u32> | CONVERT(SLICE(a5_214, word16, 0), word16, word32)
	branch a5_280 >=u a1_278 l2309FA00
l2309F9F0:
	word32 a5_282 = a5_280 + t1_187
	branch a5_282 <u t1_187 l2309FA00
l2309F9F8:
	branch a5_282 >=u a1_278 l2309FA00
l2309F9FC:
l2309FA00:
l2309F868:
	branch a2 >=u 0x10000<32> l2309F940
l2309F940:
	a4_191 = 16<i32>
	branch a2 <u 0x1000000<32> l2309F87C
l2309F94C:
	a4_191 = 24<i32>
l2309F870:
	branch a2 <=u 255<i32> l2309F87C
l2309F878:
	a4_191 = 8<i32>
l2309F87C:
	word32 a4_301 = CONVERT(Mem0[0x230CB470<p32> + (a2 >>u a4_191):byte], byte, word32) + a4_191
	word32 t3_302 = 32<i32> - a4_301
	branch t3_302 == 0<32> l2309F8AC
l2309F898:
	t1_187 = a2 << t3_302
	a6_28 = a0 >>u a4_301 | a1 << t3_302
	a5_214 = a0 << t3_302
l2309F8AC:
	word32 a2_312 = t1_187 >>u 0x10<u32>
	word32 a0_316 = t1_187 << 0x10<u32>
	word32 a1_322 = (a0_316 >>u 0x10<u32>) + (a6_28 >>u a2_312)
	word32 a4_324 = (a6_28 & a2_312) << 0x10<u32> | a5_214 >>u 0x10<u32>
	branch a4_324 >=u a1_322 l2309F8E4
l2309F8D4:
	a4_324 = a4_324 + t1_187
	branch a4_324 <u t1_187 l2309F8E4
l2309F8DC:
	branch a4_324 >=u a1_322 l2309F8E4
l2309F8E0:
	a4_324 = a4_324 + t1_187
l2309F8E4:
	word32 a4_329 = a4_324 - a1_322
	word32 a4_337 = (a0_316 >>u 0x10<u32>) + (a4_329 >>u a2_312)
	word32 a5_339 = (a4_329 & a2_312) << 0x10<u32> | CONVERT(SLICE(a5_214, word16, 0), word16, word32)
	branch a5_339 >=u a4_337 l2309F918
l2309F908:
	word32 a5_341 = a5_339 + t1_187
	branch a5_341 <u t1_187 l2309F918
l2309F910:
	branch a5_341 >=u a4_337 l2309F918
l2309F914:
l2309F918:
l2309F91C:
l2309F924:
	branch a7_10 == 0<32> l2309F93C
l2309F928:
l2309F93C:
	return
__moddi3_exit:


word32 __udivdi3(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mm_check_beacon
//      InitGroupKey
//      cmd_sys_time_now
//      bl_timer_now_us
//      format_int
//      mbedtls_mpi_div_mpi
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: sp
__udivdi3_entry:
l2309FC70:
	word32 a4_12
	word32 a1_11
	word32 a5_106 = a1
	word32 a6_129 = a2
	word32 a4_133 = a3
	word32 t1_10 = a0
	branch a3 != 0<32> l2309FF0C
l2309FF0C:
	branch a1 <u a3 l230A0098
l230A0098:
	a1_11 = 0<i32>
	a4_12 = 0<i32>
l2309FF10:
	word32 a4_15
	branch a3 >=u 0x10000<32> l2309FF5C
l2309FF5C:
	a4_15 = 16<i32>
	branch a3 <u 0x1000000<32> l2309FF24
l2309FF68:
	a4_15 = 24<i32>
l2309FF18:
	a4_15 = CONVERT(a3 >u 255<i32>, bool, word32) << 3<u32>
l2309FF24:
	word32 a6_30 = CONVERT(Mem0[0x230CB470<p32> + (a3 >>u a4_15):byte], byte, word32) + a4_15
	a1_11 = 32<i32> - a6_30
	branch a1_11 != 0<32> l2309FF70
l2309FF70:
	word32 a3_35 = a2 >>u a6_30 | a3 << a1_11
	word32 a4_38 = a1 >>u a6_30
	word32 t1_43 = a0 >>u a6_30 | a1 << a1_11
	word32 a5_45 = CONVERT(SLICE(a3_35, word16, 0), word16, word32)
	word32 a4_48 = a4_38 >>u (a3_35 >>u 0x10<u32>)
	word32 a2_47 = a2 << a1_11
	word32 a6_50 = (a4_38 & a3_35 >>u 0x10<u32>) << 0x10<u32> | t1_43 >>u 0x10<u32>
	word32 t5_51 = a5_45 + a4_48
	word32 t3_52 = a4_48
	branch a6_50 >=u t5_51 l2309FFD4
l2309FFBC:
	a6_50 = a6_50 + a3_35
	t3_52 = a4_48 + -1<i32>
	branch a6_50 <u a3_35 l2309FFD4
l2309FFC8:
	branch a6_50 >=u t5_51 l2309FFD4
l2309FFCC:
	t3_52 = a4_48 + -2<i32>
	a6_50 = a6_50 + a3_35
l2309FFD4:
	word32 a6_59 = a6_50 - t5_51
	word32 a6_62 = a6_59 >>u (a3_35 >>u 0x10<u32>)
	word32 t4_65 = a5_45 + a6_62
	word32 a5_69 = (a6_59 & a3_35 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(t1_43, word16, 0), word16, word32)
	word32 a4_70 = a6_62
	branch a5_69 >=u t4_65 l230A0014
l2309FFFC:
	a5_69 = a5_69 + a3_35
	a4_70 = a6_62 + -1<i32>
	branch a5_69 <u a3_35 l230A0014
l230A0008:
	branch a5_69 >=u t4_65 l230A0014
l230A000C:
	a4_70 = a6_62 + -2<i32>
	a5_69 = a5_69 + a3_35
l230A0014:
	a4_12 = t3_52 << 0x10<u32> | a4_70
	word32 a6_93 = (a4_12 >>u 0x10<u32>) + (a2_47 & 0xFFFF<32>)
	word32 t3_92 = (a4_12 & 0xFFFF<32>) + (a2_47 & 0xFFFF<32>)
	a5_106 = a5_69 - t4_65
	a3 = (t3_92 >>u 0x10<u32>) + (((a4_12 & 0xFFFF<32>) + (a2_47 >>u 0x10<u32>)) + a6_93)
	word32 a7_102 = (a4_12 >>u 0x10<u32>) + (a2_47 >>u 0x10<u32>)
	branch a3 >=u a6_93 l230A005C
l230A0058:
	a7_102 = a7_102 + 0x10000<32>
l230A005C:
	word32 a7_103 = (a3 >>u 0x10<u32>) + a7_102
	branch a5_106 <u a7_103 l230A0090
l230A0068:
	branch a5_106 != a7_103 l2309FD5C
l230A006C:
	a5_106 = 0xFFFF<32>
	a3 = ((a3 & 0xFFFF<32>) << 0x10<u32>) + (t3_92 & 0xFFFF<32>)
	a1_11 = 0<i32>
	branch a0 << a1_11 >=u a3 l2309FE44
l230A0090:
	a4_12 = a4_12 + -1<i32>
l2309FF48:
	a4_12 = 1<i32>
	branch a3 <u a1 l2309FE44
l2309FF50:
	a4_12 = CONVERT(a0 <u a2, bool, word32) ^ 1<i32>
l2309FC84:
	branch a1 >=u a2 l2309FD78
l2309FD78:
	branch a2 != 0<32> l2309FD84
l2309FD7C:
	a6_129 = 1<i32> >>u a2
l2309FD84:
	branch a6_129 >=u 0x10000<32> l2309FE4C
l2309FE4C:
	a4_133 = 16<i32>
	branch a6_129 <u 0x1000000<32> l2309FD98
l2309FE58:
	a4_133 = 24<i32>
l2309FD8C:
	branch a6_129 <=u 255<i32> l2309FD98
l2309FD94:
	a4_133 = 8<i32>
l2309FD98:
	word32 a5_195
	word32 a3_147 = CONVERT(Mem0[0x230CB470<p32> + (a6_129 >>u a4_133):byte], byte, word32) + a4_133
	word32 a4_149 = 32<i32> - a3_147
	branch a4_149 != 0<32> l2309FE60
l2309FE60:
	a6_129 = a6_129 << a4_149
	word32 a1_153 = a1 >>u a3_147
	word32 a7_161 = a0 >>u a3_147 | a1 << a4_149
	word32 a5_163 = CONVERT(SLICE(a6_129, word16, 0), word16, word32)
	word32 a1_165 = a1_153 >>u (a6_129 >>u 0x10<u32>)
	t1_10 = a0 << a4_149
	word32 a4_167 = (a1_153 & a6_129 >>u 0x10<u32>) << 0x10<u32> | a7_161 >>u 0x10<u32>
	word32 a3_168 = a5_163 + a1_165
	word32 a2_169 = a1_165
	branch a4_167 >=u a3_168 l2309FEBC
l2309FEA4:
	a4_167 = a4_167 + a6_129
	a2_169 = a1_165 + -1<i32>
	branch a4_167 <u a6_129 l2309FEBC
l2309FEB0:
	branch a4_167 >=u a3_168 l2309FEBC
l2309FEB4:
	a2_169 = a1_165 + -2<i32>
	a4_167 = a4_167 + a6_129
l2309FEBC:
	word32 a3_176 = a4_167 - a3_168
	word32 a3_182 = a3_176 >>u (a6_129 >>u 0x10<u32>)
	word32 a1_185 = a5_163 + a3_182
	word32 a5_186 = (a3_176 & a6_129 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a7_161, word16, 0), word16, word32)
	word32 a4_187 = a3_182
	branch a5_186 >=u a1_185 l2309FEFC
l2309FEE4:
	a5_186 = a5_186 + a6_129
	a4_187 = a3_182 + -1<i32>
	branch a5_186 <u a6_129 l2309FEFC
l2309FEF0:
	branch a5_186 >=u a1_185 l2309FEFC
l2309FEF4:
	a4_187 = a3_182 + -2<i32>
	a5_186 = a5_186 + a6_129
l2309FEFC:
	a5_195 = a5_186 - a1_185
	a1_11 = a2_169 << 0x10<u32> | a4_187
l2309FDB4:
	a5_195 = a1 - a6_129
	a1_11 = 1<i32>
l2309FDBC:
	word32 a2_205 = a6_129 >>u 0x10<u32>
	word32 a7_206 = a6_129 << 0x10<u32>
	word32 a5_216 = a5_195 >>u a2_205
	word32 a3_218 = (a5_195 & a2_205) << 0x10<u32> | t1_10 >>u 0x10<u32>
	word32 a0_219 = (a7_206 >>u 0x10<u32>) + a5_216
	word32 a4_220 = a5_216
	branch a3_218 >=u a0_219 l2309FE00
l2309FDE8:
	a3_218 = a3_218 + a6_129
	a4_220 = a5_216 + -1<i32>
	branch a3_218 <u a6_129 l2309FE00
l2309FDF4:
	branch a3_218 >=u a0_219 l2309FE00
l2309FDF8:
	a4_220 = a5_216 + -2<i32>
	a3_218 = a3_218 + a6_129
l2309FE00:
	word32 a3_227 = a3_218 - a0_219
	word32 a5_229 = a3_227 & a2_205
	a3 = a3_227 >>u a2_205
	a5_106 = a5_229 << 0x10<u32>
	word32 t1_235 = a5_229 << 0x10<u32> | CONVERT(SLICE(t1_10, word16, 0), word16, word32)
	word32 a7_237 = (a7_206 >>u 0x10<u32>) + a3
	word32 a0_238 = a3
	branch t1_235 >=u a7_237 l2309FE3C
l2309FE28:
	word32 t1_240 = a6_129 + t1_235
	a0_238 = a3 + -1<i32>
	branch t1_240 <u a6_129 l2309FE3C
l2309FE34:
	branch t1_240 >=u a7_237 l2309FE3C
l2309FE38:
	a0_238 = a3 + -2<i32>
l2309FE3C:
	a4_12 = a4_220 << 0x10<u32> | a0_238
l2309FC90:
	word32 a4_250
	branch a2 >=u 0x10000<32> l2309FD64
l2309FD64:
	a4_250 = 16<i32>
	branch a2 <u 0x1000000<32> l2309FCA4
l2309FD70:
	a4_250 = 24<i32>
l2309FC98:
	a4_250 = CONVERT(a2 >u 255<i32>, bool, word32) << 3<u32>
l2309FCA4:
	word32 a4_262 = CONVERT(Mem0[0x230CB470<p32> + (a2 >>u a4_250):byte], byte, word32) + a4_250
	word32 a3_264 = 32<i32> - a4_262
	branch a3_264 == 0<32> l2309FCD4
l2309FCC0:
	a6_129 = a2 << a3_264
	a1 = a0 >>u a4_262 | a1 << a3_264
	t1_10 = a0 << a3_264
l2309FCD4:
	word32 a0_274 = a6_129 >>u 0x10<u32>
	word32 a2_278 = a6_129 << 0x10<u32>
	word32 a1_283 = a1 >>u a0_274
	word32 a3_285 = (a1 & a0_274) << 0x10<u32> | t1_10 >>u 0x10<u32>
	word32 a5_286 = (a2_278 >>u 0x10<u32>) + a1_283
	word32 a4_287 = a1_283
	branch a3_285 >=u a5_286 l2309FD18
l2309FD00:
	a3_285 = a3_285 + a6_129
	a4_287 = a1_283 + -1<i32>
	branch a3_285 <u a6_129 l2309FD18
l2309FD0C:
	branch a3_285 >=u a5_286 l2309FD18
l2309FD10:
	a4_287 = a1_283 + -2<i32>
	a3_285 = a3_285 + a6_129
l2309FD18:
	word32 a3_294 = a3_285 - a5_286
	word32 a5_296 = a3_294 & a0_274
	a3 = a3_294 >>u a0_274
	a5_106 = a5_296 << 0x10<u32>
	word32 t1_302 = a5_296 << 0x10<u32> | CONVERT(SLICE(t1_10, word16, 0), word16, word32)
	word32 a1_304 = (a2_278 >>u 0x10<u32>) + a3
	word32 a0_305 = a3
	branch t1_302 >=u a1_304 l2309FD54
l2309FD40:
	word32 t1_307 = a6_129 + t1_302
	a0_305 = a3 + -1<i32>
	branch t1_307 <u a6_129 l2309FD54
l2309FD4C:
	branch t1_307 >=u a1_304 l2309FD54
l2309FD50:
	a0_305 = a3 + -2<i32>
l2309FD54:
	a4_12 = a4_287 << 0x10<u32> | a0_305
l2309FD5C:
	a1_11 = 0<i32>
l2309FE44:
	a1Out = a1_11
	a3Out = a3
	a4Out = a4_12
	a5Out = a5_106
	return a4_12
__udivdi3_exit:


word32 __umoddi3(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      format_int
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: sp
__umoddi3_entry:
l230A00A4:
	word32 a7_167 = a2
	word32 a4_171 = a3
	word32 a5_141 = a0
	word32 a6_10 = a1
	branch a3 != 0<32> l230A02EC
l230A02EC:
	branch a1 <u a3 l230A0180
l230A02F0:
	word32 a4_13
	branch a3 >=u 0x10000<32> l230A034C
l230A034C:
	a4_13 = 16<i32>
	branch a3 <u 0x1000000<32> l230A0304
l230A0358:
	a4_13 = 24<i32>
l230A02F8:
	a4_13 = CONVERT(a3 >u 255<i32>, bool, word32) << 3<u32>
l230A0304:
	word32 t4_28 = CONVERT(Mem0[0x230CB470<p32> + (a3 >>u a4_13):byte], byte, word32) + a4_13
	word32 t3_29 = 32<i32> - t4_28
	branch t3_29 != 0<32> l230A0360
l230A0360:
	word32 a3_33 = a2 >>u t4_28 | a3 << t3_29
	word32 a4_36 = a1 >>u t4_28
	word32 a5_41 = a0 >>u t4_28 | a1 << t3_29
	word32 a1_43 = CONVERT(SLICE(a3_33, word16, 0), word16, word32)
	word32 a4_47 = a4_36 >>u (a3_33 >>u 0x10<u32>)
	word32 a2_45 = a2 << t3_29
	word32 a0_46 = a0 << t3_29
	word32 a7_49 = (a4_36 & a3_33 >>u 0x10<u32>) << 0x10<u32> | a5_41 >>u 0x10<u32>
	word32 t5_50 = a1_43 + a4_47
	word32 t1_51 = a4_47
	branch a7_49 >=u t5_50 l230A03C8
l230A03B0:
	a7_49 = a7_49 + a3_33
	t1_51 = a4_47 + -1<i32>
	branch a7_49 <u a3_33 l230A03C8
l230A03BC:
	branch a7_49 >=u t5_50 l230A03C8
l230A03C0:
	t1_51 = a4_47 + -2<i32>
	a7_49 = a7_49 + a3_33
l230A03C8:
	word32 a7_58 = a7_49 - t5_50
	word32 a7_61 = a7_58 >>u (a3_33 >>u 0x10<u32>)
	word32 a6_64 = a1_43 + a7_61
	word32 a1_68 = (a7_58 & a3_33 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(a5_41, word16, 0), word16, word32)
	word32 a5_69 = a7_61
	branch a1_68 >=u a6_64 l230A0408
l230A03F0:
	a1_68 = a1_68 + a3_33
	a5_69 = a7_61 + -1<i32>
	branch a1_68 <u a3_33 l230A0408
l230A03FC:
	branch a1_68 >=u a6_64 l230A0408
l230A0400:
	a5_69 = a7_61 + -2<i32>
	a1_68 = a1_68 + a3_33
l230A0408:
	word32 t1_80 = t1_51 << 0x10<u32> | a5_69
	word32 a5_92 = (t1_80 >>u 0x10<u32>) + (a2_45 & 0xFFFF<32>)
	word32 a4_91 = (t1_80 & 0xFFFF<32>) + (a2_45 & 0xFFFF<32>)
	word32 a1_85 = a1_68 - a6_64
	word32 t1_101 = (t1_80 >>u 0x10<u32>) + (a2_45 >>u 0x10<u32>)
	word32 a6_97 = (a4_91 >>u 0x10<u32>) + (((t1_80 & 0xFFFF<32>) + (a2_45 >>u 0x10<u32>)) + a5_92)
	branch a6_97 >=u a5_92 l230A0450
l230A044C:
	t1_101 = t1_101 + 0x10000<32>
l230A0450:
	word32 t1_102 = (a6_97 >>u 0x10<u32>) + t1_101
	word32 a4_109 = ((a6_97 & 0xFFFF<32>) << 0x10<u32>) + (a4_91 & 0xFFFF<32>)
	branch a1_85 <u t1_102 l230A047C
l230A0474:
	branch a1_85 != t1_102 l230A0490
l230A0478:
	branch a0_46 >=u a4_109 l230A0490
l230A047C:
	word32 a2_117 = a4_109 - a2_45
	t1_102 = t1_102 - (CONVERT(a4_109 <u a2_117, bool, word32) + a3_33)
	a4_109 = a2_117
l230A0490:
	word32 a4_129 = a0_46 - a4_109
	a5_141 = a1_85 - t1_102 - CONVERT(a0_46 <u a4_129, bool, word32) << t4_28
	a0 = a5_141 | a4_129 >>u t3_29
l230A0328:
	branch a3 <u a1 l230A0330
l230A032C:
	branch a0 <u a2 l230A0340
l230A0330:
	a5_141 = a0 - a2
l230A0340:
	a0 = a5_141
l230A00B8:
	word32 t1_187
	branch a1 >=u a2 l230A0198
l230A0198:
	branch a2 != 0<32> l230A01A4
l230A019C:
	a7_167 = 1<i32> >>u a2
l230A01A4:
	branch a7_167 >=u 0x10000<32> l230A024C
l230A024C:
	a4_171 = 16<i32>
	branch a7_167 <u 0x1000000<32> l230A01B8
l230A0258:
	a4_171 = 24<i32>
l230A01AC:
	branch a7_167 <=u 255<i32> l230A01B8
l230A01B4:
	a4_171 = 8<i32>
l230A01B8:
	word32 a1_227
	word32 t3_186 = CONVERT(Mem0[0x230CB470<p32> + (a7_167 >>u a4_171):byte], byte, word32) + a4_171
	t1_187 = 32<i32> - t3_186
	branch t1_187 != 0<32> l230A0260
l230A0260:
	a7_167 = a7_167 << t1_187
	word32 a4_191 = a1 >>u t3_186
	word32 t3_199 = a0 >>u t3_186 | a1 << t1_187
	word32 a1_201 = CONVERT(SLICE(a7_167, word16, 0), word16, word32)
	a5_141 = a0 << t1_187
	word32 a3_205 = (a4_191 & a7_167 >>u 0x10<u32>) << 0x10<u32> | t3_199 >>u 0x10<u32>
	word32 a4_206 = a1_201 + (a4_191 >>u (a7_167 >>u 0x10<u32>))
	branch a3_205 >=u a4_206 l230A02B0
l230A02A0:
	a3_205 = a3_205 + a7_167
	branch a3_205 <u a7_167 l230A02B0
l230A02A8:
	branch a3_205 >=u a4_206 l230A02B0
l230A02AC:
	a3_205 = a3_205 + a7_167
l230A02B0:
	word32 a2_211 = a3_205 - a4_206
	word32 a2_220 = a1_201 + (a2_211 >>u (a7_167 >>u 0x10<u32>))
	word32 a1_221 = (a2_211 & a7_167 >>u 0x10<u32>) << 0x10<u32> | CONVERT(SLICE(t3_199, word16, 0), word16, word32)
	branch a1_221 >=u a2_220 l230A02E4
l230A02D4:
	a1_221 = a1_221 + a7_167
	branch a1_221 <u a7_167 l230A02E4
l230A02DC:
	branch a1_221 >=u a2_220 l230A02E4
l230A02E0:
	a1_221 = a1_221 + a7_167
l230A02E4:
	a1_227 = a1_221 - a2_220
l230A01D4:
	a1_227 = a1 - a7_167
l230A01D8:
	word32 a4_231 = a7_167 >>u 0x10<u32>
	word32 a0_232 = a7_167 << 0x10<u32>
	word32 a3_244 = (a1_227 & a4_231) << 0x10<u32> | a5_141 >>u 0x10<u32>
	word32 a1_245 = (a0_232 >>u 0x10<u32>) + (a1_227 >>u a4_231)
	branch a3_244 >=u a1_245 l230A0210
l230A0200:
	a3_244 = a3_244 + a7_167
	branch a3_244 <u a7_167 l230A0210
l230A0208:
	branch a3_244 >=u a1_245 l230A0210
l230A020C:
	a3_244 = a3_244 + a7_167
l230A0210:
	word32 a1_250 = a3_244 - a1_245
	word32 a1_258 = (a0_232 >>u 0x10<u32>) + (a1_250 >>u a4_231)
	word32 a5_260 = (a1_250 & a4_231) << 0x10<u32> | CONVERT(SLICE(a5_141, word16, 0), word16, word32)
	branch a5_260 >=u a1_258 l230A0244
l230A0234:
	a5_260 = a5_260 + a7_167
	branch a5_260 <u a7_167 l230A0244
l230A023C:
	branch a5_260 >=u a1_258 l230A0244
l230A0240:
	a5_260 = a5_260 + a7_167
l230A0244:
	a5_141 = a5_260 - a1_258
l230A00C4:
	branch a2 >=u 0x10000<32> l230A0184
l230A0184:
	a4_171 = 16<i32>
	branch a2 <u 0x1000000<32> l230A00D8
l230A0190:
	a4_171 = 24<i32>
l230A00CC:
	branch a2 <=u 255<i32> l230A00D8
l230A00D4:
	a4_171 = 8<i32>
l230A00D8:
	word32 t3_281 = CONVERT(Mem0[0x230CB470<p32> + (a2 >>u a4_171):byte], byte, word32) + a4_171
	t1_187 = 32<i32> - t3_281
	branch t1_187 == 0<32> l230A0108
l230A00F4:
	a7_167 = a2 << t1_187
	a6_10 = a0 >>u t3_281 | a1 << t1_187
	a5_141 = a0 << t1_187
l230A0108:
	word32 a2_292 = a7_167 >>u 0x10<u32>
	word32 a0_296 = a7_167 << 0x10<u32>
	word32 a3_303 = (a6_10 & a2_292) << 0x10<u32> | a5_141 >>u 0x10<u32>
	word32 a6_304 = (a0_296 >>u 0x10<u32>) + (a6_10 >>u a2_292)
	branch a3_303 >=u a6_304 l230A0140
l230A0130:
	a3_303 = a3_303 + a7_167
	branch a3_303 <u a7_167 l230A0140
l230A0138:
	branch a3_303 >=u a6_304 l230A0140
l230A013C:
	a3_303 = a3_303 + a7_167
l230A0140:
	word32 a3_309 = a3_303 - a6_304
	word32 a3_317 = (a0_296 >>u 0x10<u32>) + (a3_309 >>u a2_292)
	word32 a5_319 = (a3_309 & a2_292) << 0x10<u32> | CONVERT(SLICE(a5_141, word16, 0), word16, word32)
	branch a5_319 >=u a3_317 l230A0174
l230A0164:
	a5_319 = a5_319 + a7_167
	branch a5_319 <u a7_167 l230A0174
l230A016C:
	branch a5_319 >=u a3_317 l230A0174
l230A0170:
	a5_319 = a5_319 + a7_167
l230A0174:
	a5_141 = a5_319 - a3_317
l230A0178:
	a0 = a5_141 >>u t1_187
l230A0180:
	a5Out = a5_141
	return a0
__umoddi3_exit:


