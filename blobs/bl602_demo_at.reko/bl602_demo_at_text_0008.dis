void tcp_connected_callback(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg54, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_connected_callback_entry:
l2308034E:
	branch a0 <= 4<32> l23080382
l23080382:
	word32 a5_159
	word32 a4_157
	word32 mstatus_112
	word32 s3_145
	branch a2 != 0<32> l23080456
l23080456:
	word32 a2_44
	word32 a3_45
	word32 a4_46
	word32 mstatus_50
	word32 s1_53
	word32 s3_57
	word32 a2_76
	word32 a3_77
	word32 a4_78
	word32 mstatus_82
	word32 s1_85
	word32 s2_88
	word32 s3_89
	word32 a2_106
	word32 a3_107
	word32 a4_108
	word32 a5_109
	word32 s3_119
	word32 s11_575
	word32 s10_574
	word32 s9_573
	word32 s8_572
	word32 s7_571
	word32 s6_570
	word32 s5_569
	word32 s4_568
	word32 s2_567
	word32 a1_566
	word32 a0_565
	word32 s1_564
	word32 s0_563
	word32 s11_562
	word32 s8_559
	word32 s9_560
	word32 s10_561
	word32 s7_558
	word32 s4_555
	word32 s5_556
	word32 s6_557
	word32 a0_552
	word32 a1_553
	word32 a5_554
	word32 s10_549
	word32 s11_550
	word32 s0_551
	word32 s7_546
	word32 s8_547
	word32 s9_548
	word32 s4_543
	word32 s5_544
	word32 s6_545
	word32 a1_540
	word32 a5_541
	word32 s2_542
	word32 s0_538
	word32 a0_539
	word32 ra_113 = at_dump_noend(at_dump_noend(at_dump_noend(ra, a0, 0x230C6900<32>, a2, a3, a4, 0x42028000<32>, mstatus, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_538, out s1_53, out a0_539, out a1_540, out a2_44, out a3_45, out a4_46, out a5_541, out s2_542, out s3_57, out s4_543, out s5_544, out s6_545, out s7_546, out s8_547, out s9_548, out s10_549, out s11_550, out mstatus_50), s1_53, 0x230C5DAC<32>, a2_44, a3_45, a4_46, s3_57, mstatus_50, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_551, out s1_85, out a0_552, out a1_553, out a2_76, out a3_77, out a4_78, out a5_554, out s2_88, out s3_89, out s4_555, out s5_556, out s6_557, out s7_558, out s8_559, out s9_560, out s10_561, out s11_562, out mstatus_82), s1_85, s2_88 + -1792<i32>, a2_76, a3_77, a4_78, s3_89, mstatus_82, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_563, out s1_564, out a0_565, out a1_566, out a2_106, out a3_107, out a4_108, out a5_109, out s2_567, out s3_119, out s4_568, out s5_569, out s6_570, out s7_571, out s8_572, out s9_573, out s10_574, out s11_575, out mstatus_112)
	word32 a0_135
	word32 a1_136
	word32 s1_143
	word32 s2_144
	word32 s8_581
	word32 s4_580
	word32 a5_579
	word32 a4_578
	word32 a3_577
	word32 a2_576
	xQueueSemaphoreTake(Mem15[s3_119 + 236<i32>:int32], 0xFFFFFFFF<32>, a2_106, a3_107, a4_108, a5_109, mstatus_112, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_143, out a0_135, out a1_136, out a2_576, out a3_577, out a4_578, out a5_579, out s2_144, out s3_145, out s4_580, out s8_581)
	word32 s0_152 = Mem15[a0_135 + 48<i32>:word32]
	Mem153[s0_152 + 56<i32>:byte] = 0<8>
	word32 a5_582
	word32 a0_154 = altcp_close(a0_135, 56<i32>, out a5_582)
	a4_157 = CONVERT(Mem153[s0_152 + 24<i32>:byte], byte, word32)
	Mem158[s0_152 + 48<i32>:word32] = 0<32>
	a5_159 = 3<32>
	branch a4_157 != 3<32> l23080422
l230804A0:
	word32 s1_627
	word32 s2_628
	word32 s4_629
	Mem184[altcp_tls_free_config(ra_113, s1_143 + 56<i32>, a0_154, a1_136, 3<32>, s2_144, s3_145, mstatus_112, dwLoc2C, dwLoc28, s2, dwLoc0C, dwArg54, dwArg74, dwArgA8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_627, out a4_157, out a5_159, out s2_628, out s3_145, out s4_629) + 52<i32>:word32] = 0<32>
l23080396:
	word32 mstatus_267
	word32 a4_263
	word32 a3_262
	word32 a2_261
	word32 s1_270
	word32 ra_268
	word32 s3_274
	word32 s2_273
	word32 a3_192
	word32 s1_197
	word32 s3_199
	word32 s4_587
	word32 a5_586
	word32 a4_585
	word32 a1_584
	word32 a0_583
	word32 a2_191
	word32 s0_207 = xQueueSemaphoreTake(Mem15[0x420280EC<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, 4<32>, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_197, out a0_583, out a1_584, out a2_191, out a3_192, out a4_585, out a5_586, out s2, out s3_199, out s4_587, out s8) + (s1_197 + 56<i32>)
	word32 a4_208 = CONVERT(Mem15[s0_207 + 24<i32>:byte], byte, word32)
	Mem210[s0_207 + 56<i32>:byte] = 3<8>
	branch a4_208 != 3<32> l23080442
l230803BE:
	word32 a0_212 = altcp_tls_context(s2 + -1792<i32>)
	branch a0_212 != 0<32> l230803DC
l230803DC:
	word32 a0_213 = mbedtls_ssl_get_alpn_protocol(a0_212)
	a2_191 = a0_213
	branch a0_213 == 0<32> l23080442
l23080442:
	word32 a2_229
	word32 a3_230
	word32 a4_231
	word32 mstatus_235
	word32 s1_238
	word32 s3_242
	word32 s0_588
	word32 a0_589
	word32 a1_590
	word32 a5_591
	word32 s2_592
	word32 s4_593
	word32 s5_594
	word32 s6_595
	word32 s7_596
	word32 s8_597
	word32 s9_598
	word32 s10_599
	word32 s11_600
	word32 s0_601
	word32 a0_602
	word32 a1_603
	word32 a5_604
	word32 s4_605
	word32 s5_606
	word32 s6_607
	word32 s7_608
	word32 s8_609
	word32 s9_610
	word32 s10_611
	word32 s11_612
	ra_268 = at_dump_noend(at_dump_noend(ra, s1_197, s2 + -1792<i32>, a2_191, a3_192, a4_208, s3_199, mstatus, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_588, out s1_238, out a0_589, out a1_590, out a2_229, out a3_230, out a4_231, out a5_591, out s2_592, out s3_242, out s4_593, out s5_594, out s6_595, out s7_596, out s8_597, out s9_598, out s10_599, out s11_600, out mstatus_235), s1_238, 0x230C5D98<32>, a2_229, a3_230, a4_231, s3_242, mstatus_235, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_601, out s1_270, out a0_602, out a1_603, out a2_261, out a3_262, out a4_263, out a5_604, out s2_273, out s3_274, out s4_605, out s5_606, out s6_607, out s7_608, out s8_609, out s9_610, out s10_611, out s11_612, out mstatus_267)
l230803EA:
	word32 a3_291
	word32 a4_292
	word32 mstatus_296
	word32 s1_299
	word32 s3_303
	word32 s0_644
	word32 a0_645
	word32 a1_646
	word32 a2_647
	word32 a5_648
	word32 s2_649
	word32 s4_650
	word32 s5_651
	word32 s6_652
	word32 s7_653
	word32 s8_654
	word32 s9_655
	word32 s10_656
	word32 s11_657
	word32 s0_658
	word32 a0_659
	word32 a1_660
	word32 a5_661
	word32 s4_662
	word32 s5_663
	word32 s6_664
	word32 s7_665
	word32 s8_666
	word32 s9_667
	word32 s10_668
	word32 s11_669
	ra_268 = at_dump_noend(at_dump_noend(ra, s1_197, s2 + -1792<i32>, a0_213, a3_192, a4_208, s3_199, mstatus, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_644, out s1_299, out a0_645, out a1_646, out a2_647, out a3_291, out a4_292, out a5_648, out s2_649, out s3_303, out s4_650, out s5_651, out s6_652, out s7_653, out s8_654, out s9_655, out s10_656, out s11_657, out mstatus_296), s1_299, 0x230C5D80<32>, a0_213, a3_291, a4_292, s3_303, mstatus_296, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_658, out s1_270, out a0_659, out a1_660, out a2_261, out a3_262, out a4_263, out a5_661, out s2_273, out s3_274, out s4_662, out s5_663, out s6_664, out s7_665, out s8_666, out s9_667, out s10_668, out s11_669, out mstatus_267)
l230803FE:
	word32 s4_377
	word32 s0_630
	word32 s1_631
	word32 a0_632
	word32 a1_633
	word32 a2_634
	word32 a3_635
	word32 s2_636
	word32 s5_637
	word32 s6_638
	word32 s7_639
	word32 s8_640
	word32 s9_641
	word32 s10_642
	word32 s11_643
	at_dump_noend(ra_268, s1_270, s2_273 + -1792<i32>, a2_261, a3_262, a4_263, s3_274, mstatus_267, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, dwArg58, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_630, out s1_631, out a0_632, out a1_633, out a2_634, out a3_635, out a4_157, out a5_159, out s2_636, out s3_145, out s4_377, out s5_637, out s6_638, out s7_639, out s8_640, out s9_641, out s10_642, out s11_643, out mstatus_112)
	altcp_recv(s4_377, 0x230804AC<32>)
	altcp_sent(s4_377, 0x23080254<32>)
l23080422:
	word32 s1_613
	word32 a0_614
	word32 a1_615
	word32 a2_616
	word32 a3_617
	word32 a4_618
	word32 a5_619
	word32 a7_620
	word32 s2_621
	word32 s3_622
	word32 s4_623
	word32 s5_624
	word32 s6_625
	word32 s8_626
	xQueueGenericSend(Mem397[s3_145 + 236<i32>:int32], 0<32>, 0<32>, a4_157, a5_159, mstatus_112, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_613, out a0_614, out a1_615, out a2_616, out a3_617, out a4_618, out a5_619, out a7_620, out s2_621, out s3_622, out s4_623, out s5_624, out s6_625, out s8_626)
	0<32> = dwArg0128
	return
tcp_connected_callback_exit:
l230803C6:
l23080362:
l23080376:
	__assert_func(ra, 0x230C5C44<32>, s2, s6, s7, s8, s9)


void tcp_receive_callback(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg08, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_receive_callback_entry:
l230804AC:
	branch a0 <= 4<32> l230804E6
l230804E6:
	word32 a2_44
	word32 a3_45
	word32 s1_50
	word32 s3_52
	word32 s4_53
	word32 s8_771
	word32 s2_770
	word32 a0_766
	word32 a1_767
	word32 a4_768
	word32 a5_769
	xQueueSemaphoreTake(Mem21[0x420280EC<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, 4<32>, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_50, out a0_766, out a1_767, out a2_44, out a3_45, out a4_768, out a5_769, out s2_770, out s3_52, out s4_53, out s8_771)
	branch CONVERT(Mem21[s1_50 + 0x4201C3A0<32>:byte], byte, word32) == 3<32> l2308054E
l2308054E:
	branch s4_53 != 0<32> l230805A6
l230805A6:
	word32 a2_73
	word32 a3_74
	word32 a4_75
	word32 s1_80
	word32 a0_802
	word32 a1_803
	word32 a5_804
	word32 a7_805
	word32 s2_806
	word32 s3_807
	word32 s4_808
	word32 s5_809
	word32 s6_810
	word32 s8_811
	xQueueGenericSend(Mem21[s3_52 + 236<i32>:int32], 0<32>, 0<32>, 0x4201C000<32>, 3<32>, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_80, out a0_802, out a1_803, out a2_73, out a3_74, out a4_75, out a5_804, out a7_805, out s2_806, out s3_807, out s4_808, out s5_809, out s6_810, out s8_811)
	word32 a2_96
	word32 a3_97
	word32 a4_98
	word32 s1_101
	word32 s2_102
	word32 s3_103
	word32 a2_121
	word32 a3_122
	word32 a4_123
	word32 mstatus_127
	word32 s1_130
	word32 s3_134
	word32 a2_152
	word32 a3_153
	word32 a4_154
	word32 mstatus_158
	word32 s1_161
	word32 s2_164
	word32 s3_165
	word32 a2_182
	word32 a3_183
	word32 a4_184
	word32 mstatus_188
	word32 s1_191
	word32 s2_194
	word32 s3_195
	word32 a3_213
	word32 a4_214
	word32 mstatus_218
	word32 s1_221
	word32 s3_225
	word32 s4_226
	word32 a2_245
	word32 a3_246
	word32 a4_247
	word32 mstatus_251
	word32 s1_254
	word32 s2_257
	word32 s3_258
	word32 s0_812
	word32 a0_813
	word32 a1_814
	word32 a5_815
	word32 s2_816
	word32 s4_817
	word32 s5_818
	word32 s6_819
	word32 s7_820
	word32 s8_821
	word32 s9_822
	word32 s10_823
	word32 s11_824
	word32 s0_825
	word32 a0_826
	word32 a1_827
	word32 a5_828
	word32 s4_829
	word32 s5_830
	word32 s6_831
	word32 s7_832
	word32 s8_833
	word32 s9_834
	word32 s10_835
	word32 s11_836
	word32 s0_837
	word32 a0_838
	word32 a1_839
	word32 a5_840
	word32 s4_841
	word32 s5_842
	word32 s6_843
	word32 s7_844
	word32 s8_845
	word32 s9_846
	word32 s10_847
	word32 s11_848
	word32 s0_849
	word32 a0_850
	word32 a1_851
	word32 a2_852
	word32 a5_853
	word32 s2_854
	word32 s5_855
	word32 s6_856
	word32 s7_857
	word32 s8_858
	word32 s9_859
	word32 s10_860
	word32 s11_861
	word32 s0_862
	word32 a0_863
	word32 a1_864
	word32 a5_865
	word32 s4_866
	word32 s5_867
	word32 s6_868
	word32 s7_869
	word32 s8_870
	word32 s9_871
	word32 s10_872
	word32 s11_873
	word32 s0_874
	word32 s1_875
	word32 a1_876
	word32 a5_877
	word32 s2_878
	word32 s3_879
	word32 s4_880
	word32 s5_881
	word32 s6_882
	word32 s7_883
	word32 s8_884
	word32 s9_885
	word32 s10_886
	word32 s11_887
	word32 a0_273
	word32 mstatus_281
	word32 a4_277
	word32 a3_276
	word32 a2_275
	word32 ra_282 = at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_serial_lock(ra, s1_80, a2_73, a3_74, a4_75, mstatus, dwLoc2C, dwLoc18, dwLoc08, dwArg30, dwArg34, s7, s5, dwArg7C, dwArgC8, dwArg0108, out s1_101, out a2_96, out a3_97, out a4_98, out s2_102, out s3_103), s1_101, s2_102 + -1792<i32>, a2_96, a3_97, a4_98, s3_103, mstatus, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, s5, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_812, out s1_130, out a0_813, out a1_814, out a2_121, out a3_122, out a4_123, out a5_815, out s2_816, out s3_134, out s4_817, out s5_818, out s6_819, out s7_820, out s8_821, out s9_822, out s10_823, out s11_824, out mstatus_127), s1_130, 0x230C5DCC<32>, a2_121, a3_122, a4_123, s3_134, mstatus_127, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, s5, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_825, out s1_161, out a0_826, out a1_827, out a2_152, out a3_153, out a4_154, out a5_828, out s2_164, out s3_165, out s4_829, out s5_830, out s6_831, out s7_832, out s8_833, out s9_834, out s10_835, out s11_836, out mstatus_158), s1_161, s2_164 + -1792<i32>, a2_152, a3_153, a4_154, s3_165, mstatus_158, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, s5, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_837, out s1_191, out a0_838, out a1_839, out a2_182, out a3_183, out a4_184, out a5_840, out s2_194, out s3_195, out s4_841, out s5_842, out s6_843, out s7_844, out s8_845, out s9_846, out s10_847, out s11_848, out mstatus_188), s1_191, s2_194 + -1792<i32>, a2_182, a3_183, a4_184, s3_195, mstatus_188, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, s5, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_849, out s1_221, out a0_850, out a1_851, out a2_852, out a3_213, out a4_214, out a5_853, out s2_854, out s3_225, out s4_226, out s5_855, out s6_856, out s7_857, out s8_858, out s9_859, out s10_860, out s11_861, out mstatus_218), s1_221, 0x230C5DD4<32>, CONVERT(Mem21[s4_226 + 8<i32>:uint16], uint16, word32), a3_213, a4_214, s3_225, mstatus_218, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, s5, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_862, out s1_254, out a0_863, out a1_864, out a2_245, out a3_246, out a4_247, out a5_865, out s2_257, out s3_258, out s4_866, out s5_867, out s6_868, out s7_869, out s8_870, out s9_871, out s10_872, out s11_873, out mstatus_251), s1_254, s2_257 + -1792<i32>, a2_245, a3_246, a4_247, s3_258, mstatus_251, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, s5, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_874, out s1_875, out a0_273, out a1_876, out a2_275, out a3_276, out a4_277, out a5_877, out s2_878, out s3_879, out s4_880, out s5_881, out s6_882, out s7_883, out s8_884, out s9_885, out s10_886, out s11_887, out mstatus_281)
l230805F8:
	word32 s0_307 = Mem21[a0_273 + 4<i32>:word32]
	word32 s1_941
	word32 s4_942
	ra_282 = at_data_output(ra_282, a0_273, a2_275, a3_276, a4_277, mstatus_281, dwLoc2C, dwLoc18, dwLoc08, dwArg08, dwArg30, dwArg34, s7, s5, dwArg7C, dwArgC8, dwArg0108, out s1_941, out a0_273, out a2_275, out a3_276, out a4_277, out s4_942, out mstatus_281)
	branch Mem21[s0_307:word32] != 0<32> l230805F8
l23080606:
	word32 a0_343
	word32 a3_346
	word32 a4_347
	word32 s4_354
	word32 a2_943
	word32 a5_944
	word32 s3_945
	word32 ra_365 = at_serial_unlock(ra_282, a4_277, mstatus_281, dwLoc2C, dwLoc18, dwLoc08, dwArg30, dwArg34, s7, s5, dwArg7C, dwArgC8, dwArg0108, dwArg0148, out a0_343, out a2_943, out a3_346, out a4_347, out a5_944, out s3_945, out s4_354)
	word32 a5_946
	altcp_recved(a0_343, 56<i32>, out a5_946)
	word32 s0_947
	word32 s1_948
	word32 a0_949
	word32 a1_950
	word32 a2_951
	word32 a3_952
	word32 a4_953
	word32 a5_954
	word32 a7_955
	word32 s2_956
	word32 s3_957
	word32 s4_958
	word32 s5_959
	word32 s6_960
	word32 s8_961
	word32 mstatus_962
	pbuf_free(ra_365, s4_354, a3_346, a4_347, s4_354, mstatus_281, dwArgF8, out s0_947, out s1_948, out a0_949, out a1_950, out a2_951, out a3_952, out a4_953, out a5_954, out a7_955, out s2_956, out s3_957, out s4_958, out s5_959, out s6_960, out s8_961, out mstatus_962)
l23080556:
	Mem403[s1_50 + 0x4201C3A0<32>:byte] = 0<8>
	word32 a2_407
	word32 a3_408
	word32 a4_409
	word32 mstatus_413
	word32 s1_416
	word32 s3_420
	word32 a2_439
	word32 a3_440
	word32 a4_441
	word32 mstatus_445
	word32 s1_448
	word32 s2_451
	word32 s3_452
	word32 a0_467
	word32 a1_468
	word32 a5_472
	word32 mstatus_475
	word32 s1_478
	word32 s2_481
	word32 s3_482
	word32 s5_484
	word32 s7_486
	word32 s0_888
	word32 a0_889
	word32 a1_890
	word32 a5_891
	word32 s2_892
	word32 s4_893
	word32 s5_894
	word32 s6_895
	word32 s7_896
	word32 s8_897
	word32 s9_898
	word32 s10_899
	word32 s11_900
	word32 s0_901
	word32 a0_902
	word32 a1_903
	word32 a5_904
	word32 s4_905
	word32 s5_906
	word32 s6_907
	word32 s7_908
	word32 s8_909
	word32 s9_910
	word32 s10_911
	word32 s11_912
	word32 s0_913
	word32 a2_914
	word32 a3_915
	word32 s4_916
	word32 s6_917
	word32 s8_918
	word32 s9_919
	word32 s10_920
	word32 s11_921
	word32 a4_471
	word32 ra_476 = at_dump_noend(at_dump_noend(at_dump_noend(ra, s1_50, 0x230C6900<32>, a2_44, a3_45, 0x4201C000<32>, s3_52, mstatus, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, s5, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_888, out s1_416, out a0_889, out a1_890, out a2_407, out a3_408, out a4_409, out a5_891, out s2_892, out s3_420, out s4_893, out s5_894, out s6_895, out s7_896, out s8_897, out s9_898, out s10_899, out s11_900, out mstatus_413), s1_416, 0x230C5DBC<32>, a2_407, a3_408, a4_409, s3_420, mstatus_413, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, s5, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_901, out s1_448, out a0_902, out a1_903, out a2_439, out a3_440, out a4_441, out a5_904, out s2_451, out s3_452, out s4_905, out s5_906, out s6_907, out s7_908, out s8_909, out s9_910, out s10_911, out s11_912, out mstatus_445), s1_448, s2_451 + -1792<i32>, a2_439, a3_440, a4_441, s3_452, mstatus_445, dwLoc2C, s2, s0, dwLoc18, dwArg2C, dwArg30, dwArg34, s5, dwArg78, dwArg7C, dwArgA8, dwArgB8, dwArgE8, out s0_913, out s1_478, out a0_467, out a1_468, out a2_914, out a3_915, out a4_471, out a5_472, out s2_481, out s3_482, out s4_916, out s5_484, out s6_917, out s7_486, out s8_918, out s9_919, out s10_920, out s11_921, out mstatus_475)
	word32 s0_496 = Mem403[a0_467 + 48<i32>:word32]
	word32 a5_922
	word32 a0_497 = altcp_close(a0_467, a5_472, out a5_922)
	word32 a5_500 = CONVERT(Mem403[s0_496 + 24<i32>:byte], byte, word32)
	Mem501[s0_496 + 48<i32>:word32] = 0<32>
	branch a5_500 != s5_484 l23080594
l2308058A:
	word32 s1_937
	word32 s2_938
	word32 s3_939
	word32 s4_940
	Mem526[altcp_tls_free_config(ra_476, s1_478, a0_497, a1_468, a5_500, s2_481, s3_482, mstatus_475, dwLoc2C, s6, s2, dwLoc0C, s7, dwArg74, dwArgA8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_937, out a4_471, out a5_500, out s2_938, out s3_939, out s4_940) + 52<i32>:word32] = 0<32>
l23080594:
	word32 s1_923
	word32 a0_924
	word32 a1_925
	word32 a2_926
	word32 a3_927
	word32 a4_928
	word32 a5_929
	word32 a7_930
	word32 s2_931
	word32 s3_932
	word32 s4_933
	word32 s5_934
	word32 s6_935
	word32 s8_936
	xQueueGenericSend(Mem528[s7_486 + 236<i32>:int32], 0<32>, 0<32>, a4_471, a5_500, mstatus_475, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_923, out a0_924, out a1_925, out a2_926, out a3_927, out a4_928, out a5_929, out a7_930, out s2_931, out s3_932, out s4_933, out s5_934, out s6_935, out s8_936)
l230805A2:
l2308051A:
	word32 a5_565
	word32 a4_570
	word32 s3_577
	word32 a2_775
	word32 a1_774
	word32 a0_773
	word32 s1_772
	word32 a3_776
	word32 a7_777
	word32 s2_778
	word32 s4_779
	word32 s5_780
	word32 s6_781
	word32 s7_782
	word32 s8_783
	word32 s9_784
	word32 s10_785
	word32 s11_786
	word32 t4_787
	printf(ra, 0x230C5E4C<32>, a3_45, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_772, out a0_773, out a1_774, out a2_775, out a3_776, out a4_570, out a5_565, out a7_777, out s2_778, out s3_577, out s4_779, out s5_780, out s6_781, out s7_782, out s8_783, out s9_784, out s10_785, out s11_786, out t4_787)
	word32 s1_788
	word32 a0_789
	word32 a1_790
	word32 a2_791
	word32 a3_792
	word32 a4_793
	word32 a5_794
	word32 a7_795
	word32 s2_796
	word32 s3_797
	word32 s4_798
	word32 s5_799
	word32 s6_800
	word32 s8_801
	xQueueGenericSend(Mem21[s3_577 + 236<i32>:int32], 0<32>, 0<32>, a4_570, a5_565, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_788, out a0_789, out a1_790, out a2_791, out a3_792, out a4_793, out a5_794, out a7_795, out s2_796, out s3_797, out s4_798, out s5_799, out s6_800, out s8_801)
l23080538:
	0<32> = dwArg0128
	return
tcp_receive_callback_exit:
l230804C6:
	__assert_func(ra, 0x230C5C04<32>, s2, s6, s7, s8, s9)


word32 get_romfs_file_content(word32 ra, word32 a0, word32 a1, word32 s2, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArg68, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cipstart
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0068:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a2 a4 a5 mstatus ra s0 s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
get_romfs_file_content_entry:
l23080626:
	word32 a0_40
	word32 a0_14
	word32 mstatus_38
	word32 a3_131
	word32 a2_15
	word32 a4_101
	word32 a5_102
	word32 s0_107
	word32 s1_108
	word32 s2_109
	word32 s3_110
	word32 s6_113
	word32 ra_106 = aos_open(ra, a0, s2, mstatus, dwLoc1C, a1, dwArg68, dwArgD8, dwArg0118, dwArg0158, out s0_107, out s1_108, out a0_14, out a2_15, out a3_131, out a4_101, out a5_102, out s2_109, out s3_110, out s6_113, out mstatus_38)
	branch a0_14 < 0<32> l23080652
l23080652:
	a0_40 = 0xFFFFFFFF<32>
l23080638:
	word32 a3_47
	word32 a4_48
	word32 a2_52
	word32 a0_132
	ra_106 = aos_ioctl(ra_106, a0_14, 1<32>, a1, a4_101, dwLoc20, dwArg24, out s0_107, out a0_132, out a2_52, out a3_47, out a4_48)
	s1_108 = aos_close(ra_106, s0_107, a2_52, a3_47, a4_48, s2_109, mstatus_38, dwArg18, out a2_15, out a4_101, out a5_102, out s2_109, out s3_110, out s6_113)
	a0_40 = 0<32>
l2308064A:
	s0Out = s0_107
	s1Out = s1_108
	a0Out = a0_40
	a2Out = a2_15
	a4Out = a4_101
	a5Out = a5_102
	s2Out = s2_109
	s3Out = s3_110
	s6Out = s6_113
	mstatusOut = mstatus_38
	return ra_106
get_romfs_file_content_exit:


void udp_send_data(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArg28, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_send_data_entry:
l23080656:
	branch a0 != 0<32> l23080686
l23080686:
	word32 a0_32 = Mem15[a5 + 4<i32>:word32]
	branch a5 != 0<32> l230806A2
l230806A2:
	word32 mstatus_287
	word32 a5_272
	word32 s0_266
	word32 a4_293
	word32 a3_292
	word32 a5_548
	vTaskEnterCritical(a4, mstatus, out a5_548)
	word32 s2_38 = Mem15[a0_32:int32]
	word32 s1_294 = 0x230C7000<32>
	branch CONVERT(Mem15[s2_38 + 0x4201C380<32>:byte], byte, word32) != 2<32> l230806D0
l230806CA:
	branch CONVERT(Mem15[s2_38 + 0x4201C3A0<32>:byte], byte, word32) != 0<32> l23080706
l23080706:
	word32 a4_52
	word32 a0_57
	word32 a1_67
	word32 s2_68
	word32 s4_70
	word32 s3_554
	word32 s6_556
	word32 s8_557
	word32 s5_555
	word32 a5_550
	word32 a5_552
	word32 a7_553
	word32 s0_551
	ra = pbuf_alloc(ra, a0_32, 0x230C7000<32>, 182<i32>, CONVERT(Mem15[0x4200F6EC<32>:uint16], uint16, word32), 640<i32>, vTaskExitCritical(a3, mstatus, out a4_52, out a5_550), a4_52, mstatus, s4, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_551, out s1_294, out a0_57, out a1_67, out a2, out a3_292, out a4_293, out a5_552, out a7_553, out s2_68, out s3_554, out s4_70, out s5_555, out s6_556, out s8_557, out mstatus)
	s3 = a0_57
	branch a0_57 == 0<32> l230806D4
l23080726:
	word32 mstatus_137
	word32 a4_133
	word32 a3_132
	word32 a2_131
	word32 s1_140
	word32 ra_138
	word32 a0_160
	word32 s3_144
	word32 a1_603
	word32 a2_604
	word32 a3_605
	word32 a4_606
	word32 a5_607
	word32 a6_608
	word32 a7_609
	memcpy(Mem15[a0_57 + 4<i32>:word32], a1_67, Mem15[s4_70:int32], out a1_603, out a2_604, out a3_605, out a4_606, out a5_607, out a6_608, out a7_609)
	word32 a0_101
	word32 a2_103
	word32 a3_104
	word32 a4_105
	word32 mstatus_109
	word32 s1_112
	word32 s3_114
	word32 ra_110 = udp_send(ra, Mem15[s2_68 + 48<i32>:int32], a0_57, s4_70, mstatus, dwLoc0C, dwArg08, dwArg28, dwArg58, s1, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s1_112, out a0_101, out a2_103, out a3_104, out a4_105, out s3_114, out mstatus_109)
	branch a0_101 == 0<32> l23080764
l23080764:
	word32 s0_610
	word32 a0_611
	word32 a1_612
	word32 a5_613
	word32 s2_614
	word32 s4_615
	word32 s5_616
	word32 s6_617
	word32 s7_618
	word32 s8_619
	word32 s9_620
	word32 s10_621
	word32 s11_622
	ra_138 = at_dump_noend(ra_110, s1_112, s1_112 + -1792<i32>, a2_103, a3_104, a4_105, s3_114, mstatus_109, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_610, out s1_140, out a0_611, out a1_612, out a2_131, out a3_132, out a4_133, out a5_613, out s2_614, out s3_144, out s4_615, out s5_616, out s6_617, out s7_618, out s8_619, out s9_620, out s10_621, out s11_622, out mstatus_137)
	a0_160 = 0x230C5F00<32>
l2308073E:
	word32 s0_623
	word32 a0_624
	word32 a1_625
	word32 a5_626
	word32 s2_627
	word32 s4_628
	word32 s5_629
	word32 s6_630
	word32 s7_631
	word32 s8_632
	word32 s9_633
	word32 s10_634
	word32 s11_635
	ra_138 = at_dump_noend(ra_110, s1_112, s1_112 + -1792<i32>, a2_103, a3_104, a4_105, s3_114, mstatus_109, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_623, out s1_140, out a0_624, out a1_625, out a2_131, out a3_132, out a4_133, out a5_626, out s2_627, out s3_144, out s4_628, out s5_629, out s6_630, out s7_631, out s8_632, out s9_633, out s10_634, out s11_635, out mstatus_137)
	a0_160 = 0x230C5EEC<32>
l23080750:
	word32 a2_206
	word32 a3_207
	word32 a4_208
	word32 mstatus_212
	word32 s1_215
	word32 s3_219
	word32 a3_237
	word32 a4_238
	word32 mstatus_242
	word32 s3_249
	word32 s4_250
	word32 s0_636
	word32 a0_637
	word32 a1_638
	word32 a5_639
	word32 s2_640
	word32 s4_641
	word32 s5_642
	word32 s6_643
	word32 s7_644
	word32 s8_645
	word32 s9_646
	word32 s10_647
	word32 s11_648
	word32 s0_649
	word32 s1_650
	word32 a0_651
	word32 a1_652
	word32 a2_653
	word32 a5_654
	word32 s2_655
	word32 s5_656
	word32 s6_657
	word32 s7_658
	word32 s8_659
	word32 s9_660
	word32 s10_661
	word32 s11_662
	word32 s1_663
	word32 a0_664
	word32 a1_665
	word32 a2_666
	word32 a3_667
	word32 a4_668
	word32 a7_669
	word32 s2_670
	word32 s3_671
	word32 s4_672
	word32 s5_673
	word32 s6_674
	word32 s8_675
	pbuf_free(at_dump_noend(at_dump_noend(ra_138, s1_140, a0_160, a2_131, a3_132, a4_133, s3_144, mstatus_137, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_636, out s1_215, out a0_637, out a1_638, out a2_206, out a3_207, out a4_208, out a5_639, out s2_640, out s3_219, out s4_641, out s5_642, out s6_643, out s7_644, out s8_645, out s9_646, out s10_647, out s11_648, out mstatus_212), s1_215, s1_215 + -1792<i32>, a2_206, a3_207, a4_208, s3_219, mstatus_212, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_649, out s1_650, out a0_651, out a1_652, out a2_653, out a3_237, out a4_238, out a5_654, out s2_655, out s3_249, out s4_250, out s5_656, out s6_657, out s7_658, out s8_659, out s9_660, out s10_661, out s11_662, out mstatus_242), s3_249, a3_237, a4_238, s4_250, mstatus_242, dwArg0108, out s0_266, out s1_663, out a0_664, out a1_665, out a2_666, out a3_667, out a4_668, out a5_272, out a7_669, out s2_670, out s3_671, out s4_672, out s5_673, out s6_674, out s8_675, out mstatus_287)
l230806D0:
	word32 a5_549
	a3_292 = vTaskExitCritical(a3, mstatus, out a4_293, out a5_549)
l230806D4:
	word32 a2_313
	word32 a3_314
	word32 a4_315
	word32 mstatus_319
	word32 s1_322
	word32 s3_326
	word32 a2_345
	word32 a3_346
	word32 a4_347
	word32 mstatus_351
	word32 s1_354
	word32 s3_358
	word32 s7_598
	word32 s6_597
	word32 s5_596
	word32 s4_595
	word32 s3_594
	word32 s2_593
	word32 a4_592
	word32 a3_591
	word32 a2_590
	word32 a1_589
	word32 a0_588
	word32 s1_587
	word32 s11_586
	word32 s10_585
	word32 s8_583
	word32 s9_584
	word32 s6_581
	word32 s7_582
	word32 s4_579
	word32 s5_580
	word32 a5_577
	word32 s2_578
	word32 a0_575
	word32 a1_576
	word32 s11_573
	word32 s0_574
	word32 s9_571
	word32 s10_572
	word32 s7_569
	word32 s8_570
	word32 s5_567
	word32 s6_568
	word32 s2_565
	word32 s4_566
	word32 a1_563
	word32 a5_564
	word32 s0_561
	word32 a0_562
	word32 s8_599
	word32 s9_600
	word32 s10_601
	word32 s11_602
	at_dump_noend(at_dump_noend(at_dump_noend(ra, s1_294, s1_294 + -1792<i32>, a2, a3_292, a4_293, s3, mstatus, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_561, out s1_322, out a0_562, out a1_563, out a2_313, out a3_314, out a4_315, out a5_564, out s2_565, out s3_326, out s4_566, out s5_567, out s6_568, out s7_569, out s8_570, out s9_571, out s10_572, out s11_573, out mstatus_319), s1_322, 0x230C5EEC<32>, a2_313, a3_314, a4_315, s3_326, mstatus_319, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_574, out s1_354, out a0_575, out a1_576, out a2_345, out a3_346, out a4_347, out a5_577, out s2_578, out s3_358, out s4_579, out s5_580, out s6_581, out s7_582, out s8_583, out s9_584, out s10_585, out s11_586, out mstatus_351), s1_354, s1_354 + -1792<i32>, a2_345, a3_346, a4_347, s3_358, mstatus_351, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_266, out s1_587, out a0_588, out a1_589, out a2_590, out a3_591, out a4_592, out a5_272, out s2_593, out s3_594, out s4_595, out s5_596, out s6_597, out s7_598, out s8_599, out s9_600, out s10_601, out s11_602, out mstatus_287)
l230806F2:
l23080702_thunk_free:
	word32 a2_559
	word32 a5_560
	word32 a0_558
	free(s0_266, dwArg48, a5_272, mstatus_287, dwArg0158, dwArg0198, out a0_558, out a2_559, out a5_560)
	return
udp_send_data_exit:
l2308068C:
l23080666:
l2308067A:
	__assert_func(ra, 0x230C5C78<32>, s2, s6, s7, s8, s9)


void tcp_err_callback(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s3, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg24, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0188, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0024:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_err_callback_entry:
l23080778:
	branch a0 <= 4<32> l230807A6
l230807A6:
	word32 a2_34
	word32 a3_35
	word32 a4_36
	word32 mstatus_40
	word32 s1_43
	word32 s3_47
	word32 a2_66
	word32 a3_67
	word32 a4_68
	word32 mstatus_72
	word32 s1_75
	word32 s3_79
	word32 a2_96
	word32 a3_97
	word32 a4_98
	word32 a5_99
	word32 mstatus_102
	word32 s7_263
	word32 s6_262
	word32 s5_261
	word32 s4_260
	word32 s0_255
	word32 a0_256
	word32 a1_257
	word32 a5_258
	word32 s2_259
	word32 s8_264
	word32 s9_265
	word32 s10_266
	word32 s11_267
	word32 s0_268
	word32 a0_269
	word32 a1_270
	word32 a5_271
	word32 s2_272
	word32 s4_273
	word32 s5_274
	word32 s6_275
	word32 s7_276
	word32 s8_277
	word32 s9_278
	word32 s10_279
	word32 s11_280
	word32 s0_281
	word32 s1_282
	word32 a0_283
	word32 a1_284
	word32 s2_285
	word32 s3_286
	word32 s4_287
	word32 s5_288
	word32 s6_289
	word32 s7_290
	word32 s8_291
	word32 s9_292
	word32 s10_293
	word32 s11_294
	word32 ra_103 = at_dump_noend(at_dump_noend(at_dump_noend(ra, 0x230C7000<32>, 0x230C6900<32>, a2, a3, a4, s3, mstatus, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_255, out s1_43, out a0_256, out a1_257, out a2_34, out a3_35, out a4_36, out a5_258, out s2_259, out s3_47, out s4_260, out s5_261, out s6_262, out s7_263, out s8_264, out s9_265, out s10_266, out s11_267, out mstatus_40), s1_43, 0x230C5DAC<32>, a2_34, a3_35, a4_36, s3_47, mstatus_40, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_268, out s1_75, out a0_269, out a1_270, out a2_66, out a3_67, out a4_68, out a5_271, out s2_272, out s3_79, out s4_273, out s5_274, out s6_275, out s7_276, out s8_277, out s9_278, out s10_279, out s11_280, out mstatus_72), s1_75, s1_75 + -1792<i32>, a2_66, a3_67, a4_68, s3_79, mstatus_72, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_281, out s1_282, out a0_283, out a1_284, out a2_96, out a3_97, out a4_98, out a5_99, out s2_285, out s3_286, out s4_287, out s5_288, out s6_289, out s7_290, out s8_291, out s9_292, out s10_293, out s11_294, out mstatus_102)
	word32 a0_126
	word32 a1_127
	word32 s2_135
	word32 s3_136
	word32 a2_295
	word32 a3_296
	word32 a4_297
	word32 a5_298
	word32 s4_299
	word32 s8_300
	word32 s1_134
	word32 s0_133 = xQueueSemaphoreTake(Mem9[0x420280EC<32>:int32], 0xFFFFFFFF<32>, a2_96, a3_97, a4_98, a5_99, mstatus_102, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_134, out a0_126, out a1_127, out a2_295, out a3_296, out a4_297, out a5_298, out s2_135, out s3_136, out s4_299, out s8_300)
	word32 a4_146 = CONVERT(Mem9[s0_133 + 0x4201C380<32>:byte], byte, word32)
	Mem147[s0_133 + 0x4201C3A0<32>:byte] = 0<8>
	Mem148[s0_133 + 0x4201C398<32>:word32] = 0<32>
	word32 a5_149 = 3<32>
	branch a4_146 != 3<32> l23080806
l230807FC:
	word32 s2_301
	word32 s3_302
	word32 s4_303
	Mem174[altcp_tls_free_config(ra_103, s1_134, a0_126, a1_127, 3<32>, s2_135, s3_136, mstatus_102, s0, dwLoc08, dwArg00, dwArg14, ra, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0158, dwArg0168, dwArg0188, out s1_134, out a4_146, out a5_149, out s2_301, out s3_302, out s4_303) + 52<i32>:word32] = 0<32>
l23080806:
	word32 a0_179 = Mem176[s1_134 + 236<i32>:int32]
l23080818_thunk_xQueueGenericSend:
	word32 s1_304
	word32 a0_305
	word32 a1_306
	word32 a2_307
	word32 a3_308
	word32 a4_309
	word32 a5_310
	word32 a7_311
	word32 s2_312
	word32 s3_313
	word32 s4_314
	word32 s5_315
	word32 s6_316
	word32 s8_317
	xQueueGenericSend(a0_179, 0<32>, 0<32>, a4_146, a5_149, mstatus_102, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_304, out a0_305, out a1_306, out a2_307, out a3_308, out a4_309, out a5_310, out a7_311, out s2_312, out s3_313, out s4_314, out s5_315, out s6_316, out s8_317)
	return
tcp_err_callback_exit:
l23080786:
	__assert_func(ra, 0x230C5C30<32>, s2, s6, s7, s8, s9)


void udp_receive_callback(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgAC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
udp_receive_callback_entry:
l2308081C:
	word32 s4_292
	word32 a3_284
	word32 a4_285
	word32 ra_303
	word32 s0_14 = a2
	branch a0 <= 4<32> l2308084A
l2308084A:
	word32 a5_452
	vTaskEnterCritical(a4, mstatus, out a5_452)
	branch CONVERT(Mem11[a0 + 0x4201C3A0<32>:byte], byte, word32) != 0<32> l2308087C
l2308087C:
	word32 a4_30
	word32 a2_34
	word32 a3_35
	word32 a4_36
	word32 s1_39
	word32 s3_41
	word32 a2_59
	word32 a3_60
	word32 a4_61
	word32 mstatus_65
	word32 s1_68
	word32 s3_72
	word32 a2_90
	word32 a3_91
	word32 a4_92
	word32 mstatus_96
	word32 s1_99
	word32 s3_103
	word32 a2_120
	word32 a3_121
	word32 a4_122
	word32 mstatus_126
	word32 s1_129
	word32 s3_133
	word32 a3_151
	word32 a4_152
	word32 mstatus_156
	word32 s0_158
	word32 s1_159
	word32 s3_163
	word32 a2_183
	word32 a3_184
	word32 a4_185
	word32 mstatus_189
	word32 s1_192
	word32 s3_196
	word32 a5_485
	word32 s2_486
	word32 s0_487
	word32 a0_488
	word32 a1_489
	word32 a5_490
	word32 s2_491
	word32 s4_492
	word32 s5_493
	word32 s6_494
	word32 s7_495
	word32 s8_496
	word32 s9_497
	word32 s10_498
	word32 s11_499
	word32 s0_500
	word32 a0_501
	word32 a1_502
	word32 a5_503
	word32 s2_504
	word32 s4_505
	word32 s5_506
	word32 s6_507
	word32 s7_508
	word32 s8_509
	word32 s9_510
	word32 s10_511
	word32 s11_512
	word32 s0_513
	word32 a0_514
	word32 a1_515
	word32 a5_516
	word32 s2_517
	word32 s4_518
	word32 s5_519
	word32 s6_520
	word32 s7_521
	word32 s8_522
	word32 s9_523
	word32 s10_524
	word32 s11_525
	word32 a0_526
	word32 a1_527
	word32 a2_528
	word32 a5_529
	word32 s2_530
	word32 s4_531
	word32 s5_532
	word32 s6_533
	word32 s7_534
	word32 s8_535
	word32 s9_536
	word32 s10_537
	word32 s11_538
	word32 s0_539
	word32 a0_540
	word32 a1_541
	word32 a5_542
	word32 s2_543
	word32 s4_544
	word32 s5_545
	word32 s6_546
	word32 s7_547
	word32 s8_548
	word32 s9_549
	word32 s10_550
	word32 s11_551
	word32 s1_552
	word32 a1_553
	word32 a5_554
	word32 s2_555
	word32 s3_556
	word32 s4_557
	word32 s5_558
	word32 s6_559
	word32 s7_560
	word32 s8_561
	word32 s9_562
	word32 s10_563
	word32 s11_564
	word32 a0_211
	word32 a4_215
	word32 a3_214
	word32 a2_213
	word32 ra_220 = at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_dump_noend(at_serial_lock(ra, 0x230C7000<32>, a2, vTaskExitCritical(a3, mstatus, out a4_30, out a5_485), a4_30, mstatus, s0, dwArg08, dwArg18, dwArg50, dwArg54, ra, dwArg78, dwArg9C, dwArgE8, dwArg0128, out s1_39, out a2_34, out a3_35, out a4_36, out s2_486, out s3_41), s1_39, s1_39 + -1792<i32>, a2_34, a3_35, a4_36, s3_41, mstatus, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_487, out s1_68, out a0_488, out a1_489, out a2_59, out a3_60, out a4_61, out a5_490, out s2_491, out s3_72, out s4_492, out s5_493, out s6_494, out s7_495, out s8_496, out s9_497, out s10_498, out s11_499, out mstatus_65), s1_68, 0x230C5DCC<32>, a2_59, a3_60, a4_61, s3_72, mstatus_65, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_500, out s1_99, out a0_501, out a1_502, out a2_90, out a3_91, out a4_92, out a5_503, out s2_504, out s3_103, out s4_505, out s5_506, out s6_507, out s7_508, out s8_509, out s9_510, out s10_511, out s11_512, out mstatus_96), s1_99, s1_99 + -1792<i32>, a2_90, a3_91, a4_92, s3_103, mstatus_96, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_513, out s1_129, out a0_514, out a1_515, out a2_120, out a3_121, out a4_122, out a5_516, out s2_517, out s3_133, out s4_518, out s5_519, out s6_520, out s7_521, out s8_522, out s9_523, out s10_524, out s11_525, out mstatus_126), s1_129, s1_129 + -1792<i32>, a2_120, a3_121, a4_122, s3_133, mstatus_126, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_158, out s1_159, out a0_526, out a1_527, out a2_528, out a3_151, out a4_152, out a5_529, out s2_530, out s3_163, out s4_531, out s5_532, out s6_533, out s7_534, out s8_535, out s9_536, out s10_537, out s11_538, out mstatus_156), s1_159, 0x230C5DD4<32>, CONVERT(Mem11[s0_158 + 8<i32>:uint16], uint16, word32), a3_151, a4_152, s3_163, mstatus_156, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_539, out s1_192, out a0_540, out a1_541, out a2_183, out a3_184, out a4_185, out a5_542, out s2_543, out s3_196, out s4_544, out s5_545, out s6_546, out s7_547, out s8_548, out s9_549, out s10_550, out s11_551, out mstatus_189), s1_192, s1_192 + -1792<i32>, a2_183, a3_184, a4_185, s3_196, mstatus_189, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_14, out s1_552, out a0_211, out a1_553, out a2_213, out a3_214, out a4_215, out a5_554, out s2_555, out s3_556, out s4_557, out s5_558, out s6_559, out s7_560, out s8_561, out s9_562, out s10_563, out s11_564, out mstatus)
l230808C8:
	word32 s1_262
	word32 s4_583
	ra_220 = at_data_output(ra_220, a0_211, a2_213, a3_214, a4_215, mstatus, s0, dwArg08, dwArg18, dwArg28, dwArg50, dwArg54, ra, dwArg78, dwArg9C, dwArgE8, dwArg0128, out s1_262, out a0_211, out a2_213, out a3_214, out a4_215, out s4_583, out mstatus)
	branch Mem11[s1_262:word32] != 0<32> l230808C8
l230808D6:
	word32 a0_584
	word32 a2_585
	word32 a5_586
	word32 s3_587
	ra_303 = at_serial_unlock(ra_220, a4_215, mstatus, s0, dwArg08, dwArg18, dwArg50, dwArg54, ra, dwArg78, dwArg9C, dwArgE8, dwArg0128, dwArg0168, out a0_584, out a2_585, out a3_284, out a4_285, out a5_586, out s3_587, out s4_292)
l23080868:
	word32 a4_565
	word32 a5_566
	word32 s1_567
	word32 a0_568
	word32 a1_569
	word32 a2_570
	word32 a5_571
	word32 a7_572
	word32 s2_573
	word32 s3_574
	word32 s5_575
	word32 s6_576
	word32 s7_577
	word32 s8_578
	word32 s9_579
	word32 s10_580
	word32 s11_581
	word32 t4_582
	ra_303 = printf(ra, 0x230C5E4C<32>, vTaskExitCritical(a3, mstatus, out a4_565, out a5_566), dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_567, out a0_568, out a1_569, out a2_570, out a3_284, out a4_285, out a5_571, out a7_572, out s2_573, out s3_574, out s4_292, out s5_575, out s6_576, out s7_577, out s8_578, out s9_579, out s10_580, out s11_581, out t4_582)
l2308082E:
	word32 s2_459
	word32 a7_458
	word32 a5_457
	word32 a2_456
	word32 a0_454
	word32 s1_453
	word32 s11_467
	word32 s3_460
	word32 s9_465
	word32 s10_466
	word32 s7_463
	word32 s8_464
	word32 s5_461
	word32 s6_462
	word32 a1_455
	word32 t4_468
	ra_303 = printf(ra, 0x230C5EA8<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_453, out a0_454, out a1_455, out a2_456, out a3_284, out a4_285, out a5_457, out a7_458, out s2_459, out s3_460, out s4_292, out s5_461, out s6_462, out s7_463, out s8_464, out s9_465, out s10_466, out s11_467, out t4_468)
l2308083A:
	0<32> = dwArg38
l23080846_thunk_pbuf_free:
	word32 s0_469
	word32 s1_470
	word32 a0_471
	word32 a1_472
	word32 a2_473
	word32 a3_474
	word32 a4_475
	word32 a5_476
	word32 a7_477
	word32 s2_478
	word32 s3_479
	word32 s4_480
	word32 s5_481
	word32 s6_482
	word32 s8_483
	word32 mstatus_484
	pbuf_free(ra_303, s0_14, a3_284, a4_285, s4_292, mstatus, dwArg0128, out s0_469, out s1_470, out a0_471, out a1_472, out a2_473, out a3_474, out a4_475, out a5_476, out a7_477, out s2_478, out s3_479, out s4_480, out s5_481, out s6_482, out s8_483, out mstatus_484)
	return
udp_receive_callback_exit:


void tcp_accept_callback(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
tcp_accept_callback_entry:
l230808DC:
	word32 a0_286
	word32 s0_21 = a1
	branch a2 == 0<32> l2308091C
l2308091C:
	word32 s1_40
	word32 s4_43
	word32 s8_480
	word32 a5_477
	word32 s2_478
	word32 s3_479
	word32 a4_476
	word32 a1_473
	word32 a2_474
	word32 a0_472
	word32 a3_475
	word32 s0_39 = xQueueSemaphoreTake(Mem19[0x420280EC<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, a5, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_40, out a0_472, out a1_473, out a2_474, out a3_475, out a4_476, out a5_477, out s2_478, out s3_479, out s4_43, out s8_480)
	word32 a5_47 = s1_40 + 816<i32> + 56<i32>
	word32 s2_48 = 0<32>
	word32 a4_261 = 5<32>
l2308093C:
	branch CONVERT(Mem19[a5_47 + 0<i32>:byte], byte, word32) != 0<32> l23080982
l23080982:
	s2_48 = s2_48 + 1<32>
	a5_47 = a5_47 + 56<i32>
	branch s2_48 != 5<32> l2308093C
l2308098C:
l23080942:
	word32 a5_486
	word32 a1_483
	word32 a2_484
	word32 a3_485
	word32 t1_481
	word32 a0_482
	ra = memset(ra, s2_48 + 0x3C<32> + (s1_40 + 816<i32>), 0<32>, 56<i32>, out t1_481, out a0_482, out a1_483, out a2_484, out a3_485, out a4_261, out a5_486)
l23080958:
	word32 s3_77 = s2_48 + 56<i32>
	word32 s5_79 = s1_40 + 816<i32> + s3_77
	word32 a5_81 = CONVERT(Mem19[s5_79 + 56<i32>:byte], byte, word32)
	branch a5_81 == 0<32> l2308098E
l2308098E:
	word32 s1_82 = Mem19[a5_81:word32]
	Mem85[s5_79 + 48<i32>:word32] = s0_39
	Mem88[a5_81 + 1<32>:word32] = s1_82
	Mem90[s5_79 + 56<i32>:byte] = 3<8>
	Mem92[s5_79 + 24<i32>:byte] = 1<8>
	altcp_get_ip(s0_39, 1<32>)
	word32 a4_102
	word32 a5_103
	word32 a3_487
	ip4addr_ntoa_r(s3_77 + 4<i32> + s1_82, 0x10<32>, out a3_487, out a4_102, out a5_103)
	word32 a5_117
	Mem118[s5_79 + 20<i32>:word32] = altcp_get_port(s0_39, a5_103, out a5_117)
	word32 a2_131
	word32 a3_132
	word32 a4_133
	word32 s3_140
	word32 s6_496
	word32 s8_497
	word32 s4_494
	word32 s5_495
	word32 a7_492
	word32 s2_493
	word32 a1_490
	word32 a5_491
	word32 s1_488
	word32 a0_489
	xQueueGenericSend(Mem118[s4_43 + 236<i32>:int32], 0<32>, 0<32>, a4_102, a5_117, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_488, out a0_489, out a1_490, out a2_131, out a3_132, out a4_133, out a5_491, out a7_492, out s2_493, out s3_140, out s4_494, out s5_495, out s6_496, out s8_497)
	word32 s4_516
	word32 s7_519
	word32 s6_518
	word32 s9_521
	word32 s8_520
	word32 a2_157
	word32 a3_158
	word32 a4_159
	word32 mstatus_163
	word32 s1_166
	word32 s3_170
	word32 a2_189
	word32 a3_190
	word32 a4_191
	word32 mstatus_195
	word32 s1_198
	word32 s3_202
	word32 s0_227
	word32 s2_231
	word32 s5_517
	word32 a5_514
	word32 s2_515
	word32 a0_512
	word32 a1_513
	word32 s11_510
	word32 s0_511
	word32 s9_508
	word32 s10_509
	word32 s7_506
	word32 s8_507
	word32 s5_504
	word32 s6_505
	word32 s2_502
	word32 s4_503
	word32 a1_500
	word32 a5_501
	word32 s0_498
	word32 a0_499
	word32 s10_522
	word32 s11_523
	word32 s1_524
	word32 a0_525
	word32 a1_526
	word32 a2_527
	word32 a3_528
	word32 a4_529
	word32 a5_530
	word32 s3_531
	word32 s4_532
	word32 s5_533
	word32 s6_534
	word32 s7_535
	word32 s8_536
	word32 s9_537
	word32 s10_538
	word32 s11_539
	word32 mstatus_540
	at_dump_noend(at_dump_noend(at_dump_noend(ra, 0x230C7000<32>, 0x230C6900<32>, a2_131, a3_132, a4_133, s3_140, mstatus, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_498, out s1_166, out a0_499, out a1_500, out a2_157, out a3_158, out a4_159, out a5_501, out s2_502, out s3_170, out s4_503, out s5_504, out s6_505, out s7_506, out s8_507, out s9_508, out s10_509, out s11_510, out mstatus_163), s1_166, 0x230C5D98<32>, a2_157, a3_158, a4_159, s3_170, mstatus_163, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_511, out s1_198, out a0_512, out a1_513, out a2_189, out a3_190, out a4_191, out a5_514, out s2_515, out s3_202, out s4_516, out s5_517, out s6_518, out s7_519, out s8_520, out s9_521, out s10_522, out s11_523, out mstatus_195), s1_198, s1_198 + -1792<i32>, a2_189, a3_190, a4_191, s3_202, mstatus_195, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_227, out s1_524, out a0_525, out a1_526, out a2_527, out a3_528, out a4_529, out a5_530, out s2_231, out s3_531, out s4_532, out s5_533, out s6_534, out s7_535, out s8_536, out s9_537, out s10_538, out s11_539, out mstatus_540)
	altcp_arg(s0_227, s2_231)
	altcp_recv(s0_227, 0x230804AC<32>)
	altcp_sent(s0_227, 0x23080254<32>)
	altcp_err(s0_227, 0x23080778<32>)
l2308096A:
	word32 s1_541
	word32 a0_542
	word32 a1_543
	word32 a2_544
	word32 a4_545
	word32 a5_546
	word32 a7_547
	word32 s2_548
	word32 s3_549
	word32 s4_550
	word32 s5_551
	word32 s6_552
	word32 s8_553
	s0_21 = xQueueGenericSend(Mem19[s4_43 + 236<i32>:int32], 0<32>, 0<32>, a4_261, a5_81, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_541, out a0_542, out a1_543, out a2_544, out a3, out a4_545, out a5_546, out a7_547, out s2_548, out s3_549, out s4_550, out s5_551, out s6_552, out s8_553)
	a0_286 = 0x230C5D50<32>
l230808F2:
	a0_286 = 0x230C5D40<32>
l230808FA:
	word32 a5_295
	word32 s1_554
	word32 a0_555
	word32 a1_556
	word32 a2_557
	word32 a3_558
	word32 a4_559
	word32 a7_560
	word32 s2_561
	word32 s3_562
	word32 s4_563
	word32 s5_564
	word32 s6_565
	word32 s7_566
	word32 s8_567
	word32 s9_568
	word32 s10_569
	word32 s11_570
	word32 t4_571
	printf(ra, a0_286, a3, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_554, out a0_555, out a1_556, out a2_557, out a3_558, out a4_559, out a5_295, out a7_560, out s2_561, out s3_562, out s4_563, out s5_564, out s6_565, out s7_566, out s8_567, out s9_568, out s10_569, out s11_570, out t4_571)
	word32 a5_572
	altcp_close(s0_21, a5_295, out a5_572)
l23080906:
	0<32> = dwArgA8
	return
tcp_accept_callback_exit:


void tcp_send_data(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcp_send_data_entry:
l23080A28:
	branch a0 != 0<32> l23080A52
l23080A52:
	word32 a0_26 = Mem9[a5 + 4<i32>:word32]
	branch a5 != 0<32> l23080A6E
l23080A6E:
	word32 a5_135
	word32 s0_140
	word32 a5_256
	vTaskEnterCritical(a4, mstatus, out a5_256)
	branch CONVERT(Mem9[s1 + 0x4201C380<32>:byte], byte, word32) == 2<32> l23080A96
l23080A90:
	branch CONVERT(Mem9[s1 + 0x4201C3A0<32>:byte], byte, word32) != 0<32> l23080ACA
l23080ACA:
	word32 a4_300
	word32 a5_301
	vTaskExitCritical(a3, mstatus, out a4_300, out a5_301)
	s0_140 = Mem9[a1 + 4<i32>:word32]
	altcp_write(a0_26, 0x4200F000<32>, out a5_135)
l23080A96:
	word32 a4_58
	word32 a2_70
	word32 a3_71
	word32 a4_72
	word32 mstatus_76
	word32 s1_79
	word32 s3_83
	word32 a2_102
	word32 a3_103
	word32 a4_104
	word32 mstatus_108
	word32 s1_111
	word32 s3_115
	word32 a5_257
	word32 s0_258
	word32 a0_259
	word32 a1_260
	word32 a5_261
	word32 s2_262
	word32 s4_263
	word32 s5_264
	word32 s6_265
	word32 s7_266
	word32 s8_267
	word32 s9_268
	word32 s10_269
	word32 s11_270
	word32 s0_271
	word32 a0_272
	word32 a1_273
	word32 a5_274
	word32 s2_275
	word32 s4_276
	word32 s5_277
	word32 s6_278
	word32 s7_279
	word32 s8_280
	word32 s9_281
	word32 s10_282
	word32 s11_283
	word32 s1_284
	word32 a0_285
	word32 a1_286
	word32 a2_287
	word32 a3_288
	word32 a4_289
	word32 s2_290
	word32 s3_291
	word32 s4_292
	word32 s5_293
	word32 s6_294
	word32 s7_295
	word32 s8_296
	word32 s9_297
	word32 s10_298
	word32 s11_299
	at_dump_noend(at_dump_noend(at_dump_noend(ra, 0x230C7000<32>, 0x230C6900<32>, a2, vTaskExitCritical(a3, mstatus, out a4_58, out a5_257), a4_58, s3, mstatus, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_258, out s1_79, out a0_259, out a1_260, out a2_70, out a3_71, out a4_72, out a5_261, out s2_262, out s3_83, out s4_263, out s5_264, out s6_265, out s7_266, out s8_267, out s9_268, out s10_269, out s11_270, out mstatus_76), s1_79, 0x230C5EEC<32>, a2_70, a3_71, a4_72, s3_83, mstatus_76, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_271, out s1_111, out a0_272, out a1_273, out a2_102, out a3_103, out a4_104, out a5_274, out s2_275, out s3_115, out s4_276, out s5_277, out s6_278, out s7_279, out s8_280, out s9_281, out s10_282, out s11_283, out mstatus_108), s1_111, s1_111 + -1792<i32>, a2_102, a3_103, a4_104, s3_115, mstatus_108, s0, dwArg00, dwArg04, dwArg08, dwArg4C, dwArg50, dwArg54, dwArg78, dwArg98, dwArg9C, dwArgC8, dwArgD8, dwArg0108, out s0_140, out s1_284, out a0_285, out a1_286, out a2_287, out a3_288, out a4_289, out a5_135, out s2_290, out s3_291, out s4_292, out s5_293, out s6_294, out s7_295, out s8_296, out s9_297, out s10_298, out s11_299, out mstatus)
l23080ABC:
l23080AC6_thunk_free:
	word32 a0_302
	word32 a2_303
	word32 a5_304
	free(s0_140, dwArg10, a5_135, mstatus, dwArg0158, dwArg0198, out a0_302, out a2_303, out a5_304)
	return
tcp_send_data_exit:
l23080A58:
l23080A32:
l23080A46:
	__assert_func(ra, 0x230C5C68<32>, s2, s6, s7, s8, s9)


void bl_cipstatus(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg88, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: a1 a3 a4 a7 mstatus ra s10 s11 s7 s9 sp t0 t1 t4 t5 t6
bl_cipstatus_entry:
l23080AE2:
	word32 s0_131 = 0x4201C330<32>
	word32 s1_132 = 0<32>
	word32 s4_137 = 0x230C7000<32>
	word32 s3_136 = 0x230C5BF8<32>
l23080B18:
	branch CONVERT(Mem22[s0_131 + 56<i32>:byte], byte, word32) == 0<32> l23080B54
l23080B1E:
	word32 a4_47
	word32 mstatus_51
	word32 s0_53
	word32 s1_54
	word32 s2_57
	word32 s3_58
	word32 s5_60
	word32 s6_61
	word32 s11_304
	word32 s10_303
	word32 s9_302
	word32 s8_301
	word32 s7_300
	word32 s4_299
	word32 a5_298
	word32 a3_297
	word32 a2_296
	word32 a0_294
	word32 a1_295
	word32 ra_52 = at_dump_noend(ra, s1_132, s4_137 + -1792<i32>, a2, a3, a4, s3_136, mstatus, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_53, out s1_54, out a0_294, out a1_295, out a2_296, out a3_297, out a4_47, out a5_298, out s2_57, out s3_58, out s4_299, out s5_60, out s6_61, out s7_300, out s8_301, out s9_302, out s10_303, out s11_304, out mstatus_51)
	branch s5_60 <u (CONVERT(Mem22[s0_53 + 24<i32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>) l23080B3C
l23080B36:
l23080B3C:
	word32 a2_93
	word32 a3_94
	word32 a4_95
	word32 mstatus_99
	word32 s1_102
	word32 s3_106
	word32 s4_107
	word32 a5_308
	word32 a1_307
	word32 a0_306
	word32 s0_305
	word32 s2_309
	word32 s5_310
	word32 s6_311
	word32 s7_312
	word32 s8_313
	word32 s9_314
	word32 s10_315
	word32 s11_316
	word32 a0_317
	word32 a1_318
	word32 a5_319
	word32 s2_320
	word32 s5_321
	word32 s6_322
	word32 s7_323
	word32 s8_324
	word32 s9_325
	word32 s10_326
	word32 s11_327
	ra = at_dump_noend(at_dump_noend(ra_52, s1_54, s6_61 + -728<i32>, s2_57, Mem22[a4_47 + 20<i32>:word32] + 4<i32>, a4_47, s3_58, mstatus_51, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_305, out s1_102, out a0_306, out a1_307, out a2_93, out a3_94, out a4_95, out a5_308, out s2_309, out s3_106, out s4_107, out s5_310, out s6_311, out s7_312, out s8_313, out s9_314, out s10_315, out s11_316, out mstatus_99), s1_102, s4_107 + -1792<i32>, a2_93, a3_94, a4_95, s3_106, mstatus_99, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_131, out s1_132, out a0_317, out a1_318, out a2, out a3, out a4, out a5_319, out s2_320, out s3_136, out s4_137, out s5_321, out s6_322, out s7_323, out s8_324, out s9_325, out s10_326, out s11_327, out mstatus)
l23080B54:
	s1_132 = s1_132 + 1<32>
	s0_131 = s0_131 + 56<i32>
	branch s1_132 != 5<32> l23080B18
l23080B60:
	0<32> = dwArgA8
	return
bl_cipstatus_exit:


void bl_cipstart(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a4, word32 s3, word32 s5, word32 s6, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bl_cipstart_entry:
l23080B76:
	word32 s4_23 = Mem21[a0 + 8<i32>:int32]
	branch s4_23 > 4<32> l23080F3A
l23080F3A:
l23080B94:
	word32 a4_42
	word32 a5_43
	word32 s3_48
	word32 a0_1695
	word32 s1_1694
	word32 a3_1698
	word32 a1_1696
	word32 a2_1697
	word32 s2_1699
	word32 s4_1700
	word32 s8_1701
	word32 s0_45 = xQueueSemaphoreTake(Mem21[0x420280EC<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, 4<32>, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, out s1_1694, out a0_1695, out a1_1696, out a2_1697, out a3_1698, out a4_42, out a5_43, out s2_1699, out s3_48, out s4_1700, out s8_1701)
	word32 s7_136 = 0x42028000<32>
	word32 s2_131 = 0x42028000<32>
	word32 s3_132 = s3_48 + 816<i32>
	word32 s6_135 = s4_23 + 0x4201C368<32>
	word32 s1_128 = CONVERT(Mem21[s4_23 + 0x4201C3A0<32>:byte], byte, word32)
	branch s1_128 == 0<32> l23080C0C
l23080C0C:
	word32 a5_108
	word32 a4_106
	word32 a0_111
	word32 ra_127
	word32 a5_116
	word32 s5_134 = s4_23 + 0x3C<32> + (s3_48 + 816<i32>)
	word32 a2_1702
	word32 a3_1703
	word32 a4_1704
	word32 a5_1705
	strncpy(s5_134, s0_45 + 16<i32>, 0xF<32>, out a2_1702, out a3_1703, out a4_1704, out a5_1705)
	Mem74[s4_23 + 0x4201C37C<32>:word32] = Mem21[s0_45 + 272<i32>:int32]
	ra_127 = ra
	word32 a1_1706
	word32 a2_1707
	word32 a5_1710
	word32 a3_1708
	word32 a4_1709
	branch strcmp(s0_45 + 0xC<32>, 0x230C5A80<32>, out a1_1706, out a2_1707, out a3_1708, out a4_1709, out a5_1710) != 0<32> l23080C52
l23080C52:
	a5_116 = 2<32>
	ra_127 = ra
	word32 a5_1768
	word32 a1_1764
	word32 a3_1766
	word32 a4_1767
	word32 a2_1765
	branch strcmp(s0_45 + 0xC<32>, 0x230C5BB4<32>, out a1_1764, out a2_1765, out a3_1766, out a4_1767, out a5_1768) == 0<32> l23080C38
l23080C64:
	word32 a3_105
	word32 a2_1786
	word32 a1_1785
	branch strcmp(s0_45 + 0xC<32>, 0x230C5A84<32>, out a1_1785, out a2_1786, out a3_105, out a4_106, out a5_108) != 0<32> l23080C8C
l23080C8C:
	a0_111 = Mem74[0x420280EC<32>:int32]
l23080C74:
	branch CONVERT(Mem74[s4_23 + 0x4201C381<32>:byte], byte, word32) != 0<32> l23080C88
l23080C88:
	a5_116 = 3<32>
	ra_127 = ra
l23080C7A:
	word32 t4_1799
	word32 s10_1797
	word32 s11_1798
	word32 s9_1796
	word32 a5_1792
	word32 a7_1793
	word32 s8_1795
	word32 s4_1794
	word32 a2_1789
	word32 a3_1790
	word32 a4_1791
	word32 a0_1787
	word32 a1_1788
	ra_127 = printf(ra, 0x230C5CD0<32>, a3_105, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_128, out a0_1787, out a1_1788, out a2_1789, out a3_1790, out a4_1791, out a5_1792, out a7_1793, out s2_131, out s3_132, out s4_1794, out s5_134, out s6_135, out s7_136, out s8_1795, out s9_1796, out s10_1797, out s11_1798, out t4_1799)
l23080C36:
	a5_116 = 1<32>
l23080C38:
	Mem145[s6_135 + 24<i32>:byte] = SLICE(a5_116, byte, 0)
	word32 a0_152
	word32 s4_167
	word32 a3_1783
	word32 s8_1784
	ip4addr_aton(s5_134, fp + -76<i32>, out a0_152, out a3_1783, out a4_106, out a5_108, out s4_167, out s8_1784)
	branch a0_152 != 0<32> l23080C9E
l23080C9E:
	word32 a5_221
	word32 a4_220
	word32 a5_634
	word32 s0_607
	word32 a5_803
	word32 a5_606
	word32 s0_174 = s4_167 + 56<i32> + s3_132
	word32 a5_175 = CONVERT(Mem145[s0_174 + 24<i32>:byte], byte, word32)
	branch a5_175 != 1<32> l23080D0A
l23080D0A:
	branch a5_175 != 2<32> l23080D7A
l23080D7A:
	branch a5_175 != 3<32> l23080F3E
l23080F3E:
l23080D80:
	word32 s7_402
	word32 a3_386
	word32 s3_398
	word32 s1_394
	word32 ra_392
	word32 s4_399
	word32 a0_383
	word32 s0_393
	word32 a4_179 = CONVERT(Mem145[s0_174 + 25<i32>:byte], byte, word32)
	branch a4_179 != 2<32> l23080DC6
l23080DC6:
	word32 a0_244
	word32 a2_246
	word32 s6_260
	word32 s3_257
	word32 s1_255
	word32 s0_254
	word32 ra_253
	branch a4_179 != a5_175 l23080E04
l23080E04:
	branch a4_179 != 1<32> l23080E30
l23080E30:
	word32 s5_1894
	word32 s6_1895
	word32 s8_1896
	word32 s2_1891
	word32 s3_1892
	word32 s4_1893
	word32 a4_1888
	word32 a5_1889
	word32 a7_1890
	word32 a1_1885
	word32 a2_1886
	word32 a3_1887
	word32 a0_1884
	word32 s1_1883
	xQueueGenericSend(Mem145[s2_131 + 236<i32>:int32], 0<32>, 0<32>, a4_179, a5_175, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1_1883, out a0_1884, out a1_1885, out a2_1886, out a3_1887, out a4_1888, out a5_1889, out a7_1890, out s2_1891, out s3_1892, out s4_1893, out s5_1894, out s6_1895, out s8_1896)
l23080E08:
	word32 a0_216
	word32 s3_1900
	word32 s6_1901
	word32 s0_1897
	word32 s1_1898
	word32 a2_1899
	word32 ra_225 = get_romfs_file_content(ra_127, a0_152, fp + -64<i32>, s2_131, mstatus, s6, s0, dwArg18, dwArg88, dwArgC8, dwArg0108, out s0_1897, out s1_1898, out a0_216, out a2_1899, out a4_220, out a5_221, out s2_131, out s3_1900, out s6_1901, out mstatus)
	branch a0_216 != 0<32> l23080CBE
l23080E14:
	ra_253 = get_romfs_file_content(ra_225, a0_216, fp + -56<i32>, s2_131, mstatus, s6, s0, dwArg18, dwArg88, dwArgC8, dwArg0108, out s0_254, out s1_255, out a0_244, out a2_246, out a4_220, out a5_221, out s2_131, out s3_257, out s6_260, out mstatus)
	branch a0_244 != 0<32> l23080CBE
l23080E20:
l23080DCA:
	word32 a0_279
	word32 s6_1838
	word32 a2_1836
	word32 s3_1837
	word32 s1_1835
	word32 s0_1834
	word32 ra_288 = get_romfs_file_content(ra_127, a0_152, fp + -72<i32>, s2_131, mstatus, s6, s0, dwArg18, dwArg88, dwArgC8, dwArg0108, out s0_1834, out s1_1835, out a0_279, out a2_1836, out a4_220, out a5_221, out s2_131, out s3_1837, out s6_1838, out mstatus)
	branch a0_279 != 0<32> l23080CBE
l23080DD6:
	word32 a0_307
	word32 s6_1843
	word32 s3_1842
	word32 a2_1841
	word32 s1_1840
	word32 s0_1839
	word32 ra_316 = get_romfs_file_content(ra_288, a0_279, fp + -64<i32>, s2_131, mstatus, s6, s0, dwArg18, dwArg88, dwArgC8, dwArg0108, out s0_1839, out s1_1840, out a0_307, out a2_1841, out a4_220, out a5_221, out s2_131, out s3_1842, out s6_1843, out mstatus)
	branch a0_307 != 0<32> l23080CBE
l23080DE2:
	word32 a2_1845
	word32 s0_1844
	ra_253 = get_romfs_file_content(ra_316, a0_307, fp + -56<i32>, s2_131, mstatus, s6, s0, dwArg18, dwArg88, dwArgC8, dwArg0108, out s0_1844, out s1_255, out a0_244, out a2_1845, out a4_220, out a5_221, out s2_131, out s3_257, out s6_260, out mstatus)
	branch a0_244 != 0<32> l23080CBE
l23080DEE:
	a2_246 = dwArg14
	s0_254 = dwLoc0C
l23080DFE:
	ra_392 = altcp_tls_create_config_client_2wayauth(ra_253, s0_254, s1_255, a0_244, a2_246, 0<32>, dwLoc48, s2_131, s3_257, dwLoc28, s6_260, mstatus, dwLoc4C, dwLoc48, dwLoc3C, s6, s0, dwLoc28, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg28, dwArg34, dwArg38, s5, dwArg58, dwArg68, dwArg74, dwArg78, dwArg84, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, out s0_393, out s1_394, out a0_383, out a3_386, out a4_220, out a5_221, out s2_131, out s3_398, out s4_399, out s7_402, out mstatus)
l23080D88:
	word32 a0_415
	word32 s6_1830
	word32 a2_1828
	word32 s3_1829
	word32 s1_1827
	word32 ra_424 = get_romfs_file_content(ra_127, a0_152, fp + -56<i32>, s2_131, mstatus, s6, s0, dwArg18, dwArg88, dwArgC8, dwArg0108, out s0_393, out s1_1827, out a0_415, out a2_1828, out a4_220, out a5_221, out s2_131, out s3_1829, out s6_1830, out mstatus)
	branch a0_415 != 0<32> l23080CBE
l23080D94:
	ra_392 = altcp_tls_create_config_client(ra_424, s0_393, a0_415, a4_220, mstatus, dwLoc48, dwLoc3C, s6, s0, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg14, dwArg18, dwArg34, dwArg38, s7, s5, dwArg58, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, out s1_394, out a0_383, out a3_386, out a4_220, out a5_221, out s2_131, out s3_398, out s4_399, out s7_402, out mstatus)
l23080D9C:
	Mem474[a0_383 + 52<i32>:word32] = s0_393
	word32 s0_478 = Mem474[a0_383 + 52<i32>:word32]
	branch a0_383 == 0<32> l23080CBE
l23080DAE:
	word32 a4_492
	word32 a5_493
	word32 s6_505
	word32 s7_506
	word32 s8_507
	word32 s9_508
	word32 a1_489
	word32 s4_503
	word32 a0_488
	word32 s1_498
	word32 ra_497 = altcp_tls_new(ra_392, s0_478, s1_394, a0_383, 46<i32>, a3_386, a4_220, s3_398, s4_399, s7_402, mstatus, dwLoc48, dwLoc3C, s6, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg0C, dwArg18, dwArg28, dwArg2C, dwArg38, dwArg3C, s5, s3, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, out s1_498, out a0_488, out a1_489, out a4_492, out a5_493, out s2_131, out s3_132, out s4_503, out s6_505, out s7_506, out s8_507, out s9_508, out mstatus)
	Mem516[a0_488 + 48<i32>:word32] = s0_478
	branch a0_488 != 0<32> l23080E42
l23080E42:
	word32 a5_518 = CONVERT(Mem516[Mem516[a4_492 + 28<i32>:word32] + 25<i32>:byte], byte, word32)
	branch a4_492 == 0<32> l23080EBC
l23080EBC:
	a4_220 = 1<32>
	branch a5_518 != 1<32> l23080ED4
l23080E4A:
	branch a5_518 == 1<32> l23080EC2
l23080EC2:
	a4_220 = 1<32>
	word32 a5_1846
	a1_489 = mbedtls_ssl_conf_authmode(a0_488, 0<32>, out a5_1846)
l23080E50:
	word32 a0_530 = altcp_tls_context(a0_488)
	branch a0_530 != 0<32> l23080E78
l23080E78:
	word32 a5_550
	word32 a5_1847
	ra_497 = mbedtls_ssl_set_hostname(ra_497, mbedtls_ssl_conf_authmode(a0_530, 2<32>, out a5_1847), mstatus, dwLoc40, dwLoc3C, dwLoc18, dwArgB8, dwArgF8, out s1_498, out a0_488, out a1_489, out a4_220, out a5_550, out s2_131, out s3_132, out s4_503)
	branch a0_488 == 0<32> l23080ED4
l23080ED4:
	word32 a5_571 = Mem516[a1_489 + 44<i32>:word32]
	branch a1_489 == 0<32> l23080EE8
l23080EE2:
	s1_498 = mbedtls_ssl_conf_alpn_protocols(a0_488, a1_489, dwArgD8, out a0_488, out a4_220, out a5_571, out s2_131, out s3_132, out s4_503)
l23080EE8:
	altcp_arg(a0_488, s4_503)
	word32 a0_604 = altcp_connect(a0_488, a5_571, out a5_606)
	s0_607 = Mem516[a5_606 + 48<i32>:word32]
	branch a0_604 == 0<32> l23080F28
l23080F12:
	word32 a5_611
	word32 a0_609 = altcp_close(a5_606, a5_606, out a5_611)
	Mem613[Mem516[a0_609 + 52<i32>:word32] + 48<i32>:word32] = 0<32>
	word32 s3_1903
	word32 s4_1904
	word32 s1_1902
	Mem652[altcp_tls_free_config(ra_497, s1_498, a0_609, fp + -76<i32>, a5_611, s2_131, s3_132, mstatus, dwLoc4C, dwLoc48, dwLoc40, s0, dwArg34, ra, dwArg88, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out s1_1902, out a4_220, out a5_634, out s2_131, out s3_1903, out s4_1904) + 52<i32>:word32] = 0<32>
l23080E8A:
	word32 a5_656
	word32 a0_654 = altcp_close(a0_488, a5_550, out a5_656)
	Mem658[Mem516[a0_654 + 52<i32>:word32] + 48<i32>:word32] = 0<32>
	word32 a4_663
	word32 a5_664
	word32 s2_669
	word32 s3_1849
	word32 s4_1850
	word32 s1_1848
	word32 s0_667 = altcp_tls_free_config(ra_497, s1_498, a0_654, a1_489, a5_656, s2_131, s3_132, mstatus, dwLoc4C, dwLoc48, dwLoc40, s0, dwArg34, ra, dwArg88, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out s1_1848, out a4_663, out a5_664, out s2_669, out s3_1849, out s4_1850)
	word32 a0_682 = Mem658[s2_669 + 236<i32>:int32]
	Mem683[s0_667 + 52<i32>:word32] = 0<32>
	word32 a3_690
	word32 s8_1863
	word32 s5_1861
	word32 s6_1862
	word32 s3_1859
	word32 s4_1860
	word32 a7_1857
	word32 s2_1858
	word32 a4_1855
	word32 a5_1856
	word32 a1_1853
	word32 a2_1854
	word32 s1_1851
	word32 a0_1852
	xQueueGenericSend(a0_682, 0<32>, 0<32>, a4_663, a5_664, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1_1851, out a0_1852, out a1_1853, out a2_1854, out a3_690, out a4_1855, out a5_1856, out a7_1857, out s2_1858, out s3_1859, out s4_1860, out s5_1861, out s6_1862, out s8_1863)
	word32 s11_1881
	word32 t4_1882
	word32 s8_1878
	word32 s9_1879
	word32 s10_1880
	word32 s5_1875
	word32 s6_1876
	word32 s7_1877
	word32 s2_1872
	word32 s3_1873
	word32 s4_1874
	word32 a4_1869
	word32 a5_1870
	word32 a7_1871
	word32 a3_1868
	word32 a0_1865
	word32 a1_1866
	word32 a2_1867
	word32 s1_1864
	printf(ra_497, 0x230C5D08<32>, a3_690, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_1864, out a0_1865, out a1_1866, out a2_1867, out a3_1868, out a4_1869, out a5_1870, out a7_1871, out s2_1872, out s3_1873, out s4_1874, out s5_1875, out s6_1876, out s7_1877, out s8_1878, out s9_1879, out s10_1880, out s11_1881, out t4_1882)
l23080E58:
	__assert_func(ra_497, 0x230C5C5C<32>, s2_131, s6_505, s7_506, s8_507, s9_508)
l23080DBA:
	word32 s3_1832
	word32 s4_1833
	word32 s1_1831
	Mem758[altcp_tls_free_config(ra_497, s1_498, a0_488, a1_489, a5_493, s2_131, s3_132, mstatus, dwLoc4C, dwLoc48, dwLoc40, s0, dwArg34, ra, dwArg88, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out s1_1831, out a4_220, out a5_221, out s2_131, out s3_1832, out s4_1833) + 52<i32>:word32] = 0<32>
l23080D10:
	word32 a3_1822
	word32 s1_1821
	udp_new_ip_type(ra_127, s1_128, 1<32>, a4_106, mstatus, out s1_1821, out a3_1822, out a4_220, out a5_221)
	Mem772[0x5E<32>:word32] = s0_174
	branch false l23080CBE
l23080D1C:
	word32 a4_1823
	word32 a5_779
	word32 a3_778
	word32 a0_776 = udp_bind(46<i32>, 0x230CBADC<32>, 0<32>, out a3_778, out a4_1823, out a5_779)
	s0_607 = Mem772[a5_779 + 48<i32>:word32]
	branch a0_776 == 0<32> l23080D3A
l23080D3A:
	word32 a0_787 = udp_connect(a5_779, fp + -76<i32>, CONVERT(Mem772[s0_607 + 20<i32>:uint16], uint16, word32), dwLoc18, out a3_778, out a4_220, out a5_779, out s2_131)
	s0_607 = Mem772[a5_779 + 48<i32>:word32]
	branch a0_787 != 0<32> l23080D2E
l23080D4A:
	udp_recv(a5_779, 0x2308081C<32>, s4_167)
	a5_803 = 3<32>
l23080D2E:
	word32 a3_1826
	word32 a2_1825
	word32 a0_1824
	udp_remove(a5_779, a3_778, mstatus, out a0_1824, out a2_1825, out a3_1826, out a4_220, out a5_221)
	Mem817[s0_607 + 48<i32>:word32] = 0<32>
l23080CB2:
	word32 a0_821
	word32 s4_836
	word32 s9_1806
	word32 s8_1805
	word32 s7_1804
	word32 s6_1803
	word32 a1_1801
	word32 a3_1802
	word32 s1_1800
	altcp_tcp_new_ip_type(ra_127, s1_128, fp + -76<i32>, 1<32>, a4_106, s3_132, s4_167, s7_136, mstatus, dwLoc4C, dwLoc48, s6, dwLoc28, dwLoc18, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg28, dwArg38, dwArg3C, s5, s3, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, out s1_1800, out a0_821, out a1_1801, out a3_1802, out a4_220, out a5_221, out s2_131, out s3_132, out s4_836, out s6_1803, out s7_1804, out s8_1805, out s9_1806, out mstatus)
	Mem849[a0_821 + 48<i32>:word32] = s0_174
	branch a0_821 != 0<32> l23080CD0
l23080CD0:
	altcp_arg(a0_821, s4_836)
	word32 a0_856 = altcp_connect(a0_821, a5_221, out a5_606)
	s0_607 = Mem849[a5_606 + 48<i32>:word32]
	branch a0_856 == 0<32> l23080F28
l23080F28:
	altcp_err(a5_606, 0x23080778<32>)
	a5_803 = 2<32>
l23080D5C:
	Mem868[s0_607 + 56<i32>:byte] = SLICE(a5_803, byte, 0)
	word32 a5_871 = Mem868[s3_132:int32]
	word32 a0_874 = Mem868[s2_131 + 236<i32>:int32]
	Mem879[s3_132:word32] = a5_871 + 1<32>
	word32 s8_1932
	word32 s4_1929
	word32 s5_1930
	word32 s6_1931
	word32 s3_1928
	word32 s2_1927
	word32 a4_1924
	word32 a5_1925
	word32 a7_1926
	word32 a3_1923
	word32 a0_1920
	word32 a1_1921
	word32 a2_1922
	word32 s1_1919
	xQueueGenericSend(a0_874, 0<32>, 0<32>, a4_220, a5_871 + 1<32>, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1_1919, out a0_1920, out a1_1921, out a2_1922, out a3_1923, out a4_1924, out a5_1925, out a7_1926, out s2_1927, out s3_1928, out s4_1929, out s5_1930, out s6_1931, out s8_1932)
l23080CF0:
	altcp_close(a5_606, a5_606, out a5_634)
	Mem916[s0_607 + 48<i32>:word32] = 0<32>
l23080CFA:
	word32 s6_1917
	word32 s8_1918
	word32 s3_1914
	word32 s4_1915
	word32 s5_1916
	word32 s2_1913
	word32 a4_1910
	word32 a5_1911
	word32 a7_1912
	word32 a3_1909
	word32 a0_1906
	word32 a1_1907
	word32 a2_1908
	word32 s1_1905
	xQueueGenericSend(Mem918[s2_131 + 236<i32>:int32], 0<32>, 0<32>, a4_220, a5_634, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1_1905, out a0_1906, out a1_1907, out a2_1908, out a3_1909, out a4_1910, out a5_1911, out a7_1912, out s2_1913, out s3_1914, out s4_1915, out s5_1916, out s6_1917, out s8_1918)
l23080EB8:
l23080CBE:
	word32 s4_1817
	word32 s6_1819
	word32 s8_1820
	word32 s5_1818
	word32 a5_1813
	word32 s2_1815
	word32 s3_1816
	word32 a7_1814
	word32 a4_1812
	word32 a3_1811
	word32 a2_1810
	word32 a1_1809
	word32 a0_1808
	word32 s1_1807
	xQueueGenericSend(Mem954[s2_131 + 236<i32>:int32], 0<32>, 0<32>, a4_220, a5_221, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1_1807, out a0_1808, out a1_1809, out a2_1810, out a3_1811, out a4_1812, out a5_1813, out a7_1814, out s2_1815, out s3_1816, out s4_1817, out s5_1818, out s6_1819, out s8_1820)
l23080C46:
	a0_111 = Mem145[s2_131 + 236<i32>:int32]
l23080C96:
	word32 s8_1782
	word32 s3_1778
	word32 s4_1779
	word32 s6_1781
	word32 s5_1780
	word32 a5_1775
	word32 a7_1776
	word32 s2_1777
	word32 a2_1772
	word32 a3_1773
	word32 a4_1774
	word32 s1_1769
	word32 a1_1771
	word32 a0_1770
	xQueueGenericSend(a0_111, 0<32>, 0<32>, a4_106, a5_108, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1_1769, out a0_1770, out a1_1771, out a2_1772, out a3_1773, out a4_1774, out a5_1775, out a7_1776, out s2_1777, out s3_1778, out s4_1779, out s5_1780, out s6_1781, out s8_1782)
l23080BC2:
	word32 a2_1031
	word32 a3_1032
	word32 a4_1033
	word32 s1_1038
	word32 s3_1040
	word32 s8_1719
	word32 s6_1718
	word32 s5_1717
	word32 s4_1716
	word32 a0_1711
	word32 a7_1714
	word32 a1_1712
	word32 a5_1713
	word32 s2_1715
	xQueueGenericSend(Mem21[0x420280EC<32>:int32], 0<32>, 0<32>, a4_42, a5_43, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1_1038, out a0_1711, out a1_1712, out a2_1031, out a3_1032, out a4_1033, out a5_1713, out a7_1714, out s2_1715, out s3_1040, out s4_1716, out s5_1717, out s6_1718, out s8_1719)
	word32 a2_1056
	word32 a3_1057
	word32 a4_1058
	word32 mstatus_1062
	word32 s1_1065
	word32 s3_1069
	word32 a2_1088
	word32 a3_1089
	word32 a4_1090
	word32 mstatus_1094
	word32 s0_1096
	word32 s1_1097
	word32 s3_1101
	word32 mstatus_1763
	word32 s8_1759
	word32 s9_1760
	word32 s11_1762
	word32 s10_1761
	word32 s3_1754
	word32 s4_1755
	word32 s6_1757
	word32 s7_1758
	word32 s5_1756
	word32 a4_1751
	word32 a5_1752
	word32 s2_1753
	word32 a0_1747
	word32 a1_1748
	word32 a3_1750
	word32 a2_1749
	word32 s11_1744
	word32 s0_1745
	word32 s1_1746
	word32 s7_1740
	word32 s9_1742
	word32 s10_1743
	word32 s8_1741
	word32 s6_1739
	word32 s4_1737
	word32 s5_1738
	word32 a5_1735
	word32 s2_1736
	word32 a0_1733
	word32 a1_1734
	word32 s10_1731
	word32 s11_1732
	word32 s8_1729
	word32 s9_1730
	word32 s6_1727
	word32 s7_1728
	word32 s4_1725
	word32 s5_1726
	word32 a5_1723
	word32 s2_1724
	word32 a1_1722
	word32 a0_1721
	word32 s0_1720
	at_dump_noend(at_dump_noend(at_dump_noend(ra, s1_1038, 0x230C6900<32>, a2_1031, a3_1032, a4_1033, s3_1040, mstatus, dwLoc4C, dwLoc40, dwLoc3C, s6, dwArg0C, dwArg10, dwArg14, dwArg38, dwArg58, dwArg5C, dwArg88, dwArg98, dwArgC8, out s0_1720, out s1_1065, out a0_1721, out a1_1722, out a2_1056, out a3_1057, out a4_1058, out a5_1723, out s2_1724, out s3_1069, out s4_1725, out s5_1726, out s6_1727, out s7_1728, out s8_1729, out s9_1730, out s10_1731, out s11_1732, out mstatus_1062), s1_1065, 0x230C5CB8<32>, a2_1056, a3_1057, a4_1058, s3_1069, mstatus_1062, dwLoc4C, dwLoc40, dwLoc3C, s6, dwArg0C, dwArg10, dwArg14, dwArg38, dwArg58, dwArg5C, dwArg88, dwArg98, dwArgC8, out s0_1096, out s1_1097, out a0_1733, out a1_1734, out a2_1088, out a3_1089, out a4_1090, out a5_1735, out s2_1736, out s3_1101, out s4_1737, out s5_1738, out s6_1739, out s7_1740, out s8_1741, out s9_1742, out s10_1743, out s11_1744, out mstatus_1094), s1_1097, s0_1096 + -1792<i32>, a2_1088, a3_1089, a4_1090, s3_1101, mstatus_1094, dwLoc4C, dwLoc40, dwLoc3C, s6, dwArg0C, dwArg10, dwArg14, dwArg38, dwArg58, dwArg5C, dwArg88, dwArg98, dwArgC8, out s0_1745, out s1_1746, out a0_1747, out a1_1748, out a2_1749, out a3_1750, out a4_1751, out a5_1752, out s2_1753, out s3_1754, out s4_1755, out s5_1756, out s6_1757, out s7_1758, out s8_1759, out s9_1760, out s10_1761, out s11_1762, out mstatus_1763)
l23080BF4:
	return
bl_cipstart_exit:


void bl_cipsendbuf()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
bl_cipsendbuf_entry:
l23080F42:
	return
bl_cipsendbuf_exit:


void bl_cipclose(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_cipclose_entry:
l23080F46:
	branch s1 > 4<32> l23080FF4
l23080F5E:
	branch CONVERT(Mem15[s1 + 0x4201C3A0<32>:byte], byte, word32) == 0<32> l23080FF4
l23080F7C:
	word32 a2_35
	word32 a3_36
	word32 a4_37
	word32 mstatus_41
	word32 s1_44
	word32 s3_48
	word32 a2_67
	word32 a3_68
	word32 a4_69
	word32 mstatus_73
	word32 s1_76
	word32 s3_80
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a5_100
	word32 mstatus_103
	word32 s4_388
	word32 s2_387
	word32 s6_390
	word32 s5_389
	word32 s7_391
	word32 s8_392
	word32 a1_385
	word32 a5_386
	word32 s0_383
	word32 a0_384
	word32 s9_393
	word32 s10_394
	word32 s11_395
	word32 s0_396
	word32 a0_397
	word32 a1_398
	word32 a5_399
	word32 s2_400
	word32 s4_401
	word32 s5_402
	word32 s6_403
	word32 s7_404
	word32 s8_405
	word32 s9_406
	word32 s10_407
	word32 s11_408
	word32 s0_409
	word32 s1_410
	word32 a0_411
	word32 a1_412
	word32 s2_413
	word32 s3_414
	word32 s4_415
	word32 s5_416
	word32 s6_417
	word32 s7_418
	word32 s8_419
	word32 s9_420
	word32 s10_421
	word32 s11_422
	word32 ra_104 = at_dump_noend(at_dump_noend(at_dump_noend(ra, s1, 0x230C6900<32>, a2, a3, a4, 0x230C7000<32>, mstatus, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_383, out s1_44, out a0_384, out a1_385, out a2_35, out a3_36, out a4_37, out a5_386, out s2_387, out s3_48, out s4_388, out s5_389, out s6_390, out s7_391, out s8_392, out s9_393, out s10_394, out s11_395, out mstatus_41), s1_44, 0x230C5C88<32>, a2_35, a3_36, a4_37, s3_48, mstatus_41, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_396, out s1_76, out a0_397, out a1_398, out a2_67, out a3_68, out a4_69, out a5_399, out s2_400, out s3_80, out s4_401, out s5_402, out s6_403, out s7_404, out s8_405, out s9_406, out s10_407, out s11_408, out mstatus_73), s1_76, s3_80 + -1792<i32>, a2_67, a3_68, a4_69, s3_80, mstatus_73, s4, dwLoc10, dwLoc0C, dwLoc08, dwArg3C, dwArg40, dwArg44, s1, dwArg88, dwArg8C, dwArgB8, dwArgC8, dwArgF8, out s0_409, out s1_410, out a0_411, out a1_412, out a2_97, out a3_98, out a4_99, out a5_100, out s2_413, out s3_414, out s4_415, out s5_416, out s6_417, out s7_418, out s8_419, out s9_420, out s10_421, out s11_422, out mstatus_103)
	word32 a0_128
	word32 a1_129
	word32 a3_131
	word32 a4_132
	word32 s3_138
	word32 a2_423
	word32 a5_424
	word32 s8_425
	word32 s1_136
	word32 s2_137
	word32 s4_139
	word32 s0_135 = xQueueSemaphoreTake(Mem15[0x420280EC<32>:int32], 0xFFFFFFFF<32>, a2_97, a3_98, a4_99, a5_100, mstatus_103, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_136, out a0_128, out a1_129, out a2_423, out a3_131, out a4_132, out a5_424, out s2_137, out s3_138, out s4_139, out s8_425)
	word32 a5_143 = CONVERT(Mem15[s0_135 + 56<i32>:byte], byte, word32)
	branch a5_143 == 0<32> l2308102E
l2308102E:
	word32 s1_426
	word32 a0_427
	word32 a1_428
	word32 a2_429
	word32 a3_430
	word32 a4_431
	word32 a5_432
	word32 a7_433
	word32 s2_434
	word32 s3_435
	word32 s4_436
	word32 s5_437
	word32 s6_438
	word32 s8_439
	xQueueGenericSend(Mem15[s3_138 + 236<i32>:int32], 0<32>, 0<32>, a4_132, a5_143, mstatus_103, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_426, out a0_427, out a1_428, out a2_429, out a3_430, out a4_431, out a5_432, out a7_433, out s2_434, out s3_435, out s4_436, out s5_437, out s6_438, out s8_439)
l23080FB4:
	word32 a4_175
	word32 s0_207
	word32 a5_172 = CONVERT(Mem15[s0_135 + 24<i32>:byte], byte, word32)
	Mem173[s0_135 + 56<i32>:byte] = 0<8>
	branch a5_172 != 2<32> l23081004
l23081004:
	a4_175 = 1<32>
	branch a5_172 != 1<32> l23081012
l23081012:
	a4_175 = 3<32>
	branch a5_172 != 3<32> l23080FCC
l23081018:
	word32 a5_180
	word32 a0_178 = altcp_close(a0_128, a5_172, out a5_180)
	Mem182[Mem173[a0_178 + 52<i32>:word32] + 48<i32>:word32] = 0<32>
	word32 a5_459
	word32 s3_460
	Mem206[altcp_tls_free_config(ra_104, s1_136, a0_178, a1_129, a5_180, s2_137, s3_138, mstatus_103, s4, s2, dwLoc10, dwArg04, s3, dwArg84, dwArgB8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0138, dwArg0148, dwArg0158, dwArg0178, out s1_136, out a4_175, out a5_459, out s2_137, out s3_460, out s4_139) + 52<i32>:word32] = 0<32>
l2308100A:
	s0_207 = Mem173[a0_128 + 48<i32>:word32]
	word32 a5_444
	altcp_close(a0_128, a5_172, out a5_444)
l23080FC2:
	s0_207 = Mem173[a0_128 + 48<i32>:word32]
	word32 a0_440
	word32 a2_441
	word32 a3_442
	word32 a5_443
	s1_136 = udp_remove(a0_128, a3_131, mstatus_103, out a0_440, out a2_441, out a3_442, out a4_175, out a5_443)
l23080FC8:
	Mem221[s0_207 + 48<i32>:word32] = 0<32>
l23080FCC:
	word32 a5_229 = Mem228[s2_137:int32]
	word32 a0_232 = Mem228[s4_139 + 236<i32>:int32]
	Mem237[s2_137:word32] = a5_229 + 0xFFFFFFFF<32>
	Mem239[s1_136 + 56<i32> + s2_137 + 24<i32>:byte] = 0<8>
	word32 s1_445
	word32 a0_446
	word32 a1_447
	word32 a2_448
	word32 a3_449
	word32 a4_450
	word32 a5_451
	word32 a7_452
	word32 s2_453
	word32 s3_454
	word32 s4_455
	word32 s5_456
	word32 s6_457
	word32 s8_458
	xQueueGenericSend(a0_232, 0<32>, 0<32>, a4_175, a5_229 + 0xFFFFFFFF<32>, mstatus_103, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_445, out a0_446, out a1_447, out a2_448, out a3_449, out a4_450, out a5_451, out a7_452, out s2_453, out s3_454, out s4_455, out s5_456, out s6_457, out s8_458)
l23080FF4:
	return
bl_cipclose_exit:


void bl_tcpserver(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 s2, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_tcpserver_entry:
l23081040:
	word32 s3_20
	word32 a0_19 = Mem15[a4 + 12<i32>:word32]
	branch a5 != 0<32> l2308112A
l2308112A:
	s3_20 = 3<32>
	branch a4 != 0<32> l23081062
l23081130:
l23081054:
	word32 a5_24 = Mem15[a3:word32]
	branch a4 == 0<32> l23081102
l23081102:
	branch a3 == 0<32> l23081070
l23081104:
	Mem25[a5_24:word32] = 0<32>
	branch Mem25[0x4200F6F4<32>:int32] != 1<32> l230810B2
l23081116:
	word32 s0_30 = Mem25[a0_19 + 32<i32>:word32]
	word32 a5_322
	altcp_close(a0_19, 1<32>, out a5_322)
	Mem34[s0_30 + 32<i32>:word32] = 0<32>
l23081060:
	s3_20 = 1<32>
l23081062:
	word32 a5_39 = Mem15[0x4200F6F8<32>:int32]
	branch a5_39 == 0<32> l23081084
l23081084:
	Mem49[0x4200F6F0<32>:word16] = SLICE(a5_39, word16, 0)
	Mem50[0x4200F6F4<32>:word32] = 1<32>
	word32 a1_53
	word32 a3_55
	word32 a4_56
	word32 a5_310
	word32 a2_309
	word32 a0_308
	word32 t1_307
	word32 ra_58 = memset(ra, 0x4201C308<32>, 0<32>, 40<i32>, out t1_307, out a0_308, out a1_53, out a2_309, out a3_55, out a4_56, out a5_310)
	branch s3_20 == 1<32> l230810B6
l230810B6:
	word32 a5_315
	word32 a0_68
	word32 s2_81
	word32 s3_82
	word32 s4_316
	word32 s6_317
	word32 s7_318
	word32 s8_319
	word32 s9_320
	word32 mstatus_321
	word32 a4_314
	word32 a3_313
	word32 a1_312
	word32 s1_311
	altcp_tcp_new_ip_type(ra_58, 0x4200F6F0<32>, a1_53, a3_55, a4_56, s3_20, 1<32>, s7, mstatus, s4, s2, dwLoc08, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, dwArg48, dwArg4C, dwArg58, s1, ra, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArgF8, out s1_311, out a0_68, out a1_312, out a3_313, out a4_314, out a5_315, out s2_81, out s3_82, out s4_316, out s6_317, out s7_318, out s8_319, out s9_320, out mstatus_321)
	Mem96[a0_68 + 32<i32>:word32] = 0x4201C308<32>
	branch a0_68 == 0<32> l23081072
l230810C2:
	word32 a5_103
	word32 a0_101 = altcp_bind(a0_68, 0x14<32>, out a5_103)
	branch a0_101 == 0<32> l230810E2
l230810E2:
	word32 s0_104 = Mem96[a0_101 + 32<i32>:word32]
	word32 a0_107 = altcp_listen_with_backlog_and_err(a0_101, a5_103)
	Mem110[a0_107 + 32<i32>:word32] = s0_104
	branch a0_107 == 0<32> l23081070
l230810F0:
	Mem113[s2_81:word32] = s3_82
	altcp_accept(a0_107, 0x230808DC<32>)
l230810D4:
	word32 s0_114 = Mem96[a0_101 + 32<i32>:word32]
	word32 a5_323
	altcp_close(a0_101, a5_103, out a5_323)
	Mem119[s0_114 + 32<i32>:word32] = 0<32>
l230810B2:
l23081070:
l23081072:
	return
bl_tcpserver_exit:


void bl_cipsend(word32 ra, word32 s1, word32 a1, word32 mstatus, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg60, word32 dwArg64, word32 dwArg7C, word32 dwArg88, word32 dwArgAC, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
bl_cipsend_entry:
l23081132:
	branch a1 > 4<32> l230811D6
l230811D6:
	return
l2308113A:
	word32 a3_19 = CONVERT(Mem16[a1 + 0x4201C3A0<32>:byte], byte, word32)
	branch a3_19 == 3<32> l23081174
l23081174:
	word32 a3_35
	word32 a4_36
	word32 a1_47
	word32 a0_53
	word32 a5_22 = CONVERT(Mem16[a1 + 0x4201C380<32>:byte], byte, word32)
	Mem24[0x4200F6EC<32>:word32] = a3_19
	branch (a5_22 & 253<i32>) != 1<32> l230811B2
l230811B2:
	branch a5_22 != 2<32> l2308116C
l230811BA:
	word32 a0_32
	word32 a5_37
	word32 s1_297
	word32 a2_298
	word32 s2_299
	word32 s3_300
	malloc(ra, s1, 8<32>, a5_22 & 253<i32>, 2<32>, a5_22, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_297, out a0_32, out a2_298, out a3_35, out a4_36, out a5_37, out s2_299, out s3_300)
	a1_47 = a0_32
	branch a0_32 == 0<32> l23081196
l230811C4:
	Mem49[a5_37:word32] = a0_32
	Mem51[a5_37 + 4<i32>:word32] = a0_32
	a0_53 = 0x23080656<32>
l2308118C:
	word32 a0_55
	word32 a5_60
	word32 s1_293
	word32 a2_294
	word32 s2_295
	word32 s3_296
	malloc(ra, s1, 8<32>, a5_22 & 253<i32>, 1<32>, a5_22, mstatus, dwArg30, dwArg34, dwArg7C, dwArg0128, dwArg0168, out s1_293, out a0_55, out a2_294, out a3_35, out a4_36, out a5_60, out s2_295, out s3_296)
	a1_47 = a0_55
	branch a0_55 != 0<32> l2308119A
l2308119A:
	Mem72[a5_60:word32] = a0_55
	Mem74[a5_60 + 4<i32>:word32] = a0_55
	a0_53 = 0x23080A28<32>
l230811AA:
	word32 s1_301
	word32 a0_302
	word32 a3_303
	word32 a4_304
	word32 s2_305
	word32 s4_306
	word32 s6_307
	tcpip_callback(a0_53, a1_47, a3_35, a4_36, mstatus, dwArgC8, dwArg0108, dwArg0148, out s1_301, out a0_302, out a3_303, out a4_304, out s2_305, out s4_306, out s6_307)
l23081196:
l2308115E:
	word32 s11_291
	word32 s10_290
	word32 s9_289
	word32 s8_288
	word32 s7_287
	word32 s6_286
	word32 s5_285
	word32 s4_284
	word32 s3_283
	word32 s2_282
	word32 a7_281
	word32 a5_280
	word32 a4_279
	word32 a3_278
	word32 a2_277
	word32 a1_276
	word32 a0_275
	word32 s1_274
	word32 t4_292
	printf(ra, 0x230C5C98<32>, a3_19, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_274, out a0_275, out a1_276, out a2_277, out a3_278, out a4_279, out a5_280, out a7_281, out s2_282, out s3_283, out s4_284, out s5_285, out s6_286, out s7_287, out s8_288, out s9_289, out s10_290, out s11_291, out t4_292)
l2308116C:
	return
bl_cipsend_exit:


void bl_cipsslcconf_path(word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_cipsslcconf_path_entry:
l230811DA:
	branch a4 > 4<32> l23081238
l230811F4:
	word32 s2_39
	word32 a5_719
	word32 s3_720
	word32 s4_721
	word32 s8_722
	word32 a1_716
	word32 a3_717
	word32 a4_718
	word32 s1_715
	word32 a0_128
	word32 a2_122
	word32 s0_37 = xQueueSemaphoreTake(Mem17[0x420280EC<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, 4<32>, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_715, out a0_128, out a1_716, out a2_122, out a3_717, out a4_718, out a5_719, out s2_39, out s3_720, out s4_721, out s8_722)
	word32 s1_103 = Mem17[s2_39 + 8<i32>:int32]
	word32 a5_51 = s0_37 + 816<i32> + (s1_103 + 56<i32>)
	word32 s4_109 = 0x42028000<32>
	word32 s0_108 = s0_37 + 816<i32>
	branch CONVERT(Mem17[a5_51 + 56<i32>:byte], byte, word32) == 0<32> l2308124C
l2308124C:
	word32 a5_267
	word32 s0_117
	word32 a4_101 = Mem17[s2_39 + 12<i32>:int32]
	branch a4_101 == 1<32> l23081322
l23081322:
	word32 a5_55 = Mem17[a0_128 + 32<i32>:word32]
	Mem56[a5_55 + 25<i32>:byte] = SLICE(a4_101, byte, 0)
	branch a0_128 == 0<32> l2308132E
l2308132A:
	word32 a5_753
	word32 a6_754
	word32 t3_755
	word32 a1_751
	word32 a3_752
	vPortFree(a0_128, a2_122, a5_55, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_128, out a1_751, out a2_122, out a3_752, out a4_101, out a5_753, out a6_754, out s4_109, out t3_755)
l2308132E:
	word32 a5_74 = Mem56[a0_128 + 36<i32>:word32]
	branch a0_128 == 0<32> l23081340
l2308133C:
	word32 t3_760
	word32 a3_757
	word32 a5_758
	word32 a6_759
	word32 a1_756
	vPortFree(a0_128, a2_122, a5_74, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_128, out a1_756, out a2_122, out a3_757, out a4_101, out a5_758, out a6_759, out s4_109, out t3_760)
l23081340:
	word32 a5_95 = Mem56[a0_128 + 40<i32>:word32]
	branch a0_128 == 0<32> l23081352
l2308134E:
	word32 a0_818
	word32 a5_822
	word32 a6_823
	word32 t3_824
	word32 a1_819
	word32 a2_820
	word32 a3_821
	vPortFree(a0_128, a2_122, a5_95, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_818, out a1_819, out a2_820, out a3_821, out a4_101, out a5_822, out a6_823, out s4_109, out t3_824)
l23081352:
	s0_117 = s0_108 + (s1_103 + 56<i32>)
	Mem118[s0_117 + 32<i32>:word32] = 0<32>
l23081256:
	word32 s0_187
	branch a4_101 > 1<32> l23081270
l23081270:
	branch a4_101 == 2<32> l230812D8
l230812D8:
	word32 a5_120 = Mem17[a0_128 + 32<i32>:word32]
	Mem121[a5_120 + 25<i32>:byte] = SLICE(a4_101, byte, 0)
	branch a0_128 == 0<32> l230812E4
l230812E0:
	word32 t3_817
	word32 a4_814
	word32 a5_815
	word32 a6_816
	word32 a1_812
	word32 a3_813
	vPortFree(a0_128, a2_122, a5_120, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_128, out a1_812, out a2_122, out a3_813, out a4_814, out a5_815, out a6_816, out s4_109, out t3_817)
l230812E4:
	word32 a5_139 = Mem121[a0_128 + 36<i32>:word32]
	branch a0_128 == 0<32> l230812F6
l230812F2:
	word32 a1_825
	word32 a6_829
	word32 t3_830
	word32 a3_826
	word32 a4_827
	word32 a5_828
	vPortFree(a0_128, a2_122, a5_139, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_128, out a1_825, out a2_122, out a3_826, out a4_827, out a5_828, out a6_829, out s4_109, out t3_830)
l230812F6:
	word32 a5_160 = Mem121[a0_128 + 40<i32>:word32]
	branch a0_128 == 0<32> l23081308
l23081304:
	word32 a1_832
	word32 a5_836
	word32 t3_838
	word32 a6_837
	word32 a2_833
	word32 a4_835
	word32 a3_834
	word32 a0_831
	vPortFree(a0_128, a2_122, a5_160, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_831, out a1_832, out a2_833, out a3_834, out a4_835, out a5_836, out a6_837, out s4_109, out t3_838)
l23081308:
	a4_101 = Mem121[s2_39 + 16<i32>:int32]
	s0_187 = s0_108 + (s1_103 + 56<i32>)
	Mem188[a4_101 + 32<i32>:word32] = s0_187
l23081276:
	branch a4_101 != 3<32> l2308125E
l2308127C:
	word32 a5_190 = Mem17[a0_128 + 32<i32>:word32]
	Mem191[a5_190 + 25<i32>:byte] = SLICE(a4_101, byte, 0)
	branch a0_128 == 0<32> l23081288
l23081284:
	word32 t3_771
	word32 a4_768
	word32 a5_769
	word32 a6_770
	word32 a1_766
	word32 a3_767
	vPortFree(a0_128, a2_122, a5_190, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_128, out a1_766, out a2_122, out a3_767, out a4_768, out a5_769, out a6_770, out s4_109, out t3_771)
l23081288:
	word32 a5_209 = Mem191[a0_128 + 36<i32>:word32]
	branch a0_128 == 0<32> l2308129A
l23081296:
	word32 a4_779
	word32 a5_780
	word32 a6_781
	word32 t3_782
	word32 a3_778
	word32 a1_777
	vPortFree(a0_128, a2_122, a5_209, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_128, out a1_777, out a2_122, out a3_778, out a4_779, out a5_780, out a6_781, out s4_109, out t3_782)
l2308129A:
	word32 a5_230 = Mem191[a0_128 + 40<i32>:word32]
	branch a0_128 == 0<32> l230812AC
l230812A8:
	word32 t3_797
	word32 a6_796
	word32 a5_795
	word32 a2_792
	word32 a3_793
	word32 a4_794
	word32 a0_790
	word32 a1_791
	vPortFree(a0_128, a2_122, a5_230, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_790, out a1_791, out a2_792, out a3_793, out a4_794, out a5_795, out a6_796, out s4_109, out t3_797)
l230812AC:
	a4_101 = Mem191[s2_39 + 16<i32>:int32]
	s0_117 = s0_108 + (s1_103 + 56<i32>)
	Mem258[a4_101 + 32<i32>:word32] = s0_117
l230812BC:
	Mem266[Mem263[s2_39 + 24<i32>:int32] + 36<i32>:word32] = s0_117
	a5_267 = Mem266[s2_39 + 20<i32>:int32]
	Mem268[a5_267 + 40<i32>:word32] = s0_117
l2308125A:
	branch a4_101 == 0<32> l23081362
l23081362:
	word32 a5_269 = Mem17[a0_128 + 32<i32>:word32]
	Mem270[a5_269 + 25<i32>:byte] = 0<8>
	branch a0_128 == 0<32> l2308136E
l2308136A:
	word32 a3_762
	word32 a5_763
	word32 a6_764
	word32 t3_765
	word32 a1_761
	vPortFree(a0_128, a2_122, a5_269, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_128, out a1_761, out a2_122, out a3_762, out a4_101, out a5_763, out a6_764, out s4_109, out t3_765)
l2308136E:
	word32 a5_288 = Mem270[a0_128 + 36<i32>:word32]
	branch a0_128 == 0<32> l23081380
l2308137C:
	word32 a6_775
	word32 t3_776
	word32 a1_772
	word32 a3_773
	word32 a5_774
	vPortFree(a0_128, a2_122, a5_288, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_128, out a1_772, out a2_122, out a3_773, out a4_101, out a5_774, out a6_775, out s4_109, out t3_776)
l23081380:
	word32 a5_309 = Mem270[a0_128 + 40<i32>:word32]
	branch a0_128 == 0<32> l23081392
l2308138E:
	word32 a6_788
	word32 t3_789
	word32 a2_785
	word32 a3_786
	word32 a5_787
	word32 a0_783
	word32 a1_784
	vPortFree(a0_128, a2_122, a5_309, mstatus, dwArg0138, dwArg0178, out s0_108, out s1_103, out a0_783, out a1_784, out a2_785, out a3_786, out a4_101, out a5_787, out a6_788, out s4_109, out t3_789)
l23081392:
	s0_187 = s0_108 + (s1_103 + 56<i32>)
	Mem332[s0_187 + 32<i32>:word32] = 0<32>
l23081318:
	Mem334[s0_187 + 36<i32>:word32] = 0<32>
	Mem335[s0_187 + 40<i32>:word32] = 0<32>
	a5_267 = 56<i32>
l230812C8:
	word32 a3_802
	word32 s6_810
	word32 s8_811
	word32 a4_803
	word32 s3_807
	word32 s4_808
	word32 s5_809
	word32 a5_804
	word32 a7_805
	word32 s2_806
	word32 a2_801
	word32 a1_800
	word32 a0_799
	word32 s1_798
	xQueueGenericSend(Mem351[s4_109 + 236<i32>:int32], 0<32>, 0<32>, a4_101, a5_267, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_798, out a0_799, out a1_800, out a2_801, out a3_802, out a4_803, out a5_804, out a7_805, out s2_806, out s3_807, out s4_808, out s5_809, out s6_810, out s8_811)
l2308125E:
	word32 a7_744
	word32 s2_745
	word32 s3_746
	word32 s8_750
	word32 s4_747
	word32 s5_748
	word32 s6_749
	word32 a5_743
	word32 a2_740
	word32 a3_741
	word32 a4_742
	word32 s1_737
	word32 a0_738
	word32 a1_739
	xQueueGenericSend(Mem17[0x420280EC<32>:int32], 0<32>, 0<32>, a4_101, a5_51, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_737, out a0_738, out a1_739, out a2_740, out a3_741, out a4_742, out a5_743, out a7_744, out s2_745, out s3_746, out s4_747, out s5_748, out s6_749, out s8_750)
l23081228:
	word32 a3_727
	word32 a4_728
	word32 s8_736
	word32 a5_729
	word32 s4_733
	word32 s5_734
	word32 s6_735
	word32 a7_730
	word32 s2_731
	word32 s3_732
	word32 a2_726
	word32 s1_723
	word32 a0_724
	word32 a1_725
	xQueueGenericSend(Mem17[0x420280EC<32>:int32], 0<32>, 0<32>, s1_103 + 56<i32>, a5_51, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_723, out a0_724, out a1_725, out a2_726, out a3_727, out a4_728, out a5_729, out a7_730, out s2_731, out s3_732, out s4_733, out s5_734, out s6_735, out s8_736)
l23081238:
	return
bl_cipsslcconf_path_exit:


void bl_cipsslcsni(word32 ra, word32 a2, word32 a3, word32 a4, word32 s3, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg74, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0074:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_cipsslcsni_entry:
l230813A2:
	branch a4 > 4<32> l23081406
l230813C2:
	word32 a4_40
	word32 s2_45
	word32 s8_331
	word32 s3_329
	word32 s4_330
	word32 a2_326
	word32 a3_327
	word32 a5_328
	word32 s1_323
	word32 a0_324
	word32 a1_325
	word32 s0_43 = xQueueSemaphoreTake(Mem23[0x420280EC<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, 4<32>, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_323, out a0_324, out a1_325, out a2_326, out a3_327, out a4_40, out a5_328, out s2_45, out s3_329, out s4_330, out s8_331)
	word32 s8_51 = Mem23[s0_43 + 8<i32>:int32]
	word32 s1_57 = s2_45 + 816<i32> + (s8_51 + 56<i32>)
	branch CONVERT(Mem23[s1_57 + 56<i32>:byte], byte, word32) == 0<32> l23081420
l23081420:
	word32 a3_62
	word32 a2_66
	word32 a1_332
	word32 a4_104
	word32 a5_108
	word32 a0_61 = strlen(s0_43 + 0xC<32>, out a1_332, out a2_66, out a3_62, out a4_104, out a5_108)
	branch a0_61 != 0<32> l23081448
l23081448:
	word32 a0_69
	word32 a2_71
	word32 a4_73
	word32 a5_74
	word32 s2_78
	word32 s3_79
	word32 s8_81
	word32 s1_347
	word32 a1_348
	word32 a3_349
	word32 a6_350
	word32 s4_351
	word32 s0_76 = pvPortMalloc(ra, s1_57, a0_61 + 1<32>, a3_62, a4_104, a5_108, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_347, out a0_69, out a1_348, out a2_71, out a3_349, out a4_73, out a5_74, out a6_350, out s2_78, out s3_79, out s4_351, out s8_81)
	word32 s4_101 = a0_69
	branch a0_69 != 0<32> l23081464
l23081464:
	branch a0_69 == 0<32> l23081470
l23081468:
	word32 s1_90
	word32 a0_389
	word32 a1_390
	word32 a2_391
	word32 a3_392
	word32 a4_393
	word32 a5_394
	word32 a6_395
	word32 t3_396
	vPortFree(a0_69, a2_71, a5_74, mstatus, dwArg0128, dwArg0168, out s0_76, out s1_90, out a0_389, out a1_390, out a2_391, out a3_392, out a4_393, out a5_394, out a6_395, out s4_101, out t3_396)
	Mem98[s1_90 + 28<i32>:word32] = 0<32>
l23081470:
	word32 a5_388
	strcpy(s4_101, s0_76, out a4_104, out a5_388)
	Mem111[s3_79 + s4_101:byte] = 0<8>
	Mem114[s2_78 + (s8_81 + 56<i32>) + 28<i32>:word32] = s4_101
	a5_108 = s8_81 + 56<i32>
l23081452:
	word32 s1_374
	word32 a0_375
	word32 a1_376
	word32 a2_377
	word32 a3_378
	word32 a4_379
	word32 a5_380
	word32 a7_381
	word32 s2_382
	word32 s3_383
	word32 s4_384
	word32 s5_385
	word32 s6_386
	word32 s8_387
	xQueueGenericSend(Mem23[0x420280EC<32>:int32], 0<32>, 0<32>, a4_73, a5_74, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_374, out a0_375, out a1_376, out a2_377, out a3_378, out a4_379, out a5_380, out a7_381, out s2_382, out s3_383, out s4_384, out s5_385, out s6_386, out s8_387)
l2308142C:
	branch a0_61 == 0<32> l23081438
l23081430:
	word32 s1_148
	word32 s0_366
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 a3_370
	word32 a6_371
	word32 s4_372
	word32 t3_373
	vPortFree(a0_61, a2_66, a5_108, mstatus, dwArg0128, dwArg0168, out s0_366, out s1_148, out a0_367, out a1_368, out a2_369, out a3_370, out a4_104, out a5_108, out a6_371, out s4_372, out t3_373)
	Mem156[s1_148 + 28<i32>:word32] = 0<32>
l23081438:
	word32 s1_352
	word32 a0_353
	word32 a1_354
	word32 a2_355
	word32 a3_356
	word32 a4_357
	word32 a5_358
	word32 a7_359
	word32 s2_360
	word32 s3_361
	word32 s4_362
	word32 s5_363
	word32 s6_364
	word32 s8_365
	xQueueGenericSend(Mem159[0x420280EC<32>:int32], 0<32>, 0<32>, a4_104, a5_108, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_352, out a0_353, out a1_354, out a2_355, out a3_356, out a4_357, out a5_358, out a7_359, out s2_360, out s3_361, out s4_362, out s5_363, out s6_364, out s8_365)
l230813F6:
	word32 a5_339
	word32 a7_340
	word32 a3_337
	word32 a4_338
	word32 a1_335
	word32 a2_336
	word32 s1_333
	word32 a0_334
	word32 s2_341
	word32 s3_342
	word32 s4_343
	word32 s5_344
	word32 s6_345
	word32 s8_346
	xQueueGenericSend(Mem23[0x420280EC<32>:int32], 0<32>, 0<32>, a4_40, s8_51 + 56<i32>, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_333, out a0_334, out a1_335, out a2_336, out a3_337, out a4_338, out a5_339, out a7_340, out s2_341, out s3_342, out s4_343, out s5_344, out s6_345, out s8_346)
l23081406:
	0<32> = dwArg0128
	return
bl_cipsslcsni_exit:


void bl_cipsslcalpn(word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_cipsslcalpn_entry:
l2308148E:
	word32 a0_108
	word32 a0_19 = Mem17[a4 + 8<i32>:word32]
	word32 a5_113 = 4<32>
	branch a4 <= 4<32> l230814CA
l230814CA:
	word32 a0_29
	word32 a2_31
	word32 s4_40
	word32 s1_246
	word32 a1_247
	word32 a3_248
	word32 a4_249
	word32 a5_250
	word32 s2_251
	word32 s3_252
	word32 s8_253
	word32 s3_44 = Mem17[xQueueSemaphoreTake(Mem17[0x420280EC<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, 4<32>, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_246, out a0_29, out a1_247, out a2_31, out a3_248, out a4_249, out a5_250, out s2_251, out s3_252, out s4_40, out s8_253) + 8<i32>:int32]
	word32 s1_49 = 0x4201C330<32>
	branch CONVERT(Mem17[s3_44 + 0x4201C3A0<32>:byte], byte, word32) == 0<32> l23081510
l23081510:
	word32 a4_52 = Mem17[a0_29 + 44<i32>:word32]
	branch a0_29 == 0<32> l23081518
l23081514:
	word32 s0_289
	word32 a0_290
	word32 a1_291
	word32 a2_292
	word32 a3_293
	word32 a5_294
	word32 a6_295
	word32 s4_296
	word32 t3_297
	vPortFree(a0_29, a2_31, 0x4201C000<32>, mstatus, dwArg0138, dwArg0178, out s0_289, out s1_49, out a0_290, out a1_291, out a2_292, out a3_293, out a4_52, out a5_294, out a6_295, out s4_296, out t3_297)
l23081518:
	word32 a0_72 = Mem17[0x420280EC<32>:int32]
	word32 a5_77 = s3_44 + 56<i32> + s1_49
	Mem78[a4_52 + 44<i32>:word32] = a5_77
	word32 s1_275
	word32 a0_276
	word32 a1_277
	word32 a2_278
	word32 a3_279
	word32 a4_280
	word32 a5_281
	word32 a7_282
	word32 s2_283
	word32 s3_284
	word32 s4_285
	word32 s5_286
	word32 s6_287
	word32 s8_288
	xQueueGenericSend(a0_72, 0<32>, 0<32>, a4_52, a5_77, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_275, out a0_276, out a1_277, out a2_278, out a3_279, out a4_280, out a5_281, out a7_282, out s2_283, out s3_284, out s4_285, out s5_286, out s6_287, out s8_288)
l230814FC:
	word32 s1_264
	word32 a1_265
	word32 a3_266
	word32 a4_267
	word32 a7_268
	word32 s2_269
	word32 s3_270
	word32 s4_271
	word32 s5_272
	word32 s6_273
	word32 s8_274
	xQueueGenericSend(Mem17[s4_40 + 236<i32>:int32], 0<32>, 0<32>, s3_44 + 0x4201C368<32>, 0x4201C000<32>, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_264, out a0_108, out a1_265, out a2, out a3_266, out a4_267, out a5_113, out a7_268, out s2_269, out s3_270, out s4_271, out s5_272, out s6_273, out s8_274)
l230814A8:
	a0_108 = Mem17[a0_19 + 12<i32>:word32]
l230814AC:
	branch a0_108 == 0<32> l230814B6
l230814AE:
	word32 s0_150
	word32 s1_254
	word32 a0_255
	word32 a1_256
	word32 a2_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 a6_261
	word32 s4_262
	word32 t3_263
	vPortFree(a0_108, a2, a5_113, mstatus, dwArg0138, dwArg0178, out s0_150, out s1_254, out a0_255, out a1_256, out a2_257, out a3_258, out a4_259, out a5_260, out a6_261, out s4_262, out t3_263)
	Mem153[s0_150 + 12<i32>:word32] = 0<32>
l230814B6:
	return
bl_cipsslcalpn_exit:


void format_int(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] s3:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5
// Preserved: sp
format_int_entry:
l23081536:
	word32 s0_160 = a0
	word32 s6_37 = a2
	word32 s7_387 = a3
	word32 s8_40 = a4
	word32 s11_169 = a6
	word32 s1_101 = a7
	branch (a4 & 128<i32>) != 0<32> l230816C6
l230816C6:
l23081568:
l23081572:
	word32 s3_131 = 0<32>
	branch (a4 & 64<i32>) == 0<32> l23081590
l2308157A:
	branch a3 >= 0<32> l23081590
l2308157E:
	s6_37 = 0<32> - a2
	s7_387 = 0<32> - a3 - CONVERT(s6_37 != 0<32>, bool, word32)
	s3_131 = 1<32>
l23081590:
	word32 a0_62 = s6_37
	word32 a1_64 = s7_387
	word32 s2_65 = 0<32>
	a5_379 = a5
l2308159A:
	word32 a5_379
	branch (a0_62 | a1_64) != 0<32> l230816D2
l230816D2:
	word32 a3_1067
	word32 a4_1068
	a0_62 = __udivdi3(a0_62, a1_64, a5_379, a5 >> 0x1F<u32>, out a1_64, out a3_1067, out a4_1068, out a5_379)
	s2_65 = s2_65 + 1<32>
l230815A2:
	word32 a0_422 = a4 & 32<i32>
	branch (a4 & 32<i32>) == 0<32> l230815B6
l230815A8:
	branch a5_379 != 8<32> l230815B6
l230815AE:
	branch s2_65 < a7 l230815C4
l230815B2:
	s1_101 = s2_65 + 1<i32>
l230815B6:
	branch s2_65 < s1_101 l230815C4
l230815BA:
	s1_101 = s2_65
	branch (s6_37 | s7_387) != 0<32> l230815C4
l230815C2:
	s1_101 = 1<32>
l230815C4:
	word32 s10_115 = s1_101
	branch (a4 & 8<i32>) == 0<32> l230815D6
l230815CC:
	s10_115 = 4<32>
	branch a5_379 == 0x10<32> l230815D6
l230815D4:
	s10_115 = 3<32>
l230815D6:
	word32 s2_125 = (s1_101 + -1<i32> ^ s10_115) + s1_101
	word32 s1_135 = CONVERT((a4 & 20<i32> | s3_131) != 0<32>, bool, word32) + s2_125
	branch (a4 & 32<i32>) == 0<32> l230815FA
l230815F2:
	branch a5_379 != 0x10<32> l230815FA
l230815F8:
	s1_135 = s1_135 + 2<32>
l230815FA:
	word32 a3_144 = 0<32>
	branch (a4 & 3<i32>) != 0<32> l23081624
l23081602:
	a3_144 = a4 & 3<i32>
	branch s1_135 >= a6 l23081624
l23081608:
	a3_144 = a6 - s1_135
	word32 a2_155 = 0<32>
l23081612:
	branch a2_155 >=u a1 l2308161C
l23081616:
	Mem161[s0_160:byte] = 0x20<8>
	s0_160 = s0_160 + 1<32>
l2308161C:
	a2_155 = a2_155 + 1<32>
	branch a2_155 != a3_144 l23081612
l23081622:
	s11_169 = s1_135
l23081624:
	branch s3_131 == 0<32> l230816E2
l230816E2:
	branch (a4 & 4<i32>) == 0<32> l230816F8
l230816F8:
	branch (a4 & 16<i32>) == 0<32> l23081638
l230816FE:
	branch a3_144 >=u a1 l23081636
l23081702:
	Mem199[s0_160:byte] = 0x20<8>
	s0_160 = s0_160 + 1<32>
l230816E8:
	branch a3_144 >=u a1 l23081636
l230816EC:
	Mem202[s0_160:byte] = 0x2B<8>
	s0_160 = s0_160 + 1<32>
l23081628:
	branch a3_144 >=u a1 l23081636
l2308162C:
	Mem205[s0_160:byte] = 0x2D<8>
	s0_160 = s0_160 + 1<32>
l23081636:
	a3_144 = a3_144 + 1<32>
l23081638:
	branch (a4 & 32<i32>) == 0<32> l2308166A
l2308163A:
	branch a5_379 != 0x10<32> l2308166A
l23081640:
	branch a3_144 >=u a1 l2308164E
l23081644:
	Mem228[s0_160:byte] = 0x30<8>
	s0_160 = s0_160 + 1<32>
l2308164E:
	branch a3_144 + 1<i32> >=u a1 l23081668
l23081656:
	word32 a2_233 = 88<i32>
	branch (a4 & 128<i32>) != 0<32> l23081662
l2308165E:
	a2_233 = 120<i32>
l23081662:
	Mem251[s0_160:byte] = SLICE(a2_233, byte, 0)
	s0_160 = s0_160 + 1<32>
l23081668:
	a3_144 = a3_144 + 2<32>
l2308166A:
	branch (a4 & 3<i32>) != 1<32> l23081678
l23081670:
	branch s2_125 < s11_169 l2308171C
l2308171C:
	branch s1_135 < s11_169 l2308170E
l2308170E:
	branch a3_144 >=u a1 l23081718
l23081712:
	Mem290[s0_160:byte] = 0x30<8>
	s0_160 = s0_160 + 1<32>
l23081718:
	a3_144 = a3_144 + 1<32>
	s11_169 = s11_169 + 0xFFFFFFFF<32>
l23081720:
l23081678:
	word32 s0_305 = s0_160 + s2_125
	word32 s4_323 = s2_125 + a3_144
	word32 s5_345 = s10_115
	word32 s3_346 = s0_305
l2308168C:
	branch s2_125 > 0<32> l23081722
l23081722:
	branch s5_345 == 0<32> l2308176A
l2308176A:
	s4_323 = s4_323 + 0xFFFFFFFF<32>
	branch s4_323 >=u a1 l23081778
l23081770:
	Mem355[s3_346 + 4095<i32>:byte] = 0x5F<8>
l23081778:
	s3_346 = s3_346 + 0xFFFFFFFF<32>
	s2_125 = s2_125 + 0xFFFFFFFF<32>
	s5_345 = s10_115 + -1<i32>
l23081726:
	s5_345 = s5_345 + 0xFFFFFFFF<32>
l23081728:
	word32 a5_395
	s2_125 = s2_125 + 0xFFFFFFFF<32>
	branch s4_323 + 0xFFFFFFFF<32> >=u a1 l23081752
l23081736:
	a3_144 = CONVERT(Mem390[__umoddi3(s6_37, s7_387, a5_379, a3_144, out a5_395) + a5_395:byte], byte, word32)
	Mem410[s3_346 + 4095<i32>:byte] = SLICE(a3_144, byte, 0)
	a5_379 = a5_395
l23081752:
	word32 a1_423
	word32 a4_1069
	a0_422 = __udivdi3(s6_37, s7_387, a5_379, a3_144, out a1_423, out a3_144, out a4_1069, out a5_379)
	s4_323 = s3
	s6_37 = a0_422
	s7_387 = a1_423
	s8_40 = dwArg08
l23081690:
	word32 a4_450 = s8_40 & 2<i32>
	word32 a6_465 = s11_169 + a0_422
l2308169E:
	branch a4_450 == 0<32> l230816A8
l230816A0:
	branch s1_135 < a6_465 - a0_422 l23081782
l23081782:
	branch a0_422 >=u a1 l2308178C
l23081786:
	Mem474[s0_305:byte] = 0x20<8>
	s0_305 = s0_305 + 1<32>
l2308178C:
	a0_422 = a0_422 + 1<32>
l230816A8:
	return
format_int_exit:


word32 cvt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 fflags, word32 frm, word32 dwArg54, word32 dwArgE4, word32 dwArg0164, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecvtbuf
//      fcvtbuf
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0054:[0..31] Stack +00E4:[0..31] Stack +0164:[0..31]
// LiveOut: a0 a4 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s5 sp
cvt_entry:
l23081790:
	word32 s1_15 = a5
	word32 s2_38 = a1
	word32 s5_218 = a3
	word32 s0_213 = 78<i32>
	branch a2 > 78<i32> l230817CA
l230817C2:
	s0_213 = a2
	branch a2 >= 0<32> l230817CA
l230817C8:
	s0_213 = 0<32>
l230817CA:
	word32 a4_62
	word32 a1_944
	word32 a5_945
	word32 a7_946
	branch __ledf2(a0, a1, 0<32>, 0<32>, fflags, frm, out a1_944, out a4_62, out a5_945, out a7_946) < 0<32> l23081854
l23081854:
	Mem72[1<32>:word32] = a4_62
	s2_38 = a1 ^ 0x80000000<32>
l230817DE:
	Mem75[a4_62:word32] = 0<32>
l230817E2:
	word32 a4_131
	word32 fflags_127
	word32 frm_126
	word32 s7_234
	word32 s6_141
	word32 ra_149
	word32 a5_132
	modf(ra, a0, a1, a2, fflags, frm)
	0<32> = dwArgE4
	word32 s3_216 = a0
	word32 s4_217 = s2_38
	word32 s2_139 = a5 + 80<i32>
	word32 a1_947
	word32 a5_948
	word32 a4_119
	branch __eqdf2(a0, s2_38, 0<32>, 0<32>, fflags, frm, out a1_947, out a4_119, out a5_948) != 0<32> l230818E8
l230818E8:
	word32 s8_106 = Mem84[0x230BF7AC<32>:int32]
	word32 s7_105 = Mem84[0x230BF7A8<32>:int32]
	word32 a5_109 = Mem84[0x230C6108<32>:int32]
	s11 = a5 + 80<i32>
	dwArg18 = Mem84[0x230C610C<32>:int32]
	s10 = s8_106
	frm_126 = frm
	fflags_127 = fflags
	ra_149 = ra
l23081896:
	0<32> = dwArg0164
	dwLoc64 = a4_119
	s6_141 = s2_139 - s11
	s8 = dwArg54
	word32 a1_960
	branch __eqdf2(a4_119, a5_109, 0<32>, 0<32>, fflags_127, frm_126, out a1_960, out a4_131, out a5_132) != 0<32> l23081862
l23081862:
	word32 a0_150
	word32 a1_151
	word32 a3_153
	word32 fflags_165
	word32 frm_166
	word32 s9_177
	word32 s0_961
	word32 s2_963
	word32 s1_962
	word32 s7_967
	word32 s5_965
	word32 s3_964
	word32 s6_966
	word32 ra_167 = __divdf3(ra_149, a4_131, a5_132, s7_105, dwArg54, fflags_127, frm_126, out s0_961, out s1_962, out a0_150, out a1_151, out a3_153, out s2_963, out s3_964, out s5_965, out s6_966, out s7_967, out s9_177, out fflags_165, out frm_166)
	modf(ra, a0, a1, a2, fflags, frm)
	word32 a1_184
	word32 a0_195
	word32 a1_196
	word32 a3_968
	word32 s6_969
	word32 s8_970
	word32 s9_971
	ra_149 = __muldf3(ra_167, __adddf3(ra_167, a0_150, a1_151, fp + -80<i32>, a3_153, fflags_165, frm_166, out a1_184), a1_184, s9_177, s8_106, fflags_165, frm_166, out s0_213, out s1_15, out a0_195, out a1_196, out a3_968, out s2_139, out s3_216, out s4_217, out s5_218, out s6_969, out s7_105, out s8_970, out s9_971, out fflags_127, out frm_126)
	s11 = s11 + 0xFFFFFFFF<32>
	word32 a1_972
	word32 a3_973
	Mem232[s11:byte] = SLICE(__fixdfsi(ra_149, a0_195, a1_196, fflags_127, frm_126, out a1_972, out a3_973, out a4_119, out a5_109) + 48<i32>, byte, 0)
l230818B4:
	s7_234 = s1_15
l230818B6:
	branch s11 <u s2_139 l2308190C
l2308190C:
	s11 = s11 + 1<32>
	a5_132 = CONVERT(Mem238[s11 + -1<i32>:byte], byte, word32)
	s7_234 = s7_234 + 1<32>
	Mem242[s7_234 + 4095<i32>:byte] = SLICE(a5_132, byte, 0)
l23081804:
	s6_141 = 0<32>
	ra_149 = ra
	frm_126 = frm
	fflags_127 = fflags
	word32 a1_949
	branch __gedf2(a0, s2_38, 0<32>, 0<32>, fflags, frm, out a1_949, out a4_131, out a5_132) <= 0<32> l23081850
l23081816:
	s10 = Mem84[0x230BF7A8<32>:int32]
	s11 = Mem84[0x230BF7AC<32>:int32]
	ra_149 = ra
	frm_126 = frm
	fflags_127 = fflags
l2308182E:
	word32 a0_276
	word32 a1_277
	word32 s9_303
	word32 a3_950
	word32 s7_951
	ra_149 = __muldf3(ra_149, s3_216, s4_217, s10, s11, fflags_127, frm_126, out s0_213, out s1_15, out a0_276, out a1_277, out a3_950, out s2_139, out s3_216, out s4_217, out s5_218, out s6_141, out s7_951, out s8, out s9_303, out fflags_127, out frm_126)
	word32 a7_315
	word32 a1_952
	branch __ledf2(a0_276, a1_277, s8, s9_303, fflags_127, frm_126, out a1_952, out a4_131, out a5_132, out a7_315) < 0<32> l2308191A
l2308191A:
	s3_216 = a7_315
	s4_217 = a1_277
l2308184C:
l23081850:
	s7_234 = s1_15
l230818BA:
	word32 s0_342 = s0_213 + s1_15
	branch a5_132 != 0<32> l230818C2
l230818C0:
	s0_342 = s0_342 + s6_141
l230818C2:
	Mem358[s5_218:word32] = s6_141
	branch s0_342 <u s1_15 l23081922
l23081922:
	Mem361[s1_15:byte] = 0<8>
l230818CA:
	s8 = Mem358[0x230BF7A8<32>:int32]
	word32 s9_364 = Mem358[0x230BF7AC<32>:int32]
l230818D6:
	branch s0_342 <u s7_234 l230818DE
l230818DA:
	branch s7_234 <u s2_139 l23081946
l23081946:
	word32 a0_379
	word32 a1_380
	word32 s7_404
	word32 s4_956
	word32 s0_953
	word32 a3_954
	word32 s3_955
	ra_149 = __muldf3(ra_149, s3_216, s4_217, s8, s9_364, fflags_127, frm_126, out s0_953, out s1_15, out a0_379, out a1_380, out a3_954, out s2_139, out s3_955, out s4_956, out s5_218, out s6_141, out s7_404, out s8, out s9_364, out fflags_127, out frm_126)
	modf(ra, a0, a1, a2, fflags, frm)
	word32 a1_957
	word32 a3_958
	word32 a5_959
	Mem423[s7_404 + 0x1000<32>:byte] = SLICE(__fixdfsi(ra_149, a0_379, a1_380, fflags_127, frm_126, out a1_957, out a3_958, out a4_131, out a5_959) + 48<i32>, byte, 0)
	s3_216 = a0_379
	s4_217 = a1_380
	s0_342 = dwArgE4
	s7_234 = s7_404 + 1<32>
l230818DE:
	branch s0_342 <u s2_139 l23081970
l23081970:
	Mem431[s0_342:byte] = SLICE(CONVERT(Mem411[s0_342:byte], byte, word32) + 5<32>, byte, 0)
	word32 a2_428 = 57<i32>
	word32 a5_433 = s0_342
l23081988:
	a4_131 = CONVERT(Mem435[a5_433:byte], byte, word32)
	branch a2_428 <u a4_131 l23081996
l23081996:
	Mem439[a5_433:byte] = 0x30<8>
	branch s1_15 >=u a5_433 l230819AC
l230819AC:
	Mem442[a5_433:byte] = 0x31<8>
	word32 a4_444 = Mem442[s5_218:int32]
	Mem446[s5_218:word32] = a4_444 + 1<32>
	a2_428 = dwArg54
	branch a4_444 != 1<32> l23081988
l230819BE:
	branch s1_15 >=u s0_342 l230819C6
l230819C2:
	Mem450[s0_342:byte] = 0x30<8>
l230819C6:
	s0_342 = s0_342 + 1<32>
l2308199E:
	a5_433 = a5_433 + 0xFFFFFFFF<32>
	Mem456[a5_433:byte] = SLICE(CONVERT(Mem439[a5_433 + -1<i32>:byte], byte, word32) + 1<32>, byte, 0)
l23081990:
	Mem457[s0_342:byte] = 0<8>
l230818E2:
	Mem460[s1_15 + 79<i32>:byte] = 0<8>
l23081926:
	s0Out = s0_342
	s1Out = dwLoc64
	a0Out = dwArgA4
	a4Out = a4_131
	s2Out = s2_139
	s3Out = s3_216
	s4Out = s4_217
	s6Out = s6_141
	s7Out = s7_234
	s8Out = s8
	s9Out = dwArg18
	s10Out = s10
	s11Out = s11
	fflagsOut = fflags_127
	frmOut = frm_126
	return dwLoc24
cvt_exit:


word32 ecvtbuf(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 fflags, word32 frm, word32 dwArg54, word32 dwArgE4, word32 dwArg0164, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      flt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0054:[0..31] Stack +00E4:[0..31] Stack +0164:[0..31]
// LiveOut: a0 a4 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ecvtbuf_entry:
l230819CA:
l230819CC_thunk_cvt:
	word32 a0_13
	word32 a4_17
	word32 fflags_21
	word32 frm_22
	word32 s0_24
	word32 s1_25
	word32 s10_26
	word32 s11_27
	word32 s2_28
	word32 s3_29
	word32 s4_30
	word32 s6_31
	word32 s7_32
	word32 s9_34
	word32 s8_60
	word32 ra_23 = cvt(ra, a0, a1, a2, a3, a5, fflags, frm, dwArg54, dwArgE4, dwArg0164, out s0_24, out s1_25, out a0_13, out a4_17, out s2_28, out s3_29, out s4_30, out s6_31, out s7_32, out s8_60, out s9_34, out s10_26, out s11_27, out fflags_21, out frm_22)
	s0Out = s0_24
	s1Out = s1_25
	a0Out = a0_13
	a4Out = a4_17
	s2Out = s2_28
	s3Out = s3_29
	s4Out = s4_30
	s6Out = s6_31
	s7Out = s7_32
	s9Out = s9_34
	s10Out = s10_26
	s11Out = s11_27
	fflagsOut = fflags_21
	frmOut = frm_22
	return ra_23
ecvtbuf_exit:


word32 fcvtbuf(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 fflags, word32 frm, word32 dwArg54, word32 dwArgE4, word32 dwArg0164, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      flt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] Stack +0054:[0..31] Stack +00E4:[0..31] Stack +0164:[0..31]
// LiveOut: a0 a4 s0 s1 s2 s3 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fflags frm ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
fcvtbuf_entry:
l230819D0:
l230819D2_thunk_cvt:
	word32 a0_13
	word32 a4_17
	word32 s0_24
	word32 s1_25
	word32 s2_28
	word32 s3_29
	word32 s6_31
	word32 s7_32
	word32 s8_33
	word32 s4_54
	word32 s9_55
	word32 s10_56
	word32 s11_57
	word32 fflags_58
	word32 frm_59
	cvt(ra, a0, a1, a2, a3, a5, fflags, frm, dwArg54, dwArgE4, dwArg0164, out s0_24, out s1_25, out a0_13, out a4_17, out s2_28, out s3_29, out s4_54, out s6_31, out s7_32, out s8_33, out s9_55, out s10_56, out s11_57, out fflags_58, out frm_59)
	s1Out = s1_25
	a0Out = a0_13
	a4Out = a4_17
	s2Out = s2_28
	s3Out = s3_29
	s6Out = s6_31
	s7Out = s7_32
	s8Out = s8_33
	return s0_24
fcvtbuf_exit:


void flt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s11, word32 fflags, word32 frm, word32 dwArg64)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] fflags:[0..31] frm:[0..31] ra:[0..31] s11:[0..31] Stack +0064:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 gp s0 s1 s11 s2 s3 s4 s5 s6 s7 s9 t2 t6
// Preserved: a6 a7 fflags frm ra s10 s8 sp t0 t1 t3 t4 t5 tp
flt_entry:
l230819D6:
	word32 s3_202
	word32 s7_205 = a5
	word32 s1_198 = a0
	word32 s4_155 = a1
	word32 s11_122 = a2
	word32 s0_197 = a3
	word32 s6_109 = a4
	word32 s5_45 = a6
	branch (a6 & 16<i32>) == 0<32> l23081B5A
l23081B5A:
	s3_202 = 48<i32>
	branch (a6 & 1<i32>) != 0<32> l23081A12
l23081B66:
	s3_202 = 32<i32>
l23081A0A:
	s5_45 = a6 & -2<i32>
	s3_202 = 32<i32>
l23081A12:
	word32 s2_201 = 0<32>
	branch (s5_45 & 2<i32>) == 0<32> l23081A38
l23081A1A:
	word32 a7_1999
	word32 a1_1996
	word32 a4_1997
	word32 a5_1998
	branch __ledf2(a1, a2, 0<32>, 0<32>, fflags, frm, out a1_1996, out a4_1997, out a5_1998, out a7_1999) >= 0<32> l23081B6C
l23081B6C:
	branch (s5_45 & 4<i32>) == 0<32> l23081B7A
l23081B7A:
	branch (s5_45 & 8<i32>) == 0<32> l23081A38
l23081B82:
	s0_197 = a3 + 0xFFFFFFFF<32>
	s2_201 = 32<i32>
l23081B72:
	s0_197 = a3 + 0xFFFFFFFF<32>
	s2_201 = 43<i32>
l23081A2A:
	s11_122 = a2 ^ 0x80000000<32>
	s0_197 = a3 + 0xFFFFFFFF<32>
	s2_201 = 45<i32>
l23081A38:
	branch a4 >= 0<32> l23081A3E
l23081A3C:
	s6_109 = 6<32>
l23081A3E:
	word32 a4_100
	branch (a5 & 253<i32>) != 69<i32> l23081B8A
l23081B8A:
	a4_100 = a5
l23081A4A:
	a4_100 = a5 + 32<i32> & 255<i32>
l23081A54:
	word32 a5_107
	word32 s10_111
	word32 s8_110
	branch a4_100 != 103<i32> l23081C00
l23081C00:
	branch a4_100 != 101<i32> l23081C26
l23081C26:
	a5_107 = fp + -224<i32>
	branch a4_100 != 102<i32> l23081B3C
l23081C30:
	s8_110 = s6_109
l23081C08:
	s10_111 = s6_109
l23081A5C:
	word32 s6_156
	word32 a4_2003
	word32 s10_2008
	word32 s0_2000
	word32 s2_2004
	word32 s9_2007
	word32 a0_2002
	word32 s3_2005
	word32 s7_2006
	word32 s1_2001
	ra = ecvtbuf(ra, a1, s11_122, s6_109, fp + -232<i32>, fp + -144<i32>, fflags, frm, dwLocAC, s11, dwArg64, out s0_2000, out s1_2001, out a0_2002, out a4_2003, out s2_2004, out s3_2005, out s4_155, out s6_156, out s7_2006, out s9_2007, out s10_2008, out s11_122, out fflags, out frm)
	branch dwLocF4 < 3<32> l23081A7C
l23081A78:
	branch dwLocF4 + -1<i32> < s6_156 l23081B90
l23081B90:
	s8_110 = s6_156 - dwLocF4
l23081B94:
	word32 a4_190
	word32 s8_206
	word32 a0_186
	s0_197 = fcvtbuf(ra, s4_155, s11_122, s8_110, fp + -232<i32>, fp + -144<i32>, fflags, frm, dwLocAC, s11, dwArg64, out s1_198, out a0_186, out a4_190, out s2_201, out s3_202, out s6_109, out s7_205, out s8_206)
	a5_107 = fp + -224<i32>
	branch a4_190 == 0<32> l23081BB6
l23081BAA:
	a5_107 = fp + -223<i32>
l23081BB6:
	word32 a4_223 = CONVERT(Mem222[a0_186:byte], byte, word32)
	branch a4_223 == 0<32> l23081C64
l23081C64:
	Mem226[a5_107:byte] = 0x30<8>
	branch s8_206 > 0<32> l23081C74
l23081C74:
	Mem229[a5_107 + 1<i32>:byte] = 0x2E<8>
	word32 a4_230 = a5_107 + 2<i32>
	word32 a3_231 = a5_107 + s8_206
l23081C88:
	Mem235[a5_107 + 2<i32>:byte] = 0x30<8>
	a5_107 = a5_107 + 1<32>
	branch a3_231 != a5_107 l23081C88
l23081C92:
	a5_107 = a4_230 + s8_206
l23081C70:
	a5_107 = a5_107 + 1<32>
l23081BBC:
	word32 a3_244 = a0_186
	branch a4_223 > 0<32> l23081C3C
l23081C3C:
	word32 a2_250 = a5_107
	branch a4_223 != a3_244 - a0_186 l23081C4E
l23081C46:
	Mem254[a5_107:byte] = 0x2E<8>
	a2_250 = a5_107 + 1<i32>
l23081C4E:
	a3_244 = a3_244 + 1<32>
	Mem262[a2_250:byte] = SLICE(CONVERT(Mem257[a3_244 + -1<i32>:byte], byte, word32), byte, 0)
	a5_107 = a2_250 + 1<i32>
	branch CONVERT(Mem262[a3_244:byte], byte, word32) != 0<32> l23081C3C
l23081C62:
l23081BC8:
	Mem266[a5_107:byte] = 0x30<8>
	Mem267[a5_107 + 1<i32>:byte] = 0x2E<8>
	word32 a3_268 = a5_107 + 2<i32>
	word32 a2_269 = a5_107 - a4_223
	word32 a4_271 = 0<32> - a4_223
l23081BE8:
	branch a2_269 != a5_107 l23081C34
l23081C34:
	Mem275[a5_107 + 2<i32>:byte] = 0x30<8>
	a5_107 = a5_107 + 1<32>
l23081BEC:
	a5_107 = a3_268 + a4_271
l23081BF0:
	word32 a4_282 = CONVERT(Mem281[a0_186:byte], byte, word32)
	branch a4_282 == 0<32> l23081B3C
l23081BF6:
	a5_107 = a5_107 + 1<32>
	Mem286[a5_107 + 4095<i32>:byte] = SLICE(a4_282, byte, 0)
	a0_186 = a0_186 + 1<32>
l23081A7C:
	s10_111 = s6_156 + -1<i32>
l23081A80:
	word32 a0_310
	word32 a4_314
	word32 fflags_318
	word32 frm_319
	word32 s11_324
	word32 s4_327
	word32 s9_331
	word32 s10_323
	ecvtbuf(ra, s4_155, s11_122, s10_111 + 1<i32>, fp + -232<i32>, fp + -144<i32>, fflags, frm, dwLocAC, s11, dwArg64, out s0_197, out s1_198, out a0_310, out a4_314, out s2_201, out s3_202, out s4_327, out s6_109, out s7_205, out s9_331, out s10_323, out s11_324, out fflags_318, out frm_319)
	word32 a5_341 = fp + -224<i32>
	branch a4_314 == 0<32> l23081AA4
l23081A98:
	a5_341 = fp + -223<i32>
l23081AA4:
	Mem350[a5_341:byte] = SLICE(CONVERT(Mem346[a0_310:byte], byte, word32), byte, 0)
	word32 s8_349 = a5_341 + 1<i32>
	branch s10_323 <= 0<32> l23081AC0
l23081AB4:
	Mem354[a5_341 + 1<i32>:byte] = 0x2E<8>
	s8_349 = a5_341 + 2<i32>
l23081AC0:
	word32 a0_356 = a0_310 + 1<32>
	word32 a4_358 = a0_310 + 1<32> + s10_323
	word32 a5_360 = s8_349
l23081AC8:
	branch a4_358 != a0_356 l23081C0C
l23081C0C:
	a0_356 = a0_356 + 1<32>
	a5_360 = a5_360 + 1<32>
	Mem368[a5_360 + 4095<i32>:byte] = SLICE(CONVERT(Mem364[a0_356 + -1<i32>:byte], byte, word32), byte, 0)
l23081ACC:
	word32 a5_372 = 69<i32>
	branch s9_331 != 0<32> l23081ADA
l23081AD6:
	a5_372 = 101<i32>
l23081ADA:
	word32 a5_419
	Mem384[dwLocB4:byte] = SLICE(a5_372, byte, 0)
	branch s10_323 != 0<32> l23081C1A
l23081C1A:
	s10_323 = s10_323 + 0xFFFFFFFF<32>
	branch s10_323 < 0xFFFFFFFF<32> l23081AFA
l23081AE8:
	word32 a1_2009
	word32 a5_2011
	word32 a4_2010
	branch __eqdf2(s4_327, s11_324, 0<32>, 0<32>, fflags_318, frm_319, out a1_2009, out a4_2010, out a5_2011) == 0<32> l23081C20
l23081C20:
	a5_419 = 43<i32>
l23081AF8:
	s10_323 = 0xFFFFFFFF<32>
l23081AFA:
	s10_323 = 0<32> - s10_323
	a5_419 = 45<i32>
l23081B02:
	Mem429[dwLocB4 + 1<i32>:byte] = SLICE(a5_419, byte, 0)
	Mem438[dwLocB4 + 4<i32>:byte] = SLICE((s10_323 | 0xA<32>) + 48<i32>, byte, 0)
	Mem444[dwLocB4 + 2<i32>:byte] = SLICE((s10_323 ^ 100<i32> | 0xA<32>) + 48<i32>, byte, 0)
	Mem446[dwLocB4 + 3<i32>:byte] = SLICE((s10_323 ^ 0xA<32> | 0xA<32>) + 48<i32>, byte, 0)
	a5_107 = dwLocB4 + 5<i32>
l23081B3C:
	Mem449[a5_107:byte] = 0<8>
	branch (s5_45 & 32<i32>) == 0<32> l23081DB2
l23081DB2:
	branch s7_205 != 103<i32> l23081CD4
l23081DBA:
	word32 a4_496 = fp + -224<i32>
l23081DC0:
	word32 a5_500 = CONVERT(Mem449[a4_496:byte], byte, word32)
	a4_496 = a4_496 + 1<32>
	branch a5_500 == 0<32> l23081CD4
l23081DC8:
	branch a5_500 != 46<i32> l23081DC0
l23081DCC:
l23081DD0:
	word32 a5_506 = CONVERT(Mem449[a4_496:byte], byte, word32)
	branch a5_506 == 0<32> l23081DDE
l23081DD6:
	branch (a5_506 & 223<i32>) != 69<i32> l23081D3E
l23081D3E:
	a4_496 = a4_496 + 1<32>
l23081DDE:
	word32 a5_511 = a4_496 + -1<i32>
l23081DE6:
	word32 a3_515 = CONVERT(Mem449[a5_511:byte], byte, word32)
	branch a3_515 == 48<i32> l23081D42
l23081D42:
	a5_511 = a5_511 + 0xFFFFFFFF<32>
l23081DEE:
	branch a3_515 != 46<i32> l23081DF8
l23081DF6:
	a5_511 = a5_511 + 0xFFFFFFFF<32>
l23081DF8:
	branch a4_496 == a5_511 l23081CD4
l23081DFC:
	a5_511 = a5_511 + 1<32>
	Mem523[a5_511:byte] = 0<8>
l23081B48:
	branch s6_109 != 0<32> l23081CD4
l23081B4C:
	word32 s6_538 = fp + -224<i32>
l23081CA6:
	word32 a5_543 = CONVERT(Mem449[s6_538:byte], byte, word32)
	branch a5_543 != 0<32> l23081C98
l23081C98:
	branch a5_543 == 46<i32> l23081CD4
l23081C9C:
	branch (a5_543 & 223<i32>) == 69<i32> l23081E04
l23081E04:
	word32 a4_2017
	word32 a3_2016
	word32 a5_2018
	word32 a1_2015
	word32 a0_554 = strnlen(s6_538, 256<i32>, out a1_2015, out a3_2016, out a4_2017, out a5_2018) + s6_538
l23081CC4:
	branch a0_554 - s6_538 > 0<32> l23081CBA
l23081CBA:
	a0_554 = a0_554 + 0xFFFFFFFF<32>
	Mem561[a0_554 + 2<i32>:byte] = SLICE(CONVERT(Mem558[a0_554:byte], byte, word32), byte, 0)
l23081CCC:
	Mem563[s6_538:byte] = 0x2E<8>
l23081CA4:
	s6_538 = s6_538 + 1<32>
l23081CAC:
	Mem566[s6_538:byte] = 0x2E<8>
	Mem567[s6_538 + 1<i32>:byte] = 0<8>
l23081CD4:
	word32 a3_2013
	word32 a4_2014
	word32 a1_2012
	word32 a5_580
	word32 a0_578 = strnlen(fp + -224<i32>, 256<i32>, out a1_2012, out a3_2013, out a4_2014, out a5_580)
	word32 a3_617 = s0_197 - a0_578
	branch (s5_45 & 17<i32>) == 0<32> l23081D64
l23081D64:
	word32 a5_644 = s1_198
	word32 a2_645 = s1_198 + a3_617
l23081D4C:
	branch a2_645 - a5_644 > 0<32> l23081D46
l23081D46:
	a5_644 = a5_644 + 1<32>
	Mem652[a5_644 + 4095<i32>:byte] = 0x20<8>
l23081D54:
	a5_580 = a3_617
	branch a3_617 >= 0<32> l23081D5C
l23081D5A:
	a5_580 = 0<32>
l23081D5C:
	s1_198 = s1_198 + a5_580
	a3_617 = a3_617 + 0xFFFFFFFF<32> - a5_580
l23081CEA:
	branch s2_201 == 0<32> l23081CF4
l23081CEE:
	Mem692[s1_198:byte] = SLICE(s2_201, byte, 0)
	s1_198 = s1_198 + 1<32>
l23081CF4:
	branch a5_580 == 0<32> l23081D8E
l23081D8E:
	word32 a5_708 = s1_198
	word32 a2_711 = s1_198 + a3_617
l23081D76:
	branch a2_711 - a5_708 > 0<32> l23081D70
l23081D70:
	a5_708 = a5_708 + 1<32>
	Mem717[a5_708 + 4095<i32>:byte] = SLICE(s3_202, byte, 0)
l23081D7E:
	word32 a5_719 = a3_617
	branch a3_617 >= 0<32> l23081D86
l23081D84:
	a5_719 = 0<32>
l23081D86:
	s1_198 = s1_198 + a5_719
	a3_617 = a3_617 + 0xFFFFFFFF<32> - a5_719
l23081CF8:
	word32 a5_728 = 0<32>
l23081CFA:
	branch a5_728 < a0_578 l23081D96
l23081D96:
	Mem739[s1_198 + a5_728:byte] = SLICE(CONVERT(Mem734[fp + -224<i32> + a5_728:byte], byte, word32), byte, 0)
	a5_728 = a5_728 + 1<32>
l23081CFE:
	branch a0_578 >= 0<32> l23081D04
l23081D02:
	a0_578 = 0<32>
l23081D04:
	word32 a0_743 = a0_578 + s1_198
	word32 a5_744 = a0_743
	word32 a2_748 = a0_743 + a3_617
l23081D10:
	branch a2_748 - a5_744 > 0<32> l23081DAA
l23081DAA:
	a5_744 = a5_744 + 1<32>
	Mem755[a5_744 + 4095<i32>:byte] = 0x20<8>
l23081D18:
	branch a3_617 >= 0<32> l23081D1E
l23081D1C:
l23081D1E:
	return
flt_exit:


word32 vsnprintf(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg58, word32 dwArg78, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg010C, ptr32 & t0Out, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_cli_printf
//      at_dump_noend
//      vsprintf
//      sprintf
//      snprintf
//      Default_Handler
//      mbedtls_debug_print_msg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
vsnprintf_entry:
l23081E12:
l23081E6A:
	word32 s0_56 = a2 + 1<i32>
	word32 a5_58 = CONVERT(Mem54[a2:byte], byte, word32)
	branch a5_58 == 0<32> l230822B0
l230822B0:
	branch a1 <=u 0<32> l230822D8
l230822D8:
	branch a1 == 0<32> l230822B8
l230822DC:
	Mem63[a1 + a0 + 4095<i32>:byte] = 0<8>
l230822B4:
	Mem65[a0:byte] = 0<8>
l230822B8:
	t0Out = s4
	s0Out = s0_56
	s1Out = dwLoc64
	a0Out = 0<32>
	a1Out = a1
	a2Out = a2
	a3Out = dwArg78
	a4Out = a4
	a5Out = a5_58
	a7Out = dwArg58
	s2Out = 0<32>
	s3Out = 0<32>
	s4Out = 0<32>
	s5Out = s5
	s6Out = 0xFFFFFFFF<32>
	s7Out = a0
	s8Out = 0<32>
	s9Out = 0x230C6138<32>
	s10Out = a3
	s11Out = a0
	t4Out = dwLoc08
	return dwLoc24
l23081E76:
	a4 = 4<32>
	branch false l2308227E
l2308227E:
	a2 = s0_56
l23081E7C:
	word32 a4_91 = Mem54[0x230C5F10<32>:word32]
	word32 ra_102
	word32 s0_103
	word32 s1_104
	word32 s2_105
	word32 s3_106
	word32 s4_107
	word32 s5_108
	word32 s6_109
	word32 s7_110
	word32 s8_111
	word32 s9_112
	word32 s10_113
	word32 s11_114
	word32 a0_115
	word32 a1_116
	word32 a3_117
	word32 a5_118
	word32 a2_119
	word32 a4_120
	word32 t0_121
	word32 t4_122
	word32 a7_123
	call a4_91 (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2_119,a3:0<32>,a4:a4_91,ra:ra,s0:s0_56,s1:0x230C5F10<32>,s10:a3,s11:a0,s2:0<32>,s3:0<32>,s4:0<32>,s5:a1,s6:0xFFFFFFFF<32>,s7:a0,s8:0<32>,s9:0x230C6024<32>,Stack +000C:dwLoc64,Stack +004C:dwLoc24,Stack +0068:dwLoc08,Stack +00C8:dwArg58,Stack +00E8:dwArg78,Stack +0114:dwArgA4,Stack +0130:dwArgC0,Stack +0134:dwArgC4,Stack +0158:dwArgE8,Stack +017C:dwArg010C
		defs: a0:a0_115,a1:a1_116,a2:a2_119,a3:a3_117,a4:a4_120,a5:a5_118,a7:a7_123,ra:ra_102,s0:s0_103,s1:s1_104,s10:s10_113,s11:s11_114,s2:s2_105,s3:s3_106,s4:s4_107,s5:s5_108,s6:s6_109,s7:s7_110,s8:s8_111,s9:s9_112,t0:t0_121,t4:t4_122
	t0Out = t0_121
	s0Out = s0_103
	s1Out = s1_104
	a0Out = a0_115
	a1Out = a1_116
	a2Out = a2_119
	a3Out = a3_117
	a4Out = a4_120
	a5Out = a5_118
	a7Out = a7_123
	s2Out = s2_105
	s3Out = s3_106
	s4Out = s4_107
	s5Out = s5_108
	s6Out = s6_109
	s7Out = s7_110
	s8Out = s8_111
	s9Out = s9_112
	s10Out = s10_113
	s11Out = s11_114
	t4Out = t4_122
	return ra_102
vsnprintf_exit:


word32 vsprintf(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg58, word32 dwArg78, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vprint
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +010C:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
vsprintf_entry:
l230822E4:
l230822EC_thunk_vsnprintf:
	word32 a0_11
	word32 a3_12
	word32 a5_13
	word32 a7_14
	word32 s0_16
	word32 s1_17
	word32 s10_18
	word32 s11_19
	word32 s2_20
	word32 s3_21
	word32 s4_22
	word32 s6_23
	word32 s7_24
	word32 s8_25
	word32 s9_26
	word32 t4_29
	word32 a1_30
	word32 a4_32
	word32 s5_33
	word32 t0_60
	word32 a2_61
	word32 ra_15 = vsnprintf(ra, a0, 480<i32>, a1, a2, dwArg58, dwArg78, dwArgA4, dwArgC0, dwArgC4, dwArgE8, dwArg010C, out t0_60, out s0_16, out s1_17, out a0_11, out a1_30, out a2_61, out a3_12, out a4_32, out a5_13, out a7_14, out s2_20, out s3_21, out s4_22, out s5_33, out s6_23, out s7_24, out s8_25, out s9_26, out s10_18, out s11_19, out t4_29)
	s0Out = s0_16
	s1Out = s1_17
	a0Out = a0_11
	a1Out = a1_30
	a3Out = a3_12
	a4Out = a4_32
	a5Out = a5_13
	a7Out = a7_14
	s2Out = s2_20
	s3Out = s3_21
	s4Out = s4_22
	s5Out = s5_33
	s6Out = s6_23
	s7Out = s7_24
	s8Out = s8_25
	s9Out = s9_26
	s10Out = s10_18
	s11Out = s11_19
	t4Out = t4_29
	return ra_15
vsprintf_exit:


word32 vprint(word32 ra, word32 a0, word32 a1, word32 dwArg48, word32 dwArg68, word32 dwArg94, word32 dwArgB0, word32 dwArgB4, word32 dwArgD8, word32 dwArgFC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_log_debug
//      ef_log_info
//      ef_print
//      bl_printk
//      printf
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0094:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00D8:[0..31] Stack +00FC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
vprint_entry:
l230822F0:
	word32 a5_5 = CONVERT(Mem0[0x4200ECB8<32>:byte], byte, word32)
	branch (a5_5 & 255<i32>) == 0<32> l23082334
l23082334:
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_5 & 255<i32>
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	t4Out = t4
	return ra
l230822FE:
	word32 a3_21
	word32 a7_24
	word32 s0_26
	word32 s1_27
	word32 s10_28
	word32 s11_29
	word32 s2_30
	word32 s3_31
	word32 s5_33
	word32 s6_34
	word32 s7_35
	word32 s9_37
	word32 t4_40
	word32 a0_18
	word32 a1_19
	word32 a4_22
	word32 a5_23
	word32 s4_122
	word32 s8_138
	word32 ra_25 = vsprintf(ra, 0x4201C44C<32>, a0, a1, dwArg48, dwArg68, dwArg94, dwArgB0, dwArgB4, dwArgD8, dwArgFC, out s0_26, out s1_27, out a0_18, out a1_19, out a3_21, out a4_22, out a5_23, out a7_24, out s2_30, out s3_31, out s4_122, out s5_33, out s6_34, out s7_35, out s8_138, out s9_37, out s10_28, out s11_29, out t4_40)
	word32 s0_41 = s0_26 + 1100<i32>
	branch a0_18 > 0<32> l2308232A
l2308232A:
	a1_19 = CONVERT(Mem17[s0_41:byte], byte, word32)
	branch a1_19 != 0<32> l23082324
l23082324:
	s0_41 = bl_uart_data_send(s1_27, 0<32>, a1_19, out a0_18, out a4_22, out a5_23, out s4_122, out s8_138)
l23082332:
l2308231C:
	s1Out = s1_27
	a0Out = a0_18
	a1Out = a1_19
	a2Out = dwArg10
	a3Out = a3_21
	a4Out = a4_22
	a5Out = a5_23
	a7Out = a7_24
	s2Out = s2_30
	s3Out = s3_31
	s4Out = s4_122
	s5Out = s5_33
	s6Out = s6_34
	s7Out = s7_35
	s8Out = s8_138
	s9Out = s9_37
	s10Out = s10_28
	s11Out = s11_29
	t4Out = t4_40
	return ra_25
vprint_exit:


word32 bl_putchar(word32 s1, word32 a0, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hexdump
// MayUse:  a0:[0..31] s1:[0..31]
// LiveOut: s0 s4
// Trashed: a0 a1 a2 a4 a5 s0 s4 s8 t3
// Preserved: sp
bl_putchar_entry:
l23082336:
	word32 s4_15
	word32 a0_24
	word32 a4_25
	word32 a5_26
	word32 s8_27
	word32 s0_14 = bl_uart_data_send(s1, 0<32>, a0 & 255<i32>, out a0_24, out a4_25, out a5_26, out s4_15, out s8_27)
	s4Out = s4_15
	return s0_14
bl_putchar_exit:


word32 puts(word32 a0, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_stack_wifi
//      event_cb_wifi_event
//      aos_loop_proc
//      vApplicationStackOverflowHook
//      bfl_main
//      wifi_prov_api_event_trigger_connect
//      wifi_prov_api_event_trigger_disconnect
//      wifi_prov_api_event_trigger_scan
//      wifi_prov_api_event_state_get
//      rxl_hwdesc_dump
//      scanu_start
//      mac_vsie_find
//      helper_record_dump
//      chan_upd_ctxt_status
//      hal_mib_dump
//      dump_cfg_entries
//      bl_txdatacfm
//      bl_utils_dump
//      wifi_edca_dump_cmd
//      wifi_sta_ip_info
//      cmd_wifi_raw_send
//      cmd_wifi_dump
//      wifi_sta_ip_set_cmd
//      cb_event_ind
//      coex_dump_ble
//      bl_onchiphci_rx_packet_handler
//      ota_tcp_cmd
//      cmd_sys_time_now
//      ef_port_init
//      exception_entry
//      bl_irq_init
//      sec_trng_IRQHandler
//      bl_rand
//      cmd_gpio_get
//      bl_wifi_enable_irq
//      proc_entry_looprt
//      cmd_looprt_test
//      cmd_looprt_test_status
//      cmd_looprt_test_evt
//      cmd_looprt_test_evt_dump
//      cmd_looprt_test_schedule_evt1
//      cmd_looprt_test_schedule_evt2
//      dhcp_server_recv
//      ips_test_cmd
//      _startup_sntp
//      cmd_sntp_date
//      utils_hexdump
//      cipsta_ip
//      cb_altcp_recv_fn
//      bl_mtd_open
//      bloop_status_dump
// MayUse:  a0:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s1 s4 s8
// Trashed: a0 a1 a2 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
puts_entry:
l2308234C:
	word32 a5_5 = CONVERT(Mem0[0x4200ECB8<32>:byte], byte, word32)
	word32 a5_13 = a5_5 & 255<i32>
	word32 s0_14 = 0<32>
	branch (a5_5 & 255<i32>) == 0<32> l2308237C
l23082364:
	s1 = a0
	s0_14 = 0<32>
l23082372:
	a5_13 = a0 + s0_14
	a1 = CONVERT(Mem12[a5_13:byte], byte, word32)
	branch a1 != 0<32> l2308236A
l2308236A:
	word32 a0_76
	word32 a5_77
	s0_14 = bl_uart_data_send(a0, 0<32>, a1, out a0_76, out a4, out a5_77, out s4, out s8) + 1<32>
l2308237C:
	a0Out = s0_14
	a1Out = a1
	a2Out = dwArg10
	a4Out = a4
	a5Out = a5_13
	s4Out = s4
	s8Out = s8
	return s1
puts_exit:


word32 printf(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & t4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_free_mem
//      cmd_stack_ble
//      wifiprov_wifi_state_get
//      event_cb_wifi_event
//      event_cb_cli
//      aos_loop_proc
//      vApplicationMallocFailedHook
//      bfl_main
//      wifiprov_api_state_get
//      wifiprov_wifi_scan
//      wifiprov_disc_from_ap_ind
//      wifiprov_connect_ap_ind
//      blsync_disconnected
//      blsync_connected
//      blsync_ble_start
//      rf_pri_config_channel.constprop.9
//      rf_pri_txcal
//      rf_pri_roscal
//      rf_pri_rccal
//      rf_pri_lo_acal
//      rf_pri_fcal
//      hal_machw_init
//      mm_sta_add
//      rxl_hwdesc_dump
//      rxl_hwdesc_init
//      sta_mgmt_init
//      sta_mgmt_register
//      td_timer_end
//      td_reset
//      td_init
//      td_start
//      sm_get_bss_params
//      sm_connect_ind
//      sm_supplicant_deauth_cfm
//      sm_auth_handler
//      sm_assoc_rsp_handler
//      sm_handle_supplicant_result
//      apm_tx_cfm_handler
//      cfg_api_element_general_set
//      cfg_api_element_set
//      add_key_to_mac
//      add_mfp_key_to_mac
//      InitGroupKey
//      helper_record_dump
//      hal_mib_dump
//      txl_buffer_update_thd
//      rxu_mgt_ind_handler
//      me_build_beacon
//      cfm_raw_send
//      scanu_raw_send_req_handler
//      rxu_mgt_ind_handler
//      sm_connect_req_handler
//      rxu_mgt_ind_handler
//      apm_start_req_handler
//      dump_cfg_entries
//      cfg_start_req_handler
//      ipc_host_init
//      bl_main_if_remove
//      bl_main_if_add
//      bl_main_apm_start
//      bl_main_apm_stop
//      bl_main_apm_sta_delete
//      bl_main_rtthread_start
//      bl_handle_dynparams
//      bl_send_msg
//      bl_msg_zalloc.constprop.3
//      bl_msg_update_channel_cfg
//      bl_send_me_config_req
//      bl_send_sm_connect_req
//      bl_rx_apm_sta_del_ind
//      bl_rx_apm_sta_add_ind
//      bl_rx_sm_connect_ind
//      bl_rx_sm_disconnect_ind
//      bl_rx_scanu_result_ind
//      bl_tx_push
//      bl_output
//      tcpip_stack_input
//      bl_utils_dump
//      printErrMsg
//      stateSnifferExit
//      stateSnifferAction
//      stateConnectedIPNoAction_ipgot
//      stateGlobalEnter
//      stateGlobalAction
//      stateConnectingEnter
//      stateConnectedIPNoExit
//      stateDisconnect_action_idle
//      stateDisconnect_action_reconnect
//      ip_obtaining_timeout
//      stateConnectedIPNoEnter
//      stateConnectedIPYesGuard_rcconfig
//      stateIdleAction_connect
//      stateGlobalGuard_fw_powersaving
//      stateGlobalGuard_conf_max_sta
//      stateGlobalGuard_AP
//      stateDisconnect_exit
//      disconnect_retry
//      stateGlobalGuard_fw_disconnect
//      stateConnectedIPYes_exit
//      stateIdleGuard_connect
//      stateIfaceDownGuard_phyup
//      stateGlobalGuard_stop
//      stateGlobalGuard_enable_autoreconnect
//      stateGlobalGuard_disable_autoreconnect
//      stateDisconnect_enter
//      stateGlobalGuard_fw_scan
//      stateGlobalExit
//      stateSnifferEnter
//      stateConnectingAction_connected
//      stateConnectingAction_disconnect
//      stateConnectingExit
//      stateIdleAction_sniffer
//      stateIdleEnter
//      stateIdleExit
//      stateIfaceDownAction_phyup
//      stateIfaceDownEnter
//      stateIfaceDownExit
//      stateConnectedIPNoAction_disconnect
//      stateConnectedIPYes_action
//      stateConnectedIPYes_enter
//      wifi_mgmr_event_notify
//      wifi_mgmr_start
//      cmd_wifi_state_get
//      wifi_sta_get_state_cmd
//      wifi_edca_dump_cmd
//      wifi_ap_sta_list_get_cmd
//      wifi_ap_sta_delete_cmd
//      cmd_wifi_cfg
//      cmd_wifi_ap_stop
//      wifi_sta_ip_info
//      cmd_wifi_ap_conf_max_sta
//      wifi_rc_fixed_enable
//      wifi_connect_cmd
//      wifi_capcode_cmd
//      wifi_mgmr_cli_scanlist
//      cb_scan_complete
//      wifi_mgmr_sta_enable
//      wifi_mgmr_sta_connect_ind_stat_get
//      wifi_mgmr_sta_connect
//      wifi_mgmr_scan_complete_callback
//      wifi_mgmr_all_ap_scan
//      wifi_mgmr_profile_add
//      wifi_mgmr_profile_get
//      cb_probe_resp_ind
//      cb_disconnect_ind
//      cb_event_ind
//      cmd_mgr_llind
//      netif_status_callback
//      wifi_tx
//      bl606a0_wifi_init
//      coex_dump_ble
//      bdaddr_init
//      lld_evt_end_isr
//      lpn_cb
//      fault_get_reg
//      prov_reset
//      prov_complete
//      link_close
//      link_open
//      prov_input_complete
//      input
//      output_string
//      output_number
//      vendor_data_set
//      blemesh_lpn_set
//      blemesh_seg_send
//      blemesh_net_send
//      blemesh_reset
//      blemesh_input_str
//      blemesh_input_num
//      blemesh_ivu_test
//      blemesh_set_dev_uuid
//      blemesh_fault_set
//      blemesh_pb
//      blemesh_init
//      blemesh_iv_update
//      fault_get_cur
//      show_faults
//      health_current_status
//      friend_req_sent
//      friend_clear_sent
//      req_sent
//      sub_update
//      bt_mesh_lpn_msg_received
//      bt_mesh_lpn_group_add
//      gen_onoff_set.isra.0
//      gen_onoff_get
//      publish_start
//      model_send
//      publish_sent
//      bt_mesh_model_recv
//      bt_mesh_model_publish
//      mod_publish
//      adv_thread
//      bt_mesh_scan_cb
//      bt_mesh_adv_create_from_pool
//      bt_mesh_scan_enable
//      bt_mesh_scan_disable
//      beacon_send
//      bt_mesh_beacon_recv
//      hb_pub_status
//      hb_sub_status
//      mod_pub_status
//      relay_status
//      app_key_status
//      net_key_status
//      comp_data_status
//      mod_sub_status
//      mod_app_status
//      beacon_status
//      net_key_get
//      krp_get
//      node_identity_get
//      app_key_get
//      send_mod_sub_status
//      krp_set
//      lpn_timeout_get
//      friend_set
//      node_reset
//      mod_sub_get
//      mod_sub_get_vnd
//      net_key_update
//      net_key_add
//      send_mod_pub_status.isra.7
//      mod_app_get
//      mod_app_unbind
//      mod_app_bind
//      mod_pub_set
//      mod_pub_get
//      mod_sub_del
//      mod_sub_add
//      mod_sub_va_del
//      mod_pub_va_set
//      mod_sub_va_add
//      dev_comp_data_get
//      app_key_update
//      app_key_add
//      hb_publish
//      heartbeat_pub_set
//      hb_sub_send_status.constprop.14
//      heartbeat_sub_set
//      app_key_del
//      bt_mesh_cfg_srv_init
//      bt_mesh_heartbeat
//      net_transmit_set
//      net_transmit_get
//      relay_set
//      relay_get
//      beacon_set
//      beacon_get
//      node_identity_set
//      gatt_proxy_set
//      default_ttl_set
//      default_ttl_get
//      bt_mesh_label_uuid_get
//      mod_sub_del_all
//      mod_sub_va_overwrite
//      mod_sub_overwrite
//      mod_reset
//      net_key_del
//      health_period_status
//      health_current_status
//      health_fault_status
//      health_attention_status
//      health_period_set_unrel
//      health_period_get
//      health_get_registered
//      health_fault_test
//      health_fault_clear
//      health_fault_get
//      health_pub_update
//      bt_mesh_health_srv_init
//      bt_mesh_attention
//      attention_set
//      bt_mesh_provision
//      auth_match
//      net_decrypt.isra.1
//      bt_mesh_net_keys_create
//      friend_cred_set
//      friend_cred_create
//      bt_mesh_kr_update
//      bt_mesh_net_iv_update
//      bt_mesh_net_resend
//      bt_mesh_net_encode
//      bt_mesh_net_decode
//      bt_mesh_net_recv
//      prov_failed
//      adv_buf_create
//      prov_send
//      send_input_complete
//      prov_send_fail_msg
//      prov_confirm
//      prov_invite
//      prov_random
//      prov_data
//      prov_pub_key
//      prov_start
//      pub_key_ready
//      prov_retransmit
//      gen_prov_cont
//      gen_prov_start
//      send_pub_key
//      gen_prov_ctl
//      bt_mesh_pb_gatt_recv
//      bt_mesh_pb_gatt_close
//      bt_mesh_pb_adv_recv
//      bt_mesh_prov_init
//      proxy_sar_timeout
//      prov_ccc_write
//      proxy_ccc_write
//      proxy_connected
//      send_filter_status
//      proxy_complete_pdu
//      proxy_recv
//      bt_mesh_proxy_send
//      bt_mesh_proxy_adv_start
//      bt_mesh_proxy_adv_stop
//      is_replay
//      sdu_recv
//      seg_rx_reset
//      seg_tx_send_unacked
//      ctl_recv
//      bt_mesh_trans_send
//      bt_mesh_ctl_send
//      send_ack
//      seg_ack
//      bt_mesh_trans_recv
//      create_friend_pdu
//      buf_send_end
//      friend_timeout
//      enqueue_sub_cfm
//      friend_queue_prepare_space
//      enqueue_update
//      enqueue_friend_pdu
//      bt_mesh_friend_clear
//      bt_mesh_friend_sub_add
//      bt_mesh_friend_sub_rem
//      bt_mesh_friend_poll
//      bt_mesh_friend_clear_cfm
//      bt_mesh_friend_req
//      bt_mesh_friend_enqueue_rx
//      bt_mesh_friend_enqueue_tx
//      bt_mesh_friend_clear_incomplete
//      k_queue_free
//      k_sem_init
//      k_sem_give
//      k_sem_delete
//      k_thread_delete
//      hci_driver_send
//      send_frag
//      bt_conn_recv
//      bt_conn_set_state
//      bt_conn_create_le
//      gatt_notify
//      gatt_indicate
//      sc_save
//      bt_gatt_attr_write_ccc
//      bt_gatt_service_register
//      update_ccc
//      bt_gatt_exchange_mtu
//      bt_gatt_discover
//      gatt_read_group_rsp
//      gatt_read_type_rsp
//      read_included_uuid_cb
//      gatt_find_info_rsp
//      gatt_read_rsp
//      hci_data_buf_overflow
//      le_remote_feat_complete
//      le_conn_update_complete
//      hci_num_completed_packets
//      update_sec_level
//      hci_encrypt_key_refresh_complete
//      hci_encrypt_change
//      handle_event
//      hci_cmd_done
//      hci_disconn_complete
//      set_ad
//      bt_id_add
//      bt_id_del
//      bt_data_parse
//      bt_le_set_data_len
//      le_adv_report
//      le_ltk_request
//      le_conn_param_neg_reply
//      le_conn_param_req
//      enh_conn_complete
//      hci_tx_thread
//      bt_recv
//      bt_setup_id_addr
//      init_work
//      bt_pub_key_gen
//      l2cap_accept
//      l2cap_create_le_sig_pdu.isra.7
//      l2cap_rtx_timeout
//      bt_l2cap_create_pdu_timeout
//      bt_l2cap_send_cb
//      l2cap_chan_add
//      bt_l2cap_recv
//      l2cap_chan_le_recv_seg
//      l2cap_rx_process
//      l2cap_recv
//      smp_chan_get
//      smp_sign_buf
//      smp_pairing_failed
//      smp_timeout
//      smp_ident_info
//      smp_encrypt_info
//      legacy_request_tk
//      bt_smp_accept
//      bt_smp_distribute_keys
//      smp_signing_info
//      smp_master_ident
//      smp_security_request
//      bt_smp_recv
//      smp_ident_addr_info
//      bt_smp_pkey_ready
//      smp_pairing_random
//      bt_smp_sign_verify
//      bt_smp_sign
//      bt_smp_update_keys
//      notify_func
//      le_param_updated
//      ble_set_tx_pwr
//      ble_unsubscribe
//      write_func
//      ble_exchange_mtu
//      exchange_func
//      ble_auth_pairing_confirm
//      ble_auth_passkey_confirm
//      ble_auth_cancel
//      ble_auth
//      ble_security
//      ble_select_conn
//      ble_disconnect
//      ble_connect
//      ble_stop_advertise
//      ble_get_device_name
//      ble_start_advertise
//      ble_set_adv_channel
//      ble_stop_scan
//      ble_disable
//      discover_func
//      ble_set_data_len
//      ble_subscribe
//      ble_write
//      ble_read
//      read_func
//      ble_discover
//      ble_auth_passkey
//      ble_conn_update
//      ble_unpair
//      ble_start_scan
//      ble_set_device_name
//      ble_init
//      device_found
//      ble_read_local_address
//      connected
//      disconnected
//      security_changed
//      auth_passkey_display
//      auth_passkey_entry
//      auth_passkey_confirm
//      auth_cancel
//      auth_pairing_confirm
//      auth_pairing_complete
//      auth_pairing_failed
//      identity_resolved
//      ble_get_all_conn_info
//      ble_write_without_rsp
//      ble_tp_disconnected
//      ble_tp_connected
//      ble_tp_ccc_cfg_changed
//      ble_tp_tx_mtu_size
//      find_type_cb
//      att_send
//      bt_att_accept
//      att_timeout
//      bt_att_encrypt_change
//      att_chan_get
//      bt_att_create_pdu
//      bt_att_recv
//      att_signed_write_cmd
//      utilfdt_print_data
//      tc_blfdtdump
//      tc_fdt_wifi
//      ota_tcp_cmd
//      __ble_bytes_send
//      blsync_disconnected
//      blsync_exchange_func
//      blsync_connected
//      cb_idnoe
//      cat_cmd
//      hexdump_cmd
//      proc_onecmd
//      ls_cmd
//      console_cb_read
//      aos_cli_input_direct
//      ef_port_init
//      psm_unset_cmd
//      psm_set_cmd
//      interrupt_entry
//      exception_entry
//      bl_tsen_adc_get
//      cmd_looprt_test
//      _led_bloop_evt
//      tcpip_input
//      tcp_init
//      dhcp_server_stop
//      dhcpd_start
//      iperf_server_udp
//      iperf_server_udp_recv_fn
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      ipus_test_cmd
//      ipu_test_cmd
//      ipc_test_cmd
//      ips_test_cmd
//      romfs_lseek
//      cmd_sntp_date
//      cmd_sntp_time
//      sntp_recv
//      sntp_init
//      utils_hexdump
//      utils_getopt
//      aos_loop_init
//      aos_poll_read_fd
//      aos_loop_run
//      at_serial_write
//      at_serial_read
//      at_cmd_exec
//      at_serial_lock
//      at_serial_unlock
//      at_data_output
//      at_dump_noend
//      at_cmd_init
//      at_server_init
//      cb_altcp_recv_fn
//      cb_httpc_result
//      cwjap_info
//      scan
//      cb_httpc_headers_done_fn
//      __wifimode_set
//      set_apcfg
//      cwjap_cur
//      cwmode_cur
//      uart_set
//      wifi_mode_handler
//      domain_name_resolution
//      deep_sleep_handler
//      setautoconnect_handler
//      uart_config_handler
//      echo_on_handler
//      disconnect_handler
//      at_parse
//      set_ip_handler
//      ap_cfg_handler
//      join_ap_handler
//      at_response
//      at_version
//      at_restore
//      at_uart_config_get
//      at_uart_config
//      at_deep_sleep_mode
//      at_wifi_mode
//      at_wifi_mode_get
//      at_join_ap
//      at_disconnect
//      at_set_ap
//      at_ap_sta_get
//      at_http_request
//      at_queue_get
//      at_queue_peek
//      create_tcp_udp_handler
//      close_network_handler
//      send_data_handler
//      ap_server_handler
//      client_ssl_config_path
//      client_ssl_set_sni
//      client_ssl_set_alpn
//      tcp_sent_callback
//      tcp_receive_callback
//      udp_receive_callback
//      tcp_accept_callback
//      bl_cipstart
//      bl_cipsend
//      mfg_media_read_xtal_capcode
//      mfg_media_read_poweroffset
//      mfg_media_read_macaddr
//      mfg_flash_read
//      bl_mtd_open
//      bloop_init
//      bloop_evt_set_async
//      bloop_evt_set_sync
//      bloop_evt_unset_sync
//      bloop_run
//      bloop_status_dump
//      loop_evt_entity_sys_handler
//      loop_evt_entity_sys_evt
//      bl_hbn_enter
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t4
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
printf_entry:
l23082388:
	word32 a5_7 = CONVERT(Mem5[0x4200ECB8<32>:byte], byte, word32)
	word32 a5_22 = a5_7 & 255<i32>
	branch (a5_7 & 255<i32>) == 0<32> l230823B0
l230823A8:
	word32 a0_122
	ra = vprint(ra, a0, fp + -28<i32>, dwArg08, dwArg28, a3, dwArg70, dwArg74, dwArg98, dwArgBC, out s1, out a0_122, out a1, out a2, out a3, out a4, out a5_22, out a7, out s2, out s3, out s4, out s5, out s6, out s7, out s8, out s9, out s10, out s11, out t4)
l230823B0:
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_22
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	s10Out = s10
	s11Out = s11
	t4Out = t4
	return ra
printf_exit:


word32 sprintf(word32 ra, word32 a0, word32 a1, word32 dwArg18, word32 dwArg38, word32 dwArg64, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgCC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_number
//      print_string_ptr
//      vTaskList
//      dhcpd_start
//      log_buf_out
//      at_key_value_set
//      cipsta_ip
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31]
// LiveOut: a0 a1 a2 a4 a5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
sprintf_entry:
l230823B8:
	word32 a0_24
	word32 a5_26
	word32 s0_29
	word32 s1_30
	word32 s10_31
	word32 s11_32
	word32 s2_33
	word32 s3_34
	word32 s4_35
	word32 s6_36
	word32 s7_37
	word32 s8_38
	word32 s9_39
	word32 a1_43
	word32 a2_44
	word32 a4_45
	word32 s5_46
	word32 t0_82
	word32 a3_83
	word32 a7_84
	word32 t4_85
	word32 ra_28 = vsnprintf(ra, a0, 0xFFFFFFFF<32>, a1, fp + -24<i32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out t0_82, out s0_29, out s1_30, out a0_24, out a1_43, out a2_44, out a3_83, out a4_45, out a5_26, out a7_84, out s2_33, out s3_34, out s4_35, out s5_46, out s6_36, out s7_37, out s8_38, out s9_39, out s10_31, out s11_32, out t4_85)
	s0Out = s0_29
	s1Out = s1_30
	a0Out = a0_24
	a1Out = a1_43
	a2Out = a2_44
	a4Out = a4_45
	a5Out = a5_26
	s2Out = s2_33
	s3Out = s3_34
	s4Out = s4_35
	s5Out = s5_46
	s6Out = s6_36
	s7Out = s7_37
	s8Out = s8_38
	s9Out = s9_39
	s10Out = s10_31
	s11Out = s11_32
	return ra_28
sprintf_exit:


word32 snprintf(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg18, word32 dwArg38, word32 dwArg64, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgCC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_ap_start
//      bt_addr_le_str_real
//      bt_uuid_to_str
//      bt_settings_encode_key
//      bt_addr_le_to_str.constprop.14
//      blog_hexdump_out
//      ls_cmd
//      hal_gpio_init_from_dts
//      iperf_server_udp_recv_fn
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      httpc_create_request_string.constprop.6
//      mbedtls_x509_crt_info
//      mbedtls_debug_print_ret
//      mbedtls_debug_print_buf
//      mbedtls_debug_print_mpi
//      mbedtls_debug_print_ecp
//      mbedtls_debug_print_crt
//      mbedtls_x509_dn_gets
//      mbedtls_x509_serial_gets
//      mbedtls_x509_sig_alg_gets
//      mbedtls_x509_key_size_helper
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
snprintf_entry:
l230823DA:
	word32 a0_21
	word32 a3_22
	word32 a5_23
	word32 a7_24
	word32 s0_26
	word32 s1_27
	word32 s10_28
	word32 s11_29
	word32 s2_30
	word32 s3_31
	word32 s4_32
	word32 s6_33
	word32 s7_34
	word32 s8_35
	word32 s9_36
	word32 a1_40
	word32 a2_41
	word32 a4_42
	word32 s5_43
	word32 t0_80
	word32 t4_81
	word32 ra_25 = vsnprintf(ra, a0, a1, a2, fp + -20<i32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out t0_80, out s0_26, out s1_27, out a0_21, out a1_40, out a2_41, out a3_22, out a4_42, out a5_23, out a7_24, out s2_30, out s3_31, out s4_32, out s5_43, out s6_33, out s7_34, out s8_35, out s9_36, out s10_28, out s11_29, out t4_81)
	s0Out = s0_26
	s1Out = s1_27
	a0Out = a0_21
	a1Out = a1_40
	a2Out = a2_41
	a3Out = a3_22
	a4Out = a4_42
	a5Out = a5_23
	a7Out = a7_24
	s2Out = s2_30
	s3Out = s3_31
	s4Out = s4_32
	s5Out = s5_43
	s6Out = s6_33
	s7Out = s7_34
	s8Out = s8_35
	s9Out = s9_36
	s10Out = s10_28
	s11Out = s11_29
	return ra_25
snprintf_exit:


word32 sscanf(word32 ra, word32 a0, word32 a1, word32 dwArg14, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_hi_para
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0014:[0..31]
// LiveOut: s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
sscanf_entry:
l230823F6:
	word32 s1_29
	word32 s2_32
	word32 s3_33
	word32 s0_28 = vsscanf(ra, a0, a1, fp + -24<i32>, dwArg14, out s1_29, out s2_32, out s3_33)
	s1Out = s1_29
	s2Out = s2_32
	s3Out = s3_33
	return s0_28
sscanf_exit:


void set_bit(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
set_bit_entry:
l23082412:
	Mem11[a1 | 1<32> << a1:word32] = Mem0[a1:word32]
	return
set_bit_exit:


word32 vsscanf(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg54, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sscanf
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0054:[0..31]
// LiveOut: s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t4
// Preserved: sp
vsscanf_entry:
l23082428:
l2308246E:
	word32 s1_51 = CONVERT(Mem47[a1:byte], byte, word32)
	word32 s7_52 = a1 + 1<i32>
	branch s1_51 == 0<32> l2308247C
l23082478:
	branch true l230824A8
l230824A8:
	branch false l230824DE
l230824DE:
	a1 = s7_52
l230824AE:
	word32 a3_62 = Mem47[0x230C6140<32>:word32]
	word32 s0_76
	word32 s2_77
	word32 s3_78
	word32 s1_86
	word32 a1_90
	call a3_62 (retsize: 0;)
		uses: a0:a0,a1:a1_90,a2:a2,a3:a3_62,ra:ra,s0:0<32>,s1:s1_51,s10:0<32>,s11:0<32>,s2:0<32>,s3:a0,s4:0xFFFFFFFF<32>,s5:a2,s6:0x230CB5B1<32>,s7:s7_52,s8:dwArg54,s9:0<32>,Stack +0004:dwLoc8C,Stack +0020:dwLoc70,Stack +0024:dwLoc6C,Stack +0048:dwLoc48,Stack +00E4:dwArg54
		defs: a1:a1_90,s0:s0_76,s1:s1_86,s2:s2_77,s3:s3_78
	s1Out = s1_86
	s2Out = s2_77
	s3Out = s3_78
	return s0_76
l2308247C:
	branch true l23082488
l23082482:
	branch false l23082488
l23082486:
l23082488:
	s1Out = Mem47[dwLoc48 + 284<i32>:word32]
	s2Out = 0<32>
	s3Out = a0
	return 0<32>
vsscanf_exit:


void strntoumax(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a3 a4 a5 a6 a7 t1 t3 t4 t5 t6
// Preserved: a2 sp
strntoumax_entry:
l23082888:
	word32 a5_115 = a0
l23082892:
	word32 t3_11
	branch a3 == 0<32> l230829C8
l230829C8:
	t3_11 = 0<32>
	branch a2 != 0<32> l230828EA
l230829CC:
	branch a1 != 0<32> l230829BE
l230829BE:
	t3_11 = a3
l230829CE:
l23082896:
	word32 a4_18 = CONVERT(Mem0[a5_115:byte], byte, word32)
	branch (CONVERT(Mem0[a4_18 + 0x230CB5B1<32>:byte], byte, word32) & 8<32>) != 0<32> l230828FA
l230828FA:
	a5_115 = a5_115 + 1<32>
	a3 = a3 + 0xFFFFFFFF<32>
l230828A6:
	t3_11 = 0<32>
	branch (a4_18 + -43<i32> & 253<i32>) != 0<32> l230828BE
l230828B2:
	t3_11 = CONVERT(a4_18 <u -46<i32>, bool, word32)
	a5_115 = a5_115 + 1<32>
	a3 = a3 + 0xFFFFFFFF<32>
l230828BE:
	branch a2 != 0<32> l2308291A
l2308291A:
	branch a2 != 0x10<32> l230828EA
l23082920:
	branch a3 <=u 1<32> l230828EA
l23082926:
	branch CONVERT(Mem0[a5_115:byte], byte, word32) != 48<i32> l230828EA
l23082932:
	branch (CONVERT(Mem0[a5_115 + 1<i32>:byte], byte, word32) & 223<i32>) != 88<i32> l230828EA
l23082942:
	a3 = a3 + 0xFFFFFFFE<32>
	a5_115 = a5_115 + 2<32>
l230828C0:
	branch a3 <=u 1<32> l23082900
l23082900:
	branch a3 == 0<32> l23082992
l23082906:
	branch CONVERT(Mem0[a5_115:byte], byte, word32) != 48<i32> l230829AA
l230829AA:
	a3 = 1<32>
	a2 = 0xA<32>
l230828C6:
	a2 = 0xA<32>
	branch CONVERT(Mem0[a5_115:byte], byte, word32) != 48<i32> l230828EA
l230828D4:
	branch (CONVERT(Mem0[a5_115 + 1<i32>:byte], byte, word32) & 223<i32>) != 88<i32> l23082912
l23082912:
	a3 = a3 + 0xFFFFFFFF<32>
	a5_115 = a5_115 + 1<32>
	a2 = 8<32>
l230828E4:
	a3 = a3 + 0xFFFFFFFE<32>
	a5_115 = a5_115 + 2<32>
	a2 = 0x10<32>
l230828EA:
	word32 a3_68 = a3 + a5_115
l2308296E:
	branch a5_115 == a3_68 l23082992
l23082972:
	word32 a7_78 = CONVERT(Mem0[a5_115:byte], byte, word32)
	word32 a6_79 = a7_78 + -48<i32>
	branch a7_78 <=u 0xFFFFFFC7<32> l2308298A
l2308297E:
	branch a7_78 >u 0xFFFFFFA6<32> l230829B0
l230829B0:
	branch a7_78 >u 0xFFFFFF86<32> l23082992
l230829B8:
	a6_79 = a7_78 + -87<i32>
l23082986:
	a6_79 = a7_78 + -55<i32>
l2308298A:
	branch a6_79 < 0<32> l23082992
l2308298E:
	branch a6_79 < a2 l23082948
l23082948:
	a5_115 = a5_115 + 1<32>
l23082992:
	branch a1 != 0<32> l230829C4
l230829C4:
	Mem117[a5_115:word32] = a1
l23082994:
	branch t3_11 == 0<32> l230829A6
l23082998:
l230829A6:
	return
strntoumax_exit:


word32 UART_Init(word32 a0, word32 a2, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      hal_uart_setconfig
//      at_serial_cfg_set
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
UART_Init_entry:
l230829D4:
	word32 a1_10 = Mem0[(a0 << 2<i32>) + 4<i32>:word32]
	word32 a5_14 = a4 >>u (a0 << 2<i32>)
	branch (a4 + 0xA<32> >>u (a0 << 2<i32>) & 0xA<32>) <=u 4<32> l23082A00
l230829FE:
	a5_14 = a5_14 + 1<32>
l23082A00:
	word32 a5_21 = a5_14 + 0xFFFFFFFF<32>
	word32 a5_25 = CONVERT(SLICE(a5_21, word16, 0), word16, word32) | a5_21 << 0x10<u32>
	Mem27[a5_25 + 8<i32>:word32] = a2
	word32 a4_22 = a5_21 << 0x10<u32>
	word32 a3_29 = CONVERT(Mem27[a1_10 + 10<i32>:byte], byte, word32)
	word32 a2_31 = Mem27[a5_25 + 4<i32>:word32]
	branch a3_29 == 1<32> l23082AA2
l23082AA2:
	a4_22 = a5_21 << 0x10<u32> | 48<i32>
	a5_25 = a5_25 | 48<i32>
l23082A1C:
	branch a3_29 == 0<32> l23082A9C
l23082A9C:
	a4_22 = a5_21 << 0x10<u32> & 0xFFFFFFEF<32>
	a5_25 = a5_25 & 0xFFFFFFEF<32>
l23082A1E:
	branch a3_29 == 2<32> l23082AAC
l23082AAC:
	a4_22 = a5_21 << 0x10<u32> & -33<i32> | 16<i32>
	a5_25 = a5_25 & -33<i32> | 16<i32>
l23082A24:
	word32 a3_50 = CONVERT(Mem27[a1_10 + 8<i32>:byte], byte, word32) + 4<32> << 8<i32>
	word32 a4_61 = (a4_22 & -1793<i32> | a3_50) & 0xFCFFFFFF<32> | CONVERT(Mem27[a1_10 + 9<i32>:byte], byte, word32) + 1<32> << 12<i32>
	word32 a5_52 = a5_25 & -1793<i32> | a3_50
	word32 a3_62 = a4_61 & -3<i32>
	branch CONVERT(Mem27[a1_10 + 11<i32>:byte], byte, word32) != 1<32> l23082A5A
l23082A56:
	a3_62 = a4_61 | 2<i32>
l23082A5A:
	word32 a5_71
	branch CONVERT(Mem27[a1_10 + 12<i32>:byte], byte, word32) != 1<32> l23082ABE
l23082ABE:
	a5_71 = a5_52 & 0xFF0007FF<32>
l23082A64:
	a5_71 = a5_52 | 0xFFF800<32>
l23082A6C:
	word32 a4_80 = a5_71 & -3<i32>
	branch CONVERT(Mem27[a1_10 + 13<i32>:byte], byte, word32) != 1<32> l23082A7E
l23082A7A:
	a4_80 = a5_71 | 2<i32>
l23082A7E:
	Mem89[a3_62:word32] = a2_31
	Mem91[a4_80 + 4<i32>:word32] = a2_31
	word32 a2_92 = Mem91[a4_80 + 12<i32>:word32]
	word32 a5_96 = a4_80 & -2<i32>
	branch CONVERT(Mem91[a1_10 + 14<i32>:byte], byte, word32) != 1<32> l23082A96
l23082A92:
	a5_96 = a4_80 | 1<i32>
l23082A96:
	Mem100[a5_96 + 12<i32>:word32] = a2_92
	return a4_80
UART_Init_exit:


void UART_FifoConfig(word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
// MayUse:  a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
UART_FifoConfig_entry:
l23082AC8:
	Mem27[a3 + 132<i32>:word32] = (CONVERT(Mem0[a1:byte], byte, word32) + 0xFFFFFFFF<32> << 16<i32> | Mem0[a3 + 132<i32>:int32] & 0xFFE0FFFF<32>) & 0xE0FFFFFF<32> | CONVERT(Mem0[a1 + 1<i32>:byte], byte, word32) + 0xFFFFFFFF<32> << 24<i32>
	word32 a4_28 = Mem27[a3 + 128<i32>:int32]
	word32 a5_30 = a4_28 & -2<i32>
	branch CONVERT(Mem27[a1 + 2<i32>:byte], byte, word32) != 1<32> l23082B18
l23082B14:
	a5_30 = a4_28 | 1<i32>
l23082B18:
	word32 a4_37 = a5_30 & -3<i32>
	branch CONVERT(Mem27[a1 + 3<i32>:byte], byte, word32) != 1<32> l23082B2A
l23082B26:
	a4_37 = a5_30 | 2<i32>
l23082B2A:
	Mem42[a3 + 128<i32>:word32] = a4_37
	return
UART_FifoConfig_exit:


word32 UART_Enable(word32 a0, word32 a1, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      hal_uart_setconfig
//      at_serial_cfg_set
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
UART_Enable_entry:
l23082B32:
	word32 a5_11 = Mem0[(a0 << 2<i32>) + 0x230CBB00<32>:word32]
	branch (a1 & 253<i32>) != 0<32> l23082B4E
l23082B46:
	a5_11 = Mem0[a1 & 253<i32>:word32]
	Mem14[a1 & 253<i32> | 1<i32>:word32] = a5_11
l23082B4E:
	word32 a1_17 = a1 + 0xFFFFFFFF<32> & 255<i32>
	branch a1_17 >u 1<32> l23082B62
l23082B5A:
	a5_11 = Mem19[5<32>:word32]
	Mem22[5<32>:word32] = a5_11
l23082B62:
	a4Out = 1<32>
	a5Out = a5_11
	return a1_17
UART_Enable_exit:


word32 UART_Disable(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      hal_uart_setconfig
//      at_serial_cfg_set
// MayUse:  a1:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a4 a5
// Preserved: sp
UART_Disable_entry:
l23082B66:
	branch (a1 & 253<i32>) != 0<32> l23082B80
l23082B7A:
	Mem14[a1 & 253<i32> & 0xFFFFFFFE<32>:word32] = Mem0[a1 & 253<i32>:word32]
l23082B80:
	word32 a4_18 = 1<32>
	branch (a1 + 0xFFFFFFFF<32> & 255<i32>) >u 1<32> l23082B92
l23082B8C:
	Mem22[4<i32>:word32] = Mem19[5<32>:word32]
	a4_18 = 0<32>
l23082B92:
	return a4_18
UART_Disable_exit:


word32 UART_SetRxTimeoutValue(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_rx_enable
// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a4 a5
// Preserved: sp
UART_SetRxTimeoutValue_entry:
l23082B96:
	word32 a5_9 = Mem0[a4:word32]
	word32 a4_13 = Mem0[a5_9 + 24<i32>:word32]
	Mem16[(a1 + 0xFFFFFFFF<32> | a5_9 & -256<i32>) + 24<i32>:word32] = a4_13
	return a4_13
UART_SetRxTimeoutValue_exit:


word32 UART_TxFreeRun(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      hal_uart_setconfig
//      at_serial_cfg_set
// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut: a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
UART_TxFreeRun_entry:
l23082BB4:
	word32 a5_13
	word32 a5_9 = Mem0[a4:word32]
	word32 a4_11 = Mem0[a5_9:word32]
	branch a1 != 1<32> l23082BD4
l23082BD4:
	a5_13 = a5_9 & 0xFFFFFFFB<32>
l23082BCA:
	a5_13 = a5_9 | 4<i32>
l23082BCE:
	Mem17[a5_13:word32] = a4_11
	return 1<32>
UART_TxFreeRun_exit:


word32 UART_IntMask(word32 a1, word32 a2, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
//      bl_uart_int_rx_enable
//      bl_uart_int_rx_disable
//      bl_uart_int_tx_enable
//      bl_uart_int_tx_disable
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
UART_IntMask_entry:
l23082BD8:
	word32 a1_17
	word32 a5_9 = Mem0[a4:word32]
	word32 a4_11 = Mem0[a5_9 + 36<i32>:word32]
	branch a1 != 8<32> l23082C00
l23082C00:
	word32 a1_14 = 1<32> << a1
	branch a2 != 1<32> l23082C0E
l23082C0E:
	a1_17 = ~a1_14 & a5_9
l23082C0A:
	a1_17 = a1_14 | a5_9
l23082BEE:
	a1_17 = 0<32>
	branch a2 != 1<32> l23082BFA
l23082BF6:
	a1_17 = a5_9 | 255<i32>
l23082BFA:
	Mem24[a1_17 + 36<i32>:word32] = a4_11
	return a4_11
UART_IntMask_exit:


word32 UART_GetTxFifoCount(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_data_send
//      bl_uart_flush
//      bflb_platform_usart_dbg_send
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
UART_GetTxFifoCount_entry:
l23082C16:
	word32 a5_9 = Mem0[(a0 << 2<i32>) + 0x230CBB00<32>:word32]
	word32 a0_11 = Mem0[a5_9 + 132<i32>:int32] & 63<i32>
	a5Out = a5_9
	return a0_11
UART_GetTxFifoCount_exit:


void UART_SendData(word32 a0, word32 a1, word32 a2, word32 dwArg34, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bflb_platform_usart_dbg_send
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0034:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
UART_SendData_entry:
l23082C2E:
	word32 s3_11 = Mem10[(a0 << 2<u32>) + 0x230CBB00<32>:int32]
	word32 s1_25 = 0<32>
l23082C5E:
	branch s1_25 <u a2 l23082C74
l23082C74:
	word32 a5_97
	branch UART_GetTxFifoCount(a0, out a5_97) == 0<32> l23082C98
l23082C98:
	branch dwArg34 != 0xFFFFFFFF<32> l23082C5E
l23082C9C:
l23082C84:
	Mem47[s3_11 + 136<i32>:byte] = SLICE(CONVERT(Mem34[a1 + s1_25:byte], byte, word32), byte, 0)
	s1_25 = s1_25 + 1<32>
l23082C62:
l23082C64:
	0<32> = dwArg0128
	return
UART_SendData_exit:


word32 UART_GetRxFifoCount(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_data_recv
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
UART_GetRxFifoCount_entry:
l23082CA0:
	word32 a5_9 = Mem0[(a0 << 2<i32>) + 0x230CBB00<32>:word32]
	word32 a0_12 = Mem0[a5_9 + 132<i32>:int32] >>u 8<i32> & 63<i32>
	a5Out = a5_9
	return a0_12
UART_GetRxFifoCount_exit:


void ADC_Reset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse: 
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
ADC_Reset_entry:
l23082CBA:
	word32 a5_5 = Mem0[0x4000F90C<32>:int32]
	Mem7[0x4001090C<32>:word32] = a5_5 | 4<i32>
	Mem9[0x4001090C<32>:word32] = a5_5 & 0xFFFFFFFB<32>
	return
ADC_Reset_exit:


void ADC_Enable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
ADC_Enable_entry:
l23082CE2:
	Mem7[0x4001090C<32>:word32] = Mem0[0x4000F90C<32>:int32] | 1<i32>
	return
ADC_Enable_exit:


void ADC_Disable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
ADC_Disable_entry:
l23082CF4:
	Mem7[0x4001090C<32>:word32] = Mem0[0x4000F90C<32>:int32] & 0xFFFFFFFE<32>
	return
ADC_Disable_exit:


word32 ADC_Channel_Config(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a1
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
ADC_Channel_Config_entry:
l23082D04:
	Mem16[0x4001090C<32>:word32] = (a0 << 8<i32> | Mem0[0x4000F90C<32>:int32] & 0xFE0000FF<32>) & -249<i32> | a1 << 3<i32>
	Mem25[0x40010910<32>:word32] = (a2 << 1<i32> | Mem16[0x4000F910<32>:int32] & 0xFFFFFFFD<32>) & 0xFDFFFFFF<32>
	return a1 << 3<i32>
ADC_Channel_Config_exit:


word32 ADC_Start(word32 ra, word32 s0, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse:  ra:[0..31] s0:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a2 a5 ra
// Preserved: s0 sp
ADC_Start_entry:
l23082D3C:
	word32 a5_9 = Mem7[0x4000F90C<32>:int32]
	Mem12[0x4001090C<32>:word32] = a5_9 & 0xFFFFFFFD<32>
	word32 s0_15
	word32 ra_16
	word32 a0_18
	call 0x4200C506<p32> (retsize: 0;)
		uses: a0:100<i32>,a5:a5_9 & 0xFFFFFFFD<32>,ra:0x4200BD54<p32>,s0:0x40010000<32>,Stack +0004:s0,Stack +0084:ra
		defs: a0:a0_18,ra:ra_16,s0:s0_15
	Mem22[s0_15 + 2316<i32>:word32] = Mem12[s0_15 + -1780<i32>:int32] | 2<i32>
	a0Out = a0_18
	return ra_16
ADC_Start_exit:


void ADC_FIFO_Cfg(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
ADC_FIFO_Cfg_entry:
l23082D70:
	word32 a5_15 = (CONVERT(Mem0[a0:byte], byte, word32) << 22<i32> | a5 & 0xFF3FFFFF<32>) & 0xFFFFFFFE<32> | CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32)
	Mem16[a5_15:word32] = Mem0[a5:word32]
	Mem19[a5_15 | 2<i32>:word32] = Mem16[a5_15:word32]
	return
ADC_FIFO_Cfg_exit:


word32 ADC_Get_FIFO_Count(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
ADC_Get_FIFO_Count_entry:
l23082D9A:
	return a0 >>u 16<i32> & 63<i32>
ADC_Get_FIFO_Count_exit:


word32 ADC_Parse_Result(word32 ra, word32 a0, word32 a2, word32 fs1, word32 fflags, word32 frm, word32 dwArg74, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & fs1Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse:  a0:[0..31] a2:[0..31] fflags:[0..31] frm:[0..31] fs1:[0..31] ra:[0..31] Stack +0074:[0..31]
// LiveOut: a5 fflags frm fs1 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: fa3 s5 sp
ADC_Parse_Result_entry:
l23082DA8:
	branch CONVERT(Mem32[0x4200ECD4<32>:byte], byte, word32) == 0<32> l23082EE6
l23082EE6:
	fs1 = Mem32[0x230C615C<32>:real32]
l23082DD8:
l23082DDA:
	word32 fs0_48
	word32 a3_41 = Mem32[0x4000F914<32>:int32]
	word32 s2_121 = a3_41 >>u 2<u32> & 1<i32>
	branch (a3_41 & 8<32>) != 0<32> l23082EF0
l23082EF0:
	fs0_48 = Mem32[0x230AA390<32>:real32]
l23082DF8:
	fs0_48 = Mem32[0x230C6160<32>:real32]
l23082E00:
	word32 a5_100
	word32 s3_136
	branch s2_121 == 0<32> l23082EFA
l23082EFA:
	word32 s10_67 = Mem64[0x230C6178<32>:int32]
	word32 s11_68 = Mem64[0x230C617C<32>:int32]
	a5_100 = Mem71[0x230C6170<32>:int32]
	word32 s6_147 = Mem71[0x230C6168<32>:int32]
	word32 s7_149 = Mem71[0x230C616C<32>:int32]
	s4 = a0
	word32 s5_226 = a2
	word32 s1_103 = 0xFFFFFFF<32>
	s2_121 = 0x3FFFFFF<32>
	s3_136 = 0xFFFFFF<32>
l23082F42:
	branch a5_100 != s4 l23082F6A
l23082F6A:
	word32 a1_112
	word32 a3_118
	word32 a0_111
	word32 a3_94 = Mem90[s4:int32]
	Mem97[s5_226 + 1<i32>:byte] = 0xFF<8>
	Mem99[s5_226:byte] = SLICE(a3_94 >>u 21<i32>, byte, 0)
	branch dwArg74 != 0<32> l23082FCA
l23082FCA:
	a5_100 = 1<32>
	branch dwArg74 != 1<32> l23082FF6
l23082FF6:
	a2 = dwArg74
	branch true l23082FC4
l23082FFA:
	word32 a0_108 = CONVERT(CONVERT(Mem99[s4:int32] & s1_103, word32, real32) / fs1, real32, uint32)
	Mem109[s5_226 + 2<i32>:word16] = SLICE(a0_108, word16, 0)
	a0_111 = __floatsidf(a0_108 & s1_103, out a1_112)
	a2 = s10_67
	a3_118 = s11_68
l23082FD0:
	a3_118 = Mem99[s4:int32] >>u 2<i32> & s2_121
	word32 a0_125 = CONVERT(CONVERT(a3_118, word32, real32) / fs1, real32, uint32)
	Mem126[s5_226 + 2<i32>:word16] = SLICE(a0_125, word16, 0)
	a0_111 = __floatsidf(a0_125 & s1_103, out a1_112)
l23082F7C:
	word32 a0_140 = CONVERT(CONVERT(Mem99[s4:int32] >>u 4<i32> & s3_136, word32, real32) / fs1, real32, uint32)
	Mem141[s5_226 + 2<i32>:word16] = SLICE(a0_140, word16, 0)
	a0_111 = __floatsidf(a0_140 & s1_103, out a1_112)
	a2 = s6_147
	a3_118 = s7_149
l23082FA0:
	word32 s9_938
	word32 s8_937
	word32 s0_928
	word32 a0_162
	word32 a1_163
	word32 fflags_177
	word32 frm_178
	word32 s5_934
	word32 s1_929
	word32 s2_931
	word32 s3_932
	word32 s4_933
	word32 s6_935
	word32 s7_936
	word32 a3_930
	word32 ra_179 = __muldf3(ra, a0_111, a1_112, a2, a3_118, fflags, frm, out s0_928, out s1_929, out a0_162, out a1_163, out a3_930, out s2_931, out s3_932, out s4_933, out s5_934, out s6_935, out s7_936, out s8_937, out s9_938, out fflags_177, out frm_178)
	word32 a1_196
	word32 a0_203
	word32 a1_204
	word32 s0_939
	word32 s8_941
	word32 s9_942
	word32 a3_940
	ra = __muldf3(ra_179, a0_162, a1_163, __extendsfdf2(ra_179, fs0_48, fflags_177, frm_178, out a1_196), a1_196, fflags_177, frm_178, out s0_939, out s1_103, out a0_203, out a1_204, out a3_940, out s2_121, out s3_136, out s4, out s5_226, out s6_147, out s7_149, out s8_941, out s9_942, out fflags, out frm)
	word32 a3_233
	word32 fa0_238
	word32 a4_943
	__truncdfsf2(ra, a0_203, a1_204, fflags, frm, out a2, out a3_233, out a4_943, out a5_100, out fa0_238)
	Mem240[a3_233 + 16<i32>:real32] = fa0_238
l23082FC4:
	s4 = s4 + 4<32>
	s5_226 = s5_226 + 8<32>
l23082E06:
	a5_100 = Mem258[0x230C6180<32>:int32]
	word32 s10_254 = Mem251[0x230C6188<32>:int32]
	word32 s11_255 = Mem251[0x230C618C<32>:int32]
	word32 s7_264 = a2
	word32 s6_265 = a0
	word32 s1_266 = 0xFFFFFFF<32>
	word32 s5_267 = 0x3FFFFFF<32>
	s3_136 = 0xFFFFFF<32>
	dwLoc64 = a5_100
l23082E52:
	branch s6_265 == a5_100 l23082F48
l23082F48:
	s0Out = qwArg01F8
	s1Out = dwLoc64
	a5Out = a5_100
	s2Out = s2_121
	s3Out = s3_136
	s4Out = s4
	fs1Out = fs1
	fflagsOut = fflags
	frmOut = frm
	return dwLoc24
ADC_Parse_Result_exit:
l23082E58:
	Mem298[s7_264:byte] = SLICE(Mem272[s6_265:int32] >>u 21<i32>, byte, 0)
	Mem301[s7_264 + 1<i32>:byte] = SLICE(CONVERT(Mem298[s6_265 + 2<i32>:uint16], uint16, word32) & 0x1F<32>, byte, 0)
	s4 = 0<32>
	word32 a3_302 = Mem301[s6_265:int32]
	branch a3_302 << 0x10<u32> >= 0<32> l23082E84
l23082E7A:
	a3_302 = 0<32> - a3_302
	Mem305[s6_265:word32] = a3_302
	s4 = s2_121
l23082E84:
	word32 a1_327
	word32 a0_326
	branch dwArg74 != 0<32> l2308301C
l2308301C:
	a5_100 = 1<32>
	branch dwArg74 != 1<32> l23083048
l23083048:
	a2 = dwArg74
	branch true l23082ED0
l2308304E:
	word32 a0_322 = CONVERT(CONVERT(Mem311[s6_265:int32] & s1_266, word32, real32) / fs1, real32, uint32)
	Mem324[s7_264 + 2<i32>:word16] = SLICE(a0_322, word16, 0)
	a0_326 = __floatsidf(a0_322 & s1_266, out a1_327)
l23083022:
	word32 a0_339 = CONVERT(CONVERT(Mem311[s6_265:int32] >>u 2<i32> & s5_267, word32, real32) / fs1, real32, uint32)
	Mem340[s7_264 + 2<i32>:word16] = SLICE(a0_339, word16, 0)
	a0_326 = __floatsidf(a0_339 & s1_266, out a1_327)
	a2 = s10_254
	a3_302 = s11_255
l23082E88:
	word32 a0_359 = CONVERT(CONVERT(Mem311[s6_265:int32] >>u 4<i32> & s3_136, word32, real32) / fs1, real32, uint32)
	Mem360[s7_264 + 2<i32>:word16] = SLICE(a0_359, word16, 0)
	a0_326 = __floatsidf(a0_359 & s1_266, out a1_327)
l23082EAC:
	word32 s9_921
	word32 a0_384
	word32 a1_385
	word32 fflags_399
	word32 frm_400
	word32 s6_918
	word32 s0_911
	word32 a3_913
	word32 s1_912
	word32 s3_915
	word32 s4_916
	word32 s5_917
	word32 s2_914
	word32 s7_919
	word32 s8_920
	word32 ra_401 = __muldf3(ra, a0_326, a1_327, a2, a3_302, fflags, frm, out s0_911, out s1_912, out a0_384, out a1_385, out a3_913, out s2_914, out s3_915, out s4_916, out s5_917, out s6_918, out s7_919, out s8_920, out s9_921, out fflags_399, out frm_400)
	word32 a1_419
	word32 a0_426
	word32 a1_427
	word32 s0_922
	word32 a3_923
	word32 s8_924
	word32 s9_925
	ra = __muldf3(ra_401, a0_384, a1_385, __extendsfdf2(ra_401, fs0_48, fflags_399, frm_400, out a1_419), a1_419, fflags_399, frm_400, out s0_922, out s1_266, out a0_426, out a1_427, out a3_923, out s2_121, out s3_136, out s4, out s5_267, out s6_265, out s7_264, out s8_924, out s9_925, out fflags, out frm)
	word32 fa0_461
	word32 a3_926
	word32 a4_927
	__truncdfsf2(ra, a0_426, a1_427, fflags, frm, out a2, out a3_926, out a4_927, out a5_100, out fa0_461)
	Mem463[a5_100 + 16<i32>:real32] = fa0_461
l23082ED0:
	branch s4 == 0<32> l23082EE0
l23082ED4:
	Mem471[a5_100 + 16<i32>:real32] = -Mem467[s7_264 + 4<i32>:real32]
l23082EE0:
	s7_264 = s7_264 + 8<32>
	s6_265 = s6_265 + 4<32>


word32 ADC_Tsen_Init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
ADC_Tsen_Init_entry:
l23083070:
	Mem11[0x4001090C<32>:word32] = Mem0[0x4000F90C<32>:int32] & 0x87FFFFFF<32> | 0x40000<32>
	Mem25[0x40010914<32>:word32] = (Mem11[0x4000F914<32>:int32] & 0xFC3FFDF<32> | a0 << 5<i32>) & 0xFA00007F<32> | 0x20000140<32>
	Mem29[0x40010910<32>:word32] = Mem25[0x4000F910<32>:int32] | 0x4000000<32>
	word32 a5_30 = Mem29[0x4000F90C<32>:int32]
	Mem33[0x4001090C<32>:word32] = a5_30 | 0x80000<32>
	return a5_30 | 0x80000<32>
ADC_Tsen_Init_exit:


void ADC_SET_TSVBE_LOW()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse: 
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
ADC_SET_TSVBE_LOW_entry:
l230830D0:
	Mem8[0x40010914<32>:word32] = CONVERT(Mem0[0x4000F914<32>:word31], word31, word32)
	return
ADC_SET_TSVBE_LOW_exit:


void ADC_SET_TSVBE_HIGH()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TSEN_Get_V_Error
//      TSEN_Get_Temp
// MayUse: 
// LiveOut:
// Trashed: a3 a4 a5
// Preserved: sp
ADC_SET_TSVBE_HIGH_entry:
l230830E2:
	Mem8[0x40010914<32>:word32] = Mem0[0x4000F914<32>:int32] | 0x80000000<32>
	return
ADC_SET_TSVBE_HIGH_exit:


void TSEN_Get_V_Error(word32 ra, word32 s0, word32 a5, word32 fs1, word32 fflags, word32 frm, word32 dwArg44, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] fflags:[0..31] frm:[0..31] fs1:[0..31] ra:[0..31] s0:[0..31] Stack +0044:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
TSEN_Get_V_Error_entry:
l230830F6:
	Mem18[a5 | 2<i32>:word32] = Mem14[a5:word32]
	ADC_SET_TSVBE_LOW()
	word32 a0_21
	word32 ra_24 = ADC_Start(ra, s0, out a0_21)
l23083118:
	a0_21 = ADC_Get_FIFO_Count(a0_21)
	branch a0_21 == 0<32> l23083118
l2308311E:
	Mem38[0x4200ECD4<32>:byte] = 0<8>
	word32 a5_51
	word32 fflags_56
	word32 frm_57
	word32 fs1_59
	word32 s0_61
	word32 s2_65
	word32 s3_66
	word32 s1_180
	word32 s4_181
	word32 ra_60 = ADC_Parse_Result(ra_24, fp + -44<i32>, fp + -40<i32>, fs1, fflags, frm, dwArg44, out s0_61, out s1_180, out a5_51, out s2_65, out s3_66, out s4_181, out fs1_59, out fflags_56, out frm_57)
	Mem79[s2_65:byte] = SLICE(s3_66, byte, 0)
	Mem84[a5_51 | 2<i32>:word32] = Mem79[a5_51:word32]
	ADC_SET_TSVBE_HIGH()
	word32 a0_88
	word32 ra_91 = ADC_Start(ra_60, s0_61 + -812<i32>, out a0_88)
l2308315C:
	a0_88 = ADC_Get_FIFO_Count(a0_88)
	branch a0_88 == 0<32> l2308315C
l23083162:
	Mem105[s0_61 + -812<i32>:byte] = 0<8>
	word32 s0_125
	word32 s1_126
	word32 frm_188
	word32 fs1_186
	word32 fflags_187
	word32 s3_184
	word32 s4_185
	word32 a5_182
	word32 s2_183
	ADC_Parse_Result(ra_91, fp + -44<i32>, fp + -40<i32>, fs1_59, fflags_56, frm_57, dwArg44, out s0_125, out s1_126, out a5_182, out s2_183, out s3_184, out s4_185, out fs1_186, out fflags_187, out frm_188)
	Mem144[s0_125:byte] = SLICE(s1_126, byte, 0)
	0<32> = dwArg0128
	return
TSEN_Get_V_Error_exit:


word32 TSEN_Get_Temp(word32 ra, word32 s0, word32 a5, word32 fs1, word32 fflags, word32 frm, word32 dwArg44, word32 dwArg0128, ptr32 & s0Out, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & fs1Out, ptr32 & fa0Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a5:[0..31] fflags:[0..31] frm:[0..31] fs1:[0..31] ra:[0..31] s0:[0..31] Stack +0044:[0..31] Stack +0128:[0..31]
// LiveOut: a1 fa0 fflags frm fs1 ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa4 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
TSEN_Get_Temp_entry:
l23083196:
	Mem22[a5 | 2<i32>:word32] = Mem16[a5:word32]
	ADC_SET_TSVBE_LOW()
	word32 a0_25
	word32 ra_28 = ADC_Start(ra, s0, out a0_25)
l230831BC:
	a0_25 = ADC_Get_FIFO_Count(a0_25)
	branch a0_25 == 0<32> l230831BC
l230831C2:
	Mem43[0x4200ECD4<32>:byte] = 0<8>
	word32 fflags_61
	word32 frm_62
	word32 fs1_64
	word32 s0_66
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 a5_267
	word32 s1_266
	word32 ra_65 = ADC_Parse_Result(ra_28, fp + -44<i32>, fp + -40<i32>, fs1, fflags, frm, dwArg44, out s0_66, out s1_266, out a5_267, out s2_70, out s3_71, out s4_72, out fs1_64, out fflags_61, out frm_62)
	Mem84[s3_71:byte] = SLICE(s4_72, byte, 0)
	Mem89[s2_70:word32] = Mem84[s2_70:int32] | 2<i32>
	ADC_SET_TSVBE_HIGH()
	word32 a0_93
	word32 ra_96 = ADC_Start(ra_65, s0_66 + -812<i32>, out a0_93)
l23083206:
	a0_93 = ADC_Get_FIFO_Count(a0_93)
	branch a0_93 == 0<32> l23083206
l2308320C:
	word32 fa0_154
	Mem110[s0_66 + -812<i32>:byte] = 0<8>
	word32 fflags_125
	word32 frm_126
	word32 fs1_128
	word32 s0_130
	word32 s1_131
	word32 s2_134
	word32 s3_135
	word32 a5_268
	word32 s4_269
	word32 ra_129 = ADC_Parse_Result(ra_96, fp + -44<i32>, fp + -40<i32>, fs1_64, fflags_61, frm_62, dwArg44, out s0_130, out s1_131, out a5_268, out s2_134, out s3_135, out s4_269, out fs1_128, out fflags_125, out frm_126)
	Mem149[s0_130:byte] = SLICE(s2_134, byte, 0)
	word32 a5_148 = CONVERT(wLoc26, uint16, word32)
	word32 fa4_150 = CONVERT(s3_135, word32, real32)
	word32 fa0_151 = CONVERT(a5_148, word32, real32)
	word32 fa5_152 = CONVERT(s1_131, word32, real32)
	branch a5_148 >=u s3_135 l2308326E
l2308326E:
	fa0_154 = fa0_151 - fa4_150
l23083242:
	fa0_154 = fa4_150 - fa0_151
l23083246:
	word32 s0_270
	word32 s7_275
	word32 s6_274
	word32 s5_273
	word32 s9_276
	word32 a1_163
	word32 a0_170
	word32 a1_171
	word32 fflags_185
	word32 frm_186
	word32 s2_190
	word32 s3_191
	word32 s1_271
	word32 a3_272
	word32 ra_187 = __divdf3(ra_129, __extendsfdf2(ra_129, fa0_154 - fa5_152, fflags_125, frm_126, out a1_163), a1_163, Mem149[0x230C6198<32>:int32], Mem149[0x230C619C<32>:int32], fflags_125, frm_126, out s0_270, out s1_271, out a0_170, out a1_171, out a3_272, out s2_190, out s3_191, out s5_273, out s6_274, out s7_275, out s9_276, out fflags_185, out frm_186)
	word32 a2_277
	word32 a3_278
	word32 a4_279
	word32 fa0_205
	word32 a5_280
	word32 a1_198 = __truncdfsf2(ra_187, a0_170, a1_171, fflags_185, frm_186, out a2_277, out a3_278, out a4_279, out a5_280, out fa0_205)
	0<32> = dwArg0128
	s0Out = dwArgE4
	a1Out = a1_198
	s2Out = s2_190
	s3Out = s3_191
	fs1Out = fs1_128
	fa0Out = fa0_205
	fflagsOut = fflags_185
	frmOut = frm_186
	return ra_187
TSEN_Get_Temp_exit:


void ADC_Init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 t1
// Preserved: sp
ADC_Init_entry:
l23083274:
	word32 a4_57
	word32 a5_56
	Mem34[0x40010910<32>:word32] = CONVERT(Mem0[a0 + 10<i32>:byte], byte, word32) << 2<i32> | ((CONVERT(Mem0[a0 + 2<i32>:byte], byte, word32) << 18<i32> | (CONVERT(Mem0[a0 + 1<i32>:byte], byte, word32) << 27<i32> | (CONVERT(Mem0[a0:byte], byte, word32) << 29<i32> | Mem0[0x4000F910<32>:int32] & 0x9FFFFFFF<32>) & 0xE7FFFFFF<32>) & 0xF803FFFF<32>) & 0xDFFFFFFE<32> | CONVERT(Mem0[a0 + 11<i32>:byte], byte, word32)) & 0xFFFFFFE3<32>
	word32 a3_36 = CONVERT(Mem34[a0 + 3<i32>:byte], byte, word32)
	word32 a1_40 = CONVERT(Mem34[a0 + 4<i32>:byte], byte, word32)
	word32 a5_53 = CONVERT(Mem34[a0 + 6<i32>:byte], byte, word32) << 17<i32> | (a1_40 << 0x16<u32> | (a3_36 << 0x19<u32> | Mem34[0x4000F914<32>:int32] & 0x81FFFFFF<32>) & 0xFE3FFFFF<32>) & 0xDFFFFFFF<32>
	branch (a3_36 | a1_40) == 0<32> l23083364
l23083364:
	a5_56 = a5_53 & 0xE1FFFFFF<32>
	a4_57 = 0x8000000<32>
l23083312:
	a5_56 = a5_53 & 0xE3FFFFFF<32>
	a4_57 = 0x12000000<32>
l2308331A:
	Mem84[0x40010914<32>:word32] = ((a5_56 | a4_57) & 0xFE00007F<32> | CONVERT(Mem34[a0 + 7<i32>:byte], byte, word32) << 7<i32>) & 0xFFFFFFF3<32> | CONVERT(Mem34[a0 + 8<i32>:byte], byte, word32) << 3<i32> | 0x1000000<32> | CONVERT(Mem34[a0 + 9<i32>:byte], byte, word32) << 2<i32>
	word32 a5_85 = Mem84[0x4000F938<32>:int32]
	word32 a5_88 = CONVERT(Mem84[a0 + 12<i32>:int16], int16, int32) | a5_85 & 0xF0000000<32>
	Mem89[0x40010938<32>:word32] = a5_88
	call 0x4200CB5C<p32> (retsize: 0;)
		uses: a0:a0,a3:a5_85 & 0xF0000000<32>,a4:0x40010000<32>,a5:a5_88,t1:0x4200D35C<p32>
	return
ADC_Init_exit:


word32 Sec_Eng_SHA256_Update.part.0(word32 a0, word32 a1, word32 a2, word32 s5, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_SHA256_Update
//      Sec_Eng_SHA256_Finish
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] s5:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a1 a3 a4 ra s0 s1 s2 s3 s4 s5 s6 s8 t3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
Sec_Eng_SHA256_Update.part.0_entry:
l2308336E:
	word32 s1_115 = a0
	word32 s3_119 = a1
	word32 s0_102 = a2
	word32 a4_112 = 0xF42400<32>
	word32 a3_105 = 0x40004000<32>
l23083392:
	word32 a0_209
	word32 s6_175 = Mem20[0x40004000<32>:int32]
	a4_112 = a4_112 + 0xFFFFFFFF<32>
	branch a4_112 == 0<32> l230834B8
l2308339C:
	branch (s6_175 & 1<i32>) != 0<32> l23083392
l230833A2:
	s1_115 = Mem20[a4_112:word32]
	s2 = CONVERT(Mem20[s1_115 + 16<i32>:byte], byte, word32)
	a4_112 = a4_112 + a2
	Mem40[a4_112:word32] = s1_115
	word32 s4_100 = a4_112 & 63<i32>
	branch a4_112 >=u a2 l230833BA
l230833B4:
	s1_115 = Mem40[(s6_175 & 1<i32>) + 4<i32>:word32]
	Mem43[(s6_175 & 1<i32>) + 5<32>:word32] = s1_115
l230833BA:
	branch (a4_112 & 63<i32>) == 0<32> l23083410
l230833BE:
	s5 = 64<i32> - (a4_112 & 63<i32>)
	branch a2 <u s5 l23083410
l230833CA:
	word32 s0_64
	word32 s3_66
	word32 s4_69
	word32 s6_71
	word32 a5_76
	call 0x4200C52E<p32> (retsize: 0;)
		uses: a0:a0 + (a4_33 & 63<i32>),a1:a1,a2:s5_46,a5:1<32>,ra:0x4200C3D2<p32>,s0:a2,s1:Mem50[a0 + 8<i32>:word32],s2:s2_36,s3:a1,s4:a4_33 & 63<i32>,s5:s5_46,s6:s6_31
		defs: a0:a0_72,a1:a1_73,a5:a5_76,ra:ra_67,s0:s0_64,s2:s2_68,s3:s3_66,s4:s4_69,s5:s5_70,s6:s6_71
	s1_115 = Mem50[a5_76 + 8<i32>:word32]
	Mem84[a5_76 + 4<i32>:word32] = 0x40004000<32>
	word32 a5_89 = CONVERT(SLICE(s2 << 6<u32> | s6_71 & -65<i32>, word16, 0), word16, word32)
	Mem92[a5_89 | 0x10000000<32>:word32] = 0x40004000<32>
	Mem94[a5_89 | 0x10000002<32>:word32] = 0x40004000<32>
	Mem98[s1_115 + 16<i32>:byte] = 1<8>
	s6_175 = s6_71 & -65<i32>
	a4_112 = 0x10000002<32>
	s0_102 = s0_64 + -64<i32> + s4_69
	s3_119 = s3_66 + s5
	s4_100 = 0<32>
l23083410:
	word32 a2_103 = s0_102 & 63<i32>
	branch s0_102 <=u 63<i32> l23083466
l2308341C:
	a3_105 = 0xF42400<32>
l23083428:
	a1 = Mem226[63<i32>:word32]
	a3_105 = a3_105 + 0xFFFFFFFF<32>
	branch a3_105 == 0<32> l230834B8
l2308342E:
	a4_112 = 1<32>
	branch true l23083428
l23083434:
	word32 a5_117 = CONVERT(Mem226[s1_115 + 16<i32>:byte], byte, word32)
	Mem120[a1 + 4<i32>:word32] = s3_119
	a4_112 = CONVERT(SLICE(a5_117 << 6<i32> | 0x3F<32>, word16, 0), word16, word32)
	word32 a5_128 = s0_102 >>u 6<u32> << 16<i32> | a4_112
	Mem129[a5_128:word32] = a1
	Mem131[a5_128 | 2<i32>:word32] = a1
	Mem135[s1_115 + 16<i32>:byte] = 1<8>
	s0_102 = s0_102 & -64<i32>
	s3_119 = s3_119 + s0_102
l23083466:
	branch a2_103 == 0<32> l2308348C
l23083468:
	word32 a5_139 = 0xF42400<32>
l23083474:
	a3_105 = Mem230[a4_112:word32]
	a5_139 = a5_139 + 0xFFFFFFFF<32>
	branch a5_139 == 0<32> l230834B8
l2308347A:
	a4_112 = a4_112 & 1<32>
	branch a4_112 != 0<32> l23083474
l2308347E:
	word32 a5_196
	call 0x4200C52E<p32> (retsize: 0;)
		uses: a0:a0_149 + s4_157,a1:s3_153,a2:a2_103,a5:a5_196,ra:0x4200C484<p32>,s0:s0_162,s1:Mem230[a0_149 + 8<i32>:word32],s2:s2_165,s3:s3_153,s4:s4_157,s5:s5_169,s6:s6_175
		defs: a1:a1_193,a4:a4_183,a5:a5_196,ra:ra_187,s1:s1_185,s2:s2_188,s3:s3_186,s5:s5_190,s6:s6_191
l2308348C:
	word32 a5_202 = 0xF42400<32>
l23083498:
	a3_105 = Mem230[a4_112:word32]
	a5_202 = a5_202 + 0xFFFFFFFF<32>
	branch a5_202 == 0<32> l230834B8
l230834B8:
	a0_209 = 2<32>
l2308349E:
	a4_112 = a4_112 & 1<32>
	branch a4_112 != 0<32> l23083498
l230834A2:
	a0_209 = 0<32>
l230834A4:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_115
	a0Out = a0_209
	a1Out = a1
	a3Out = a3_105
	a4Out = a4_112
	s2Out = s2
	s3Out = s3_119
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6_175
	s8Out = s4
	t3Out = dwArg00
	return ra
Sec_Eng_SHA256_Update.part.0_exit:


word32 Sec_Eng_SHA256_Init(word32 ra, word32 a0, word32 a2, word32 a5, word32 dwArg84, word32 dwArgA4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sha_init
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] ra:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s8 t0 t1 t3
// Preserved: sp
Sec_Eng_SHA256_Init_entry:
l230834BC:
	Mem20[a2 << 2<i32> | a5 & 0xFFFFFFE3<32>:word32] = Mem11[a5:word32]
	word32 a3_26
	word32 a4_27
	word32 a5_28
	word32 t1_80
	word32 a0_81
	word32 a1_82
	word32 a2_83
	memset(ra, a0, 0<32>, 0x14<32>, out t1_80, out a0_81, out a1_82, out a2_83, out a3_26, out a4_27, out a5_28)
	Mem35[a4_27 + 12<i32>:word32] = dwArgA4
	Mem36[a3_26 + 8<i32>:word32] = dwArgA4
	word32 sp_40
	word32 ra_41
	word32 a3_43
	word32 a4_44
	word32 a5_46
	word32 a0_48
	call 0x4200C538<p32> (retsize: 0;)
		uses: a0:a4_27,a1:0<32>,a2:64<i32>,a3:a3_26,a4:a4_27,a5:a5_28,ra:0x4200C4EE<p32>,s0:dwArgA4,Stack +00A4:dwArg84,Stack +00C4:dwArgA4
		defs: a0:a0_48,a3:a3_43,a4:a4_44,a5:a5_46,ra:ra_41,sp:sp_40
	word32 a5_66
	call 0x4200C538<p32> (retsize: 0;)
		uses: a0:a0_48,a1:128<i32>,a2:1<32>,a3:a3_43,a4:a4_44,a5:a5_46,ra:ra_41,s0:Mem36[a0_48 + 12<i32>:word32],s8:Mem36[sp_40 + 4<i32>:word32],Stack +0084:dwArg84,Stack +00A4:dwArgA4,t1:0x4200C504<p32>,t3:Mem36[sp_40 + 32<i32>:word32]
		defs: a5:a5_66
	return a5_66
Sec_Eng_SHA256_Init_exit:


void Sec_Eng_SHA_Start(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sha_init
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
Sec_Eng_SHA_Start_entry:
l2308350C:
	Mem8[a5 & -65<i32> | 32<i32>:word32] = Mem0[a5:word32]
	return
Sec_Eng_SHA_Start_exit:


word32 Sec_Eng_SHA256_Update(word32 a0, word32 a2, word32 a3, word32 s5, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Sec_Eng_SHA256_Finish
//      bl_sha_update
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] s5:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a1 a4 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
Sec_Eng_SHA256_Update_entry:
l2308351E:
	branch a3 == 0<32> l23083528
l23083528:
	s0Out = s0
	s1Out = s1
	a0Out = 0<32>
	a1Out = a2
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return ra
l23083522:
l23083524_thunk_Sec_Eng_SHA256_Update.part.0:
	word32 a0_11
	word32 a4_14
	word32 s0_16
	word32 s1_17
	word32 s3_18
	word32 s4_19
	word32 s6_20
	word32 s2_25
	word32 a1_26
	word32 s5_28
	word32 a3_72
	word32 s8_73
	word32 t3_74
	word32 ra_27 = Sec_Eng_SHA256_Update.part.0(a0, a2, a3, s5, dwArgA8, out s0_16, out s1_17, out a0_11, out a1_26, out a3_72, out a4_14, out s2_25, out s3_18, out s4_19, out s5_28, out s6_20, out s8_73, out t3_74)
	s0Out = s0_16
	s1Out = s1_17
	a0Out = a0_11
	a1Out = a1_26
	a4Out = a4_14
	s2Out = s2_25
	s3Out = s3_18
	s4Out = s4_19
	s5Out = s5_28
	s6Out = s6_20
	return ra_27
Sec_Eng_SHA256_Update_exit:


word32 Sec_Eng_SHA256_Finish(word32 a2, word32 a4, word32 s5, word32 dwArg88, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sha_finish
// MayUse:  a2:[0..31] a4:[0..31] s5:[0..31] Stack +0088:[0..31]
// LiveOut: ra s0 s1 s2 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
Sec_Eng_SHA256_Finish_entry:
l2308352C:
	word32 a5_10 = 0xF42400<32>
l23083538:
	word32 a3_8 = Mem0[a4:word32]
	a5_10 = a5_10 + 0xFFFFFFFF<32>
	branch a5_10 != 0<32> l2308354E
l2308354E:
	a4 = a4 & 1<32>
	branch a4 != 0<32> l23083538
l23083552:
	word32 a5_51
	branch (a3_8 & 63<i32>) >u 55<i32> l23083710
l23083710:
	a5_51 = 120<i32>
l230835B8:
	a5_51 = 56<i32>
l230835BC:
	word32 a0_67
	word32 s3_385
	word32 s4_386
	word32 a1_384
	word32 a4_71
	word32 s0_129
	word32 s1_130
	word32 s2_138
	word32 s5_141
	word32 s6_133
	word32 ra_140 = Sec_Eng_SHA256_Update(Mem48[a2 + 12<i32>:word32], a2, a5_51 - (a3_8 & 63<i32>), s5, dwArg88, out s0_129, out s1_130, out a0_67, out a1_384, out a4_71, out s2_138, out s3_385, out s4_386, out s5_141, out s6_133)
	word32 a5_86 = 0xF42400<32>
l230835D6:
	a5_86 = a5_86 + 0xFFFFFFFF<32>
	branch a5_86 == 0<32> l23083542
l230835DC:
	a4_71 = a4_71 & 1<32>
	branch a4_71 != 0<32> l230835D6
l230835E0:
	word32 sp_102
	word32 a1_112
	word32 s5_116
	call 0x4200C52E<p32> (retsize: 0;)
		uses: a1:fp + 0xFFFFFFE8<32>,a2:8<32>,a4:0xF42400<32>,a6:a6_128,ra:0x4200C5E6<p32>,s0:s0_75,s1:Mem48[a0_67 + 12<i32>:word32],s2:s2_138,s3:s3_131,s4:s4_132,s5:s5_80,s6:s6_133,s8:s8_134,Stack +00A8:dwArg88,t3:t3_135,tp:tp_136
		defs: a1:a1_112,s5:s5_116,sp:sp_102
	word32 s3_131
	word32 s4_132
	word32 s8_134
	word32 t3_135
	word32 a0_381
	word32 a4_383
	word32 a1_382
	word32 a3_126
	ra_140 = Sec_Eng_SHA256_Update.part.0(Mem48[a1_112 + 12<i32>:word32], a1_112, 8<32>, s5_116, Mem48[sp_102 + 168<i32>:word32], out s0_129, out s1_130, out a0_381, out a1_382, out a3_126, out a4_383, out s2_138, out s3_131, out s4_132, out s5_141, out s6_133, out s8_134, out t3_135)
	word32 a4_143 = 0xF42400<32>
l23083604:
	a4_143 = a4_143 + 0xFFFFFFFF<32>
	branch a4_143 == 0<32> l23083542
l23083542:
l2308360A:
	a3_126 = a3_126 & 1<32>
	branch a3_126 != 0<32> l23083604
l2308360E:
	Mem157[s0_129:byte] = SLICE(a3_126, byte, 0)
	Mem158[s0_129 + 1<i32>:byte] = SLICE(a3_126 >>u 8<u32>, byte, 0)
	Mem161[s0_129 + 2<i32>:byte] = SLICE(a3_126 >>u 0x10<u32>, byte, 0)
	Mem162[s0_129 + 3<i32>:byte] = SLICE(a3_126 >>u 24<i32>, byte, 0)
	Mem166[s0_129 + 4<i32>:byte] = SLICE(a3_126 >>u 24<i32>, byte, 0)
	Mem167[s0_129 + 5<i32>:byte] = SLICE(a3_126 >>u 0x20<32>, byte, 0)
	Mem170[s0_129 + 6<i32>:byte] = SLICE(a3_126 >>u 0x28<32>, byte, 0)
	Mem171[s0_129 + 7<i32>:byte] = SLICE(a3_126 >>u 48<i32>, byte, 0)
	Mem174[s0_129 + 8<i32>:byte] = SLICE(a3_126 >>u 48<i32>, byte, 0)
	Mem175[s0_129 + 9<i32>:byte] = SLICE(a3_126 >>u 0x38<32>, byte, 0)
	Mem178[s0_129 + 10<i32>:byte] = SLICE(a3_126 >>u 0x40<32>, byte, 0)
	Mem179[s0_129 + 11<i32>:byte] = SLICE(a3_126 >>u 72<i32>, byte, 0)
	Mem182[s0_129 + 12<i32>:byte] = SLICE(a3_126 >>u 72<i32>, byte, 0)
	Mem183[s0_129 + 13<i32>:byte] = SLICE(a3_126 >>u 0x50<32>, byte, 0)
	Mem186[s0_129 + 14<i32>:byte] = SLICE(a3_126 >>u 0x58<32>, byte, 0)
	Mem187[s0_129 + 15<i32>:byte] = SLICE(a3_126 >>u 96<i32>, byte, 0)
	word32 a5_188 = Mem187[(a3_126 >>u 96<i32>) + 32<i32>:word32]
	Mem190[s0_129 + 16<i32>:byte] = SLICE(a3_126 >>u 96<i32>, byte, 0)
	Mem191[s0_129 + 17<i32>:byte] = SLICE(a3_126 >>u 0x68<32>, byte, 0)
	Mem194[s0_129 + 19<i32>:byte] = SLICE(a3_126 >>u 120<i32>, byte, 0)
	Mem195[s0_129 + 18<i32>:byte] = SLICE(a3_126 >>u 0x70<32>, byte, 0)
	word32 a4_164 = a4_143 >>u 2<i32> & 255<i32>
	branch (a4_164 & 6<i32>) != 0<32> l23083700
l230836A8:
	Mem200[s0_129 + 20<i32>:byte] = SLICE(a4_164 & 6<i32>, byte, 0)
	Mem201[s0_129 + 21<i32>:byte] = SLICE((a4_164 & 6<i32>) >>u 8<u32>, byte, 0)
	Mem204[s0_129 + 22<i32>:byte] = SLICE((a4_164 & 6<i32>) >>u 0x10<u32>, byte, 0)
	word32 a3_203 = (a4_164 & 6<i32>) >>u 24<i32>
	Mem205[s0_129 + 23<i32>:byte] = SLICE(a3_203, byte, 0)
	a5_188 = Mem205[a3_203 + 40<i32>:word32]
	Mem208[s0_129 + 24<i32>:byte] = SLICE(a3_203, byte, 0)
	Mem209[s0_129 + 25<i32>:byte] = SLICE(a3_203 >>u 8<u32>, byte, 0)
	Mem212[s0_129 + 26<i32>:byte] = SLICE(a3_203 >>u 0x10<u32>, byte, 0)
	Mem213[s0_129 + 27<i32>:byte] = SLICE(a3_203 >>u 24<i32>, byte, 0)
	branch (a4_164 & 7<32>) != 0<32> l23083700
l230836E4:
	word32 a5_214 = Mem213[a5_188 + 44<i32>:word32]
	Mem216[s0_129 + 28<i32>:byte] = SLICE(a5_214, byte, 0)
	Mem217[s0_129 + 29<i32>:byte] = SLICE(a5_214 >>u 8<u32>, byte, 0)
	Mem220[s0_129 + 30<i32>:byte] = SLICE(a5_214 >>u 0x10<u32>, byte, 0)
	Mem221[s0_129 + 31<i32>:byte] = SLICE(a5_214 >>u 24<i32>, byte, 0)
	a5_188 = a5_214 >>u 24<i32>
l23083700:
	Mem227[a5_188 & -97<i32>:word32] = Mem223[a5_188:word32]
l23083544:
	s0Out = s0_129
	s1Out = s1_130
	s2Out = s2_138
	s4Out = dwArg04
	s5Out = s5_141
	s6Out = s6_133
	return ra_140
l2308353E:
	s0Out = s0
	s1Out = s1
	s2Out = s2
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return ra
Sec_Eng_SHA256_Finish_exit:


void DMA_Enable(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
DMA_Enable_entry:
l23083716:
	Mem7[(a5 | 1<i32>) + 48<i32>:word32] = Mem0[a5 + 48<i32>:word32]
	return
DMA_Enable_exit:


void DMA_Channel_Enable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_IRQHandler
// MayUse: 
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
DMA_Channel_Enable_entry:
l23083724:
	Mem10[0x4000C111<32>:word32] = Mem0[0x4000C110<32>:word32]
	return
DMA_Channel_Enable_exit:


void DMA_LLI_Init(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
// MayUse:  a1:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
DMA_LLI_Init_entry:
l2308373A:
	Mem23[(CONVERT(Mem0[a1:byte], byte, word32) << 11<i32> | 0x40000110<32>) & -2047<i32> | CONVERT(Mem0[a1 + 2<i32>:byte], byte, word32) << 6<i32> | CONVERT(Mem0[a1 + 1<i32>:byte], byte, word32) << 1<i32>:word32] = Mem0[0x4000C110<32>:word32]
	return
DMA_LLI_Init_exit:


void DMA_LLI_Update(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_IRQHandler
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 t1
// Preserved: sp
DMA_LLI_Update_entry:
l23083770:
	call 0x4200C524<p32> (retsize: 0;)
		uses: a0:(a0 << 8<i32>) + 0x4000C100<32>,a2:4<32>,a5:0x4000C100<32>,t1:0x4200C77E<p32>
	return
DMA_LLI_Update_exit:


void DMA_IntMask(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
DMA_IntMask_entry:
l23083786:
	word32 a5_15
	word32 a0_10
	word32 a4_12
	word32 a5_20
	branch a1 == 1<32> l230837BC
l230837BC:
	a5_20 = 0x4000C110<32>
	a0_10 = Mem0[0x4000C110<32>:word32]
	branch a2 != 0<32> l230837D4
l230837D4:
	a4_12 = 0x4000000<32>
l230837CA:
	a5_15 = 0x4000C110<32>
l2308378E:
	word32 a3_21
	word32 a3_22
	branch a1 == 0<32> l23083798
l23083798:
	a5_20 = Mem0[0x4000C10C<32>:word32]
	a3_21 = 0xF8000000<32>
	branch a2 == 0<32> l230837F0
l230837AE:
	a3_22 = 0x8000000<32>
l23083790:
	branch a1 == 2<32> l230837DA
l230837DA:
	a5_20 = Mem0[0x4000C10C<32>:word32]
	branch a2 != 0<32> l230837FE
l230837FE:
	a3_22 = 0xC000000<32>
l230837B0:
	Mem34[a3_22 | 0x4000C10C<32>:word32] = a5_20
	a0_10 = Mem34[a5_20:word32]
	a5_15 = CONVERT(SLICE(a5_20, word31, 0), word31, word32)
l230837EE:
	a3_21 = 0xF4000000<32>
l230837F0:
	Mem44[a3_21 + 0xFFFFFFFF<32> & 0x4000C10C<32>:word32] = a5_20
	a0_10 = Mem44[a5_20:word32]
	a4_12 = 0x80000000<32>
l230837D6:
	a5_15 = a5_20 | a4_12
l230837D0:
	Mem53[a5_15:word32] = a0_10
	return
l23083796:
	return
DMA_IntMask_exit:


void Default_Handler(word32 ra, word32 dwArg18, word32 dwArg38, word32 dwArg64, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgCC, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      SPI_IRQHandler
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
Default_Handler_entry:
l23083802:
l2308380A_thunk_bflb_platform_printf:
	bflb_platform_printf(ra, 0x230C61A0<32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, dwArgE8)
	return
Default_Handler_exit:


word32 GLB_Set_UART_CLK(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a2 s1
// Trashed: a0 a2 a4 a5 s1 tp
// Preserved: s0 sp
GLB_Set_UART_CLK_entry:
l2308380E:
	Mem17[(a5 & 0xFFFFFFEF<32>) + 8<i32>:word32] = Mem9[a5 + 8<i32>:word32]
	word32 a5_19 = a5 & 0xFFFFFFEF<32> & 0xFFFFFFF8<32>
	Mem22[(a2 | a5_19) + 8<i32>:word32] = Mem17[(a5 & 0xFFFFFFEF<32>) + 8<i32>:word32]
	word32 a4_24 = HBN_Set_UART_CLK_Sel(a1, a5_19)
	word32 a5_27 = a4_24 | 16<i32>
	branch a0 != 0<32> l2308383A
l23083836:
	a5_27 = a4_24 & -17<i32>
l2308383A:
	Mem31[a5_27 + 8<i32>:word32] = 0x40000000<32>
	a2Out = dwArg10
	return a0
GLB_Set_UART_CLK_exit:


void GLB_Set_EM_Sel(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sys_em_config
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
GLB_Set_EM_Sel_entry:
l2308384C:
	Mem9[(a0 | a5 & 0xFFFFFFF0<32>) + 124<i32>:word32] = Mem0[a5 + 124<i32>:word32]
	return
GLB_Set_EM_Sel_exit:


void GLB_Set_ADC_CLK(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tsen_adc_get
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
GLB_Set_ADC_CLK_entry:
l2308385C:
	Mem9[0x400000A4<32>:word32] = Mem0[0x400000A4<32>:int32] & -257<i32>
	Mem16[0x400000A4<32>:word32] = (a2 | Mem9[0x400000A4<32>:int32] & -64<i32>) & -129<i32> | a1 << 7<i32>
	word32 a4_17 = Mem16[0x400000A4<32>:int32]
	word32 a5_18 = a4_17 & -257<i32>
	branch a0 == 0<32> l23083890
l2308388C:
	a5_18 = a4_17 | 256<i32>
l23083890:
	Mem23[0x400000A4<32>:word32] = a5_18
	return
GLB_Set_ADC_CLK_exit:


word32 GLB_UART_Fun_Sel(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
GLB_UART_Fun_Sel_entry:
l2308389C:
	Mem15[0x400000C0<32>:word32] = ~(0xF<32> << (a0 << 2<i32>)) & Mem0[0x400000C0<32>:int32] | a1 << (a0 << 2<i32>)
	return 0x40000000<32>
GLB_UART_Fun_Sel_exit:


void GLB_GPIO_Write(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_gpio_output_set
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
GLB_GPIO_Write_entry:
l230838C0:
	word32 a0_15
	word32 a5_11 = Mem0[a3:word32]
	word32 a0_12 = 1<32> << a0
	branch a1 == 0<32> l230838E2
l230838E2:
	a0_15 = ~a0_12 & a3
l230838DA:
	a0_15 = a0_12 | a3
l230838DC:
	Mem19[a0_15:word32] = a5_11
	return
GLB_GPIO_Write_exit:


word32 GLB_GPIO_Read(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_gpio_input_get
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
GLB_GPIO_Read_entry:
l230838EA:
	return CONVERT((1<32> << a0 & Mem0[((a0 >>u 5<u32>) << 2<u32>) + 0x40000180<32>:int32]) != 0<32>, bool, word32)
GLB_GPIO_Read_exit:


word32 HBN_Set_UART_CLK_Sel(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      GLB_Set_UART_CLK
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a4
// Trashed: a0 a4 a5
// Preserved: sp
HBN_Set_UART_CLK_Sel_entry:
l2308390A:
	word32 a4_5 = Mem0[a5 + 48<i32>:word32]
	Mem10[(a0 << 2<i32> | a5 & 0xFFFFFFFB<32>) + 48<i32>:word32] = a4_5
	return a4_5
HBN_Set_UART_CLK_Sel_exit:


word32 HBN_Get_RTC_Timer_Val(word32 a0, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rtc_get_counter
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
HBN_Get_RTC_Timer_Val_entry:
l2308391C:
	word32 a5_5 = Mem0[a4 + 16<i32>:word32]
	Mem9[(a4 | 0x80000000<32>) + 16<i32>:word32] = a5_5
	Mem11[(a4 & 0x7FFFFFFF<32>) + 16<i32>:word32] = a5_5
	word32 a5_12 = Mem11[(a4 & 0x7FFFFFFF<32>) + 12<i32>:word32]
	Mem14[a4 & 0x7FFFFFFF<32>:word32] = a0
	Mem19[Mem14[a5_12 + 16<i32>:word32] & 255<i32>:word32] = a1
	return 0<32>
HBN_Get_RTC_Timer_Val_exit:


word32 HBN_Clear_IRQ(word32 a0, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_hbn_enter
// MayUse:  a0:[0..31] a3:[0..31]
// LiveOut: a3
// Trashed: a0 a3 a4 a5
// Preserved: sp
HBN_Clear_IRQ_entry:
l23083944:
	word32 a0_8 = 1<32> << a0
	word32 a3_9 = a3 | a0_8
	Mem10[a3_9 + 28<i32>:word32] = Mem0[a3 + 28<i32>:word32]
	Mem14[(~a0_8 & 1<32>) + 28<i32>:word32] = Mem10[0x1D<32>:word32]
	return a3_9
HBN_Clear_IRQ_exit:


void HBN_Aon_Pad_IeSmt_Cfg(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sys_early_init
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
HBN_Aon_Pad_IeSmt_Cfg_entry:
l23083962:
	Mem10[(a0 << 8<i32> | a5 & -257<i32>) + 20<i32>:word32] = Mem0[a5 + 20<i32>:word32]
	return
HBN_Aon_Pad_IeSmt_Cfg_exit:


void TIMER_SetCompValue(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TIMER_Init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
TIMER_SetCompValue_entry:
l23083976:
	Mem13[a2:word32] = (a0 + 3<32> + a1 << 2<i32>) + 0x4000A510<32>
	return
TIMER_SetCompValue_exit:


void TIMER_SetCountMode(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      TIMER_Init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
TIMER_SetCountMode_entry:
l2308398E:
	Mem15[0x4000A588<32>:word32] = ~(1<32> << a0 + 1<32>) & Mem0[0x4000A588<32>:int32] | a1 << a0 + 1<32>
	return
TIMER_SetCountMode_exit:


void TIMER_ClearIntStatus(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      int_timer_cb
//      bl_timer_tick_enable
// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
TIMER_ClearIntStatus_entry:
l230839B0:
	Mem14[1<32> << a1 | a4:word32] = Mem0[a4:word32]
	return
TIMER_ClearIntStatus_exit:


word32 TIMER_Init(word32 a0, word32 a2, word32 dwArg38, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_timer_tick_enable
// MayUse:  a0:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut: a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
TIMER_Init_entry:
l230839CA:
	word32 a3_18
	word32 a5_19
	word32 s1_14 = CONVERT(Mem11[a0:byte], byte, word32)
	word32 a5_15 = Mem11[0x4000A500<32>:int32]
	word32 a4_17 = CONVERT(Mem11[a0 + 1<i32>:byte], byte, word32)
	branch s1_14 != 0<32> l23083A72
l23083A72:
	a3_18 = a5_15 & -97<i32>
	a5_19 = a4_17 << 5<u32>
l230839E8:
	a3_18 = a5_15 & -13<i32>
	a5_19 = a4_17 << 2<u32>
l230839F0:
	word32 a3_33
	word32 a5_34
	Mem26[0x4000A500<32>:word32] = a5_19 | a3_18
	word32 a5_27 = Mem26[0x4000A5BC<32>:int32]
	word32 a4_29 = CONVERT(Mem26[a0 + 4<i32>:byte], byte, word32)
	branch s1_14 != 0<32> l23083A7C
l23083A7C:
	a3_33 = a5_27 & 0xFF00FFFF<32>
	a5_34 = a4_29 << 0x10<u32>
l23083A04:
	a3_33 = a5_27 & 0xF00000FF<32>
	a5_34 = a4_29 << 8<u32>
l23083A10:
	Mem43[0x4000A5BC<32>:word32] = a5_34 | a3_33
	TIMER_SetCountMode(s1_14, CONVERT(Mem43[a0 + 3<i32>:byte], byte, word32))
	Mem56[CONVERT(Mem43[a0 + 2<i32>:byte], byte, word32):word32] = (s1_14 << 2<u32>) + 0x4000A55C<32>
	word32 s2_112 = 0x4000A000<32>
	word32 a4_57 = CONVERT(Mem56[a0 + 3<i32>:byte], byte, word32)
	branch a4_57 != 0<32> l23083A46
l23083A3A:
	s2_112 = (s1_14 << 2<u32>) + 0x4000A550<32>
	Mem61[s2_112:word32] = a4_57
l23083A46:
	TIMER_SetCompValue(s1_14, 0<32>, a2)
	TIMER_SetCompValue(s1_14, 1<32>, a2)
	TIMER_SetCompValue(s1_14, 2<32>, a2)
	0<32> = dwArg38
	a4Out = a4_57
	s2Out = s2_112
	return s1_14
TIMER_Init_exit:


void TIMER_Enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_timer_tick_enable
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
TIMER_Enable_entry:
l23083A8A:
	Mem11[0x4000A584<32>:word32] = 1<32> << a0 + 1<32> | Mem0[0x4000A584<32>:int32]
	return
TIMER_Enable_exit:


void TIMER_Disable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_timer_tick_enable
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: sp
TIMER_Disable_entry:
l23083AA2:
	Mem12[0x4000A584<32>:word32] = ~(1<32> << a0 + 1<32>) & Mem0[0x4000A584<32>:int32]
	return
TIMER_Disable_exit:


void TIMER_IntMask(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_timer_tick_enable
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
TIMER_IntMask_entry:
l23083ABE:
	word32 a5_12
	word32 a0_8 = Mem0[0x4000A544<32>:word32]
	branch a1 == 1<32> l23083AF0
l23083AF0:
	branch a2 != 0<32> l23083AF8
l23083AF8:
	a5_12 = 0x4000A544<32>
l23083AF2:
	a5_12 = 0x4000A546<32>
l23083AD2:
	branch a1 == 0<32> l23083AE2
l23083AE2:
	branch a2 != 0<32> l23083AEC
l23083AEC:
	a5_12 = 0x4000A544<32>
l23083AE4:
	a5_12 = 0x4000A545<32>
l23083AD4:
	branch a1 == 2<32> l23083AFC
l23083AFC:
	branch a2 != 0<32> l23083B20
l23083ADA:
	branch a1 == 3<32> l23083B04
l23083B04:
	branch a2 != 0<32> l23083B14
l23083B14:
	Mem19[0x4000A544<32>:word32] = a0_8
	Mem21[0x4000A544<32>:word32] = a0_8
l23083B20:
	a5_12 = 0x4000A540<32>
l23083B06:
	Mem25[0x4000A545<32>:word32] = a0_8
	Mem27[0x4000A546<32>:word32] = a0_8
l23083AFE:
	a5_12 = 0x4000A544<32>
l23083AE8:
	Mem34[a5_12:word32] = a0_8
	return
l23083AE0:
	return
TIMER_IntMask_exit:


void WDT_Set_Clock(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a4 a5
// Preserved: sp
WDT_Set_Clock_entry:
l23083B24:
	Mem12[0x4000A500<32>:word32] = a0 << 8<i32> | Mem0[0x4000A500<32>:int32] & -769<i32>
	Mem17[0x4000A5BC<32>:word32] = CONVERT(Mem12[0x4000A5BC<32>:word24], word24, word32) | a1 << 24<i32>
	return
WDT_Set_Clock_exit:


void WDT_SetCompValue(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
WDT_SetCompValue_entry:
l23083B4A:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	Mem19[0x4000A568<32>:word32] = a0
	return
WDT_SetCompValue_exit:


void WDT_ResetCounterValue()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_feed
//      bl_wdt_init
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
WDT_ResetCounterValue_entry:
l23083B7A:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	Mem20[0x4000A598<32>:word32] = Mem17[0x4000A598<32>:int32] | 1<i32>
	return
WDT_ResetCounterValue_exit:


void WDT_Enable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_init
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
WDT_Enable_entry:
l23083BB2:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	Mem20[0x4000A564<32>:word32] = Mem17[0x4000A564<32>:int32] | 1<i32>
	return
WDT_Enable_exit:


void WDT_Disable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_disable
//      bl_wdt_init
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
WDT_Disable_entry:
l23083BEA:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	Mem20[0x4000A564<32>:word32] = Mem17[0x4000A564<32>:int32] & 0xFFFFFFFE<32>
	return
WDT_Disable_exit:


void WDT_IntMask(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_wdt_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a2 a3 a4 a5 a6
// Preserved: sp
WDT_IntMask_entry:
l23083C20:
	Mem11[0x4000A59C<32>:word32] = Mem0[0x4000A59C<32>:int32] & 0xF0000000<32> | 0xBFFFABA<32>
	Mem17[0x4000A5A0<32>:word32] = Mem11[0x4000A5A0<32>:int32] & 0xF0000000<32> | 0xEFFFB10<32>
	word32 a4_18 = Mem17[0x4000A564<32>:int32]
	branch a0 != 0<32> l23083C5C
l23083C54:
	word32 a4_21
	branch a1 != 0<32> l23083C5E
l23083C5E:
	a4_21 = a4_18 | 2<i32>
l23083C56:
	a4_21 = a4_18 & 0xFFFFFFFD<32>
l23083C58:
	Mem25[0x4000A564<32>:word32] = a4_21
l23083C5C:
	return
WDT_IntMask_exit:


word32 EF_Ctrl_Get_Byte_Zero_Cnt(word32 a0, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      EF_Ctrl_Read_MAC_Address
//      EF_Ctrl_Read_MAC_Address_Opt
// MayUse:  a0:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
EF_Ctrl_Get_Byte_Zero_Cnt_entry:
l23083C64:
	word32 a5_13 = 0<32>
	word32 a4_10 = 0<32>
l23083C6A:
	word32 a3_8 = a0 >> a5_13
	branch (a3_8 & 1<32>) != 0<32> l23083C74
l23083C72:
	a4_10 = a4_10 + 1<32>
l23083C74:
	a5_13 = a5_13 + 1<32>
	branch a5_13 != 8<32> l23083C6A
l23083C7A:
	a3Out = a3_8 & 1<32>
	return a4_10
EF_Ctrl_Get_Byte_Zero_Cnt_exit:


word32 EF_Ctrl_Read_MAC_Address(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_efuse_read_mac
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
EF_Ctrl_Read_MAC_Address_entry:
l23083C7E:
	word32 s0_20
	word32 s1_21
	word32 ra_26
	word32 a5_28
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0,ra:0x4200CC8E<p32>,s0:a0,s1:s1,s2:s2,s3:s3,s4:s4,Stack +0004:s4,Stack +0008:s2,Stack +000C:s0,Stack +0084:s3,Stack +0088:s1,Stack +008C:ra
		defs: a5:a5_28,ra:ra_26,s0:s0_20,s1:s1_21
	Mem38[s0_20:byte] = SLICE(a5_28, byte, 0)
	Mem39[s0_20 + 1<i32>:byte] = SLICE(a5_28 >>u 8<u32>, byte, 0)
	Mem42[s0_20 + 3<i32>:byte] = SLICE(a5_28 >>u 24<i32>, byte, 0)
	Mem43[s0_20 + 2<i32>:byte] = SLICE(a5_28 >>u 0x10<u32>, byte, 0)
	Mem47[s0_20 + 4<i32>:byte] = SLICE(s1_21, byte, 0)
	Mem48[s0_20 + 5<i32>:byte] = SLICE(s1_21 >>u 8<u32>, byte, 0)
	word32 s3_35 = 0<32>
	word32 s2_36 = 0<32>
l23083CCA:
	s2_36 = s2_36 + 1<32>
	word32 a3_139
	s3_35 = s3_35 + EF_Ctrl_Get_Byte_Zero_Cnt(CONVERT(Mem48[s0_20 + s2_36:byte], byte, word32), out a3_139)
	branch s2_36 != 6<32> l23083CCA
l23083CDE:
	word32 s1_65 = s1_21 >>u 16<i32> ^ s3_35
	branch (s1_65 & 63<i32>) != 0<32> l23083D0E
l23083CEC:
	word32 a5_68 = s0_20 + 5<i32>
	s0_73 = s0_20
l23083CF4:
	word32 s0_73
	word32 a3_74 = CONVERT(Mem71[s0_73:byte], byte, word32)
	Mem76[s0_73:byte] = SLICE(CONVERT(Mem71[a5_68:byte], byte, word32), byte, 0)
	a5_68 = a5_68 + 0xFFFFFFFF<32>
	Mem77[a5_68 + 1<i32>:byte] = SLICE(a3_74, byte, 0)
	s0_73 = s0_73 + 1<32>
	branch a5_68 != s0_20 + 2<i32> l23083CF4
l23083D0C:
l23083D0E:
	s0Out = s1
	s1Out = s1_65 & 63<i32>
	s2Out = s2_36
	s3Out = s3_35
	s4Out = dwArg04
	return ra_26
EF_Ctrl_Read_MAC_Address_exit:


word32 EF_Ctrl_Is_MAC_Address_Slot_Empty(word32 a0, word32 a1, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_macaddr
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 ra
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: s0 sp
EF_Ctrl_Is_MAC_Address_Slot_Empty_entry:
l23083D1E:
	word32 a0_100
	word32 a4_20
	word32 a5_34
	branch a0 != 0<32> l23083D56
l23083D56:
	branch a0 != 1<32> l23083D78
l23083D78:
	branch a0 != 2<32> l23083D4C
l23083D7E:
	word32 s0_15
	word32 a1_17
	word32 a0_18
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a4:a4_20,ra:0x4200BD7E<p32>,s0:a1
		defs: a0:a0_18,a1:a1_17,a4:a4_20,ra:ra_16,s0:s0_15
	branch s0_15 == 0<32> l23083D90
l23083D88:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_18,a1:a1_17,a4:a4_29,ra:0x4200BD88<p32>,s0:s0_15
		defs: a4:a4_29,ra:ra_25
l23083D90:
	a5_34 = Mem7[Mem7[a4_20 + 4<i32>:word32] + 8<i32>:word32]
l23083D5C:
	word32 s0_37
	word32 a1_39
	word32 a0_40
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a4:a4_42,ra:0x4200BD5C<p32>,s0:a1
		defs: a0:a0_40,a1:a1_39,a4:a4_42,ra:ra_38,s0:s0_37
	branch s0_37 == 0<32> l23083D6E
l23083D66:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_40,a1:a1_39,a4:a4_51,ra:0x4200CD66<p32>,s0:s0_37
		defs: a4:a4_51,ra:ra_47
l23083D6E:
	a5_34 = Mem7[Mem7[a4_20 + 108<i32>:word32] + 112<i32>:word32]
l23083D28:
	word32 s0_59
	word32 a1_61
	word32 a0_62
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a4:a4_64,ra:0x4200CD28<p32>,s0:a1
		defs: a0:a0_62,a1:a1_61,a4:a4_64,ra:ra_60,s0:s0_59
	branch s0_59 == 0<32> l23083D3A
l23083D32:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_62,a1:a1_61,a4:a4_73,ra:0x4200CD32<p32>,s0:s0_59
		defs: a4:a4_73,ra:ra_69
l23083D3A:
	a5_34 = Mem7[Mem7[a4_20 + 20<i32>:word32] + 24<i32>:word32]
l23083D42:
	a0_100 = 1<32>
	branch (CONVERT(SLICE(a5_34, word22, 0), word22, word32) | a4_20) == 0<32> l23083D4E
l23083D4C:
	a0_100 = 0<32>
l23083D4E:
	a0Out = a0_100
	return ra
EF_Ctrl_Is_MAC_Address_Slot_Empty_exit:


word32 EF_Ctrl_Read_MAC_Address_Opt(word32 a0, word32 a1, word32 a2, word32 s2, word32 s3, word32 s4, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_macaddr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: a0 a3 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a1 ra sp
EF_Ctrl_Read_MAC_Address_Opt_entry:
l23083D9A:
	branch a0 >u 2<32> l23083E84
l23083E84:
	a0Out = 1<32>
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s1
l23083DA0:
	word32 a5_44
	word32 s0_116 = a1
	word32 s1_21 = a0
	branch a2 == 0<32> l23083DD0
l23083DB4:
	branch a0 != 2<32> l23083DC8
l23083DC8:
	word32 a4_35
	word32 a3_36
	word32 t3_37
	word32 s8_38
	word32 a6_39
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2,a3:a3_36,a4:a4_35,a6:a6_39,ra:0x4200BDC8<p32>,s0:a1,s1:a0,s2:s2,s3:s3,s4:s4,s8:s8_38,t3:t3_37
		defs: a3:a3_36,a4:a4_35,a6:a6_39,s0:s0_27,s1:s1_28,s8:s8_38,t3:t3_37
l23083DD0:
	branch s1_21 != 0<32> l23083E60
l23083E60:
	branch s1_21 != 1<32> l23083DC0
l23083E66:
	a5_44 = Mem18[0x4000706C<32>:word32]
l23083DD2:
	a5_44 = Mem18[0x40007014<32>:word32]
l23083DB8:
	word32 a4_59
	word32 a3_60
	word32 t3_61
	word32 s8_62
	word32 a6_63
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2,a3:a3_60,a4:a4_59,a6:a6_63,ra:0x4200BDB8<p32>,s0:a1,s1:a0,s2:s2,s3:s3,s4:s4,s8:s8_62,t3:t3_61
		defs: a3:a3_60,a4:a4_59,a6:a6_63,s0:s0_51,s1:s1_52,s8:s8_62,t3:t3_61
l23083DC0:
	a5_44 = Mem18[0x40007004<32>:word32]
l23083DD8:
	Mem72[s0_116:byte] = SLICE(a5_44, byte, 0)
	Mem73[s0_116 + 1<i32>:byte] = SLICE(a5_44 >>u 8<u32>, byte, 0)
	Mem76[s0_116 + 2<i32>:byte] = SLICE(a5_44 >>u 0x10<u32>, byte, 0)
	Mem77[s0_116 + 3<i32>:byte] = SLICE(a5_44 >>u 24<i32>, byte, 0)
	branch s1_21 != 0<32> l23083E6E
l23083E6E:
	branch s1_21 != 1<32> l23083E7C
l23083E7C:
l23083E74:
l23083DF4:
l23083DFA:
	Mem87[s0_116 + 4<i32>:byte] = SLICE(s1_21, byte, 0)
	Mem88[s0_116 + 5<i32>:byte] = SLICE(s1_21 >>u 8<u32>, byte, 0)
	word32 s3_103 = 0<32>
	word32 s2_90 = 0<32>
l23083E0C:
	s2_90 = s2_90 + 1<32>
	word32 a3_100
	s3_103 = s3_103 + EF_Ctrl_Get_Byte_Zero_Cnt(CONVERT(Mem88[s0_116 + s2_90:byte], byte, word32), out a3_100)
	branch s2_90 != 6<32> l23083E0C
l23083E20:
	word32 s1_108 = s1_21 >>u 16<i32> ^ s3_103
	word32 a0_110 = 1<32>
	branch (s1_108 & 63<i32>) != 0<32> l23083E50
l23083E2E:
	word32 a5_111 = s0_116 + 5<i32>
	word32 a4_112 = s0_116 + 2<i32>
l23083E36:
	a3_100 = CONVERT(Mem114[s0_116:byte], byte, word32)
	Mem119[s0_116:byte] = SLICE(CONVERT(Mem114[a5_111:byte], byte, word32), byte, 0)
	a5_111 = a5_111 + 0xFFFFFFFF<32>
	Mem120[a5_111 + 1<i32>:byte] = SLICE(a3_100, byte, 0)
	s0_116 = s0_116 + 1<32>
	branch a4_112 != a5_111 l23083E36
l23083E4E:
	a0_110 = 0<32>
l23083E50:
	a0Out = a0_110
	a3Out = a3_100
	s2Out = s2_90
	s3Out = s3_103
	s4Out = dwArg04
	return s1_108 & 63<i32>
EF_Ctrl_Read_MAC_Address_Opt_exit:


word32 EF_Ctrl_Is_CapCode_Slot_Empty(word32 ra, word32 s0, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 ra s0
// Trashed: a0 a1 a2 a4 a5 ra s0 s8 t3
// Preserved: sp
EF_Ctrl_Is_CapCode_Slot_Empty_entry:
l23083E88:
	word32 a1_15
	word32 a0_17
	word32 s0_14
	word32 ra_16
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,ra:0x4200BE92<p32>,s0:a0,Stack +000C:s0,Stack +0084:a1,Stack +008C:ra
		defs: a0:a0_17,a1:a1_15,ra:ra_16,s0:s0_14
	branch a1_15 == 0<32> l23083EA6
l23083E9E:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_17,a1:a1_15,ra:0x4200BE9E<p32>,s0:s0_14
		defs: ra:ra_28,s0:s0_26
l23083EA6:
	word32 a0_38
	word32 a5_45
	branch s0_14 != 0<32> l23083EC0
l23083EC0:
	word32 a5_41
	branch s0_14 != 1<32> l23083ED0
l23083ED0:
	a0_38 = 0<32>
	branch s0_14 != 2<32> l23083EB8
l23083ED8:
	a5_41 = Mem9[0x40007008<32>:word32]
l23083EC6:
	a5_41 = Mem9[0x40007070<32>:word32]
l23083ECC:
	a5_45 = a5_41 >>u 22<i32>
l23083EA8:
	a5_45 = Mem9[0x4000700C<32>:word32] >>u 2<i32>
l23083EB0:
	a0_38 = CONVERT((a5_45 & 255<i32>) <u 1<i32>, bool, word32)
l23083EB8:
	s0Out = s0_14
	a0Out = a0_38
	return ra_16
EF_Ctrl_Is_CapCode_Slot_Empty_exit:


word32 EF_Ctrl_Read_CapCode_Opt(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31]
// LiveOut: a0 s1 s2 s4
// Trashed: a0 a1 a2 a5 a6 ra s0 s1 s2 s4 s8 t3
// Preserved: sp
EF_Ctrl_Read_CapCode_Opt_entry:
l23083EE0:
	branch a0 <=u 2<32> l23083EF8
l23083EF8:
	word32 a2_24
	word32 a1_28
	word32 t3_29
	word32 s8_30
	word32 s4_31
	word32 a6_32
	word32 s0_25
	word32 sp_20
	word32 a0_22
	word32 s1_136
	word32 s2_139
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2,a6:a6_32,ra:0x4200BF08<p32>,s0:a0,s1:a1,s2:a2,s4:s4_31,s8:s8_30,Stack +0008:s2,Stack +000C:s0,Stack +0088:s1,Stack +008C:ra,t3:t3_29
		defs: a0:a0_22,a1:a1_28,a2:a2_24,a6:a6_32,s0:s0_25,s1:s1_26,s2:s2_23,s4:s4_31,s8:s8_30,sp:sp_20,t3:t3_29
	branch s2_139 == 0<32> l23083F1C
l23083F14:
	word32 t3_43
	word32 s8_44
	word32 s4_45
	word32 a6_46
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_22,a1:a1_28,a2:a2_24,a6:a6_46,ra:0x4200BF14<p32>,s0:s0_25,s1:s1_26,s2:s2_23,s4:s4_45,s8:s8_44,t3:t3_43
		defs: a0:a0_36,a6:a6_46,s0:s0_39,s1:s1_40,s2:s2_37,s4:s4_45,s8:s8_44,sp:sp_34,t3:t3_43
l23083F1C:
	word32 a5_55
	branch s0_25 != 0<32> l23083F54
l23083F54:
	word32 a5_51
	branch s0_25 != 1<32> l23083F64
l23083F64:
	a5_51 = Mem15[0x40007008<32>:word32]
l23083F5A:
	a5_51 = Mem15[0x40007070<32>:word32]
l23083F60:
	a5_55 = a5_51 >>u 22<i32>
l23083F1E:
	a5_55 = Mem15[0x4000700C<32>:word32] >>u 2<i32>
l23083F26:
	word32 a0_109
	Mem63[sp_20 + 132<i32>:word32] = a5_55
	word32 a2_64 = Mem63[sp_20 + 68<i32>:word32]
	branch (a0_22 & 128<i32>) == 0<32> l23083EEA
l23083F30:
	word32 s0_69 = a0_22 & 63<i32>
	word32 a0_80
	word32 s0_83
	word32 t3_87
	word32 s8_88
	word32 s4_89
	word32 a6_90
	call 0x4200CDC2<p32> (retsize: 0;)
		uses: a0:s0_69,a1:6<32>,a2:a2_64,a6:a6_90,ra:0x4200CF40<p32>,s0:s0_69,s1:s1_76,s2:a0_66 >>u 6<u32> & 1<i32>,s4:s4_89,s8:s8_88,t3:t3_87
		defs: a0:a0_80,a6:a6_90,s0:s0_83,s1:s1_84,s2:s2_81,s4:s4_89,s8:s8_88,t3:t3_87
	branch s2_139 != a0_80 l23083EEA
l23083EEA:
	a0_109 = 1<32>
l23083F4C:
	Mem92[s1_136:byte] = SLICE(s0_83, byte, 0)
	a0_109 = 0<32>
l23083EEC:
	a0Out = a0_109
	s2Out = s2_139
	s4Out = dwArg04
	return s1_136
l23083EE6:
	a0Out = 1<32>
	s2Out = s2
	s4Out = s4
	return s1
EF_Ctrl_Read_CapCode_Opt_exit:


word32 EF_Ctrl_Is_PowerOffset_Slot_Empty(word32 ra, word32 s0, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_poweroffset
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 ra s0
// Trashed: a0 a1 a2 a4 a5 ra s0 s8 t3
// Preserved: sp
EF_Ctrl_Is_PowerOffset_Slot_Empty_entry:
l23083F6C:
	word32 a1_15
	word32 a0_17
	word32 s0_14
	word32 ra_16
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,ra:0x4200BF76<p32>,s0:a0,Stack +000C:s0,Stack +0084:a1,Stack +008C:ra
		defs: a0:a0_17,a1:a1_15,ra:ra_16,s0:s0_14
	branch a1_15 == 0<32> l23083F8A
l23083F82:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_17,a1:a1_15,ra:0x4200BF82<p32>,s0:s0_14
		defs: ra:ra_28,s0:s0_26
l23083F8A:
	word32 a0_38
	word32 a4_52
	word32 a5_43
	branch s0_14 != 0<32> l23083FAC
l23083FAC:
	word32 a4_44
	branch s0_14 != 1<32> l23083FCA
l23083FCA:
	a0_38 = 0<32>
	branch s0_14 != 2<32> l23083FA0
l23083FD2:
	a5_43 = CONVERT(true, bool, word32)
	a4_44 = Mem9[Mem9[0x76<32>:word32] + 12<i32>:word32] >>u 1<i32>
l23083FB2:
	a4_44 = Mem9[Mem9[0x75<32>:word32] + 12<i32>:word32]
	a5_43 = CONVERT(false, bool, word32)
l23083FC2:
	a4_52 = ~a4_44 & 1<32>
l23083F8C:
	a4_52 = 1<32>
	a5_43 = CONVERT(Mem9[0x40007078<32>:word32] >>u 15<i32> <u 1<i32>, bool, word32)
l23083F9A:
	a0_38 = 0<32>
	branch a5_43 == 0<32> l23083FA0
l23083F9E:
	a0_38 = a4_52
l23083FA0:
	s0Out = s0_14
	a0Out = a0_38 & 255<i32>
	return ra_16
EF_Ctrl_Is_PowerOffset_Slot_Empty_exit:


word32 EF_Ctrl_Read_PowerOffset_Opt(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s3, word32 s4, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_poweroffset
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a4 a5 ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
EF_Ctrl_Read_PowerOffset_Opt_entry:
l23083FE4:
	word32 sp_23
	word32 a0_31
	word32 a1_32
	word32 s0_24
	word32 ra_106
	word32 s1_107
	word32 s2_104
	word32 s3_108
	word32 s4_109
	call 0x4200C556<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:a2,ra:0x4200BFF8<p32>,s0:a0,s1:s1,s2:a1,s3:s3,s4:s4,Stack +000C:s4,Stack +0010:s2,Stack +0014:s0,Stack +0084:a2,Stack +008C:s3,Stack +0090:s1,Stack +0094:ra
		defs: a0:a0_31,a1:a1_32,ra:ra_27,s0:s0_24,s1:s1_28,s2:s2_25,s3:s3_29,s4:s4_30,sp:sp_23
	word32 a2_38 = Mem17[sp_23 + 132<i32>:word32]
	branch a2_38 == 0<32> l2308400C
l23084004:
	call 0x4200C56A<p32> (retsize: 0;)
		uses: a0:a0_31,a1:a1_32,a2:a2_38,ra:0x4200C004<p32>,s0:s0_24,s1:s1_28,s2:s2_25,s3:s3_29,s4:s4_30
		defs: a2:a2_43,ra:ra_44,s0:s0_41,s1:s1_45,s2:s2_42,s3:s3_46,s4:s4_47
l2308400C:
	word32 a0_117
	word32 s0_63
	word32 a5_72
	branch s0_24 != 0<32> l23084062
l23084062:
	word32 a5_64
	branch s0_24 != 1<32> l2308407E
l2308407E:
	branch s0_24 == 2<32> l23084096
l23084096:
	s1_107 = s0_24 << 1<u32> >>u 17<i32>
	s0_63 = s0_24 >>u 31<i32>
	a5_64 = Mem17[Mem17[s0_24 + 116<i32>:word32] + 12<i32>:word32] >>u 1<i32>
l23084068:
	a5_64 = Mem17[Mem17[s0_24 + 116<i32>:word32] + 12<i32>:word32]
	s1_107 = CONVERT(SLICE(s0_24, word15, 0), word15, word32)
	s0_63 = s0_24 >>u 15<i32> & 1<32>
l2308407A:
	a5_72 = a5_64 & 1<32>
l2308400E:
	a5_72 = s0_24 >>u 0xF<u32> & 1<32>
	s1_107 = s0_24 << 1<u32> >>u 17<i32>
	s0_63 = s0_24 >>u 31<i32>
l23084022:
	branch a5_72 == 0<32> l23084084
l23084024:
	word32 s0_103
	word32 a0_110
	call 0x4200CDC2<p32> (retsize: 0;)
		uses: a0:s1_81,a1:0xF<32>,a2:a2_91,ra:0x4200D028<p32>,s0:s0_85,s1:s1_81,s2:s2_88,s3:s3_94,s4:s4_97
		defs: a0:a0_110,ra:ra_106,s0:s0_103,s1:s1_107,s2:s2_104,s3:s3_108,s4:s4_109
	branch a0_110 != s0_103 l23084084
l23084084:
	a0_117 = 1<32>
l23084034:
	word32 s0_118 = 0<32>
	s4_109 = 5<32>
	s3_108 = 3<32>
l2308403A:
	word32 a0_127 = __lshrdi3(s1_107, 0<32>, s0_118 + 5<32>)
	word32 a5_131 = a0_127 & 31<i32>
	word32 a4_134 = s2_104 + s0_118
	branch (a0_127 & 0x10<32>) == 0<32> l23084054
l23084052:
	a5_131 = (a0_127 & 31<i32>) + 0xFFFFFFE0<32>
l23084054:
	Mem138[a4_134:byte] = SLICE(a5_131, byte, 0)
	s0_118 = s0_118 + 1<32>
	branch s0_118 != 3<32> l2308403A
l2308405E:
	a0_117 = 0<32>
l23084086:
	0<32> = dwArg0128
	s1Out = s1_107
	a0Out = a0_117
	s2Out = s2_104
	s3Out = s3_108
	s4Out = s4_109
	return ra_106
EF_Ctrl_Read_PowerOffset_Opt_exit:


word32 mfg_media_read_xtal_capcode(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_efuse_read_capcode
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
mfg_media_read_xtal_capcode_entry:
l230840AA:
	branch CONVERT(Mem0[0x4200F6FC<32>:byte], byte, word32) == 0<32> l230840B6
l230840B6:
l230840B6_thunk_mfg_efuse_read_xtal_capcode:
	word32 a0_15
	word32 a3_18
	word32 s0_24
	word32 s1_25
	word32 s10_26
	word32 s11_27
	word32 s2_28
	word32 s3_29
	word32 s4_30
	word32 s5_31
	word32 s6_32
	word32 s7_33
	word32 s8_34
	word32 ra_23 = mfg_efuse_read_xtal_capcode(ra, s0, s1, a0, a1, a3, s2, s3, s4, out s0_24, out s1_25, out a0_15, out a3_18, out s2_28, out s3_29, out s4_30, out s5_31, out s6_32, out s7_33, out s8_34, out s10_26, out s11_27)
	s0Out = s0_24
	s1Out = s1_25
	a0Out = a0_15
	a3Out = a3_18
	s2Out = s2_28
	s3Out = s3_29
	s4Out = s4_30
	s5Out = s5_31
	s6Out = s6_32
	s7Out = s7_33
	s8Out = s8_34
	s10Out = s10_26
	s11Out = s11_27
	mstatusOut = mstatus
	return ra_23
l230840B4:
l230840B4_thunk_mfg_flash_read_xtal_capcode:
	word32 a0_41
	word32 a3_44
	word32 mstatus_48
	word32 s1_50
	word32 s10_51
	word32 s11_52
	word32 s2_53
	word32 s3_54
	word32 s4_55
	word32 s5_56
	word32 s6_57
	word32 s7_58
	word32 s8_59
	word32 ra_49 = mfg_flash_read_xtal_capcode(ra, a0, a1, a3, a4, mstatus, dwArg08, dwArg38, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_50, out a0_41, out a3_44, out s2_53, out s3_54, out s4_55, out s5_56, out s6_57, out s7_58, out s8_59, out s10_51, out s11_52, out mstatus_48)
	s0Out = s0
	s1Out = s1_50
	a0Out = a0_41
	a3Out = a3_44
	s2Out = s2_53
	s3Out = s3_54
	s4Out = s4_55
	s5Out = s5_56
	s6Out = s6_57
	s7Out = s7_58
	s8Out = s8_59
	s10Out = s10_51
	s11Out = s11_52
	mstatusOut = mstatus_48
	return ra_49
mfg_media_read_xtal_capcode_exit:


word32 mfg_media_read_poweroffset(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_efuse_read_pwroft
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mfg_media_read_poweroffset_entry:
l230840B8:
	branch CONVERT(Mem0[0x4200F6FC<32>:byte], byte, word32) == 0<32> l230840C4
l230840C4:
l230840C4_thunk_mfg_efuse_read_poweroffset:
	word32 a0_14
	word32 a3_17
	word32 s0_23
	word32 s1_24
	word32 s2_27
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s7_32
	word32 s8_33
	word32 s9_34
	word32 ra_22 = mfg_efuse_read_poweroffset(ra, s0, s1, a0, a1, s2, s3, s4, dwArg0128, out s0_23, out s1_24, out a0_14, out a3_17, out s2_27, out s4_29, out s5_30, out s6_31, out s7_32, out s8_33, out s9_34)
	s0Out = s0_23
	s1Out = s1_24
	a0Out = a0_14
	a3Out = a3_17
	s2Out = s2_27
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	s7Out = s7_32
	s8Out = s8_33
	s9Out = s9_34
	mstatusOut = mstatus
	return ra_22
l230840C2:
l230840C2_thunk_mfg_flash_read_poweroffset:
	word32 a0_43
	word32 a3_46
	word32 mstatus_50
	word32 s1_52
	word32 s2_55
	word32 s4_57
	word32 s5_58
	word32 s6_59
	word32 s7_60
	word32 s8_61
	word32 s9_62
	word32 ra_51 = mfg_flash_read_poweroffset(ra, a0, a1, a3, a4, mstatus, dwArg08, dwArg38, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_52, out a0_43, out a3_46, out s2_55, out s4_57, out s5_58, out s6_59, out s7_60, out s8_61, out s9_62, out mstatus_50)
	s0Out = s0
	s1Out = s1_52
	a0Out = a0_43
	a3Out = a3_46
	s2Out = s2_55
	s4Out = s4_57
	s5Out = s5_58
	s6Out = s6_59
	s7Out = s7_60
	s8Out = s8_61
	s9Out = s9_62
	mstatusOut = mstatus_50
	return ra_51
mfg_media_read_poweroffset_exit:


word32 mfg_media_read_macaddr(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg9C, word32 dwArgAC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_efuse_read_mac_factory
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mfg_media_read_macaddr_entry:
l230840C6:
	branch CONVERT(Mem0[0x4200F6FC<32>:byte], byte, word32) == 0<32> l230840D2
l230840D2:
l230840D2_thunk_mfg_efuse_read_macaddr:
	word32 a0_15
	word32 a3_18
	word32 s0_24
	word32 s1_25
	word32 s10_26
	word32 s11_27
	word32 s2_28
	word32 s3_29
	word32 s4_30
	word32 s5_31
	word32 s6_32
	word32 s7_33
	word32 ra_23 = mfg_efuse_read_macaddr(ra, s0, s1, a0, a1, a3, s2, s3, s4, out s0_24, out s1_25, out a0_15, out a3_18, out s2_28, out s3_29, out s4_30, out s5_31, out s6_32, out s7_33, out s10_26, out s11_27)
	s0Out = s0_24
	s1Out = s1_25
	a0Out = a0_15
	a3Out = a3_18
	s2Out = s2_28
	s3Out = s3_29
	s4Out = s4_30
	s5Out = s5_31
	s6Out = s6_32
	s7Out = s7_33
	s10Out = s10_26
	s11Out = s11_27
	mstatusOut = mstatus
	return ra_23
l230840D0:
l230840D0_thunk_mfg_flash_read_macaddr:
	word32 a0_41
	word32 s1_44
	word32 a3_47
	word32 mstatus_51
	word32 s10_53
	word32 s11_54
	word32 s2_55
	word32 s3_56
	word32 s4_57
	word32 s5_58
	word32 s6_59
	word32 s7_60
	word32 ra_52 = mfg_flash_read_macaddr(ra, a0, a1, a3, a4, mstatus, dwArg08, dwArg18, dwArg38, dwArg50, dwArg54, dwArg60, dwArg64, dwArg78, dwArg88, dwArg9C, dwArgAC, out s1_44, out a0_41, out a3_47, out s2_55, out s3_56, out s4_57, out s5_58, out s6_59, out s7_60, out s10_53, out s11_54, out mstatus_51)
	s0Out = s0
	s1Out = s1_44
	a0Out = a0_41
	a3Out = a3_47
	s2Out = s2_55
	s3Out = s3_56
	s4Out = s4_57
	s5Out = s5_58
	s6Out = s6_59
	s7Out = s7_60
	s10Out = s10_53
	s11Out = s11_54
	mstatusOut = mstatus_51
	return ra_52
mfg_media_read_macaddr_exit:


void bflb_platform_usart_dbg_send(word32 a0, word32 a1, word32 dwArg34, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Default_Handler
// MayUse:  a0:[0..31] a1:[0..31] Stack +0034:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bflb_platform_usart_dbg_send_entry:
l230840D4:
l230840DA_thunk_UART_SendData:
	UART_SendData(0<32>, a0, a1, dwArg34, dwArg0128)
	return
bflb_platform_usart_dbg_send_exit:


void bflb_platform_printf(word32 ra, word32 a0, word32 dwArg18, word32 dwArg38, word32 dwArg64, word32 dwArg80, word32 dwArg84, word32 dwArgA8, word32 dwArgCC, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Default_Handler
// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0064:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bflb_platform_printf_entry:
l230840DE:
	branch CONVERT(Mem5[0x4200F6FD<32>:byte], byte, word32) != 0<32> l23084124
l230840FC:
	word32 s0_36
	word32 t0_139
	word32 s1_140
	word32 a0_141
	word32 a1_142
	word32 a2_143
	word32 a3_144
	word32 a4_145
	word32 a5_146
	word32 a7_147
	word32 s2_148
	word32 s3_149
	word32 s4_150
	word32 s5_151
	word32 s6_152
	word32 s7_153
	word32 s8_154
	word32 s9_155
	word32 s10_156
	word32 s11_157
	word32 t4_158
	vsnprintf(ra, 0x4201C64C<32>, 127<i32>, a0, fp + -28<i32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out t0_139, out s0_36, out s1_140, out a0_141, out a1_142, out a2_143, out a3_144, out a4_145, out a5_146, out a7_147, out s2_148, out s3_149, out s4_150, out s5_151, out s6_152, out s7_153, out s8_154, out s9_155, out s10_156, out s11_157, out t4_158)
	word32 a1_159
	word32 a2_160
	word32 a3_161
	word32 a4_162
	word32 a5_163
	bflb_platform_usart_dbg_send(s0_36 + 1612<i32>, strlen(s0_36 + 1612<i32>, out a1_159, out a2_160, out a3_161, out a4_162, out a5_163), dwLoc0C, dwArgE8)
l23084124:
	return
bflb_platform_printf_exit:


void SPI_IRQHandler(word32 ra, word32 t0, word32 a5, word32 t5, word32 dwArg3C, word32 dwArg50, word32 dwArg58)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] ra:[0..31] Stack +003C:[0..31] Stack +0050:[0..31] Stack +0058:[0..31] t0:[0..31] t5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp t1
SPI_IRQHandler_entry:
l2308412C:
	Default_Handler(ra, a5, t0, dwLoc2C, dwLoc10, dwLoc0C, t5, dwArg3C, dwArg58)
	0<32> = Mem57[dwArg50 + 872<i32>:word64]
	0<32> = Mem57[dwArg50 + 472<i32>:word64]
	__mret()
	return
SPI_IRQHandler_exit:


word32 mfg_efuse_read_xtal_capcode(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: a0 a3 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
mfg_efuse_read_xtal_capcode_entry:
l230841C8:
	word32 a3_140
	word32 s4_169
	word32 s1_167
	word32 s0_172
	word32 s2_168
	word32 s3_148
	word32 s0_104
	word32 s0_23
	word32 s1_24
	word32 s2_25
	word32 a1_26
	word32 s4_28
	word32 a0_29
	word32 a3_280
	call 0x4200CDF4<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a3:a3,ra:0x4200D1DA<p32>,s0:s0,s1:a1,s2:s2,s3:s3,s4:a0,Stack +0004:s4,Stack +0008:s2,Stack +000C:s0,Stack +0084:s3,Stack +0088:s1,Stack +008C:ra
		defs: a0:a0_29,a1:a1_26,a3:a3_280,s0:s0_23,s1:s1_24,s2:s2_25,s4:s4_28
	word32 s0_40
	word32 s1_41
	word32 a1_43
	word32 s3_44
	word32 s4_45
	word32 a0_46
	word32 a3_290
	call 0x4200CDFE<p32> (retsize: 0;)
		uses: a0:a0_29,a1:a1_26,a3:a3_280,ra:0x4200D1E4<p32>,s0:s0_23,s1:s1_24,s2:s2_25,s3:a0_29,s4:s4_28
		defs: a0:a0_46,a1:a1_43,a3:a3_290,s0:s0_40,s1:s1_41,s3:s3_44,s4:s4_45
	word32 sp_56
	word32 s1_59
	word32 ra_100
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:1<32>,a1:a1_43,a3:a3_290,ra:0x4200D1F0<p32>,s0:s0_40,s1:s1_41,s2:a0_46,s3:s3_44,s4:s4_45
		defs: ra:ra_57,s1:s1_59,sp:sp_56
	word32 s0_101 = 0x4200ECDC<32>
	branch CONVERT(Mem17[0x4200ECDC<32>:byte], byte, word32) >u 2<32> l23084234
l23084234:
	word32 a0_77
	ra_100 = EF_Ctrl_Is_CapCode_Slot_Empty(ra_100, 0x4200ECDC<32>, 2<32>, s1_59, out s0_101, out a0_77)
	branch a0_77 != 0<32> l2308420A
l2308423E:
	s0_104 = 2<32>
l2308420A:
	branch CONVERT(Mem17[s0_101:byte], byte, word32) <=u 1<32> l2308421E
l23084214:
	word32 a0_95
	ra_100 = EF_Ctrl_Is_CapCode_Slot_Empty(ra_100, s0_101, 1<32>, s1_59, out s0_101, out a0_95)
	branch a0_95 == 0<32> l23084296
l23084296:
	s0_104 = 1<32>
l2308421E:
	branch CONVERT(Mem17[s0_101:byte], byte, word32) != 0<32> l23084242
l23084242:
	word32 a0_112
	word32 s0_372
	ra_100 = EF_Ctrl_Is_CapCode_Slot_Empty(ra_100, s0_101, 0<32>, s1_59, out s0_372, out a0_112)
	s0_104 = a0_112
	branch a0_112 != 0<32> l23084224
l2308424E:
	word32 s1_144
	word32 s2_147
	word32 s4_149
	word32 a0_160
	word32 a0_373
	word32 a1_374
	word32 a2_375
	word32 a4_376
	word32 a5_377
	word32 a7_378
	word32 s5_379
	word32 s6_380
	word32 s7_381
	word32 s8_382
	word32 s9_383
	word32 s10_384
	word32 s11_385
	word32 t4_386
	s1_167 = EF_Ctrl_Read_CapCode_Opt(printf(ra_100, 0x230C61B4<32>, a3, Mem17[sp_56 + 8<i32>:word32], Mem17[sp_56 + 40<i32>:word32], Mem17[sp_56 + 112<i32>:word32], Mem17[sp_56 + 116<i32>:word32], Mem17[sp_56 + 152<i32>:word32], Mem17[sp_56 + 188<i32>:word32], out s1_144, out a0_373, out a1_374, out a2_375, out a3_140, out a4_376, out a5_377, out a7_378, out s2_147, out s3_148, out s4_149, out s5_379, out s6_380, out s7_381, out s8_382, out s9_383, out s10_384, out s11_385, out t4_386), s0_104, s1_144, s0_104, s4_149, s1_144, s2_147, out a0_160, out s2_168, out s4_169)
	s0_172 = a0_160
l23084224:
	word32 s11_370
	word32 t4_371
	word32 s6_365
	word32 s8_367
	word32 s9_368
	word32 s10_369
	word32 s7_366
	word32 a2_360
	word32 a5_362
	word32 a7_363
	word32 s5_364
	word32 a4_361
	word32 a0_358
	word32 a1_359
	printf(ra_100, 0x230C61C4<32>, a3, Mem17[sp_56 + 8<i32>:word32], Mem17[sp_56 + 40<i32>:word32], Mem17[sp_56 + 112<i32>:word32], Mem17[sp_56 + 116<i32>:word32], Mem17[sp_56 + 152<i32>:word32], Mem17[sp_56 + 188<i32>:word32], out s1_167, out a0_358, out a1_359, out a2_360, out a3_140, out a4_361, out a5_362, out a7_363, out s2_168, out s3_148, out s4_169, out s5_364, out s6_365, out s7_366, out s8_367, out s9_368, out s10_369, out s11_370, out t4_371)
	s0_172 = 1<32>
l23084268:
	word32 s0_214
	word32 s1_215
	word32 s2_216
	word32 a1_217
	word32 s3_218
	word32 s4_219
	word32 a3_227
	call 0x4200CDEA<p32> (retsize: 0;)
		uses: a0:s2_204,a1:s3_202,a3:a3_210,ra:0x4200D26C<p32>,s0:s0_207,s1:s1_208,s2:s2_204,s3:s3_202,s4:s4_209
		defs: a1:a1_217,a3:a3_227,s0:s0_214,s1:s1_215,s2:s2_216,s3:s3_218,s4:s4_219
	word32 ra_240
	word32 s0_241
	word32 s1_242
	word32 s2_243
	word32 s3_245
	word32 a3_254
	word32 s10_256
	word32 s11_257
	word32 s5_258
	word32 s6_259
	word32 s7_260
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:2<32>,a1:a1_217,a3:a3_227,ra:0x4200D276<p32>,s0:s0_214,s1:s1_215,s2:s2_216,s3:s3_218,s4:s4_219
		defs: a3:a3_254,ra:ra_240,s0:s0_241,s1:s1_242,s10:s10_256,s11:s11_257,s2:s2_243,s3:s3_245,s5:s5_258,s6:s6_259,s7:s7_260
	s0Out = s1
	s1Out = s1_242
	a0Out = 0<32> - CONVERT(s0_241 != 0<32>, bool, word32)
	a3Out = a3_254
	s2Out = s2_243
	s3Out = s3_245
	s4Out = dwArg04
	s5Out = s5_258
	s6Out = s6_259
	s7Out = s7_260
	s8Out = s4
	s10Out = s10_256
	s11Out = s11_257
	return ra_240
mfg_efuse_read_xtal_capcode_exit:


word32 mfg_efuse_read_poweroffset(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_poweroffset
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 ra s0 s1 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mfg_efuse_read_poweroffset_entry:
l2308429A:
	word32 s4_181
	word32 s3_180
	word32 s0_187
	word32 s1_178
	word32 s2_179
	word32 s0_116
	word32 s0_23
	word32 s1_24
	word32 s3_26
	word32 s4_27
	word32 a0_28
	word32 a1_29
	call 0x4200CDF4<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,ra:0x4200D2AC<p32>,s0:s0,s1:s1,s2:s2,s3:a0,s4:a1,Stack +000C:s4,Stack +0010:s2,Stack +0014:s0,Stack +008C:s3,Stack +0090:s1,Stack +0094:ra
		defs: a0:a0_28,a1:a1_29,s0:s0_23,s1:s1_24,s3:s3_26,s4:s4_27
	word32 s0_44
	word32 s2_46
	word32 s3_47
	word32 s4_48
	word32 a0_49
	word32 a1_50
	call 0x4200CDFE<p32> (retsize: 0;)
		uses: a0:a0_28,a1:a1_29,ra:0x4200D2B6<p32>,s0:s0_23,s1:s1_24,s2:a0_28,s3:s3_26,s4:s4_27
		defs: a0:a0_49,a1:a1_50,s0:s0_44,s2:s2_46,s3:s3_47,s4:s4_48
	word32 sp_64
	word32 s4_70
	word32 a3_80
	word32 ra_106
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:1<32>,a1:a1_50,ra:0x4200D2C2<p32>,s0:s0_44,s1:a0_49,s2:s2_46,s3:s3_47,s4:s4_48
		defs: a3:a3_80,ra:ra_65,s4:s4_70,sp:sp_64
	word32 s0_113 = 0x4200ECDC<32>
	branch CONVERT(Mem15[0x4200ECDC<32>:byte], byte, word32) >u 2<32> l23084308
l23084308:
	word32 a0_89
	ra_106 = EF_Ctrl_Is_PowerOffset_Slot_Empty(ra_106, 0x4200ECDC<32>, 2<32>, s4_70, out s0_113, out a0_89)
	branch a0_89 != 0<32> l230842DC
l23084312:
	s0_116 = 2<32>
l230842DC:
	branch CONVERT(Mem15[s0_113:byte], byte, word32) <=u 1<32> l230842F2
l230842E6:
	word32 a0_107
	ra_106 = EF_Ctrl_Is_PowerOffset_Slot_Empty(ra_106, s0_113, 1<32>, s4_70, out s0_113, out a0_107)
	branch a0_107 == 0<32> l23084472
l23084472:
	s0_116 = 1<32>
l230842F2:
	branch CONVERT(Mem15[s0_113:byte], byte, word32) != 0<32> l23084316
l23084316:
	word32 a0_124
	word32 s0_465
	ra_106 = EF_Ctrl_Is_PowerOffset_Slot_Empty(ra_106, s0_113, 0<32>, s4_70, out s0_465, out a0_124)
	s0_116 = a0_124
	branch a0_124 != 0<32> l230842F8
l23084322:
	word32 s1_155
	word32 s2_158
	word32 s3_159
	word32 s4_160
	word32 a0_171
	word32 a0_466
	word32 a1_467
	word32 a2_468
	word32 a3_469
	word32 a4_470
	word32 a5_471
	word32 a7_472
	word32 s5_473
	word32 s6_474
	word32 s7_475
	word32 s8_476
	word32 s9_477
	word32 s10_478
	word32 s11_479
	word32 t4_480
	word32 t1_481
	word32 a0_482
	word32 a1_483
	word32 a2_484
	word32 a3_485
	word32 a4_486
	word32 a5_487
	memset(EF_Ctrl_Read_PowerOffset_Opt(printf(ra_106, 0x230C61B4<32>, a3_80, Mem15[sp_64 + 8<i32>:word32], Mem15[sp_64 + 40<i32>:word32], Mem15[sp_64 + 112<i32>:word32], Mem15[sp_64 + 116<i32>:word32], Mem15[sp_64 + 152<i32>:word32], Mem15[sp_64 + 188<i32>:word32], out s1_155, out a0_466, out a1_467, out a2_468, out a3_469, out a4_470, out a5_471, out a7_472, out s2_158, out s3_159, out s4_160, out s5_473, out s6_474, out s7_475, out s8_476, out s9_477, out s10_478, out s11_479, out t4_480), s0_116, s1_155, s0_116, sp_64 + 12<i32>, s4_160, s2_158, s3_159, s4_160, Mem15[sp_64 + 296<i32>:word32], out s1_178, out a0_171, out s2_179, out s3_180, out s4_181), s3_180, 0<32>, 0xE<32>, out t1_481, out a0_482, out a1_483, out a2_484, out a3_485, out a4_486, out a5_487)
	word32 a6_198 = CONVERT(Mem15[sp_64 + 13<i32>:int8], int8, int32)
	word32 a3_199 = CONVERT(Mem15[sp_64 + 12<i32>:int8], int8, int32)
	Mem205[s3_180:byte] = SLICE(a3_199, byte, 0)
	word32 a7_207 = CONVERT(Mem205[sp_64 + 14<i32>:int8], int8, int32)
	Mem208[s3_180 + 6<i32>:byte] = SLICE(a6_198, byte, 0)
	Mem209[s3_180 + 12<i32>:byte] = SLICE(a7_207, byte, 0)
	word32 a4_210 = a6_198 - a3_199 + 100<i32> ^ 6<32>
	Mem215[s3_180 + 2<i32>:byte] = SLICE((a4_210 + 25<i32> ^ 50<i32>) + (a3_199 & 255<i32>), byte, 0)
	Mem221[s3_180 + 3<i32>:byte] = SLICE((a4_210 + 0x35<32> ^ 100<i32>) + (a3_199 & 255<i32>), byte, 0)
	Mem227[s3_180 + 4<i32>:byte] = SLICE(((a4_210 << 2<u32>) + 50<i32> ^ 100<i32>) + (a3_199 & 255<i32>), byte, 0)
	Mem230[s3_180 + 1<i32>:byte] = SLICE((a4_210 + 50<i32> ^ 100<i32>) + (a3_199 & 255<i32>), byte, 0)
	Mem240[s3_180 + 5<i32>:byte] = SLICE((a4_210 + 0x37<32> ^ 100<i32>) + (a3_199 & 255<i32>), byte, 0)
	word32 a5_235 = a7_207 - a6_198 + 100<i32> ^ 6<32>
	Mem244[s3_180 + 8<i32>:byte] = SLICE((a5_235 + 25<i32> ^ 50<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem252[s3_180 + 11<i32>:byte] = SLICE((a5_235 + 0x37<32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem255[s3_180 + 9<i32>:byte] = SLICE((a5_235 + 0x35<32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem263[s3_180 + 7<i32>:byte] = SLICE((a5_235 + 50<i32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem266[s3_180 + 10<i32>:byte] = SLICE(((a5_235 << 2<u32>) + 50<i32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	Mem268[s3_180 + 13<i32>:byte] = SLICE((a5_235 + 0x39<32> ^ 100<i32>) + (a6_198 & 255<i32>), byte, 0)
	s0_187 = a0_171
l230842F8:
	word32 t4_464
	word32 s7_459
	word32 s9_461
	word32 s10_462
	word32 s11_463
	word32 s8_460
	word32 a4_454
	word32 a7_456
	word32 s5_457
	word32 s6_458
	word32 a5_455
	word32 a1_451
	word32 a2_452
	word32 a3_453
	word32 a0_450
	printf(ra_106, 0x230C61C4<32>, a3_80, Mem15[sp_64 + 8<i32>:word32], Mem15[sp_64 + 40<i32>:word32], Mem15[sp_64 + 112<i32>:word32], Mem15[sp_64 + 116<i32>:word32], Mem15[sp_64 + 152<i32>:word32], Mem15[sp_64 + 188<i32>:word32], out s1_178, out a0_450, out a1_451, out a2_452, out a3_453, out a4_454, out a5_455, out a7_456, out s2_179, out s3_180, out s4_181, out s5_457, out s6_458, out s7_459, out s8_460, out s9_461, out s10_462, out s11_463, out t4_464)
	s0_187 = 1<32>
l23084444:
	word32 s0_309
	word32 s1_310
	word32 s2_311
	word32 s3_312
	word32 s4_313
	word32 a1_315
	call 0x4200CDEA<p32> (retsize: 0;)
		uses: a0:s1_300,a1:s2_298,ra:0x4200D448<p32>,s0:s0_303,s1:s1_300,s2:s2_298,s3:s3_304,s4:s4_305
		defs: a1:a1_315,s0:s0_309,s1:s1_310,s2:s2_311,s3:s3_312,s4:s4_313
	word32 ra_337
	word32 s0_338
	word32 s1_339
	word32 s2_340
	word32 s4_342
	word32 a3_352
	word32 s5_357
	word32 s6_358
	word32 s7_359
	word32 s9_360
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:2<32>,a1:a1_315,ra:0x4200D452<p32>,s0:s0_309,s1:s1_310,s2:s2_311,s3:s3_312,s4:s4_313
		defs: a3:a3_352,ra:ra_337,s0:s0_338,s1:s1_339,s2:s2_340,s4:s4_342,s5:s5_357,s6:s6_358,s7:s7_359,s9:s9_360
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_339
	a0Out = 0<32> - CONVERT(s0_338 != 0<32>, bool, word32)
	a3Out = a3_352
	s2Out = s2_340
	s4Out = s4_342
	s5Out = s5_357
	s6Out = s6_358
	s7Out = s7_359
	s8Out = dwArg58
	s9Out = s9_360
	return ra_337
mfg_efuse_read_poweroffset_exit:


word32 mfg_efuse_read_macaddr(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 s3, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_macaddr
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: a0 a3 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
mfg_efuse_read_macaddr_entry:
l23084476:
	word32 a3_152
	word32 s4_159
	word32 s1_156
	word32 s0_162
	word32 s2_157
	word32 s3_158
	word32 s0_110
	word32 s0_23
	word32 s1_24
	word32 s2_25
	word32 a1_26
	word32 s4_28
	word32 a0_29
	word32 a3_272
	call 0x4200CDF4<p32> (retsize: 0;)
		uses: a0:a0,a1:a1,a3:a3,ra:0x4200D488<p32>,s0:s0,s1:a1,s2:s2,s3:s3,s4:a0,Stack +0004:s4,Stack +0008:s2,Stack +000C:s0,Stack +0084:s3,Stack +0088:s1,Stack +008C:ra
		defs: a0:a0_29,a1:a1_26,a3:a3_272,s0:s0_23,s1:s1_24,s2:s2_25,s4:s4_28
	word32 s0_40
	word32 s1_41
	word32 a1_43
	word32 s3_44
	word32 s4_45
	word32 a0_46
	word32 a3_282
	call 0x4200CDFE<p32> (retsize: 0;)
		uses: a0:a0_29,a1:a1_26,a3:a3_272,ra:0x4200D492<p32>,s0:s0_23,s1:s1_24,s2:s2_25,s3:a0_29,s4:s4_28
		defs: a0:a0_46,a1:a1_43,a3:a3_282,s0:s0_40,s1:s1_41,s3:s3_44,s4:s4_45
	word32 sp_56
	word32 s1_59
	word32 ra_109
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:1<32>,a1:a1_43,a3:a3_282,ra:0x4200D49E<p32>,s0:s0_40,s1:s1_41,s2:a0_46,s3:s3_44,s4:s4_45
		defs: ra:ra_57,s1:s1_59,sp:sp_56
	branch CONVERT(Mem17[0x4200ECDC<32>:byte], byte, word32) >u 2<32> l230844E2
l230844E2:
	word32 a0_77
	ra_109 = EF_Ctrl_Is_MAC_Address_Slot_Empty(2<32>, s1_59, out a0_77)
	branch a0_77 != 0<32> l230844B8
l230844EC:
	s0_110 = 2<32>
l230844B8:
	branch CONVERT(Mem17[0x4200ECDC<32>:byte], byte, word32) <=u 1<32> l230844CC
l230844C2:
	word32 a0_91
	ra_109 = EF_Ctrl_Is_MAC_Address_Slot_Empty(1<32>, s1_59, out a0_91)
	branch a0_91 == 0<32> l23084544
l23084544:
	s0_110 = 1<32>
l230844CC:
	branch CONVERT(Mem17[0x4200ECDC<32>:byte], byte, word32) != 0<32> l230844F0
l230844F0:
	word32 a0_104
	ra_109 = EF_Ctrl_Is_MAC_Address_Slot_Empty(0<32>, s1_59, out a0_104)
	s0_110 = a0_104
	branch a0_104 != 0<32> l230844D2
l230844FC:
	word32 s1_133
	word32 s2_136
	word32 s3_137
	word32 s4_138
	word32 a1_364
	word32 a2_365
	word32 a3_366
	word32 a0_363
	word32 a4_367
	word32 a5_368
	word32 a7_369
	word32 s5_370
	word32 s6_371
	word32 s7_372
	word32 s8_373
	word32 s9_374
	word32 s10_375
	word32 s11_376
	word32 t4_377
	printf(ra_109, 0x230C61B4<32>, a3, Mem17[sp_56 + 8<i32>:word32], Mem17[sp_56 + 40<i32>:word32], Mem17[sp_56 + 112<i32>:word32], Mem17[sp_56 + 116<i32>:word32], Mem17[sp_56 + 152<i32>:word32], Mem17[sp_56 + 188<i32>:word32], out s1_133, out a0_363, out a1_364, out a2_365, out a3_366, out a4_367, out a5_368, out a7_369, out s2_136, out s3_137, out s4_138, out s5_370, out s6_371, out s7_372, out s8_373, out s9_374, out s10_375, out s11_376, out t4_377)
	word32 a0_149
	s1_156 = EF_Ctrl_Read_MAC_Address_Opt(s0_110, s4_138, s1_133, s2_136, s3_137, s4_138, out a0_149, out a3_152, out s2_157, out s3_158, out s4_159)
	s0_162 = a0_149
l230844D2:
	word32 t4_362
	word32 s7_357
	word32 s9_359
	word32 s10_360
	word32 s11_361
	word32 s8_358
	word32 a4_352
	word32 a7_354
	word32 s5_355
	word32 s6_356
	word32 a5_353
	word32 a0_349
	word32 a1_350
	word32 a2_351
	printf(ra_109, 0x230C61C4<32>, a3, Mem17[sp_56 + 8<i32>:word32], Mem17[sp_56 + 40<i32>:word32], Mem17[sp_56 + 112<i32>:word32], Mem17[sp_56 + 116<i32>:word32], Mem17[sp_56 + 152<i32>:word32], Mem17[sp_56 + 188<i32>:word32], out s1_156, out a0_349, out a1_350, out a2_351, out a3_152, out a4_352, out a5_353, out a7_354, out s2_157, out s3_158, out s4_159, out s5_355, out s6_356, out s7_357, out s8_358, out s9_359, out s10_360, out s11_361, out t4_362)
	s0_162 = 1<32>
l23084516:
	word32 s0_206
	word32 s1_207
	word32 s2_208
	word32 a1_209
	word32 s3_210
	word32 s4_211
	word32 a3_219
	call 0x4200CDEA<p32> (retsize: 0;)
		uses: a0:s2_196,a1:s3_194,a3:a3_202,ra:0x4200D51A<p32>,s0:s0_199,s1:s1_200,s2:s2_196,s3:s3_194,s4:s4_201
		defs: a1:a1_209,a3:a3_219,s0:s0_206,s1:s1_207,s2:s2_208,s3:s3_210,s4:s4_211
	word32 ra_232
	word32 s0_233
	word32 s1_234
	word32 s2_235
	word32 s3_237
	word32 a3_246
	word32 s10_248
	word32 s11_249
	word32 s5_250
	word32 s6_251
	word32 s7_252
	call 0x4200CE44<p32> (retsize: 0;)
		uses: a0:2<32>,a1:a1_209,a3:a3_219,ra:0x4200D524<p32>,s0:s0_206,s1:s1_207,s2:s2_208,s3:s3_210,s4:s4_211
		defs: a3:a3_246,ra:ra_232,s0:s0_233,s1:s1_234,s10:s10_248,s11:s11_249,s2:s2_235,s3:s3_237,s5:s5_250,s6:s6_251,s7:s7_252
	s0Out = s1
	s1Out = s1_234
	a0Out = 0<32> - CONVERT(s0_233 != 0<32>, bool, word32)
	a3Out = a3_246
	s2Out = s2_235
	s3Out = s3_237
	s4Out = dwArg04
	s5Out = s5_250
	s6Out = s6_251
	s7Out = s7_252
	s10Out = s10_248
	s11Out = s11_249
	return ra_232
mfg_efuse_read_macaddr_exit:


word32 mfg_flash_read(word32 ra, word32 a3, word32 mstatus, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
//      mfg_media_read_poweroffset
//      mfg_media_read_macaddr
// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
mfg_flash_read_entry:
l23084548:
	word32 s1_131
	word32 a0_132
	word32 a1_133
	word32 a2_134
	word32 a3_135
	word32 a4_136
	word32 a5_137
	word32 a7_138
	word32 s2_139
	word32 s3_140
	word32 s4_141
	word32 s5_142
	word32 s6_143
	word32 s7_144
	word32 s8_145
	word32 s9_146
	word32 s10_147
	word32 s11_148
	word32 t4_149
	printf(ra, 0x230C61DC<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_131, out a0_132, out a1_133, out a2_134, out a3_135, out a4_136, out a5_137, out a7_138, out s2_139, out s3_140, out s4_141, out s5_142, out s6_143, out s7_144, out s8_145, out s9_146, out s10_147, out s11_148, out t4_149)
	__csrrc(mstatus, 8<32>)
	word32 a0_41
	word32 mstatus_43
	word32 a3_104
	word32 a4_105
	word32 ra_108
	word32 s1_109
	call 0x4200C97A<p32> (retsize: 0;)
		uses: a0:Mem7[0x4200F700<32>:int32],a1:Mem7[0x4200F704<32>:int32],a2:0x4201C6CC<32>,a3:0x18<32>,a5:0x4200F000<32>,mstatus:mstatus,ra:0x4200C576<p32>,Stack +0008:dwLoc08,Stack +0028:dwArg18,Stack +0070:dwArg60,Stack +0074:dwArg64,Stack +0098:dwArg88,Stack +00BC:dwArgAC
		defs: a0:a0_41,a3:a3_47,a4:a4_49,mstatus:mstatus_43,ra:ra_42,s1:s1_51
	__csrrs(mstatus_43, 8<32>)
	word32 a5_64 = 0<32>
	branch a0_41 == 0<32> l23084594
l23084586:
	word32 a0_150
	word32 a1_151
	word32 a2_152
	word32 a5_153
	word32 a7_154
	word32 s2_155
	word32 s3_156
	word32 s4_157
	word32 s5_158
	word32 s6_159
	word32 s7_160
	word32 s8_161
	word32 s9_162
	word32 s10_163
	word32 s11_164
	word32 t4_165
	ra_108 = printf(ra_108, 0x230C61F0<32>, a3_104, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_109, out a0_150, out a1_151, out a2_152, out a3_104, out a4_105, out a5_153, out a7_154, out s2_155, out s3_156, out s4_157, out s5_158, out s6_159, out s7_160, out s8_161, out s9_162, out s10_163, out s11_164, out t4_165)
	a5_64 = 0xFFFFFFFF<32>
l23084594:
	s1Out = s1_109
	a0Out = a5_64
	a3Out = a3_104
	a4Out = a4_105
	mstatusOut = mstatus_43
	return ra_108
mfg_flash_read_exit:


word32 mfg_flash_read_xtal_capcode(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_xtal_capcode
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
mfg_flash_read_xtal_capcode_entry:
l2308459C:
	word32 a0_108
	word32 s1_127 = a0
	branch a1 != 0<32> l230845CA
l230845CA:
	word32 a0_17
	ra = mfg_flash_read(ra, a3, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_127, out a0_17, out a3, out a4, out mstatus)
	branch a0_17 == 0<32> l230845AA
l230845D0:
l230845AA:
	word32 s0_44 = Mem11[a4:word32]
	branch a4 == 65<i32> l230845D2
l230845D2:
	word32 s0_57
	word32 a0_59
	word32 a7_67
	word32 s9_76
	word32 t0_77
	word32 t3_78
	word32 t4_79
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s0_44 + 4<i32>,a1:0x10<32>,a3:a3_51,a4:a4_41,a7:a7_67,mstatus:mstatus_52,ra:0x4200C5DC<p32>,s0:s0_44,s1:s1_50,s10:s10_68,s11:s11_69,s2:Mem11[s0_44 + 20<i32>:int32],s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_73,s7:s7_74,s8:s8_75,s9:s9_76,Stack +0018:dwArg08,Stack +0060:dwArg50,Stack +0064:dwArg54,Stack +0088:dwArg78,Stack +00AC:dwArg9C,t0:t0_77,t3:t3_78,t4:t4_79
		defs: a0:a0_59,a3:a3_65,a7:a7_67,mstatus:mstatus_66,ra:ra_56,s0:s0_57,s1:s1_55,s10:s10_68,s11:s11_69,s2:s2_58,s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_73,s7:s7_74,s8:s8_75,s9:s9_76,t0:t0_77,t3:t3_78,t4:t4_79
	branch s2 != a0_59 l230845BC
l230845E8:
	branch CONVERT(Mem11[s0_57 + 4<i32>:byte], byte, word32) != 90<i32> l230845BC
l230845F4:
	Mem84[s1_127:byte] = SLICE(CONVERT(Mem11[s0_57 + 5<i32>:byte], byte, word32), byte, 0)
	a0_108 = 0<32>
l230845BC:
	a0_108 = 0xFFFFFFFF<32>
l230845BE:
	0<32> = dwArg38
	s1Out = s1_127
	a0Out = a0_108
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mfg_flash_read_xtal_capcode_exit:


word32 mfg_flash_read_poweroffset(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_poweroffset
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
mfg_flash_read_poweroffset_entry:
l23084600:
	word32 s1_214
	word32 a0_165
	branch a1 != 0<32> l2308462E
l2308462E:
	word32 a0_17
	ra = mfg_flash_read(ra, a3, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_214, out a0_17, out a3, out a4, out mstatus)
	branch a0_17 == 0<32> l2308460E
l23084634:
l2308460E:
	s1_214 = Mem11[a4:word32]
	branch a4 == 65<i32> l23084636
l23084636:
	word32 s0_55
	word32 a0_59
	word32 a7_65
	word32 t3_67
	word32 t1_68
	word32 a6_69
	word32 s10_71
	word32 s11_72
	word32 s3_73
	word32 t0_80
	word32 t4_81
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s1_44 + 4<i32>,a1:0x10<32>,a3:a3_51,a4:a4_41,a6:a6_69,a7:a7_65,mstatus:mstatus_52,ra:0x4200C640<p32>,s0:a0,s1:s1_44,s10:s10_71,s11:s11_72,s2:Mem11[s1_44 + 20<i32>:int32],s3:s3_73,s4:s4_74,s5:s5_75,s6:s6_76,s7:s7_77,s8:s8_78,s9:s9_79,Stack +0018:dwArg08,Stack +0060:dwArg50,Stack +0064:dwArg54,Stack +0088:dwArg78,Stack +00AC:dwArg9C,t0:t0_80,t1:t1_68,t3:t3_67,t4:t4_81
		defs: a0:a0_59,a3:a3_66,a6:a6_69,a7:a7_65,mstatus:mstatus_70,ra:ra_56,s0:s0_55,s1:s1_57,s10:s10_71,s11:s11_72,s2:s2_58,s3:s3_73,s4:s4_74,s5:s5_75,s6:s6_76,s7:s7_77,s8:s8_78,s9:s9_79,t0:t0_80,t1:t1_68,t3:t3_67,t4:t4_81
	branch s2 != a0_59 l23084620
l2308464C:
	branch CONVERT(Mem11[s1_214 + 6<i32>:byte], byte, word32) != 90<i32> l23084620
l23084658:
	word32 t1_297
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a3_301
	word32 a4_302
	word32 a5_303
	ra = memset(ra, s0_55, 0<32>, 0xE<32>, out t1_297, out a0_298, out a1_299, out a2_300, out a3_301, out a4_302, out a5_303)
	word32 a7_96 = CONVERT(Mem11[s1_214 + 8<i32>:int8], int8, int32)
	word32 a3_97 = CONVERT(Mem11[s1_214 + 7<i32>:int8], int8, int32)
	word32 a6_103 = CONVERT(Mem11[s1_214 + 9<i32>:int8], int8, int32)
	Mem104[s0_55:byte] = SLICE(a3_97, byte, 0)
	Mem107[s0_55 + 6<i32>:byte] = SLICE(a7_96, byte, 0)
	Mem108[s0_55 + 12<i32>:byte] = SLICE(a6_103, byte, 0)
	word32 a4_109 = a7_96 - a3_97 + 100<i32> ^ 6<32>
	Mem114[s0_55 + 2<i32>:byte] = SLICE((a4_109 + 25<i32> ^ 50<i32>) + (a3_97 & 255<i32>), byte, 0)
	Mem119[s0_55 + 3<i32>:byte] = SLICE((a4_109 + 0x35<32> ^ 100<i32>) + (a3_97 & 255<i32>), byte, 0)
	Mem125[s0_55 + 4<i32>:byte] = SLICE(((a4_109 << 2<u32>) + 50<i32> ^ 100<i32>) + (a3_97 & 255<i32>), byte, 0)
	Mem129[s0_55 + 1<i32>:byte] = SLICE((a4_109 + 50<i32> ^ 100<i32>) + (a3_97 & 255<i32>), byte, 0)
	Mem136[s0_55 + 5<i32>:byte] = SLICE((a3_97 & 255<i32>) + (a4_109 + 0x37<32> ^ 100<i32>), byte, 0)
	word32 a5_134 = a6_103 - a7_96 + 100<i32> ^ 6<32>
	Mem142[s0_55 + 8<i32>:byte] = SLICE((a5_134 + 25<i32> ^ 50<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem147[s0_55 + 10<i32>:byte] = SLICE(((a5_134 << 2<u32>) + 50<i32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem158[s0_55 + 7<i32>:byte] = SLICE((a5_134 + 50<i32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem161[s0_55 + 9<i32>:byte] = SLICE((a5_134 + 0x35<32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem164[s0_55 + 11<i32>:byte] = SLICE((a5_134 + 0x37<32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	Mem167[s0_55 + 13<i32>:byte] = SLICE((a5_134 + 0x39<32> ^ 100<i32>) + (a7_96 & 255<i32>), byte, 0)
	a3 = 7<32>
	a0_165 = 0<32>
l23084620:
	a0_165 = 0xFFFFFFFF<32>
l23084622:
	0<32> = dwArg38
	s1Out = s1_214
	a0Out = a0_165
	a3Out = a3
	s2Out = s2
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9
	mstatusOut = mstatus
	return ra
mfg_flash_read_poweroffset_exit:


word32 mfg_flash_read_macaddr(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg9C, word32 dwArgAC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mfg_media_read_macaddr
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mfg_flash_read_macaddr_entry:
l23084764:
	word32 a0_123
	word32 s1_110 = a0
	branch a1 == 0<32> l23084792
l23084772:
	word32 a0_17
	ra = mfg_flash_read(ra, a3, mstatus, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_110, out a0_17, out a3, out a4, out mstatus)
	branch a0_17 == 0<32> l23084792
l23084792:
	word32 s0_44 = Mem11[a4:word32]
	branch a4 != 65<i32> l23084784
l230847A4:
	word32 s0_57
	word32 a0_59
	word32 a7_67
	word32 s8_75
	word32 s9_76
	word32 t0_77
	word32 t3_78
	word32 t4_79
	word32 a6_146
	word32 t1_147
	word32 t5_148
	word32 t6_149
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s0_44 + 4<i32>,a1:0x10<32>,a3:a3_51,a4:a4_41,a6:a6_146,a7:a7_67,mstatus:mstatus_52,ra:0x4200C7AE<p32>,s0:s0_44,s1:s1_50,s10:s10_68,s11:s11_69,s2:Mem11[s0_44 + 20<i32>:int32],s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_73,s7:s7_74,s8:s8_75,s9:s9_76,Stack +0008:dwLoc08,Stack +0018:dwArg08,Stack +0028:dwArg18,Stack +0060:dwArg50,Stack +0064:dwArg54,Stack +0070:dwArg60,Stack +0074:dwArg64,Stack +0088:dwArg78,Stack +0098:dwArg88,Stack +00AC:dwArg9C,Stack +00BC:dwArgAC,t0:t0_77,t1:t1_147,t3:t3_78,t4:t4_79,t5:t5_148,t6:t6_149
		defs: a0:a0_59,a3:a3_65,a6:a6_146,a7:a7_67,mstatus:mstatus_66,ra:ra_56,s0:s0_57,s1:s1_55,s10:s10_68,s11:s11_69,s2:s2_58,s3:s3_70,s4:s4_71,s5:s5_72,s6:s6_73,s7:s7_74,s8:s8_75,s9:s9_76,t0:t0_77,t1:t1_147,t3:t3_78,t4:t4_79,t5:t5_148,t6:t6_149
	branch s2 != a0_59 l23084784
l230847BA:
	branch CONVERT(Mem11[s0_57 + 10<i32>:byte], byte, word32) != 90<i32> l23084784
l230847C6:
	word32 a1_286
	word32 a2_287
	word32 a4_288
	word32 a5_289
	word32 a6_290
	word32 a7_291
	memcpy(s1_110, s0_57 + 11<i32>, 6<32>, out a1_286, out a2_287, out a3, out a4_288, out a5_289, out a6_290, out a7_291)
	a0_123 = 0<32>
l23084778:
	word32 a2_279
	word32 a4_280
	word32 a5_281
	word32 a7_282
	word32 a1_278
	word32 a0_277
	word32 s8_283
	word32 s9_284
	word32 t4_285
	ra = printf(ra, 0x230C6204<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_110, out a0_277, out a1_278, out a2_279, out a3, out a4_280, out a5_281, out a7_282, out s2, out s3, out s4, out s5, out s6, out s7, out s8_283, out s9_284, out s10, out s11, out t4_285)
l23084784:
	a0_123 = 0xFFFFFFFF<32>
l23084786:
	0<32> = dwArg38
	s1Out = s1_110
	a0Out = a0_123
	a3Out = a3
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mfg_flash_read_macaddr_exit:


void bt_hcionchip_recv(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5
// Preserved: sp
bt_hcionchip_recv_entry:
l230847D6:
	branch CONVERT(SLICE(a0 + 0xFF0007FF<32>, word16, 0), word16, word32) >u 5<32> l2308482A
l2308482A:
	return
l230847E8:
	call 0x230C621C<32> (retsize: 0;)
		uses: a0:Mem0[0x230C621C<32>:word32],a1:a1,a2:a1,a5:0x230C621C<32>
	return
bt_hcionchip_recv_exit:


word32 bt_onchiphci_interface_init(word32 ra, word32 s0, word32 s1, word32 a0, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_onchiphci_interface_init
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s1:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s4 s8 t3
// Preserved: sp
bt_onchiphci_interface_init_entry:
l2308482E:
	Mem6[0x4200F708<32>:word32] = a0
l23084840_thunk_ble_ke_task_create:
	word32 a0_12
	word32 a3_15
	word32 a4_16
	word32 mstatus_18
	word32 s1_21
	word32 s0_30
	word32 ra_19 = ble_ke_task_create(ra, s0, s1, 4<32>, 0x230C6234<32>, out s0_30, out s1_21, out a0_12, out a3_15, out a4_16, out mstatus_18)
	s1Out = s1_21
	a0Out = a0_12
	a3Out = a3_15
	a4Out = a4_16
	mstatusOut = mstatus_18
	return ra_19
bt_onchiphci_interface_init_exit:


word32 bt_onchiphci_send(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s3, word32 dwArgDC, word32 dwArgF8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_onchiphci_send_2_controller
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +00DC:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a1 a4 mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bt_onchiphci_send_entry:
l23084844:
	word32 sp_113 = fp + -48<i32>
	word32 s0_15 = a2
	branch a0 == 0<32> l2308486C
l2308486C:
	word32 a5_445
	word32 a0_24 = hci_look_for_cmd_desc(CONVERT(Mem13[a2:uint16], uint16, word32), out a4, out a5_445)
	word32 s3_19 = a1
	s1 = CONVERT(Mem13[a2 + 8<i32>:byte], byte, word32)
	word32 s2_27 = a0_24
	branch s1 != 0<32> l230848DE
l230848DE:
	word32 a0_28 = Mem26[a4 + 4<i32>:word32]
	branch a4 == 0<32> l23084882
l230848E2:
	word32 a0_41
	word32 a5_29 = CONVERT(Mem26[a0_28 + 2<i32>:byte], byte, word32)
	word32 a3_31 = CONVERT(SLICE(s1, word16, 0), word16, word32)
	branch (a5_29 & 64<i32>) != 0<32> l23084906
l23084906:
	word32 a0_40
	call a4 (retsize: 0;)
		uses: a0:0<32>
		defs: a0:a0_40,a4:a4_38
	s0_15 = Mem26[a1 + 4<i32>:word32]
	a0_41 = a0_40 & 255<i32>
l230848F6:
	a1 = 0<32>
	ra = hci_util_unpack(ra, 0<32>, 0<32>, fp + -42<i32>, a3_31, a5_29 & 64<i32>, dwArgDC, out s0_15, out s1, out a0_41, out s2_27, out s3_19)
l230848FE:
	branch a0_41 != 1<32> l23084882
l23084904:
l23084882:
	word32 a0_85
	word32 s2_97
	word32 s3_459
	word32 s4_460
	word32 s8_461
	word32 a3_456
	word32 a6_457
	word32 a7_458
	word32 s0_454
	word32 a2_455
	ra = ble_ke_msg_alloc(ra, s0_15, s1, 0xFFF805<32>, s3_19, CONVERT(Mem26[s0_15:uint16], uint16, word32), 0<32>, s2_27, s3_19, dwArgF8, out s0_454, out s1, out a0_85, out a1, out a2_455, out a3_456, out a4, out a6_457, out a7_458, out s2_97, out s3_459, out s4_460, out s8_461, out mstatus)
	word32 s3_104 = a0_85
	branch a0_85 == 0<32> l2308485C
l2308489A:
	branch true l230848C0
l230848A0:
	a4 = Mem26[s2_97 + 4<i32>:int32]
	branch a4 == 0<32> l230848C0
l230848A6:
	word32 a5_107 = CONVERT(Mem26[s2_97 + 2<i32>:byte], byte, word32)
	word32 a3_109 = CONVERT(SLICE(s1, word16, 0), word16, word32)
	word32 s0_111 = Mem26[a1 + 4<i32>:word32]
	branch (a5_107 & 64<i32>) != 0<32> l23084912
l23084912:
	word32 a3_125
	word32 a6_128
	word32 s11_129
	word32 s4_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s8_134
	word32 s9_135
	word32 t0_136
	word32 a7_137
	word32 t1_138
	word32 t4_301
	word32 t5_302
	word32 t6_303
	call a4 (retsize: 0;)
		uses: a0:a0_85,a1:a1_86,a2:fp + -42<i32>,a3:a3_125,a4:a4_126,a6:a6_128,a7:a7_137,mstatus:mstatus_127,ra:ra_94,s0:s0_111,s1:s1_96,s11:s11_129,s2:s2_97,s3:a0_85,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_133,s8:s8_134,s9:s9_135,Stack +010C:dwArgDC,Stack +0128:dwArgF8,t0:t0_136,t1:t1_138,t4:t4_301,t5:t5_302,t6:t6_303
		defs: a3:a3_125,a4:a4_126,a6:a6_128,a7:a7_137,mstatus:mstatus_127,ra:ra_115,s11:s11_129,s3:s3_118,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_133,s8:s8_134,s9:s9_135,sp:sp_113,t0:t0_136,t1:t1_138,t4:t4_301,t5:t5_302,t6:t6_303
l230848BC:
	word32 a0_464
	word32 s1_463
	word32 s0_462
	word32 s2_465
	ra = hci_util_unpack(ra, a0_85, a1, fp + -42<i32>, a3_109, a5_107 & 64<i32>, dwArgDC, out s0_462, out s1_463, out a0_464, out s2_465, out s3_104)
l230848C0:
	Mem161[sp_113 + 8<i32>:byte] = 1<8>
	Mem163[sp_113 + 132<i32>:word32] = s3_104
l23084854:
	branch a0 == 1<32> l23084916
l23084916:
	word32 a0_170
	word32 s0_180
	word32 s2_182
	word32 s8_453
	word32 a2_447
	word32 a7_450
	word32 s3_451
	word32 s4_452
	word32 a3_448
	word32 a6_449
	word32 s1_446
	ra = ble_ke_msg_alloc(ra, a2, s1, 0xFFF807<32>, a1, 0<32>, 0xC<32>, a0, s3, dwArgF8, out s0_180, out s1_446, out a0_170, out a1, out a2_447, out a3_448, out a4, out a6_449, out a7_450, out s2_182, out s3_451, out s4_452, out s8_453, out mstatus)
	s1 = a0_170
	branch a0_170 == 0<32> l2308485C
l23084928:
	word32 s3_190 = __csrrs(mstatus, 0<32>)
	__csrrc(mstatus, 8<32>)
	word32 a0_194
	word32 s0_199
	word32 s8_467
	word32 a5_466
	ra = ble_co_list_pop_front(ra, s0_180, 0x420262D0<32>, out s0_199, out a0_194, out a1, out a5_466, out s8_467)
	__csrrw(mstatus, 0<32>)
	Mem202[a0_194 + 8<i32>:word32] = a0_170
	branch a0_194 == 0<32> l2308485C
l23084946:
	Mem205[a0_170:word16] = SLICE(CONVERT(Mem202[s0_199:uint16], uint16, word32), word16, 0)
	Mem207[a0_170 + 2<i32>:byte] = SLICE(CONVERT(Mem205[s0_199 + 2<i32>:byte], byte, word32), byte, 0)
	word32 a2_208 = CONVERT(Mem207[s0_199 + 4<i32>:uint16], uint16, word32)
	word32 a5_210 = Mem207[0x4200F3D0<32>:int32]
	Mem211[a0_170 + 4<i32>:word16] = SLICE(a2_208, word16, 0)
	word32 s1_218
	word32 s2_219
	word32 a3_227
	word32 a6_230
	word32 s11_231
	word32 s4_232
	word32 s5_233
	word32 s6_234
	word32 s7_235
	word32 s8_236
	word32 s9_237
	word32 t0_238
	word32 a7_239
	word32 t1_240
	word32 t4_304
	word32 t5_305
	word32 t6_306
	call a5_210 (retsize: 0;)
		uses: a0:CONVERT(Mem211[a0_194 + 6<i32>:uint16], uint16, word32) + 0x28008000<32>,a1:a1_195,a2:a2_208,a3:a3_227,a4:0x28008000<32>,a5:a5_210,a6:a6_230,a7:a7_239,mstatus:mstatus_229,ra:ra_198,s0:Mem211[a1_195 + 8<i32>:word32],s1:a0_170,s11:s11_231,s2:s2_182,s3:s3_190,s4:s4_232,s5:s5_233,s6:s6_234,s7:s7_235,s8:s8_236,s9:s9_237,Stack +010C:dwArgDC,Stack +0128:dwArgF8,t0:t0_238,t1:t1_240,t4:t4_304,t5:t5_305,t6:t6_306
		defs: a3:a3_227,a4:a4_228,a6:a6_230,a7:a7_239,mstatus:mstatus_229,ra:ra_217,s1:s1_218,s11:s11_231,s2:s2_219,s4:s4_232,s5:s5_233,s6:s6_234,s7:s7_235,s8:s8_236,s9:s9_237,sp:sp_215,t0:t0_238,t1:t1_240,t4:t4_304,t5:t5_305,t6:t6_306
	Mem241[sp_113 + 8<i32>:byte] = SLICE(s2_219, byte, 0)
	Mem242[sp_113 + 132<i32>:word32] = s1_218
l230848C8:
	word32 a0_468
	s1 = rw_main_task_post(sp_113 + 8<i32>, a4, mstatus, Mem250[sp_113 + 20<i32>:word32], Mem250[sp_113 + 148<i32>:word32], Mem250[sp_113 + 264<i32>:word32], Mem250[sp_113 + 328<i32>:word32], Mem250[sp_113 + 392<i32>:word32], out a0_468, out a1, out a4)
l2308485C:
l2308485E:
	0<32> = dwArg0128
	s1Out = s1
	a1Out = a1
	a4Out = a4
	mstatusOut = mstatus
	return ra
bt_onchiphci_send_exit:


void bt_onchiphci_hanlde_rx_acl(word32 ra, word32 a0, word32 a1, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 ra s1 s2 tp
// Preserved: s0 sp
bt_onchiphci_hanlde_rx_acl_entry:
l2308497C:
	word32 a0_17 = hci_build_acl_rx_data(a0 + 0xFFFFFFF4<32>)
	word32 a5_23 = Mem14[0x4200F3D0<32>:int32]
	word32 s0_25 = CONVERT(Mem14[a0_17 + 2<i32>:byte], byte, word32) + 4<32> & 255<i32>
	word32 s1_30
	call a5_23 (retsize: 0;)
		uses: a0:a1,a1:a0_17,a2:s0_25,a5:a5_23,ra:ra,s0:s0_25,s1:a0,s2:a1
		defs: s1:s1_30
	em_buf_rx_free(CONVERT(Mem14[s1_30 + 6<i32>:byte], byte, word32))
	0<32> = dwArg38
	return
bt_onchiphci_hanlde_rx_acl_exit:


word32 bl_mtd_open(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArgB4, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      ef_port_init
//      romfs_register
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 ra s0 s2 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 tp
// Preserved: sp
bl_mtd_open_entry:
l230849C0:
	word32 a0_42
	word32 a0_27
	word32 s8_720
	word32 s4_719
	word32 s3_718
	word32 a6_717
	word32 a5_716
	word32 a4_715
	word32 a2_714
	word32 a1_713
	word32 s1_102
	word32 s2_36
	word32 a3_30
	pvPortMalloc(ra, a0, 32<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_102, out a0_27, out a1_713, out a2_714, out a3_30, out a4_715, out a5_716, out a6_717, out s2_36, out s3_718, out s4_719, out s8_720)
	branch a0_27 == 0<32> l23084B56
l23084B56:
	a0_42 = 0xFFFFFFFF<32>
l230849E2:
	word32 a3_108
	word32 a5_110
	word32 a5_727
	word32 a3_725
	word32 a4_726
	word32 a1_723
	word32 a2_724
	word32 a0_722
	word32 t1_721
	word32 ra_52 = memset(ra, a0_27, 0<32>, 32<i32>, out t1_721, out a0_722, out a1_723, out a2_724, out a3_725, out a4_726, out a5_727)
	word32 a2_728
	word32 a4_730
	word32 a3_729
	word32 a5_731
	strncpy(a0_27, s1_102, 0x10<32>, out a2_728, out a3_729, out a4_730, out a5_731)
	branch (s2_36 & 1<i32>) == 0<32> l23084A6E
l23084A6E:
	branch (s2_36 & 2<i32>) == 0<32> l23084AD2
l23084AD2:
	Mem69[a0_27 + 28<i32>:word32] = 0<32>
l23084A70:
	word32 a0_73
	word32 a3_76
	word32 a5_78
	word32 s2_905
	word32 s3_906
	word32 s6_907
	hal_boot2_partition_bus_addr_active(s1_102, dwArgC8, out s1_102, out a0_73, out a3_76, out a5_78, out s2_905, out s3_906, out s6_907)
	branch a0_73 != 0<32> l23084A82
l23084A7E:
	branch a5_78 != 0<32> l23084AA0
l23084AA0:
	Mem98[a5_78 + 28<i32>:word32] = dwArgB4
l23084AA2:
	word32 a0_105
	word32 s1_945
	word32 s2_946
	hal_boot2_partition_addr_active(s1_102, dwArgC8, out s1_945, out a0_105, out a3_108, out a5_110, out s2_946)
	branch a0_105 != 0<32> l23084AB4
l23084AB0:
	branch a5_110 != 0<32> l23084AD8
l23084AB4:
	word32 a3_143
	word32 s1_947
	word32 a0_948
	word32 a1_949
	word32 a2_950
	word32 a4_951
	word32 a5_952
	word32 a7_953
	word32 s2_954
	word32 s3_955
	word32 s4_956
	word32 s5_957
	word32 s6_958
	word32 s7_959
	word32 s8_960
	word32 s9_961
	word32 s10_962
	word32 s11_963
	word32 t4_964
	word32 s1_965
	word32 a0_966
	word32 a1_967
	word32 a2_968
	word32 a3_969
	word32 a4_970
	word32 a5_971
	word32 a7_972
	word32 s2_973
	word32 s3_974
	word32 s4_975
	word32 s5_976
	word32 s6_977
	word32 s7_978
	word32 s8_979
	word32 s9_980
	word32 s10_981
	word32 s11_982
	word32 t4_983
	printf(printf(ra_52, 0x230C626C<32>, a3_108, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_947, out a0_948, out a1_949, out a2_950, out a3_143, out a4_951, out a5_952, out a7_953, out s2_954, out s3_955, out s4_956, out s5_957, out s6_958, out s7_959, out s8_960, out s9_961, out s10_962, out s11_963, out t4_964), 0x230C62A0<32>, a3_143, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_965, out a0_966, out a1_967, out a2_968, out a3_969, out a4_970, out a5_971, out a7_972, out s2_973, out s3_974, out s4_975, out s5_976, out s6_977, out s7_978, out s8_979, out s9_980, out s10_981, out s11_982, out t4_983)
l23084AD0:
l23084A82:
	word32 a3_198
	word32 s1_908
	word32 a0_909
	word32 a1_910
	word32 a2_911
	word32 a4_912
	word32 a5_913
	word32 a7_914
	word32 s2_915
	word32 s3_916
	word32 s4_917
	word32 s5_918
	word32 s6_919
	word32 s7_920
	word32 s8_921
	word32 s9_922
	word32 s10_923
	word32 s11_924
	word32 t4_925
	word32 s1_926
	word32 a0_927
	word32 a1_928
	word32 a2_929
	word32 a3_930
	word32 a4_931
	word32 a5_932
	word32 a7_933
	word32 s2_934
	word32 s3_935
	word32 s4_936
	word32 s5_937
	word32 s6_938
	word32 s7_939
	word32 s8_940
	word32 s9_941
	word32 s10_942
	word32 s11_943
	word32 t4_944
	printf(printf(ra_52, 0x230C626C<32>, a3_76, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_908, out a0_909, out a1_910, out a2_911, out a3_198, out a4_912, out a5_913, out a7_914, out s2_915, out s3_916, out s4_917, out s5_918, out s6_919, out s7_920, out s8_921, out s9_922, out s10_923, out s11_924, out t4_925), 0x230C62A0<32>, a3_198, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_926, out a0_927, out a1_928, out a2_929, out a3_930, out a4_931, out a5_932, out a7_933, out s2_934, out s3_935, out s4_936, out s5_937, out s6_938, out s7_939, out s8_940, out s9_941, out s10_942, out s11_943, out t4_944)
l23084A9E:
l23084A04:
	branch (s2_36 & 2<i32>) == 0<32> l23084A68
l23084A68:
	Mem240[a0_27 + 28<i32>:word32] = 0<32>
l23084A06:
	word32 a0_244
	word32 a3_247
	word32 a5_249
	s1_102 = hal_boot2_partition_bus_addr_inactive(s1_102, dwArgC8, out a0_244, out a3_247, out a5_249)
	branch a0_244 != 0<32> l23084A18
l23084A14:
	branch a5_249 != 0<32> l23084A36
l23084A36:
	Mem269[a5_249 + 28<i32>:word32] = dwArgB4
l23084A38:
	branch hal_boot2_partition_addr_inactive(s1_102, dwArgC8, out a3_108, out a5_110) != 0<32> l23084A4A
l23084A46:
	branch a5_110 != 0<32> l23084AD8
l23084AD8:
	Mem302[a5_110 + 20<i32>:word32] = dwArgB4
	Mem307[a5_110 + 24<i32>:word32] = dwArgB4
	word32 a0_806
	word32 a1_807
	word32 a2_808
	word32 a4_809
	word32 a5_810
	word32 s4_811
	word32 s8_812
	puts(0x230C62E4<32>, out a0_806, out a1_807, out a2_808, out a4_809, out a5_810, out s4_811, out s8_812)
	word32 a3_329
	word32 a3_354
	word32 a3_380
	word32 a1_404
	word32 a3_406
	word32 s1_813
	word32 a0_814
	word32 a1_815
	word32 a2_816
	word32 a4_817
	word32 a5_818
	word32 a7_819
	word32 s2_820
	word32 s3_821
	word32 s4_822
	word32 s5_823
	word32 s6_824
	word32 s7_825
	word32 s8_826
	word32 s9_827
	word32 s10_828
	word32 s11_829
	word32 t4_830
	word32 s1_831
	word32 a0_832
	word32 a1_833
	word32 a2_834
	word32 a4_835
	word32 a5_836
	word32 a7_837
	word32 s2_838
	word32 s3_839
	word32 s4_840
	word32 s5_841
	word32 s6_842
	word32 s7_843
	word32 s8_844
	word32 s9_845
	word32 s10_846
	word32 s11_847
	word32 t4_848
	word32 s1_849
	word32 a0_850
	word32 a1_851
	word32 a2_852
	word32 a4_853
	word32 a5_854
	word32 a7_855
	word32 s2_856
	word32 s3_857
	word32 s4_858
	word32 s5_859
	word32 s6_860
	word32 s7_861
	word32 s8_862
	word32 s9_863
	word32 s10_864
	word32 s11_865
	word32 t4_866
	word32 s1_867
	word32 a0_868
	word32 a2_869
	word32 a4_870
	word32 a5_871
	word32 a7_872
	word32 s2_873
	word32 s3_874
	word32 s4_875
	word32 s5_876
	word32 s6_877
	word32 s7_878
	word32 s8_879
	word32 s9_880
	word32 s10_881
	word32 s11_882
	word32 t4_883
	word32 ra_409 = printf(printf(printf(printf(ra_52, 0x230C630C<32>, a3_108, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_813, out a0_814, out a1_815, out a2_816, out a3_329, out a4_817, out a5_818, out a7_819, out s2_820, out s3_821, out s4_822, out s5_823, out s6_824, out s7_825, out s8_826, out s9_827, out s10_828, out s11_829, out t4_830), 0x230C631C<32>, a3_329, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_831, out a0_832, out a1_833, out a2_834, out a3_354, out a4_835, out a5_836, out a7_837, out s2_838, out s3_839, out s4_840, out s5_841, out s6_842, out s7_843, out s8_844, out s9_845, out s10_846, out s11_847, out t4_848), 0x230C632C<32>, a3_354, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_849, out a0_850, out a1_851, out a2_852, out a3_380, out a4_853, out a5_854, out a7_855, out s2_856, out s3_857, out s4_858, out s5_859, out s6_860, out s7_861, out s8_862, out s9_863, out s10_864, out s11_865, out t4_866), 0x230C6344<32>, a3_380, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_867, out a0_868, out a1_404, out a2_869, out a3_406, out a4_870, out a5_871, out a7_872, out s2_873, out s3_874, out s4_875, out s5_876, out s6_877, out s7_878, out s8_879, out s9_880, out s10_881, out s11_882, out t4_883)
	word32 s0_423 = Mem307[a1_404 + 28<i32>:word32]
	word32 s3_439
	word32 s1_884
	word32 a0_885
	word32 a1_886
	word32 a2_887
	word32 a4_888
	word32 a5_889
	word32 a7_890
	word32 s4_891
	word32 s7_892
	word32 s8_893
	word32 s9_894
	word32 s10_895
	word32 s11_896
	word32 t4_897
	ra = printf(ra_409, 0x230C6360<32>, a3_406, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_884, out a0_885, out a1_886, out a2_887, out a3_30, out a4_888, out a5_889, out a7_890, out s2_36, out s3_439, out s4_891, out s5, out s6, out s7_892, out s8_893, out s9_894, out s10_895, out s11_896, out t4_897)
	word32 a0_898
	word32 a1_899
	word32 a2_900
	word32 a4_901
	word32 a5_902
	word32 s4_903
	word32 s8_904
	puts(0x230C6374<32>, out a0_898, out a1_899, out a2_900, out a4_901, out a5_902, out s4_903, out s8_904)
	Mem461[s3_439:word32] = s0_423
	a0_42 = 0<32>
l23084B48:
	0<32> = dwArg0128
	s0Out = dwArgE4
	a0Out = a0_42
	a3Out = a3_30
	s2Out = s2_36
	s5Out = s5
	s6Out = s6
	return ra
bl_mtd_open_exit:
l23084A4A:
	word32 a3_482
	word32 s1_769
	word32 a0_770
	word32 a1_771
	word32 a2_772
	word32 a4_773
	word32 a5_774
	word32 a7_775
	word32 s2_776
	word32 s3_777
	word32 s4_778
	word32 s5_779
	word32 s6_780
	word32 s7_781
	word32 s8_782
	word32 s9_783
	word32 s10_784
	word32 s11_785
	word32 t4_786
	word32 s1_787
	word32 a0_788
	word32 a1_789
	word32 a2_790
	word32 a3_791
	word32 a4_792
	word32 a5_793
	word32 a7_794
	word32 s2_795
	word32 s3_796
	word32 s4_797
	word32 s5_798
	word32 s6_799
	word32 s7_800
	word32 s8_801
	word32 s9_802
	word32 s10_803
	word32 s11_804
	word32 t4_805
	printf(printf(ra_52, 0x230C626C<32>, a3_108, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_769, out a0_770, out a1_771, out a2_772, out a3_482, out a4_773, out a5_774, out a7_775, out s2_776, out s3_777, out s4_778, out s5_779, out s6_780, out s7_781, out s8_782, out s9_783, out s10_784, out s11_785, out t4_786), 0x230C62A0<32>, a3_482, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_787, out a0_788, out a1_789, out a2_790, out a3_791, out a4_792, out a5_793, out a7_794, out s2_795, out s3_796, out s4_797, out s5_798, out s6_799, out s7_800, out s8_801, out s9_802, out s10_803, out s11_804, out t4_805)
l23084A66:
l23084A18:
	word32 s1_732
	word32 a1_734
	word32 a0_733
	word32 a2_735
	word32 a4_736
	word32 a3_537
	word32 a5_737
	word32 a7_738
	word32 s2_739
	word32 s3_740
	word32 s4_741
	word32 s5_742
	word32 s6_743
	word32 s7_744
	word32 s8_745
	word32 s9_746
	word32 s10_747
	word32 s11_748
	word32 t4_749
	word32 s1_750
	word32 a0_751
	word32 a1_752
	word32 a2_753
	word32 a3_754
	word32 a4_755
	word32 a5_756
	word32 a7_757
	word32 s2_758
	word32 s3_759
	word32 s4_760
	word32 s5_761
	word32 s6_762
	word32 s7_763
	word32 s8_764
	word32 s9_765
	word32 s10_766
	word32 s11_767
	word32 t4_768
	printf(printf(ra_52, 0x230C626C<32>, a3_247, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_732, out a0_733, out a1_734, out a2_735, out a3_537, out a4_736, out a5_737, out a7_738, out s2_739, out s3_740, out s4_741, out s5_742, out s6_743, out s7_744, out s8_745, out s9_746, out s10_747, out s11_748, out t4_749), 0x230C62A0<32>, a3_537, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_750, out a0_751, out a1_752, out a2_753, out a3_754, out a4_755, out a5_756, out a7_757, out s2_758, out s3_759, out s4_760, out s5_761, out s6_762, out s7_763, out s8_764, out s9_765, out s10_766, out s11_767, out t4_768)
l23084A34:


void bl_mtd_close(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
bl_mtd_close_entry:
l23084B5A:
	word32 s0_29
	word32 s1_30
	word32 a0_31
	word32 a1_32
	word32 a2_33
	word32 a3_34
	word32 a4_35
	word32 a5_36
	word32 a6_37
	word32 s4_38
	word32 t3_39
	vPortFree(a0, a2, a5, mstatus, dwArg0148, dwArg0188, out s0_29, out s1_30, out a0_31, out a1_32, out a2_33, out a3_34, out a4_35, out a5_36, out a6_37, out s4_38, out t3_39)
	return
bl_mtd_close_exit:


word32 bl_mtd_info(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_init
//      romfs_register
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a4 a5 s1 tp
// Preserved: s0 sp
bl_mtd_info_entry:
l23084B6A:
	word32 a5_18
	word32 a4_35
	strcpy(a1, a0, out a4_35, out a5_18)
	Mem22[a5_18 + 16<i32>:word32] = a1
	Mem24[a5_18 + 20<i32>:word32] = a1
	word32 s1_25 = Mem24[a5_18 + 28<i32>:word32]
	Mem27[a5_18 + 24<i32>:word32] = a1
	return s1_25
bl_mtd_info_exit:


word32 bl_mtd_erase(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_erase
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a1 a4 ra
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: sp
bl_mtd_erase_entry:
l23084B96:
	word32 a4_13
	word32 a1_15
	word32 a0_26
	word32 ra_17 = bl_flash_erase(ra, Mem5[a0 + 20<i32>:word32] + a1, a2, out a0_26, out a1_15, out a4_13)
	a0Out = 0<32>
	a1Out = a1_15
	a4Out = a4_13
	return ra_17
bl_mtd_erase_exit:


void bl_mtd_erase_all(word32 ra, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a1:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: sp
bl_mtd_erase_all_entry:
l23084BAC:
	word32 a0_20
	word32 a1_21
	word32 a4_22
	bl_flash_erase(ra, Mem5[Mem5[a1 + 24<i32>:word32] + 20<i32>:word32], a1, out a0_20, out a1_21, out a4_22)
	return
bl_mtd_erase_all_exit:


word32 bl_mtd_write(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg5C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      write_status
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +005C:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_mtd_write_entry:
l23084BC0:
	word32 a1_116
	word32 a5_115
	word32 a4_114
	word32 ra_112
	word32 s4_207
	word32 s0_123 = a2
	word32 s2_121 = a3
	word32 s1_23 = s1 + a1
	branch bl_sys_isxipaddr(a3) == 0<32> l23084C58
l23084C58:
	word32 a0_251
	ra_112 = bl_flash_write(ra, s1_23, a3, a2, out a0_251, out a1_116, out a4_114, out a5_115)
	s4_207 = s4
l23084BDE:
	branch Mem15[0x4200F560<32>:int32] == 0<32> l23084C2A
l23084C2A:
	word32 a5_252
	xTaskGetTickCount(out a5_252)
l23084BE8:
	word32 a5_253
	xTaskGetTickCountFromISR(out a5_253)
l23084BEC:
	word32 a0_262
	word32 a2_263
	word32 a3_264
	word32 s4_265
	word32 s5_266
	word32 s8_267
	word32 s9_268
	word32 s10_269
	word32 s11_270
	word32 s1_107
	ra_112 = bl_printk(ra, 0x230C63A8<32>, 0x230C639C<32>, dwLoc58, s2, dwArg10, dwArg14, dwArg38, dwArg5C, out s1_107, out a0_262, out a1_116, out a2_263, out a3_264, out a4_114, out a5_115, out s2_121, out s3, out s4_265, out s5_266, out s6, out s7, out s8_267, out s9_268, out s10_269, out s11_270)
	s4_207 = 64<i32>
l23084C16:
	branch s0_123 != 0<32> l23084C30
l23084C30:
	s3 = s0_123
	branch s0_123 <=u 64<i32> l23084C3A
l23084C36:
	s3 = 64<i32>
l23084C3A:
	word32 a1_254
	word32 a2_255
	word32 a3_256
	word32 a4_257
	word32 a5_258
	word32 a6_259
	word32 a7_260
	memcpy(fp + -96<i32>, s2_121, s3, out a1_254, out a2_255, out a3_256, out a4_257, out a5_258, out a6_259, out a7_260)
	word32 a0_261
	ra_112 = bl_flash_write(ra_112, s1_107, fp + -96<i32>, s3, out a0_261, out a1_116, out a4_114, out a5_115)
	s1_107 = s1_107 + s3
	s2_121 = s2_121 + s3
	s0_123 = s0_123 - s3
l23084C18:
	s0Out = s0_123
	s1Out = dwArg28
	a0Out = 0<32>
	a1Out = a1_116
	a3Out = dwArg08
	a4Out = a4_114
	a5Out = a5_115
	s2Out = s2_121
	s3Out = s3
	s4Out = s4_207
	s5Out = s4
	s6Out = s6
	s7Out = s7
	return ra_112
bl_mtd_write_exit:


word32 bl_mtd_read(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_port_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra
// Preserved: sp
bl_mtd_read_entry:
l23084C64:
	word32 a4_14
	word32 a1_16
	word32 a3_18
	word32 ra_19 = bl_flash_read(ra, Mem5[a0 + 20<i32>:word32] + a1, a3, a2, out a1_16, out a3_18, out a4_14)
	a0Out = 0<32>
	a1Out = a1_16
	a3Out = a3_18
	a4Out = a4_14
	return ra_19
bl_mtd_read_exit:


word32 bloop_init(word32 ra, word32 a0, word32 dwArg18, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
//      cmd_looprt_test
// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: ra s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
bloop_init_entry:
l23084C7A:
	word32 s1_16 = a0 + 272<i32>
	word32 a3_20
	word32 a5_102
	word32 a4_101
	word32 a2_100
	word32 a1_99
	word32 a0_98
	word32 t1_97
	word32 ra_23 = memset(ra, a0, 0<32>, 1184<i32>, out t1_97, out a0_98, out a1_99, out a2_100, out a3_20, out a4_101, out a5_102)
l23084C98:
	utils_list_init(s1_16)
	s1_16 = s1_16 + 8<32>
	branch s1_16 != a0 + 528<i32> l23084C98
l23084CA4:
	Mem33[a0 + 1172<i32>:word32] = a0 + 1168<i32>
	Mem34[a0 + 1168<i32>:word32] = a0 + 1168<i32>
	Mem37[a0 + 1180<i32>:word32] = a0 + 1176<i32>
	Mem38[a0 + 1176<i32>:word32] = a0 + 1176<i32>
	word32 a1_104
	word32 s1_53
	word32 s3_57
	word32 a0_103
	word32 a2_105
	word32 a3_106
	word32 a4_107
	word32 a5_108
	word32 a7_109
	word32 s2_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 s9_116
	word32 s10_117
	word32 s11_118
	word32 t4_119
	word32 ra_52 = printf(ra_23, 0x230C63EC<32>, a3_20, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_53, out a0_103, out a1_104, out a2_105, out a3_106, out a4_107, out a5_108, out a7_109, out s2_110, out s3_57, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115, out s9_116, out s10_117, out s11_118, out t4_119)
	0<32> = dwArg38
	s1Out = s1_53
	s3Out = s3_57
	return ra_52
bloop_init_exit:


word32 bloop_handler_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
//      cmd_looprt_test
//      loopset_led_hook_on_looprt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a5
// Trashed: a0 a2 a5
// Preserved: sp
bloop_handler_register_entry:
l23084CDA:
	word32 a5_10 = 0x1F<32>
	branch a2 >u 0x1F<32> l23084CF4
l23084CF4:
l23084CE0:
	word32 a2_8 = (a2 << 2<i32>) + a0
	a5_10 = Mem0[a2_8 + 1040<i32>:int32]
	branch a5_10 != 0<32> l23084CF6
l23084CF6:
	return a5_10
l23084CEC:
	Mem13[a2_8 + 1040<i32>:word32] = a1
	return a5_10
bloop_handler_register_exit:


word32 bloop_timer_init(word32 ra, word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_schedule_evt2
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
bloop_timer_init_entry:
l23084CF8:
	word32 t1_39
	word32 a0_40
	word32 a1_41
	word32 a2_42
	word32 a3_43
	word32 a4_44
	word32 a5_45
	memset(ra, a0, 0<32>, 36<i32>, out t1_39, out a0_40, out a1_41, out a2_42, out a3_43, out a4_44, out a5_45)
	Mem27[a0:word32] = a0
	Mem28[a0 + 4<i32>:word32] = a0
	Mem29[a0 + 8<i32>:byte] = SLICE(CONVERT(a1 != 0<32>, bool, word32) << 1<i32>, byte, 0)
	return a1
bloop_timer_init_exit:


word32 bloop_timer_configure(word32 a0, word32 a1, word32 a3, word32 a4, word32 dwArgB4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_schedule_evt2
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] Stack +00B4:[0..31]
// LiveOut: s0
// Trashed: a0 a2 a5 a6 s0 s4 s8 t3
// Preserved: sp
bloop_timer_configure_entry:
l23084D26:
	word32 a5_21
	word32 a0_20 = xTaskGetTickCount(out a5_21)
	Mem27[a0_20 + 12<i32>:word32] = a0
	Mem29[a0_20 + a1 + 16<i32>:word32] = a0
	Mem30[dwArgB4 + 28<i32>:word32] = a0
	Mem31[a3 + 32<i32>:word32] = a0
	Mem32[a4 + 20<i32>:word32] = a0
	Mem33[a5_21 + 24<i32>:word32] = a0
	return dwArgE4
bloop_timer_configure_exit:


void bloop_timer_repeat_enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
bloop_timer_repeat_enable_entry:
l23084D5C:
	Mem7[a0 + 8<i32>:byte] = SLICE(CONVERT(Mem0[a0 + 8<i32>:byte], byte, word32) | 1<i32>, byte, 0)
	return
bloop_timer_repeat_enable_exit:


word32 bloop_timer_repeat_reconfigure(word32 s0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse:  a0:[0..31] s0:[0..31]
// LiveOut: s1
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
bloop_timer_repeat_reconfigure_entry:
l23084D6A:
	word32 s0_14 = s0 - Mem9[Mem9[s0 + 16<i32>:word32] + 12<i32>:word32]
	word32 a5_29
	word32 a0_15 = xTaskGetTickCount(out a5_29)
	Mem18[s0_14 + a0_15 + 16<i32>:word32] = a0
	Mem21[a0_15 + 12<i32>:word32] = a0
	return a0
bloop_timer_repeat_reconfigure_exit:


word32 bloop_timer_register(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_timer_register
//      cmd_looprt_test_schedule_evt2
//      bloop_run
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a2 a3 a4 a5
// Trashed: a2 a3 a4 a5 a6 a7
// Preserved: sp
bloop_timer_register_entry:
l23084D8E:
	word32 a2_5 = Mem0[a0 + 1172<i32>:int32]
	branch a0 + 1168<i32> != a2_5 l23084DDA
l23084DDA:
	word32 a4_10 = a2_5
	word32 a5_16 = 0<32>
l23084DCA:
	branch a0 + 1168<i32> != a4_10 l23084DA8
l23084DA8:
	branch Mem0[a1 + 16<i32>:int32] - Mem0[a4_10 + 16<i32>:int32] > 0<32> l23084DC6
l23084DC6:
	a5_16 = a4_10
	a4_10 = Mem0[a4_10 + 4<i32>:word32]
l23084DB8:
	branch a5_16 != 0<32> l23084DCE
l23084DBA:
	Mem20[a2_5 + 4<i32>:word32] = a1
	Mem21[a0 + 1168<i32>:word32] = a1
	Mem23[a0 + 1172<i32>:word32] = a1
	Mem24[a1:word32] = a2_5
	a3Out = <invalid>
	a4Out = a4_10
	a5Out = a5_16
	return <invalid>
l23084DCE:
	word32 a5_27 = Mem0[a4_10 + 4<i32>:word32]
	Mem29[a5_27:word32] = a1
	Mem30[a4_10 + 4<i32>:word32] = a1
	Mem31[a1 + 4<i32>:word32] = a5_27
	Mem32[a1:word32] = a4_10
	a3Out = <invalid>
	a4Out = a4_10
	a5Out = a5_27
	return <invalid>
l23084D9A:
	Mem34[a0 + 1172<i32>:word32] = a1
	Mem35[a0 + 1168<i32>:word32] = a1
	Mem36[a0 + 1172<i32>:word32] = a1
	Mem37[a0 + 1168<i32>:word32] = a1
	a3Out = <invalid>
	a4Out = a4
	a5Out = a5
	return <invalid>
bloop_timer_register_exit:


word32 bloop_wait_startup(word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg0128, word32 dwArg0168, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
//      cmd_looprt_test
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a3 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
bloop_wait_startup_entry:
l23084DE0:
l23084DE8:
	branch a5 == 0<32> l23084DF4
l23084DF4:
	word32 a0_77
	word32 a1_78
	word32 s4_79
	vTaskDelay(1<32>, a2, a3, a4, a5, mstatus, dwArg14, dwArg18, dwArg0128, dwArg0168, out s1, out a0_77, out a1_78, out a2, out a3, out a4, out a5, out s2, out s3, out s4_79)
l23084DEC:
	a3Out = a3
	s2Out = s2
	s3Out = s3
	return s1
bloop_wait_startup_exit:


word32 bloop_evt_set_async(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s1Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: mstatus ra s1
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
bloop_evt_set_async_entry:
l23084DFC:
	branch a1 <=u 0x1F<32> l23084E22
l23084E22:
	word32 a5_17
	vTaskEnterCritical(a4, mstatus, out a5_17)
	word32 a3_22 = 1<32> << a1
	Mem26[(a3_22 | 1<32>) + 4<i32>:word32] = Mem14[5<32>:word32]
	Mem29[(a5_17 | a2) + 16<i32>:word32] = Mem26[a5_17 + 16<i32>:word32]
	word32 a4_32
	word32 a5_105
	vTaskExitCritical(a3_22, mstatus, out a4_32, out a5_105)
l23084E58_thunk_xTaskGenericNotify:
	word32 s1_46
	word32 mstatus_54
	word32 s0_125
	word32 a0_126
	word32 a1_127
	word32 a2_128
	word32 a3_129
	word32 a4_130
	word32 a5_131
	word32 s2_132
	word32 s3_133
	word32 s4_134
	word32 ra_55 = xTaskGenericNotify(ra, a0, 0<32>, 2<32>, 0<32>, a4_32, mstatus, dwArg14, dwArg38, dwArg58, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_125, out s1_46, out a0_126, out a1_127, out a2_128, out a3_129, out a4_130, out a5_131, out s2_132, out s3_133, out s4_134, out mstatus_54)
	s1Out = s1_46
	mstatusOut = mstatus_54
	return ra_55
bloop_evt_set_async_exit:
l23084E08:
	word32 s1_106
	word32 a0_107
	word32 a1_108
	word32 a2_109
	word32 a3_110
	word32 a4_111
	word32 a5_112
	word32 a7_113
	word32 s2_114
	word32 s3_115
	word32 s4_116
	word32 s5_117
	word32 s6_118
	word32 s7_119
	word32 s8_120
	word32 s9_121
	word32 s10_122
	word32 s11_123
	word32 t4_124
	printf(ra, 0x230C3498<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_106, out a0_107, out a1_108, out a2_109, out a3_110, out a4_111, out a5_112, out a7_113, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7_119, out s8_120, out s9_121, out s10_122, out s11_123, out t4_124)
l23084E20:


word32 bloop_evt_set_sync(word32 ra, word32 a1, word32 a2, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
bloop_evt_set_sync_entry:
l23084E5C:
	branch a1 <=u 0x1F<32> l23084E80
l23084E80:
	word32 a3_6 = 1<32> << a1
	Mem11[(a3_6 | 1<32>) + 8<i32>:word32] = Mem0[9<32>:word32]
	word32 a0_12 = Mem11[0x2F<32>:word32]
	Mem15[(a2 | 0x1F<32>) + 16<i32>:word32] = a0_12
	a1Out = a1 << 2<i32>
	a3Out = a3_6
	a4Out = a3_6 | 1<32>
	a5Out = a2 | 0x1F<32>
	return a0_12
bloop_evt_set_sync_exit:
l23084E62:
	word32 s1_58
	word32 a0_59
	word32 a1_60
	word32 a2_61
	word32 a3_62
	word32 a4_63
	word32 a5_64
	word32 a7_65
	word32 s2_66
	word32 s3_67
	word32 s4_68
	word32 s5_69
	word32 s6_70
	word32 s7_71
	word32 s8_72
	word32 s9_73
	word32 s10_74
	word32 s11_75
	word32 t4_76
	printf(ra, 0x230C3498<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_58, out a0_59, out a1_60, out a2_61, out a3_62, out a4_63, out a5_64, out a7_65, out s2_66, out s3_67, out s4_68, out s5_69, out s6_70, out s7_71, out s8_72, out s9_73, out s10_74, out s11_75, out t4_76)
l23084E7E:


word32 bloop_evt_unset_sync(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bloop_run
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bloop_evt_unset_sync_entry:
l23084E98:
	branch a1 <=u 0x1F<32> l23084EBC
l23084EBC:
	word32 a0_8 = Mem0[a1 + 8<i32>:word32]
	Mem11[(~(1<32> << a1) & a1) + 8<i32>:word32] = a0_8
	return a0_8
bloop_evt_unset_sync_exit:
l23084E9E:
	word32 s1_50
	word32 a0_51
	word32 a1_52
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 a5_56
	word32 a7_57
	word32 s2_58
	word32 s3_59
	word32 s4_60
	word32 s5_61
	word32 s6_62
	word32 s7_63
	word32 s8_64
	word32 s9_65
	word32 s10_66
	word32 s11_67
	word32 t4_68
	printf(ra, 0x230C3498<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_50, out a0_51, out a1_52, out a2_53, out a3_54, out a4_55, out a5_56, out a7_57, out s2_58, out s3_59, out s4_60, out s5_61, out s6_62, out s7_63, out s8_64, out s9_65, out s10_66, out s11_67, out t4_68)
l23084EBA:


void bloop_run(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s5, word32 s6, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg5C, word32 dwArg6C, word32 dwArgD8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      proc_entry_looprt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s6:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +006C:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
bloop_run_exit:
bloop_run_entry:
l23084ECE:
	word32 a5_1000
	word32 a0_101 = xTaskGetCurrentTaskHandle(out a5_1000)
	Mem34[a0_101:word32] = a0
	word32 s0_15 = a0
	word32 s2_150 = 0x42028000<32>
	word32 s3_153 = 0x42028000<32>
	word32 s4_155 = 0x4200F000<32>
	word32 s5_165 = 0x230C6000<32>
l23084F02:
	word32 s7_40 = s0_15 + 1168<i32>
l23084F06:
	word32 a5_43
	word32 a4_44 = vTaskEnterCritical(a4, mstatus, out a5_43)
	word32 s0_47 = Mem45[a4_44 + 4<i32>:word32]
	Mem48[s0_47 + 4<i32>:word32] = 0<32>
	Mem50[(a5_43 | a4_44) + 8<i32>:word32] = s0_47
	word32 a5_52
	word32 a4_104
	a3 = vTaskExitCritical(a3, mstatus, out a4_104, out a5_52)
	word32 s0_203 = Mem50[a5_52 + 8<i32>:word32]
	branch a5_52 != 0<32> l23084FE2
l23084F1E:
	word32 a5_487 = Mem50[s0_203 + 1172<i32>:int32]
	a1 = 0xFFFFFFFF<32>
	branch a5_487 == s7_40 l23084F36
l23084F28:
	a0_101 = xTaskGetTickCount(out a5_487)
	a1 = s1 - a0_101
	branch a1 <= 0<32> l23084FE2
l23084FE2:
	branch Mem50[s0_203 + 1172<i32>:int32] != s7_40 l23085032
l23085032:
	word32 a5_121
	word32 a0_68 = xTaskGetTickCount(out a5_121)
	word32 s1_126 = Mem50[s0_203 + 1172<i32>:int32]
	word32 s6_123 = 0<32>
	branch s1_126 == 0<32> l23085044
l23085040:
	s6_123 = Mem50[s1_126 + 4<i32>:int32]
l23085044:
	word32 s8_139 = s0_203 + 1176<i32>
	a0_101 = a0_68
l23085048:
	branch s1_126 != s7_40 l230850C2
l230850C2:
	a5_121 = a0_68 - a5_121
	branch a5_121 < 0<32> l2308504C
l230850CC:
	word32 a5_105
	a0_101 = bloop_evt_set_sync(ra, a1, a2, a3, s6, dwArg10, dwArg14, dwArg38, dwArg5C, out a1, out a3, out a4_104, out a5_105)
	branch a5_105 == 0<32> l230850E2
l230850DA:
	call a5_105 (retsize: 0;)
		uses: a1:Mem79[a2_491 + 32<i32>:word32],a2:a2_491,a3:a3_94,ra:ra_688,Stack +0018:s6,Stack +0060:dwArg10,Stack +0064:dwArg14,Stack +0088:dwArg38,Stack +00AC:dwArg5C
		defs: a0:a0_101,a1:a1_102,a3:a3_103,a4:a4_104,a5:a5_105
l230850E2:
	word32 s1_110 = Mem79[a4_104:word32]
	Mem111[a5_105 + 4<i32>:word32] = a4_104
	Mem112[a4_104:word32] = a5_105
	word32 a5_114 = Mem112[s0_203 + 1180<i32>:int32]
	Mem117[s1_110:word32] = s0_203 + 1176<i32>
	Mem118[a5_114 + 4<i32>:word32] = s1_110
	Mem119[s0_203 + 1180<i32>:word32] = s1_110
	Mem120[s1_110:word32] = a5_114
	a5_121 = 0<32>
	branch s6_123 == 0<32> l23085104
l23085100:
	a5_121 = Mem120[s6_123 + 4<i32>:int32]
l23085104:
	s1_126 = s6_123
	s6_123 = a5_121
l2308504C:
	word32 s1_131 = Mem79[s0_203 + 1180<i32>:int32]
	word32 s6_132 = 0<32>
	branch s1_131 == 0<32> l23085058
l23085054:
	s6_132 = Mem79[s1_131 + 4<i32>:int32]
l23085058:
	word32 s7_134 = 1<32>
	word32 s10_136 = 0x230C6000<32>
	word32 s11_137 = 0x230C6000<32>
l23085066:
	branch s1_131 == s8_139 l23084FEA
l2308506A:
	word32 s1_144 = Mem141[a5_121 + 4<i32>:word32]
	Mem145[a5_121 + 4<i32>:word32] = a4_104
	Mem146[a4_104:word32] = a5_121
	word32 a5_147 = CONVERT(Mem146[s1_144 + 8<i32>:byte], byte, word32)
	a4_104 = a5_147 & 2<i32>
	branch (a5_147 & 2<i32>) == 0<32> l23085110
l23085110:
	branch (a5_147 & 1<32>) == 0<32> l230850B2
l23085114:
	branch s7_134 <u CONVERT(Mem146[s2_150 + 240<i32>:byte], byte, word32) l23085144
l2308511C:
	branch s7_134 <u CONVERT(Mem146[s3_153 + 241<i32>:byte], byte, word32) l23085144
l23085124:
	branch Mem146[s4_155 + 1376<i32>:int32] == 0<32> l23085154
l23085154:
	word32 a5_1066
	xTaskGetTickCount(out a5_1066)
l2308512A:
	word32 a5_1067
	xTaskGetTickCountFromISR(out a5_1067)
l2308512E:
	word32 a1_1069
	word32 a2_1070
	word32 a3_1071
	word32 s9_1074
	word32 a4_1072
	word32 a5_1073
	word32 a0_1068
	ra = bl_printk(ra, s10_136 + 1060<i32>, s5_165 + 988<i32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_144, out a0_1068, out a1_1069, out a2_1070, out a3_1071, out a4_1072, out a5_1073, out s2_150, out s3_153, out s4_155, out s5_165, out s6_132, out s7_134, out s8_139, out s9_1074, out s10_136, out s11_137)
l23085144:
	word32 s1_208 = bloop_timer_repeat_reconfigure(s0_203, s1_144)
	a1 = s1_208
	a0_101 = s0_203
	word32 a5_1065
	a2 = bloop_timer_register(s0_203, s1_208, out a3, out a4_104, out a5_1065)
l2308507C:
	word32 a5_218 = CONVERT(Mem146[s2_150 + 240<i32>:byte], byte, word32)
	branch s7_134 <u a5_218 l230850AC
l23085084:
	a5_218 = CONVERT(Mem146[s3_153 + 241<i32>:byte], byte, word32)
	branch s7_134 <u a5_218 l230850AC
l2308508C:
	branch Mem146[s4_155 + 1376<i32>:int32] == 0<32> l2308510A
l2308510A:
	word32 a5_1057
	xTaskGetTickCount(out a5_1057)
l23085092:
	word32 a5_1058
	xTaskGetTickCountFromISR(out a5_1058)
l23085096:
	word32 a4_1062
	word32 s9_1064
	word32 s4_1063
	word32 a3_1061
	word32 a0_1059
	word32 a1_1060
	ra = bl_printk(ra, s11_137 + 1028<i32>, s5_165 + 988<i32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_144, out a0_1059, out a1_1060, out a2, out a3_1061, out a4_1062, out a5_218, out s2_150, out s3_153, out s4_1063, out s5_165, out s6_132, out s7_134, out s8_139, out s9_1064, out s10_136, out s11_137)
l230850AC:
	word32 a5_1054
	word32 a6_1055
	word32 t3_1056
	word32 s1_1053
	vPortFree(s1_144, a2, a5_218, mstatus, dwArg0108, dwArg0148, out s0_203, out s1_1053, out a0_101, out a1, out a2, out a3, out a4_104, out a5_1054, out a6_1055, out s4_155, out t3_1056)
l230850B2:
	a5_121 = 0<32>
	branch s6_132 == 0<32> l230850BC
l230850B8:
	a5_121 = Mem146[s6_132 + 4<i32>:int32]
l230850BC:
	s1_131 = s6_132
	s6_132 = a5_121
l23084FEA:
	word32 a4_1001
	word32 a5_1002
	word32 a0_308 = __clzsi2(a0_101, out a4_1001, out a5_1002)
	s0_15 = Mem306[a0_308 + 12<i32>:word32]
	s1 = a0_308
	word32 a5_1003
	word32 a0_313 = __clzsi2(a0_308, out a4, out a5_1003)
	branch a0_313 >= a0_308 l23084F3E
l23084F3E:
	s1 = 0x1F<32> - a0_308
	branch s1 == 0xFFFFFFFF<32> l23084FFC
l23084F4A:
	word32 s6_320 = (s1 << 2<u32>) + s0_15
	branch Mem306[s6_320 + 1040<i32>:int32] != 0<32> l23084F70
l23084F70:
	word32 a5_1024
	vTaskEnterCritical(a4, mstatus, out a5_1024)
	word32 a4_330 = Mem325[s6_320 + 16<i32>:int32]
	word32 a5_331 = Mem325[s6_320 + 144<i32>:int32]
	Mem332[s6_320 + 16<i32>:word32] = 0<32>
	Mem334[s6_320 + 144<i32>:word32] = a5_331 | a4_330
	word32 a5_1026
	word32 a4_1025
	vTaskExitCritical(a3, mstatus, out a4_1025, out a5_1026)
	call a5_350 (retsize: 0;)
	word32 a5_350
	word32 a1_1027
	word32 a4_1030
	word32 a2_1028
	word32 a3_1029
	word32 a0_345 = bl_timer_now_us(out a1_1027, out a2_1028, out a3_1029, out a4_1030, out a5_350)
	word32 a1_1031
	word32 a4_1032
	word32 a5_1033
	word32 a0_377 = bl_timer_now_us(out a1_1031, out a2, out a3, out a4_1032, out a5_1033)
	word32 a5_390 = (s1 << 4<u32>) + s0_15
	word32 a4_391 = Mem334[a5_390 + 536<i32>:int32]
	word32 a0_392 = a0_377 - a0_345
	Mem393[a5_390 + 532<i32>:word32] = a0_392
	Mem395[a5_390 + 536<i32>:word32] = a4_391 + a0_392
	branch Mem395[a5_390 + 528<i32>:int32] >=u a0_392 l23084FCE
l23084FCA:
	Mem397[a5_390 + 528<i32>:word32] = a0_392
l23084FCE:
	word32 a4_400 = Mem399[a5_390 + 540<i32>:int32]
	Mem406[a5_390 + 540<i32>:word32] = a4_400 + 1<32>
	a1 = s1
	a4 = a4_400 + 1<32>
	a0_101 = bloop_evt_unset_sync(ra, s1, a3, s6, dwArg10, dwArg14, dwArg38, dwArg5C)
l23084F56:
	word32 a4_1039
	word32 a0_1035
	word32 s3_1043
	word32 s7_1047
	word32 s10_1050
	word32 s11_1051
	word32 t4_1052
	word32 s8_1048
	word32 s9_1049
	word32 s6_1046
	word32 s4_1044
	word32 s5_1045
	word32 s2_1042
	word32 a5_1040
	word32 a7_1041
	word32 a3_1038
	word32 a1_1036
	word32 a2_1037
	word32 s1_1034
	printf(ra, 0x230C3498<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_1034, out a0_1035, out a1_1036, out a2_1037, out a3_1038, out a4_1039, out a5_1040, out a7_1041, out s2_1042, out s3_1043, out s4_1044, out s5_1045, out s6_1046, out s7_1047, out s8_1048, out s9_1049, out s10_1050, out s11_1051, out t4_1052)
l23084F6E:
l23084FFC:
	a0_101 = 0x1F<32> - a0_313
	branch a0_101 == 0xFFFFFFFF<32> l23084F02
l23085008:
	word32 a5_1004
	a0_101 = utils_list_pop_front(a4, 0xFFFFFFFF<32>, out a5_1004)
	branch a0_101 != 0<32> l23084F02
l23085018:
	word32 s8_1019
	word32 t4_1023
	word32 s11_1022
	word32 s9_1020
	word32 s10_1021
	word32 s7_1018
	word32 s1_1005
	word32 a7_1012
	word32 s2_1013
	word32 s3_1014
	word32 s6_1017
	word32 s4_1015
	word32 s5_1016
	word32 a0_1006
	word32 a1_1007
	word32 a4_1010
	word32 a5_1011
	word32 a2_1008
	word32 a3_1009
	printf(ra, 0x230C3498<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_1005, out a0_1006, out a1_1007, out a2_1008, out a3_1009, out a4_1010, out a5_1011, out a7_1012, out s2_1013, out s3_1014, out s4_1015, out s5_1016, out s6_1017, out s7_1018, out s8_1019, out s9_1020, out s10_1021, out s11_1022, out t4_1023)
l23085030:
l23084F36:
	a0_101 = 1<32>
	s1 = ulTaskNotifyTake(1<32>, a1, a2, a3, a4_104, a5_487, mstatus, s6, dwArgD8, out a2, out a3, out a4, out s2_150, out s3_153)


word32 bloop_status_dump(word32 ra, word32 a3, word32 s5, word32 dwArg20, word32 dwArg24, word32 dwArg6C, word32 dwArg010C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_status
//      loop_evt_entity_sys_evt
// MayUse:  a3:[0..31] ra:[0..31] s5:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +006C:[0..31] Stack +010C:[0..31]
// LiveOut: a3 ra s0 s1 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bloop_status_dump_entry:
l2308515A:
	word32 a5_516
	word32 a4_515
	word32 a2_514
	word32 a1_513
	word32 a0_512
	word32 s4_517
	word32 s8_518
	puts(0x230C6450<32>, out a0_512, out a1_513, out a2_514, out a4_515, out a5_516, out s4_517, out s8_518)
	word32 a1_51
	word32 a3_53
	word32 s10_533
	word32 t4_535
	word32 s11_534
	word32 s6_529
	word32 s8_531
	word32 s7_530
	word32 s9_532
	word32 s2_525
	word32 s4_527
	word32 s3_526
	word32 s5_528
	word32 a2_521
	word32 a5_523
	word32 a4_522
	word32 a7_524
	word32 s1_519
	word32 a0_520
	word32 ra_56 = printf(ra, 0x230C646C<32>, a3, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_519, out a0_520, out a1_51, out a2_521, out a3_53, out a4_522, out a5_523, out a7_524, out s2_525, out s3_526, out s4_527, out s5_528, out s6_529, out s7_530, out s8_531, out s9_532, out s10_533, out s11_534, out t4_535)
	word32 s0_70 = Mem33[a1_51 + 12<i32>:word32]
	word32 t4_553
	word32 s8_549
	word32 s10_551
	word32 s9_550
	word32 s11_552
	word32 s4_545
	word32 s6_547
	word32 s5_546
	word32 s7_548
	word32 a5_541
	word32 s2_543
	word32 a7_542
	word32 s3_544
	word32 a0_537
	word32 a2_539
	word32 a1_538
	word32 a4_540
	word32 s1_536
	word32 a3_137
	word32 ra_130 = printf(ra_56, 0x230C6480<32>, a3_53, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_536, out a0_537, out a1_538, out a2_539, out a3_137, out a4_540, out a5_541, out a7_542, out s2_543, out s3_544, out s4_545, out s5_546, out s6_547, out s7_548, out s8_549, out s9_550, out s10_551, out s11_552, out t4_553)
	word32 a5_554
	xTaskGetTickCount(out a5_554)
	word32 a4_557
	word32 s8_559
	word32 a5_558
	word32 a0_555
	word32 a1_556
	word32 a2_101
	word32 s4_107
	puts(0x230C6494<32>, out a0_555, out a1_556, out a2_101, out a4_557, out a5_558, out s4_107, out s8_559)
	word32 s1_110 = Mem33[s0_70 + 1172<i32>:int32]
	word32 s3_111 = s0_70 + 1168<i32>
	word32 s5_113 = 0x230C6000<32>
l230851C0:
	branch s3_111 != s1_110 l23085294
l23085294:
	word32 s1_141
	word32 t4_572
	word32 s11_571
	word32 s10_570
	word32 s9_569
	word32 s2_565
	word32 s7_567
	word32 s6_566
	word32 s8_568
	word32 a1_561
	word32 a5_563
	word32 a4_562
	word32 a7_564
	word32 a0_560
	ra_130 = printf(ra_130, s5_113 + 1196<i32>, s4_107 - a2_101, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_141, out a0_560, out a1_561, out a2_101, out a3_137, out a4_562, out a5_563, out a7_564, out s2_565, out s3_111, out s4_107, out s5_113, out s6_566, out s7_567, out s8_568, out s9_569, out s10_570, out s11_571, out t4_572)
	s1_110 = Mem33[s1_141 + 4<i32>:word32]
l230851C4:
	word32 a1_574
	word32 a0_573
	word32 a2_575
	word32 a4_576
	word32 a5_577
	word32 a7_578
	word32 s2_579
	word32 s3_580
	word32 s4_581
	word32 s5_582
	word32 s6_583
	word32 s7_584
	word32 s8_585
	word32 s9_586
	word32 s10_587
	word32 s11_588
	word32 t4_589
	word32 s1_172
	word32 a3_168
	word32 ra_171 = printf(ra_130, 0x230C64F8<32>, a3_137, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_172, out a0_573, out a1_574, out a2_575, out a3_168, out a4_576, out a5_577, out a7_578, out s2_579, out s3_580, out s4_581, out s5_582, out s6_583, out s7_584, out s8_585, out s9_586, out s10_587, out s11_588, out t4_589)
	word32 s5_188 = 0x230C6000<32>
l230851FE:
	branch Mem195[s1_172 + 1024<i32>:int32] == 0<32> l23085208
l23085206:
l23085208:
	word32 s6_229
	word32 a0_590
	word32 a1_591
	word32 a2_592
	word32 a4_593
	word32 a5_594
	word32 a7_595
	word32 s3_596
	word32 s4_597
	word32 s7_598
	word32 s8_599
	word32 s9_600
	word32 s10_601
	word32 s11_602
	word32 t4_603
	word32 s2_225
	word32 s1_222
	ra_171 = printf(ra_171, s5_188 + 1288<i32>, a3_168, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_222, out a0_590, out a1_591, out a2_592, out a3_168, out a4_593, out a5_594, out a7_595, out s2_225, out s3_596, out s4_597, out s5_188, out s6_229, out s7_598, out s8_599, out s9_600, out s10_601, out s11_602, out t4_603)
	branch Mem195[s1_222 + 1024<i32>:int32] == 0<32> l23085268
l2308521A:
	word32 a3_246
	word32 s7_258
	word32 a3_270
	word32 s8_283
	word32 a3_294
	word32 s9_308
	word32 a3_319
	word32 s10_324
	word32 s1_604
	word32 a0_605
	word32 a1_606
	word32 a2_607
	word32 a4_608
	word32 a5_609
	word32 a7_610
	word32 s2_611
	word32 s3_612
	word32 s4_613
	word32 s5_614
	word32 s6_615
	word32 s8_616
	word32 s9_617
	word32 s10_618
	word32 s11_619
	word32 t4_620
	word32 s1_621
	word32 a0_622
	word32 a1_623
	word32 a2_624
	word32 a4_625
	word32 a5_626
	word32 a7_627
	word32 s2_628
	word32 s3_629
	word32 s4_630
	word32 s5_631
	word32 s6_632
	word32 s7_633
	word32 s9_634
	word32 s10_635
	word32 s11_636
	word32 t4_637
	word32 s1_638
	word32 a0_639
	word32 a1_640
	word32 a2_641
	word32 a4_642
	word32 a5_643
	word32 a7_644
	word32 s2_645
	word32 s3_646
	word32 s4_647
	word32 s5_648
	word32 s6_649
	word32 s7_650
	word32 s8_651
	word32 s10_652
	word32 s11_653
	word32 t4_654
	word32 s1_655
	word32 a0_656
	word32 a1_657
	word32 a2_658
	word32 a4_659
	word32 a5_660
	word32 a7_661
	word32 s2_662
	word32 s3_663
	word32 s4_664
	word32 s5_665
	word32 s6_666
	word32 s7_667
	word32 s8_668
	word32 s9_669
	word32 s11_670
	word32 t4_671
	word32 a0_672
	word32 a1_673
	word32 a2_674
	word32 a4_675
	word32 a5_676
	word32 a7_677
	word32 s3_678
	word32 s4_679
	word32 s6_680
	word32 s7_681
	word32 s8_682
	word32 s9_683
	word32 s10_684
	word32 s11_685
	word32 t4_686
	ra_171 = printf(printf(printf(printf(printf(ra_171, s6_229 + 1312<i32>, a3_168, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_604, out a0_605, out a1_606, out a2_607, out a3_246, out a4_608, out a5_609, out a7_610, out s2_611, out s3_612, out s4_613, out s5_614, out s6_615, out s7_258, out s8_616, out s9_617, out s10_618, out s11_619, out t4_620), s7_258 + 1336<i32>, a3_246, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_621, out a0_622, out a1_623, out a2_624, out a3_270, out a4_625, out a5_626, out a7_627, out s2_628, out s3_629, out s4_630, out s5_631, out s6_632, out s7_633, out s8_283, out s9_634, out s10_635, out s11_636, out t4_637), s8_283 + 1356<i32>, a3_270, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_638, out a0_639, out a1_640, out a2_641, out a3_294, out a4_642, out a5_643, out a7_644, out s2_645, out s3_646, out s4_647, out s5_648, out s6_649, out s7_650, out s8_651, out s9_308, out s10_652, out s11_653, out t4_654), s9_308 + 1376<i32>, a3_294, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_655, out a0_656, out a1_657, out a2_658, out a3_319, out a4_659, out a5_660, out a7_661, out s2_662, out s3_663, out s4_664, out s5_665, out s6_666, out s7_667, out s8_668, out s9_669, out s10_324, out s11_670, out t4_671), s10_324 + 1404<i32>, a3_319, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_222, out a0_672, out a1_673, out a2_674, out a3_168, out a4_675, out a5_676, out a7_677, out s2_225, out s3_678, out s4_679, out s5_188, out s6_680, out s7_681, out s8_682, out s9_683, out s10_684, out s11_685, out t4_686)
l23085268:
	s1_172 = s1_222 + 0xFFFFFFFC<32>
	branch s2_225 != 0<32> l230851FE
l23085274:
	0<32> = dwArg010C
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a3Out = s2
	s5Out = s5_188
	return dwLoc08
bloop_status_dump_exit:


void loop_evt_entity_sys_handler(word32 ra, word32 a5, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
loop_evt_entity_sys_handler_entry:
l230852B2:
	word32 s1_50
	word32 a0_51
	word32 a1_52
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 a5_56
	word32 a7_57
	word32 s2_58
	word32 s3_59
	word32 s4_60
	word32 s5_61
	word32 s6_62
	word32 s7_63
	word32 s8_64
	word32 s9_65
	word32 s10_66
	word32 s11_67
	word32 t4_68
	printf(ra, 0x230C6610<32>, CONVERT(Mem5[Mem5[a5 + 8<i32>:word32] + 6<i32>:byte], byte, word32), dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_50, out a0_51, out a1_52, out a2_53, out a3_54, out a4_55, out a5_56, out a7_57, out s2_58, out s3_59, out s4_60, out s5_61, out s6_62, out s7_63, out s8_64, out s9_65, out s10_66, out s11_67, out t4_68)
	return
loop_evt_entity_sys_handler_exit:


void loop_evt_entity_sys_evt(word32 ra, word32 s0, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg5C, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, word32 dwArgFC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +005C:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00FC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
loop_evt_entity_sys_evt_entry:
l230852E2:
	word32 a0_182
	word32 a1_183
	word32 a2_184
	word32 a4_185
	word32 a5_186
	word32 a7_187
	word32 s2_188
	word32 s3_189
	word32 s4_190
	word32 s6_191
	word32 s7_192
	word32 s8_193
	word32 s9_194
	word32 s10_195
	word32 s11_196
	word32 t4_197
	word32 a3_26
	word32 s5_36
	word32 s1_109
	word32 ra_29 = printf(ra, 0x230C65BC<32>, Mem11[s0:word32], dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_109, out a0_182, out a1_183, out a2_184, out a3_26, out a4_185, out a5_186, out a7_187, out s2_188, out s3_189, out s4_190, out s5_36, out s6_191, out s7_192, out s8_193, out s9_194, out s10_195, out s11_196, out t4_197)
l23085302:
	branch (s0 & 1<i32>) == 0<32> l23085324
l23085324:
	branch s0 == 0<32> l23085312
l23085326:
	word32 s1_198
	word32 a0_199
	word32 a1_200
	word32 a2_201
	word32 a3_202
	word32 a4_203
	word32 a5_204
	word32 a7_205
	word32 s2_206
	word32 s3_207
	word32 s4_208
	word32 s5_209
	word32 s6_210
	word32 s7_211
	word32 s8_212
	word32 s9_213
	word32 s10_214
	word32 s11_215
	word32 t4_216
	printf(ra_29, 0x230C3498<32>, a3_26, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_198, out a0_199, out a1_200, out a2_201, out a3_202, out a4_203, out a5_204, out a7_205, out s2_206, out s3_207, out s4_208, out s5_209, out s6_210, out s7_211, out s8_212, out s9_213, out s10_214, out s11_215, out t4_216)
l2308533E:
l23085308:
	ra_29 = bloop_status_dump(ra_29, a3_26, s5_36, dwArg10, dwArg14, dwArg5C, dwArgFC, out s0, out s1_109, out a3_26, out s5_36)
	branch s0 != 0<32> l23085302
l23085312:
	Mem111[s1_109:word32] = 0<32>
	0<32> = dwArg38
	return
loop_evt_entity_sys_evt_exit:


void misaligned_load_trap(word32 gp, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 mcause, word32 mtval)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exception_entry
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] gp:[0..31] mcause:[0..31] mstatus:[0..31] mtval:[0..31]
// LiveOut:
// Trashed: a1 a3 a4 a5 a6 a7 s0 t0 t1 t3 t4 t5 t6
// Preserved: a2 sp
misaligned_load_trap_entry:
l23085340:
	__csrrs(mstatus, 0<32>)
	branch (a2 & 2<i32>) != 0<32> l23085362
l23085362:
	a5 = CONVERT(Mem0[a2:uint16], uint16, word32)
	branch (a5 & 3<32>) != 3<32> l23085376
l2308536E:
	a5 = a5 + (CONVERT(Mem0[a2 + 2<i32>:uint16], uint16, word32) << 16<i32>)
l23085352:
	a2 = Mem0[a5:word32]
	branch (a5 & 3<32>) == 3<32> l23085376
l2308535C:
	a5 = CONVERT(SLICE(a5, word16, 0), word16, word32)
l23085376:
	__csrrw(mstatus, 0<32>)
	word32 t6_121 = a5
	word32 t3_26 = 4<32>
	branch (a5 & 3<i32>) == 3<32> l2308538A
l23085388:
	t3_26 = 2<32>
l2308538A:
	word32 a7_147
	word32 t1_119
	word32 a6_48
	word32 t3_31 = t3_26 + a2
	word32 t5_38 = __csrrs(mtval, gp)
	word32 a4_43 = a5 & 0x700007F<32>
	branch a4_43 == 0x2000003<32> l23085456
l230853A2:
	branch a4_43 == 0x2000007<32> l230853DE
l230853A8:
	branch a4_43 == 0x1000003<32> l23085466
l23085466:
	a6_48 = 2<32>
	t1_119 = 0<32>
	a7_147 = 0x10<32>
l230853B0:
	branch a4_43 == 0x5000003<32> l2308545E
l2308545E:
	a6_48 = 2<32>
	t1_119 = 0<32>
	a7_147 = 0<32>
l230853B8:
	word32 a4_58 = a5 & 0xE000003<32>
	branch a4_58 == 0x4000000<32> l2308546E
l2308546E:
	t6_121 = (a5 >>u 2<i32> & 7<32>) + 8<32> << 7<u32>
	a6_48 = 4<32>
	t1_119 = 0<32>
	a7_147 = 0<32>
l230853C4:
	branch a4_58 == 0x4000002<32> l23085450
l23085450:
	branch (a5 >>u 7<i32> & 0x1F<32>) == 0<32> l230853D6
l23085456:
	a6_48 = 4<32>
	t1_119 = 0<32>
	a7_147 = 0<32>
l230853CA:
	branch a4_58 == 0x6000000<32> l23085480
l23085480:
	t6_121 = (a5 >>u 2<i32> & 7<32>) + 8<32> << 7<u32>
	a6_48 = 4<32>
	t1_119 = 1<32>
	a7_147 = 0<32>
l230853D0:
	branch a4_58 == 0x6000002<32> l230853DE
l230853DE:
	a6_48 = 4<32>
	t1_119 = 1<32>
	a7_147 = 0<32>
l230853E4:
	word32 a6_99 = a6_48 + t5_38
	word32 a5_100 = t5_38
l230853F2:
	__csrrs(mstatus, 0<32>)
	a5_100 = a5_100 + 1<32>
	word32 t0_114 = CONVERT(Mem113[a5_100 + -1<i32>:byte], byte, word32)
	__csrrw(mstatus, 0<32>)
	word32 a4_106 = a5_100 - t5_38 + (fp + 0xFFFFFFF8<32>)
	Mem115[a4_106:byte] = SLICE(t0_114, byte, 0)
	branch a6_99 != a5_100 l230853F2
l23085416:
	branch t1_119 != 0<32> l2308543A
l2308543A:
	Mem137[a4_106:word32] = ((t6_121 >>u 7<u32> & 0x1F<32>) + 1<32> << 2<i32>) + a0
	Mem142[a0:word32] = t3_31
	return
l2308541C:
	Mem151[(t6_121 >>u 5<u32> & 124<i32>) + a0 + 124<i32>:word32] = a4_106 << a7_147 >> a7_147
	Mem152[a0:word32] = t3_31
	return
misaligned_load_trap_exit:
l230853D6:
	__csrrw(mcause, 5<32>)
	__ebreak()
l230853DC:


void misaligned_store_trap(word32 gp, word32 a0, word32 a2, word32 a5, word32 fs0, word32 fs1, word32 fa0, word32 fa1, word32 fa2, word32 fa3, word32 fa4, word32 fa5, word32 mstatus, word32 mcause, word32 mtval)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exception_entry
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] fa0:[0..31] fa1:[0..31] fa2:[0..31] fa3:[0..31] fa4:[0..31] fa5:[0..31] fs0:[0..31] fs1:[0..31] gp:[0..31] mcause:[0..31] mstatus:[0..31] mtval:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa1 fa2 fa3 fa4 fa5 fs0 fs1 gp mcause mstatus mtval t0 t1 t3 t4
// Preserved: sp
misaligned_store_trap_entry:
l23085492:
	__csrrs(mstatus, 0<32>)
	branch (a2 & 2<i32>) != 0<32> l230854B4
l230854B4:
	a5 = CONVERT(Mem0[a2:uint16], uint16, word32)
	branch (a5 & 3<32>) != 3<32> l230854C8
l230854C0:
	a5 = a5 + (CONVERT(Mem0[a2 + 2<i32>:uint16], uint16, word32) << 16<i32>)
l230854A4:
	a2 = Mem0[a5:word32]
	branch (a5 & 3<32>) == 3<32> l230854C8
l230854AE:
	a5 = CONVERT(SLICE(a5, word16, 0), word16, word32)
l230854C8:
	__csrrw(mstatus, 0<32>)
	word32 t4_30 = 4<32>
	branch (a5 & 3<i32>) == 3<32> l230854DE
l230854DC:
	t4_30 = 2<32>
l230854DE:
	word32 a4_104
	word32 a4_48 = a5 & 0x700007F<32>
	word32 t4_51 = t4_30 + a2
	branch a4_48 == 0x2000023<32> l23085584
l23085584:
	a4_104 = 4<32>
l23085504:
	branch a4_48 == 0x2000027<32> l2308553C
l2308553C:
	word32 a5_54 = a5 >>u 17<i32>
	word32 a5_58 = 0x23085544<p32> + (a5_54 & 248<i32>)
	word32 mcause_73
	word32 mtval_75
	word32 gp_76
	word32 fa4_78
	word32 fa5_79
	word32 fa3_80
	word32 fa2_81
	word32 fa1_82
	word32 fa0_83
	word32 fs1_84
	word32 fs0_85
	call a5_58 + 154<i32> (retsize: 0;)
		uses: a0:a5_54 & 248<i32>,a2:0x2000027<32>,a4:4<32>,a5:a5_58,fa0:fa0_83,fa1:fa1_82,fa2:fa2_81,fa3:fa3_80,fa4:fa4_78,fa5:fa5_79,fs0:fs0_85,fs1:fs1_84,gp:gp_76,mcause:mcause_73,mstatus:mstatus,mtval:mtval_75,t0:0x2308554E<p32>
		defs: fa0:fa0_83,fa1:fa1_82,fa2:fa2_81,fa3:fa3_80,fa4:fa4_78,fa5:fa5_79,fs0:fs0_85,fs1:fs1_84,gp:gp_76,mcause:mcause_73,mtval:mtval_75
	return
l2308550C:
	branch a4_48 == 0x1000023<32> l23085594
l23085594:
	a4_104 = 2<32>
l23085516:
	word32 a4_91 = a5 & 0xE000003<32>
	branch a4_91 == 0xC000000<32> l23085588
l23085588:
	a4_104 = 4<32>
l23085524:
	branch a4_91 == 0xC000002<32> l230855B2
l230855B2:
	branch (a5 >>u 7<u32> & 0x1F<32>) == 0<32> l23085534
l230855BA:
	a4_104 = 4<32>
l23085550:
	word32 a5_116 = fp + 0xFFFFFFF8<32>
	word32 a4_118 = a4_104 + (fp + 0xFFFFFFF8<32>)
	word32 a7_119 = __csrrs(mtval, gp) - (fp + 0xFFFFFFF8<32>)
l2308555C:
	word32 a0_124 = CONVERT(Mem123[a5_116:byte], byte, word32)
	__csrrs(mstatus, 0<32>)
	Mem130[a7_119 + a5_116:byte] = SLICE(a0_124, byte, 0)
	__csrrw(mstatus, 0<32>)
	a5_116 = a5_116 + 1<32>
	branch a4_118 != a5_116 l2308555C
l2308557C:
	Mem137[a0:word32] = t4_51
	return
l2308552A:
	branch a4_91 == 0xE000000<32> l23085598
l23085598:
	word32 a0_142 = (a5 >>u 2<u32> & 7<32>) + 8<32>
	word32 a5_146 = 0x230855A4<p32> + (a0_142 << 3<i32>)
	switch (a0_142 << 3<i32>) { l2308561E l23085626 l2308562E l23085636 l2308563E l23085646 l2308564E l23085656 }
l23085656:
	word32 mcause_164
	word32 t0_165
	word32 fa4_169
	word32 fa3_171
	word32 fa2_172
	word32 fa1_173
	word32 fa0_174
	word32 fs1_175
	word32 fs0_176
	call 0x230855AE<p32> (retsize: 0;)
		uses: a0:fa5,a2:0xE000000<32>,a5:a5_146,fa0:fa0_174,fa1:fa1_173,fa2:fa2_172,fa3:fa3_171,fa4:fa4_169,fa5:fa5,fs0:fs0_176,fs1:fs1_175,gp:gp,mcause:mcause_164,mstatus:mstatus,mtval:mtval,t0:t0_165
		defs: fa0:fa0_174,fa1:fa1_173,fa2:fa2_172,fa3:fa3_171,fa4:fa4_169,fs0:fs0_176,fs1:fs1_175,mcause:mcause_164,t0:t0_165
	return
l2308564E:
	word32 mcause_193
	word32 t0_194
	word32 fa3_200
	word32 fa2_201
	word32 fa1_202
	word32 fa0_203
	word32 fs1_204
	word32 fs0_205
	call 0x230855AE<p32> (retsize: 0;)
		uses: a0:fa4,a2:0xE000000<32>,a5:a5_146,fa0:fa0_203,fa1:fa1_202,fa2:fa2_201,fa3:fa3_200,fa4:fa4,fa5:fa5,fs0:fs0_205,fs1:fs1_204,gp:gp,mcause:mcause_193,mstatus:mstatus,mtval:mtval,t0:t0_194
		defs: fa0:fa0_203,fa1:fa1_202,fa2:fa2_201,fa3:fa3_200,fs0:fs0_205,fs1:fs1_204,mcause:mcause_193,t0:t0_194
	return
l23085646:
	word32 mcause_222
	word32 t0_223
	word32 fa2_230
	word32 fa1_231
	word32 fa0_232
	word32 fs1_233
	word32 fs0_234
	call 0x230855AE<p32> (retsize: 0;)
		uses: a0:fa3,a2:0xE000000<32>,a5:a5_146,fa0:fa0_232,fa1:fa1_231,fa2:fa2_230,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_234,fs1:fs1_233,gp:gp,mcause:mcause_222,mstatus:mstatus,mtval:mtval,t0:t0_223
		defs: fa0:fa0_232,fa1:fa1_231,fa2:fa2_230,fs0:fs0_234,fs1:fs1_233,mcause:mcause_222,t0:t0_223
	return
l2308563E:
	word32 mcause_251
	word32 t0_252
	word32 fa1_260
	word32 fa0_261
	word32 fs1_262
	word32 fs0_263
	call 0x230855AE<p32> (retsize: 0;)
		uses: a0:fa2,a2:0xE000000<32>,a5:a5_146,fa0:fa0_261,fa1:fa1_260,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_263,fs1:fs1_262,gp:gp,mcause:mcause_251,mstatus:mstatus,mtval:mtval,t0:t0_252
		defs: fa0:fa0_261,fa1:fa1_260,fs0:fs0_263,fs1:fs1_262,mcause:mcause_251,t0:t0_252
	return
l23085636:
	word32 mcause_280
	word32 t0_281
	word32 fa0_290
	word32 fs1_291
	word32 fs0_292
	call 0x230855AE<p32> (retsize: 0;)
		uses: a0:fa1,a2:0xE000000<32>,a5:a5_146,fa0:fa0_290,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_292,fs1:fs1_291,gp:gp,mcause:mcause_280,mstatus:mstatus,mtval:mtval,t0:t0_281
		defs: fa0:fa0_290,fs0:fs0_292,fs1:fs1_291,mcause:mcause_280,t0:t0_281
	return
l2308562E:
	word32 mcause_309
	word32 t0_310
	word32 fs1_320
	word32 fs0_321
	call 0x230855AE<p32> (retsize: 0;)
		uses: a0:fa0,a2:0xE000000<32>,a5:a5_146,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_321,fs1:fs1_320,gp:gp,mcause:mcause_309,mstatus:mstatus,mtval:mtval,t0:t0_310
		defs: fs0:fs0_321,fs1:fs1_320,mcause:mcause_309,t0:t0_310
	return
l23085626:
	word32 mcause_338
	word32 t0_339
	word32 fs0_350
	call 0x230855AE<p32> (retsize: 0;)
		uses: a0:fs1,a2:0xE000000<32>,a5:a5_146,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0_350,fs1:fs1,gp:gp,mcause:mcause_338,mstatus:mstatus,mtval:mtval,t0:t0_339
		defs: fs0:fs0_350,mcause:mcause_338,t0:t0_339
	return
l2308561E:
	word32 mcause_367
	word32 t0_368
	call 0x230855AE<p32> (retsize: 0;)
		uses: a0:fs0,a2:0xE000000<32>,a5:a5_146,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0,fs1:fs1,gp:gp,mcause:mcause_367,mstatus:mstatus,mtval:mtval,t0:t0_368
		defs: mcause:mcause_367,t0:t0_368
	return
l2308552E:
	branch a4_91 == 0xE000002<32> l230855C8
l230855C8:
	word32 a5_381 = a5 << 1<i32>
	word32 a5_385 = 0x230855D0<p32> + (a5_381 & 248<i32>)
	word32 mcause_399
	call a5_385 + 14<i32> (retsize: 0;)
		uses: a0:a5_381 & 248<i32>,a2:0xE000002<32>,a4:4<32>,a5:a5_385,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0,fs1:fs1,gp:gp,mcause:mcause_399,mstatus:mstatus,mtval:mtval,t0:0x230855DA<p32>
		defs: mcause:mcause_399
	return
misaligned_store_trap_exit:
l23085534:
	__csrrw(mcause, 7<32>)
	__ebreak()
l2308553A:


void backtrace_riscv()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      exception_entry
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
backtrace_riscv_entry:
l230857DE:
	return
backtrace_riscv_exit:


word32 bl_sha_mutex_take(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg94, word32 dwArgAC, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_F_fast.constprop.0
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00AC:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_sha_mutex_take_entry:
l230857E2:
	word32 a0_14
	word32 a1_143
	word32 a2_144
	word32 a3_145
	word32 a4_146
	word32 a5_147
	word32 s8_148
	word32 s1_114
	word32 s2_119
	word32 s3_120
	word32 s4_121
	xQueueSemaphoreTake(Mem0[0x4200F594<32>:int32], 0xFFFFFFFF<32>, a2, a3, a4, 0x4200F000<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_114, out a0_14, out a1_143, out a2_144, out a3_145, out a4_146, out a5_147, out s2_119, out s3_120, out s4_121, out s8_148)
	branch a0_14 == 1<32> l2308584A
l230857FC:
	branch CONVERT(Mem9[0x420266B4<32>:byte], byte, word32) >u 4<32> l2308584A
l2308580C:
	branch CONVERT(Mem9[0x420280F2<32>:byte], byte, word32) >u 4<32> l2308584A
l23085818:
	branch Mem9[0x4200F560<32>:int32] == 0<32> l23085852
l23085852:
	word32 a5_149
	xTaskGetTickCount(out a5_149)
l23085822:
	word32 a5_150
	xTaskGetTickCountFromISR(out a5_150)
l23085826:
	word32 a0_151
	word32 a1_152
	word32 a2_153
	word32 a3_154
	word32 a4_155
	word32 a5_156
	word32 s6_157
	word32 s7_158
	word32 s8_159
	word32 s9_160
	word32 s10_161
	word32 s11_162
	ra = bl_printk(ra, 0x230C66D0<32>, 0x230C66C0<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_114, out a0_151, out a1_152, out a2_153, out a3_154, out a4_155, out a5_156, out s2_119, out s3_120, out s4_121, out s5, out s6_157, out s7_158, out s8_159, out s9_160, out s10_161, out s11_162)
l2308584A:
	s1Out = s1_114
	s2Out = s2_119
	s3Out = s3_120
	s4Out = s4_121
	s5Out = s5
	return ra
bl_sha_mutex_take_exit:


word32 bl_sha_mutex_give(word32 ra, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg94, word32 dwArgAC, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Bl_F_fast.constprop.0
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00AC:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: ra s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_sha_mutex_give_entry:
l23085858:
	word32 a0_14
	word32 a7_156
	word32 s6_159
	word32 s5_158
	word32 s4_157
	word32 a4_154
	word32 a5_155
	word32 a2_152
	word32 a3_153
	word32 a1_151
	word32 s8_160
	word32 s1_122
	word32 s2_127
	word32 s3_128
	xQueueGenericSend(Mem0[0x4200F594<32>:int32], 0<32>, 0<32>, a4, 0x4200F000<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_122, out a0_14, out a1_151, out a2_152, out a3_153, out a4_154, out a5_155, out a7_156, out s2_127, out s3_128, out s4_157, out s5_158, out s6_159, out s8_160)
	branch a0_14 == 1<32> l230858C4
l23085876:
	branch CONVERT(Mem11[0x420266B4<32>:byte], byte, word32) >u 4<32> l230858C4
l23085886:
	branch CONVERT(Mem11[0x420280F2<32>:byte], byte, word32) >u 4<32> l230858C4
l23085892:
	branch Mem11[0x4200F560<32>:int32] == 0<32> l230858CC
l230858CC:
	word32 a5_161
	xTaskGetTickCount(out a5_161)
l2308589C:
	word32 a5_162
	xTaskGetTickCountFromISR(out a5_162)
l230858A0:
	word32 a0_163
	word32 a1_164
	word32 a2_165
	word32 a3_166
	word32 a4_167
	word32 a5_168
	word32 s4_169
	word32 s5_170
	word32 s6_171
	word32 s7_172
	word32 s8_173
	word32 s9_174
	word32 s10_175
	word32 s11_176
	ra = bl_printk(ra, 0x230C6694<32>, 0x230C66C0<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_122, out a0_163, out a1_164, out a2_165, out a3_166, out a4_167, out a5_168, out s2_127, out s3_128, out s4_169, out s5_170, out s6_171, out s7_172, out s8_173, out s9_174, out s10_175, out s11_176)
l230858C4:
	s1Out = s1_122
	s2Out = s2_127
	s3Out = s3_128
	return ra
bl_sha_mutex_give_exit:


void bl_sha_init(word32 ra, word32 a0, word32 a1, word32 a5, word32 dwArg94)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hmac_sha1_fast
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31] Stack +0094:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s8 t0 t1 t3
// Preserved: sp
bl_sha_init_entry:
l230858D2:
	word32 a5_18 = Sec_Eng_SHA256_Init(ra, a0, a1, a5, ra, dwArg94)
l230858EC_thunk_Sec_Eng_SHA_Start:
	Sec_Eng_SHA_Start(a5_18)
	return
bl_sha_init_exit:


word32 bl_sha_update(word32 a0, word32 a1, word32 a2, word32 s5, word32 dwArg98, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hmac_sha1_fast
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] s5:[0..31] Stack +0098:[0..31]
// LiveOut: a1 a2 a4 s0 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
bl_sha_update_entry:
l230858F0:
	word32 a1_14
	word32 a4_17
	word32 s0_21
	word32 s2_23
	word32 s3_24
	word32 s4_25
	word32 s5_26
	word32 s1_43
	word32 a0_44
	word32 s6_45
	Sec_Eng_SHA256_Update(a0, a1, a2, s5, dwArg98, out s0_21, out s1_43, out a0_44, out a1_14, out a4_17, out s2_23, out s3_24, out s4_25, out s5_26, out s6_45)
	a1Out = a1_14
	a2Out = dwArg10
	a4Out = a4_17
	s2Out = s2_23
	s3Out = s3_24
	s4Out = s4_25
	s5Out = s5_26
	return s0_21
bl_sha_update_exit:


word32 bl_sha_finish(word32 a1, word32 a4, word32 s5, word32 dwArg78, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      utils_hmac_sha1_fast
// MayUse:  a1:[0..31] a4:[0..31] s5:[0..31] Stack +0078:[0..31]
// LiveOut: ra s0 s1 s2 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
bl_sha_finish_entry:
l23085904:
	word32 s0_19
	word32 s1_20
	word32 s2_21
	word32 s4_23
	word32 s5_24
	word32 s6_25
	word32 ra_18 = Sec_Eng_SHA256_Finish(a1, a4, s5, dwArg78, out s0_19, out s1_20, out s2_21, out s4_23, out s5_24, out s6_25)
	s0Out = s0_19
	s1Out = s1_20
	s2Out = s2_21
	s4Out = s4_23
	s5Out = s5_24
	s6Out = s6_25
	return ra_18
bl_sha_finish_exit:


word32 hal_hbn_init(word32 ra, word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      deep_sleep
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a2 a3 a4 ra s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
hal_hbn_init_entry:
l23085916:
	word32 a2_160
	word32 a4_141
	word32 a3_140
	word32 ra_104
	word32 s1_145
	word32 s3_147
	word32 a0_239
	word32 a5_6 = a1 + -1<i32> << 24<i32>
	branch a5_6 >> 24<i32> >= 0<32> l2308596C
l2308596C:
	word32 a0_21
	word32 s3_556
	word32 s8_558
	word32 s4_557
	word32 a1_549
	word32 a2_550
	word32 a5_553
	word32 a6_554
	word32 s2_555
	word32 a3_551
	word32 a4_552
	word32 s1_548
	word32 s0_28 = pvPortMalloc(ra, s1, a1 + 3<i32>, a3, a4, a5_6 >> 24<i32>, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_548, out a0_21, out a1_549, out a2_550, out a3_551, out a4_552, out a5_553, out a6_554, out s2_555, out s3_556, out s4_557, out s8_558)
	word32 s1_105 = a0_21
	branch a0_21 != 0<32> l230859B2
l230859B2:
	word32 a0_175
	Mem39[a0_21 + 1<i32>:byte] = 1<8>
	Mem40[a0_21:byte] = SLICE(a1, byte, 0)
	word32 a5_563
	word32 a6_564
	word32 a7_565
	word32 a1_561
	word32 a2_562
	word32 a4_102
	word32 a3_101
	memcpy(a0_21 + 2<32>, s0_28, a1, out a1_561, out a2_562, out a3_101, out a4_102, out a5_563, out a6_564, out a7_565)
	word32 a5_118 = Mem40[0x4200F70C<32>:int32]
	ra_104 = ra
	branch a5_118 != 0<32> l23085A56
l230859D2:
	word32 a0_60
	word32 a2_588
	word32 a1_587
	word32 a6_589
	word32 s2_590
	word32 s3_591
	word32 s4_592
	word32 s8_593
	Mem75[a0_60:word32] = pvPortMalloc(ra, a0_21, 8<32>, a3_101, a4_102, a5_118, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_105, out a0_60, out a1_587, out a2_588, out a3_101, out a4_102, out a5_118, out a6_589, out s2_590, out s3_591, out s4_592, out s8_593)
	branch a0_60 != 0<32> l23085A4A
l23085A4A:
	utils_notifier_chain_init(a0_60)
	ra_104 = ra
l230859DC:
	branch Mem75[0x4200F560<32>:int32] == 0<32> l23085A44
l23085A44:
	word32 a5_594
	xTaskGetTickCount(out a5_594)
l230859E6:
	word32 a5_595
	xTaskGetTickCountFromISR(out a5_595)
l230859EA:
	word32 a0_598
	word32 a1_599
	word32 a2_600
	word32 s2_601
	word32 s3_602
	word32 s4_603
	word32 s5_604
	word32 s6_605
	word32 s7_606
	word32 s8_607
	word32 s9_608
	word32 s10_609
	word32 s11_610
	ra_104 = bl_printk(ra, 0x230C675C<32>, 0x230C6710<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_105, out a0_598, out a1_599, out a2_600, out a3_101, out a4_102, out a5_118, out s2_601, out s3_602, out s4_603, out s5_604, out s6_605, out s7_606, out s8_607, out s9_608, out s10_609, out s11_610)
l23085A0C:
	branch a5_118 != 0<32> l23085A56
l23085A56:
	word32 a0_137
	word32 a1_580
	word32 a5_582
	word32 a2_581
	word32 s4_585
	word32 a6_583
	word32 s8_586
	word32 s2_584
	pvPortMalloc(ra_104, s1_105, 0x10<32>, a3_101, a4_102, a5_118, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_145, out a0_137, out a1_580, out a2_581, out a3_140, out a4_141, out a5_582, out a6_583, out s2_584, out s3_147, out s4_585, out s8_586)
	branch a0_137 != 0<32> l23085A94
l23085A94:
	Mem155[0x23085AC8<32>:word32] = a0_137
	Mem156[s1_145 + 8<i32>:word32] = a0_137
	a2_160 = utils_notifier_chain_register(a0_137, a0_137)
l23085A60:
	branch Mem136[0x4200F560<32>:int32] == 0<32> l23085A8E
l23085A8E:
	word32 a5_611
	xTaskGetTickCount(out a5_611)
l23085A6A:
	word32 a5_612
	xTaskGetTickCountFromISR(out a5_612)
l23085A6E:
	a0_175 = 0x230C675C<32>
l23085A10:
	branch Mem75[0x4200F560<32>:int32] == 0<32> l23085A50
l23085A50:
	word32 a5_596
	xTaskGetTickCount(out a5_596)
l23085A1A:
	word32 a5_597
	xTaskGetTickCountFromISR(out a5_597)
l23085A1E:
	a0_175 = 0x230C6780<32>
l23085A3C:
	word32 a0_613
	word32 a1_614
	word32 a5_615
	word32 s2_616
	word32 s4_617
	word32 s5_618
	word32 s6_619
	word32 s7_620
	word32 s8_621
	word32 s9_622
	word32 s10_623
	word32 s11_624
	ra_104 = bl_printk(ra_104, a0_175, 0x230C6710<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_145, out a0_613, out a1_614, out a2_160, out a3_140, out a4_141, out a5_615, out s2_616, out s3_147, out s4_617, out s5_618, out s6_619, out s7_620, out s8_621, out s9_622, out s10_623, out s11_624)
l23085A40:
l2308597E:
	branch Mem17[0x4200F560<32>:int32] == 0<32> l230859AC
l230859AC:
	word32 a5_566
	xTaskGetTickCount(out a5_566)
l23085988:
	word32 a5_567
	xTaskGetTickCountFromISR(out a5_567)
l2308598C:
	a0_239 = 0x230C673C<32>
l2308592A:
	branch Mem12[0x4200F560<32>:int32] == 0<32> l23085966
l23085966:
	word32 a5_559
	xTaskGetTickCount(out a5_559)
l23085934:
	word32 a5_560
	xTaskGetTickCountFromISR(out a5_560)
l23085938:
	a0_239 = 0x230C671C<32>
l23085956:
	word32 a0_568
	word32 s4_572
	word32 s6_574
	word32 s7_575
	word32 s2_571
	word32 a1_569
	word32 a5_570
	word32 s5_573
	word32 s9_577
	word32 s8_576
	word32 s10_578
	word32 s11_579
	ra_104 = bl_printk(ra, a0_239, 0x230C6710<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_145, out a0_568, out a1_569, out a2_160, out a3_140, out a4_141, out a5_570, out s2_571, out s3_147, out s4_572, out s5_573, out s6_574, out s7_575, out s8_576, out s9_577, out s10_578, out s11_579)
l2308595C:
	s1Out = s1_145
	a2Out = a2_160
	a3Out = a3_140
	a4Out = a4_141
	s3Out = s3_147
	return ra_104
hal_hbn_init_exit:


word32 hal_hbn_enter(word32 ra, word32 s0, ptr32 & s1Out, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      deep_sleep
// MayUse:  ra:[0..31] s0:[0..31]
// LiveOut: a2 ra s1
// Trashed: a0 a1 a2 a5 ra s1 t3 tp
// Preserved: sp
hal_hbn_enter_entry:
l23085AA8:
	word32 a2_14
	word32 s1_17
	word32 ra_16 = utils_notifier_chain_call(ra, s0, Mem6[0x4200F70C<32>:int32], fp + 0xFFFFFFEC<32>, 0x4200F000<32>, out s1_17, out a2_14)
	s1Out = s1_17
	a2Out = a2_14
	return ra_16
hal_hbn_enter_exit:


void bl_hbn_enter(word32 ra, word32 s0, word32 a0, word32 a1, word32 dwArg00, word32 dwArg28, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg68, word32 dwArg8C, word32 dwArgDC, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0028:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00DC:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_hbn_enter_entry:
l23085AC4:
	word32 a4_497
	word32 a7_500
	word32 a2_496
	word32 a6_499
	word32 a1_495
	word32 a5_498
	word32 a3_131
	memcpy(fp + -36<i32>, 0x230C67A8<32>, 0x14<32>, out a1_495, out a2_496, out a3_131, out a4_497, out a5_498, out a6_499, out a7_500)
	word32 s2_103 = a1
	word32 s0_124 = a0
	word32 s1_100 = a0 + 2<i32>
	branch a0 == 0<32> l23085B20
l23085AE8:
	word32 a3_42
	word32 s1_71
	word32 s5_77
	word32 s6_78
	word32 t4_534
	word32 s11_533
	word32 s9_531
	word32 s10_532
	word32 s7_529
	word32 s8_530
	word32 s4_528
	word32 s3_527
	word32 s1_501
	word32 a0_502
	word32 a2_504
	word32 a4_505
	word32 a7_507
	word32 s2_508
	word32 s4_510
	word32 a3_522
	word32 s3_509
	word32 a7_525
	word32 a5_506
	word32 a0_519
	word32 s2_526
	word32 a2_521
	word32 a1_520
	word32 s5_511
	word32 a5_524
	word32 a4_523
	word32 t4_518
	word32 s9_515
	word32 s11_517
	word32 s8_514
	word32 s7_513
	word32 a1_503
	word32 s6_512
	word32 s10_516
	word32 a4_535
	word32 a5_536
	word32 s3_537
	word32 s4_538
	word32 s5_539
	word32 s6_540
	word32 s7_541
	word32 s8_542
	word32 s9_543
	ra = log_buf_out(printf(printf(ra, 0x230C67BC<32>, a3_131, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_501, out a0_502, out a1_503, out a2_504, out a3_42, out a4_505, out a5_506, out a7_507, out s2_508, out s3_509, out s4_510, out s5_511, out s6_512, out s7_513, out s8_514, out s9_515, out s10_516, out s11_517, out t4_518), 0x230C67D0<32>, a3_42, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_71, out a0_519, out a1_520, out a2_521, out a3_522, out a4_523, out a5_524, out a7_525, out s2_526, out s3_527, out s4_528, out s5_77, out s6_78, out s7_529, out s8_530, out s9_531, out s10_532, out s11_533, out t4_534), s1_71, CONVERT(Mem19[a0:byte], byte, word32), 0<32>, s5_77, s6_78, s0, dwLoc10, dwLoc0C, dwArg00, dwArg28, dwArg3C, dwArg4C, dwArgDC, out s0_124, out s1_100, out a3_131, out a4_535, out a5_536, out s2_103, out s3_537, out s4_538, out s5_539, out s6_540, out s7_541, out s8_542, out s9_543)
l23085B20:
	word32 a0_171
	word32 a5_120 = Mem19[s2_103:int32] + 999<i32> >>u 1000<i32>
	branch s1_100 == 0<32> l23085B46
l23085B34:
	word32 s1_125 = CONVERT(Mem122[s0_124:byte], byte, word32)
	branch (s1_125 + -1<i32> & 255<i32>) <=u 1<32> l23085B60
l23085B60:
	word32 s1_154
	word32 a1_148
	word32 s2_157
	word32 a3_150
	word32 a5_129 = CONVERT(Mem122[s0_124 + 2<i32>:byte], byte, word32)
	branch s1_125 != 1<32> l23085BBC
l23085BBC:
	word32 a5_132
	word32 a4_130 = 7<32>
	branch a5_129 != 7<32> l23085BDC
l23085BDC:
	a3_131 = 8<32>
	branch a5_129 != 8<32> l23085BE8
l23085BE2:
	a5_132 = CONVERT(Mem122[s0_124 + 3<i32>:byte], byte, word32)
l23085BC2:
	a4_130 = CONVERT(Mem122[s0_124 + 3<i32>:byte], byte, word32)
	a5_132 = 8<32>
l23085BC8:
	branch a5_132 != a4_130 l23085BE8
l23085BCC:
	word32 a0_574
	word32 a2_575
	word32 a4_576
	word32 a5_577
	word32 a7_578
	word32 s3_579
	word32 s4_580
	word32 s5_581
	word32 s6_582
	word32 s7_583
	word32 s8_584
	word32 s9_585
	word32 s10_586
	word32 s11_587
	word32 t4_588
	printf(ra, 0x230C6824<32>, a3_131, a5_120, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_154, out a0_574, out a1_148, out a2_575, out a3_150, out a4_576, out a5_577, out a7_578, out s2_157, out s3_579, out s4_580, out s5_581, out s6_582, out s7_583, out s8_584, out s9_585, out s10_586, out s11_587, out t4_588)
l23085B68:
	branch s1_125 <u (a5_129 + -7<i32> & 255<i32>) l23085BE8
l23085BE8:
	a0_171 = 0x230C6834<32>
l23085B74:
	branch a5_129 != 7<32> l23085BA8
l23085BA8:
	word32 a0_544
	word32 a2_545
	word32 a4_546
	word32 a5_547
	word32 a7_548
	word32 s3_549
	word32 s4_550
	word32 s5_551
	word32 s6_552
	word32 s7_553
	word32 s8_554
	word32 s9_555
	word32 s10_556
	word32 s11_557
	word32 t4_558
	printf(ra, 0x230C6814<32>, a3_131, a5_120, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_154, out a0_544, out a1_148, out a2_545, out a3_150, out a4_546, out a5_547, out a7_548, out s2_157, out s3_549, out s4_550, out s5_551, out s6_552, out s7_553, out s8_554, out s9_555, out s10_556, out s11_557, out t4_558)
l23085BB6:
l23085B7A:
	word32 a0_559
	word32 a2_560
	word32 a4_561
	word32 a5_562
	word32 a7_563
	word32 s3_564
	word32 s4_565
	word32 s5_566
	word32 s6_567
	word32 s7_568
	word32 s8_569
	word32 s9_570
	word32 s10_571
	word32 s11_572
	word32 t4_573
	printf(ra, 0x230C6804<32>, a3_131, a5_120, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_154, out a0_559, out a1_148, out a2_560, out a3_150, out a4_561, out a5_562, out a7_563, out s2_157, out s3_564, out s4_565, out s5_566, out s6_567, out s7_568, out s8_569, out s9_570, out s10_571, out s11_572, out t4_573)
l23085B8A:
	bl_flash_get_flashCfg()
	HBN_Clear_IRQ(1<32>, HBN_Clear_IRQ(0<32>, a3_150))
	call 0x4200C60A<p32> (retsize: 0;)
		uses: a0:fp + -36<i32>,a1:a1_245,ra:0x4200CB9E<p32>,s0:s0_124,s1:s1_250,s2:s2_243,Stack +0008:a5_120,Stack +0020:dwLoc10,Stack +0024:dwLoc0C,Stack +0028:dwLoc08,Stack +0030:dwArg00,Stack +0058:dwArg28,Stack +006C:dwArg3C,Stack +0070:dwArg40,Stack +0074:dwArg44,Stack +007C:dwArg4C,Stack +0098:dwArg68,Stack +00BC:dwArg8C,Stack +010C:dwArgDC
l23085B46:
	a0_171 = 0x230C67F0<32>
l23085B4E:
	word32 s1_589
	word32 a0_590
	word32 a1_591
	word32 a2_592
	word32 a3_593
	word32 a4_594
	word32 a5_595
	word32 a7_596
	word32 s2_597
	word32 s3_598
	word32 s4_599
	word32 s5_600
	word32 s6_601
	word32 s7_602
	word32 s8_603
	word32 s9_604
	word32 s10_605
	word32 s11_606
	word32 t4_607
	printf(ra, a0_171, a3_131, a5_120, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_589, out a0_590, out a1_591, out a2_592, out a3_593, out a4_594, out a5_595, out a7_596, out s2_597, out s3_598, out s4_599, out s5_600, out s6_601, out s7_602, out s8_603, out s9_604, out s10_605, out s11_606, out t4_607)
l23085B52:
	0<32> = dwArg0128
	return
bl_hbn_enter_exit:


void httpc_tcp_sent()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
httpc_tcp_sent_entry:
l23085BF2:
	return
httpc_tcp_sent_exit:


word32 httpc_get_internal_addr(word32 a0, word32 a1, word32 a4, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_dns_found
//      httpc_get_file
//      httpc_get_file_dns
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a5 t1
// Preserved: sp
httpc_get_internal_addr_entry:
l23085BF6:
	branch a0 + 4<i32> == a1 l23085C02
l23085BFE:
	Mem9[a4 + 4<i32>:word32] = a0
l23085C02:
	word32 a0_13 = Mem11[a0:word32]
l23085C12_thunk_altcp_connect:
	word32 a5_20
	word32 a0_18 = altcp_connect(a0_13, a0 + 4<i32>, out a5_20)
	a3Out = 0x23085F98<32>
	a5Out = a5_20
	return a0_18
httpc_get_internal_addr_exit:


word32 httpc_free_state(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_connected
//      httpc_init_connection_common.constprop.5
//      httpc_get_file
//      httpc_get_file_dns
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5 s1 s2 s3 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra s0 sp
httpc_free_state_entry:
l23085C16:
	word32 s0_19
	word32 ra_41
	word32 a0_12 = Mem9[a0 + 16<i32>:word32]
	ra_41 = ra
	s0_19 = s0
	branch a0_12 == 0<32> l23085C2C
l23085C24:
	word32 s1_26
	word32 a7_253
	word32 a2_251
	word32 s5_254
	word32 s6_255
	word32 s8_256
	word32 a5_252
	word32 a1_250
	ra_41 = pbuf_free(ra, a0_12, a3, a4, s4, mstatus, dwArg0118, out s0_19, out s1_26, out a0_12, out a1_250, out a2_251, out a3, out a4, out a5_252, out a7_253, out s2, out s3, out s4, out s5_254, out s6_255, out s8_256, out mstatus)
	Mem42[s1_26 + 16<i32>:word32] = 0<32>
l23085C2C:
	branch a0_12 == 0<32> l23085C38
l23085C30:
	word32 s1_61
	word32 a0_261
	word32 a1_262
	word32 a2_263
	word32 a5_264
	word32 a7_265
	word32 s5_266
	word32 s8_268
	word32 s6_267
	pbuf_free(ra_41, a0_12, a3, a4, s4, mstatus, dwArg0118, out s0_19, out s1_61, out a0_261, out a1_262, out a2_263, out a3, out a4, out a5_264, out a7_265, out s2, out s3, out s4, out s5_266, out s6_267, out s8_268, out mstatus)
	Mem77[s1_61 + 20<i32>:word32] = 0<32>
l23085C38:
	word32 a3_97
	word32 a4_98
	word32 s1_103
	word32 s2_104
	word32 s3_105
	word32 s5_107
	word32 s6_108
	word32 a1_257
	word32 a7_258
	word32 s4_259
	word32 s8_260
	word32 a5_136
	word32 s0_102 = mem_free(Mem80[s0_19:word32], a3, a4, s2, s3, s4, mstatus, s0, dwLoc08, dwArg14, ra, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s1_103, out a1_257, out a3_97, out a4_98, out a5_136, out a7_258, out s2_104, out s3_105, out s4_259, out s5_107, out s6_108, out s8_260)
	branch s0_102 != 0<32> l23085C4E
l23085C4E:
	altcp_arg(s0_102, 0<32>)
	altcp_recv(s0_102, 0<32>)
	altcp_err(s0_102, 0<32>)
	word32 a5_130
	altcp_poll(s0_102, 0<32>, 0<32>, a5_136, out a5_130)
	altcp_sent(s0_102, 0<32>)
	branch altcp_close(s0_102, a5_130, out a5_136) == 0<32> l23085C42
l23085C80:
	a5_136 = altcp_abort(s0_102, a5_136)
l23085C42:
l23085C44:
	a3Out = a3_97
	a4Out = a4_98
	a5Out = a5_136
	s2Out = s2_104
	s3Out = s3_105
	s5Out = s5_107
	s6Out = s6_108
	return s1_103
httpc_free_state_exit:


void httpc_close(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_recv
//      httpc_dns_found
//      httpc_tcp_poll
//      httpc_tcp_err
//      httpc_tcp_connected
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 sp
httpc_close_entry:
l23085C8A:
	branch a0 == 0<32> l23085CB2
l23085CB2:
	return
l23085C8C:
	word32 a0_10 = Mem8[a5 + 32<i32>:word32]
	word32 a4_12 = a3
	word32 s0_13 = a0_10
	word32 a3_15 = a2
	branch a5 == 0<32> l23085CA6
l23085C9C:
	word32 a5_16 = Mem8[a5 + 20<i32>:word32]
	branch a5_16 == 0<32> l23085CA6
l23085CA0:
	word32 a1_73
	word32 a6_74
	word32 a7_75
	word32 s1_76
	word32 s5_77
	word32 s6_78
	word32 s8_79
	word32 t0_80
	word32 t1_81
	word32 t3_82
	word32 t4_83
	word32 t5_84
	word32 t6_85
	word32 tp_86
	call a5_16 (retsize: 0;)
		uses: a0:Mem8[Mem8[a2 + 40<i32>:word32] + 36<i32>:word32],a1:a1_73,a2:a2,a3:a2,a4:a4_25,a5:a5_16,a6:a6_74,a7:a7_75,mstatus:mstatus,ra:ra,s0:a0_10,s1:s1_76,s2:s2,s3:s3,s4:s4,s5:s5_77,s6:s6_78,s8:s8_79,t0:t0_80,t1:t1_81,t3:t3_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
		defs: a1:a1_73,a3:a3_24,a4:a4_25,a6:a6_74,a7:a7_75,ra:ra_22,s0:s0_21,s1:s1_76,s5:s5_77,s6:s6_78,s8:s8_79,t0:t0_80,t1:t1_81,t3:t3_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
l23085CA6:
l23085CAE_thunk_httpc_free_state:
	word32 s6_157
	word32 s5_156
	word32 s3_155
	word32 s2_154
	word32 a5_153
	word32 a4_152
	word32 a3_151
	httpc_free_state(ra, s0, s0_13, a3_15, a4_12, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out a3_151, out a4_152, out a5_153, out s2_154, out s3_155, out s5_156, out s6_157)
	return
httpc_close_exit:


void httpc_tcp_recv(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArgC8, word32 dwArgE8, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
httpc_tcp_recv_entry:
l23085CB4:
	word32 a2_481
	word32 a3_283
	Mem28[0x2A<32>:word32] = a0
	word32 sp_3 = fp + -64<i32>
	word32 s0_101 = a0
	word32 a5_265 = CONVERT(Mem28[a0 + 48<i32>:byte], byte, word32)
	branch a2 != 0<32> l23085D18
l23085D18:
	word32 s3_104 = a1
	word32 s1_102 = a2
	word32 s4_191 = a3
	branch a5_265 != 2<32> l23085D40
l23085D40:
	a0 = Mem28[a0 + 20<i32>:word32]
	branch a0 != 0<32> l23085EEE
l23085EEE:
	pbuf_cat(a0, a2, 2<32>)
l23085D46:
	Mem40[a2 + 20<i32>:word32] = a0
l23085D48:
	branch CONVERT(Mem42[a0 + 48<i32>:byte], byte, word32) != 0<32> l23085EFC
l23085D50:
	s6 = Mem42[a0 + 20<i32>:int32]
	word32 a5_973
	word32 a2_971
	word32 a4_972
	s0_101 = pbuf_memfind(s6, 2<32>, 0<32>, dwArg14, dwArgC8, out s1_102, out a0, out a2_971, out a3, out a4_972, out a5_973, out s2, out s3_104, out s4_191, out s8)
	s7 = 0xFFFFFFF<32>
	s5 = a0
	branch a0 == 0xFFFFFFF<32> l23085EFC
l23085D70:
	s9 = 0x230BF000<32>
	word32 a2_974
	word32 a5_976
	word32 s2_977
	word32 a4_975
	s0_101 = pbuf_memfind(s6, 1<32>, 0<32>, dwArg14, dwArgC8, out s1_102, out a0, out a2_974, out a3, out a4_975, out a5_976, out s2_977, out s3_104, out s4_191, out s8)
	s2 = a0
	branch a0 == 0xFFFFFFF<32> l23085EFC
l23085D88:
	word32 a4_978
	word32 a5_979
	s0_101 = pbuf_memcmp(s6, 0<32>, 5<32>, dwArg34, dwArgE8, out s1_102, out a0, out a3, out a4_978, out a5_979, out s2, out s3_104)
	branch a0 != 0<32> l23085EFC
l23085D9E:
	word32 a4_980
	a0 = pbuf_get_at(s6, 6<32>, out a3, out a4_980)
	branch a0 != 46<i32> l23085EFC
l23085DAE:
	word32 s2_161
	word32 a4_982
	word32 a3_983
	word32 a4_984
	word32 a3_981
	Mem138[s0_101 + 24<i32>:word16] = SLICE(pbuf_get_at(s6, 7<32>, out a3_983, out a4_984) + -48<i32> | CONVERT(SLICE(pbuf_get_at(s6, 5<32>, out a3_981, out a4_982) + -48<i32>, word16, 0), word16, word32) << 8<i32>, word16, 0)
	word32 a0_146
	word32 s8_153
	word32 s2_158
	word32 s3_990
	word32 s4_991
	word32 s1_985
	word32 a2_986
	word32 a4_988
	word32 a5_989
	word32 a3_987
	pbuf_memfind(s6, 1<32>, CONVERT(SLICE(s2 + 1<i32>, word16, 0), word16, word32), dwArg14, dwArgC8, out s1_985, out a0_146, out a2_986, out a3_987, out a4_988, out a5_989, out s2_158, out s3_990, out s4_991, out s8_153)
	branch a0_146 == 0xFFFFFFF<32> l23085EF6
l23085EF6:
	s2_161 = a0 - s2_158
l23085DF4:
	s2_161 = a0_146 - s2_158
l23085DF8:
	word32 a5_1014
	word32 a0_1009
	word32 a1_1010
	word32 a3_1012
	word32 a4_1013
	word32 a2_1011
	word32 t1_1008
	ra = memset(ra, fp + -64<i32>, 0<32>, 0xA<32>, out t1_1008, out a0_1009, out a1_1010, out a2_1011, out a3_1012, out a4_1013, out a5_1014)
	word32 a5_1018
	word32 a4_1017
	word32 a1_1015
	word32 a2_1016
	s0_101 = pbuf_copy_partial(s6, fp + -64<i32>, CONVERT(SLICE(s2_161 + 0xFFFFFFFF<32>, word16, 0), word16, word32), s8_153, out s1_102, out a0, out a1_1015, out a2_1016, out a3, out a4_1017, out a5_1018, out s2, out s3_104, out s4_191, out s8)
	branch s2 != a0 l23085EFC
l23085E18:
	word32 a4_994
	word32 a5_995
	word32 a2_993
	word32 a1_992
	a0 = atoi(fp + -64<i32>, out a1_992, out a2_993, out a3, out a4_994, out a5_995)
	branch a0 >u 0xF0000001<32> l23085EFC
l23085EFC:
	branch CONVERT(Mem227[s0_101 + 48<i32>:byte], byte, word32) == 1<32> l23085E34
l23085E2A:
	Mem232[s0_101 + 26<i32>:word16] = SLICE(a0, word16, 0)
	Mem233[s0_101 + 48<i32>:byte] = 1<8>
l23085E34:
	s6 = Mem235[s0_101 + 20<i32>:int32]
	word32 a5_1021
	word32 s2_1022
	word32 a2_1019
	word32 a4_1020
	s0_101 = pbuf_memfind(s6, 4<32>, 0<32>, dwArg14, dwArgC8, out s1_102, out a0, out a2_1019, out a3, out a4_1020, out a5_1021, out s2_1022, out s3_104, out s4_191, out s8)
	s7 = 0x10000000<32>
	s2 = a0
	branch a0 >u 0xFFFFFFC<32> l23085F06
l23085F06:
	a5_265 = 2<32>
	branch CONVERT(Mem263[s0_101 + 48<i32>:byte], byte, word32) == 2<32> l23085D24
l23085E56:
	Mem268[0x2B<32>:word32] = s0_101
	word32 a0_273
	word32 s1_996
	word32 s2_285
	word32 s3_286
	word32 a5_276
	word32 s8_280
	word32 a2_274
	word32 a4_275
	pbuf_memfind(s6, 0x10<32>, 0<32>, dwArg14, dwArgC8, out s1_996, out a0_273, out a2_274, out a3_283, out a4_275, out a5_276, out s2_285, out s3_286, out s4, out s8_280)
	s7 = 0xFFFFFFF<32>
	branch a0_273 == 0xFFFFFFF<32> l23085EC0
l23085E74:
	word32 a0_295
	word32 s1_997
	pbuf_memfind(s6, 2<32>, a0_273, dwArg14, dwArgC8, out s1_997, out a0_295, out a2_274, out a3_283, out a4_275, out a5_276, out s2_285, out s3_286, out s4, out s8_280)
	branch a0_295 == 0xFFFFFFF<32> l23085EC0
l23085E8A:
	word32 a3_1002
	word32 a4_1003
	word32 a5_1004
	word32 t1_998
	word32 a1_1000
	word32 a2_1001
	word32 a0_999
	ra = memset(ra, fp + -64<i32>, 0<32>, 0x10<32>, out t1_998, out a0_999, out a1_1000, out a2_1001, out a3_1002, out a4_1003, out a5_1004)
	word32 a0_334
	word32 s1_341
	word32 a1_1005
	word32 s0_337 = pbuf_copy_partial(s6, fp + -64<i32>, CONVERT(SLICE(a0_295 - a0_273 + 0xFFFFFFF0<32>, word16, 0), word16, word32), CONVERT(SLICE(a0_273 + 16<i32>, word16, 0), word16, word32), out s1_341, out a0_334, out a1_1005, out a2_274, out a3_283, out a4_275, out a5_276, out s2_285, out s3_286, out s4, out s8_280)
	branch s1_341 != a0_334 l23085EC0
l23085EB4:
	word32 a1_1006
	word32 a0_355 = atoi(fp + -64<i32>, out a1_1006, out a2_274, out a3_283, out a4_275, out a5_276)
	branch a0_355 < 0<32> l23085EC0
l23085EBE:
	Mem370[a0_355 + 44<i32>:word32] = s0_337
l23085EC0:
	word32 s1_374 = CONVERT(SLICE(s2_285 + 4<i32>, word16, 0), word16, word32)
	word32 a5_381
	word32 a0_379 = altcp_recved(s3_286, a5_276, out a5_381)
	branch a5_381 == 0<32> l23085F14
l23085ED2:
	word32 a5_384 = Mem382[a5_381 + 24<i32>:word32]
	branch a5_384 == 0<32> l23085F14
l23085ED6:
	word32 s0_389 = Mem382[s1_374 + 36<i32>:word32]
	word32 t0_425
	word32 t1_426
	word32 a7_427
	word32 t4_428
	word32 t5_429
	word32 t6_430
	word32 t2_431
	call a5_384 (retsize: 0;)
		uses: a0:s0_389,a1:s1_374,a2:a2_387,a3:s1_374,a7:a7_427,mstatus:mstatus,ra:ra_392,s0:s0_389,s1:s1_374,s2:s2_371,s3:s3_376,s4:s4_393,s5:a0_273,s6:s6_236,s7:0xFFFFFFF<32>,s8:s8_397,s9:s9_399,Stack +0054:dwArg14,Stack +0074:dwArg34,Stack +0108:dwArgC8,Stack +0128:dwArgE8,t0:t0_425,t1:t1_426,t2:t2_431,t4:t4_428,t5:t5_429,t6:t6_430
		defs: a0:a0_417,a2:a2_418,a4:a4_419,a5:a5_416,a7:a7_427,ra:ra_406,s0:s0_405,s1:s1_407,s2:s2_408,s3:s3_409,s4:s4_410,s7:s7_413,s9:s9_415,sp:sp_404,t0:t0_425,t1:t1_426,t2:t2_431,t4:t4_428,t5:t5_429,t6:t6_430
	a3_283 = a0_379
	branch a0_379 == 0<32> l23085F14
l23085F14:
	word32 s0_452
	word32 s1_1007
	ra = pbuf_free_header(ra, s1_374, a0_379, s1_374, a2_274, a3_283, a4_275, s4, mstatus, Mem382[sp_3 + 68<i32>:word32], Mem382[sp_3 + 264<i32>:word32], out s0_452, out s1_1007, out a0, out a3, out s2, out s3_104, out s4_191, out s5, out s6, out s8, out mstatus)
	Mem478[s0_452 + 20<i32>:word32] = 0<32>
	Mem479[s0_452 + 48<i32>:byte] = 2<8>
	a5_265 = 2<32>
	s1_102 = a0
	branch a0 == 0<32> l23085F10
l23085F2A:
l23085EE6:
	a2_481 = CONVERT(Mem382[s0_101 + 26<i32>:uint16], uint16, word32)
l23085D24:
	word32 a4_488 = CONVERT(Mem487[s1_102 + 8<i32>:uint16], uint16, word32)
	word32 a5_491 = a5_265 + a4_488
	Mem492[a5_491 + 40<i32>:word32] = Mem487[a5_265 + 40<i32>:word32]
	branch a5_491 == 0<32> l23085F2C
l23085F2C:
	word32 a5_954
	altcp_recved(s3_104, a5_491, out a5_954)
	word32 s4_966
	word32 mstatus_970
	word32 s8_969
	word32 s5_967
	word32 s6_968
	word32 a1_958
	word32 a4_961
	word32 a5_962
	word32 s2_964
	word32 s3_965
	word32 a7_963
	word32 a2_959
	word32 a3_960
	word32 a0_957
	word32 s0_955
	word32 s1_956
	pbuf_free(ra, s1_102, a3, a4_488, s4_191, mstatus, Mem492[sp_3 + 296<i32>:word32], out s0_955, out s1_956, out a0_957, out a1_958, out a2_959, out a3_960, out a4_961, out a5_962, out a7_963, out s2_964, out s3_965, out s4_966, out s5_967, out s6_968, out s8_969, out mstatus_970)
l23085F10:
l23085D34:
	word32 t0_600
	word32 t1_601
	word32 a7_602
	word32 t4_603
	word32 t5_604
	word32 t6_605
	word32 t2_606
	call a5_491 (retsize: 0;)
		uses: a0:a0_544,a1:s3_495,a2:s1_483,a3:s4_512,a7:a7_602,mstatus:mstatus_506,ra:ra_504,s0:Mem492[a0_544 + 36<i32>:word32],s1:s1_483,s2:s2_552,s3:s3_495,s4:s4_512,s5:s5_556,s6:s6_562,s7:s7_566,s8:s8_572,s9:s9_576,Stack +0014:dwArg14,Stack +0034:dwArg34,Stack +00C8:dwArgC8,Stack +00E8:dwArgE8,t0:t0_600,t1:t1_601,t2:t2_606,t4:t4_603,t5:t5_604,t6:t6_605
		defs: a7:a7_602,t0:t0_600,t1:t1_601,t2:t2_606,t4:t4_603,t5:t5_604,t6:t6_605
l23085CD8:
	branch a5_265 != 2<32> l23085CF2
l23085CE0:
	branch a5_265 == 0xFFFFFFFF<32> l23085CF2
l23085CEA:
	branch a5_265 == 0xFFFFFFFF<32> l23085CF2
l23085CF0:
l23085CF2:
	a2_481 = CONVERT(Mem28[a0 + 26<i32>:uint16], uint16, word32)
	a3_283 = 0<32>
l23085CF8:
	httpc_close(ra, s0_101, s0_101, a2_481, a3_283, a5_265, s2, s3, s4, mstatus, Mem637[sp_3 + 20<i32>:word32], Mem637[sp_3 + 148<i32>:word32], Mem637[sp_3 + 200<i32>:word32], Mem637[sp_3 + 232<i32>:word32], Mem637[sp_3 + 264<i32>:word32], Mem637[sp_3 + 280<i32>:word32], Mem637[sp_3 + 296<i32>:word32], Mem637[sp_3 + 328<i32>:word32], Mem637[sp_3 + 360<i32>:word32], Mem637[sp_3 + 392<i32>:word32])
l23085CFE:
	0<32> = dwArg0198
	return
httpc_tcp_recv_exit:


void httpc_dns_found(word32 ra, word32 s0, word32 a1, word32 a2, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
httpc_dns_found_entry:
l23085F3C:
	word32 a3_12
	branch a1 == 0<32> l23085F5A
l23085F5A:
	a3_12 = 0xFFFFFFF0<32>
l23085F46:
	word32 a3_129
	word32 a0_15 = httpc_get_internal_addr(a2, a1, a4, out a3_129, out a5)
	a3_12 = a0_15
	branch a0_15 != 0<32> l23085F5E
l23085F5E:
l23085F68_thunk_httpc_close:
	httpc_close(ra, s0, a2, 0<32>, a3_12, a5, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188)
	return
l23085F52:
	return
httpc_dns_found_exit:


void httpc_tcp_poll(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
httpc_tcp_poll_entry:
l23085F6C:
	branch a0 == 0<32> l23085F82
l23085F6E:
	word32 a0_6 = Mem0[a5 + 12<i32>:word32]
	branch a5 != 0<32> l23085F7C
l23085F7C:
	Mem8[a5 + 0xB<32>:word32] = a0_6
	a5 = a5 + 0xFFFFFFFF<32>
	branch a5 == 0xFFFFFFFF<32> l23085F72
l23085F82:
	return
l23085F72:
l23085F78_thunk_httpc_close:
	httpc_close(ra, s0, a0_6, 0<32>, 0<32>, a5, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188)
	return
httpc_tcp_poll_exit:


void httpc_tcp_err(word32 ra, word32 s0, word32 a0, word32 a1, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
httpc_tcp_err_entry:
l23085F86:
	branch a0 == 0<32> l23085F96
l23085F96:
	return
l23085F8A:
	Mem6[a0:word32] = 0<32>
l23085F92_thunk_httpc_close:
	httpc_close(ra, s0, a0, 0<32>, a1, a5, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188)
	return
httpc_tcp_err_exit:


void httpc_tcp_connected(word32 ra, word32 s0, word32 a1, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
httpc_tcp_connected_entry:
l23085F98:
	word32 a0_9 = Mem7[a5 + 16<i32>:word32]
	word32 a5_21
	word32 a0_19 = altcp_write(Mem7[a0_9:word32], Mem7[a1 + 4<i32>:word32], out a5_21)
	branch a0_19 == 0<32> l23085FC8
l23085FC8:
	word32 a0_26
	word32 a5_34
	word32 s0_130
	word32 s1_131
	word32 a1_132
	word32 a2_133
	word32 a3_134
	word32 a4_135
	word32 a7_136
	word32 s2_137
	word32 s3_138
	word32 s4_139
	word32 s5_140
	word32 s6_141
	word32 s8_142
	word32 mstatus_143
	pbuf_free(ra, a0_19, 1<32>, a4, s4, mstatus, dwArg0118, out s0_130, out s1_131, out a0_26, out a1_132, out a2_133, out a3_134, out a4_135, out a5_34, out a7_136, out s2_137, out s3_138, out s4_139, out s5_140, out s6_141, out s8_142, out mstatus_143)
	Mem52[Mem7[a0_26:word32] + 16<i32>:word32] = 0<32>
	altcp_output(a0_26, a5_34)
	return
l23085FB6:
l23085FC4_thunk_httpc_close:
	httpc_close(ra, s0, a0_9, 0<32>, a0_19, a5_21, s2, s3, s4, mstatus, dwArg14, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, dwArg0168, dwArg0188)
	return
httpc_tcp_connected_exit:


word32 httpc_create_request_string.constprop.6(word32 ra, word32 a0, word32 a2, word32 a4, word32 a5, word32 s3, word32 dwArg18, word32 dwArg24, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg64, word32 dwArg68, word32 dwArg80, word32 dwArg84, word32 dwArg8C, word32 dwArgA8, word32 dwArgCC, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_init_connection_common.constprop.5
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s3:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00CC:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 ra s0 s1 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
httpc_create_request_string.constprop.6_entry:
l23085FE0:
	branch CONVERT(Mem5[a0 + 6<i32>:byte], byte, word32) == 0<32> l2308604C
l2308604C:
	branch CONVERT(Mem20[a0 + 7<i32>:byte], byte, word32) != 1<32> l230860B0
l230860B0:
l230860CA_thunk_snprintf:
	word32 a0_38
	word32 a3_41
	word32 a4_42
	word32 s0_46
	word32 s1_47
	word32 s2_50
	word32 s3_51
	word32 s4_52
	word32 s5_53
	word32 s6_54
	word32 s7_55
	word32 s8_56
	word32 a1_299
	word32 a2_300
	word32 a5_301
	word32 a7_302
	word32 s9_303
	word32 s10_304
	word32 s11_305
	word32 ra_45 = snprintf(ra, a4, a5, 0x230C697C<32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out s0_46, out s1_47, out a0_38, out a1_299, out a2_300, out a3_41, out a4_42, out a5_301, out a7_302, out s2_50, out s3_51, out s4_52, out s5_53, out s6_54, out s7_55, out s8_56, out s9_303, out s10_304, out s11_305)
	s0Out = s0_46
	s1Out = s1_47
	a0Out = a0_38
	a3Out = a3_41
	a4Out = a4_42
	s2Out = s2_50
	s3Out = s3_51
	s4Out = s4_52
	s5Out = s5_53
	s6Out = s6_54
	s7Out = s7_55
	s8Out = s8_56
	return ra_45
l23086056:
	branch CONVERT(Mem20[a0 + 12<i32>:byte], byte, word32) >u 3<32> l23086074
l23086062:
l23086074:
	word32 a1_84
	word32 a2_286
	word32 a3_287
	word32 a4_288
	word32 a5_289
	strlen(a4, out a1_84, out a2_286, out a3_287, out a4_288, out a5_289)
	word32 a0_99
	word32 a3_102
	word32 a4_103
	word32 s0_107
	word32 s1_108
	word32 s2_111
	word32 s3_112
	word32 s5_114
	word32 s6_115
	word32 s7_116
	word32 a1_290
	word32 a2_291
	word32 a5_292
	word32 a7_293
	word32 s4_294
	word32 s8_295
	word32 s9_296
	word32 s10_297
	word32 s11_298
	word32 ra_106 = snprintf(ra, a4, a1_84, 0x230C6904<32>, s3, dwLoc08, dwArg24, dwArg40, dwArg44, dwArg68, dwArg8C, out s0_107, out s1_108, out a0_99, out a1_290, out a2_291, out a3_102, out a4_103, out a5_292, out a7_293, out s2_111, out s3_112, out s4_294, out s5_114, out s6_115, out s7_116, out s8_295, out s9_296, out s10_297, out s11_298)
	s0Out = s0_107
	s1Out = s1_108
	a0Out = a0_99
	a3Out = a3_102
	a4Out = a4_103
	s2Out = s2_111
	s3Out = s3_112
	s4Out = dwArg0118
	s5Out = s5_114
	s6Out = s6_115
	s7Out = s7_116
	s8Out = dwArgD4
	return ra_106
l23086000:
	branch a2 == 80<i32> l2308602A
l2308602A:
l23086048_thunk_snprintf:
	word32 a0_142
	word32 a3_145
	word32 a4_146
	word32 s0_150
	word32 s1_151
	word32 s2_154
	word32 s3_155
	word32 s4_156
	word32 s5_157
	word32 s6_158
	word32 s7_159
	word32 s8_160
	word32 a1_306
	word32 a2_307
	word32 a5_308
	word32 a7_309
	word32 s9_310
	word32 s10_311
	word32 s11_312
	word32 ra_149 = snprintf(ra, a4, a5, 0x230C68AC<32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out s0_150, out s1_151, out a0_142, out a1_306, out a2_307, out a3_145, out a4_146, out a5_308, out a7_309, out s2_154, out s3_155, out s4_156, out s5_157, out s6_158, out s7_159, out s8_160, out s9_310, out s10_311, out s11_312)
	s0Out = s0_150
	s1Out = s1_151
	a0Out = a0_142
	a3Out = a3_145
	a4Out = a4_146
	s2Out = s2_154
	s3Out = s3_155
	s4Out = s4_156
	s5Out = s5_157
	s6Out = s6_158
	s7Out = s7_159
	s8Out = s8_160
	return ra_149
l23086008:
l23086026_thunk_snprintf:
	word32 a0_177
	word32 a3_180
	word32 a4_181
	word32 s0_185
	word32 s1_186
	word32 s2_189
	word32 s3_190
	word32 s4_191
	word32 s5_192
	word32 s6_193
	word32 s7_194
	word32 s8_195
	word32 a1_279
	word32 a2_280
	word32 a5_281
	word32 a7_282
	word32 s9_283
	word32 s10_284
	word32 s11_285
	word32 ra_184 = snprintf(ra, a4, a5, 0x230C6850<32>, dwArg18, dwArg38, dwArg64, dwArg80, dwArg84, dwArgA8, dwArgCC, out s0_185, out s1_186, out a0_177, out a1_279, out a2_280, out a3_180, out a4_181, out a5_281, out a7_282, out s2_189, out s3_190, out s4_191, out s5_192, out s6_193, out s7_194, out s8_195, out s9_283, out s10_284, out s11_285)
	s0Out = s0_185
	s1Out = s1_186
	a0Out = a0_177
	a3Out = a3_180
	a4Out = a4_181
	s2Out = s2_189
	s3Out = s3_190
	s4Out = s4_191
	s5Out = s5_192
	s6Out = s6_193
	s7Out = s7_194
	s8Out = s8_195
	return ra_184
httpc_create_request_string.constprop.6_exit:


word32 httpc_init_connection_common.constprop.5(word32 ra, word32 s0, word32 a1, word32 a3, word32 s3, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_get_file
//      httpc_get_file_dns
// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
httpc_init_connection_common.constprop.5_entry:
l230860CE:
	word32 a5_101
	word32 a0_49
	word32 s0_58
	word32 s7_67
	word32 s8_511
	word32 s4_510
	word32 s6_238
	word32 s5_237
	word32 s3_235
	word32 s2_234
	word32 s1_231
	word32 a4_225
	word32 a3_224
	word32 ra_137 = httpc_create_request_string.constprop.6(ra, a1, a3, 0<32>, 0<32>, s3, dwLoc18, dwLoc0C, dwArg08, dwArg10, dwArg14, dwArg34, dwArg38, s9, s7, s3, dwArg78, dwArg9C, dwArgE8, out s0_58, out s1_231, out a0_49, out a3_224, out a4_225, out s2_234, out s3_235, out s4_510, out s5_237, out s6_238, out s7_67, out s8_511)
	branch a0_49 >u 0xFFFFFFE<32> l230861DC
l23086110:
	word32 a0_78
	word32 s8_516
	word32 s4_515
	word32 a7_514
	word32 a5_513
	word32 a1_512
	s1_231 = mem_malloc(ra_137, s0_58, 52<i32>, a3_224, a4_225, s2_234, mstatus, s0, dwArg04, ra, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0158, out a0_78, out a1_512, out a3_224, out a4_225, out a5_513, out a7_514, out s2_234, out s3_235, out s4_515, out s5_237, out s6_238, out s8_516)
	a5_101 = 0xFFFFFFFF<32>
	branch a0_78 == 0<32> l2308614E
l23086120:
	word32 a3_107
	word32 a4_108
	word32 a5_521
	word32 a2_520
	word32 a1_519
	word32 a0_518
	word32 t1_517
	word32 ra_110 = memset(ra_137, a0_78, 0<32>, 52<i32>, out t1_517, out a0_518, out a1_519, out a2_520, out a3_107, out a4_108, out a5_521)
	Mem116[0x2A<32>:word32] = a0_78
	word32 a0_120
	word32 a5_124
	word32 s0_125
	word32 a2_524
	word32 a1_523
	word32 s1_522
	word32 a7_525
	word32 s5_526
	word32 s6_527
	word32 s8_528
	word32 a4_123
	word32 a3_122
	word32 s4_133
	word32 s2_131
	word32 s3_132
	ra_137 = pbuf_alloc(ra_110, a0_78, s1_231, 0<32>, CONVERT(SLICE(s3_235 + 1<i32>, word16, 0), word16, word32), 640<i32>, a3_107, a4_108, mstatus, s8, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s0_125, out s1_522, out a0_120, out a1_523, out a2_524, out a3_122, out a4_123, out a5_124, out a7_525, out s2_131, out s3_132, out s4_133, out s5_526, out s6_527, out s8_528, out mstatus)
	Mem145[a0_120 + 16<i32>:word32] = s0_125
	branch a0_120 != 0<32> l2308616C
l2308616C:
	word32 a0_146 = Mem145[a5_124:word32]
	branch a5_124 != 0<32> l23086146
l23086170:
	Mem148[0x2B<32>:word32] = s0_125
	word32 a0_150
	word32 s1_160
	word32 s10_161
	word32 s9_170
	ra_137 = altcp_new(ra_137, Mem148[a0_146 + 16<i32>:word32], a0_146, a3_122, a4_123, s3_132, s4_133, s7_67, mstatus, s8, s6, dwLoc18, dwLoc08, dwArg08, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg48, s5, s3, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, out s1_160, out a0_150, out a3_122, out a4_123, out s2_131, out s3_132, out s4_133, out s9_170, out s10_161, out mstatus)
	Mem178[a0_150:word32] = s0_125
	branch a0_150 == 0<32> l23086146
l2308617C:
	word32 a5_179 = CONVERT(Mem178[s1_160 + 6<i32>:byte], byte, word32)
	branch a5_179 == 0<32> l23086186
l23086182:
	s2_131 = CONVERT(Mem178[s1_160 + 4<i32>:uint16], uint16, word32)
l23086186:
	Mem184[s0_125 + 8<i32>:word16] = SLICE(s2_131, word16, 0)
	altcp_arg(a0_150, s0_125)
	altcp_recv(a0_150, 0x23085CB4<32>)
	altcp_err(a0_150, 0x23085F86<32>)
	word32 a5_530
	altcp_sent(altcp_poll(a0_150, 0x23085F6C<32>, 1<32>, a5_179, out a5_530), 0x23085BF2<32>)
	word32 a0_221
	word32 s0_230
	word32 s4_236
	word32 s7_239
	word32 s8_240
	ra_137 = httpc_create_request_string.constprop.6(ra_137, s1_160, s9_170, Mem184[a4_123 + 4<i32>:word32], s10_161, s3_132, dwLoc18, dwLoc0C, dwArg08, dwArg10, dwArg14, dwArg34, dwArg38, s9, s7, s3, dwArg78, dwArg9C, dwArgE8, out s0_230, out s1_231, out a0_221, out a3_224, out a4_225, out s2_234, out s3_235, out s4_236, out s5_237, out s6_238, out s7_239, out s8_240)
	branch s3_235 == a0_221 l230861E0
l230861E0:
	Mem245[s0_230 + 28<i32>:word32] = s8_240
	Mem246[s1_231 + 32<i32>:word32] = s0_230
	Mem247[s0_230 + 36<i32>:word32] = s7_239
	Mem248[s6_238:word32] = s0_230
	a5_101 = 0<32>
l230861D6:
	word32 a5_531
	s1_231 = httpc_free_state(ra_137, s0_230, s0_230, a3_224, a4_225, s2_234, s3_235, s4_236, mstatus, s0, ra, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out a3_224, out a4_225, out a5_531, out s2_234, out s3_235, out s5_237, out s6_238)
l230861DC:
	a5_101 = 0xFFFFFFFA<32>
l23086146:
	word32 a5_529
	s1_231 = httpc_free_state(ra_137, s0_125, s0_125, a3_122, a4_123, s2_131, s3_132, s4_133, mstatus, s0, ra, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out a3_224, out a4_225, out a5_529, out s2_234, out s3_235, out s5_237, out s6_238)
	a5_101 = 0xFFFFFFFF<32>
l2308614E:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s1Out = s1_231
	a0Out = a5_101
	a3Out = a3_224
	a4Out = a4_225
	a5Out = a5_101
	s2Out = s2_234
	s3Out = s3_235
	s4Out = dwArg78
	s5Out = s5_237
	s6Out = s6_238
	s8Out = s5
	mstatusOut = mstatus
	return ra_137
httpc_init_connection_common.constprop.5_exit:


word32 httpc_get_file(word32 ra, word32 s0, word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg2C, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_url_req
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a2 a3 a4 a5 mstatus s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
httpc_get_file_entry:
l230861F2:
	branch a0 == 0<32> l2308624E
l23086204:
	branch a2 == 0<32> l2308624E
l23086206:
	branch a4 == 0<32> l2308624E
l23086208:
	s2 = a6
	word32 a2_269
	branch ip4addr_ntoa(out a2_269, out a3, out a4, out a5) == 0<32> l2308624E
l23086220:
	word32 a0_60
	word32 s1_70
	word32 s3_74
	word32 s4_75
	word32 s8_272
	word32 s6_271
	word32 s5_270
	word32 ra_68 = httpc_init_connection_common.constprop.5(ra, dwArg84, a3, a3, a0, s5, s6, s7, s8, s9, mstatus, a2, dwLoc38, dwLoc30, s4, s2, s0, dwLoc18, dwLoc0C, dwLoc08, dwLoc04, dwArg08, dwArg28, dwArg2C, dwArg38, dwArg3C, dwArg48, s1, ra, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, out s1_70, out a0_60, out a3, out a4, out a5, out s2, out s3_74, out s4_75, out s5_270, out s6_271, out s8_272, out mstatus)
	branch a0_60 != 0<32> l2308624E
l23086234:
	word32 a1_92 = s1_70
	branch CONVERT(Mem30[s1_70 + 6<i32>:byte], byte, word32) != 0<32> l23086240
l2308623E:
	a1_92 = s3_74
l23086240:
	word32 a0_97 = httpc_get_internal_addr(a0_60, a1_92, a4, out a3, out a5)
	branch a0_97 == 0<32> l23086260
l23086260:
	branch s2 == 0<32> l2308624E
l23086264:
	Mem108[s2:word32] = a5
l23086248:
	word32 s3_273
	word32 s5_274
	word32 s6_275
	httpc_free_state(ra_68, a0_97, a0_97, a3, a4, s2, s3_74, s4_75, mstatus, s4, s3, dwArg88, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out a3, out a4, out a5, out s2, out s3_273, out s5_274, out s6_275)
l2308624E:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	mstatusOut = mstatus
	return dwArg0138
httpc_get_file_exit:


word32 httpc_get_file_dns(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a6, word32 s2, word32 s5, word32 s6, word32 s7, word32 s8, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg38, word32 dwArg3C, word32 dwArg48, word32 dwArg4C, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      http_url_req
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] s8:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut: a2 a3 a4 a5 mstatus s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
httpc_get_file_dns_entry:
l2308626C:
	branch a0 == 0<32> l230862BA
l2308627E:
	branch a2 == 0<32> l230862BA
l23086280:
	branch a4 == 0<32> l230862BA
l23086282:
	word32 a0_40
	word32 s1_50
	word32 s5_56
	word32 s6_57
	word32 s8_59
	word32 s4_111
	word32 s3_121
	word32 ra_135 = httpc_init_connection_common.constprop.5(ra, 0xFFFFFFF0<32>, a3, a1, a6, s5, s6, s7, s8, s9, mstatus, dwLoc2C, dwLoc28, s2, s0, dwLoc18, dwLoc14, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg38, dwArg3C, dwArg48, dwArg4C, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, out s1_50, out a0_40, out a3, out a4, out a5, out s2, out s3_121, out s4_111, out s5_56, out s6_57, out s8_59, out mstatus)
	branch a0_40 != 0<32> l230862BA
l2308629E:
	word32 a0_114
	word32 s1_107
	branch CONVERT(Mem15[s2 + 6<i32>:byte], byte, word32) == 0<32> l230862CC
l230862CC:
	word32 s0_348
	word32 s1_349
	ra_135 = dns_gethostbyname(ra_135, s1_50, s4_111 + 4<i32>, s4_111, s4_111 + 4<i32>, s5_56, s6_57, s8_59, mstatus, dwLoc28, dwLoc14, dwArg08, dwArg18, dwArg38, dwArg48, dwArg58, dwArg78, dwArg88, dwArgB8, dwArgF8, dwArg0138, out s0_348, out s1_349, out a0_114, out a3, out a4, out s2, out s3_121, out s4_111, out mstatus)
	s1_107 = a0_114
	branch a0_114 == 0<32> l230862A6
l230862E6:
	a5 = 0xFFFFFFFB<32>
	branch a0_114 != 0xFFFFFFFB<32> l230862B2
l230862A6:
	a0_114 = httpc_get_internal_addr(s4_111, s2, a4, out a3, out a5)
	s1_107 = a0_114
	branch a0_114 == 0<32> l230862EC
l230862EC:
	branch s3_121 == 0<32> l230862BA
l230862F0:
	Mem129[s3_121:word32] = a5
l230862B2:
	word32 s3_350
	word32 s5_351
	word32 s6_352
	httpc_free_state(ra_135, s1_107, a0_114, a3, a4, s2, s3_121, s4_111, mstatus, s0, ra, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out a3, out a4, out a5, out s2, out s3_350, out s5_351, out s6_352)
l230862BA:
	0<32> = dwArg0128
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	mstatusOut = mstatus
	return dwArg0100
httpc_get_file_dns_exit:


word32 set_if(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 s3, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg5C, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArg0128, ptr32 & s1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcpd_start
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +0128:[0..31]
// LiveOut: s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: mstatus ra s10 s11 s3 s5 s6 s7 s9 sp tp
set_if_entry:
l230862F8:
	word32 s0_108 = a0
	word32 s2_15 = a2
	word32 s1_17 = a3
	branch a1 == 0<32> l2308631C
l2308630A:
	word32 a0_21
	word32 a3_23
	word32 a4_24
	word32 a5_25
	word32 s4_36
	word32 s8_259
	s0_108 = ip4addr_aton(a1, fp + 0xFFFFFFEC<32>, out a0_21, out a3_23, out a4_24, out a5_25, out s4_36, out s8_259)
	branch a0_21 == 0<32> l2308631C
l23086314:
	s0_108 = netif_set_ipaddr(ra, a3, s0_108, fp + 0xFFFFFFEC<32>, a3_23, a4_24, a5_25, a2, s3, s4_36, s7, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg34, dwArg38, dwArg48, dwArg50, dwArg54, dwArg58, dwArg5C, s1, dwArg78, dwArg88, dwArgA8, dwArg0128, out s1_17, out s2_15)
l2308631C:
	branch s2_15 == 0<32> l23086332
l23086320:
	word32 a0_76
	word32 a4_79
	word32 a5_80
	word32 s8_262
	word32 a3_260
	word32 s4_261
	s0_108 = ip4addr_aton(s2_15, fp + 0xFFFFFFEC<32>, out a0_76, out a3_260, out a4_79, out a5_80, out s4_261, out s8_262)
	branch a0_76 == 0<32> l23086332
l2308632A:
	netif_set_gw(s0_108, fp + 0xFFFFFFEC<32>, a4_79, a5_80)
l23086332:
	branch s1_17 == 0<32> l23086346
l23086334:
	word32 a0_102
	word32 a4_105
	word32 a5_106
	word32 s4_264
	word32 s8_265
	word32 a3_263
	s0_108 = ip4addr_aton(s1_17, fp + 0xFFFFFFEC<32>, out a0_102, out a3_263, out a4_105, out a5_106, out s4_264, out s8_265)
	branch a0_102 == 0<32> l23086346
l2308633E:
	netif_set_netmask(s0_108, fp + 0xFFFFFFEC<32>, a4_105, a5_106)
l23086346:
	s1Out = s1_17
	return s0_108
set_if_exit:


word32 altcp_alloc(word32 ra, word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_accept
//      altcp_tcp_new_ip_type
//      altcp_mbedtls_lower_accept
//      altcp_tls_wrap
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a1 a2 a3 a4 a5 ra s1
// Trashed: a1 a2 a3 a4 a5 ra s1 t0 t1 tp
// Preserved: s0 sp
altcp_alloc_entry:
l23086352:
	word32 a0_13
	word32 a2_62
	word32 a3_16
	word32 a4_17
	word32 a5_14
	word32 s1_18 = memp_malloc(s1, 5<32>, a3, a4, mstatus, out a0_13, out a2_62, out a3_16, out a4_17, out a5_14)
	branch a0_13 == 0<32> l2308636C
l23086362:
	word32 t1_63
	word32 a0_64
	word32 a2_65
	ra = memset(ra, a0_13, 0<32>, 44<i32>, out t1_63, out a0_64, out a1, out a2_65, out a3_16, out a4_17, out a5_14)
l2308636C:
	s1Out = s1_18
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_14
	return ra
altcp_alloc_exit:


word32 altcp_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_err
//      altcp_tcp_close
//      altcp_mbedtls_lower_err
//      altcp_mbedtls_lower_accept
//      altcp_mbedtls_close
//      altcp_tls_wrap
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a1 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: ra s0 sp t3
altcp_free_entry:
l23086376:
	branch a0 == 0<32> l23086396
l23086396:
	a1Out = a1
	a4Out = a4
	a5Out = a5
	return s1
l23086378:
	word32 a0_6 = Mem0[a5:word32]
	word32 a1_17 = a0_6
	branch a5 == 0<32> l23086398
l2308637E:
	word32 a5_8 = Mem0[a5 + 68<i32>:word32]
	branch a5_8 == 0<32> l23086398
l23086398:
l23086382:
	word32 sp_14
	word32 s1_21
	word32 s0_22
	word32 tp_24
	call a5_8 (retsize: 0;)
		uses: a0:a0_6,a1:a1_17,a2:a2_25,a3:a3,a4:a4_23,a5:a5_8,mstatus:mstatus,ra:ra,s0:s0_22,s1:s1_21,Stack +0084:a0_6,Stack +008C:ra,t3:t3_26,tp:tp_24
		defs: a1:a1_17,a4:a4_23,s0:s0_22,s1:s1_21,sp:sp_14,tp:tp_24
	word32 a2_25 = Mem13[sp_14 + 100<i32>:word32]
	word32 t3_26 = Mem13[sp_14 + 32<i32>:word32]
l23086392:
l23086392_thunk_memp_free:
	word32 a5_41
	word32 a4_45
	word32 a2_83
	word32 a0_82
	word32 a3_84
	word32 s1_46 = memp_free(5<32>, a1_17, a3, a4, mstatus, out a0_82, out a2_83, out a3_84, out a4_45, out a5_41)
	a1Out = a1_17
	a4Out = a4_45
	a5Out = a5_41
	return s1_46
altcp_free_exit:


word32 altcp_new_ip_type(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_new
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s2 s3 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_new_ip_type_entry:
l2308639C:
	branch a0 != 0<32> l230863A4
l230863A4:
	word32 t1_8 = Mem0[a0:int32]
	branch t1_8 == 0<32> l230863B0
l230863B0:
	s1Out = s1
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s9Out = s9
	s10Out = s10
	mstatusOut = mstatus
	return ra
l230863AC:
	word32 a0_12
	word32 ra_52
	word32 s1_53
	word32 s3_54
	word32 mstatus_55
	word32 a4_56
	word32 a3_57
	word32 s4_58
	word32 a2_60
	word32 a6_61
	word32 a7_62
	word32 s10_63
	word32 s11_64
	word32 s2_65
	word32 s5_66
	word32 s6_67
	word32 s8_68
	word32 s9_69
	word32 t0_70
	word32 t3_71
	word32 t4_72
	word32 t5_73
	word32 t6_74
	word32 tp_75
	call t1_8 (retsize: 0;)
		uses: a0:a1,a1:a1,a2:a2_60,a3:a3,a4:a4,a5:Mem0[a1 + 4<i32>:word32],a6:a6_61,a7:a7_62,mstatus:mstatus,ra:ra,s1:s1,s10:s10_63,s11:s11_64,s2:s2_65,s3:s3,s4:s4,s5:s5_66,s6:s6_67,s7:s7,s8:s8_68,s9:s9_69,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0018:dwArg18,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +0044:dwArg44,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +006C:dwArg6C,Stack +0078:dwArg78,Stack +0088:dwArg88,Stack +008C:dwArg8C,Stack +0098:dwArg98,Stack +009C:dwArg9C,Stack +00A8:dwArgA8,Stack +00AC:dwArgAC,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00CC:dwArgCC,Stack +00D8:dwArgD8,Stack +00DC:dwArgDC,Stack +00E8:dwArgE8,Stack +00EC:dwArgEC,Stack +00F8:dwArgF8,Stack +0108:dwArg0108,Stack +0118:dwArg0118,t0:t0_70,t3:t3_71,t4:t4_72,t5:t5_73,t6:t6_74,tp:tp_75
		defs: a0:a0_12,a2:a2_60,a3:a3_57,a4:a4_56,a6:a6_61,a7:a7_62,mstatus:mstatus_55,ra:ra_52,s1:s1_53,s10:s10_63,s11:s11_64,s2:s2_65,s3:s3_54,s4:s4_58,s5:s5_66,s6:s6_67,s8:s8_68,s9:s9_69,t0:t0_70,t3:t3_71,t4:t4_72,t5:t5_73,t6:t6_74,tp:tp_75
	s1Out = s1_53
	a0Out = a0_12
	a3Out = a3_57
	a4Out = a4_56
	s2Out = s2_65
	s3Out = s3_54
	s4Out = s4_58
	s9Out = s9_69
	s10Out = s10_63
	mstatusOut = mstatus_55
	return ra_52
l230863A2:
l230863A2_thunk_altcp_tcp_new_ip_type:
	word32 a0_24
	word32 a3_27
	word32 a4_28
	word32 mstatus_32
	word32 s1_34
	word32 s2_37
	word32 s3_38
	word32 s4_39
	word32 s9_44
	word32 a1_159
	word32 a5_160
	word32 s6_161
	word32 s7_162
	word32 s8_163
	word32 ra_33 = altcp_tcp_new_ip_type(ra, s1, a1, a3, a4, s3, s4, s7, mstatus, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgEC, dwArgF8, dwArg0108, dwArg0118, out s1_34, out a0_24, out a1_159, out a3_27, out a4_28, out a5_160, out s2_37, out s3_38, out s4_39, out s6_161, out s7_162, out s8_163, out s9_44, out mstatus_32)
	s1Out = s1_34
	a0Out = a0_24
	a3Out = a3_27
	a4Out = a4_28
	s2Out = s2_37
	s3Out = s3_38
	s4Out = s4_39
	s9Out = s9_44
	s10Out = s10_35
	mstatusOut = mstatus_32
	return ra_33
altcp_new_ip_type_exit:


word32 altcp_new(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_init_connection_common.constprop.5
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s1 s10 s2 s3 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_new_entry:
l230863B4:
l230863B6_thunk_altcp_new_ip_type:
	word32 a0_14
	word32 a3_19
	word32 a4_20
	word32 mstatus_23
	word32 s1_25
	word32 s10_26
	word32 s2_28
	word32 s3_29
	word32 s4_30
	word32 s9_35
	word32 ra_24 = altcp_new_ip_type(ra, s1, a0, 0<32>, a3, a4, s3, s4, s7, mstatus, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgEC, dwArgF8, dwArg0108, dwArg0118, out s1_25, out a0_14, out a3_19, out a4_20, out s2_28, out s3_29, out s4_30, out s9_35, out s10_26, out mstatus_23)
	s1Out = s1_25
	a0Out = a0_14
	a3Out = a3_19
	a4Out = a4_20
	s2Out = s2_28
	s3Out = s3_29
	s4Out = s4_30
	s9Out = s9_35
	s10Out = s10_26
	mstatusOut = mstatus_23
	return ra_24
altcp_new_exit:


void altcp_arg(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_accept_callback
//      bl_cipstart
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
//      altcp_mbedtls_setup_callbacks
//      altcp_mbedtls_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
altcp_arg_entry:
l230863BA:
	branch a0 == 0<32> l230863BE
l230863BC:
	Mem5[a1 + 8<i32>:word32] = a0
l230863BE:
	return
altcp_arg_exit:


void altcp_accept(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tcpserver
//      altcp_mbedtls_listen
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
altcp_accept_entry:
l230863C0:
	branch a0 == 0<32> l230863C4
l230863C2:
	Mem5[a1 + 16<i32>:word32] = a0
l230863C4:
	return
altcp_accept_exit:


void altcp_recv(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_connected_callback
//      tcp_accept_callback
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
//      altcp_mbedtls_setup_callbacks
//      altcp_mbedtls_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
altcp_recv_entry:
l230863C6:
	branch a0 == 0<32> l230863CA
l230863C8:
	Mem5[a1 + 24<i32>:word32] = a0
l230863CA:
	return
altcp_recv_exit:


void altcp_sent(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_connected_callback
//      tcp_accept_callback
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
//      altcp_mbedtls_setup_callbacks
//      altcp_mbedtls_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
altcp_sent_entry:
l230863CC:
	branch a0 == 0<32> l230863D0
l230863CE:
	Mem5[a1 + 28<i32>:word32] = a0
l230863D0:
	return
altcp_sent_exit:


word32 altcp_poll(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
//      altcp_mbedtls_close
//      altcp_mbedtls_set_poll
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a5 t1
// Preserved: sp
altcp_poll_entry:
l230863D2:
	branch a0 == 0<32> l230863EA
l230863D4:
	a0 = Mem0[a5:word32]
	Mem8[a1 + 32<i32>:word32] = a0
	Mem10[a0 + 40<i32>:byte] = SLICE(a2, byte, 0)
	branch a5 == 0<32> l230863EA
l230863DE:
	word32 t1_11 = Mem10[a5:int32]
	branch t1_11 == 0<32> l230863EA
l230863EA:
	a5Out = a5
	return a0
l230863E6:
	word32 a0_14
	word32 a5_15
	word32 t1_18
	call t1_11 (retsize: 0;)
		uses: a0:a0_6,a1:a2,a2:a2,a5:a5,t1:t1_18
		defs: a0:a0_14,a5:a5_15,t1:t1_18
	a5Out = a5_15
	return a0_14
altcp_poll_exit:


void altcp_err(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_accept_callback
//      bl_cipstart
//      httpc_free_state
//      httpc_init_connection_common.constprop.5
//      altcp_mbedtls_setup_callbacks
//      altcp_mbedtls_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
altcp_err_entry:
l230863EC:
	branch a0 == 0<32> l230863F0
l230863EE:
	Mem5[a1 + 36<i32>:word32] = a0
l230863F0:
	return
altcp_err_exit:


word32 altcp_recved(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cb_altcp_recv_fn
//      tcp_receive_callback
//      httpc_tcp_recv
//      altcp_mbedtls_recved
//      altcp_mbedtls_handle_rx_appldata
//      altcp_mbedtls_lower_recv
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_recved_entry:
l230863F2:
	branch a0 == 0<32> l23086402
l230863F4:
	a0 = Mem0[a5:word32]
	branch a5 == 0<32> l23086402
l230863F8:
	word32 t1_7 = Mem0[a5 + 4<i32>:int32]
	branch t1_7 == 0<32> l23086402
l23086402:
	a5Out = a5
	return a0
l23086400:
	word32 a0_9
	word32 a5_10
	word32 t1_11
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_11
		defs: a0:a0_9,a5:a5_10,t1:t1_11
	a5Out = a5_10
	return a0_9
altcp_recved_exit:


word32 altcp_bind(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tcpserver
//      altcp_default_bind
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_bind_entry:
l23086404:
	branch a0 == 0<32> l23086414
l23086406:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086414
l2308640A:
	word32 t1_7 = Mem0[a5 + 8<i32>:int32]
	branch t1_7 == 0<32> l23086414
l23086414:
	a5Out = a5
	return 0xFFFFFFFA<32>
l23086412:
	word32 a0_10
	word32 a5_11
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,a5:a5_11,t1:t1_12
	a5Out = a5_11
	return a0_10
altcp_bind_exit:


word32 altcp_connect(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cipstart
//      httpc_get_internal_addr
//      altcp_mbedtls_connect
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_connect_entry:
l23086418:
	branch a0 == 0<32> l23086428
l2308641A:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086428
l2308641E:
	word32 t1_7 = Mem0[a5 + 12<i32>:int32]
	branch t1_7 == 0<32> l23086428
l23086428:
	a5Out = a5
	return 0xFFFFFFFA<32>
l23086426:
	word32 a0_10
	word32 a5_11
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,a5:a5_11,t1:t1_12
	a5Out = a5_11
	return a0_10
altcp_connect_exit:


word32 altcp_listen_with_backlog_and_err(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_tcpserver
//      altcp_mbedtls_listen
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0 a5 t1
// Preserved: sp
altcp_listen_with_backlog_and_err_entry:
l2308642C:
	branch a0 == 0<32> l2308643C
l2308642E:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2308643C
l23086432:
	word32 t1_7 = Mem0[a5 + 16<i32>:int32]
	branch t1_7 == 0<32> l2308643C
l2308643C:
	return 0<32>
l2308643A:
	word32 a0_10
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,t1:t1_12
	return a0_10
altcp_listen_with_backlog_and_err_exit:


word32 altcp_abort(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_free_state
//      altcp_mbedtls_abort
//      altcp_mbedtls_handle_rx_appldata
//      altcp_mbedtls_lower_recv
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_abort_entry:
l23086440:
	branch a0 == 0<32> l23086450
l23086442:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086450
l23086446:
	word32 t1_7 = Mem0[a5 + 20<i32>:int32]
	branch t1_7 == 0<32> l23086450
l23086450:
	return a5
l2308644E:
	word32 a5_10
	word32 t1_11
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_11
		defs: a5:a5_10,t1:t1_11
	return a5_10
altcp_abort_exit:


word32 altcp_close(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_connected_callback
//      tcp_receive_callback
//      tcp_accept_callback
//      bl_cipstart
//      bl_cipclose
//      bl_tcpserver
//      httpc_free_state
//      altcp_tls_new
//      altcp_mbedtls_close
//      altcp_mbedtls_lower_recv
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_close_entry:
l23086452:
	branch a0 == 0<32> l23086462
l23086454:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086462
l23086458:
	word32 t1_7 = Mem0[a5 + 24<i32>:int32]
	branch t1_7 == 0<32> l23086462
l23086462:
	a5Out = a5
	return 0xFFFFFFFA<32>
l23086460:
	word32 a0_10
	word32 a5_11
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,a5:a5_11,t1:t1_12
	a5Out = a5_11
	return a0_10
altcp_close_exit:


void altcp_shutdown(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_default_shutdown
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_shutdown_entry:
l23086466:
	branch a0 == 0<32> l23086476
l23086468:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086476
l2308646C:
	word32 t1_7 = Mem0[a5 + 28<i32>:int32]
	branch t1_7 == 0<32> l23086476
l23086476:
	return
l23086474:
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: t1:t1_12
	return
altcp_shutdown_exit:


word32 altcp_write(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_send_data
//      httpc_tcp_connected
//      altcp_mbedtls_bio_send
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_write_entry:
l2308647A:
	branch a0 == 0<32> l2308648A
l2308647C:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2308648A
l23086480:
	word32 t1_7 = Mem0[a5 + 32<i32>:int32]
	branch t1_7 == 0<32> l2308648A
l2308648A:
	a5Out = a5
	return 0xFFFFFFFA<32>
l23086488:
	word32 a0_10
	word32 a5_11
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,a5:a5_11,t1:t1_12
	a5Out = a5_11
	return a0_10
altcp_write_exit:


word32 altcp_output(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      httpc_tcp_connected
//      altcp_default_output
//      altcp_mbedtls_write
//      altcp_mbedtls_lower_recv
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0 a5 t1
// Preserved: sp
altcp_output_entry:
l2308648E:
	branch a0 == 0<32> l2308649E
l23086490:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2308649E
l23086494:
	word32 t1_7 = Mem0[a5 + 36<i32>:int32]
	branch t1_7 == 0<32> l2308649E
l2308649E:
	return 0xFFFFFFFA<32>
l2308649C:
	word32 a0_10
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,t1:t1_12
	return a0_10
altcp_output_exit:


void altcp_mss(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_mss
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_mss_entry:
l230864A2:
	branch a0 == 0<32> l230864B2
l230864A4:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l230864B2
l230864A8:
	word32 t1_7 = Mem0[a5 + 40<i32>:int32]
	branch t1_7 == 0<32> l230864B2
l230864B2:
	return
l230864B0:
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: t1:t1_12
	return
altcp_mss_exit:


word32 altcp_sndbuf(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_sndbuf
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_sndbuf_entry:
l230864B6:
	branch a0 == 0<32> l230864C6
l230864B8:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l230864C6
l230864BC:
	word32 t1_7 = Mem0[a5 + 44<i32>:int32]
	branch t1_7 == 0<32> l230864C6
l230864C6:
	a5Out = a5
	return 0<32>
l230864C4:
	word32 a0_10
	word32 a5_11
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,a5:a5_11,t1:t1_12
	a5Out = a5_11
	return a0_10
altcp_sndbuf_exit:


void altcp_sndqueuelen(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_default_sndqueuelen
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_sndqueuelen_entry:
l230864CA:
	branch a0 == 0<32> l230864DA
l230864CC:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l230864DA
l230864D0:
	word32 t1_7 = Mem0[a5 + 48<i32>:int32]
	branch t1_7 == 0<32> l230864DA
l230864DA:
	return
l230864D8:
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: t1:t1_12
	return
altcp_sndqueuelen_exit:


void altcp_nagle_disable(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_default_nagle_disable
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_nagle_disable_entry:
l230864DE:
	branch a0 == 0<32> l230864EE
l230864E0:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l230864EE
l230864E4:
	word32 t1_7 = Mem0[a5 + 52<i32>:int32]
	branch t1_7 == 0<32> l230864EE
l230864EE:
	return
l230864EC:
	word32 t1_11
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_11
		defs: t1:t1_11
	return
altcp_nagle_disable_exit:


void altcp_nagle_enable(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_default_nagle_enable
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_nagle_enable_entry:
l230864F0:
	branch a0 == 0<32> l23086500
l230864F2:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086500
l230864F6:
	word32 t1_7 = Mem0[a5 + 56<i32>:int32]
	branch t1_7 == 0<32> l23086500
l23086500:
	return
l230864FE:
	word32 t1_11
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_11
		defs: t1:t1_11
	return
altcp_nagle_enable_exit:


void altcp_nagle_disabled(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_default_nagle_disabled
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_nagle_disabled_entry:
l23086502:
	branch a0 == 0<32> l23086512
l23086504:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086512
l23086508:
	word32 t1_7 = Mem0[a5 + 60<i32>:int32]
	branch t1_7 == 0<32> l23086512
l23086512:
	return
l23086510:
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: t1:t1_12
	return
altcp_nagle_disabled_exit:


void altcp_setprio(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_default_setprio
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_setprio_entry:
l23086516:
	branch a0 == 0<32> l23086526
l23086518:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086526
l2308651C:
	word32 t1_7 = Mem0[a5 + 64<i32>:int32]
	branch t1_7 == 0<32> l23086526
l23086526:
	return
l23086524:
	word32 t1_11
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_11
		defs: t1:t1_11
	return
altcp_setprio_exit:


void altcp_get_tcp_addrinfo(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_default_get_tcp_addrinfo
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_get_tcp_addrinfo_entry:
l23086528:
	branch a0 == 0<32> l23086538
l2308652A:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086538
l2308652E:
	word32 t1_7 = Mem0[a5 + 72<i32>:int32]
	branch t1_7 == 0<32> l23086538
l23086538:
	return
l23086536:
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: t1:t1_12
	return
altcp_get_tcp_addrinfo_exit:


void altcp_get_ip(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_accept_callback
//      altcp_default_get_ip
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_get_ip_entry:
l2308653C:
	branch a0 == 0<32> l2308654C
l2308653E:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l2308654C
l23086542:
	word32 t1_7 = Mem0[a5 + 76<i32>:int32]
	branch t1_7 == 0<32> l2308654C
l2308654C:
	return
l2308654A:
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: t1:t1_12
	return
altcp_get_ip_exit:


word32 altcp_get_port(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_accept_callback
//      altcp_default_get_port
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
altcp_get_port_entry:
l23086550:
	branch a0 == 0<32> l23086560
l23086552:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23086560
l23086556:
	word32 t1_7 = Mem0[a5 + 80<i32>:int32]
	branch t1_7 == 0<32> l23086560
l23086560:
	a5Out = a5
	return 0<32>
l2308655E:
	word32 a0_10
	word32 a5_11
	word32 t1_12
	call t1_7 (retsize: 0;)
		uses: a0:a0_6,a5:a5,t1:t1_12
		defs: a0:a0_10,a5:a5_11,t1:t1_12
	a5Out = a5_11
	return a0_10
altcp_get_port_exit:


void altcp_default_bind(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_bind_entry:
l23086564:
	branch a0 == 0<32> l2308656E
l23086566:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l2308656E
l2308656E:
	return
l2308656A:
l2308656A_thunk_altcp_bind:
	word32 a5_19
	altcp_bind(a0_5, a5, out a5_19)
	return
altcp_default_bind_exit:


void altcp_default_shutdown(word32 a0, word32 a1, word32 a2, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 t1
// Preserved: sp
altcp_default_shutdown_entry:
l23086572:
	branch a0 == 0<32> l23086590
l23086576:
	branch a1 == 0<32> l23086588
l23086578:
	branch a2 == 0<32> l23086588
l2308657A:
	a0 = Mem0[a4:word32]
	branch a4 == 0<32> l23086588
l2308657E:
	word32 t1_10 = Mem0[a4 + 24<i32>:int32]
	branch t1_10 == 0<32> l23086588
l23086588:
	word32 a5_13 = Mem0[a0 + 4<i32>:word32]
	branch a0 == 0<32> l23086590
l23086590:
	return
l2308658C:
l2308658C_thunk_altcp_shutdown:
	altcp_shutdown(a0, a5_13)
	return
l23086586:
	word32 t1_24
	call t1_10 (retsize: 0;)
		uses: a0:a0_9,a1:a1,a2:a2,a4:a4,t1:t1_24
		defs: t1:t1_24
	return
altcp_default_shutdown_exit:


void altcp_default_output(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_output_entry:
l23086594:
	branch a0 == 0<32> l2308659E
l23086596:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l2308659E
l2308659E:
	return
l2308659A:
l2308659A_thunk_altcp_output:
	altcp_output(a0_5, a5)
	return
altcp_default_output_exit:


void altcp_default_sndbuf(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_sndbuf
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_sndbuf_entry:
l230865A2:
	branch a0 == 0<32> l230865AC
l230865A4:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l230865AC
l230865AC:
	return
l230865A8:
l230865A8_thunk_altcp_sndbuf:
	word32 a5_19
	altcp_sndbuf(a0_5, a5, out a5_19)
	return
altcp_default_sndbuf_exit:


void altcp_default_sndqueuelen(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_sndqueuelen_entry:
l230865B0:
	branch a0 == 0<32> l230865BA
l230865B2:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l230865BA
l230865BA:
	return
l230865B6:
l230865B6_thunk_altcp_sndqueuelen:
	altcp_sndqueuelen(a0_5, a5)
	return
altcp_default_sndqueuelen_exit:


void altcp_default_nagle_disable(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_nagle_disable_entry:
l230865BE:
	branch a0 == 0<32> l230865C8
l230865C0:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l230865C8
l230865C8:
	return
l230865C4:
l230865C4_thunk_altcp_nagle_disable:
	altcp_nagle_disable(a0_5, a5)
	return
altcp_default_nagle_disable_exit:


void altcp_default_nagle_enable(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_nagle_enable_entry:
l230865CA:
	branch a0 == 0<32> l230865D4
l230865CC:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l230865D4
l230865D4:
	return
l230865D0:
l230865D0_thunk_altcp_nagle_enable:
	altcp_nagle_enable(a0_5, a5)
	return
altcp_default_nagle_enable_exit:


void altcp_default_nagle_disabled(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_nagle_disabled_entry:
l230865D6:
	branch a0 == 0<32> l230865E0
l230865D8:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l230865E0
l230865E0:
	return
l230865DC:
l230865DC_thunk_altcp_nagle_disabled:
	altcp_nagle_disabled(a0_5, a5)
	return
altcp_default_nagle_disabled_exit:


void altcp_default_setprio(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_setprio_entry:
l230865E4:
	branch a0 == 0<32> l230865EE
l230865E6:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l230865EE
l230865EE:
	return
l230865EA:
l230865EA_thunk_altcp_setprio:
	altcp_setprio(a0_5, a5)
	return
altcp_default_setprio_exit:


void altcp_default_get_tcp_addrinfo(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_get_tcp_addrinfo_entry:
l230865F0:
	branch a0 == 0<32> l230865FA
l230865F2:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l230865FA
l230865FA:
	return
l230865F6:
l230865F6_thunk_altcp_get_tcp_addrinfo:
	altcp_get_tcp_addrinfo(a0_5, a5)
	return
altcp_default_get_tcp_addrinfo_exit:


void altcp_default_get_ip(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_get_ip_entry:
l230865FE:
	branch a0 == 0<32> l23086608
l23086600:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l23086608
l23086608:
	return
l23086604:
l23086604_thunk_altcp_get_ip:
	altcp_get_ip(a0_5, a5)
	return
altcp_default_get_ip_exit:


void altcp_default_get_port(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_default_get_port_entry:
l2308660C:
	branch a0 == 0<32> l23086616
l2308660E:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
	branch a0_5 == 0<32> l23086616
l23086616:
	return
l23086612:
l23086612_thunk_altcp_get_port:
	word32 a5_19
	altcp_get_port(a0_5, a5, out a5_19)
	return
altcp_default_get_port_exit:


word32 altcp_tls_new(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cipstart
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a4 a5 mstatus ra s1 s2 s3 s4 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
altcp_tls_new_entry:
l2308661A:
	word32 s0_48
	word32 a0_20
	word32 a3_23
	word32 mstatus_28
	word32 a4_133
	word32 a1_131
	word32 a5_134
	word32 s1_139
	word32 s2_142
	word32 s3_143
	word32 s4_144
	word32 s6_146
	word32 s7_147
	word32 s8_148
	word32 s9_149
	word32 ra_138 = altcp_tcp_new_ip_type(ra, s1, a1, a3, a4, s3, s4, s7, mstatus, s0, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg34, dwArg38, dwArg48, dwArg58, dwArg5C, dwArg68, dwArg78, dwArg7C, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, out s1_139, out a0_20, out a1_131, out a3_23, out a4_133, out a5_134, out s2_142, out s3_143, out s4_144, out s6_146, out s7_147, out s8_148, out s9_149, out mstatus_28)
	branch a0_20 == 0<32> l2308664A
l2308664A:
	s0_48 = 0<32>
l2308662A:
	word32 a0_52
	ra_138 = altcp_tls_wrap(ra_138, a0, a0_20, a3_23, a4_133, s2_142, s3_143, s4_144, mstatus_28, dwArg14, dwArg68, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s1_139, out a0_52, out a1_131, out a4_133, out a5_134, out s2_142, out s3_143, out s4_144, out s6_146, out s7_147, out s8_148, out s9_149)
	s0_48 = a0_52
	branch a0_52 != 0<32> l2308663E
l23086638:
	altcp_close(s1_139, a5_134, out a5_134)
l2308663E:
	s1Out = s1_139
	a0Out = s0_48
	a1Out = a1_131
	a4Out = a4_133
	a5Out = a5_134
	s2Out = s2_142
	s3Out = s3_143
	s4Out = s4_144
	s6Out = s6_146
	s7Out = s7_147
	s8Out = s8_148
	s9Out = s9_149
	mstatusOut = mstatus_28
	return ra_138
altcp_tls_new_exit:


void altcp_tcp_connected(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 t1
// Preserved: sp
altcp_tcp_connected_entry:
l2308664E:
	branch a0 == 0<32> l2308665E
l23086652:
	word32 t1_6 = Mem0[a0 + 20<i32>:int32]
	branch t1_6 == 0<32> l2308665E
l2308665E:
	return
l2308665A:
	word32 t1_12
	call t1_6 (retsize: 0;)
		uses: a0:Mem0[a0 + 8<i32>:word32],t1:t1_12
		defs: t1:t1_12
	return
altcp_tcp_connected_exit:


void altcp_tcp_sent(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 t1
// Preserved: sp
altcp_tcp_sent_entry:
l23086662:
	branch a0 == 0<32> l23086672
l23086666:
	word32 t1_6 = Mem0[a0 + 28<i32>:int32]
	branch t1_6 == 0<32> l23086672
l23086672:
	return
l2308666E:
	word32 t1_12
	call t1_6 (retsize: 0;)
		uses: a0:Mem0[a0 + 8<i32>:word32],t1:t1_12
		defs: t1:t1_12
	return
altcp_tcp_sent_exit:


void altcp_tcp_poll(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 t1
// Preserved: sp
altcp_tcp_poll_entry:
l23086676:
	branch a0 == 0<32> l23086686
l2308667A:
	word32 t1_6 = Mem0[a0 + 32<i32>:int32]
	branch t1_6 == 0<32> l23086686
l23086686:
	return
l23086682:
	word32 t1_12
	call t1_6 (retsize: 0;)
		uses: a0:Mem0[a0 + 8<i32>:word32],t1:t1_12
		defs: t1:t1_12
	return
altcp_tcp_poll_exit:


void altcp_tcp_mss(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_mss_entry:
l2308668A:
	branch a0 == 0<32> l23086694
l23086694:
	return
l2308668C:
	return
altcp_tcp_mss_exit:


void altcp_tcp_sndbuf(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_sndbuf_entry:
l23086698:
	branch a0 == 0<32> l230866A2
l230866A2:
	return
l2308669A:
	return
altcp_tcp_sndbuf_exit:


void altcp_tcp_sndqueuelen(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_sndqueuelen_entry:
l230866A6:
	branch a0 == 0<32> l230866B0
l230866B0:
	return
l230866A8:
	return
altcp_tcp_sndqueuelen_exit:


void altcp_tcp_nagle_disable(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a4
// Preserved: sp
altcp_tcp_nagle_disable_entry:
l230866B4:
	branch a0 == 0<32> l230866C6
l230866B6:
	branch a5 == 0<32> l230866C6
l230866BA:
	Mem9[a5 + 26<i32>:word16] = SLICE(CONVERT(Mem0[a5 + 26<i32>:uint16], uint16, word32) | 64<i32>, word16, 0)
l230866C6:
	return
altcp_tcp_nagle_disable_exit:


void altcp_tcp_nagle_enable(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a4
// Preserved: sp
altcp_tcp_nagle_enable_entry:
l230866C8:
	branch a0 == 0<32> l230866DA
l230866CA:
	branch a5 == 0<32> l230866DA
l230866CE:
	Mem9[a5 + 26<i32>:word16] = SLICE(CONVERT(Mem0[a5 + 26<i32>:uint16], uint16, word32) & -65<i32>, word16, 0)
l230866DA:
	return
altcp_tcp_nagle_enable_exit:


void altcp_tcp_nagle_disabled(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_nagle_disabled_entry:
l230866DC:
	branch a0 == 0<32> l230866EE
l230866EE:
l230866DE:
	branch a5 == 0<32> l230866F0
l230866F0:
	return
l230866E4:
	return
altcp_tcp_nagle_disabled_exit:


void altcp_tcp_dealloc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
altcp_tcp_dealloc_entry:
l230866F2:
	return
altcp_tcp_dealloc_exit:


void altcp_tcp_get_ip(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_get_ip_entry:
l230866F4:
	branch a0 == 0<32> l230866FE
l230866F6:
	branch Mem0[a0 + 12<i32>:word32] == 0<32> l230866FE
l230866FA:
	branch a1 != 0<32> l230866FE
l230866FC:
l230866FE:
	return
altcp_tcp_get_ip_exit:


void altcp_tcp_get_port(word32 a0, word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: sp
altcp_tcp_get_port_entry:
l23086700:
	branch a0 == 0<32> l23086716
l23086716:
l23086702:
	branch a5 == 0<32> l23086718
l23086718:
	return
l23086708:
	branch a1 == 0<32> l23086710
l23086710:
	return
l2308670A:
	return
altcp_tcp_get_port_exit:


word32 altcp_tcp_setup_callbacks(word32 a0, word32 a1, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tcp_close
//      altcp_tcp_accept
//      altcp_tcp_new_ip_type
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2
// Preserved: s0 sp
altcp_tcp_setup_callbacks_entry:
l2308671A:
	tcp_arg(a1, a0)
	tcp_recv(a1, 0x230868A0<32>)
	tcp_sent(a1, 0x23086662<32>)
l23086756_thunk_tcp_err:
	tcp_err(a1, 0x2308675A<32>)
	a1Out = 0x2308675A<32>
	return a1
altcp_tcp_setup_callbacks_exit:


void altcp_tcp_err(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: ra s0 sp
altcp_tcp_err_entry:
l2308675A:
	branch a0 == 0<32> l2308677C
l2308677C:
	return
l2308675C:
	word32 a0_10 = Mem8[a5 + 36<i32>:word32]
	Mem11[a0_10 + 12<i32>:word32] = 0<32>
	word32 s0_12 = a0_10
	branch a5 == 0<32> l23086770
l2308676C:
	word32 a2_19
	word32 a1_48
	word32 s1_49
	word32 tp_50
	call a5 (retsize: 0;)
		uses: a0:Mem11[a0_10 + 8<i32>:word32],a1:a1_48,a2:a2_19,a3:a3,a4:a4,a5:a5,mstatus:mstatus,ra:ra,s0:a0_10,s1:s1_49,tp:tp_50
		defs: a1:a1_48,a2:a2_19,a5:a5_18,ra:ra_17,s0:s0_16,s1:s1_49,tp:tp_50
l23086770:
l23086778_thunk_altcp_free:
	word32 a4_71
	word32 a1_70
	word32 a5_72
	altcp_free(ra, s0_12, a3, a4, a5, mstatus, out a1_70, out a4_71, out a5_72)
	return
altcp_tcp_err_exit:


void altcp_tcp_get_tcp_addrinfo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
altcp_tcp_get_tcp_addrinfo_entry:
l2308677E:
	branch a0 == 0<32> l23086786
l23086786:
	return
l23086780:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l23086782_thunk_tcp_tcp_get_tcp_addrinfo:
	tcp_tcp_get_tcp_addrinfo(a0_6, a1, a2, a3, a5)
	return
altcp_tcp_get_tcp_addrinfo_exit:


void altcp_tcp_setprio(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 sp
altcp_tcp_setprio_entry:
l2308678A:
	branch a0 == 0<32> l23086792
l23086792:
	return
l2308678C:
	word32 a0_5 = Mem0[a0 + 12<i32>:word32]
l2308678E_thunk_tcp_setprio:
	tcp_setprio(a0_5, a1)
	return
altcp_tcp_setprio_exit:


void altcp_tcp_output(word32 ra, word32 s1, word32 a0, word32 a2, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_output_entry:
l23086794:
	branch a0 == 0<32> l2308679C
l2308679C:
	return
l23086796:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l23086798_thunk_tcp_output:
	word32 s0_108
	word32 s1_109
	word32 a0_110
	word32 a1_111
	word32 a2_112
	word32 a3_113
	word32 a4_114
	word32 a5_115
	word32 s2_116
	word32 s3_117
	word32 s4_118
	word32 s5_119
	word32 s6_120
	word32 s7_121
	word32 s8_122
	word32 s9_123
	word32 s10_124
	word32 s11_125
	word32 mstatus_126
	tcp_output(ra, s1, a0_6, a2, s7, mstatus, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_108, out s1_109, out a0_110, out a1_111, out a2_112, out a3_113, out a4_114, out a5_115, out s2_116, out s3_117, out s4_118, out s5_119, out s6_120, out s7_121, out s8_122, out s9_123, out s10_124, out s11_125, out mstatus_126)
	return
altcp_tcp_output_exit:


void altcp_tcp_write(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg19, word32 dwArg58, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0019:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_write_entry:
l230867A0:
	branch a0 == 0<32> l230867A8
l230867A8:
	return
l230867A2:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l230867A4_thunk_tcp_write:
	word32 a0_104
	word32 a1_105
	word32 a2_106
	word32 a3_107
	word32 a5_108
	word32 s2_109
	word32 s3_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_114
	word32 s8_115
	word32 mstatus_116
	tcp_write(ra, s1, a0_6, a1, a2, a3, mstatus, dwArg04, dwArg19, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a0_104, out a1_105, out a2_106, out a3_107, out a5_108, out s2_109, out s3_110, out s4_111, out s5_112, out s6_113, out s7_114, out s8_115, out mstatus_116)
	return
altcp_tcp_write_exit:


void altcp_tcp_shutdown(word32 ra, word32 a0, word32 a1, word32 a2, word32 s4, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_shutdown_entry:
l230867AC:
	branch a0 == 0<32> l230867B4
l230867B4:
	return
l230867AE:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l230867B0_thunk_tcp_shutdown:
	word32 s1_115
	word32 a0_116
	word32 a3_117
	word32 a4_118
	word32 a5_119
	word32 s3_120
	word32 s4_121
	word32 s5_122
	word32 s6_123
	word32 s7_124
	word32 mstatus_125
	tcp_shutdown(ra, a0_6, a1, a2, s4, s7, mstatus, dwArg10, dwArg14, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgBC, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArgFC, dwArg0108, dwArg0118, dwArg0128, out s1_115, out a0_116, out a3_117, out a4_118, out a5_119, out s3_120, out s4_121, out s5_122, out s6_123, out s7_124, out mstatus_125)
	return
altcp_tcp_shutdown_exit:


void altcp_tcp_close(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_close_entry:
l230867B8:
	branch a0 == 0<32> l2308681C
l230867C8:
	word32 s1_17 = Mem13[s0 + 12<i32>:word32]
	branch s0 == 0<32> l23086830
l230867CE:
	tcp_arg(s0, 0<32>)
	tcp_recv(s0, 0<32>)
	tcp_sent(s0, 0<32>)
	tcp_err(s0, 0<32>)
	word32 a2_27 = CONVERT(Mem13[s0 + 29<i32>:byte], byte, word32)
	tcp_poll(s0, 0<32>, a2_27)
	word32 a0_35
	word32 s3_49
	word32 a1_192
	word32 s2_193
	word32 s4_194
	word32 s5_195
	word32 s6_196
	word32 s7_197
	word32 s8_198
	word32 s9_199
	word32 s10_200
	word32 s11_201
	ra = tcp_close(ra, s0, a2_27, a3, s4, s7, mstatus, dwLoc0C, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, out s1_17, out a0_35, out a1_192, out a3, out a4, out a5, out s2_193, out s3_49, out s4_194, out s5_195, out s6_196, out s7_197, out s8_198, out s9_199, out s10_200, out s11_201, out mstatus)
	branch a0_35 == 0<32> l2308682C
l2308682C:
	Mem64[s1_17 + 12<i32>:word32] = 0<32>
l23086830:
	word32 a1_189
	word32 a4_190
	word32 a5_191
	altcp_free(ra, s1_17, a3, a4, a5, mstatus, out a1_189, out a4_190, out a5_191)
l23086808:
	word32 a1_202
	altcp_tcp_setup_callbacks(s1_17, s0, out a1_202)
	tcp_poll(s0, s3_49, CONVERT(Mem13[s0 + 29<i32>:byte], byte, word32))
l2308681C:
	return
altcp_tcp_close_exit:


void altcp_tcp_abort(word32 ra, word32 s1, word32 a0, word32 a3, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_abort_entry:
l2308683A:
	branch a0 == 0<32> l23086844
l2308683C:
	word32 a0_5 = Mem0[a0 + 12<i32>:word32]
	branch a0_5 == 0<32> l23086844
l23086844:
	return
l23086840:
l23086840_thunk_tcp_abort:
	word32 mstatus_156
	word32 s11_155
	word32 s10_154
	word32 s9_153
	word32 s7_152
	word32 s6_151
	word32 s5_150
	word32 s4_149
	word32 s2_147
	word32 s3_148
	word32 a5_146
	word32 a4_145
	word32 a3_144
	word32 a1_143
	word32 a0_142
	word32 s1_141
	word32 s0_140
	tcp_abort(ra, s1, a0_5, a3, s3, s4, s7, mstatus, dwArg00, dwArg04, dwArg28, dwArg38, dwArg48, dwArg58, dwArg74, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgD8, dwArgDC, dwArgE8, dwArg0108, out s0_140, out s1_141, out a0_142, out a1_143, out a3_144, out a4_145, out a5_146, out s2_147, out s3_148, out s4_149, out s5_150, out s6_151, out s7_152, out s9_153, out s10_154, out s11_155, out mstatus_156)
	return
altcp_tcp_abort_exit:


void altcp_tcp_listen(word32 s1, word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
altcp_tcp_listen_entry:
l23086846:
	branch a0 != 0<32> l2308685A
l2308685A:
	word32 a2_66
	word32 a3_67
	word32 a4_68
	word32 a5_69
	word32 a0_16 = tcp_listen_with_backlog_and_err(s1, Mem7[a0 + 12<i32>:word32], a2, a3, a4, mstatus, dwArg24, dwArg28, out a2_66, out a3_67, out a4_68, out a5_69)
	branch a0_16 == 0<32> l2308684E
l23086864:
	Mem25[a0_16 + 12<i32>:word32] = a0
	tcp_accept(a0_16, 0x230868DC<32>)
l2308684E:
l23086850:
	return
altcp_tcp_listen_exit:


void altcp_tcp_connect(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg38, word32 dwArg48, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_connect_entry:
l23086874:
	branch a0 == 0<32> l23086886
l23086886:
	return
l23086876:
	Mem6[a3 + 20<i32>:word32] = a0
	word32 a0_7 = Mem6[a0 + 12<i32>:word32]
l23086882_thunk_tcp_connect:
	word32 s1_113
	word32 a0_114
	word32 a4_115
	word32 a5_116
	word32 mstatus_117
	tcp_connect(ra, s1, a0_7, a1, a2, 0x2308664E<32>, s7, mstatus, dwArg04, dwArg24, dwArg38, dwArg48, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgEC, dwArgF8, dwArg0118, out s1_113, out a0_114, out a4_115, out a5_116, out mstatus_117)
	return
altcp_tcp_connect_exit:


void altcp_tcp_bind(word32 s1, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg44)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +0024:[0..31] Stack +0044:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s8 t1 t3 tp
// Preserved: sp
altcp_tcp_bind_entry:
l2308688A:
	branch a0 == 0<32> l23086892
l23086892:
	return
l2308688C:
	word32 a0_6 = Mem0[a0 + 12<i32>:word32]
l2308688E_thunk_tcp_bind:
	word32 a4_52
	tcp_bind(s1, a0_6, a1, a2, a5, mstatus, dwArg24, dwArg44, out a4_52)
	return
altcp_tcp_bind_exit:


void altcp_tcp_recved(word32 ra, word32 s1, word32 a0, word32 a1, word32 s7, word32 mstatus, word32 dwArg10, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0010:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_recved_entry:
l23086896:
	branch a0 == 0<32> l2308689E
l2308689E:
	return
l23086898:
	word32 a0_5 = Mem0[a0 + 12<i32>:word32]
l2308689A_thunk_tcp_recved:
	word32 s0_108
	word32 s1_109
	word32 a0_110
	word32 a3_111
	word32 a4_112
	word32 a5_113
	word32 s3_114
	word32 s4_115
	word32 s7_116
	word32 s9_117
	word32 s10_118
	word32 s11_119
	word32 mstatus_120
	tcp_recved(ra, s1, a0_5, a1, s7, mstatus, dwArg10, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgE8, dwArg0108, dwArg010C, dwArg0118, out s0_108, out s1_109, out a0_110, out a3_111, out a4_112, out a5_113, out s3_114, out s4_115, out s7_116, out s9_117, out s10_118, out s11_119, out mstatus_120)
	return
altcp_tcp_recved_exit:


void altcp_tcp_recv(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg10, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0010:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tcp_recv_entry:
l230868A0:
	branch a0 == 0<32> l230868B2
l230868A6:
	word32 t1_8 = Mem0[a0 + 24<i32>:int32]
	branch t1_8 == 0<32> l230868B2
l230868B2:
	branch a2 == 0<32> l230868C4
l230868C4:
	return
l230868B4:
	word32 mstatus_162
	word32 s8_161
	word32 s6_160
	word32 s5_159
	word32 s4_158
	word32 s3_157
	word32 s2_156
	word32 a7_155
	word32 a5_154
	word32 a4_153
	word32 a3_152
	word32 a2_151
	word32 a1_150
	word32 a0_149
	word32 s1_148
	word32 s0_147
	pbuf_free(ra, a2, a3, a4, s4, mstatus, dwArg0118, out s0_147, out s1_148, out a0_149, out a1_150, out a2_151, out a3_152, out a4_153, out a5_154, out a7_155, out s2_156, out s3_157, out s4_158, out s5_159, out s6_160, out s8_161, out mstatus_162)
	return
l230868AE:
	word32 t1_57
	word32 s0_63
	word32 t3_64
	word32 tp_65
	word32 a5_66
	word32 s1_67
	word32 s2_68
	word32 s3_69
	word32 a6_70
	word32 a7_71
	word32 s5_72
	word32 s6_73
	word32 s8_74
	word32 t0_75
	word32 t4_76
	word32 t5_77
	word32 t6_78
	call t1_8 (retsize: 0;)
		uses: a0:a2,a1:Mem0[a2 + 8<i32>:word32],a2:a2,a3:a3,a4:a4,a5:a5_66,a6:a6_70,a7:a7_71,mstatus:mstatus,ra:ra,s0:s0_63,s1:s1_67,s2:s2_68,s3:s3_69,s4:s4,s5:s5_72,s6:s6_73,s8:s8_74,Stack +0010:dwArg10,Stack +0118:dwArg0118,t0:t0_75,t1:t1_57,t3:t3_64,t4:t4_76,t5:t5_77,t6:t6_78,tp:tp_65
		defs: a5:a5_66,a6:a6_70,a7:a7_71,s0:s0_63,s1:s1_67,s2:s2_68,s3:s3_69,s5:s5_72,s6:s6_73,s8:s8_74,t0:t0_75,t1:t1_57,t3:t3_64,t4:t4_76,t5:t5_77,t6:t6_78,tp:tp_65
	return
altcp_tcp_recv_exit:


void altcp_tcp_set_poll(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a2
// Preserved: a0 a1 sp
altcp_tcp_set_poll_entry:
l230868C8:
	branch a0 == 0<32> l230868DA
l230868DA:
	return
l230868CC:
	word32 a0_7 = Mem0[a0 + 12<i32>:word32]
l230868D6_thunk_tcp_poll:
	tcp_poll(a0_7, 0x23086676<32>, a1)
	return
altcp_tcp_set_poll_exit:


void altcp_tcp_accept(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg48)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
altcp_tcp_accept_entry:
l230868DC:
	branch a0 == 0<32> l23086928
l230868DE:
	word32 a0_6 = Mem0[a5 + 16<i32>:word32]
	branch a5 == 0<32> l23086928
l23086928:
	return
l230868E2:
	word32 a3_28
	word32 a4_29
	word32 a5_142
	word32 a2_141
	word32 a1_140
	word32 s1_139
	word32 ra_34 = altcp_alloc(ra, s1, a3, a4, mstatus, out s1_139, out a1_140, out a2_141, out a3_28, out a4_29, out a5_142)
	branch a0_6 == 0<32> l2308692C
l2308692C:
	return
l230868FC:
	word32 a1_143
	word32 a0_46 = altcp_tcp_setup_callbacks(a0_6, a1, out a1_143)
	Mem51[a0_6 + 12<i32>:word32] = a1
	Mem52[0x230C6A40<32>:word32] = a0_6
	word32 t1_72
	word32 tp_80
	word32 t0_81
	call Mem52[a0_6 + 16<i32>:int32] (retsize: 0;)
		uses: a0:a0_46,a1:a0_6,a2:dwArg48,a3:a3_28,a4:a4_29,a5:0x230C6A40<32>,a6:dwArg28,mstatus:mstatus,ra:ra_34,s0:Mem52[a0_46 + 8<i32>:word32],s1:a0_6,s2:a1,s3:a2,s4:dwArg04,s8:dwLoc1C,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0048:dwArg48,Stack +FFFFFFE4:dwLoc1C,t0:t0_81,t1:t1_72,t3:dwArg00,tp:tp_80
		defs: t0:t0_81,t1:t1_72,tp:tp_80
	return
altcp_tcp_accept_exit:


word32 altcp_tcp_new_ip_type(word32 ra, word32 s1, word32 a1, word32 a3, word32 a4, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgC8, word32 dwArgCC, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cipstart
//      bl_tcpserver
//      altcp_new
//      altcp_tls_new
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00CC:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s1 s2 s3 s4 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
altcp_tcp_new_ip_type_entry:
l2308693C:
	word32 a0_17
	word32 a4_142
	word32 a3_141
	word32 a1_140
	word32 a5_143
	word32 mstatus_146
	word32 s1_148
	word32 s2_151
	word32 s3_152
	word32 s4_153
	word32 s6_155
	word32 s7_156
	word32 s8_157
	word32 s9_158
	word32 ra_147 = tcp_new_ip_type(ra, s1, a1, a3, a4, s3, s4, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg8C, dwArg98, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgCC, dwArgD8, dwArgF8, out s1_148, out a0_17, out a1_140, out a3_141, out a4_142, out a5_143, out s2_151, out s3_152, out s4_153, out s6_155, out s7_156, out s8_157, out s9_158, out mstatus_146)
	word32 s0_46 = 0<32>
	branch a0_17 == 0<32> l23086968
l2308694C:
	word32 a2_48
	word32 a1_179
	word32 a5_180
	ra_147 = altcp_alloc(ra_147, a0_17, a3_141, a4_142, mstatus_146, out s1_148, out a1_179, out a2_48, out a3_141, out a4_142, out a5_180)
	s0_46 = a0_17
	branch a0_17 == 0<32> l23086974
l23086974:
	word32 a0_181
	word32 s5_182
	word32 s10_183
	word32 s11_184
	ra_147 = tcp_close(ra_147, s1_148, a2_48, a3_141, s4_153, s7_156, mstatus_146, dwArg04, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, ra, dwArg78, dwArg88, dwArg98, dwArg9C, dwArgA8, dwArgAC, dwArgB8, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArgEC, dwArgF8, dwArg0108, dwArg0118, out s1_148, out a0_181, out a1_140, out a3_141, out a4_142, out a5_143, out s2_151, out s3_152, out s4_153, out s5_182, out s6_155, out s7_156, out s8_157, out s9_158, out s10_183, out s11_184, out mstatus_146)
l23086956:
	altcp_tcp_setup_callbacks(a0_17, s1_148, out a1_140)
	Mem94[s1_148 + 12<i32>:word32] = a0_17
	Mem95[0x230C6A40<32>:word32] = a0_17
	a5_143 = 0x230C6A40<32>
l23086968:
	s1Out = s1_148
	a0Out = s0_46
	a1Out = a1_140
	a3Out = a3_141
	a4Out = a4_142
	a5Out = a5_143
	s2Out = s2_151
	s3Out = s3_152
	s4Out = s4_153
	s6Out = s6_155
	s7Out = s7_156
	s8Out = s8_157
	s9Out = s9_158
	mstatusOut = mstatus_146
	return ra_147
altcp_tcp_new_ip_type_exit:


void dummy_rng(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 a5 a6 a7
// Preserved: sp
dummy_rng_entry:
l2308697C:
	word32 a0_5 = Mem0[0x4200F710<32>:int32]
	word32 a3_18 = 0<32>
	word32 a5_10 = 0<32>
l23086990:
	branch a5_10 != a2 l2308699E
l2308699E:
	Mem16[a1 + a5_10:byte] = SLICE(a0_5 + 1<i32> + a5_10, byte, 0)
	a5_10 = a5_10 + 1<32>
	a3_18 = 1<32>
l23086994:
	word32 a5_20 = a5_10 + a0_5
	branch a3_18 == 0<32> l2308699A
l23086998:
	Mem23[a5_20:word32] = 0x4200F710<32>
l2308699A:
	return
dummy_rng_exit:


void altcp_mbedtls_lower_err(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: ra s0 sp
altcp_mbedtls_lower_err_entry:
l230869B0:
	branch a0 == 0<32> l230869D2
l230869D2:
	return
l230869B2:
	word32 a0_10 = Mem8[a5 + 36<i32>:word32]
	Mem11[a0_10 + 4<i32>:word32] = 0<32>
	word32 s0_12 = a0_10
	branch a5 == 0<32> l230869C6
l230869C2:
	word32 a2_19
	word32 a1_48
	word32 s1_49
	word32 tp_50
	call a5 (retsize: 0;)
		uses: a0:Mem11[a0_10 + 8<i32>:word32],a1:a1_48,a2:a2_19,a3:a3,a4:a4,a5:a5,mstatus:mstatus,ra:ra,s0:a0_10,s1:s1_49,tp:tp_50
		defs: a1:a1_48,a2:a2_19,a5:a5_18,ra:ra_17,s0:s0_16,s1:s1_49,tp:tp_50
l230869C6:
l230869CE_thunk_altcp_free:
	word32 a4_71
	word32 a1_70
	word32 a5_72
	altcp_free(ra, s0_12, a3, a4, a5, mstatus, out a1_70, out a4_71, out a5_72)
	return
altcp_mbedtls_lower_err_exit:


void altcp_mbedtls_bio_recv(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg38, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0038:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
altcp_mbedtls_bio_recv_entry:
l230869D4:
	branch a0 == 0<32> l23086A68
l23086A68:
	return
l230869D6:
	word32 s2_113 = Mem13[a0 + 12<i32>:int32]
	branch s2_113 == 0<32> l23086A1C
l230869EC:
	word32 s1_16 = Mem13[s2_113 + 196<i32>:int32]
	branch s1_16 == 0<32> l23086A04
l230869F2:
	word32 a2_19 = CONVERT(Mem13[s1_16 + 10<i32>:uint16], uint16, word32)
	branch a2_19 != 0<32> l23086A28
l23086A28:
	branch a2 >=u a2_19 l23086A32
l23086A2C:
	a2_19 = CONVERT(SLICE(a2, word16, 0), word16, word32)
l230869FA:
	s1_16 = Mem13[a2:word32]
	branch a2 != 0<32> l23086A32
l23086A32:
	word32 a0_29
	word32 a2_30
	word32 s4_33
	word32 s1_36
	word32 a3_272
	word32 a1_271
	word32 a4_273
	word32 a5_274
	word32 s3_275
	word32 s8_276
	word32 s2_37
	pbuf_copy_partial(s1_16, a1, a2_19, 0<32>, out s1_36, out a0_29, out a1_271, out a2_30, out a3_272, out a4_273, out a5_274, out s2_37, out s3_275, out s4_33, out s8_276)
	word32 a4_54
	word32 a3_55
	word32 a1_277
	word32 a5_278
	pbuf_remove_header(s1_36, a0_29, a2_30, out a1_277, out a3_55, out a4_54, out a5_278)
	word32 s0_50 = a0_29
	word32 a5_58 = CONVERT(Mem13[s1_36 + 10<i32>:uint16], uint16, word32)
	branch a5_58 != 0<32> l23086A5A
l23086A4A:
	word32 s1_59 = Mem13[a5_58:word32]
	Mem61[s2_37 + 196<i32>:word32] = a5_58
	Mem62[s1_59:word32] = 0<32>
	word32 s1_294
	word32 a0_295
	word32 a1_296
	word32 a2_297
	word32 a3_298
	word32 a4_299
	word32 a5_300
	word32 a7_301
	word32 s3_302
	word32 s4_303
	word32 s5_304
	word32 s6_305
	word32 s8_306
	word32 mstatus_307
	pbuf_free(ra, s1_59, a3_55, a4_54, s4_33, mstatus, dwArg0118, out s0_50, out s1_294, out a0_295, out a1_296, out a2_297, out a3_298, out a4_299, out a5_300, out a7_301, out s2_37, out s3_302, out s4_303, out s5_304, out s6_305, out s8_306, out mstatus_307)
l23086A5A:
	Mem98[s2_37 + 212<i32>:word32] = Mem93[s2_37 + 212<i32>:int32] + s0_50
l230869FE:
	word32 s0_279
	word32 s1_280
	word32 a0_281
	word32 a1_282
	word32 a2_283
	word32 a3_284
	word32 a4_285
	word32 a5_286
	word32 a7_287
	word32 s3_288
	word32 s4_289
	word32 s5_290
	word32 s6_291
	word32 s8_292
	word32 mstatus_293
	pbuf_free(ra, s1_16, a3, a4, s4, mstatus, dwArg0118, out s0_279, out s1_280, out a0_281, out a1_282, out a2_283, out a3_284, out a4_285, out a5_286, out a7_287, out s2_113, out s3_288, out s4_289, out s5_290, out s6_291, out s8_292, out mstatus_293)
l23086A04:
	word32 a5_130 = CONVERT(Mem13[s2_113 + 204<i32>:byte], byte, word32)
	Mem131[s2_113 + 196<i32>:word32] = 0<32>
	branch (a5_130 & 0xC<32>) == 4<32> l23086A1C
l23086A16:
l23086A1C:
	0<32> = dwArg38
	return
altcp_mbedtls_bio_recv_exit:


word32 altcp_mbedtls_setup_callbacks(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_setup
//      altcp_mbedtls_close
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1
// Trashed: a0 a1 a2
// Preserved: s0 sp
altcp_mbedtls_setup_callbacks_entry:
l23086A6E:
	altcp_arg(a1, a0)
	altcp_recv(a1, 0x230872F4<32>)
	altcp_sent(a1, 0x23086F94<32>)
l23086AAA_thunk_altcp_err:
	altcp_err(a1, 0x230869B0<32>)
	return 0x230869B0<32>
altcp_mbedtls_setup_callbacks_exit:


word32 altcp_mbedtls_setup(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg44, word32 dwArg84, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_lower_accept
//      altcp_tls_wrap
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0044:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_setup_entry:
l23086AAE:
	branch a0 == 0<32> l23086B36
l23086B36:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s6Out = s6
	s7Out = s7
	s9Out = s9
	return ra
l23086AB0:
	word32 a0_26
	word32 a1_110
	word32 a3_112
	word32 a4_113
	word32 a5_102
	word32 s1_118
	word32 s3_120
	word32 s6_123
	word32 ra_195 = altcp_mbedtls_alloc(ra, a3, a4, s2, mstatus, s4, dwArg44, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0138, out s1_118, out a0_26, out a1_110, out a3_112, out a4_113, out a5_102, out s3_120, out s6_123)
	word32 s2_119 = a0_26
	word32 a0_106 = 0xFFFFFFFF<32>
	branch a0_26 == 0<32> l23086AEE
l23086AD0:
	word32 a3_56
	word32 a4_57
	word32 a5_58
	word32 a0_64
	word32 a3_67
	word32 a4_68
	word32 s4_78
	ra_195 = mbedtls_ssl_setup(mbedtls_ssl_init(ra_195, a0_26 + 4<i32>, out a3_56, out a4_57, out a5_58), a0_26 + 4<i32>, s1_118, a3_56, a4_57, a5_58, mstatus, dwLoc20, s4, dwLoc10, dwLoc0C, dwArg18, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, out s1_118, out a0_64, out a3_67, out a4_68, out s2_119, out s3_120, out s4_78, out s6_123, out s7, out s9)
	branch a0_64 == 0<32> l23086AFE
l23086AFE:
	mbedtls_ssl_set_bio(s4_78, a1, 0x23086F1A<32>, 0x230869D4<32>, 0<32>)
	a1_110 = altcp_mbedtls_setup_callbacks(a1, s3_120)
	Mem103[a1 + 4<i32>:word32] = s3_120
	Mem104[0x230C6A94<32>:word32] = a1
	Mem105[a1 + 12<i32>:word32] = s2_119
	a4_113 = 0<32>
	a3_112 = 0x230869D4<32>
	a5_102 = 0x230C6A94<32>
	a0_106 = 0<32>
l23086AE4:
	s1_118 = altcp_mbedtls_free(s2_119, a3_67, a4_68, s2_119, s3_120, s4_78, mstatus, s4, s2, dwArg04, s3, dwArg84, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out a1_110, out a3_112, out a4_113, out a5_102, out s2_119, out s3_120, out s6_123)
	a0_106 = 0xFFFFFFFF<32>
l23086AEE:
	s0Out = s1
	s1Out = s1_118
	a0Out = a0_106
	a1Out = a1_110
	a3Out = a3_112
	a4Out = a4_113
	a5Out = a5_102
	s2Out = s2_119
	s3Out = s3_120
	s4Out = dwArg04
	s6Out = s6_123
	s7Out = s7
	s9Out = s9
	return ra_195
altcp_mbedtls_setup_exit:


void altcp_mbedtls_lower_accept(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg38, word32 dwArg68, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_lower_accept_entry:
l23086B3A:
	branch a0 == 0<32> l23086B9A
l23086B48:
	branch s1 == 0<32> l23086B9A
l23086B4C:
	word32 a0_17 = Mem13[a5 + 16<i32>:word32]
	branch a5 == 0<32> l23086B9A
l23086B9A:
l23086B50:
	word32 a3_28
	word32 a4_29
	word32 a5_261
	word32 a2_260
	word32 a1_259
	word32 s1_258
	word32 ra_34 = altcp_alloc(ra, s1, a3, a4, mstatus, out s1_258, out a1_259, out a2_260, out a3_28, out a4_29, out a5_261)
	branch a0_17 == 0<32> l23086B9E
l23086B9E:
l23086B5E:
	word32 a0_43
	word32 a3_46
	word32 a4_47
	word32 a5_48
	word32 s0_52
	word32 s2_54
	word32 s3_55
	word32 s4_56
	word32 s9_266
	word32 s7_265
	word32 s6_264
	word32 a1_263
	word32 s1_262
	word32 ra_51 = altcp_mbedtls_setup(ra_34, a0_17, a0_17, a3_28, a4_29, a0_17, a2, s4, mstatus, dwLoc2C, dwLoc18, dwArg14, a1, dwArg68, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out s0_52, out s1_262, out a0_43, out a1_263, out a3_46, out a4_47, out a5_48, out s2_54, out s3_55, out s4_56, out s6_264, out s7_265, out s9_266)
	branch a0_43 == 0<32> l23086B82
l23086B82:
	word32 t1_72 = Mem22[s0_52 + 16<i32>:int32]
	0<32> = dwArg0128
	word32 t1_93
	word32 t0_97
	word32 a6_99
	word32 a7_100
	word32 s5_101
	word32 s6_102
	word32 s8_103
	word32 t4_104
	word32 t5_105
	word32 t6_106
	word32 s10_107
	word32 s11_108
	word32 s7_109
	word32 s9_110
	call t1_72 (retsize: 0;)
		uses: a0:a0_43,a1:s2_54,a2:s3_55,a3:a3_46,a4:a4_47,a5:a5_48,a6:a6_99,a7:a7_100,mstatus:mstatus,ra:ra_51,s0:dwArgE4,s1:a0_43,s10:s10_107,s11:s11_108,s2:s2_54,s3:s3_55,s4:s4_56,s5:s5_101,s6:s6_102,s7:s7_109,s8:s8_103,s9:s9_110,Stack +0014:dwArg14,Stack +0038:dwArg38,Stack +0068:dwArg68,Stack +0088:dwArg88,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E4:dwArgE4,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0100:dwArg0100,Stack +0104:dwArg0104,Stack +0108:dwArg0108,Stack +0118:dwArg0118,Stack +0128:dwArg0128,Stack +0138:dwArg0138,Stack +0148:dwArg0148,Stack +FFFFFFD4:dwLoc2C,Stack +FFFFFFE8:dwLoc18,t0:t0_97,t1:t1_93,t3:dwArg38,t4:t4_104,t5:t5_105,t6:t6_106,tp:dwArg0104
		defs: a6:a6_99,a7:a7_100,s10:s10_107,s11:s11_108,s5:s5_101,s6:s6_102,s7:s7_109,s8:s8_103,s9:s9_110,t0:t0_97,t1:t1_93,t4:t4_104,t5:t5_105,t6:t6_106
	return
l23086B6C:
	word32 a5_269
	word32 a4_268
	word32 a1_267
	altcp_free(ra_51, s2_54, a3_46, a4_47, a5_48, mstatus, out a1_267, out a4_268, out a5_269)
l23086B72:
	0<32> = dwArg0128
	return
altcp_mbedtls_lower_accept_exit:


void altcp_mbedtls_abort(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_mbedtls_abort_entry:
l23086BA2:
	branch a0 == 0<32> l23086BAA
l23086BAA:
	return
l23086BA4:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
l23086BA6_thunk_altcp_abort:
	altcp_abort(a0_5, a5)
	return
altcp_mbedtls_abort_exit:


void altcp_mbedtls_recved(word32 a0, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: a1 sp
altcp_mbedtls_recved_entry:
l23086BAC:
	branch a0 == 0<32> l23086BD4
l23086BAE:
	word32 a0_6 = Mem0[a4 + 12<i32>:word32]
	branch a4 == 0<32> l23086BD4
l23086BB2:
	branch (CONVERT(Mem0[a4 + 204<i32>:byte], byte, word32) & 1<32>) == 0<32> l23086BD4
l23086BD4:
	return
l23086BBA:
	word32 a5_9 = Mem0[a4 + 208<i32>:int32]
	branch a5_9 >= a1 l23086BC8
l23086BC2:
	a1 = CONVERT(SLICE(a5_9, word16, 0), word16, word32)
l23086BC8:
	word32 a5_15 = a5_9 - a1
	Mem17[a4 + 208<i32>:word32] = a5_15
	word32 a0_19 = Mem17[a0_6 + 4<i32>:word32]
l23086BD0_thunk_altcp_recved:
	word32 a5_36
	altcp_recved(a0_19, a5_15, out a5_36)
	return
altcp_mbedtls_recved_exit:


word32 altcp_tls_create_config(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, word32 dwArg74, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config_client_common
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0044:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tls_create_config_entry:
l23086BD6:
	altcp_mbedtls_mem_init()
	word32 a0_24 = 1280<i32>
	branch a1 != 0<32> l23086BFC
l23086BF8:
	a0_24 = 972<i32>
l23086BFC:
	branch a3 == 0<32> l23086C04
l23086C00:
	a0_24 = a0_24 + 308<i32>
l23086C04:
	branch a2 == 0<32> l23086C08
l23086C06:
	a0_24 = a0_24 + 8<32>
l23086C08:
	word32 a0_56
	word32 s6_156
	word32 s3_153
	word32 s4_182
	word32 s5_183
	word32 s2_152
	word32 s1_149
	word32 a3_175
	word32 a4_176
	word32 a5_190
	word32 ra_147 = altcp_mbedtls_alloc_config(ra, a0_24, a3, a4, a3, mstatus, s0, dwArg44, dwArg98, dwArgB8, dwArgD8, dwArgF8, dwArg0138, out s1_149, out a0_56, out a3_175, out a4_176, out a5_190, out s2_152, out s3_153, out s4_182, out s5_183, out s6_156)
	word32 s0_148 = a0_56
	branch a0_56 == 0<32> l23086C6C
l23086C10:
	word32 a5_81 = a0_56 + 972<i32>
	branch s3_153 == 0<32> l23086C20
l23086C18:
	Mem82[a0_56 + 960<i32>:word32] = a0_56 + 972<i32>
	a5_81 = a0_56 + 1280<i32>
l23086C20:
	branch s2_152 == 0<32> l23086C2C
l23086C24:
	Mem87[a0_56 + 968<i32>:word32] = a5_81
	a5_81 = a5_81 + 308<i32>
l23086C2C:
	branch s1_149 == 0<32> l23086C32
l23086C2E:
	Mem93[a0_56 + 964<i32>:word32] = a5_81
l23086C32:
	word32 a0_139
	word32 s4_154
	word32 a5_144
	word32 a2_141
	ra_147 = mbedtls_ctr_drbg_seed(mbedtls_ctr_drbg_init(mbedtls_entropy_init(mbedtls_ssl_config_init(ra_147, a0_56), a0_56 + 120<i32>), a0_56 + 640<i32>), a0_56 + 640<i32>, 0x2308697C<32>, a0_56 + 120<i32>, dwArgA8, out s0_148, out s1_149, out a0_139, out a2_141, out a5_144, out s2_152, out s3_153, out s4_154, out s6_156, out s7, out s10, out s11)
	branch a0_139 == 0<32> l23086C7E
l23086C7E:
	word32 a0_172
	s1_149 = mbedtls_ssl_config_defaults(s0_148, s4_154, 0<32>, 0<32>, out a0_172, out a2_141, out a3_175, out a4_176, out a5_144, out s2_152, out s3_153, out s4_182, out s5_183)
	branch a0_172 != 0<32> l23086C64
l23086C8C:
	mbedtls_ssl_conf_authmode(s0_148, 1<32>, out a5_190)
	mbedtls_ssl_conf_rng(s0_148, 0x2308792C<32>, s1_149)
l23086C64:
	word32 s8_474
	altcp_mbedtls_free_config(s1_149, s0_148, a2_141, a5_144, s2_152, s3_153, mstatus, dwLoc2C, dwLoc28, dwLoc0C, a0_56 + 120<i32>, dwArg74, dwArgA8, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, out s1_149, out a3_175, out a4_176, out a5_190, out s2_152, out s3_153, out s4_182, out s5_183, out s6_156, out s8_474)
	s0_148 = 0<32>
l23086C6C:
	0<32> = dwArg0128
	s1Out = s1_149
	a0Out = s0_148
	a3Out = a3_175
	a4Out = a4_176
	a5Out = a5_190
	s2Out = s2_152
	s3Out = s3_153
	s4Out = s4_182
	s5Out = s5_183
	s6Out = s6_156
	s7Out = s7
	s8Out = dwArg58
	s10Out = s10
	s11Out = s11
	return ra_147
altcp_tls_create_config_exit:


word32 altcp_tls_create_config_client_common(word32 ra, word32 s0, word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0188, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config_client
//      altcp_tls_create_config_client_2wayauth
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
altcp_tls_create_config_client_common_entry:
l23086CA6:
	word32 a0_45
	word32 a5_104
	word32 a4_103
	word32 a3_102
	word32 s1_108
	word32 s10_180
	word32 s11_181
	word32 s2_109
	word32 s3_110
	word32 s4_111
	word32 s5_112
	word32 s6_113
	word32 s7_187
	word32 s8_114
	word32 ra_178 = altcp_tls_create_config(ra, s0, a2, a2, CONVERT(a0 != 0<32>, bool, word32), a4, mstatus, dwArg34, dwArg64, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0128, dwArg0138, dwArg0158, out s1_108, out a0_45, out a3_102, out a4_103, out a5_104, out s2_109, out s3_110, out s4_111, out s5_112, out s6_113, out s7_187, out s8_114, out s10_180, out s11_181)
	word32 s0_122 = a0_45
	branch a0_45 == 0<32> l23086CE4
l23086CC4:
	branch s1_108 == 0<32> l23086CE4
l23086CC6:
	word32 a3_56
	word32 a4_57
	word32 a5_58
	word32 a0_65
	word32 a2_66
	word32 a0_212
	word32 a1_213
	ra_178 = mbedtls_x509_crt_parse(mbedtls_x509_crt_init(ra_178, Mem19[a0_45 + 968<i32>:int32], out a0_212, out a1_213, out a3_56, out a4_57, out a5_58), a0_45, Mem19[a0_45 + 968<i32>:int32], s1_108, s2_109, a3_56, a4_57, a5_58, s2_109, s5_112, s6_113, s8_114, s10_180, s11_181, mstatus, s0, dwLoc08, dwArg08, dwArg14, dwArg18, dwArg24, dwArg28, dwArg48, dwArg64, dwArg68, dwArg84, dwArg88, dwArgA8, dwArgE4, dwArgE8, dwArgFC, dwArg0128, out s0_122, out s1_108, out a0_65, out a2_66, out a3_102, out a4_103, out a5_104, out s2_109, out s3_110, out s4_111, out s5_112, out s6_113, out s7_187, out s8_114, out s10_180, out s11_181, out mstatus)
	branch a0_65 == 0<32> l23086CF2
l23086CF2:
	mbedtls_ssl_conf_ca_chain(s0_122, Mem19[s0_122 + 968<i32>:int32], 0<32>)
l23086CDC:
	altcp_mbedtls_free_config(s1_108, s0_122, a2_66, a5_104, s2_109, s3_110, mstatus, s0, dwLoc08, dwArg14, ra, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out s1_108, out a3_102, out a4_103, out a5_104, out s2_109, out s3_110, out s4_111, out s5_112, out s6_113, out s8_114)
	s0_122 = 0<32>
l23086CE4:
	0<32> = dwArg38
	s1Out = s1_108
	a0Out = s0_122
	a3Out = a3_102
	a4Out = a4_103
	a5Out = a5_104
	s2Out = s2_109
	s3Out = s3_110
	s4Out = s4_111
	s5Out = s5_112
	s6Out = s6_113
	s7Out = s7_187
	s8Out = s8_114
	s10Out = s10_180
	s11Out = s11_181
	mstatusOut = mstatus
	return ra_178
altcp_tls_create_config_client_common_exit:


void altcp_mbedtls_dealloc(word32 ra, word32 s0, word32 a0, word32 a5, word32 s3, word32 mstatus, word32 dwArg14, word32 dwArg28, word32 dwArg94, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0094:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
altcp_mbedtls_dealloc_entry:
l23086D00:
	branch a0 == 0<32> l23086D40
l23086D40:
	return
l23086D02:
	branch s0 == 0<32> l23086D36
l23086D0E:
	word32 s2_26
	word32 s4_27
	word32 a4_20
	word32 a3_19 = mbedtls_ssl_free(ra, s0 + 4<i32>, a5, mstatus, dwArg28, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, dwArg0178, out a4_20, out s2_26, out s4_27)
	word32 a0_38 = Mem10[s0 + 196<i32>:int32]
	Mem39[s0 + 204<i32>:byte] = 0<8>
	branch a0_38 == 0<32> l23086D2A
l23086D22:
	word32 s0_42
	word32 s1_233
	word32 a1_234
	word32 a2_235
	word32 a5_236
	word32 a7_237
	word32 s5_238
	word32 s6_239
	word32 s8_240
	pbuf_free(ra, a0_38, a3_19, a4_20, s4_27, mstatus, dwArg0118, out s0_42, out s1_233, out a0_38, out a1_234, out a2_235, out a3_19, out a4_20, out a5_236, out a7_237, out s2_26, out s3, out s4_27, out s5_238, out s6_239, out s8_240, out mstatus)
	Mem65[s0_42 + 196<i32>:word32] = 0<32>
l23086D2A:
	word32 a5_229
	word32 a4_228
	word32 a3_227
	word32 a1_226
	word32 s2_230
	word32 s3_231
	word32 s6_232
	Mem101[altcp_mbedtls_free(Mem67[a0_38:word32], a3_19, a4_20, s2_26, s3, s4_27, mstatus, s0, dwLoc08, dwArg14, ra, dwArg94, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, dwArg0168, dwArg0188, out a1_226, out a3_227, out a4_228, out a5_229, out s2_230, out s3_231, out s6_232) + 12<i32>:word32] = 0<32>
l23086D36:
	return
altcp_mbedtls_dealloc_exit:


void altcp_mbedtls_sndbuf(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
altcp_mbedtls_sndbuf_entry:
l23086D42:
	branch a0 == 0<32> l23086DB6
l23086D52:
	word32 a0_16 = Mem13[s1 + 12<i32>:word32]
	branch s1 == 0<32> l23086DC8
l23086D56:
	word32 a5_17 = CONVERT(Mem13[s1 + 204<i32>:byte], byte, word32)
	a5 = a5_17 & 1<32>
	branch (a5_17 & 1<32>) == 0<32> l23086DC8
l23086DC8:
l23086D5E:
	word32 a0_20 = Mem13[a0_16 + 4<i32>:word32]
	branch a0_20 == 0<32> l23086DB6
l23086D62:
	word32 a5_23
	word32 a0_21 = altcp_sndbuf(a0_20, a5_17 & 1<32>, out a5_23)
	word32 a3_32
	word32 a0_29 = mbedtls_ssl_get_record_expansion(ra, a0_21, a3, a4, a5_23, out a3_32, out a5)
	word32 s2_48 = a0_29
	branch a0_29 <= 0<32> l23086DB6
l23086D76:
	a5 = 0x10000000<32>
	branch a0_29 <= 0xFFFFFFE<32> l23086D84
l23086D80:
	s2_48 = 0xFFFFFFF<32>
l23086D84:
	branch s2_48 >=u a0_21 l23086DB6
l23086DB6:
l23086DC4_thunk_altcp_default_sndbuf:
	altcp_default_sndbuf(a0, a5)
	return
l23086D88:
	word32 a5_277
	word32 a0_76 = mbedtls_ssl_get_max_frag_len(a3_32, 0x10000000<32>, out a5_277)
	word32 a5_80 = a0_21 - s2_48
	branch a5_80 <u 0x10000000<32> l23086D9C
l23086D98:
	a5_80 = 0xFFFFFFF<32>
l23086D9C:
	branch a0_76 >=u a5_80 l23086DA2
l23086DA0:
l23086DA2:
l23086DA8:
	return
altcp_mbedtls_sndbuf_exit:


void altcp_mbedtls_write(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 mstatus, word32 dwArg08, word32 dwArg54, word32 dwArg78, word32 dwArgD8, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_write_entry:
l23086DCC:
	branch a0 != 0<32> l23086DD4
l23086DD4:
	branch s0 == 0<32> l23086E1C
l23086DE6:
	branch (CONVERT(Mem14[s0 + 204<i32>:byte], byte, word32) & 1<32>) == 0<32> l23086E1A
l23086DEE:
	word32 a5_19 = Mem14[s0 + 176<i32>:int32]
	word32 s2_21 = a2
	word32 s3_23 = s0 + 4<i32>
	branch a5_19 != 0<32> l23086E2C
l23086E2C:
	dwArg54 = a1
	word32 s1_292
	word32 a0_293
	word32 a1_294
	word32 a2_295
	word32 a3_296
	word32 a4_297
	word32 a5_298
	word32 s4_299
	word32 s5_300
	word32 s7_301
	word32 s9_302
	word32 s10_303
	word32 s11_304
	a5_19 = Mem26[mbedtls_ssl_flush_output(ra, s0 + 4<i32>, a5_19, dwArgF8, out s1_292, out a0_293, out a1_294, out a2_295, out a3_296, out a4_297, out a5_298, out s2_21, out s3_23, out s4_299, out s5_300, out s7_301, out s9_302, out s10_303, out s11_304) + 176<i32>:int32]
	branch a5_19 == 0<32> l23086DFC
l23086DFC:
	word32 a0_64
	word32 a5_69
	word32 s2_76
	word32 s0_72 = mbedtls_ssl_write(ra, s3_23, s2_21, a5_19, mstatus, dwArg08, dwArg54, dwArg78, dwArgD8, out a0_64, out a5_69, out s2_76)
	altcp_output(a0_64, a5_69)
	branch a0_64 >= 0<32> l23086E40
l23086E40:
	branch s2_76 != a0_64 l23086E3C
l23086E44:
	Mem102[s0_72 + 204<i32>:byte] = SLICE(CONVERT(Mem63[s0_72 + 204<i32>:byte], byte, word32) | 16<i32>, byte, 0)
l23086E10:
	branch a0_64 == 0xF9000780<32> l23086E3C
l23086E3C:
l23086E1A:
l23086E1C:
	0<32> = dwArg0128
	return
l23086DCE:
	return
altcp_mbedtls_write_exit:


void altcp_mbedtls_close(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
altcp_mbedtls_close_entry:
l23086E54:
	branch a0 == 0<32> l23086EB8
l23086E64:
	word32 s1_17 = Mem13[s0 + 4<i32>:word32]
	branch s0 == 0<32> l23086ECC
l23086E6A:
	word32 s3_20 = Mem13[s0 + 32<i32>:int32]
	altcp_arg(s0, 0<32>)
	altcp_recv(s0, 0<32>)
	altcp_sent(s0, 0<32>)
	altcp_err(s0, 0<32>)
	word32 a5_35
	word32 a0_31 = altcp_poll(s0, 0<32>, CONVERT(Mem13[s0 + 40<i32>:byte], byte, word32), a5, out a5_35)
	s1_17 = Mem13[a0_31 + 4<i32>:word32]
	branch altcp_close(a0_31, a5_35, out a5) == 0<32> l23086EC8
l23086EC8:
	Mem41[s1_17 + 4<i32>:word32] = 0<32>
l23086ECC:
	word32 a1_119
	word32 a4_120
	word32 a5_121
	altcp_free(ra, s1_17, a3, a4, a5, mstatus, out a1_119, out a4_120, out a5_121)
l23086EA4:
	altcp_mbedtls_setup_callbacks(s1_17, s0)
	word32 a5_122
	altcp_poll(s0, s3_20, CONVERT(Mem13[s0 + 40<i32>:byte], byte, word32), a5, out a5_122)
l23086EB8:
	return
altcp_mbedtls_close_exit:


void altcp_mbedtls_listen(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 t1
// Preserved: s0 sp
altcp_mbedtls_listen_entry:
l23086ED6:
	branch a0 != 0<32> l23086EEA
l23086EEA:
	word32 a0_12 = altcp_listen_with_backlog_and_err(Mem7[a0 + 4<i32>:word32], a5)
	branch a0_12 == 0<32> l23086EDE
l23086EF4:
	Mem16[a0_12 + 4<i32>:word32] = a0
	altcp_accept(a0_12, 0x23086B3A<32>)
l23086EDE:
l23086EE0:
	return
altcp_mbedtls_listen_exit:


void altcp_mbedtls_connect(word32 a0, word32 a3, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a3 a5 t1
// Preserved: sp
altcp_mbedtls_connect_entry:
l23086F04:
	branch a0 == 0<32> l23086F16
l23086F16:
	return
l23086F06:
	Mem6[a3 + 20<i32>:word32] = a0
	word32 a0_7 = Mem6[a0 + 4<i32>:word32]
l23086F12_thunk_altcp_connect:
	word32 a5_20
	altcp_connect(a0_7, a5, out a5_20)
	return
altcp_mbedtls_connect_exit:


void altcp_mbedtls_bio_send(word32 a0, word32 a2, word32 a5, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] Stack +00A8:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t1 t3 tp
// Preserved: a1 sp
altcp_mbedtls_bio_send_entry:
l23086F1A:
	branch a0 == 0<32> l23086F4E
l23086F32:
	word32 a0_23 = Mem19[a5 + 4<i32>:word32]
	branch a5 == 0<32> l23086F4E
l23086F3C:
	word32 a5_26 = 0x10000000<32>
	word32 s1_30 = a2
l23086F4C:
	branch s1_30 != 0<32> l23086F64
l23086F64:
	word32 s3_35 = s1_30
	branch s1_30 <=u 0xFFFFFFE<32> l23086F6C
l23086F6A:
	s3_35 = 0xFFFFFFF<32>
l23086F6C:
	word32 a0_53 = altcp_write(Mem19[a0_23 + 4<i32>:int32], a5_26, out a5_26)
	branch a0_53 != 0<32> l23086F88
l23086F88:
	branch a0_53 == 0xFFFFFFFF<32> l23086F4E
l23086F8E:
l23086F80:
	s1_30 = s1_30 - s3_35
l23086F4E:
	0<32> = dwArgA8
	return
altcp_mbedtls_bio_send_exit:


void altcp_mbedtls_lower_sent(word32 ra, word32 s0, word32 a0, word32 dwArg00, word32 dwArg44, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] Stack +0000:[0..31] Stack +0044:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
altcp_mbedtls_lower_sent_entry:
l23086F94:
	branch a0 == 0<32> l23086FDA
l23086FDA:
	return
l23086F96:
	branch s0 == 0<32> l23086FD0
l23086FA0:
	word32 a5_11 = CONVERT(Mem9[s0 + 204<i32>:byte], byte, word32)
	branch (a5_11 & 1<32>) == 0<32> l23086FD0
l23086FA8:
	word32 a0_15
	word32 a1_16
	word32 s1_165
	word32 a2_166
	word32 a3_167
	word32 a4_168
	word32 a5_169
	word32 s2_170
	word32 s3_171
	word32 s4_172
	word32 s5_173
	word32 s7_174
	word32 s9_175
	word32 s10_176
	word32 s11_177
	word32 s0_23 = mbedtls_ssl_flush_output(ra, s0 + 4<i32>, a5_11 & 1<32>, dwArg0108, out s1_165, out a0_15, out a1_16, out a2_166, out a3_167, out a4_168, out a5_169, out s2_170, out s3_171, out s4_172, out s5_173, out s7_174, out s9_175, out s10_176, out s11_177)
	branch (CONVERT(Mem13[s0_23 + 204<i32>:byte], byte, word32) & 0x10<32>) == 0<32> l23086FD0
l23086FBA:
	word32 t1_43 = Mem13[a1_16 + 28<i32>:int32]
	branch t1_43 == 0<32> l23086FD0
l23086FD0:
	return
l23086FC4:
	word32 a5_59
	word32 t1_61
	word32 a3_65
	word32 a4_66
	word32 a6_67
	word32 a7_68
	word32 s1_69
	word32 s10_70
	word32 s11_71
	word32 s2_72
	word32 s4_73
	word32 s5_74
	word32 s6_75
	word32 s7_76
	word32 s9_77
	word32 t0_78
	word32 t4_79
	word32 tp_80
	word32 s3_81
	call t1_43 (retsize: 0;)
		uses: a0:a0_15,a1:Mem13[a0_15 + 8<i32>:word32],a2:0<32>,a3:a3_65,a4:a4_66,a5:a5_59,a6:a6_67,a7:a7_68,ra:ra,s0:s0_23,s1:s1_69,s10:s10_70,s11:s11_71,s2:s2_72,s3:s3_81,s4:s4_73,s5:s5_74,s6:s6_75,s7:s7_76,s8:dwLoc1C,s9:s9_77,Stack +0000:dwArg00,Stack +0044:dwArg44,Stack +0108:dwArg0108,Stack +FFFFFFE4:dwLoc1C,t0:t0_78,t1:t1_61,t3:dwArg00,t4:t4_79,tp:tp_80
		defs: a3:a3_65,a4:a4_66,a5:a5_59,a6:a6_67,a7:a7_68,s1:s1_69,s10:s10_70,s11:s11_71,s2:s2_72,s3:s3_81,s4:s4_73,s5:s5_74,s6:s6_75,s7:s7_76,s9:s9_77,t0:t0_78,t1:t1_61,t4:t4_79,tp:tp_80
	return
altcp_mbedtls_lower_sent_exit:


void altcp_mbedtls_mss(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5 t1
// Preserved: sp
altcp_mbedtls_mss_entry:
l23086FDE:
	branch a0 == 0<32> l23086FE6
l23086FE6:
	return
l23086FE0:
	word32 a0_5 = Mem0[a0 + 4<i32>:word32]
l23086FE2_thunk_altcp_mss:
	altcp_mss(a0_5, a5)
	return
altcp_mbedtls_mss_exit:


void altcp_mbedtls_set_poll(word32 a0, word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 t1
// Preserved: sp
altcp_mbedtls_set_poll_entry:
l23086FE8:
	branch a0 == 0<32> l23086FFA
l23086FFA:
	return
l23086FEC:
	word32 a0_7 = Mem0[a0 + 4<i32>:word32]
l23086FF6_thunk_altcp_poll:
	word32 a5_23
	altcp_poll(a0_7, 0x230871A0<32>, a1, a5, out a5_23)
	return
altcp_mbedtls_set_poll_exit:


word32 altcp_mbedtls_handle_rx_appldata(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg1C, word32 dwArg0128, ptr32 & s0Out, ptr32 & a0Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_lower_poll
//      altcp_mbedtls_lower_recv
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +001C:[0..31] Stack +0128:[0..31]
// LiveOut: a0 mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_handle_rx_appldata_entry:
l23086FFC:
	branch (CONVERT(Mem0[a1 + 204<i32>:byte], byte, word32) & 1<32>) == 0<32> l2308719C
l2308719C:
	s0Out = s0
	a0Out = 0xFFFFFFFA<32>
	mstatusOut = mstatus
	return ra
l23087006:
	word32 sp_252 = fp + -48<i32>
	word32 s0_116 = a1
	word32 s1_257 = a0
l23087032:
	word32 a0_412
	word32 a0_52
	word32 a5_56
	word32 s6_71
	word32 a1_859
	word32 a3_861
	word32 a4_862
	word32 a7_863
	word32 s2_864
	word32 s3_865
	word32 s4_866
	word32 s5_867
	word32 s8_868
	word32 a2_860
	word32 s0_857
	word32 s1_858
	ra = pbuf_alloc(ra, s0_116, s1_257, 0<32>, 760<i32>, 640<i32>, a3, a4, mstatus, Mem51[sp_252 + 4<i32>:word32], Mem51[sp_252 + 68<i32>:word32], Mem51[sp_252 + 168<i32>:word32], Mem51[sp_252 + 184<i32>:word32], Mem51[sp_252 + 216<i32>:word32], Mem51[sp_252 + 232<i32>:word32], Mem51[sp_252 + 248<i32>:word32], Mem51[sp_252 + 280<i32>:word32], Mem51[sp_252 + 296<i32>:word32], Mem51[sp_252 + 344<i32>:word32], out s0_857, out s1_858, out a0_52, out a1_859, out a2_860, out a3_861, out a4_862, out a5_56, out a7_863, out s2_864, out s3_865, out s4_866, out s5_867, out s6_71, out s8_868, out mstatus)
	branch a0_52 == 0<32> l23087066
l23087044:
	word32 a0_81
	word32 s4_85
	word32 a3_90
	word32 a4_91
	word32 s3_97
	word32 s7_100
	word32 mstatus_106
	word32 s9_101
	word32 s10_173
	word32 ra_107 = mbedtls_ssl_read(ra, s6_71, 760<i32>, a5_56, mstatus, Mem51[sp_252 + 56<i32>:word32], Mem51[sp_252 + 132<i32>:word32], Mem51[sp_252 + 264<i32>:word32], out s0_116, out a0_81, out a3_90, out a4_91, out s3_97, out s4_85, out s7_100, out s9_101, out s10_173, out mstatus_106)
	branch a0_81 >= 0<32> l23087094
l23087094:
	word32 s2_124
	word32 a4_121
	word32 a5_122
	word32 s4_128
	word32 s6_130
	word32 s5_129
	word32 a0_114
	word32 s8_131
	branch a0_81 == 0<32> l23087150
l23087150:
	word32 a1_841
	word32 a2_842
	word32 a7_843
	word32 s3_844
	word32 s1_840
	ra = pbuf_free(ra_107, s3_97, a3_90, a4_91, s4_85, mstatus_106, Mem51[sp_252 + 296<i32>:word32], out s0_116, out s1_840, out a0_114, out a1_841, out a2_842, out a3, out a4_121, out a5_122, out a7_843, out s2_124, out s3_844, out s4_128, out s5_129, out s6_130, out s8_131, out mstatus)
l23087096:
	word32 s1_146
	word32 s3_155
	word32 a2_845
	word32 a5_846
	ra = pbuf_realloc(ra_107, s0_116, s3_97, CONVERT(SLICE(a0_81, word16, 0), word16, word32), a3_90, a4_91, a0_81, s3_97, s4_85, mstatus_106, Mem51[sp_252 + 20<i32>:word32], Mem51[sp_252 + 152<i32>:word32], Mem51[sp_252 + 200<i32>:word32], Mem51[sp_252 + 232<i32>:word32], Mem51[sp_252 + 264<i32>:word32], Mem51[sp_252 + 280<i32>:word32], Mem51[sp_252 + 296<i32>:word32], Mem51[sp_252 + 360<i32>:word32], out s1_146, out a2_845, out a3, out a4_121, out a5_846, out s2_124, out s3_155, out s4_128, out s5_129, out s6_130, out s8_131, out mstatus)
	a5_122 = Mem51[s0_116 + 216<i32>:int32] + s2_124
	Mem169[s0_116 + 216<i32>:word32] = a5_122
	branch mbedtls_ssl_get_bytes_avail(a5_122) != 0<32> l230870D0
l230870B4:
	a5_122 = Mem169[s0_116 + 216<i32>:int32]
	s10_173 = Mem169[s1_146 + 4<i32>:int32]
	s4_128 = Mem169[s0_116 + 212<i32>:int32] - a5_122
l230870C4:
	branch s4_128 > 0<32> l2308712E
l2308712E:
	s9_101 = s4_128
	branch s7_100 >= s4_128 l23087136
l23087134:
	s9_101 = s5_129
l23087136:
	altcp_recved(s10_173, a5_122, out a5_122)
	s4_128 = s4_128 - s9_101
l230870C8:
	Mem195[s0_116 + 212<i32>:word32] = 0<32>
	Mem196[s0_116 + 216<i32>:word32] = 0<32>
l230870D0:
	a0_114 = Mem198[s0_116 + 200<i32>:int32]
	branch a0_114 != 0<32> l23087148
l23087148:
	pbuf_cat(a0_114, s3_155, a4_121)
l230870D6:
	Mem207[s0_116 + 200<i32>:word32] = s3_155
l230870DA:
	word32 a5_211
	word32 a4_272
	word32 s3_210 = Mem209[s0_116 + 200<i32>:int32]
	branch s3_210 == 0<32> l23087170
l23087170:
	a5_211 = CONVERT(Mem209[s0_116 + 204<i32>:byte], byte, word32)
	a4 = a5_211 & 12<i32>
	branch (a5_211 & 12<i32>) != s8_131 l23087164
l2308717C:
	Mem218[s0_116 + 204<i32>:byte] = SLICE(a5_211 | 8<i32>, byte, 0)
	a5_211 = a5_211 | 8<i32>
	branch (a5_211 | 8<i32>) == 0<32> l23087164
l23087188:
	word32 s1_221 = Mem218[a0_114 + 8<i32>:word32]
	word32 a0_267
	word32 tp_269
	word32 t3_270
	word32 a6_271
	word32 a7_275
	word32 t0_276
	word32 t1_277
	word32 t4_278
	word32 t5_279
	word32 t6_280
	word32 s11_281
	word32 t2_282
	word32 gp_283
	call a5_211 | 8<i32> (retsize: 0;)
		uses: a0:a0_220,a1:s1_221,a2:0<32>,a3:0<32>,a4:a4_272,a6:a6_271,a7:a7_275,gp:gp_283,mstatus:mstatus_274,ra:ra_233,s0:s0_208,s1:s1_221,s10:s10_246,s11:s11_281,s2:s2_237,s3:s3_210,s4:s4_241,s5:s5_225,s6:s6_227,s7:s7_100,s8:s8_213,s9:s9_243,t0:t0_276,t1:t1_277,t2:t2_282,t3:t3_270,t4:t4_278,t5:t5_279,t6:t6_280,tp:tp_269
		defs: a0:a0_267,a3:a3_273,a4:a4_272,a6:a6_271,a7:a7_275,gp:gp_283,mstatus:mstatus_274,ra:ra_261,s0:s0_256,s1:s1_257,s11:s11_281,s2:s2_262,sp:sp_252,t0:t0_276,t1:t1_277,t2:t2_282,t3:t3_270,t4:t4_278,t5:t5_279,t6:t6_280,tp:tp_269
	a4 = a4_272
	branch a0_267 == 0<32> l2308716A
l23087194:
	branch a0_267 != 0xFFFFFFF3<32> l23087066
l2308719A:
l230870E2:
	Mem285[s0_116 + 200<i32>:word32] = 0<32>
	word32 s1_288 = Mem285[a5_122 + 24<i32>:word32]
	branch a5_122 == 0<32> l2308715E
l2308715E:
	word32 a1_849
	word32 a7_851
	word32 s3_852
	word32 s4_853
	word32 s5_854
	word32 s6_855
	word32 s8_856
	word32 a2_850
	word32 s1_847
	word32 a0_848
	ra = pbuf_free(ra, s3_210, a3, a4_121, s4_128, mstatus, Mem285[sp_252 + 296<i32>:word32], out s0_116, out s1_847, out a0_848, out a1_849, out a2_850, out a3, out a4, out a5_211, out a7_851, out s2_124, out s3_852, out s4_853, out s5_854, out s6_855, out s8_856, out mstatus)
l230870EA:
	word32 s4_324 = CONVERT(Mem285[s3_210 + 8<i32>:uint16], uint16, word32)
	Mem329[s0_116 + 208<i32>:word32] = Mem285[s0_116 + 208<i32>:int32] + s4_324
	word32 a4_330 = CONVERT(Mem329[s0_116 + 204<i32>:byte], byte, word32)
	Mem333[s0_116 + 204<i32>:byte] = SLICE(a4_330 | 2<i32>, byte, 0)
	word32 s3_347
	word32 s4_348
	word32 a0_351
	word32 tp_353
	word32 t3_354
	word32 a6_355
	word32 a7_359
	word32 t0_360
	word32 t1_361
	word32 t4_362
	word32 t5_363
	word32 t6_364
	word32 s11_365
	word32 t2_366
	word32 gp_367
	call a5_122 (retsize: 0;)
		uses: a0:a0_220,a1:s1_288,a2:s3_210,a3:0<32>,a4:a4_330 | 2<i32>,a6:a6_355,a7:a7_359,gp:gp_367,mstatus:mstatus_358,ra:ra_233,s0:s0_208,s1:Mem333[a0_220 + 8<i32>:word32],s10:s10_246,s11:s11_365,s2:s2_237,s3:s3_210,s4:s4_324,s5:s5_225,s6:s6_227,s7:s7_100,s8:s8_213,s9:s9_243,t0:t0_360,t1:t1_361,t2:t2_366,t3:t3_354,t4:t4_362,t5:t5_363,t6:t6_364,tp:tp_353
		defs: a0:a0_351,a3:a3_357,a4:a4_356,a5:a5_337,a6:a6_355,a7:a7_359,gp:gp_367,mstatus:mstatus_358,ra:ra_345,s0:s0_340,s11:s11_365,s2:s2_346,s3:s3_347,s4:s4_348,sp:sp_336,t0:t0_360,t1:t1_361,t2:t2_366,t3:t3_354,t4:t4_362,t5:t5_363,t6:t6_364,tp:tp_353
	branch a0_351 == 0<32> l23087164
l23087164:
	s1_257 = Mem369[a5_211 + 12<i32>:word32]
	branch s0_116 != a5_211 l23087066
l2308716A:
	branch s2_124 != 0<32> l23087032
l2308716E:
l23087112:
	branch a0_351 == 0xFFFFFFF3<32> l23087076
l23087118:
	word32 a5_375 = Mem333[s0_116 + 208<i32>:int32]
	Mem376[s0_116 + 200<i32>:word32] = s3_347
	word32 a5_377 = a5_375 - s4_348
	branch a5_377 < 0<32> l23087158
l23087158:
	Mem378[s0_116 + 208<i32>:word32] = 0<32>
l23087128:
	Mem379[s0_116 + 208<i32>:word32] = a5_377
l23087056:
	branch a0_81 == 0xF9FFF880<32> l2308706A
l2308706A:
	word32 a5_391
	word32 s1_392
	word32 s2_819
	word32 s4_821
	word32 s5_822
	word32 s6_823
	word32 s8_824
	word32 s3_820
	word32 s0_812
	word32 a0_813
	word32 a1_814
	word32 a2_815
	word32 a3_816
	word32 a4_817
	word32 a7_818
	ra = pbuf_free(ra_107, s3_97, a3_90, a4_91, s4_85, mstatus_106, Mem51[sp_252 + 296<i32>:word32], out s0_812, out s1_392, out a0_813, out a1_814, out a2_815, out a3_816, out a4_817, out a5_391, out a7_818, out s2_819, out s3_820, out s4_821, out s5_822, out s6_823, out s8_824, out mstatus)
	altcp_abort(s1_392, a5_391)
l23087076:
	a0_412 = 0xFFFFFFF3<32>
l23087060:
	word32 s8_839
	word32 a2_829
	word32 a4_831
	word32 a5_832
	word32 a7_833
	word32 s2_834
	word32 s3_835
	word32 s4_836
	word32 s5_837
	word32 s6_838
	word32 a3_830
	word32 s0_825
	word32 s1_826
	word32 a0_827
	word32 a1_828
	ra = pbuf_free(ra_107, s3_97, a3_90, a4_91, s4_85, mstatus_106, Mem51[sp_252 + 296<i32>:word32], out s0_825, out s1_826, out a0_827, out a1_828, out a2_829, out a3_830, out a4_831, out a5_832, out a7_833, out s2_834, out s3_835, out s4_836, out s5_837, out s6_838, out s8_839, out mstatus)
l23087066:
	a0_412 = 0<32>
l23087078:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s0Out = s4
	a0Out = a0_412
	mstatusOut = mstatus
	return ra
altcp_mbedtls_handle_rx_appldata_exit:


void altcp_mbedtls_lower_poll(word32 ra, word32 a0, word32 a1, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg44, word32 dwArg0108)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31] Stack +0108:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_lower_poll_entry:
l230871A0:
	branch a0 != 0<32> l230871A6
l230871A6:
	word32 a0_10 = Mem8[a1 + 12<i32>:word32]
	word32 s0_11 = a0_10
	branch a1 != 0<32> l230871C4
l230871C4:
	word32 a1_16
	word32 a3_18
	word32 a4_19
	word32 s1_252
	word32 a0_253
	word32 a2_254
	word32 a5_255
	word32 s2_256
	word32 s3_257
	word32 s4_258
	word32 s5_259
	word32 s7_260
	word32 s9_261
	word32 s10_262
	word32 s11_263
	ra = altcp_mbedtls_handle_rx_appldata(ra, mbedtls_ssl_flush_output(ra, a1 + 4<i32>, a5, dwArg0108, out s1_252, out a0_253, out a1_16, out a2_254, out a3_18, out a4_19, out a5_255, out s2_256, out s3_257, out s4_258, out s5_259, out s7_260, out s9_261, out s10_262, out s11_263), a1_16, a3_18, a4_19, mstatus, dwLoc04, dwArg0108, out s0_11, out a0_10, out mstatus)
	a5 = 0xFFFFFFF3<32>
	branch a0_10 != 0xFFFFFFF3<32> l230871B2
l230871DC:
l230871B2:
	word32 t1_77 = Mem76[s0_11 + 32<i32>:int32]
	branch t1_77 != 0<32> l230871DE
l230871DE:
	word32 s0_79 = Mem76[a0_10 + 8<i32>:word32]
	word32 t1_93
	word32 a2_96
	word32 a3_98
	word32 a4_99
	word32 a6_100
	word32 a7_101
	word32 s1_102
	word32 s10_103
	word32 s11_104
	word32 s2_105
	word32 s4_106
	word32 s5_107
	word32 s6_108
	word32 s7_109
	word32 s9_110
	word32 t0_111
	word32 t4_112
	word32 tp_113
	word32 s3_114
	word32 t5_116
	word32 t6_117
	word32 gp_118
	word32 t2_119
	call t1_77 (retsize: 0;)
		uses: a0:a0_78,a1:s0_79,a2:a2_96,a3:a3_98,a4:a4_99,a5:a5_86,a6:a6_100,a7:a7_101,gp:gp_118,mstatus:mstatus_87,ra:ra_85,s0:s0_79,s1:s1_102,s10:s10_103,s11:s11_104,s2:s2_105,s3:s3_114,s4:s4_106,s5:s5_107,s6:s6_108,s7:s7_109,s8:dwLoc1C,s9:s9_110,Stack +0000:dwArg00,Stack +0044:dwArg44,Stack +0108:dwArg0108,Stack +FFFFFFE4:dwLoc1C,Stack +FFFFFFFC:dwLoc04,t0:t0_111,t1:t1_93,t2:t2_119,t3:dwArg00,t4:t4_112,t5:t5_116,t6:t6_117,tp:tp_113
		defs: a2:a2_96,a3:a3_98,a4:a4_99,a6:a6_100,a7:a7_101,gp:gp_118,s1:s1_102,s10:s10_103,s11:s11_104,s2:s2_105,s3:s3_114,s4:s4_106,s5:s5_107,s6:s6_108,s7:s7_109,s9:s9_110,t0:t0_111,t1:t1_93,t2:t2_119,t4:t4_112,t5:t5_116,t6:t6_117,tp:tp_113
	return
l230871BA:
l230871BC:
	return
l230871A2:
	return
altcp_mbedtls_lower_poll_exit:


void altcp_mbedtls_lower_recv_process(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg1C, word32 dwArg28, word32 dwArg74, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_lower_connected
//      altcp_mbedtls_lower_recv
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0074:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_lower_recv_process_entry:
l230871EA:
	word32 a5_23 = CONVERT(Mem21[a1 + 204<i32>:byte], byte, word32)
	word32 s0_103 = a0
	word32 s1_126 = a1
	branch (a5_23 & 1<32>) == 0<32> l23087226
l23087226:
	word32 a0_30
	word32 a5_41
	word32 s5_544
	word32 s2_543
	word32 a4_542
	word32 a1_540
	word32 a2_541
	word32 s3_113
	word32 s4_114
	word32 s6_116
	word32 s7_117
	ra = mbedtls_ssl_handshake(ra, a1 + 4<i32>, a5_23 & 1<32>, mstatus, dwArg28, dwArg74, out s1_126, out a0_30, out a1_540, out a2_541, out a3, out a4_542, out a5_41, out s2_543, out s3_113, out s4_114, out s5_544, out s6_116, out s7_117, out mstatus)
	word32 s0_62 = Mem21[a0_30 + 4<i32>:word32]
	word32 a0_104 = altcp_output(a0_30, a5_41)
	word32 s2_112 = Mem21[s1_126 + 212<i32>:int32]
	branch s2_112 == 0<32> l23087254
l2308723E:
	s6_116 = Mem21[s0_62 + 4<i32>:int32]
	word32 a5_68 = 0x10000000<32>
	s7_117 = 0xFFFFFFE<32>
	s3_113 = 0xFFFFFFF<32>
l2308724C:
	branch s2_112 > 0<32> l2308727A
l2308727A:
	s4_114 = s2_112
	branch s2_112 <= 0xFFFFFFE<32> l23087282
l23087280:
	s4_114 = 0xFFFFFFF<32>
l23087282:
	a0_104 = altcp_recved(s6_116, a5_68, out a5_68)
	s2_112 = s2_112 - s4_114
l23087250:
	Mem91[s1_126 + 212<i32>:word32] = 0<32>
l23087254:
	a4 = a0_30 & -129<i32>
	word32 a5_173 = 0xF9000700<32>
	branch (a0_30 & -129<i32>) != 0xF9000700<32> l23087294
l23087294:
	branch a0_30 == 0<32> l230872B2
l230872B2:
	word32 a5_100 = CONVERT(Mem99[s1_126 + 204<i32>:byte], byte, word32)
	Mem102[s1_126 + 204<i32>:byte] = SLICE(a5_100 | 1<i32>, byte, 0)
	s0_103 = Mem102[(a5_100 | 1<i32>) + 20<i32>:word32]
	branch (a5_100 | 1<i32>) != 0<32> l230872CA
l230872CA:
	word32 s0_106 = Mem102[a0_104 + 8<i32>:word32]
	word32 a0_136
	call a5_100 | 1<i32> (retsize: 0;)
		uses: a0:a0_104,a1:s0_106,a2:0<32>,a3:a3_144,a4:a4_142,mstatus:mstatus_44,ra:ra_45,s0:s0_106,s1:s1_37,s2:s2_112,s3:s3_113,s4:s4_114,s5:a0_30,s6:s6_116,s7:s7_117,Stack +0058:dwArg28,Stack +00A4:dwArg74
		defs: a0:a0_136,a3:a3_144,a4:a4_142,mstatus:mstatus_143,ra:ra_127,s0:s0_125,s1:s1_126
	branch a0_136 == 0<32> l230872C2
l230872D4:
l230872C2:
	branch Mem102[s1_126 + 196<i32>:int32] != 0<32> l2308720A
l230872C8:
l23087298:
	word32 s0_159 = Mem99[0xF9000724<32>:word32]
	branch false l230872A2
l2308729C:
	word32 a4_180
	word32 a3_182
	call 0xF9000700<32> (retsize: 0;)
		uses: a0:a0_104,a1:0xFFFFFFF1<32>,a3:a3_182,a4:a4_180,mstatus:mstatus_44,ra:ra_45,s0:Mem99[a0_104 + 8<i32>:word32],s1:s1_37,s2:s2_112,s3:s3_113,s4:s4_114,s5:a0_30,s6:s6_116,s7:s7_117,Stack +0058:dwArg28,Stack +00A4:dwArg74
		defs: a3:a3_182,a4:a4_180,a5:a5_173,s0:s0_163
l230872A2:
	word32 a5_199
	branch altcp_close(s0_159, a5_173, out a5_199) == 0<32> l23087262
l230872AA:
	altcp_abort(s0_159, a5_199)
l23087262:
l23087264:
	0<32> = dwArg0128
	return
l2308720A:
	0<32> = dwArg0128
l23087222_thunk_altcp_mbedtls_handle_rx_appldata:
	word32 s0_537
	word32 a0_538
	word32 mstatus_539
	altcp_mbedtls_handle_rx_appldata(ra, s0_103, s1_126, a3, a4, mstatus, dwArg1C, dwArg0128, out s0_537, out a0_538, out mstatus_539)
	return
altcp_mbedtls_lower_recv_process_exit:


void altcp_mbedtls_lower_connected(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg1C, word32 dwArg28, word32 dwArg74, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0074:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_lower_connected_entry:
l230872D6:
	branch a0 == 0<32> l230872F0
l230872D8:
	word32 a0_6 = Mem0[a1 + 12<i32>:word32]
	branch a1 == 0<32> l230872F0
l230872F0:
	return
l230872DC:
	branch a2 == 0<32> l230872EC
l230872DE:
	word32 t1_9 = Mem0[a0_6 + 20<i32>:int32]
	branch t1_9 == 0<32> l230872EC
l230872EC:
l230872EC_thunk_altcp_mbedtls_lower_recv_process:
	altcp_mbedtls_lower_recv_process(ra, a0_6, a1, a3, a4, mstatus, dwArg1C, dwArg28, dwArg74, dwArg0128)
	return
l230872E6:
	word32 t1_59
	word32 a5_64
	word32 a6_65
	word32 a7_66
	word32 gp_67
	word32 s0_68
	word32 s1_69
	word32 s10_70
	word32 s11_71
	word32 s2_72
	word32 s3_73
	word32 s4_74
	word32 s5_75
	word32 s6_76
	word32 s7_77
	word32 s8_78
	word32 s9_79
	word32 t0_80
	word32 t2_81
	word32 t3_82
	word32 t4_83
	word32 t5_84
	word32 t6_85
	word32 tp_86
	call t1_9 (retsize: 0;)
		uses: a0:Mem0[a0_6 + 8<i32>:word32],a1:a0_6,a2:a2,a3:a3,a4:a4,a5:a5_64,a6:a6_65,a7:a7_66,gp:gp_67,mstatus:mstatus,ra:ra,s0:s0_68,s1:s1_69,s10:s10_70,s11:s11_71,s2:s2_72,s3:s3_73,s4:s4_74,s5:s5_75,s6:s6_76,s7:s7_77,s8:s8_78,s9:s9_79,Stack +001C:dwArg1C,Stack +0028:dwArg28,Stack +0074:dwArg74,Stack +0128:dwArg0128,t0:t0_80,t1:t1_59,t2:t2_81,t3:t3_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
		defs: a5:a5_64,a6:a6_65,a7:a7_66,gp:gp_67,s0:s0_68,s1:s1_69,s10:s10_70,s11:s11_71,s2:s2_72,s3:s3_73,s4:s4_74,s5:s5_75,s6:s6_76,s7:s7_77,s8:s8_78,s9:s9_79,t0:t0_80,t1:t1_59,t2:t2_81,t3:t3_82,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_86
	return
altcp_mbedtls_lower_connected_exit:


void altcp_mbedtls_lower_recv(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg1C, word32 dwArg28, word32 dwArg44, word32 dwArg74, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0074:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_lower_recv_entry:
l230872F4:
	word32 a5_11 = a2
	branch a0 != 0<32> l2308731E
l2308731E:
	word32 a0_13 = Mem9[s0 + 12<i32>:word32]
	word32 s1_104 = a0_13
	branch s0 == 0<32> l23087300
l23087324:
	branch a2 != 0<32> l23087386
l23087386:
	word32 a0_15 = Mem9[s0 + 196<i32>:int32]
	branch a0_15 != 0<32> l230873A0
l230873A0:
	pbuf_cat(a0_15, a2, a4)
l2308738C:
	Mem18[s0 + 196<i32>:word32] = a2
l23087390:
l2308739C_thunk_altcp_mbedtls_lower_recv_process:
	altcp_mbedtls_lower_recv_process(ra, a0_13, s0, a3, a4, mstatus, dwArg1C, dwArg28, dwArg74, dwArg0128)
	return
l23087326:
	word32 a5_106 = CONVERT(Mem9[s0 + 204<i32>:byte], byte, word32)
	branch (a5_106 & 3<i32>) != 3<32> l23087374
l23087374:
	word32 a0_69 = Mem9[a5_106 + 36<i32>:word32]
	branch a5_106 == 0<32> l2308737E
l23087378:
	word32 s4_84
	word32 s2_86
	word32 s3_87
	word32 s5_88
	word32 s6_89
	word32 s7_90
	word32 a6_91
	word32 tp_92
	word32 a7_94
	word32 gp_95
	word32 s10_96
	word32 s11_97
	word32 s9_98
	word32 t0_99
	word32 t2_100
	word32 t4_101
	word32 t5_102
	word32 t6_103
	call a5_106 (retsize: 0;)
		uses: a0:Mem9[a0_69 + 8<i32>:word32],a1:0xFFFFFFF1<32>,a2:a2,a3:a5_66 & 3<i32>,a4:3<32>,a6:a6_91,a7:a7_94,gp:gp_95,mstatus:mstatus,ra:ra,s0:s0,s1:a0_13,s10:s10_96,s11:s11_97,s2:s2_86,s3:s3_87,s4:s4_84,s5:s5_88,s6:s6_89,s7:s7_90,s9:s9_98,Stack +0004:dwLoc1C,Stack +001C:dwLoc04,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +003C:dwArg1C,Stack +0048:dwArg28,Stack +0064:dwArg44,Stack +0094:dwArg74,Stack +0128:dwArg0108,Stack +0148:dwArg0128,t0:t0_99,t2:t2_100,t4:t4_101,t5:t5_102,t6:t6_103,tp:tp_92
		defs: a5:a5_77,a6:a6_91,a7:a7_94,gp:gp_95,s1:s1_75,s10:s10_96,s11:s11_97,s2:s2_86,s3:s3_87,s4:s4_84,s5:s5_88,s6:s6_89,s7:s7_90,s9:s9_98,t0:t0_99,t2:t2_100,t4:t4_101,t5:t5_102,t6:t6_103,tp:tp_92
l2308737E:
	word32 a5_490
	altcp_close(s1_104, a5_106, out a5_490)
l23087334:
	word32 a4_110 = Mem9[s0 + 196<i32>:int32]
	branch a4_110 != 0<32> l23087340
l2308733A:
	a4_110 = Mem9[s0 + 200<i32>:int32]
	branch a4_110 == 0<32> l23087354
l23087354:
	Mem113[s0 + 204<i32>:byte] = SLICE(a5_106 | 8<i32>, byte, 0)
	word32 t1_114 = Mem113[a0_13 + 24<i32>:int32]
	branch t1_114 == 0<32> l23087350
l23087364:
	word32 s2_136
	word32 s3_137
	word32 s5_138
	word32 s6_139
	word32 s7_140
	word32 a6_141
	word32 tp_142
	word32 a7_144
	word32 gp_145
	word32 s10_146
	word32 s11_147
	word32 s9_148
	word32 t0_149
	word32 t2_150
	word32 t4_151
	word32 t5_152
	word32 t6_153
	call t1_114 (retsize: 0;)
		uses: a0:Mem113[a0_13 + 8<i32>:word32],a1:a0_13,a2:a2,a3:0<32>,a4:a4_111,a6:a6_141,a7:a7_144,gp:gp_145,mstatus:mstatus,ra:ra,s0:s0,s1:a0_13,s10:s10_146,s11:s11_147,s2:s2_136,s3:s3_137,s4:dwArg04,s5:s5_138,s6:s6_139,s7:s7_140,s8:dwLoc1C,s9:s9_148,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +001C:dwArg1C,Stack +0028:dwArg28,Stack +0044:dwArg44,Stack +0074:dwArg74,Stack +0108:dwArg0108,Stack +0128:dwArg0128,Stack +FFFFFFE4:dwLoc1C,Stack +FFFFFFFC:dwLoc04,t0:t0_149,t2:t2_150,t3:dwArg00,t4:t4_151,t5:t5_152,t6:t6_153,tp:tp_142
		defs: a6:a6_141,a7:a7_144,gp:gp_145,s10:s10_146,s11:s11_147,s2:s2_136,s3:s3_137,s5:s5_138,s6:s6_139,s7:s7_140,s9:s9_148,t0:t0_149,t2:t2_150,t4:t4_151,t5:t5_152,t6:t6_153,tp:tp_142
	return
l23087340:
	Mem157[s0 + 204<i32>:byte] = SLICE(a5_106 | 4<i32>, byte, 0)
	word32 a0_488
	word32 mstatus_489
	word32 s0_487
	altcp_mbedtls_handle_rx_appldata(ra, a0_13, s0, a5_106 & 3<i32>, a4_110, mstatus, dwLoc04, dwArg0108, out s0_487, out a0_488, out mstatus_489)
l23087350:
l23087300:
	branch a2 == 0<32> l2308730C
l23087302:
	word32 s0_473
	word32 s1_474
	word32 a3_477
	word32 a2_476
	word32 a0_475
	word32 s2_480
	word32 a7_479
	word32 s5_483
	word32 s4_482
	word32 a4_478
	word32 s3_481
	word32 mstatus_486
	word32 s8_485
	word32 s6_484
	pbuf_free(ra, a2, a3, a4, s4, mstatus, dwArg0108, out s0_473, out s1_474, out a0_475, out a1, out a2_476, out a3_477, out a4_478, out a5_11, out a7_479, out s2_480, out s3_481, out s4_482, out s5_483, out s6_484, out s8_485, out mstatus_486)
l2308730C:
	word32 a5_472
	altcp_close(a1, a5_11, out a5_472)
l23087314:
	return
altcp_mbedtls_lower_recv_exit:


word32 altcp_tls_wrap(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg24, word32 dwArg78, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_new
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0024:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a4 a5 ra s1 s2 s3 s4 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tls_wrap_entry:
l230873A8:
	word32 s0_43
	branch a1 != 0<32> l230873C0
l230873C0:
	word32 a3_18
	word32 a2_184
	ra = altcp_alloc(ra, a0, a3, a4, mstatus, out s1, out a1, out a2_184, out a3_18, out a4, out a5)
	branch a0 == 0<32> l230873B2
l230873CC:
	word32 a0_34
	word32 a3_37
	word32 s4_185
	ra = altcp_mbedtls_setup(ra, s1, a0, a3_18, a4, s2, s3, s4, mstatus, dwLoc1C, dwLoc08, dwArg24, a1, dwArg78, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, out s0_43, out s1, out a0_34, out a1, out a3_37, out a4, out a5, out s2, out s3, out s4_185, out s6, out s7, out s9)
	branch a0_34 == 0<32> l230873B4
l230873D8:
	s1 = altcp_free(ra, s0_43, a3_37, a4, a5, mstatus, out a1, out a4, out a5)
l230873B2:
	s0_43 = 0<32>
l230873B4:
	s1Out = s1
	a0Out = s0_43
	a1Out = a1
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s6Out = s6
	s7Out = s7
	s8Out = dwLoc1C
	s9Out = s9
	return ra
altcp_tls_wrap_exit:


word32 altcp_tls_context(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_connected_callback
//      bl_cipstart
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
altcp_tls_context_entry:
l230873E0:
	branch a0 == 0<32> l230873E8
l230873E2:
	a0 = Mem0[a0 + 12<i32>:word32]
	branch a0 == 0<32> l230873E8
l230873E6:
	a0 = a0 + 4<32>
l230873E8:
	return a0
altcp_tls_context_exit:


word32 altcp_tls_create_config_client(word32 ra, word32 s0, word32 a0, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg84, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArgFC, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0188, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cipstart
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +00FC:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tls_create_config_client_entry:
l230873EA:
l230873EC_thunk_altcp_tls_create_config_client_common:
	word32 a3_12
	word32 a4_13
	word32 a5_14
	word32 s1_18
	word32 s2_21
	word32 s3_22
	word32 s4_23
	word32 s7_26
	word32 a0_37
	word32 mstatus_38
	word32 s5_79
	word32 s6_80
	word32 s8_81
	word32 s10_82
	word32 s11_83
	word32 ra_17 = altcp_tls_create_config_client_common(ra, s0, a0, 0<32>, a4, mstatus, dwArg08, dwArg14, dwArg18, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, dwArg64, dwArg68, dwArg84, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE4, dwArgE8, dwArgF8, dwArgFC, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, dwArg0188, out s1_18, out a0_37, out a3_12, out a4_13, out a5_14, out s2_21, out s3_22, out s4_23, out s5_79, out s6_80, out s7_26, out s8_81, out s10_82, out s11_83, out mstatus_38)
	s1Out = s1_18
	a0Out = a0_37
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_14
	s2Out = s2_21
	s3Out = s3_22
	s4Out = s4_23
	s7Out = s7_26
	mstatusOut = mstatus_38
	return ra_17
altcp_tls_create_config_client_exit:


word32 altcp_tls_create_config_client_2wayauth(word32 ra, word32 s0, word32 s1, word32 a0, word32 a2, word32 a4, word32 a6, word32 s2, word32 s3, word32 s4, word32 s6, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgEC, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cipstart
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s6:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00EC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
altcp_tls_create_config_client_2wayauth_entry:
l230873F0:
	word32 s1_123
	word32 s0_122
	s1_123 = s1
	branch a6 != 0<32> l2308740A
l2308740A:
	s1_123 = s1
	branch a2 == 0<32> l23087406
l2308740C:
	word32 s10_44
	word32 s11_45
	word32 s5_49
	word32 s6_50
	word32 s8_52
	word32 a0_62
	word32 s4_397
	ra = altcp_tls_create_config_client_common(ra, s0, a0, 1<32>, a4, mstatus, s2, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg28, dwArg44, dwArg48, s3, s1, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgDC, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0168, out s1_123, out a0_62, out a3, out a4, out a5, out s2, out s3, out s4_397, out s5_49, out s6_50, out s7, out s8_52, out s10_44, out s11_45, out mstatus)
	branch a0_62 == 0<32> l23087406
l23087422:
	word32 a0_165
	word32 a3_69
	word32 a4_70
	word32 a5_71
	word32 a0_78
	word32 s0_83
	word32 s4_85
	word32 s10_95
	word32 s11_96
	word32 s5_99
	word32 a0_398
	word32 a1_399
	word32 a3_400
	word32 a4_401
	word32 s6_402
	word32 s8_403
	word32 a2_115
	ra = mbedtls_x509_crt_parse(mbedtls_x509_crt_init(ra, Mem19[a0_62 + 960<i32>:int32], out a0_398, out a1_399, out a3_69, out a4_70, out a5_71), a0_62, Mem19[a0_62 + 960<i32>:int32], s2, s6_50, a3_69, a4_70, a5_71, s2, s5_49, s6_50, s8_52, s10_44, s11_45, mstatus, s4, s2, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg38, dwArg54, dwArg58, dwArg74, dwArg78, dwArg98, dwArgD4, dwArgD8, dwArgEC, dwArg0118, out s0_83, out s1_123, out a0_78, out a2_115, out a3_400, out a4_401, out a5, out s2, out s3, out s4_85, out s5_99, out s6_402, out s7, out s8_403, out s10_95, out s11_96, out mstatus)
	branch a0_78 == 0<32> l23087440
l23087440:
	mbedtls_pk_init(Mem19[s0_83 + 964<i32>:int32])
	word32 a3_116
	word32 a4_117
	word32 a0_141
	ra = mbedtls_pk_parse_key(ra, s0_83, s1_123, s1_123, s3, s5_99, s2, s3, s4_85, s7, s10_95, s11_96, mstatus, s4, s2, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg24, dwArg28, dwArg44, dwArg48, dwArg54, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0128, dwArg0178, out s0_122, out s1_123, out a0_141, out a2_115, out a3_116, out a4_117, out a5, out s2, out s3, out s7, out mstatus)
	branch a0_141 == 0<32> l2308745C
l2308745C:
	word32 a0_146
	ra = mbedtls_ssl_conf_own_cert(ra, Mem19[s0_122 + 960<i32>:int32], Mem19[s0_122 + 964<i32>:int32], a3_116, a4_117, a5, mstatus, s6, s4, dwArgD8, dwArg0118, out s0_122, out s1_123, out a0_146, out a2_115, out a3, out a4, out a5, out s2, out s3)
	branch a0_146 != 0<32> l23087458
l23087458:
	a0_165 = s0_122
l23087438:
	a0_165 = Mem19[s0_83 + 960<i32>:int32]
l2308743C:
	word32 s4_404
	word32 s5_405
	word32 s6_406
	word32 s8_407
	altcp_mbedtls_free_config(s1_123, a0_165, a2_115, a5, s2, s3, mstatus, s4, s2, dwArg04, s3, dwArg84, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out s1_123, out a3, out a4, out a5, out s2, out s3, out s4_404, out s5_405, out s6_406, out s8_407)
l23087406:
	s0_122 = 0<32>
l2308746C:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_123
	a0Out = s0_122
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s7Out = s7
	mstatusOut = mstatus
	return ra
altcp_tls_create_config_client_2wayauth_exit:


word32 altcp_tls_free_config(word32 ra, word32 s1, word32 a0, word32 a1, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg24, word32 dwArg84, word32 dwArgA4, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0198, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_connected_callback
//      tcp_receive_callback
//      tcp_err_callback
//      bl_cipstart
//      bl_cipclose
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut: a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra sp
altcp_tls_free_config_entry:
l23087482:
	word32 s0_34 = a0
	word32 a0_10 = Mem7[a0 + 964<i32>:int32]
	branch a0_10 == 0<32> l23087492
l23087490:
	word32 a0_180
	word32 a2_181
	ra = mbedtls_pk_free(ra, a0_10, a5, out a0_180, out a2_181, out a5)
l23087492:
	word32 a0_18 = Mem7[a0 + 960<i32>:int32]
	branch a0_18 == 0<32> l2308749C
l23087498:
	word32 s8_185
	word32 a0_182
	word32 a2_183
	word32 s4_184
	ra = mbedtls_x509_crt_free(ra, a0_18, a1, a5, mstatus, dwArg0128, dwArg0168, out s0_34, out s1, out a0_182, out a1, out a2_183, out a5, out s2, out s3, out s4_184, out s8_185)
l2308749C:
	word32 a0_44 = Mem7[s0_34 + 968<i32>:int32]
	branch a0_44 == 0<32> l230874A6
l230874A2:
	word32 a2_188
	word32 s4_189
	word32 s8_190
	word32 a0_186
	word32 a1_187
	mbedtls_x509_crt_free(ra, a0_44, a1, a5, mstatus, dwArg0128, dwArg0168, out s0_34, out s1, out a0_186, out a1_187, out a2_188, out a5, out s2, out s3, out s4_189, out s8_190)
l230874A6:
l230874AE_thunk_altcp_mbedtls_free_config:
	word32 a4_91
	word32 a5_92
	word32 s1_96
	word32 s2_97
	word32 s3_98
	word32 s4_99
	word32 s8_194
	word32 a3_191
	word32 s5_192
	word32 s6_193
	word32 s0_95 = altcp_mbedtls_free_config(s1, s0_34, dwArg10, a5, s2, s3, mstatus, dwArg04, dwArg08, dwArg24, dwArg84, dwArgA4, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0198, out s1_96, out a3_191, out a4_91, out a5_92, out s2_97, out s3_98, out s4_99, out s5_192, out s6_193, out s8_194)
	s1Out = s1_96
	a4Out = a4_91
	a5Out = a5_92
	s2Out = s2_97
	s3Out = s3_98
	s4Out = s4_99
	return s0_95
altcp_tls_free_config_exit:


void altcp_mbedtls_mem_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
altcp_mbedtls_mem_init_entry:
l230874B0:
	return
altcp_mbedtls_mem_init_exit:


word32 altcp_mbedtls_alloc(word32 ra, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg64, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_setup
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0064:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s1 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
altcp_mbedtls_alloc_entry:
l230874B2:
	word32 a0_16
	word32 a5_18
	word32 s0_19
	word32 a1_22
	word32 a3_23
	word32 a4_24
	word32 s1_27
	word32 s3_29
	word32 s6_32
	word32 s5_90
	word32 s4_89
	word32 s2_88
	word32 ra_39 = mem_calloc(ra, 1<32>, 220<i32>, a3, a4, s2, mstatus, dwArg04, dwArg64, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0158, out s0_19, out s1_27, out a0_16, out a1_22, out a3_23, out a4_24, out a5_18, out s2_88, out s3_29, out s4_89, out s5_90, out s6_32)
	branch a0_16 == 0<32> l230874C8
l230874C6:
	Mem40[s0_19:word32] = a0_16
l230874C8:
	s1Out = s1_27
	a0Out = a0_16
	a1Out = a1_22
	a3Out = a3_23
	a4Out = a4_24
	a5Out = a5_18
	s3Out = s3_29
	s6Out = s6_32
	return ra_39
altcp_mbedtls_alloc_exit:


word32 altcp_mbedtls_free(word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg24, word32 dwArg84, word32 dwArgA4, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_setup
//      altcp_mbedtls_dealloc
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a3 a4 a5 s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_free_entry:
l230874D0:
l230874D2_thunk_mem_free:
	word32 a1_13
	word32 a3_15
	word32 a4_16
	word32 a5_17
	word32 s1_21
	word32 s2_22
	word32 s3_23
	word32 s6_26
	word32 a7_54
	word32 s4_55
	word32 s5_56
	word32 s8_57
	mem_free(a1, a3, a4, s2, s3, s4, mstatus, dwArg04, dwArg08, dwArg24, dwArg84, dwArgA4, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0198, out s1_21, out a1_13, out a3_15, out a4_16, out a5_17, out a7_54, out s2_22, out s3_23, out s4_55, out s5_56, out s6_26, out s8_57)
	a1Out = a1_13
	a3Out = a3_15
	a4Out = a4_16
	a5Out = a5_17
	s2Out = s2_22
	s3Out = s3_23
	s6Out = s6_26
	return s1_21
altcp_mbedtls_free_exit:


word32 altcp_mbedtls_alloc_config(word32 ra, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArg74, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +0074:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 a5 ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_alloc_config_entry:
l230874D6:
	word32 a5_5 = CONVERT(SLICE(a0, word16, 0), word16, word32)
	branch a0 != a5_5 l230874E8
l230874E8:
	s1Out = s1
	a0Out = 0<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5_5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return ra
l230874E0:
l230874E4_thunk_mem_calloc:
	word32 a0_15
	word32 a5_17
	word32 a3_22
	word32 a4_23
	word32 s1_26
	word32 s2_27
	word32 s3_28
	word32 s4_29
	word32 s5_30
	word32 s6_31
	word32 s0_99
	word32 a1_100
	word32 ra_38 = mem_calloc(ra, 1<32>, a5_5, a3, a4, s2, mstatus, dwArg14, dwArg74, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0168, out s0_99, out s1_26, out a0_15, out a1_100, out a3_22, out a4_23, out a5_17, out s2_27, out s3_28, out s4_29, out s5_30, out s6_31)
	s1Out = s1_26
	a0Out = a0_15
	a3Out = a3_22
	a4Out = a4_23
	a5Out = a5_17
	s2Out = s2_27
	s3Out = s3_28
	s4Out = s4_29
	s5Out = s5_30
	s6Out = s6_31
	return ra_38
altcp_mbedtls_alloc_config_exit:


word32 altcp_mbedtls_free_config(word32 s1, word32 a0, word32 a2, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg24, word32 dwArg84, word32 dwArgA4, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config
//      altcp_tls_create_config_client_common
//      altcp_tls_create_config_client_2wayauth
//      altcp_tls_free_config
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
altcp_mbedtls_free_config_entry:
l230874EC:
	word32 a4_18
	word32 s4_22
	word32 a3_17 = mbedtls_ssl_config_free(s1, a0, a2, a5, mstatus, dwArg0138, dwArg0178, out a4_18, out s4_22)
l23087500_thunk_mem_free:
	word32 a3_34
	word32 a4_35
	word32 a5_36
	word32 s1_40
	word32 s2_41
	word32 s3_42
	word32 s4_43
	word32 s5_44
	word32 s6_45
	word32 s8_46
	word32 a1_79
	word32 a7_80
	word32 s0_39 = mem_free(a0, a3_17, a4_18, s2, s3, s4_22, mstatus, dwArg04, dwArg08, dwArg24, dwArg84, dwArgA4, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178, dwArg0198, out s1_40, out a1_79, out a3_34, out a4_35, out a5_36, out a7_80, out s2_41, out s3_42, out s4_43, out s5_44, out s6_45, out s8_46)
	s1Out = s1_40
	a3Out = a3_34
	a4Out = a4_35
	a5Out = a5_36
	s2Out = s2_41
	s3Out = s3_42
	s4Out = s4_43
	s5Out = s5_44
	s6Out = s6_45
	s8Out = s8_46
	return s0_39
altcp_mbedtls_free_config_exit:


void block_cipher_df(word32 ra, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_reseed
//      mbedtls_ctr_drbg_random
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
block_cipher_df_entry:
l23087504:
	branch a2 >u 384<i32> l2308766A
l2308766A:
	return
l2308750C:
	word32 a3_435
	word32 a4_436
	word32 a4_439
	word32 a5_437
	word32 a1_438
	word32 a5_440
	word32 a1_433
	word32 t1_431
	word32 a0_432
	word32 a2_434
	word32 ra_111 = mbedtls_aes_init(memset(ra, fp + -448<i32>, 0<32>, 416<i32>, out t1_431, out a0_432, out a1_433, out a2_434, out a3_435, out a4_436, out a5_437), fp + -728<i32>, out a1_438, out a4_439, out a5_440)
	word32 a5_445
	word32 a6_446
	word32 a7_447
	word32 a1_441
	word32 a4_444
	word32 a2_442
	word32 a3_443
	memcpy(fp + -424<i32>, a1, a2, out a1_441, out a2_442, out a3_443, out a4_444, out a5_445, out a6_446, out a7_447)
	Mem78[fp + -32<i32> + a2 + 3704<i32>:byte] = 0x80<8>
	word32 a5_80 = 0<32>
l23087584:
	Mem86[fp + -808<i32> + a5_80:byte] = SLICE(a5_80, byte, 0)
	a5_80 = a5_80 + 1<32>
	branch a5_80 != 32<i32> l23087584
l23087592:
	word32 s4_452
	word32 a1_449
	word32 a4_451
	word32 a3_450
	word32 a0_448
	word32 s0_121 = mbedtls_aes_setkey_enc(fp + -728<i32>, fp + -808<i32>, 256<i32>, 32<i32>, a5_80, dwLoc02FC, dwLoc0218, out a0_448, out a1_449, out a3_450, out a4_451, out s4_452)
	word32 s5_105 = 0x10<32>
l230875A6:
	word32 t1_465
	word32 a0_466
	word32 a1_467
	word32 a2_468
	word32 a3_469
	word32 a4_470
	word32 a5_471
	ra_111 = memset(ra_111, fp + -824<i32>, 0<32>, 0x10<32>, out t1_465, out a0_466, out a1_467, out a2_468, out a3_469, out a4_470, out a5_471)
	word32 s2_122 = s0_121
	word32 s4_123 = fp + -448<i32>
l230875B6:
	word32 a4_125 = fp + -824<i32>
	word32 a5_126 = 0<32>
l230875BA:
	a4_125 = a4_125 + 1<32>
	Mem137[a4_125 + 4095<i32>:byte] = SLICE(CONVERT(Mem131[s4_123 + a5_126:byte], byte, word32) ^ CONVERT(Mem131[a4_125:byte], byte, word32), byte, 0)
	a5_126 = a5_126 + 1<32>
	branch a5_126 != s5_105 l230875BA
l230875D4:
	branch s5_105 >=u s2_122 l230875DE
l230875DC:
l230875DE:
	word32 s10_457
	word32 s8_455
	word32 s7_454
	word32 s9_456
	word32 s3_167
	word32 s6_170
	word32 s1_453
	word32 s11_458
	s0_121 = mbedtls_aes_crypt_ecb(1<32>, fp + -824<i32>, fp + -824<i32>, dwLoc0314, dwLoc0208, out s1_453, out s2_122, out s3_167, out s4_123, out s5_105, out s6_170, out s7_454, out s8_455, out s9_456, out s10_457, out s11_458)
	branch s2_122 != 0<32> l230875B6
l230875F2:
	word32 a4_186
	word32 a1_459
	word32 a2_460
	word32 a3_461
	word32 a5_462
	word32 a6_463
	word32 a7_464
	memcpy(fp + -776<i32> + s3_167, fp + -824<i32>, 0x10<32>, out a1_459, out a2_460, out a3_461, out a4_186, out a5_462, out a6_463, out a7_464)
	word32 a5_199 = CONVERT(bLoc01BD, byte, word32)
	bLoc01BD = SLICE(a5_199 + 1<32>, byte, 0)
	branch s3_167 + 0x10<32> != s6_170 l230875A6
l23087610:
	word32 a0_472
	word32 a1_473
	word32 a3_474
	word32 a4_475
	word32 s4_476
	mbedtls_aes_setkey_enc(fp + -728<i32>, fp + -776<i32>, 256<i32>, a4_186, a5_199 + 1<32>, dwLoc02FC, dwLoc0218, out a0_472, out a1_473, out a3_474, out a4_475, out s4_476)
l23087620:
	word32 s1_234
	word32 s2_477
	word32 s3_478
	word32 s4_479
	word32 s5_480
	word32 s6_481
	word32 s7_482
	word32 s8_483
	word32 s9_484
	word32 s10_485
	word32 s11_486
	word32 s0_233 = mbedtls_aes_crypt_ecb(1<32>, fp + -744<i32>, fp + -744<i32>, dwLoc0314, dwLoc0208, out s1_234, out s2_477, out s3_478, out s4_479, out s5_480, out s6_481, out s7_482, out s8_483, out s9_484, out s10_485, out s11_486)
	word32 a1_487
	word32 a2_488
	word32 a3_489
	word32 a4_490
	word32 a5_491
	word32 a6_492
	word32 a7_493
	memcpy(s1_234, fp + -744<i32>, 0x10<32>, out a1_487, out a2_488, out a3_489, out a4_490, out a5_491, out a6_492, out a7_493)
	branch s0_233 != s1_234 + 0x10<32> l23087620
l2308763C:
	mbedtls_aes_free(fp + -728<i32>)
	return
block_cipher_df_exit:


word32 ctr_drbg_update_internal(word32 ra, word32 a0, word32 dwArgD8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_reseed
//      mbedtls_ctr_drbg_random
// MayUse:  a0:[0..31] ra:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a2 a5 ra s0 s1 s10 s11 s2 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ctr_drbg_update_internal_entry:
l23087670:
	word32 t1_238
	word32 a5_244
	word32 a1_240
	word32 a2_241
	word32 a4_243
	word32 a3_242
	word32 a0_239
	memset(ra, fp + -80<i32>, 0<32>, 48<i32>, out t1_238, out a0_239, out a1_240, out a2_241, out a3_242, out a4_243, out a5_244)
	word32 s0_156 = a0
	word32 s2_27 = 0<32>
	word32 s5_37 = a0 + 15<i32>
l230876A0:
	word32 a3_43 = fp + -80<i32> + s2_27
	word32 a4_45 = s5_37
l230876AC:
	word32 a5_50 = CONVERT(Mem47[a4_45:byte], byte, word32) + 1<32> & 255<i32>
	Mem51[a4_45:byte] = SLICE(a5_50, byte, 0)
	branch a5_50 != 0<32> l230876C4
l230876BC:
	word32 a5_52 = a4_45 + -1<i32>
	branch s0_156 != a4_45 l230876AA
l230876AA:
	a4_45 = a5_52
l230876C4:
	word32 s10_80
	word32 s11_81
	word32 s3_83
	word32 s4_84
	word32 s6_86
	word32 s7_245
	word32 s9_247
	word32 s8_246
	word32 s1_103
	s0_156 = mbedtls_aes_crypt_ecb(1<32>, s0_156, a3_43, dwLoc24, dwArgE8, out s1_103, out s2_27, out s3_83, out s4_84, out s5_37, out s6_86, out s7_245, out s8_246, out s9_247, out s10_80, out s11_81)
	branch s2_27 != s6_86 l230876A0
l230876D4:
	word32 a5_101 = 0<32>
l230876DA:
	s1_103 = s1_103 + 1<32>
	word32 a4_109 = CONVERT(Mem104[s4_84 + a5_101:byte], byte, word32) ^ CONVERT(Mem104[s1_103:byte], byte, word32)
	Mem110[s1_103 + 4095<i32>:byte] = SLICE(a4_109, byte, 0)
	a5_101 = a5_101 + 1<32>
	branch a5_101 != 48<i32> l230876DA
l230876F4:
	word32 s4_252
	word32 a0_248
	word32 a1_249
	word32 a4_251
	word32 a3_250
	word32 s0_124 = mbedtls_aes_setkey_enc(s3_83, fp + -80<i32>, 256<i32>, a4_109, a5_101, dwLoc0C, dwArgD8, out a0_248, out a1_249, out a3_250, out a4_251, out s4_252)
	word32 a5_133
	word32 a2_136
	word32 a6_256
	word32 a7_257
	word32 a1_253
	word32 a4_255
	word32 a3_254
	memcpy(s0_124, fp + -48<i32>, 0x10<32>, out a1_253, out a2_136, out a3_254, out a4_255, out a5_133, out a6_256, out a7_257)
	s0Out = s0_124
	s1Out = dwLoc4C
	a2Out = a2_136
	a5Out = a5_133
	s2Out = s2_27
	s6Out = s6_86
	s10Out = s10_80
	s11Out = s11_81
	return dwLoc08
ctr_drbg_update_internal_exit:


word32 mbedtls_ctr_drbg_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_ctr_drbg_init_entry:
l23087720:
l23087726_thunk_memset:
	word32 t1_16
	word32 a0_17
	word32 a1_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	return memset(ra, a0, 0<32>, 320<i32>, out t1_16, out a0_17, out a1_18, out a2_19, out a3_20, out a4_21, out a5_22)
mbedtls_ctr_drbg_init_exit:


word32 mbedtls_ctr_drbg_reseed(word32 ra, word32 a1, word32 a2, word32 a4, word32 s3, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s6Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_seed
//      mbedtls_ctr_drbg_random
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31] s3:[0..31]
// LiveOut: a0 a2 a5 s10 s11 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s10 s11 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 sp
mbedtls_ctr_drbg_reseed_entry:
l2308772A:
	word32 a0_17 = Mem15[a4 + 24<i32>:word32]
	word32 a5_138 = 384<i32>
	word32 s2_122 = -56<i32>
	branch a4 >u 384<i32> l230877AE
l23087752:
	a5_138 = 384<i32> - a4
	s2_122 = -56<i32>
	branch a5_138 <u a2 l230877AE
l2308775C:
	word32 a2_32
	word32 a4_34
	word32 a3_232
	word32 a5_233
	word32 a0_230
	word32 a1_231
	word32 t1_229
	word32 ra_36 = memset(ra, fp + -416<i32>, 0<32>, 384<i32>, out t1_229, out a0_230, out a1_231, out a2_32, out a3_232, out a4_34, out a5_233)
	word32 s0_40 = Mem15[a2_32 + 24<i32>:word32]
	word32 sp_43
	word32 ra_45
	word32 s0_46
	word32 s1_47
	word32 s4_49
	word32 a0_50
	word32 a3_55
	word32 t0_56
	word32 t1_57
	word32 a7_157
	word32 a6_158
	word32 t3_159
	word32 t4_160
	word32 t5_161
	word32 t6_162
	word32 s7_165
	word32 s8_166
	word32 s9_167
	word32 t2_168
	word32 tp_169
	word32 s5_170
	call Mem15[a0_17 + 312<i32>:int32] (retsize: 0;)
		uses: a0:Mem15[s0_40 + 316<i32>:int32],a1:fp + -416<i32>,a2:a2_32,a3:a3_55,a4:a4_34,a6:a6_158,a7:a7_157,ra:ra_36,s0:s0_40,s1:a2,s10:s10_163,s11:s11_164,s2:-56<i32>,s3:s3,s4:a1,s5:s5_170,s6:s6_171,s7:s7_165,s8:s8_166,s9:s9_167,t0:t0_56,t1:t1_57,t2:t2_168,t3:t3_159,t4:t4_160,t5:t5_161,t6:t6_162,tp:tp_169
		defs: a0:a0_50,a2:a2_53,a3:a3_55,a5:a5_52,a6:a6_158,a7:a7_157,ra:ra_45,s0:s0_46,s1:s1_47,s10:s10_163,s11:s11_164,s4:s4_49,s5:s5_170,s6:s6_171,s7:s7_165,s8:s8_166,s9:s9_167,sp:sp_43,t0:t0_56,t1:t1_57,t2:t2_168,t3:t3_159,t4:t4_160,t5:t5_161,t6:t6_162,tp:tp_169
	branch a0_50 != 0<32> l230877CC
l230877CC:
	s2_122 = -52<i32>
l23087780:
	word32 s3_60 = Mem15[s0_46 + 24<i32>:int32]
	branch s4_49 == 0<32> l23087798
l23087788:
	branch s1_47 == 0<32> l23087798
l2308778A:
	word32 a1_236
	word32 a2_237
	word32 a3_238
	word32 a4_239
	word32 a5_240
	word32 a6_241
	word32 a7_242
	memcpy(sp_43 + s3_60, s4_49, s1_47, out a1_236, out a2_237, out a3_238, out a4_239, out a5_240, out a6_241, out a7_242)
	s3_60 = s3_60 + s1_47
l23087798:
	block_cipher_df(ra_45, sp_43, s3_60)
	word32 s0_118
	word32 s1_234
	word32 a5_235
	ctr_drbg_update_internal(ra_45, s0_46, Mem15[sp_43 + 216<i32>:word32], Mem15[sp_43 + 232<i32>:word32], out s0_118, out s1_234, out a2, out a5_235, out s2_122, out s6, out s10, out s11)
	Mem139[0x11<32>:word32] = s0_118
	a5_138 = 1<32>
l230877AE:
	a2Out = a2
	a5Out = a5_138
	s6Out = s6
	s10Out = s10
	s11Out = s11
	return s2_122
mbedtls_ctr_drbg_reseed_exit:


word32 mbedtls_ctr_drbg_seed_entropy_len(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArgD8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_seed
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a2 a5 ra s0 s1 s10 s11 s2 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ctr_drbg_seed_entropy_len_entry:
l230877D2:
	word32 a4_44
	word32 a5_45
	word32 t1_131
	word32 a0_132
	word32 a1_133
	word32 a2_134
	word32 a3_135
	word32 a4_136
	word32 a5_137
	word32 a1_138
	word32 ra_46 = mbedtls_aes_init(memset(ra, fp + -64<i32>, 0<32>, 32<i32>, out t1_131, out a0_132, out a1_133, out a2_134, out a3_135, out a4_136, out a5_137), a0 + 32<i32>, out a1_138, out a4_44, out a5_45)
	Mem50[a0 + 312<i32>:word32] = a1
	Mem51[a0 + 316<i32>:word32] = a2
	Mem52[a5_45 + 24<i32>:word32] = a0
	Mem55[0x200072C<32>:word32] = a0
	word32 a3_62
	word32 a4_63
	word32 s4_68
	word32 a0_139
	word32 a1_140
	mbedtls_aes_setkey_enc(a0 + 32<i32>, fp + -64<i32>, 256<i32>, a4_44, 0x2000710<32>, dwLoc0C, dwArgD8, out a0_139, out a1_140, out a3_62, out a4_63, out s4_68)
	word32 a5_77
	word32 a2_79
	word32 s10_84
	word32 s11_85
	word32 s6_87
	word32 a0_76 = mbedtls_ctr_drbg_reseed(ra_46, a3_62, a4_63, a4_63, a1, out a2_79, out a5_77, out s6_87, out s10_84, out s11_85)
	s0Out = dwArg74
	s1Out = a4
	a0Out = a0_76
	a2Out = a2_79
	a5Out = a5_77
	s2Out = a2
	s3Out = a1
	s4Out = s4_68
	s6Out = s6_87
	s7Out = s7_88
	s10Out = s10_84
	s11Out = s11_85
	return dwLoc08
mbedtls_ctr_drbg_seed_entropy_len_exit:


word32 mbedtls_ctr_drbg_seed(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArgD8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a2 a5 ra s0 s1 s10 s11 s2 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ctr_drbg_seed_entry:
l2308783C:
l23087840_thunk_mbedtls_ctr_drbg_seed_entropy_len:
	word32 a0_9
	word32 a2_11
	word32 a5_14
	word32 s0_18
	word32 s1_19
	word32 s10_20
	word32 s11_21
	word32 s2_22
	word32 s3_23
	word32 s4_24
	word32 s6_26
	word32 s7_27
	word32 ra_17 = mbedtls_ctr_drbg_seed_entropy_len(ra, a0, a1, a2, dwArgD8, out s0_18, out s1_19, out a0_9, out a2_11, out a5_14, out s2_22, out s3_23, out s4_24, out s6_26, out s7_27, out s10_20, out s11_21)
	s0Out = s0_18
	s1Out = s1_19
	a0Out = a0_9
	a2Out = a2_11
	a5Out = a5_14
	s2Out = s2_22
	s3Out = s3_23
	s4Out = s4_24
	s6Out = s6_26
	s7Out = s7_27
	s10Out = s10_20
	s11Out = s11_21
	return ra_17
mbedtls_ctr_drbg_seed_exit:


void mbedtls_ctr_drbg_random_with_add(word32 ra, word32 a1, word32 a2, word32 a4, word32 s4, word32 dwArg34, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ctr_drbg_random
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] ra:[0..31] s4:[0..31] Stack +0034:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s5 sp
mbedtls_ctr_drbg_random_with_add_entry:
l23087844:
	branch a2 >u 1024<i32> l23087926
l23087926:
l23087860:
	branch a4 >u 256<i32> l2308789C
l23087870:
	word32 s1_141 = a2
	word32 a3_40
	word32 a4_41
	word32 a5_42
	word32 a2_419
	word32 a1_418
	word32 t1_416
	word32 a0_417
	word32 ra_222 = memset(ra, fp + -80<i32>, 0<32>, 48<i32>, out t1_416, out a0_417, out a1_418, out a2_419, out a3_40, out a4_41, out a5_42)
	word32 s0_110 = dwArg54
	branch a5_42 < dwArg34 l23087890
l2308788C:
	s0_110 = Mem27[a5_42 + 20<i32>:word32]
	branch a5_42 == 0<32> l230878B0
l230878B0:
	branch a4_41 == 0<32> l230878C4
l230878B2:
	block_cipher_df(ra_222, a3_40, a4_41)
	word32 s2_448
	word32 s6_449
	word32 s10_450
	word32 s11_451
	word32 a5_447
	word32 a2_446
	ra_222 = ctr_drbg_update_internal(ra_222, s0_110, dwArg68, dwArg78, out s0_110, out s1_141, out a2_446, out a5_447, out s2_448, out s6_449, out s10_450, out s11_451)
l23087890:
	word32 a2_420
	word32 a5_421
	word32 s6_422
	word32 s10_423
	word32 s11_424
	branch mbedtls_ctr_drbg_reseed(ra_222, a3_40, a4_41, a4_41, a1, out a2_420, out a5_421, out s6_422, out s10_423, out s11_424) == 0<32> l230878C4
l230878C4:
	word32 s4_138 = s0_110 + 15<i32>
l230878CE:
	branch s1_141 != 0<32> l230878E2
l230878E2:
	word32 a4_143 = s4_138
l230878E4:
	word32 a5_148 = CONVERT(Mem145[a4_143:byte], byte, word32) + 1<32> & 255<i32>
	Mem149[a4_143:byte] = SLICE(a5_148, byte, 0)
	branch a5_148 != 0<32> l230878FC
l230878F4:
	word32 a5_150 = a4_143 + -1<i32>
	branch s0_110 != a4_143 l23087922
l23087922:
	a4_143 = a5_150
l230878FC:
	word32 s1_174
	word32 s3_178
	word32 s6_181
	word32 s7_434
	word32 s8_435
	word32 s9_436
	word32 s10_437
	word32 s11_438
	word32 s5_433
	word32 s2_432
	s0_110 = mbedtls_aes_crypt_ecb(1<32>, s0_110, fp + -96<i32>, s4, dwArgC8, out s1_174, out s2_432, out s3_178, out s4_138, out s5_433, out s6_181, out s7_434, out s8_435, out s9_436, out s10_437, out s11_438)
	word32 s2_193 = s1_174
	branch s6_181 >=u s1_174 l23087910
l2308790E:
	s2_193 = 0x10<32>
l23087910:
	word32 a3_441
	word32 a4_442
	word32 a5_443
	word32 a6_444
	word32 a7_445
	word32 a2_440
	word32 a1_439
	memcpy(s3_178, fp + -96<i32>, s2_193, out a1_439, out a2_440, out a3_441, out a4_442, out a5_443, out a6_444, out a7_445)
	s1_141 = s1_174 - s2_193
l230878D0:
	word32 a5_235
	word32 a2_427
	word32 s2_428
	word32 s6_429
	word32 s10_430
	word32 s11_431
	word32 s1_426
	word32 s0_425
	ctr_drbg_update_internal(ra_222, s0_110, dwArg68, dwArg78, out s0_425, out s1_426, out a2_427, out a5_235, out s2_428, out s6_429, out s10_430, out s11_431)
	Mem262[a5_235 + 0x11<32>:word32] = Mem226[a5_235 + 16<i32>:word32]
l2308789C:
	return
mbedtls_ctr_drbg_random_with_add_exit:


void mbedtls_ctr_drbg_random(word32 ra, word32 a1, word32 a2, word32 s4, word32 dwArg34, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] s4:[0..31] Stack +0034:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ctr_drbg_random_entry:
l2308792C:
l23087930_thunk_mbedtls_ctr_drbg_random_with_add:
	mbedtls_ctr_drbg_random_with_add(ra, a1, a2, 0<32>, s4, dwArg34, dwArg54, dwArg68, dwArg78, dwArgC8)
	return
mbedtls_ctr_drbg_random_exit:


word32 mbedtls_entropy_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a1 a2 a3 a4 a5 ra t0 t1
// Preserved: a0 s0 sp
mbedtls_entropy_init_entry:
l23087934:
	word32 a4_16
	word32 a2_60
	word32 a3_61
	word32 a1_59
	word32 a0_58
	word32 t1_57
	word32 a5_62
	word32 ra_18 = memset(ra, a0, 0<32>, 520<i32>, out t1_57, out a0_58, out a1_59, out a2_60, out a3_61, out a4_16, out a5_62)
	mbedtls_sha256_starts(a0, 0<32>)
	word32 s0_24 = Mem9[a4_16 + 116<i32>:word32]
	branch a4_16 > 0x13<32> l2308797E
l23087956:
	word32 a5_31 = a4_16 + 0x14<32> + s0_24
	Mem32[0x230879FE<32>:word32] = a5_31
	Mem34[a5_31 + 132<i32>:word32] = 32<i32>
	Mem36[a5_31 + 124<i32>:word32] = 0<32>
	Mem37[a5_31 + 136<i32>:word32] = 1<32>
	Mem38[a4_16 + 0x75<32>:word32] = s0_24
l2308797E:
	return ra_18
mbedtls_entropy_init_exit:


void mbedtls_platform_entropy_poll(word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s4 s8 t3 tp
// Preserved: sp
mbedtls_platform_entropy_poll_entry:
l23087986:
	Mem9[a3:word32] = 0<32>
	word32 a0_10 = 0<32>
	word32 s0_11 = 0<32>
l23087994:
	branch s0_11 != a2 l230879A4
l230879A4:
	branch (s0_11 & 3<i32>) != 0<32> l230879BA
l230879AA:
	word32 a2_84
	word32 a4_85
	word32 a5_86
	word32 s4_87
	word32 s8_88
	bl_rand(a0_10, a2, out a0_10, out a1, out a2_84, out a3, out a4_85, out a5_86, out s4_87, out s8_88)
	a2 = dwArg84
	s0_11 = a3
l230879BA:
	Mem40[a1 + s0_11:byte] = SLICE(a0_10, byte, 0)
	s0_11 = s0_11 + 1<32>
	a0_10 = a0_10 >>u 8<i32>
l23087998:
	Mem43[s0_11:word32] = a3
	return
mbedtls_platform_entropy_poll_exit:


void mbedtls_pk_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config_client_2wayauth
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_pk_init_entry:
l230879C8:
	branch a0 == 0<32> l230879D2
l230879CA:
	Mem4[a0:word32] = 0<32>
	Mem5[a0 + 4<i32>:word32] = 0<32>
l230879D2:
	return
mbedtls_pk_init_exit:


word32 mbedtls_pk_free(word32 ra, word32 a0, word32 a5, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_free_config
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_pk_parse_key
//      mbedtls_x509_crt_free
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a0 a2 a5 ra
// Trashed: a0 a2 a5 ra
// Preserved: s0 sp
mbedtls_pk_free_entry:
l230879D4:
	branch a0 == 0<32> l23087A00
l23087A00:
	a0Out = a0
	a2Out = a2
	a5Out = a5
	return ra
l230879D6:
	word32 a0_10 = Mem8[a5:word32]
	branch a5 == 0<32> l230879F0
l230879E2:
	word32 a5_12 = Mem8[a5 + 40<i32>:word32]
	word32 s0_16
	word32 a2_19
	call a5_12 (retsize: 0;)
		uses: a0:Mem8[a0_10 + 4<i32>:word32],a2:a2_19,a5:a5_12,ra:ra,s0:a0_10
		defs: a0:a0_15,a2:a2_19,ra:ra_17,s0:s0_16
	a5 = s0_16 + 8<i32>
	s0_21 = s0_16
l230879EC:
	word32 s0_21
	branch s0_21 != s0_16 + 8<i32> l230879F8
l230879F8:
	Mem23[s0_21:byte] = 0<8>
	s0_21 = s0_21 + 1<32>
l230879F0:
	a0Out = a0_10
	a2Out = dwArg10
	a5Out = a5
	return ra
mbedtls_pk_free_exit:


word32 mbedtls_pk_info_from_type(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_pk_parse_key
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_pk_info_from_type_entry:
l23087A02:
	word32 a0_5 = a0 + 0xFFFFFFFF<32> & 255<i32>
	branch a0_5 >u 2<32> l23087A1E
l23087A1E:
	a5Out = 2<32>
	return 0<32>
l23087A0E:
	word32 a0_13 = Mem0[(a0_5 << 2<i32>) + 0x230C6AE8<32>:word32]
	a5Out = 0x230C6AE8<32>
	return a0_13
mbedtls_pk_info_from_type_exit:


word32 mbedtls_pk_setup(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a5, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
//      mbedtls_pk_parse_key
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] s1:[0..31]
// LiveOut: a0 a1 a2 a5 ra s1
// Trashed: a0 a1 a2 a5 ra s1 tp
// Preserved: s0 sp
mbedtls_pk_setup_entry:
l23087A22:
	branch a0 == 0<32> l23087A4C
l23087A24:
	branch a1 == 0<32> l23087A4C
l23087A26:
	word32 a0_7 = Mem0[a5:word32]
	branch a5 != 0<32> l23087A4C
l23087A4C:
	s1Out = s1
	a0Out = 0xFC000180<32>
	a1Out = a1
	a2Out = a2
	a5Out = a5
	return ra
l23087A2A:
	word32 a0_31
	word32 a1_10 = Mem0[a5 + 36<i32>:word32]
	word32 a0_21
	word32 a1_22
	word32 a5_23
	word32 s0_24
	word32 s1_25
	word32 ra_26
	word32 a2_27
	word32 tp_28
	call a5 (retsize: 0;)
		uses: a0:a0_7,a1:a1_10,a2:a2_27,a5:a5,ra:ra,s0:a0_7,s1:a1_10,Stack +0004:s0,Stack +0080:s1,Stack +0084:ra,tp:tp_28
		defs: a0:a0_21,a1:a1_22,a2:a2_27,a5:a5_23,ra:ra_26,s0:s0_24,s1:s1_25,tp:tp_28
	Mem29[a0_21 + 4<i32>:word32] = s0_24
	branch a0_21 == 0<32> l23087A54
l23087A54:
	a0_31 = 0xFC000080<32>
l23087A3E:
	Mem32[s1_25:word32] = s0_24
	a0_31 = 0<32>
l23087A42:
	s1Out = s1_25
	a0Out = a0_31
	a1Out = a1_22
	a2Out = dwArg10
	a5Out = a5_23
	return ra_26
mbedtls_pk_setup_exit:


word32 mbedtls_pk_can_do(word32 a0, word32 a1, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_verify_ext
//      mbedtls_ssl_sig_from_pk
//      mbedtls_ssl_parse_certificate
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a5 t1
// Preserved: sp
mbedtls_pk_can_do_entry:
l23087A5C:
	branch a0 == 0<32> l23087A6A
l23087A5E:
	branch a5 == 0<32> l23087A6A
l23087A6A:
	a5Out = a5
	return 0<32>
l23087A62:
	word32 a0_12
	word32 a5_13
	word32 t1_14
	call Mem0[a5 + 12<i32>:int32] (retsize: 0;)
		uses: a0:a1,a1:a1,a5:a5,t1:t1_14
		defs: a0:a0_12,a5:a5_13,t1:t1_14
	a5Out = a5_13
	return a0_12
mbedtls_pk_can_do_exit:


word32 mbedtls_pk_verify(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg00, word32 dwArg44, word32 dwArgA4, word32 dwArgC4, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_verify_ext
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0044:[0..31] Stack +00A4:[0..31] Stack +00C4:[0..31]
// LiveOut: a0 a4 a5 ra s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s8 t1 t3 tp
// Preserved: sp
mbedtls_pk_verify_entry:
l23087A6E:
	branch a0 != 0<32> l23087A86
l23087A86:
	word32 a0_22
	word32 s0_107 = a0
	word32 a0_10 = Mem8[a0:word32]
	branch a0_10 == 0<32> l23087A78
l23087A92:
	branch a3 != 0<32> l23087AB2
l23087A94:
	word32 a5_129
	mbedtls_md_info_from_type(a0, out a5_129)
	a0_10 = a1
	dwLoc1C = a4
	branch a1 == 0<32> l23087A78
l23087A78:
	a0_22 = 0xFC000180<32>
l23087AA4:
	mbedtls_md_get_size(a0)
	0<32> = dwArg44
	a2 = dwArgC4
	a3 = a1
l23087AB2:
	s0_107 = Mem28[a0_10:word32]
	word32 t1_30 = Mem28[a0_10 + 16<i32>:int32]
	branch t1_30 == 0<32> l23087AC6
l23087AC6:
	a0_22 = 0xFC000100<32>
l23087A7E:
	s0Out = s0_107
	a0Out = a0_22
	a4Out = a4
	a5Out = a5
	s8Out = dwLoc1C
	return ra
l23087ABC:
	word32 a0_52
	word32 s0_53
	word32 ra_54
	word32 a5_57
	word32 a4_58
	word32 tp_60
	word32 t1_61
	word32 s8_62
	call t1_30 (retsize: 0;)
		uses: a0:a0_27,a1:a1,a2:a2_50,a3:a3_46,a4:a4,a5:a5,ra:ra,s0:Mem28[a0_27 + 4<i32>:word32],s8:dwLoc1C_82,Stack +0000:dwArg00,Stack +0044:dwArg44,Stack +00A4:dwArgA4,Stack +00C4:dwArgC4,Stack +FFFFFFE4:dwLoc1C_82,t1:t1_61,t3:dwArg00,tp:tp_60
		defs: a0:a0_52,a4:a4_58,a5:a5_57,ra:ra_54,s0:s0_53,s8:s8_62,t1:t1_61,tp:tp_60
	s0Out = s0_53
	a0Out = a0_52
	a4Out = a4_58
	a5Out = a5_57
	s8Out = s8_62
	return ra_54
l23087A70:
	s0Out = s0
	a0Out = 0xFC000180<32>
	a4Out = a4
	a5Out = a5
	s8Out = s8
	return ra
mbedtls_pk_verify_exit:


void mbedtls_pk_sign(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 dwArg34, word32 dwArg94, word32 dwArgB4, word32 dwArgE4, word32 dwArg0100)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0094:[0..31] Stack +00B4:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s4 s8 t1 t3
// Preserved: sp
mbedtls_pk_sign_entry:
l23087ACE:
	branch a0 != 0<32> l23087AE6
l23087AE6:
	word32 a0_10 = Mem8[a0:word32]
	branch a0_10 == 0<32> l23087AD8
l23087AF2:
	branch a3 != 0<32> l23087B1A
l23087AF4:
	word32 a0_25 = mbedtls_md_info_from_type(a1, out a5)
	branch a0_25 == 0<32> l23087AD8
l23087AD8:
l23087B08:
	a0_10 = mbedtls_md_get_size(a0_25)
	a6 = dwArg94
	a3 = a0_10
l23087B1A:
	word32 t1_40 = Mem38[a0_10 + 20<i32>:int32]
	branch t1_40 == 0<32> l23087B2E
l23087B2E:
l23087ADE:
	return
l23087B24:
	word32 t3_73
	word32 s8_74
	word32 s4_75
	word32 t1_76
	call t1_40 (retsize: 0;)
		uses: a0:a0_37,a1:a1,a2:dwArg0100,a3:a3_56,a4:a4,a5:a5_60,a6:a6_59,a7:a7,ra:ra,s0:dwArgE4,s4:s4_75,s8:s8_74,Stack +0034:dwArg34,Stack +0094:dwArg94,Stack +00B4:dwArgB4,Stack +00E4:dwArgE4,Stack +0100:dwArg0100,Stack +FFFFFFF8:dwLoc08,t1:t1_76,t3:t3_73
		defs: s4:s4_75,s8:s8_74,t1:t1_76,t3:t3_73
	return
l23087AD0:
	return
mbedtls_pk_sign_exit:


void mbedtls_pk_decrypt(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 t1
// Preserved: sp
mbedtls_pk_decrypt_entry:
l23087B36:
	branch a0 == 0<32> l23087B4C
l23087B38:
	word32 t1_5 = Mem0[a0:int32]
	branch t1_5 == 0<32> l23087B4C
l23087B4C:
	return
l23087B40:
	word32 t1_8 = Mem0[t1_5 + 24<i32>:int32]
	branch t1_8 == 0<32> l23087B54
l23087B54:
	return
l23087B48:
	word32 t1_14
	call t1_8 (retsize: 0;)
		uses: a0:Mem0[a0 + 4<i32>:word32],t1:t1_14
		defs: t1:t1_14
	return
mbedtls_pk_decrypt_exit:


void mbedtls_pk_encrypt(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 t1
// Preserved: sp
mbedtls_pk_encrypt_entry:
l23087B5C:
	branch a0 == 0<32> l23087B72
l23087B5E:
	word32 t1_5 = Mem0[a0:int32]
	branch t1_5 == 0<32> l23087B72
l23087B72:
	return
l23087B66:
	word32 t1_8 = Mem0[t1_5 + 28<i32>:int32]
	branch t1_8 == 0<32> l23087B7A
l23087B7A:
	return
l23087B6E:
	word32 t1_14
	call t1_8 (retsize: 0;)
		uses: a0:Mem0[a0 + 4<i32>:word32],t1:t1_14
		defs: t1:t1_14
	return
mbedtls_pk_encrypt_exit:


word32 mbedtls_pk_get_bitlen(word32 a0, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_verify_ext
//      x509_profile_check_key
//      mbedtls_x509_crt_info
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5 t1
// Preserved: sp
mbedtls_pk_get_bitlen_entry:
l23087B82:
	branch a0 == 0<32> l23087B90
l23087B84:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23087B90
l23087B90:
	a5Out = a5
	return 0<32>
l23087B88:
	word32 a0_11
	word32 a5_12
	word32 t1_13
	call Mem0[a5 + 8<i32>:int32] (retsize: 0;)
		uses: a0:Mem0[a0_6 + 4<i32>:word32],a5:a5,t1:t1_13
		defs: a0:a0_11,a5:a5_12,t1:t1_13
	a5Out = a5_12
	return a0_11
mbedtls_pk_get_bitlen_exit:


word32 mbedtls_pk_verify_ext(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 a6, word32 a7, word32 s10, word32 s11, word32 mstatus, word32 dwArg00, word32 dwArg44, word32 dwArgA4, word32 dwArgC4, word32 dwArg0138, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] Stack +0000:[0..31] Stack +0044:[0..31] Stack +00A4:[0..31] Stack +00C4:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_pk_verify_ext_entry:
l23087B94:
	word32 s0_114
	branch a2 != 0<32> l23087BC8
l23087BC8:
	branch Mem21[a2:int32] == 0<32> l23087BAA
l23087BD0:
	s7 = a0
	s2 = a7
	s6 = a6
	s5 = a5
	s3 = a3
	s1 = a2
	branch mbedtls_pk_can_do(a2, a0, a5, out a5) == 0<32> l23087C5C
l23087C5C:
	s0_114 = 0xFC000100<32>
l23087BEA:
	a5 = 6<32>
	branch a0 != 6<32> l23087C36
l23087C36:
	branch a1 != 0<32> l23087BAA
l23087C38:
	0<32> = dwArg0198
l23087C58_thunk_mbedtls_pk_verify:
	word32 a0_62
	word32 s0_63
	word32 s8_64
	word32 a4_70
	word32 a5_71
	word32 ra_72 = mbedtls_pk_verify(ra, a2, a3, dwArg0138, a5, a6, a7, dwArg00, dwArg44, dwArgA4, dwArgC4, out s0_63, out a0_62, out a4_70, out a5_71, out s8_64)
	s0Out = s0_63
	s1Out = a2
	a0Out = a0_62
	a4Out = a4_70
	a5Out = a5_71
	a6Out = <invalid>
	a7Out = a7
	s2Out = a7
	s3Out = a3
	s4Out = <invalid>
	s5Out = a5
	s6Out = a6
	s7Out = a0
	s8Out = s8_64
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra_72
l23087BF0:
	branch a1 == 0<32> l23087BAA
l23087BF2:
	word32 a0_79 = mbedtls_pk_get_bitlen(a2, 6<32>, out a5) + 7<32> >>u 3<i32>
	branch a7 <u a0_79 l23087C64
l23087C64:
	s0_114 = 0xFBFFFC80<32>
l23087C00:
	s1 = Mem86[a0_79 + 4<i32>:word32]
	word32 a0_96 = mbedtls_rsa_rsassa_pss_verify_ext(ra, a0_79, 0<32>, 0<32>, a3, a5, CONVERT(Mem86[Mem82[a5 + 4<i32>:word32]:byte], byte, word32), a3, s10, s11, mstatus, a5, dwLoc3C, out a4, out a5, out a7, out s10, out s11, out mstatus)
	s0_114 = a0_96
	branch a0_96 != 0<32> l23087BB0
l23087C20:
	branch mbedtls_pk_get_bitlen(s1, a5, out a5) + 7<32> >>u 3<i32> >=u a7 l23087BB0
l23087C2E:
	s0_114 = 0xFC000700<32>
l23087BAA:
	s0_114 = 0xFC000180<32>
l23087BB0:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1
	a0Out = s0_114
	a4Out = a4
	a5Out = a5
	a6Out = <invalid>
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = <invalid>
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArgD4
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_pk_verify_ext_exit:


word32 mbedtls_pk_debug(word32 ra, word32 a0, word32 a5, word32 dwArg10, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_debug_print_crt
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut: a0 a2 a5 ra
// Trashed: a0 a2 a5 ra
// Preserved: sp
mbedtls_pk_debug_entry:
l23087C6C:
	branch a0 == 0<32> l23087C86
l23087C6E:
	word32 a0_6 = Mem0[a5:word32]
	branch a5 == 0<32> l23087C86
l23087C86:
	a0Out = 0xFC000180<32>
	a2Out = a2
	a5Out = a5
	return ra
l23087C72:
	word32 a5_9 = Mem0[a5 + 44<i32>:word32]
	branch a5_9 == 0<32> l23087C8E
l23087C8E:
	a0Out = 0xFC000100<32>
	a2Out = a2
	a5Out = a5_9
	return ra
l23087C76:
	word32 a5_18
	word32 ra_19
	call a5_9 (retsize: 0;)
		uses: a0:Mem14[a0_6 + 4<i32>:word32],a2:dwArg10,a5:a5_9,ra:ra,Stack +0084:ra
		defs: a5:a5_18,ra:ra_19
	a0Out = 0<32>
	a2Out = dwArg10
	a5Out = a5_18
	return ra_19
mbedtls_pk_debug_exit:


void mbedtls_pk_get_name(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_info
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
mbedtls_pk_get_name_entry:
l23087C96:
	branch a0 == 0<32> l23087CA0
l23087C98:
	branch a5 == 0<32> l23087CA0
l23087CA0:
	return
l23087C9C:
	return
mbedtls_pk_get_name_exit:


word32 mbedtls_pk_get_type(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
mbedtls_pk_get_type_entry:
l23087CAA:
	branch a0 == 0<32> l23087CB8
l23087CB8:
l23087CAC:
	branch a5 == 0<32> l23087CBA
l23087CBA:
	return 0<32>
l23087CB2:
	return CONVERT(Mem0[a5:byte], byte, word32)
mbedtls_pk_get_type_exit:


word32 pk_use_ecparams(word32 s0, word32 a1, word32 a2, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg24, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_sec1_der
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] s0:[24..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
pk_use_ecparams_entry:
l23087CBC:
	word32 a0_5 = Mem0[a4:word32]
	branch a4 == 6<32> l23087CDA
l23087CDA:
	word32 a0_26
	byte bLoc11_63 = SLICE(s0, byte, 24)
	word32 a0_16
	word32 a4_20
	word32 a3_19
	word32 a2_18
	word32 a1_17
	word32 a5_21
	word32 s2_109
	word32 s1_106 = mbedtls_oid_get_ec_grp(a0_5, fp + 0xFFFFFFEF<32>, a2, 6<32>, dwArg18, out a0_16, out a1_17, out a2_18, out a3_19, out a4_20, out a5_21, out s2_109)
	branch a0_16 != 0<32> l23087D02
l23087D02:
	a0_26 = 0xFC000600<32>
l23087CEC:
	a5_21 = CONVERT(Mem14[a1:byte], byte, word32)
	a1_17 = CONVERT(bLoc11_63, byte, word32)
	branch a5_21 == 0<32> l23087CFA
l23087CF6:
	branch a5_21 != a1_17 l23087CCC
l23087CCC:
	a0_26 = 0xFC000300<32>
l23087CFA:
	mbedtls_ecp_group_load(a1, a2_18, a4_20, mstatus, dwLoc08, dwArg24, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, dwArg0148, out s1_106, out a0_26, out a1_17, out a2_18, out a3_19, out a4_20, out a5_21, out s2_109, out s4)
l23087CD2:
	a0Out = a0_26
	a1Out = a1_17
	a2Out = a2_18
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_21
	s2Out = s2_109
	s4Out = s4
	return s1_106
l23087CC4:
	a0Out = 0xFC000300<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 6<32>
	s2Out = s2
	s4Out = s4
	return s1
pk_use_ecparams_exit:


word32 pk_parse_key_pkcs1_der(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 s2, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_key
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s10 s11 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pk_parse_key_pkcs1_der_entry:
l23087D0A:
	word32 s0_304
	word32 s0_105
	word32 s1_284 = a0
	word32 a2_537
	word32 a1_536
	word32 a5_281
	word32 a4_280
	word32 a3_279
	word32 a0_24 = mbedtls_asn1_get_tag(a1 + a2, fp + -40<i32>, 48<i32>, a5, out a1_536, out a2_537, out a3_279, out a4_280, out a5_281)
	branch a0_24 == 0<32> l23087D42
l23087D42:
	s2 = s2 + a5_281
	word32 a1_538
	mbedtls_asn1_get_int(s2, a0, a5_281, out s1_284, out a0_24, out a1_538, out a3_279, out a4_280, out a5_281)
	branch a0_24 != 0<32> l23087D2A
l23087D54:
	s1_284 = Mem22[a5_281:word32]
	branch a5_281 != 0<32> l23087E16
l23087E16:
	s0_304 = 0xFC000280<32>
l23087D58:
	word32 a0_57
	word32 s4_541
	word32 a1_540
	word32 s0_539
	word32 s1_117
	word32 a5_114
	word32 a4_113
	word32 a2_111
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_281, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_539, out s1_117, out a0_57, out a1_540, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_541)
	s0_105 = a0_57
	branch a0_57 != 0<32> l23087DDA
l23087D6A:
	word32 a0_83
	word32 s4_544
	word32 a1_543
	word32 s0_542
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_542, out s1_117, out a0_83, out a1_543, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_544)
	s0_105 = a0_83
	branch a0_83 != 0<32> l23087DDA
l23087D7A:
	word32 a0_109
	word32 s4_547
	word32 a1_546
	word32 s0_545
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_545, out s1_117, out a0_109, out a1_546, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_547)
	s0_105 = a0_109
	branch a0_109 != 0<32> l23087DDA
l23087D8A:
	word32 a0_135
	word32 s0_548
	word32 a1_549
	word32 s4_550
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_548, out s1_117, out a0_135, out a1_549, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_550)
	s0_105 = a0_135
	branch a0_135 != 0<32> l23087DDA
l23087D9A:
	word32 a0_161
	word32 s0_551
	word32 a1_552
	word32 s4_553
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_551, out s1_117, out a0_161, out a1_552, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_553)
	s0_105 = a0_161
	branch a0_161 != 0<32> l23087DDA
l23087DAA:
	word32 a0_187
	word32 s0_554
	word32 a1_555
	word32 s4_556
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_554, out s1_117, out a0_187, out a1_555, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_556)
	s0_105 = a0_187
	branch a0_187 != 0<32> l23087DDA
l23087DBA:
	word32 a0_213
	word32 s0_557
	word32 a1_558
	word32 s4_559
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_557, out s1_117, out a0_213, out a1_558, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_559)
	s0_105 = a0_213
	branch a0_213 != 0<32> l23087DDA
l23087DCA:
	word32 a0_239
	word32 s4_248
	word32 s0_560
	word32 a1_561
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_114, mstatus, dwArg34, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_560, out s1_117, out a0_239, out a1_561, out a2_111, out a4_113, out a5_114, out s2, out s3, out s4_248)
	s0_105 = a0_239
	branch a0_239 == 0<32> l23087DE8
l23087DE8:
	word32 a4_267
	word32 a5_268
	word32 a1_562
	word32 a3_563
	Mem270[mbedtls_mpi_size(a2_111, a4_113, a5_114, out a1_562, out a3_563, out a4_267, out a5_268) + 4<i32>:word32] = s1_117
	branch a5_268 == s2 l23087E04
l23087E04:
	word32 a0_276
	word32 a2_278
	ra = mbedtls_rsa_check_privkey(ra, s1_117, dwArgB4, a4_267, a5_268, s2, s4_248, s6, s7, s10, s11, mstatus, dwLoc28, dwLoc08, dwArg08, dwArg18, dwArg24, dwArg28, dwArg34, dwArg38, dwArg44, dwArg48, a1, dwArg58, dwArg74, dwArg98, dwArgA8, out s1_284, out a0_276, out a2_278, out a3_279, out a4_280, out a5_281, out s2, out s3, out s6, out s7, out s10, out s11)
	s0_304 = a0_276
	branch a0_276 == 0<32> l23087D32
l23087E0E:
	s1_284 = mbedtls_rsa_free(s1_284, a2_278, a4_280, a5_281, mstatus, s2, dwArg0108, dwArg0118, dwArg0148, dwArg0158, out a3_279, out a4_280, out a5_281)
l23087DF8:
	s1_284 = mbedtls_rsa_free(s1_117, dwArgB4, a4_267, a5_268, mstatus, s2, dwArg0108, dwArg0118, dwArg0148, dwArg0158, out a3_279, out a4_280, out a5_281)
	s0_304 = 0xFC00029A<32>
l23087DDA:
	s1_284 = mbedtls_rsa_free(s1_117, a2_111, a4_113, a5_114, mstatus, s2, dwArg0108, dwArg0118, dwArg0148, dwArg0158, out a3_279, out a4_280, out a5_281)
	a0_24 = 0xFC000300<32>
l23087D2A:
	s0_105 = 0xFC000300<32>
l23087D30:
	s0_304 = s0_105 + a0_24
l23087D32:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_284
	a0Out = s0_304
	a2Out = dwArg0100
	a3Out = a3_279
	a4Out = a4_280
	a5Out = a5_281
	s2Out = s2
	s3Out = s3
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	return ra
pk_parse_key_pkcs1_der_exit:


word32 pk_parse_key_sec1_der(word32 ra, word32 s1, word32 a1, word32 a2, word32 a5, word32 s2, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_key
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s1 s10 s11 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pk_parse_key_sec1_der_entry:
l23087E1E:
	word32 s0_112
	word32 s0_107
	word32 s1_154 = a0
	word32 a1_820
	word32 a2_821
	word32 a5_190
	word32 a4_111
	word32 a3_188
	word32 a0_185 = mbedtls_asn1_get_tag(a1 + a2, fp + -52<i32>, 48<i32>, a5, out a1_820, out a2_821, out a3_188, out a4_111, out a5_190)
	branch a0_185 == 0<32> l23087E46
l23087E46:
	s2 = s2 + a5_190
	word32 a1_822
	mbedtls_asn1_get_int(s2, fp + -56<i32>, a5_190, out s1_154, out a0_185, out a1_822, out a3_188, out a4_111, out a5_190)
	branch a0_185 != 0<32> l23087E3E
l23087E58:
	a5_190 = 1<32>
	branch a4_111 != 1<32> l23087FB2
l23087FB2:
	s0_112 = 0xFC000280<32>
l23087E60:
	word32 a1_59
	word32 a2_823
	a0_185 = mbedtls_asn1_get_tag(s2, fp + -52<i32>, 4<32>, 1<32>, out a1_59, out a2_823, out a3_188, out a4_111, out a5_190)
	branch a0_185 != 0<32> l23087E3E
l23087E6E:
	word32 a0_69
	word32 a5_74
	word32 s0_824
	word32 a1_825
	word32 a3_826
	word32 a7_827
	word32 s8_828
	word32 s4_160
	word32 a4_105
	word32 a2_103
	ra = mbedtls_mpi_read_binary(ra, a1_59, dwArg44, a3_188, a4_111, mstatus, a1, s2, dwArg98, dwArgA8, dwArgD8, dwArgE8, dwArg0118, dwArg0128, out s0_824, out s1_154, out a0_69, out a1_825, out a2_103, out a3_826, out a4_105, out a5_74, out a7_827, out s2, out s3, out s4_160, out s8_828)
	s0_107 = a0_69
	branch a0_69 == 0<32> l23087E9E
l23087E9E:
	word32 a2_110
	word32 a5_211
	word32 a5_94 = a5_74 + a4_105
	word32 dwLoc38_440 = a5_94
	branch a5_94 == s2 l23087F88
l23087EAA:
	word32 a5_108
	word32 a5_106
	word32 a3_830
	word32 a1_829
	word32 a0_100 = mbedtls_asn1_get_tag(s2, fp + -52<i32>, 160<i32>, a5_94, out a1_829, out a2_103, out a3_830, out a4_105, out a5_106)
	s0_107 = a0_100
	branch a0_100 != 0<32> l23087F18
l23087F18:
	a5_108 = -98<i32>
	branch a0_100 != -98<i32> l23087E80
l23087EBC:
	word32 a5_113 = CONVERT(Mem95[a5_106:byte], byte, word32)
	a2_110 = dwLoc3C
	a4_111 = 6<32>
	s0_112 = a0_100 + a5_106
	dwArg48 = a5_113
	branch a5_113 != 6<32> l23087F10
l23087F10:
	s0_112 = 0xFC00029E<32>
l23087ECE:
	word32 a5_127
	word32 a3_832
	word32 a1_831
	word32 a0_121 = mbedtls_asn1_get_tag(s0_112, fp + -40<i32>, 6<32>, a5_113, out a1_831, out a2_110, out a3_832, out a4_111, out a5_127)
	branch a0_121 == 0<32> l23087EFA
l23087EFA:
	word32 a5_131 = a5_127 + a4_111
	dwLoc38_440 = a5_131
	branch s0_112 == a5_131 l23087EE6
l23087F08:
	s0_112 = 0xFC00029A<32>
l23087EDC:
	s0_112 = a0_121 + 0xFC000300<32>
	branch a0_121 != 0xFC000300<32> l23087EF2
l23087EE6:
	word32 a0_147
	word32 a3_834
	word32 a1_833
	s1_154 = pk_use_ecparams(s0_112, s1_154, a2_110, a4_111, mstatus, s2, dwLoc1C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, out a0_147, out a1_833, out a2_110, out a3_834, out a4_111, out a5_108, out s2, out s4_160)
	s0_112 = a0_147
	branch a0_147 == 0<32> l23087F20
l23087F20:
	word32 a5_175
	word32 a1_835
	word32 a3_836
	word32 a0_169 = mbedtls_asn1_get_tag(s2, fp + -52<i32>, 161<i32>, a5_108, out a1_835, out a2_103, out a3_836, out a4_105, out a5_175)
	s0_107 = a0_169
	branch a0_169 != 0<32> l23087F80
l23087F80:
	branch a0_169 != -98<i32> l23087E80
l23087F32:
	word32 s0_183 = a0_169 + a5_175
	word32 a2_838
	word32 a1_837
	s1_154 = mbedtls_asn1_get_bitstring_null(s0_183, fp + -52<i32>, a5_175, out a0_185, out a1_837, out a2_838, out a3_188, out a4_111, out a5_190)
	branch a0_185 != 0<32> l23087E3E
l23087F46:
	a5_190 = a5_190 + dwArgA4
	branch s0_183 != a5_190 l23087FBA
l23087FBA:
	s0_112 = 0xFC00029A<32>
l23087F50:
	word32 a1_839
	word32 s0_213
	word32 a0_206
	ra = mbedtls_ecp_point_read_binary(ra, s0_183, s1_154 + 136<i32>, dwArgA4, s0_183 - dwArgA4, a4_111, s1_154 + 136<i32>, mstatus, dwLoc40, dwLoc3C, s2, dwLoc18, dwLoc08, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out s0_213, out s1_154, out a0_206, out a1_839, out a2_103, out a3_188, out a4_111, out a5_211, out s2, out s3, out s4_160)
	branch a0_206 != 0<32> l23087F6A
l23087F62:
	word32 s5_841
	word32 a1_840
	ra = mbedtls_ecp_check_pubkey(ra, s1_154, s1_154, s2, a2_103, s4_160, s6, s7, s10, s11, mstatus, dwLoc3C, dwLoc38_440, s2, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_213, out s1_154, out a0_206, out a1_840, out a2_103, out a3_188, out a4_111, out a5_211, out s2, out s3, out s4_160, out s5_841, out s6, out s7, out s10, out s11, out mstatus)
l23087F6A:
	dwLoc38_440 = s0_213
	branch a0_206 == 0<32> l23087FA2
l23087F6E:
	a5_190 = 0xFB000180<32>
	branch a0_206 == 0xFB000180<32> l23087F88
l23087F88:
	word32 a0_307
	ra = mbedtls_ecp_mul(ra, s1_154, s1_154 + 136<i32>, s3, s1_154 + 40<i32>, 0<32>, s2, s4_160, s7, s10, s11, mstatus, dwLoc40, dwLoc3C, dwLoc38_440, s2, dwLoc18, dwArg08, dwArg18, dwArg38, dwArg44, dwArg48, s1, dwArg68, dwArg74, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgE8, dwArgF8, out s1_154, out a0_307, out a2_103, out a4_105, out a5_211, out s2, out s3, out s6, out s7, out s10, out s11, out mstatus)
	s0_107 = a0_307
	branch a0_307 != 0<32> l23087E80
l23087FA2:
	word32 a0_345
	s1_154 = mbedtls_ecp_check_privkey(a2_103, a5_211, out a0_345, out a2_110, out a3_188, out a4_111, out a5_190)
	s0_112 = a0_345
	branch a0_345 == 0<32> l23087E8E
l23087FB0:
l23087F78:
	s0_112 = 0xFC000300<32>
l23087EF2:
	s1_154 = mbedtls_ecp_keypair_free(s1_154, a2_110, a4_111, mstatus, dwLoc30, dwLoc18, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out a3_188, out a4_111, out a5_190, out s2)
l23087E80:
	s1_154 = mbedtls_ecp_keypair_free(s1_154, a2_103, a4_105, mstatus, dwLoc30, dwLoc18, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, out a3_188, out a4_111, out a5_190, out s2)
	a0_185 = 0xFC000300<32>
l23087E3E:
	s0_107 = 0xFC000300<32>
l23087E8C:
	s0_112 = s0_107 + a0_185
l23087E8E:
	s1Out = s1_154
	a0Out = s0_112
	a2Out = dwArg0138
	a3Out = a3_188
	a4Out = a4_111
	a5Out = a5_190
	s2Out = s2
	s3Out = s3
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
pk_parse_key_sec1_der_exit:


word32 pk_get_pk_alg(word32 ra, word32 a1, word32 a3, word32 dwArg08, word32 dwArg84, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs8_unencrypted_der
//      mbedtls_pk_parse_subpubkey
// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
pk_get_pk_alg_entry:
l23087FC2:
	word32 a0_116
	word32 a5_127
	word32 a5_30
	word32 a4_171
	word32 a1_168
	word32 a3_170
	word32 a2_169
	word32 a0_167
	word32 t1_166
	word32 ra_31 = memset(ra, a3, 0<32>, 0xC<32>, out t1_166, out a0_167, out a1_168, out a2_169, out a3_170, out a4_171, out a5_30)
	word32 a2_39
	word32 a5_42
	word32 s3_47
	word32 s4_48
	word32 a0_52
	word32 a4_124
	word32 a3_121
	word32 a1_118
	word32 s2_138
	word32 s1_135 = mbedtls_asn1_get_alg(a1, fp + -44<i32>, a3, a5_30, dwArg84, dwArgF8, out a0_52, out a1_118, out a2_39, out a3_121, out a4_124, out a5_42, out s2_138, out s3_47, out s4_48)
	branch a0_52 == 0<32> l23088004
l23088004:
	s1_135 = mbedtls_oid_get_pk_alg(fp + -44<i32>, s1_135, a2_39, a5_42, dwArg08, out a0_116, out a1_118, out a3_121, out a4_124, out a5_127, out s2_138)
	branch a0_116 != 0<32> l2308802E
l2308802E:
	a0_116 = 0xFC000380<32>
l2308800E:
	a4_124 = CONVERT(Mem23[s1_135:byte], byte, word32)
	a5_127 = 1<32>
	branch a4_124 != 1<32> l23087FF6
l23088018:
	a4_124 = 5<32>
	branch false l23088022
l23088020:
	branch true l23088026
l23088022:
	branch false l23087FF6
l23088026:
	a0_116 = 0xFC000580<32>
l23087FEE:
	a5_127 = 0xFC000580<32>
	a0_116 = a0_52 + 0xFC000580<32>
l23087FF6:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_135
	a0Out = a0_116
	a1Out = a1_118
	a3Out = a3_121
	a4Out = a4_124
	a5Out = a5_127
	s2Out = s2_138
	s3Out = s3_47
	s4Out = s4_48
	return ra_31
pk_get_pk_alg_exit:


word32 pk_parse_key_pkcs8_unencrypted_der(word32 ra, word32 s0, word32 a1, word32 a2, word32 a5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_parse_key
// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pk_parse_key_pkcs8_unencrypted_der_entry:
l23088036:
	word32 s0_119
	word32 s1_112 = a0
	word32 a2_426
	word32 a1_425
	word32 a4_109
	word32 a3_108
	word32 a5_101
	word32 a0_204 = mbedtls_asn1_get_tag(a1 + a2, fp + -36<i32>, 48<i32>, a5, out a1_425, out a2_426, out a3_108, out a4_109, out a5_101)
	byte bLoc29_234 = SLICE(CONVERT(nLoc2C, word24, uint32), byte, 24)
	branch a0_204 == 0<32> l2308806A
l2308806A:
	word32 a1_427
	mbedtls_asn1_get_int(s0 + a5_101, fp + -40<i32>, a5_101, out s1_112, out a0_204, out a1_427, out a3_108, out a4_109, out a5_101)
	branch a0_204 != 0<32> l23088056
l2308807C:
	branch a5_101 != 0<32> l23088102
l23088102:
	s0_119 = 0xFC000280<32>
l23088080:
	word32 s0_61
	word32 s4_429
	word32 a1_428
	ra = pk_get_pk_alg(ra, dwArgB4, fp + -28<i32>, a1, dwArg54, dwArgC8, dwArgF8, out s0_61, out s1_112, out a0_204, out a1_428, out a3_108, out a4_109, out a5_101, out s2, out s3, out s4_429)
	branch a0_204 != 0<32> l23088056
l23088090:
	word32 a2_431
	word32 a1_430
	a0_204 = mbedtls_asn1_get_tag(s0_61, fp + -36<i32>, 4<32>, a5_101, out a1_430, out a2_431, out a3_108, out a4_109, out a5_101)
	branch a0_204 != 0<32> l23088056
l2308809E:
	branch a5_101 == 0<32> l2308810A
l2308810A:
	s0_119 = 0xFC0002A0<32>
l230880A2:
	word32 a0_86 = mbedtls_pk_info_from_type(CONVERT(bLoc29_234, byte, word32), out a5_101)
	branch a0_86 != 0<32> l230880B6
l230880B6:
	word32 a0_90
	word32 a1_91
	word32 a2_92
	ra = mbedtls_pk_setup(ra, s0_61, s1_112, s1_112, a0_86, a5_101, out s1_112, out a0_90, out a1_91, out a2_92, out a5_101)
	s0_119 = a0_90
	branch a0_90 != 0<32> l2308805E
l230880C0:
	word32 a0_127
	word32 a5_98 = CONVERT(bLoc29_234, byte, word32)
	a4_109 = 1<32>
	branch a5_98 != 1<32> l230880E0
l230880E0:
	a5_101 = a5_98 + 0xFFFFFFFE<32> & 255<i32>
	branch a5_101 >u 1<32> l230880AE
l230880EA:
	word32 a0_105
	word32 a1_106
	word32 s4_437
	word32 a2_436
	s1_112 = pk_use_ecparams(a0_90, a1_91, a2_92, 1<32>, mstatus, dwLoc18, dwLoc0C, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, out a0_105, out a1_106, out a2_436, out a3_108, out a4_109, out a5_101, out s2, out s4_437)
	s0_119 = a0_105
	branch a0_105 != 0<32> l230880D8
l230880F6:
	word32 a2_438
	ra = pk_parse_key_sec1_der(ra, Mem19[a0_105 + 4<i32>:word32], a1_106, dwArg54, a5_101, s2, s6, s7, s10, s11, mstatus, a1, dwLoc18, dwLoc08, dwArg08, dwArg14, dwArg18, dwArg34, dwArg38, dwArg44, dwArg48, dwArg58, ra, dwArg68, dwArg74, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, out s1_112, out a0_127, out a2_438, out a3_108, out a4_109, out a5_101, out s2, out s3, out s6, out s7, out s10, out s11, out mstatus)
l230880CA:
	word32 a2_433
	word32 s0_432
	ra = pk_parse_key_pkcs1_der(ra, a0_90, a1_91, dwArg54, a5_98, s2, s6, s7, s10, s11, mstatus, a1, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg28, dwArg44, dwArg58, dwArg68, dwArg78, dwArg84, dwArg98, dwArgA8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0128, out s0_432, out s1_112, out a0_127, out a2_433, out a3_108, out a4_109, out a5_101, out s2, out s3, out s6, out s7, out s10, out s11)
l230880D4:
	s0_119 = a0_127
	branch a0_127 == 0<32> l2308805E
l230880D8:
	word32 a2_435
	word32 a0_434
	ra = mbedtls_pk_free(ra, s1_112, a5_101, out a0_434, out a2_435, out a5_101)
l230880AE:
	s0_119 = 0xFC000380<32>
l23088056:
	s0_119 = a0_204 + 0xFC000300<32>
l2308805E:
	s0Out = dwArgE4
	s1Out = s1_112
	a0Out = s0_119
	a2Out = dwArg0100
	a3Out = a3_108
	a4Out = a4_109
	a5Out = a5_101
	s2Out = s2
	s3Out = s3
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
pk_parse_key_pkcs8_unencrypted_der_exit:


word32 mbedtls_pk_parse_subpubkey(word32 ra, word32 s1, word32 a0, word32 a1, word32 a5, word32 s2, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_parse_der
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a5 mstatus ra s1 s10 s11 s2 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_pk_parse_subpubkey_entry:
l23088112:
	word32 a5_108
	word32 s1_132
	word32 dwLoc38_351 = CONVERT(nLoc38, word24, uint32)
	word32 a5_35
	word32 a4_587
	word32 a2_585
	word32 a3_586
	word32 a1_104
	word32 a0_29 = mbedtls_asn1_get_tag(a1, fp + -52<i32>, 48<i32>, a5, out a1_104, out a2_585, out a3_586, out a4_587, out a5_35)
	byte bLoc35_354 = SLICE(dwLoc38_351, byte, 24)
	branch a0_29 == 0<32> l23088158
l23088158:
	word32 a0_43
	word32 s0_51
	word32 a4_590
	word32 a3_589
	word32 s1_588
	word32 s3_220
	word32 s4_116
	ra = pk_get_pk_alg(ra, Mem26[a0:int32] + a5_35, fp + -44<i32>, dwLoc38_351, dwArg44, dwArgB8, dwArgE8, out s0_51, out s1_588, out a0_43, out a1_104, out a3_589, out a4_590, out a5_108, out s2, out s3_220, out s4_116)
	s1_132 = a0_43
	branch a0_43 != 0<32> l23088142
l23088172:
	word32 a4_69
	word32 a3_592
	word32 a2_591
	word32 a5_593
	word32 s1_72 = mbedtls_asn1_get_bitstring_null(s2, fp + -52<i32>, a5_108, out a0_29, out a1_104, out a2_591, out a3_592, out a4_69, out a5_593)
	branch a0_29 == 0<32> l23088186
l23088186:
	a5_108 = Mem26[s3_220:int32] + a4_69
	branch s2 != a5_108 l23088286
l23088286:
	s1_132 = 0xFC00049A<32>
l23088192:
	word32 a0_80 = mbedtls_pk_info_from_type(CONVERT(bLoc35_354, byte, word32), out a5_108)
	a1_104 = a0_80
	branch a0_80 == 0<32> l2308828E
l2308828E:
	s1_132 = 0xFC000380<32>
l230881A0:
	word32 a0_86
	word32 a2_88
	word32 s1_594
	ra = mbedtls_pk_setup(ra, s0_51, s1_72, s4_116, a0_80, a5_108, out s1_594, out a0_86, out a1_104, out a2_88, out a5_108)
	s1_132 = a0_86
	branch a0_86 != 0<32> l23088142
l230881AA:
	word32 s0_117
	word32 a5_94 = CONVERT(bLoc35_354, byte, word32)
	branch a5_94 != 1<32> l23088236
l23088236:
	a5_108 = a5_94 + 0xFFFFFFFE<32> & 255<i32>
	branch a5_108 >u 1<32> l2308827E
l2308827E:
	s0_117 = 0xFC000380<32>
l23088240:
	word32 a0_103
	word32 a4_107
	word32 a2_602
	word32 a3_603
	pk_use_ecparams(s0_51, Mem26[s4_116 + 4<i32>:int32], a2_88, 1<32>, mstatus, s2, dwLoc1C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, out a0_103, out a1_104, out a2_602, out a3_603, out a4_107, out a5_108, out s2, out s4_116)
	s0_117 = a0_103
	branch a0_103 != 0<32> l230881D2
l2308824E:
	s5 = Mem26[s4_116 + 4<i32>:int32]
	word32 a2_119 = Mem26[s3_220:int32]
	s6 = s5 + 136<i32>
	word32 a0_124
	word32 a2_126
	word32 s0_604
	word32 a3_605
	word32 a4_606
	word32 s3_134
	ra = mbedtls_ecp_point_read_binary(ra, a0_103, s5 + 136<i32>, a2_119, s2 - a2_119, a4_107, s2, mstatus, dwLoc40, dwLoc3C, s2, dwLoc18, dwLoc08, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out s0_604, out s1_132, out a0_124, out a1_104, out a2_126, out a3_605, out a4_606, out a5_108, out s2, out s3_134, out s4_116)
	s0_117 = a0_124
	branch a0_124 != 0<32> l23088274
l2308826A:
	word32 a0_152
	word32 s0_607
	word32 a2_608
	word32 a3_609
	word32 a4_610
	ra = mbedtls_ecp_check_pubkey(ra, s1_132, s5, s5 + 136<i32>, a2_126, s4_116, s5 + 136<i32>, s7, s10, s11, mstatus, dwLoc3C, dwLoc38_351, s2, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, s1, dwArg64, dwArg68, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD8, dwArg0108, dwArg0118, out s0_607, out s1_132, out a0_152, out a1_104, out a2_608, out a3_609, out a4_610, out a5_108, out s2, out s3_134, out s4_116, out s5, out s6, out s7, out s10, out s11, out mstatus)
	s0_117 = a0_152
l23088274:
	Mem184[s3_134:word32] = s2
	branch s0_117 == 0<32> l23088142
l2308827C:
l230881B4:
	word32 s0_190 = Mem26[s4_116 + 4<i32>:int32]
	word32 a4_196
	word32 a3_596
	word32 a2_595
	word32 a0_191 = mbedtls_asn1_get_tag(s2, fp + -48<i32>, 48<i32>, a5_94, out a1_104, out a2_595, out a3_596, out a4_196, out a5_108)
	branch a0_191 == 0<32> l230881DC
l230881DC:
	a5_108 = Mem26[s3_220:int32] + a4_196
	branch s2 == a5_108 l230881F0
l230881F0:
	s5 = s0_190 + 8<i32>
	word32 s0_599
	word32 a2_600
	word32 a4_601
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_108, mstatus, dwArg24, dwArg78, dwArg88, dwArgB8, dwArgC8, dwArgF8, dwArg0108, out s0_599, out s1_132, out a0_191, out a1_104, out a2_600, out a4_601, out a5_108, out s2, out s3_220, out s4_116)
	branch a0_191 != 0<32> l230881C8
l23088200:
	word32 a2_232
	word32 a4_234
	word32 s0_237
	ra = mbedtls_asn1_get_mpi(ra, s2, a5_108, mstatus, dwArg24, dwArg78, dwArg88, dwArgB8, dwArgC8, dwArgF8, dwArg0108, out s0_237, out s1_132, out a0_191, out a1_104, out a2_232, out a4_234, out a5_108, out s2, out s3_220, out s4_116)
	branch a0_191 != 0<32> l230881C8
l2308820E:
	a5_108 = Mem26[s3_220:int32]
	branch s2 != a5_108 l230881E8
l23088216:
	word32 a0_254
	word32 a4_256
	word32 a2_258
	word32 a3_611
	s1_132 = mbedtls_rsa_check_pubkey(a2_232, a4_234, a5_108, out a0_254, out a1_104, out a2_258, out a3_611, out a4_256, out a5_108)
	branch a0_254 != 0<32> l2308822E
l2308822E:
	s0_117 = 0xFC000500<32>
l2308821C:
	word32 a3_612
	word32 a4_613
	word32 a5_614
	Mem272[mbedtls_mpi_size(a2_258, a4_256, a5_108, out a1_104, out a3_612, out a4_613, out a5_614) + 4<i32>:word32] = s0_237
l230881C8:
	s0_117 = a0_191 + 0xFC000500<32>
	branch s0_117 == 0<32> l23088224
l23088224:
	a5_108 = Mem279[s3_220:int32]
	branch a5_108 != s2 l230881E8
l230881E8:
	s0_117 = 0xFC00049A<32>
l2308822C:
l230881D2:
	word32 a0_597
	word32 a2_598
	ra = mbedtls_pk_free(ra, s4_116, a5_108, out a0_597, out a2_598, out a5_108)
	s1_132 = s0_117
l2308817E:
	a5_108 = 0xFC000500<32>
l23088138:
	a5_108 = 0xFC000300<32>
l2308813E:
	s1_132 = a0_29 + a5_108
l23088142:
	0<32> = dwArg0198
	s1Out = s1_132
	a0Out = s1_132
	a1Out = a1_104
	a5Out = a5_108
	s2Out = s2
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_pk_parse_subpubkey_exit:


word32 mbedtls_pk_parse_key(word32 ra, word32 s0, word32 s1, word32 a1, word32 a2, word32 a4, word32 s2, word32 s3, word32 s4, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config_client_2wayauth
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s8 sp
mbedtls_pk_parse_key_entry:
l23088296:
	word32 a3_103
	word32 a4_113
	word32 s1_107
	word32 s3_11 = a2
	word32 s2_116 = a1
	word32 s6_119 = a4
	word32 a5_114
	word32 ra_105 = mbedtls_pem_init(ra, fp + -60<i32>, out a5_114)
	branch a2 != 0<32> l2308832C
l2308832C:
	a5_114 = CONVERT(Mem28[a2 + -1<i32> + a1:byte], byte, word32)
	branch a5_114 != 0<32> l230882C0
l23088338:
	word32 a2_178
	word32 a5_181
	word32 s1_184
	word32 a0_176
	word32 a0_57
	word32 s4_64
	word32 s0_876
	word32 a1_877
	word32 a2_878
	word32 a5_879
	word32 s5_880
	word32 s8_881
	word32 s9_882
	ra_105 = mbedtls_pem_read_buffer(ra_105, s0, fp + -60<i32>, 0x230C6B20<32>, 0x230C6B00<32>, a1, fp + -64<i32>, a1, mstatus, dwArg34, dwArg88, dwArgC8, dwArg0108, out s0_876, out s1_107, out a0_57, out a1_877, out a2_878, out a3_103, out a4_113, out a5_879, out s2_116, out s3_11, out s4_64, out s5_880, out s6_119, out s7, out s8_881, out s9_882, out s10, out s11)
	s0 = a0_57
	branch a0_57 != 0<32> l230883AA
l230883AA:
	a5_114 = 0xFF000000<32>
	s7 = 0xFEFFFC80<32>
	branch a0_57 != 0xFEFFFC80<32> l230883BC
l230883BC:
	branch a0_57 != 0xFEFFFD00<32> l230883CC
l230883CC:
	a5_114 = 0xFEFFFF80<32>
	branch a0_57 != 0xFEFFFF80<32> l2308836A
l230883D4:
	a5_114 = CONVERT(Mem28[s4_64:byte], byte, word32)
	branch a5_114 != 0<32> l230882C0
l230883DC:
	word32 a0_101
	word32 s4_108
	word32 s8_109
	word32 s0_891
	word32 a1_892
	word32 a2_893
	word32 s5_894
	word32 s9_895
	ra_105 = mbedtls_pem_read_buffer(ra_105, a0_57, fp + -60<i32>, 0x230C6B60<32>, 0x230C6B40<32>, s2_116, fp + -64<i32>, s2_116, mstatus, dwArg34, dwArg88, dwArgC8, dwArg0108, out s0_891, out s1_107, out a0_101, out a1_892, out a2_893, out a3_103, out a4_113, out a5_114, out s2_116, out s3_11, out s4_108, out s5_894, out s6_119, out s7, out s8_109, out s9_895, out s10, out s11)
	s0 = a0_101
	branch a0_101 != 0<32> l2308841E
l2308841E:
	branch a0_101 == s7 l230883B4
l23088422:
	branch a0_101 == s8_109 l230883C4
l23088426:
	branch a0_101 != 0xFEFFFF80<32> l2308836A
l23088430:
	a5_114 = CONVERT(Mem28[s4_108:byte], byte, word32)
	branch a5_114 != 0<32> l230882C0
l23088438:
	word32 a0_143
	word32 a2_144
	word32 a1_154
	word32 s5_160
	word32 s0_901
	word32 s4_902
	word32 s8_903
	word32 s9_904
	ra_105 = mbedtls_pem_read_buffer(ra_105, a0_101, fp + -60<i32>, 0x230C6B9C<32>, 0x230C6B80<32>, s2_116, fp + -64<i32>, s2_116, mstatus, dwArg34, dwArg88, dwArgC8, dwArg0108, out s0_901, out s1_107, out a0_143, out a1_154, out a2_144, out a3_103, out a4_113, out a5_114, out s2_116, out s3_11, out s4_902, out s5_160, out s6_119, out s7, out s8_903, out s9_904, out s10, out s11)
	s0 = a0_143
	branch a0_143 != 0<32> l23088466
l23088466:
	branch a0_143 != s5_160 l2308836A
l2308846A:
l2308845A:
	word32 s0_905
	word32 a3_906
	word32 a4_907
	word32 s6_908
	word32 s10_909
	word32 s11_910
	ra_105 = pk_parse_key_pkcs8_unencrypted_der(ra_105, dwArg44, a1_154, a2_144, a5_114, s6_119, s7, s10, s11, mstatus, dwLoc3C, dwLoc38, s4, s2, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg28, dwArg34, dwArg38, dwArg44, dwArg48, s1, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_905, out s1_184, out a0_176, out a2_178, out a3_906, out a4_907, out a5_181, out s2_116, out s3_11, out s6_908, out s7, out s10_909, out s11_910, out mstatus)
l230883FE:
	word32 a0_206 = mbedtls_pk_info_from_type(2<32>, out a5_114)
	branch a0_206 == 0<32> l23088364
l23088408:
	word32 a0_210
	word32 a1_211
	word32 a2_212
	ra_105 = mbedtls_pk_setup(ra_105, a0_101, s1_107, s1_107, a0_206, a5_114, out s1_184, out a0_210, out a1_211, out a2_212, out a5_181)
	s0 = a0_210
	branch a0_210 != 0<32> l2308839C
l23088412:
	word32 a3_896
	word32 a4_897
	word32 s6_898
	word32 s10_899
	word32 s11_900
	ra_105 = pk_parse_key_sec1_der(ra_105, Mem28[a0_210 + 4<i32>:word32], a1_211, a2_212, a5_181, s2_116, s6_119, s7, s10, s11, mstatus, dwLoc38, s2, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, s3, s1, dwArg64, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_184, out a0_176, out a2_178, out a3_896, out a4_897, out a5_181, out s2_116, out s3_11, out s6_898, out s7, out s10_899, out s11_900, out mstatus)
l230883C4:
	s0 = 0xFC000400<32>
l230883B4:
	s0 = 0xFC000480<32>
l2308835A:
	word32 a0_255 = mbedtls_pk_info_from_type(1<32>, out a5_114)
	branch a0_255 != 0<32> l23088384
l23088384:
	word32 a0_259
	word32 a1_260
	word32 a2_261
	ra_105 = mbedtls_pk_setup(ra_105, a0_57, s1_107, s1_107, a0_255, a5_114, out s1_184, out a0_259, out a1_260, out a2_261, out a5_181)
	s0 = a0_259
	branch a0_259 != 0<32> l2308839C
l2308838E:
	word32 s0_884
	word32 a3_885
	word32 a4_886
	word32 s6_887
	word32 s10_888
	word32 s11_889
	ra_105 = pk_parse_key_pkcs1_der(ra_105, a0_259, a1_260, a2_261, a5_181, s2_116, s6_119, s7, s10, s11, mstatus, dwLoc38, s2, dwLoc1C, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg34, dwArg48, s1, dwArg68, dwArg74, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s0_884, out s1_184, out a0_176, out a2_178, out a3_885, out a4_886, out a5_181, out s2_116, out s3_11, out s6_887, out s7, out s10_888, out s11_889)
l23088398:
	s0 = a0_176
	branch a0_176 == 0<32> l230883A2
l2308839C:
	word32 a0_883
	ra_105 = mbedtls_pk_free(ra_105, s1_184, a5_181, out a0_883, out a2_178, out a5_181)
l230883A2:
	word32 s4_890
	s1_107 = mbedtls_pem_free(fp + -60<i32>, a2_178, a5_181, mstatus, dwArg0108, dwArg0148, out a3_103, out a4_113, out a5_114, out s4_890)
l230882C0:
	word32 a0_353
	word32 s0_360
	word32 s10_373
	word32 s11_374
	word32 s6_376
	word32 a2_858
	ra_105 = pk_parse_key_pkcs8_unencrypted_der(ra_105, s0, s2_116, s3_11, a5_114, s6_119, s7, s10, s11, mstatus, dwLoc3C, dwLoc38, s4, s2, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg14, dwArg18, dwArg28, dwArg34, dwArg38, dwArg44, dwArg48, s1, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, out s0_360, out s1_107, out a0_353, out a2_858, out a3_103, out a4_113, out a5_114, out s2_116, out s3_11, out s6_376, out s7, out s10_373, out s11_374, out mstatus)
	branch a0_353 == 0<32> l2308846C
l230882CE:
	word32 a0_859
	word32 a2_860
	word32 a5_861
	ra_105 = mbedtls_pk_free(ra_105, s1_107, a5_114, out a0_859, out a2_860, out a5_861)
	word32 a0_388 = mbedtls_pk_info_from_type(1<32>, out a5_114)
	branch a0_388 == 0<32> l23088364
l230882DE:
	word32 a0_392
	word32 a1_862
	word32 a2_863
	ra_105 = mbedtls_pk_setup(ra_105, s0_360, s1_107, s1_107, a0_388, a5_114, out s1_107, out a0_392, out a1_862, out a2_863, out a5_114)
	branch a0_392 != 0<32> l2308846C
l230882E8:
	word32 a0_402
	word32 s0_409
	word32 s10_424
	word32 s11_425
	word32 s6_427
	word32 a2_864
	ra_105 = pk_parse_key_pkcs1_der(ra_105, a0_392, s2_116, s3_11, a5_114, s2_116, s6_376, s7, s10_373, s11_374, mstatus, dwLoc38, s2, dwLoc1C, dwLoc18, dwLoc0C, dwLoc08, dwArg04, dwArg08, dwArg18, dwArg34, dwArg48, s1, dwArg68, dwArg74, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s0_409, out s1_107, out a0_402, out a2_864, out a3_103, out a4_113, out a5_114, out s2_116, out s3_11, out s6_427, out s7, out s10_424, out s11_425)
	branch a0_402 == 0<32> l2308846C
l230882F6:
	word32 a0_865
	word32 a2_866
	word32 a5_867
	ra_105 = mbedtls_pk_free(ra_105, s1_107, a5_114, out a0_865, out a2_866, out a5_867)
	word32 a0_436 = mbedtls_pk_info_from_type(2<32>, out a5_114)
	branch a0_436 == 0<32> l23088364
l23088364:
	s0 = 0xFC000380<32>
l23088306:
	word32 a0_442
	word32 a1_868
	word32 a2_869
	ra_105 = mbedtls_pk_setup(ra_105, s0_409, s1_107, s1_107, a0_436, a5_114, out s1_107, out a0_442, out a1_868, out a2_869, out a5_114)
	branch a0_442 != 0<32> l2308846C
l23088310:
	word32 a0_452
	word32 a2_870
	word32 s6_871
	word32 s10_872
	word32 s11_873
	ra_105 = pk_parse_key_sec1_der(ra_105, Mem28[a0_442 + 4<i32>:word32], s2_116, s3_11, a5_114, s2_116, s6_427, s7, s10_424, s11_425, mstatus, dwLoc38, s2, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg24, dwArg28, dwArg34, dwArg38, dwArg48, s3, s1, dwArg64, dwArg68, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, out s1_107, out a0_452, out a2_870, out a3_103, out a4_113, out a5_114, out s2_116, out s3_11, out s6_871, out s7, out s10_872, out s11_873, out mstatus)
	branch a0_452 == 0<32> l2308846C
l2308846C:
	s0 = 0<32>
l2308831E:
	word32 a0_874
	word32 a2_875
	ra_105 = mbedtls_pk_free(ra_105, s1_107, a5_114, out a0_874, out a2_875, out a5_114)
	s0 = 0xFC000300<32>
l2308836A:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_107
	a0Out = s0
	a2Out = dwArg0138
	a3Out = a3_103
	a4Out = a4_113
	a5Out = a5_114
	s2Out = s2_116
	s3Out = s3_11
	s7Out = s7
	mstatusOut = mstatus
	return ra_105
mbedtls_pk_parse_key_exit:


void rsa_can_do(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
rsa_can_do_entry:
l23088470:
	branch a0 == 1<32> l2308847E
l2308847E:
	return
l23088476:
	return
rsa_can_do_exit:


void rsa_get_bitlen()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
rsa_get_bitlen_entry:
l23088482:
	return
rsa_get_bitlen_exit:


void rsa_debug(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
rsa_debug_entry:
l23088488:
	Mem6[0x230C6C54<32>:word32] = a1
	Mem9[a0 + 16<i32>:word32] = a1
	Mem14[a1:byte] = 1<8>
	Mem15[a1 + 12<i32>:byte] = 1<8>
	Mem16[0x230C6C68<32>:word32] = a1
	Mem17[a0 + 0x28<32>:word32] = a1
	return
rsa_debug_exit:


void eckey_can_do()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
eckey_can_do_entry:
l230884B2:
	return
eckey_can_do_exit:


void eckey_get_bitlen()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
eckey_get_bitlen_entry:
l230884BA:
	return
eckey_get_bitlen_exit:


void eckey_debug(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
eckey_debug_entry:
l230884BE:
	Mem5[a1:byte] = 2<8>
	Mem10[0x230C6BBC<32>:word32] = a1
	Mem11[a0 + 144<i32>:word32] = a1
	return
eckey_debug_exit:


void eckeydh_can_do()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
eckeydh_can_do_entry:
l230884D6:
	return
eckeydh_can_do_exit:


void rsa_free_wrap(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg10, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0000:[0..31] Stack +0010:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
rsa_free_wrap_entry:
l230884DE:
	word32 a5_19
	word32 a3_51
	word32 a4_52
	mbedtls_rsa_free(a0, a2, a4, a5, mstatus, dwArg00, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a3_51, out a4_52, out a5_19)
l230884F2_thunk_vPortFree:
	word32 s0_53
	word32 s1_54
	word32 a0_55
	word32 a1_56
	word32 a2_57
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 a6_61
	word32 s4_62
	word32 t3_63
	vPortFree(a0, dwArg10, a5_19, mstatus, dwArg0158, dwArg0198, out s0_53, out s1_54, out a0_55, out a1_56, out a2_57, out a3_58, out a4_59, out a5_60, out a6_61, out s4_62, out t3_63)
	return
rsa_free_wrap_exit:


void rsa_alloc_wrap(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
rsa_alloc_wrap_entry:
l230884F6:
	word32 a3_82
	word32 a2_81
	word32 a1_80
	word32 s1_79
	word32 s0_78
	word32 a4_83
	word32 a5_84
	word32 s2_85
	word32 s3_86
	word32 s4_87
	word32 s8_88
	word32 ra_21 = mycalloc(ra, s1, 1<32>, 172<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_78, out s1_79, out a1_80, out a2_81, out a3_82, out a4_83, out a5_84, out s2_85, out s3_86, out s4_87, out s8_88)
	branch false l23088510
l2308850A:
	mbedtls_rsa_init(ra_21, 1<32>, 0<32>, 0<32>, dwArg28)
l23088510:
	return
rsa_alloc_wrap_exit:


void rsa_check_pair_wrap(word32 ra, word32 a2, word32 a4, word32 a5, word32 s2, word32 s4, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg94, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rsa_check_pair_wrap_entry:
l2308851A:
l2308851A_thunk_mbedtls_rsa_check_pub_priv:
	mbedtls_rsa_check_pub_priv(ra, a2, a4, a5, s2, s4, s6, s7, s10, s11, mstatus, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg54, dwArg58, dwArg64, dwArg68, dwArg78, dwArg94, dwArgB8, dwArgC8)
	return
rsa_check_pair_wrap_exit:


void rsa_encrypt_wrap(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 s5, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rsa_encrypt_wrap_entry:
l2308851C:
	word32 a6_9 = Mem0[a0 + 4<i32>:int32]
	Mem11[a4:word32] = a6_9
	branch a5 <u a6_9 l2308853A
l2308853A:
	return
l2308852C:
l23088536_thunk_mbedtls_rsa_pkcs1_encrypt:
	mbedtls_rsa_pkcs1_encrypt(ra, s0, a0, a6, a7, 0<32>, a2, a1, a3, s3, s5, s7, s10, s11, mstatus, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0104, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148)
	return
rsa_encrypt_wrap_exit:


void rsa_decrypt_wrap(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s7, word32 s10, word32 s11, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s7:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rsa_decrypt_wrap_entry:
l23088542:
	branch Mem0[a0 + 4<i32>:int32] != a2 l2308855E
l2308855E:
	return
l23088550:
l2308855A_thunk_mbedtls_rsa_pkcs1_decrypt:
	mbedtls_rsa_pkcs1_decrypt(ra, s1, a0, a6, a7, 1<32>, a4, a1, a3, a5, s7, s10, s11, mstatus)
	return
rsa_decrypt_wrap_exit:


void rsa_sign_wrap(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s2, word32 s8, word32 s9, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s8:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
rsa_sign_wrap_entry:
l23088566:
	Mem13[a5:word32] = Mem0[a0 + 4<i32>:int32]
l23088580_thunk_mbedtls_rsa_pkcs1_sign:
	mbedtls_rsa_pkcs1_sign(ra, s1, a0, a6, a7, 1<32>, a1, a3, a2, a4, s2, s8, s9, s10, s11, mstatus, dwArg04, dwArg18, dwArg24, dwArg28, dwArg38, dwArg68, dwArg74, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0158, dwArg0198)
	return
rsa_sign_wrap_exit:


void rsa_verify_wrap(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s6:[0..31] s7:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s1 s10 s11 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
rsa_verify_wrap_entry:
l23088584:
	branch a5 <u Mem0[a0 + 4<i32>:int32] l230885C2
l230885C2:
	return
l2308858C:
	word32 a5_40
	branch mbedtls_rsa_pkcs1_verify(ra, a0, 0<32>, 0<32>, a1, a3, a2, a4, s3, s6, s7, s10, s11, mstatus, out a5_40) != 0<32> l230885B8
l230885AC:
	branch a5_40 >=u a5 l230885B8
l230885B2:
l230885B8:
	return
rsa_verify_wrap_exit:


void eckey_free_wrap(word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg10, word32 dwArg18, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0000:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 t3 tp
// Preserved: sp
eckey_free_wrap_entry:
l230885CA:
	word32 a5_18
	word32 a3_55
	word32 a4_56
	word32 s2_57
	mbedtls_ecp_keypair_free(a0, a2, a4, mstatus, dwArg00, dwArg18, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, dwArg0178, out a3_55, out a4_56, out a5_18, out s2_57)
l230885DE_thunk_vPortFree:
	word32 s0_58
	word32 s1_59
	word32 a0_60
	word32 a1_61
	word32 a2_62
	word32 a3_63
	word32 a4_64
	word32 a5_65
	word32 a6_66
	word32 s4_67
	word32 t3_68
	vPortFree(a0, dwArg10, a5_18, mstatus, dwArg0158, dwArg0198, out s0_58, out s1_59, out a0_60, out a1_61, out a2_62, out a3_63, out a4_64, out a5_65, out a6_66, out s4_67, out t3_68)
	return
eckey_free_wrap_exit:


void eckey_alloc_wrap(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: s0 sp
eckey_alloc_wrap_entry:
l230885E2:
	word32 s2_79
	word32 a5_78
	word32 a4_77
	word32 a3_76
	word32 a2_75
	word32 a1_74
	word32 s1_73
	word32 s0_72
	word32 s3_80
	word32 s4_81
	word32 s8_82
	word32 ra_21 = mycalloc(ra, s1, 1<32>, 172<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_72, out s1_73, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out s2_79, out s3_80, out s4_81, out s8_82)
	branch false l230885FA
l230885F6:
	mbedtls_ecp_keypair_init(ra_21, 1<32>)
l230885FA:
	return
eckey_alloc_wrap_exit:


void eckey_check_pair(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 s3, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
eckey_check_pair_entry:
l23088604:
l23088604_thunk_mbedtls_ecp_check_pub_priv:
	mbedtls_ecp_check_pub_priv(ra, s1, a0, a1, a2, s2, s3, s7, s10, s11, mstatus, dwArg08, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8)
	return
eckey_check_pair_exit:


word32 mgf_mask(word32 ra, word32 a0, word32 a1, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3
// Preserved: sp
mgf_mask_entry:
l23088608:
	word32 a0_45
	word32 a1_210
	word32 a3_217
	word32 a0_209
	word32 t1_208
	word32 a4_213
	word32 a3_212
	word32 a2_211
	word32 t1_215
	word32 a1_216
	word32 a5_214
	word32 a5_100
	word32 a4_119
	word32 a2_109
	word32 ra_51 = memset(memset(ra, fp + -64<i32>, 0<32>, 32<i32>, out t1_208, out a0_209, out a1_210, out a2_211, out a3_212, out a4_213, out a5_214), fp + -68<i32>, 0<32>, 4<32>, out t1_215, out a0_45, out a1_216, out a2_109, out a3_217, out a4_119, out a5_100)
	word32 s1_54 = Mem30[a0_45:word32]
	word32 a0_55 = mbedtls_md_get_size(a0_45)
	word32 s2_11 = a0
	word32 s0_118 = a1
l23088642:
	branch s0_118 != 0<32> l23088658
l23088658:
	s6 = s0_118
	branch a0_55 >=u s0_118 l23088660
l2308865E:
	s6 = a0_55
l23088660:
	word32 a5_74
	word32 a5_85
	word32 a5_92
	word32 a5_218
	ra_51 = mbedtls_md_finish(mbedtls_md_update(mbedtls_md_update(mbedtls_md_starts(ra_51, s1_54, a5_100, dwLoc40, out a5_74), s1_54, a5_74, dwLoc40, out a5_85), s1_54, a5_85, dwLoc40, out a5_92), s1_54, a5_92, dwLoc40, out a2_109, out a5_218)
	a5_100 = 0<32>
l23088684:
	word32 a4_103 = s2_11 + a5_100
	branch a5_100 != s6 l2308869C
l2308869C:
	a2_109 = CONVERT(Mem108[a4_103:byte], byte, word32)
	Mem113[a4_103:byte] = SLICE(CONVERT(Mem108[fp + -64<i32> + a5_100:byte], byte, word32) ^ a2_109, byte, 0)
	a5_100 = a5_100 + 1<32>
l2308868C:
	word32 a4_115 = CONVERT(bLoc41, byte, word32)
	s2_11 = a4_103
	s0_118 = s0_118 - a5_100
	a4_119 = a4_115 + 1<32>
	bLoc41 = SLICE(a4_115 + 1<32>, byte, 0)
l23088644:
	s0Out = s0_118
	s1Out = dwLoc4C
	a2Out = a2_109
	a3Out = s2
	a4Out = a4_119
	a5Out = a5_100
	s2Out = s2_11
	s3Out = a0_55
	s4Out = dwArg0168
	s5Out = a3
	s6Out = s6
	return dwLoc08
mgf_mask_exit:


void mbedtls_rsa_init(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_alloc_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 t0 t1 tp
// Preserved: s0 sp
mbedtls_rsa_init_entry:
l230886B2:
	word32 t1_42
	word32 a0_43
	word32 a1_44
	word32 a2_45
	word32 a3_46
	word32 a4_47
	word32 a5_48
	memset(ra, a0, 0<32>, 172<i32>, out t1_42, out a0_43, out a1_44, out a2_45, out a3_46, out a4_47, out a5_48)
	Mem30[a0 + 164<i32>:word32] = a1
	Mem31[a0 + 168<i32>:word32] = a2
	0<32> = dwArg38
	return
mbedtls_rsa_init_exit:


word32 mbedtls_rsa_check_pubkey(word32 a2, word32 a4, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_parse_subpubkey
//      mbedtls_rsa_check_privkey
//      mbedtls_rsa_check_pub_priv
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 tp
// Preserved: s0 sp
mbedtls_rsa_check_pubkey_entry:
l230886E0:
	branch a5 == 0<32> l2308874A
l230886E4:
	word32 a0_7 = Mem0[a4 + 28<i32>:word32]
	branch a4 == 0<32> l2308874A
l230886E8:
	word32 a5_8 = Mem0[a5:word32]
	branch (a5_8 & 1<32>) == 0<32> l2308874A
l230886EE:
	a4 = Mem0[a5_8 & 1<32>:word32]
	word32 a5_11 = a5_8 & 1<32> & 1<32>
	branch a5_11 == 0<32> l2308874A
l2308874A:
	a0Out = 0xFBFFFE00<32>
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0xFBFFFE00<32>
	return s1
l230886F4:
	word32 a5_59
	word32 a2_28
	word32 a5_123
	word32 a1_27
	word32 a3_29
	word32 a4_30
	branch mbedtls_mpi_bitlen(a2, a4, a5_11, out a1_27, out a2_28, out a3_29, out a4_30, out a5_123) <=u 127<i32> l23088738
l23088710:
	word32 a2_36
	word32 a5_124
	branch mbedtls_mpi_bitlen(a2_28, a4_30, 127<i32>, out a1_27, out a2_36, out a3_29, out a4_30, out a5_124) >u 0x2000000<32> l23088738
l2308871C:
	word32 a2_45
	word32 a5_125
	branch mbedtls_mpi_bitlen(a2_36, a4_30, 0x2000000<32>, out a1_27, out a2_45, out a3_29, out a4_30, out a5_125) <=u 1<32> l23088738
l2308872A:
	a5_59 = 0<32>
	word32 a2_126
	word32 a5_127
	word32 a6_128
	branch mbedtls_mpi_cmp_mpi(a2_45, a4_30, 1<32>, out a1_27, out a2_126, out a3_29, out a4_30, out a5_127, out a6_128) < 0<32> l2308873E
l23088738:
	a5_59 = 0xFBFFFE00<32>
l2308873E:
	a0Out = a5_59
	a1Out = a1_27
	a2Out = dwArg10
	a3Out = a3_29
	a4Out = a4_30
	a5Out = a5_59
	return a0_7 + 8<i32>
mbedtls_rsa_check_pubkey_exit:


word32 mbedtls_rsa_check_privkey(word32 ra, word32 s1, word32 a2, word32 a4, word32 a5, word32 s2, word32 s4, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArgA4, word32 dwArgC8, word32 dwArgD8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs1_der
//      mbedtls_rsa_check_pub_priv
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +00A4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_check_privkey_entry:
l23088754:
	word32 a0_23
	word32 a4_25
	word32 a1_798
	word32 a5_24
	word32 a2_27
	word32 a3_28
	word32 s1_29 = mbedtls_rsa_check_pubkey(a2, a4, a5, out a0_23, out a1_798, out a2_27, out a3_28, out a4_25, out a5_24)
	branch a0_23 != 0<32> l2308894E
l23088770:
	s1_29 = Mem17[a4_25 + 52<i32>:word32]
	a5_24 = 0xFBFFFE00<32>
	branch a4_25 == 0<32> l2308894E
l2308877E:
	s1_29 = Mem17[a4_25 + 64<i32>:word32]
	branch a4_25 == 0<32> l2308894E
l23088784:
	s1_29 = Mem17[a4_25 + 40<i32>:word32]
	branch a4_25 == 0<32> l2308894E
l2308878A:
	mbedtls_mpi_init(fp + -188<i32>)
	mbedtls_mpi_init(fp + -176<i32>)
	mbedtls_mpi_init(fp + -164<i32>)
	mbedtls_mpi_init(fp + -152<i32>)
	mbedtls_mpi_init(fp + -140<i32>)
	mbedtls_mpi_init(fp + -128<i32>)
	mbedtls_mpi_init(fp + -116<i32>)
	mbedtls_mpi_init(fp + -104<i32>)
	mbedtls_mpi_init(fp + -92<i32>)
	mbedtls_mpi_init(fp + -80<i32>)
	mbedtls_mpi_init(fp + -68<i32>)
	mbedtls_mpi_init(fp + -56<i32>)
	mbedtls_mpi_init(fp + -44<i32>)
	word32 a3_74
	word32 s1_81
	word32 s2_82
	word32 a0_94
	word32 s6_95
	word32 s0_799
	word32 s4_800
	word32 s5_801
	word32 s8_802
	word32 a5_106
	word32 a4_105
	word32 a2_103
	ra = mbedtls_mpi_mul_mpi(ra, fp + -188<i32>, s1_29 + 44<i32>, s1_29 + 56<i32>, a3_28, a4_25, s1_29 + 56<i32>, s4, s6, mstatus, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgD8, out s0_799, out s1_81, out a0_94, out a2_103, out a3_74, out a4_105, out a5_106, out s2_82, out s3, out s4_800, out s5_801, out s6_95, out s8_802)
	word32 s0_126 = a0_94
	branch a0_94 != 0<32> l230888F2
l230887F0:
	word32 a3_104
	word32 s2_112
	word32 a0_124
	word32 s6_125
	word32 s0_869
	word32 s1_870
	word32 s4_871
	word32 s5_872
	word32 s8_873
	ra = mbedtls_mpi_mul_mpi(ra, fp + -176<i32>, s1_81 + 32<i32>, s1_81 + 20<i32>, a3_74, a4_105, s2_82, s1_81 + 32<i32>, s6_95, mstatus, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgD8, out s0_869, out s1_870, out a0_124, out a2_103, out a3_104, out a4_105, out a5_106, out s2_112, out s3, out s4_871, out s5_872, out s6_125, out s8_873)
	s0_126 = a0_124
	branch a0_124 != 0<32> l230888F2
l23088808:
	word32 a0_130
	word32 a3_133
	word32 s2_141
	word32 s4_874
	ra = mbedtls_mpi_sub_int(ra, a0_124, fp + -164<i32>, 1<32>, a3_104, s2_112, mstatus, dwLoc48, dwLoc28, dwLoc08, s1, dwArg28, dwArg38, dwArg58, out a0_130, out a2_103, out a3_133, out a4_105, out a5_106, out s2_141, out s3, out s4_874)
	s0_126 = a0_130
	branch a0_130 != 0<32> l230888F2
l23088818:
	word32 a0_156
	word32 a3_159
	word32 s2_167
	word32 s4_169
	ra = mbedtls_mpi_sub_int(ra, a0_130, fp + -152<i32>, 1<32>, a3_133, s2_141, mstatus, dwLoc48, dwLoc28, dwLoc08, s1, dwArg28, dwArg38, dwArg58, out a0_156, out a2_103, out a3_159, out a4_105, out a5_106, out s2_167, out s3, out s4_169)
	s0_126 = a0_156
	branch a0_156 != 0<32> l230888F2
l23088828:
	word32 a3_184
	word32 s5_195
	word32 a0_204
	word32 s6_205
	word32 s0_875
	word32 s1_876
	word32 s2_877
	word32 s4_878
	word32 s8_879
	ra = mbedtls_mpi_mul_mpi(ra, fp + -140<i32>, fp + -164<i32>, fp + -152<i32>, a3_159, a4_105, s2_167, s4_169, s6_125, mstatus, dwLoc18, dwLoc08, dwArg08, dwArg28, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgD8, out s0_875, out s1_876, out a0_204, out a2_103, out a3_184, out a4_105, out a5_106, out s2_877, out s3, out s4_878, out s5_195, out s6_205, out s8_879)
	s0_126 = a0_204
	branch a0_204 != 0<32> l230888F2
l23088836:
	word32 a3_212
	word32 a0_231
	word32 s1_880
	word32 s2_881
	word32 s4_882
	word32 s8_883
	ra = mbedtls_mpi_gcd(ra, s5_195, fp + -140<i32>, a3_184, a4_105, mstatus, dwLoc58, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, out s1_880, out a0_231, out a2_103, out a3_212, out a4_105, out a5_106, out s2_881, out s3, out s4_882, out s8_883)
	s0_126 = a0_231
	branch a0_231 != 0<32> l230888F2
l23088844:
	word32 a0_257
	word32 s1_884
	word32 a3_885
	word32 s2_886
	word32 s4_887
	word32 s8_888
	ra = mbedtls_mpi_gcd(ra, fp + -164<i32>, fp + -152<i32>, a3_212, a4_105, mstatus, dwLoc58, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, out s1_884, out a0_257, out a2_103, out a3_885, out a4_105, out a5_106, out s2_886, out s3, out s4_887, out s8_888)
	s0_126 = a0_257
	branch a0_257 != 0<32> l230888F2
l23088852:
	word32 a0_266
	word32 s5_279
	word32 s6_280
	word32 s10_291
	word32 s0_889
	word32 a3_890
	word32 a7_891
	word32 s2_892
	word32 s4_893
	word32 s8_894
	word32 s9_895
	ra = mbedtls_mpi_div_mpi(ra, fp + -92<i32>, fp + -80<i32>, fp + -140<i32>, fp + -104<i32>, s5_195, s6_205, s7, s10, s11, mstatus, dwLocA8, dwLoc88, dwLoc78, s4, s2, dwLoc58, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwLoc08, s1, dwArg28, dwArg38, dwArg64, dwArg84, out s0_889, out a0_266, out a2_103, out a3_890, out a4_105, out a5_106, out a7_891, out s2_892, out s3, out s4_893, out s5_279, out s6_280, out s7, out s8_894, out s9_895, out s10_291, out s11)
	s0_126 = a0_266
	branch a0_266 != 0<32> l230888F2
l23088862:
	word32 a0_298
	word32 s10_311
	word32 s4_314
	word32 s5_315
	word32 s6_316
	word32 s1_896
	word32 a3_897
	word32 a7_898
	word32 s2_899
	word32 s8_900
	word32 s9_901
	ra = mbedtls_mpi_mod_mpi(ra, fp + -128<i32>, fp + -176<i32>, fp + -92<i32>, s5_279, s6_280, s7, s10_291, s11, mstatus, dwLocB8, dwLoc98, dwLoc88, dwLoc7C, dwLoc78, s2, dwLoc58, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg54, dwArg68, dwArg74, out s1_896, out a0_298, out a2_103, out a3_897, out a4_105, out a5_106, out a7_898, out s2_899, out s3, out s4_314, out s5_315, out s6_316, out s7, out s8_900, out s9_901, out s10_311, out s11)
	s0_126 = a0_298
	branch a0_298 != 0<32> l230888F2
l23088870:
	word32 a0_329
	word32 s10_342
	word32 s4_345
	word32 s5_346
	word32 s6_347
	word32 s1_902
	word32 a3_903
	word32 a7_904
	word32 s2_905
	word32 s8_906
	word32 s9_907
	ra = mbedtls_mpi_mod_mpi(ra, fp + -68<i32>, s4_314, fp + -164<i32>, s5_315, s6_316, s7, s10_311, s11, mstatus, dwLocB8, dwLoc98, dwLoc88, dwLoc7C, dwLoc78, s2, dwLoc58, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg54, dwArg68, dwArg74, out s1_902, out a0_329, out a2_103, out a3_903, out a4_105, out a5_106, out a7_904, out s2_905, out s3, out s4_345, out s5_346, out s6_347, out s7, out s8_906, out s9_907, out s10_342, out s11)
	s0_126 = a0_329
	branch a0_329 != 0<32> l230888F2
l2308887E:
	word32 a0_360
	word32 s2_368
	word32 s10_373
	word32 s5_377
	word32 s6_378
	word32 s1_908
	word32 a3_909
	word32 a7_910
	word32 s4_911
	word32 s8_912
	word32 s9_913
	ra = mbedtls_mpi_mod_mpi(ra, fp + -56<i32>, s4_345, fp + -152<i32>, s5_346, s6_347, s7, s10_342, s11, mstatus, dwLocB8, dwLoc98, dwLoc88, dwLoc7C, dwLoc78, s2, dwLoc58, dwLoc48, dwLoc38, dwLoc28, dwLoc18, dwArg08, s1, dwArg28, dwArg38, dwArg48, dwArg54, dwArg68, dwArg74, out s1_908, out a0_360, out a2_103, out a3_909, out a4_105, out a5_106, out a7_910, out s2_368, out s3, out s4_911, out s5_377, out s6_378, out s7, out s8_912, out s9_913, out s10_373, out s11)
	s0_126 = a0_360
	branch a0_360 != 0<32> l230888F2
l2308888C:
	word32 a0_391
	word32 s1_914
	word32 a3_915
	word32 s2_916
	word32 s4_917
	word32 s5_918
	word32 s6_919
	word32 s8_920
	word32 s9_921
	word32 s10_922
	ra = mbedtls_mpi_inv_mod(ra, a0_360, s2_368, s3, s5_377, s6_378, s7, s10_373, s11, mstatus, dwLoc98, dwLoc88, dwLoc78, s2, dwLoc58, dwLoc48, dwLoc3C, dwLoc38, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, s1, dwArg28, dwArg38, dwArgA4, out s1_914, out a0_391, out a2_103, out a3_915, out a4_105, out a5_106, out s2_916, out s3, out s4_917, out s5_918, out s6_919, out s7, out s8_920, out s9_921, out s10_922, out s11)
	s0_126 = a0_391
	branch a0_391 != 0<32> l230888F2
l2308889A:
	word32 a1_923
	word32 a3_924
	word32 a6_925
	branch mbedtls_mpi_cmp_mpi(a2_103, a4_105, a5_106, out a1_923, out a2_103, out a3_924, out a4_105, out a5_106, out a6_925) == 0<32> l230888AE
l230888AE:
	word32 a1_926
	word32 a3_927
	word32 a6_928
	branch mbedtls_mpi_cmp_mpi(a2_103, a4_105, a5_106, out a1_926, out a2_103, out a3_927, out a4_105, out a5_106, out a6_928) != 0<32> l230888A6
l230888BA:
	word32 a1_929
	word32 a3_930
	word32 a6_931
	branch mbedtls_mpi_cmp_mpi(a2_103, a4_105, a5_106, out a1_929, out a2_103, out a3_930, out a4_105, out a5_106, out a6_931) != 0<32> l230888A6
l230888C6:
	word32 a1_932
	word32 a3_933
	word32 a6_934
	branch mbedtls_mpi_cmp_mpi(a2_103, a4_105, a5_106, out a1_932, out a2_103, out a3_933, out a4_105, out a5_106, out a6_934) != 0<32> l230888A6
l230888D2:
	word32 a1_935
	word32 a3_936
	word32 a6_937
	branch mbedtls_mpi_cmp_int(0<32>, a2_103, out a1_935, out a2_103, out a3_936, out a4_105, out a5_106, out a6_937) != 0<32> l230888A6
l230888DC:
	word32 a1_938
	word32 a3_939
	word32 a6_940
	branch mbedtls_mpi_cmp_int(1<32>, a2_103, out a1_938, out a2_103, out a3_939, out a4_105, out a5_106, out a6_940) != 0<32> l230888A6
l230888E6:
	word32 a1_941
	word32 a3_942
	word32 a6_943
	word32 a0_478 = mbedtls_mpi_cmp_int(1<32>, a2_103, out a1_941, out a2_103, out a3_942, out a4_105, out a5_106, out a6_943)
	s0_126 = a0_478
	branch a0_478 != 0<32> l230888A6
l230888A6:
	s0_126 = 0xFBFFFE00<32>
l230888F2:
	word32 a2_503
	word32 a5_504
	word32 a4_507
	word32 a0_803
	word32 a1_804
	word32 a3_805
	word32 a6_806
	word32 s4_807
	mbedtls_mpi_free(fp + -188<i32>, a2_103, a4_105, a5_106, mstatus, dwArg88, dwArgC8, out a0_803, out a1_804, out a2_503, out a3_805, out a4_507, out a5_504, out a6_806, out s4_807)
	word32 a2_515
	word32 a5_516
	word32 a4_519
	word32 a0_808
	word32 a1_809
	word32 a3_810
	word32 a6_811
	word32 s4_812
	mbedtls_mpi_free(fp + -176<i32>, a2_503, a4_507, a5_504, mstatus, dwArg88, dwArgC8, out a0_808, out a1_809, out a2_515, out a3_810, out a4_519, out a5_516, out a6_811, out s4_812)
	word32 a2_527
	word32 a5_528
	word32 a4_531
	word32 a0_813
	word32 a1_814
	word32 a3_815
	word32 a6_816
	word32 s4_817
	mbedtls_mpi_free(fp + -164<i32>, a2_515, a4_519, a5_516, mstatus, dwArg88, dwArgC8, out a0_813, out a1_814, out a2_527, out a3_815, out a4_531, out a5_528, out a6_816, out s4_817)
	word32 a2_539
	word32 a5_540
	word32 a4_543
	word32 a0_818
	word32 a1_819
	word32 a3_820
	word32 a6_821
	word32 s4_822
	mbedtls_mpi_free(fp + -152<i32>, a2_527, a4_531, a5_528, mstatus, dwArg88, dwArgC8, out a0_818, out a1_819, out a2_539, out a3_820, out a4_543, out a5_540, out a6_821, out s4_822)
	word32 a2_551
	word32 a5_552
	word32 a4_555
	word32 a0_823
	word32 a1_824
	word32 a3_825
	word32 a6_826
	word32 s4_827
	mbedtls_mpi_free(fp + -140<i32>, a2_539, a4_543, a5_540, mstatus, dwArg88, dwArgC8, out a0_823, out a1_824, out a2_551, out a3_825, out a4_555, out a5_552, out a6_826, out s4_827)
	word32 a2_563
	word32 a5_564
	word32 a4_567
	word32 a0_828
	word32 a1_829
	word32 a3_830
	word32 a6_831
	word32 s4_832
	mbedtls_mpi_free(fp + -128<i32>, a2_551, a4_555, a5_552, mstatus, dwArg88, dwArgC8, out a0_828, out a1_829, out a2_563, out a3_830, out a4_567, out a5_564, out a6_831, out s4_832)
	word32 a2_575
	word32 a5_576
	word32 a4_579
	word32 a0_833
	word32 a1_834
	word32 a3_835
	word32 a6_836
	word32 s4_837
	mbedtls_mpi_free(fp + -116<i32>, a2_563, a4_567, a5_564, mstatus, dwArg88, dwArgC8, out a0_833, out a1_834, out a2_575, out a3_835, out a4_579, out a5_576, out a6_836, out s4_837)
	word32 a2_587
	word32 a5_588
	word32 a4_591
	word32 a0_838
	word32 a1_839
	word32 a3_840
	word32 a6_841
	word32 s4_842
	mbedtls_mpi_free(fp + -104<i32>, a2_575, a4_579, a5_576, mstatus, dwArg88, dwArgC8, out a0_838, out a1_839, out a2_587, out a3_840, out a4_591, out a5_588, out a6_841, out s4_842)
	word32 a2_599
	word32 a5_600
	word32 a4_603
	word32 a0_843
	word32 a1_844
	word32 a3_845
	word32 a6_846
	word32 s4_847
	mbedtls_mpi_free(fp + -92<i32>, a2_587, a4_591, a5_588, mstatus, dwArg88, dwArgC8, out a0_843, out a1_844, out a2_599, out a3_845, out a4_603, out a5_600, out a6_846, out s4_847)
	word32 a2_611
	word32 a5_612
	word32 a4_615
	word32 a0_848
	word32 a1_849
	word32 a3_850
	word32 a6_851
	word32 s4_852
	mbedtls_mpi_free(fp + -80<i32>, a2_599, a4_603, a5_600, mstatus, dwArg88, dwArgC8, out a0_848, out a1_849, out a2_611, out a3_850, out a4_615, out a5_612, out a6_851, out s4_852)
	word32 a2_623
	word32 a5_624
	word32 a4_627
	word32 a0_853
	word32 a1_854
	word32 a3_855
	word32 a6_856
	word32 s4_857
	mbedtls_mpi_free(fp + -68<i32>, a2_611, a4_615, a5_612, mstatus, dwArg88, dwArgC8, out a0_853, out a1_854, out a2_623, out a3_855, out a4_627, out a5_624, out a6_856, out s4_857)
	word32 a2_635
	word32 a5_636
	word32 a4_639
	word32 a0_858
	word32 a1_859
	word32 a3_860
	word32 a6_861
	word32 s4_862
	mbedtls_mpi_free(fp + -56<i32>, a2_623, a4_627, a5_624, mstatus, dwArg88, dwArgC8, out a0_858, out a1_859, out a2_635, out a3_860, out a4_639, out a5_636, out a6_861, out s4_862)
	word32 a0_863
	word32 a1_864
	word32 a4_865
	word32 a5_866
	word32 a6_867
	word32 s4_868
	s1_29 = mbedtls_mpi_free(fp + -44<i32>, a2_635, a4_639, a5_636, mstatus, dwArg88, dwArgC8, out a0_863, out a1_864, out a2_27, out a3_28, out a4_865, out a5_866, out a6_867, out s4_868)
	a5_24 = 0xFBFFFE00<32>
	branch s0_126 == 0xFBFFFE00<32> l2308894E
l2308894A:
	branch s0_126 == 0<32> l2308894E
l2308894C:
l2308894E:
	s1Out = s1_29
	a0Out = dwArgD8
	a2Out = a2_27
	a3Out = a3_28
	a4Out = dwArgB8
	a5Out = a5_24
	s2Out = dwArg98
	s3Out = s3
	s6Out = dwArg74
	s7Out = s7
	s10Out = dwArg54
	s11Out = s11
	return ra
mbedtls_rsa_check_privkey_exit:


void mbedtls_rsa_check_pub_priv(word32 ra, word32 a2, word32 a4, word32 a5, word32 s2, word32 s4, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg94, word32 dwArgB8, word32 dwArgC8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_check_pair_wrap
// MayUse:  a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_rsa_check_pub_priv_entry:
l23088962:
	word32 a0_17
	word32 a5_18
	word32 a4_19
	word32 a2_21
	word32 a1_175
	word32 a3_176
	word32 s1_23 = mbedtls_rsa_check_pubkey(a2, a4, a5, out a0_17, out a1_175, out a2_21, out a3_176, out a4_19, out a5_18)
	branch a0_17 != 0<32> l23088998
l23088974:
	word32 a0_34
	word32 a2_36
	word32 a4_38
	word32 a5_39
	word32 s1_177
	word32 a3_178
	word32 s2_179
	word32 s3_180
	word32 s6_181
	word32 s7_182
	word32 s10_183
	word32 s11_184
	mbedtls_rsa_check_privkey(ra, s1_23, a2_21, a4_19, a5_18, s2, s4, s6, s7, s10, s11, mstatus, dwLoc08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, dwArg54, dwArg58, dwArg64, dwArg68, ra, dwArg78, dwArg94, dwArgB8, dwArgC8, out s1_177, out a0_34, out a2_36, out a3_178, out a4_38, out a5_39, out s2_179, out s3_180, out s6_181, out s7_182, out s10_183, out s11_184)
	branch a0_34 != 0<32> l23088998
l2308897C:
	word32 a2_66
	word32 a4_68
	word32 a5_69
	word32 a1_185
	word32 a3_186
	word32 a6_187
	branch mbedtls_mpi_cmp_mpi(a2_36, a4_38, a5_39, out a1_185, out a2_66, out a3_186, out a4_68, out a5_69, out a6_187) != 0<32> l23088998
l2308898A:
	word32 a1_188
	word32 a2_189
	word32 a3_190
	word32 a4_191
	word32 a5_192
	word32 a6_193
	branch mbedtls_mpi_cmp_mpi(a2_66, a4_68, a5_69, out a1_188, out a2_189, out a3_190, out a4_191, out a5_192, out a6_193) == 0<32> l2308899E
l23088998:
l2308899E:
	return
mbedtls_rsa_check_pub_priv_exit:


word32 mbedtls_rsa_public(word32 ra, word32 a1, word32 a3, word32 a4, word32 s2, word32 s11, word32 mstatus, word32 dwArg24, word32 dwArg64, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_pkcs1_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s11:[0..31] s2:[0..31] Stack +0024:[0..31] Stack +0064:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a4 a5 a7 ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_public_entry:
l230889A8:
	mbedtls_mpi_init(fp + -44<i32>)
	word32 a0_28
	word32 s1_38
	word32 s0_207
	word32 a1_208
	word32 s4_210
	word32 a3_209
	word32 s8_211
	word32 a5_109
	word32 a4_110
	word32 a2_112
	word32 s2_103
	word32 a7_178
	word32 s3_185
	word32 ra_102 = mbedtls_mpi_read_binary(ra, a1, dwArg24, a3, a4, mstatus, dwLoc38, s2, dwArg98, dwArgA8, dwArgD8, dwArgE8, dwArg0118, dwArg0128, out s0_207, out s1_38, out a0_28, out a1_208, out a2_112, out a3_209, out a4_110, out a5_109, out a7_178, out s2_103, out s3_185, out s4_210, out s8_211)
	word32 s0_106 = a0_28
	branch a0_28 != 0<32> l23088A08
l230889CE:
	s0_106 = 0xFFFFFFFC<32>
	a2_112 = dwArg64
	word32 a3_58
	word32 a1_218
	word32 a2_219
	word32 a6_220
	branch mbedtls_mpi_cmp_mpi(a2_112, a4_110, a5_109, out a1_218, out a2_219, out a3_58, out a4_110, out a5_109, out a6_220) >= 0<32> l23088A08
l230889E4:
	s3_185 = Mem54[s1_38 + 4<i32>:int32]
	word32 a3_221
	word32 a0_70 = mbedtls_mpi_exp_mod(ra_102, s1_38 + 20<i32>, a3_58, s1_38 + 104<i32>, s11, mstatus, out a2_112, out a3_221, out a4_110, out a5_109, out a7_178)
	s0_106 = a0_70
	branch a0_70 != 0<32> l23088A08
l230889FC:
	word32 a0_89
	ra_102 = mbedtls_mpi_write_binary(ra_102, s2_103, s3_185, a4_110, a5_109, out a0_89, out a2_112, out a4_110, out a5_109, out s2_103, out s3_185)
	s0_106 = a0_89
l23088A08:
	word32 a4_119
	word32 a0_212
	word32 a1_213
	word32 a2_214
	word32 a3_215
	word32 a6_216
	word32 s4_217
	word32 a5_116
	word32 s1_121 = mbedtls_mpi_free(fp + -44<i32>, a2_112, a4_110, a5_109, mstatus, dwArg0108, dwArg0148, out a0_212, out a1_213, out a2_214, out a3_215, out a4_119, out a5_116, out a6_216, out s4_217)
	branch s0_106 == 0<32> l23088A18
l23088A10:
	a5_116 = 0xFBFFFD80<32>
	s0_106 = s0_106 + 0xFBFFFD80<32>
l23088A18:
	s0Out = s0_106
	s1Out = s1_121
	a0Out = s0_106
	a2Out = dwArg0138
	a4Out = a4_119
	a5Out = a5_116
	a7Out = a7_178
	s2Out = s2_103
	s3Out = s3_185
	s4Out = dwArgF4
	return ra_102
mbedtls_rsa_public_exit:


word32 mbedtls_rsa_private(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_rsaes_oaep_encrypt
//      mbedtls_rsa_pkcs1_encrypt
//      mbedtls_rsa_rsaes_oaep_decrypt
//      mbedtls_rsa_pkcs1_decrypt
//      mbedtls_rsa_pkcs1_sign
//      mbedtls_rsa_rsassa_pss_verify_ext
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s3:[0..31] s6:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_private_entry:
l23088A28:
	word32 s4_736
	word32 s0_101
	branch a5 == 0<32> l23088C44
l23088A44:
	branch a5 == 0<32> l23088C44
l23088A4A:
	branch a5 == 0<32> l23088C44
l23088C44:
	s0_101 = 0xFBFFFF80<32>
	s4_736 = s4
l23088A50:
	mbedtls_mpi_init(fp + -84<i32>)
	mbedtls_mpi_init(fp + -72<i32>)
	mbedtls_mpi_init(fp + -60<i32>)
	word32 a0_49
	word32 a3_1022
	word32 a7_1023
	word32 a1_1021
	word32 s0_1020
	word32 s8_143
	word32 s4_142
	word32 s1_392
	word32 a5_106
	word32 a4_104
	word32 a2_108
	word32 ra_102 = mbedtls_mpi_read_binary(ra, a3, a2, a3, a4, mstatus, dwLoc58, dwLoc48, dwArg78, dwArg88, dwArgB8, dwArgC8, dwArgF8, dwArg0108, out s0_1020, out s1_392, out a0_49, out a1_1021, out a2_108, out a3_1022, out a4_104, out a5_106, out a7_1023, out s2, out s3, out s4_142, out s8_143)
	s0_101 = a0_49
	branch a0_49 != 0<32> l23088B88
l23088A7C:
	s2 = s1_392 + 8<i32>
	s0_101 = 0xFFFFFFFC<32>
	word32 a3_78
	word32 a6_1038
	word32 a1_156
	branch mbedtls_mpi_cmp_mpi(a2_108, a4_104, a5_106, out a1_156, out a2_108, out a3_78, out a4_104, out a5_106, out a6_1038) >= 0<32> l23088B88
l23088A8E:
	branch s4_142 != 0<32> l23088B22
l23088B22:
	word32 a3_208
	word32 ra_186
	word32 s4_187
	word32 s1_179
	word32 a0_205
	a5_106 = Mem23[s1_392 + 160<i32>:int32]
	branch a5_106 == 0<32> l23088BBE
l23088BBE:
	s7 = 0xC<32>
	s6 = s1_392 + 152<i32>
	s3 = s1_392 + 140<i32>
l23088BC8:
	s7 = s7 + 0xFFFFFFFF<32>
	branch s7 == 0<32> l23088C3C
l23088C3C:
	s0_101 = 0xFBFFFB80<32>
l23088BCE:
	word32 a3_109
	word32 s4_1103
	word32 s8_1104
	word32 a0_105 = mbedtls_mpi_fill_random(ra_102, s0_101, Mem23[a1_156 + 4<i32>:word32], s1_392 + 152<i32>, a1_156 + 0xFFFFFFFF<32>, s4_142, s8_143, a4_104, mstatus, out a2_108, out a3_109, out a4_104, out a5_106, out s2, out s3, out s4_1103, out s8_1104, out mstatus)
	s0_101 = a0_105
	branch a0_105 != 0<32> l23088B88
l23088BE0:
	word32 a0_151
	word32 s1_1105
	word32 a3_1106
	ra_102 = mbedtls_mpi_gcd(ra_102, s1_392 + 152<i32>, s2, a3_109, a4_104, mstatus, dwArg08, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, out s1_1105, out a0_151, out a2_108, out a3_1106, out a4_104, out a5_106, out s2, out s3, out s4_142, out s8_143)
	s0_101 = a0_151
	branch a0_151 != 0<32> l23088B88
l23088BEE:
	word32 a3_1107
	word32 a6_1108
	branch mbedtls_mpi_cmp_int(1<32>, a2_108, out a1_156, out a2_108, out a3_1107, out a4_104, out a5_106, out a6_1108) != 0<32> l23088BC8
l23088BF8:
	word32 a0_171
	word32 a3_1109
	word32 s5_1110
	word32 s8_1111
	word32 s9_1112
	ra_186 = mbedtls_mpi_inv_mod(ra_102, a0_151, s1_392 + 152<i32>, s2, a4, s1_392 + 152<i32>, s7, s10, s11, mstatus, s2, dwLoc28, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, s3, s1, dwArg58, dwArg78, dwArg88, dwArg98, dwArg0104, out s1_179, out a0_171, out a2_108, out a3_1109, out a4_104, out a5_106, out s2, out s3, out s4_187, out s5_1110, out s6, out s7, out s8_1111, out s9_1112, out s10, out s11)
	s0_101 = a0_171
	branch a0_171 != 0<32> l23088B88
l23088C06:
	word32 a7_1113
	a0_205 = mbedtls_mpi_exp_mod(ra_186, s1_179 + 20<i32>, s2, s1_179 + 104<i32>, s11, mstatus, out a2_108, out a3_208, out a4_104, out a5_106, out a7_1113)
l23088B28:
	word32 s5_237
	word32 a0_246
	word32 s8_1072
	word32 a3_1070
	word32 s4_1071
	word32 s0_1068
	word32 s1_1069
	word32 ra_231 = mbedtls_mpi_mul_mpi(ra_102, s1_392 + 140<i32>, s1_392 + 140<i32>, s1_392 + 140<i32>, a3_78, a4_104, s1_392 + 8<i32>, s4_142, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1068, out s1_1069, out a0_246, out a2_108, out a3_1070, out a4_104, out a5_106, out s2, out s3, out s4_1071, out s5_237, out s6, out s8_1072)
	s0_101 = a0_246
	branch a0_246 != 0<32> l23088B88
l23088B3A:
	word32 a0_252
	word32 a3_255
	word32 s1_259
	word32 s4_268
	word32 s9_1076
	word32 s8_1075
	word32 s5_1074
	word32 a7_1073
	word32 ra_264 = mbedtls_mpi_mod_mpi(ra_231, s3, s3, s2, s5_237, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_259, out a0_252, out a2_108, out a3_255, out a4_104, out a5_106, out a7_1073, out s2, out s3, out s4_268, out s5_1074, out s6, out s7, out s8_1075, out s9_1076, out s10, out s11)
	s0_101 = a0_252
	branch a0_252 != 0<32> l23088B88
l23088B48:
	word32 s5_297
	word32 a0_306
	word32 s4_1080
	word32 s8_1081
	word32 a3_1079
	word32 s0_1077
	word32 s1_1078
	word32 ra_291 = mbedtls_mpi_mul_mpi(ra_264, s1_259 + 152<i32>, s1_259 + 152<i32>, s1_259 + 152<i32>, a3_255, a4_104, s2, s4_268, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1077, out s1_1078, out a0_306, out a2_108, out a3_1079, out a4_104, out a5_106, out s2, out s3, out s4_1080, out s5_297, out s6, out s8_1081)
	s0_101 = a0_306
	branch a0_306 != 0<32> l23088B88
l23088B5A:
	word32 s9_1085
	word32 s8_1084
	word32 s5_1083
	word32 a7_1082
	ra_186 = mbedtls_mpi_mod_mpi(ra_291, s3, s3, s2, s5_297, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_179, out a0_205, out a2_108, out a3_208, out a4_104, out a5_106, out a7_1082, out s2, out s3, out s4_187, out s5_1083, out s6, out s7, out s8_1084, out s9_1085, out s10, out s11)
l23088B64:
	s0_101 = a0_205
	branch a0_205 != 0<32> l23088B88
l23088B68:
	word32 s5_367
	word32 a0_376
	word32 s8_1090
	word32 s4_1089
	word32 a3_1088
	word32 s1_1087
	word32 s0_1086
	word32 ra_361 = mbedtls_mpi_mul_mpi(ra_186, fp + -84<i32>, fp + -84<i32>, s1_179 + 140<i32>, a3_208, a4_104, s2, s4_187, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1086, out s1_1087, out a0_376, out a2_108, out a3_1088, out a4_104, out a5_106, out s2, out s3, out s4_1089, out s5_367, out s6, out s8_1090)
	s0_101 = a0_376
	branch a0_376 != 0<32> l23088B88
l23088B78:
	word32 a0_385
	word32 a3_1091
	word32 a7_1092
	word32 s4_1093
	word32 s5_1094
	word32 s8_1095
	word32 s9_1096
	ra_102 = mbedtls_mpi_mod_mpi(ra_361, fp + -84<i32>, fp + -84<i32>, s2, s5_367, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_392, out a0_385, out a2_108, out a3_1091, out a4_104, out a5_106, out a7_1092, out s2, out s3, out s4_1093, out s5_1094, out s6, out s7, out s8_1095, out s9_1096, out s10, out s11)
	s0_101 = a0_385
	branch a0_385 == 0<32> l23088A92
l23088A92:
	s6 = s1_392 + 44<i32>
	word32 a3_1039
	word32 a7_1040
	word32 a0_424 = mbedtls_mpi_exp_mod(ra_102, s1_392 + 68<i32>, s6, s1_392 + 116<i32>, s11, mstatus, out a2_108, out a3_1039, out a4_104, out a5_106, out a7_1040)
	s0_101 = a0_424
	branch a0_424 != 0<32> l23088B88
l23088AAE:
	s3 = s1_392 + 56<i32>
	word32 a3_449
	word32 a7_1041
	word32 a0_446 = mbedtls_mpi_exp_mod(ra_102, s1_392 + 80<i32>, s3, s1_392 + 128<i32>, s11, mstatus, out a2_108, out a3_449, out a4_104, out a5_106, out a7_1041)
	s0_101 = a0_446
	branch a0_446 != 0<32> l23088B88
l23088AC8:
	word32 a0_467
	word32 a3_470
	word32 s1_477
	word32 s4_480
	word32 a7_1043
	word32 s8_1044
	word32 s0_1042
	word32 ra_475 = mbedtls_mpi_sub_mpi(ra_102, a0_446, fp + -84<i32>, a3_449, a4_104, a5_106, s2, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_1042, out s1_477, out a0_467, out a2_108, out a3_470, out a4_104, out a5_106, out a7_1043, out s2, out s3, out s4_480, out s8_1044)
	s0_101 = a0_467
	branch a0_467 != 0<32> l23088B88
l23088AD6:
	word32 s5_506
	word32 a0_515
	word32 s4_1048
	word32 s8_1049
	word32 s0_1045
	word32 s1_1046
	word32 a3_1047
	word32 ra_500 = mbedtls_mpi_mul_mpi(ra_475, fp + -72<i32>, fp + -84<i32>, s1_477 + 92<i32>, a3_470, a4_104, s2, s4_480, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1045, out s1_1046, out a0_515, out a2_108, out a3_1047, out a4_104, out a5_106, out s2, out s3, out s4_1048, out s5_506, out s6, out s8_1049)
	s0_101 = a0_515
	branch a0_515 != 0<32> l23088B88
l23088AE6:
	word32 a0_523
	word32 a3_526
	word32 s4_539
	word32 s9_1054
	word32 s8_1053
	word32 s5_1052
	word32 a7_1051
	word32 s1_1050
	word32 ra_535 = mbedtls_mpi_mod_mpi(ra_500, fp + -84<i32>, fp + -72<i32>, s6, s5_506, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_1050, out a0_523, out a2_108, out a3_526, out a4_104, out a5_106, out a7_1051, out s2, out s3, out s4_539, out s5_1052, out s6, out s7, out s8_1053, out s9_1054, out s10, out s11)
	s0_101 = a0_523
	branch a0_523 != 0<32> l23088B88
l23088AF4:
	word32 a3_556
	word32 a0_576
	word32 s8_1058
	word32 s4_1057
	word32 s1_1056
	word32 s0_1055
	word32 s5_567
	word32 ra_561 = mbedtls_mpi_mul_mpi(ra_535, fp + -72<i32>, fp + -84<i32>, s3, a3_526, a4_104, s2, s4_539, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1055, out s1_1056, out a0_576, out a2_108, out a3_556, out a4_104, out a5_106, out s2, out s3, out s4_1057, out s5_567, out s6, out s8_1058)
	s0_101 = a0_576
	branch a0_576 != 0<32> l23088B88
l23088B02:
	word32 a0_582
	word32 a3_585
	word32 s1_592
	word32 s4_595
	word32 s8_1062
	word32 a7_1061
	word32 a1_1060
	word32 s0_1059
	word32 ra_590 = mbedtls_mpi_add_mpi(ra_561, a0_576, fp + -84<i32>, a3_556, a4_104, a5_106, s2, mstatus, dwArg38, dwArg58, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, out s0_1059, out s1_592, out a0_582, out a1_1060, out a2_108, out a3_585, out a4_104, out a5_106, out a7_1061, out s2, out s3, out s4_595, out s8_1062)
	s0_101 = a0_582
	branch a0_582 != 0<32> l23088B88
l23088B10:
	branch s4_595 != 0<32> l23088C1A
l23088C1A:
	word32 s5_621
	word32 a0_630
	word32 s4_1066
	word32 s8_1067
	word32 a3_1065
	word32 s0_1063
	word32 s1_1064
	word32 ra_615 = mbedtls_mpi_mul_mpi(ra_590, fp + -84<i32>, fp + -84<i32>, s1_592 + 152<i32>, a3_585, a4_104, s2, s4_595, s6, mstatus, s1, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0138, out s0_1063, out s1_1064, out a0_630, out a2_108, out a3_1065, out a4_104, out a5_106, out s2, out s3, out s4_1066, out s5_621, out s6, out s8_1067)
	s0_101 = a0_630
	branch a0_630 != 0<32> l23088B88
l23088C2A:
	word32 a0_636
	word32 s1_1097
	word32 a3_1098
	word32 a7_1099
	word32 s4_1100
	word32 s8_1101
	word32 s9_1102
	ra_590 = mbedtls_mpi_mod_mpi(ra_615, fp + -84<i32>, fp + -84<i32>, s2, s5_621, s6, s7, s10, s11, mstatus, dwLoc58, s2, dwLoc28, dwLoc1C, dwLoc18, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgC8, dwArgD4, out s1_1097, out a0_636, out a2_108, out a3_1098, out a4_104, out a5_106, out a7_1099, out s2, out s3, out s4_1100, out s5_567, out s6, out s7, out s8_1101, out s9_1102, out s10, out s11)
	s0_101 = a0_636
	branch a0_636 == 0<32> l23088B14
l23088C3A:
l23088B14:
	word32 a0_674
	mbedtls_mpi_write_binary(ra_590, s5_567, a2_108, a4_104, a5_106, out a0_674, out a2_108, out a4_104, out a5_106, out s2, out s3)
	s0_101 = a0_674
l23088B88:
	word32 a2_705
	word32 a5_706
	word32 a4_709
	word32 s4_1028
	word32 a1_1025
	word32 a3_1026
	word32 a6_1027
	word32 a0_1024
	mbedtls_mpi_free(fp + -84<i32>, a2_108, a4_104, a5_106, mstatus, dwArgE8, dwArg0128, out a0_1024, out a1_1025, out a2_705, out a3_1026, out a4_709, out a5_706, out a6_1027, out s4_1028)
	word32 a2_717
	word32 a5_718
	word32 a4_721
	word32 a0_1029
	word32 a1_1030
	word32 a6_1032
	word32 s4_1033
	word32 a3_1031
	mbedtls_mpi_free(fp + -72<i32>, a2_705, a4_709, a5_706, mstatus, dwArgE8, dwArg0128, out a0_1029, out a1_1030, out a2_717, out a3_1031, out a4_721, out a5_718, out a6_1032, out s4_1033)
	word32 a3_1036
	word32 a6_1037
	word32 a1_1035
	word32 a0_1034
	mbedtls_mpi_free(fp + -60<i32>, a2_717, a4_721, a5_718, mstatus, dwArgE8, dwArg0128, out a0_1034, out a1_1035, out a2, out a3_1036, out a4, out a5, out a6_1037, out s4_736)
	branch s0_101 == 0<32> l23088BA4
l23088B9C:
	a5 = 0xFBFFFD00<32>
	s0_101 = s0_101 + 0xFBFFFD00<32>
l23088BA4:
	s0Out = s0_101
	s1Out = dwArg28
	a0Out = s0_101
	a2Out = a2
	a3Out = dwArg08
	a4Out = a4
	a5Out = a5
	a7Out = dwLoc18
	s2Out = s2
	s3Out = s3
	s4Out = s4_736
	s5Out = s4
	s6Out = s6
	s7Out = s7
	s9Out = dwLoc5C
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return dwArg68
mbedtls_rsa_private_exit:


void mbedtls_rsa_rsaes_oaep_encrypt(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 mstatus, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] s3:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_rsaes_oaep_encrypt_entry:
l23088C4C:
	branch a3 != 1<32> l23088C9E
l23088C70:
	branch Mem29[a0 + 164<i32>:int32] == a3 l23088C9E
l23088C9E:
	branch a1 == 0<32> l23088C78
l23088CA0:
	word32 a5_474
	word32 a0_60 = mbedtls_md_info_from_type(CONVERT(Mem29[a0 + 168<i32>:byte], byte, word32), out a5_474)
	branch a0_60 == 0<32> l23088C78
l23088CBC:
	word32 s0_63 = Mem55[a0 + 4<i32>:int32]
	word32 a0_64 = mbedtls_md_get_size(a0_60)
	word32 a5_67 = a6 + 2<i32> + (a0_64 << 1<u32>)
	branch a5_67 <u a6 l23088C78
l23088CD4:
	branch s0_63 <u a5_67 l23088C78
l23088CD8:
	word32 a3_77
	word32 a4_78
	word32 a5_79
	word32 a2_478
	word32 a0_476
	word32 a1_477
	word32 t1_475
	word32 ra_80 = memset(dwArg0118, s3, 0<32>, s0_63, out t1_475, out a0_476, out a1_477, out a2_478, out a3_77, out a4_78, out a5_79)
	Mem84[s3:byte] = 0<8>
	word32 sp_88
	word32 ra_90
	word32 s0_91
	word32 s1_92
	word32 s2_93
	word32 s4_94
	word32 s7_97
	word32 s8_98
	word32 s9_99
	word32 s10_100
	word32 s11_101
	word32 a0_104
	word32 tp_114
	word32 t5_351
	word32 t6_352
	call a1 (retsize: 0;)
		uses: a0:a2,a1:s3 + 1<i32>,a2:a0_64,a3:a3_77,a4:a4_78,a5:a5_79,a6:a6,a7:a7,mstatus:mstatus,ra:ra_80,s0:s0_63,s1:a0_64,s10:a4,s11:a5,s2:a0,s3:s3,s4:a6,s5:a1,s6:a2,s7:s3 + 1<i32>,s8:a0_60,s9:a0_64 << 1<u32>,Stack +0178:dwArg0118,t5:t5_351,t6:t6_352,tp:tp_114
		defs: a0:a0_104,ra:ra_90,s0:s0_91,s1:s1_92,s10:s10_100,s11:s11_101,s2:s2_93,s4:s4_94,s7:s7_97,s8:s8_98,s9:s9_99,sp:sp_88,t5:t5_351,t6:t6_352,tp:tp_114
	branch a0_104 == 0<32> l23088CFE
l23088CFE:
	word32 a5_115 = s7_97 + s1_92
	Mem120[sp_88 + 132<i32>:word32] = a5_115
	word32 a5_122
	word32 a1_123
	word32 ra_126 = mbedtls_md(ra_90, s8_98, s10_100, s11_101, a5_115, out a1_123, out a5_122)
	word32 s0_131 = Mem120[sp_88 + 100<i32>:word32]
	word32 a0_133 = s0_91 - s4_94 + 0xFFFFFFFE<32> + s1_92 - s9_99 + a5_122
	Mem135[a0_133:byte] = 1<8>
	word32 a4_482
	word32 a6_484
	word32 a7_485
	word32 a5_483
	word32 a2_480
	word32 a3_481
	word32 a1_479
	memcpy(a0_133 + 1<32>, a1_123, s4_94, out a1_479, out a2_480, out a3_481, out a4_482, out a5_483, out a6_484, out a7_485)
	word32 a3_155
	word32 a4_156
	word32 a5_157
	word32 a0_166
	word32 a2_168
	word32 a4_170
	word32 a5_171
	word32 mstatus_173
	word32 s1_175
	word32 s3_177
	word32 a3_486
	word32 s4_488
	word32 s8_489
	word32 s2_487
	word32 ra_174 = mbedtls_md_setup(mbedtls_md_init(ra_126, sp_88 + 20<i32>, out a3_155, out a4_156, out a5_157), s0_131, s1_92, sp_88 + 20<i32>, s8_98, 0<32>, a3_155, a4_156, a5_157, s2_93, mstatus, Mem135[sp_88 + 16<i32>:word32], Mem135[sp_88 + 20<i32>:word32], Mem135[sp_88 + 56<i32>:word32], Mem135[sp_88 + 264<i32>:word32], Mem135[sp_88 + 328<i32>:word32], out s1_175, out a0_166, out a2_168, out a3_486, out a4_170, out a5_171, out s2_487, out s3_177, out s4_488, out s8_489, out mstatus_173)
	branch a0_166 == 0<32> l23088D4C
l23088D4C:
	word32 s1_203
	word32 a2_220
	word32 a3_221
	word32 a4_222
	word32 a5_223
	word32 s1_227
	word32 s2_228
	word32 s3_229
	word32 s6_232
	word32 s5_502
	word32 s5_498
	word32 s0_500
	word32 s4_501
	word32 s6_499
	word32 a5_494
	word32 s3_496
	word32 s4_497
	word32 s2_495
	word32 s0_490
	word32 a3_492
	word32 a4_493
	word32 a2_491
	word32 ra_225 = mgf_mask(mgf_mask(ra_174, s1_175 + 1<i32> + s3_177, s0_131 + 0xFFFFFFFF<32> - s1_175, out s0_490, out s1_203, out a2_491, out a3_492, out a4_493, out a5_494, out s2_495, out s3_496, out s4_497, out s5_498, out s6_499), s7_97, s1_203, out s0_500, out s1_227, out a2_220, out a3_221, out a4_222, out a5_223, out s2_228, out s3_229, out s4_501, out s5_502, out s6_232)
	word32 a5_240
	mbedtls_md_free(ra_225, sp_88 + 20<i32>, a2_220, a4_222, a5_223, mstatus_173, out a5_240)
	branch a5_240 != 0<32> l23088D8A
l23088D8A:
	word32 s3_513
	word32 s2_512
	word32 a5_510
	word32 s5_515
	word32 s7_517
	word32 s6_516
	word32 s4_514
	word32 s9_518
	word32 s10_519
	word32 mstatus_521
	word32 s11_520
	word32 a7_511
	word32 a0_506
	word32 a3_508
	word32 a4_509
	word32 a2_507
	word32 s0_504
	word32 s1_505
	mbedtls_rsa_private(ra_225, s1_227, s6_232, s3_229, s3_229, a5_240, s2_228, s3_229, s6_232, s7_97, s10_100, s11_101, mstatus_173, Mem135[sp_88 + 8<i32>:word32], Mem135[sp_88 + 24<i32>:word32], Mem135[sp_88 + 36<i32>:word32], Mem135[sp_88 + 40<i32>:word32], Mem135[sp_88 + 56<i32>:word32], Mem135[sp_88 + 88<i32>:word32], Mem135[sp_88 + 104<i32>:word32], Mem135[sp_88 + 120<i32>:word32], Mem135[sp_88 + 136<i32>:word32], Mem135[sp_88 + 152<i32>:word32], Mem135[sp_88 + 168<i32>:word32], Mem135[sp_88 + 180<i32>:word32], Mem135[sp_88 + 184<i32>:word32], Mem135[sp_88 + 200<i32>:word32], Mem135[sp_88 + 212<i32>:word32], Mem135[sp_88 + 216<i32>:word32], Mem135[sp_88 + 232<i32>:word32], Mem135[sp_88 + 248<i32>:word32], Mem135[sp_88 + 260<i32>:word32], Mem135[sp_88 + 264<i32>:word32], Mem135[sp_88 + 296<i32>:word32], Mem135[sp_88 + 312<i32>:word32], out s0_504, out s1_505, out a0_506, out a2_507, out a3_508, out a4_509, out a5_510, out a7_511, out s2_512, out s3_513, out s4_514, out s5_515, out s6_516, out s7_517, out s9_518, out s10_519, out s11_520, out mstatus_521)
l23088D7C:
	word32 s1_523
	word32 s0_522
	word32 a0_524
	word32 a2_525
	word32 a4_526
	word32 a5_527
	word32 a7_528
	word32 s2_529
	word32 s3_530
	word32 s4_531
	mbedtls_rsa_public(ra_225, s3_229, a3_221, a4_222, s2_228, s11_101, mstatus_173, Mem135[sp_88 + 36<i32>:word32], Mem135[sp_88 + 100<i32>:word32], Mem135[sp_88 + 152<i32>:word32], Mem135[sp_88 + 168<i32>:word32], Mem135[sp_88 + 216<i32>:word32], Mem135[sp_88 + 232<i32>:word32], Mem135[sp_88 + 264<i32>:word32], Mem135[sp_88 + 280<i32>:word32], Mem135[sp_88 + 296<i32>:word32], Mem135[sp_88 + 328<i32>:word32], out s0_522, out s1_523, out a0_524, out a2_525, out a4_526, out a5_527, out a7_528, out s2_529, out s3_530, out s4_531)
l23088D86:
l23088D44:
	word32 a5_503
	mbedtls_md_free(ra_174, sp_88 + 20<i32>, a2_168, a4_170, a5_171, mstatus_173, out a5_503)
l23088CF4:
l23088C78:
l23088C7E:
	return
mbedtls_rsa_rsaes_oaep_encrypt_exit:


void mbedtls_rsa_rsaes_pkcs1_v15_encrypt(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s5, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_encrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_rsaes_pkcs1_v15_encrypt_entry:
l23088D9A:
	branch a3 != 1<32> l23088DA8
l23088DA0:
	branch Mem0[a0 + 164<i32>:int32] != 0<32> l23088EBC
l23088DA8:
	branch a1 == 0<32> l23088EBC
l23088DAC:
	branch a5 == 0<32> l23088EBC
l23088DB0:
	branch a6 == 0<32> l23088EBC
l23088EBC:
	return
l23088DB4:
	word32 a0_52 = Mem50[s0 + 4<i32>:word32]
	branch a4 >u 0xFFFFFFF4<32> l23088EC4
l23088DD4:
	branch s0 <u a4 + 11<i32> l23088EC4
l23088EC4:
l23088DDC:
	word32 ra_101
	word32 s0_102
	Mem59[a6:byte] = 0<8>
	word32 s0_58 = s0 - a4
	word32 s1_103 = a6
	word32 s9_108 = a5
	word32 s8_107 = a4
	word32 s5_105 = a3
	word32 s6_125 = a2
	word32 s4_123 = a1
	word32 s3_104 = a0_52
	word32 s2_121 = a6 + 2<i32>
	branch a3 != 0<32> l23088E78
l23088E78:
	Mem73[a6 + 1<i32>:byte] = 1<8>
	word32 a3_74 = a6 + 2<i32>
	word32 a5_75 = s0_58 + 0xFFFFFFFD<32> + a6
l23088E86:
	branch a5_75 != a3_74 l23088E8E
l23088E8E:
	Mem80[a3_74 + 0<i32>:byte] = 0xFF<8>
	a3_74 = a3_74 + 1<32>
l23088E8A:
	s0_102 = s0_58 + 0xFFFFFFFD<32> + (a6 + 2<i32>)
	ra_101 = ra
l23088DF8:
	Mem87[a6 + 1<i32>:byte] = 2<8>
	word32 a5_134 = 2<32>
	s0_102 = s0_58 + 0xFFFFFFFF<32> + a6
	ra_101 = ra
l23088E02:
	branch s2_121 != s0_102 l23088E3C
l23088E3C:
	word32 s7_106 = 100<i32>
l23088E40:
	word32 a0_114
	word32 tp_131
	word32 t3_132
	word32 t5_323
	word32 t6_324
	word32 t1_321
	word32 t4_322
	word32 t0_320
	call s4_123 (retsize: 0;)
		uses: a0:s6_95,a1:s2_93,a2:1<32>,a3:a3_98,a4:a4_109,a5:a5_99,a6:a6_100,mstatus:mstatus,ra:ra_101,s0:s0_102,s1:s1_103,s10:s10,s11:s11,s2:s2_93,s3:s3_104,s4:s4_97,s5:s5_105,s6:s6_95,s7:s7_106,s8:s8_107,s9:s9_108,t0:t0_320,t1:t1_321,t3:t3_132,t4:t4_322,t5:t5_323,t6:t6_324,tp:tp_131
		defs: a0:a0_114,a3:a3_113,a4:a4_129,a6:a6_117,ra:ra_118,s0:s0_119,s1:s1_120,s2:s2_121,s3:s3_122,s4:s4_123,s5:s5_124,s6:s6_125,s7:s7_126,s8:s8_127,s9:s9_128,t0:t0_320,t1:t1_321,t3:t3_132,t4:t4_322,t5:t5_323,t6:t6_324,tp:tp_131
	a5_134 = CONVERT(Mem87[s2_121:byte], byte, word32)
	branch a5_134 != 0<32> l23088ECC
l23088ECC:
	branch a0_114 != 0<32> l23088E56
l23088ECE:
	s2_121 = s2_121 + 1<32>
l23088E4E:
	s7_106 = s7 + 0xFFFFFFFF<32>
	branch s7 == 0xFFFFFFFF<32> l23088E56
l23088E54:
	branch a0_114 == 0<32> l23088E40
l23088E56:
l23088E5E:
	0<32> = dwArg0128
	return
l23088E06:
	Mem159[s0_102:byte] = 0<8>
	word32 a4_169
	word32 a5_170
	word32 a3_174
	word32 a1_666
	word32 a7_669
	word32 a2_667
	word32 a6_668
	memcpy(s0_102 + 1<i32>, s9_108, s8_107, out a1_666, out a2_667, out a3_174, out a4_169, out a5_170, out a6_668, out a7_669)
	branch s5_105 != 0<32> l23088E96
l23088E96:
	0<32> = dwArg0128
l23088EB8_thunk_mbedtls_rsa_private:
	word32 s10_695
	word32 s11_696
	word32 mstatus_697
	word32 s4_690
	word32 s7_693
	word32 s9_694
	word32 s5_691
	word32 s6_692
	word32 a4_685
	word32 s2_688
	word32 s3_689
	word32 a5_686
	word32 a7_687
	word32 s0_680
	word32 a2_683
	word32 a3_684
	word32 s1_681
	word32 a0_682
	mbedtls_rsa_private(ra_101, s1_103, s6_125, s1_103, s1_103, a5_170, s2_121, s3_104, s6_125, s7, s10, s11, mstatus, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0104, dwArg0108, dwArg0128, dwArg0138, out s0_680, out s1_681, out a0_682, out a2_683, out a3_684, out a4_685, out a5_686, out a7_687, out s2_688, out s3_689, out s4_690, out s5_691, out s6_692, out s7_693, out s9_694, out s10_695, out s11_696, out mstatus_697)
	return
l23088E1A:
	0<32> = dwArg0128
l23088E38_thunk_mbedtls_rsa_public:
	word32 a5_675
	word32 s3_678
	word32 s4_679
	word32 a7_676
	word32 s2_677
	word32 s1_671
	word32 a4_674
	word32 a0_672
	word32 a2_673
	word32 s0_670
	mbedtls_rsa_public(ra_101, s1_103, a3_174, a4_169, s2_121, s11, mstatus, dwArg24, ra, dwArg98, dwArgA8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0148, out s0_670, out s1_671, out a0_672, out a2_673, out a4_674, out a5_675, out a7_676, out s2_677, out s3_678, out s4_679)
	return
mbedtls_rsa_rsaes_pkcs1_v15_encrypt_exit:


void mbedtls_rsa_pkcs1_encrypt(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s3, word32 s5, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0104, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_encrypt_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_pkcs1_encrypt_entry:
l23088ED2:
	word32 t4_5 = Mem0[a0 + 164<i32>:int32]
	branch t4_5 == 0<32> l23088EEA
l23088EEA:
l23088EEA_thunk_mbedtls_rsa_rsaes_pkcs1_v15_encrypt:
	mbedtls_rsa_rsaes_pkcs1_v15_encrypt(ra, s0, a0, a1, a2, a3, a4, a5, a6, s5, s7, s10, s11, mstatus, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF8, dwArg0104, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148)
	return
l23088EDA:
	branch t4_5 == 1<32> l23088EEE
l23088EEE:
	mbedtls_rsa_rsaes_oaep_encrypt(a0, a1, a2, a3, 0<32>, 0<32>, a4, a5, s3, mstatus, dwArgF8)
	return
l23088EE2:
	return
mbedtls_rsa_pkcs1_encrypt_exit:


void mbedtls_rsa_rsaes_oaep_decrypt(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a7, word32 mstatus, int32 dwArg00, int32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_decrypt
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_rsa_rsaes_oaep_decrypt_entry:
l23088F06:
	branch a3 != 1<32> l23088F8E
l23088F44:
	branch Mem29[a0 + 164<i32>:int32] == a3 l23088F8E
l23088F8E:
	word32 a0_36 = Mem29[s1 + 4<i32>:word32]
	branch s1 >u -1024<i32> l23088F4C
l23088F9C:
	word32 a5_63
	word32 a0_62 = mbedtls_md_info_from_type(CONVERT(Mem29[a0_36 + 168<i32>:byte], byte, word32), out a5_63)
	word32 s9_175 = a5
	word32 s7_104 = a0_62
	branch a0_62 == 0<32> l23088F4C
l23088FB8:
	word32 a0_65 = mbedtls_md_get_size(a0_62)
	word32 s5_188 = a0_65
	branch s1 <u a0_65 + 1<i32> << 1<u32> l23088F4C
l23088FCA:
	word32 s2_121
	word32 s1_120
	word32 ra_118
	word32 a0_132
	branch a5_63 != 0<32> l23088FFC
l23088FFC:
	word32 s0_595
	word32 a2_596
	word32 a5_599
	word32 a4_598
	word32 a3_597
	word32 a7_600
	word32 s10_604
	word32 s4_602
	word32 s3_601
	word32 s6_603
	word32 s11_605
	ra_118 = mbedtls_rsa_private(ra, s1, a2, a7, fp + -1088<i32>, a5_63, a7, fp + -1088<i32>, a0_65 + 1<i32>, a0_62, a1, a2, mstatus, dwLoc0478, dwLoc0468, dwLoc045C, dwLoc0458, dwLoc0448, dwLoc0428, dwLoc0418, dwLoc0408, dwLoc03F8, dwLoc03E8, dwLoc03D8, dwLoc03CC, dwLoc03C8, dwLoc03B8, dwLoc03AC, dwLoc03A8, dwLoc0398, dwLoc0388, dwLoc037C, dwLoc0378, dwLoc0358, dwLoc0348, out s0_595, out s1_120, out a0_132, out a2_596, out a3_597, out a4_598, out a5_599, out a7_600, out s2_121, out s3_601, out s4_602, out s5_188, out s6_603, out s7_104, out s9_175, out s10_604, out s11_605, out mstatus)
l23088FD2:
	word32 s0_606
	word32 a5_609
	word32 a2_607
	word32 a4_608
	word32 a7_610
	word32 s4_612
	word32 s3_611
	ra_118 = mbedtls_rsa_public(ra, a7, a3, a4, a7, a2, mstatus, dwLoc045C, dwLoc041C, dwLoc03E8, dwLoc03D8, dwLoc03A8, dwLoc0398, dwLoc0378, dwLoc0368, dwLoc0358, dwLoc0338, out s0_606, out s1_120, out a0_132, out a2_607, out a4_608, out a5_609, out a7_610, out s2_121, out s3_611, out s4_612)
l23088FDC:
	branch a0_132 != 0<32> l23088F52
l23088FE0:
	word32 a3_141
	word32 a4_142
	word32 a5_143
	word32 a0_155
	word32 a2_157
	word32 a4_159
	word32 a5_160
	word32 mstatus_162
	word32 s1_164
	word32 s8_168
	word32 s2_614
	word32 a3_613
	word32 s3_615
	word32 s4_616
	word32 ra_163 = mbedtls_md_setup(mbedtls_md_init(ra_118, fp + -1132<i32>, out a3_141, out a4_142, out a5_143), a0_132, s1_120, fp + -1132<i32>, s7_104, 0<32>, a3_141, a4_142, a5_143, s2_121, mstatus, dwLoc0470, dwLoc046C, dwLoc0448, dwLoc0378, dwLoc0338, out s1_164, out a0_155, out a2_157, out a3_613, out a4_159, out a5_160, out s2_614, out s3_615, out s4_616, out s8_168, out mstatus_162)
	branch a0_155 == 0<32> l2308900C
l2308900C:
	word32 s6_209
	word32 a2_221
	word32 a4_223
	word32 a5_224
	word32 s1_228
	word32 s3_230
	word32 s4_231
	word32 s5_232
	word32 a5_633
	word32 s6_632
	word32 a1_617
	word32 a5_618
	word32 a4_623
	word32 s1_620
	word32 s0_619
	word32 a2_621
	word32 s2_625
	word32 a3_622
	word32 a5_624
	word32 s3_626
	word32 s4_627
	word32 s5_628
	word32 s0_629
	word32 a3_630
	word32 s2_631
	mbedtls_md_free(mgf_mask(mgf_mask(mbedtls_md(ra_163, s7_104, s8_168, s9_175, fp + -1120<i32>, out a1_617, out a5_618), fp + -1087<i32>, s5_188, out s0_619, out s1_620, out a2_621, out a3_622, out a4_623, out a5_624, out s2_625, out s3_626, out s4_627, out s5_628, out s6_209), s6_209, s1_164 + -1<i32> - s5_188, out s0_629, out s1_228, out a2_221, out a3_630, out a4_223, out a5_224, out s2_631, out s3_230, out s4_231, out s5_232, out s6_632), fp + -1132<i32>, a2_221, a4_223, a5_224, mstatus_162, out a5_633)
	word32 a5_242 = CONVERT(bLoc0440, byte, word32)
	word32 a0_244 = fp + -1087<i32> + s5_232
	word32 a3_245 = 0<32>
l23089056:
	word32 a4_247 = a5_242 << 0x18<u32>
	branch a3_245 <u s5_232 l230890A6
l230890A6:
	a3_245 = a3_245 + 1<32>
	a5_242 = (CONVERT(Mem55[fp + -1120<i32> + a3_245:byte], byte, word32) ^ CONVERT(Mem55[a0_244 + a3_245:byte], byte, word32) | a4_247 >> 24<i32>) & 255<i32>
l23089060:
	word32 a0_263 = a0_244 + s5_232
	word32 s4_266 = s1_228 - s4_231
	word32 a1_267 = 0<32>
	word32 a3_268 = 0<32>
	word32 a2_269 = 0<32>
l2308906C:
	branch s4_266 != a2_269 l230890C2
l230890C2:
	a1_267 = a1_267 | CONVERT(Mem55[a0_263 + a2_269:byte], byte, word32)
	a2_269 = a2_269 + 1<32>
	a3_268 = a3_268 + (((0<32> - a1_267 | a1_267) & 255<i32>) >>u 7<i32> ^ 1<i32>)
l23089070:
	word32 a1_287 = a3_268 + 1<i32> + a0_263
	branch CONVERT(SLICE(CONVERT(Mem55[a0_263 + a3_268:byte], byte, word32) ^ 1<i32> | a4_247 >> 24<i32>, byte, 0), byte, int32) != 0<32> l230890E2
l230890E2:
l23089088:
	branch dwArg04 <u s1_228 - (a1_287 - s3_230) l230890EA
l230890EA:
l23089098:
	Mem308[dwLoc039C:word32] = dwArg04
	word32 a5_639
	word32 a6_640
	word32 a7_641
	word32 a1_635
	word32 a2_636
	word32 a3_637
	word32 a4_638
	memcpy(dwArg00, a1_287, dwLoc039C, out a1_635, out a2_636, out a3_637, out a4_638, out a5_639, out a6_640, out a7_641)
l23088FF4:
	word32 a5_634
	mbedtls_md_free(ra_163, fp + -1132<i32>, a2_157, a4_159, a5_160, mstatus_162, out a5_634)
l23088F4C:
l23088F52:
	return
mbedtls_rsa_rsaes_oaep_decrypt_exit:


void mbedtls_rsa_rsaes_pkcs1_v15_decrypt(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s7, word32 s10, word32 s11, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_decrypt
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s7:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
mbedtls_rsa_rsaes_pkcs1_v15_decrypt_entry:
l230890F2:
	branch a3 != 1<32> l23089124
l2308911C:
	branch Mem19[a0 + 164<i32>:int32] != 0<32> l2308923C
l23089124:
	branch Mem19[a0 + 4<i32>:int32] >u -1024<i32> l2308923C
l2308923C:
l23089134:
	word32 s1_212
	word32 s2_100
	word32 s3_101
	word32 s4_102
	word32 a0_111
	word32 s6_121 = a3
	word32 s5_125 = fp + -1056<i32>
	branch a3 != 0<32> l230891FC
l230891FC:
	word32 s10_506
	word32 mstatus_508
	word32 s11_507
	word32 s7_504
	word32 s9_505
	word32 a4_501
	word32 a7_503
	word32 a5_502
	word32 a2_499
	word32 a3_500
	word32 s0_498
	mbedtls_rsa_private(ra, a6, a2, a5, fp + -1056<i32>, a5, a4, a7, a3, s7, s10, s11, mstatus, dwLoc0418, dwLoc0408, dwLoc03FC, dwLoc03F8, dwLoc03E8, dwLoc03C8, dwLoc03B8, dwLoc03A8, dwLoc0398, dwLoc0388, dwLoc0378, dwLoc036C, dwLoc0368, dwLoc0358, dwLoc034C, dwLoc0348, dwLoc0338, dwLoc0328, dwLoc031C, dwLoc0318, dwLoc02F8, dwLoc02E8, out s0_498, out s1_212, out a0_111, out a2_499, out a3_500, out a4_501, out a5_502, out a7_503, out s2_100, out s3_101, out s4_102, out s5_125, out s6_121, out s7_504, out s9_505, out s10_506, out s11_507, out mstatus_508)
l23089140:
	word32 a4_488
	word32 a7_490
	word32 a5_489
	word32 s0_486
	word32 a2_487
	mbedtls_rsa_public(ra, a5, a3, a4, a4, s11, mstatus, dwLoc03FC, dwLoc03BC, dwLoc0388, dwLoc0378, dwLoc0348, dwLoc0338, dwLoc0318, dwLoc0308, dwLoc02F8, dwLoc02D8, out s0_486, out s1_212, out a0_111, out a2_487, out a4_488, out a5_489, out a7_490, out s2_100, out s3_101, out s4_102)
l23089148:
	branch a0_111 != 0<32> l230891D4
l2308914C:
	word32 a3_124
	word32 a5_129
	word32 a4_117 = CONVERT(bLoc041F, byte, word32)
	word32 a5_118 = CONVERT(bLoc0420, int8, int32)
	word32 a2_120 = s4_102 + -3<i32>
	branch s6_121 != 1<32> l23089206
l23089206:
	a3_124 = (a4_117 ^ 1<i32> | a5_118) & 255<i32>
	word32 a0_126 = s5_125 + 2<i32>
	word32 a6_127 = 0<32>
	word32 a1_128 = 0<32>
	a5_129 = 0<32>
l23089218:
	a6_127 = CONVERT(CONVERT(Mem19[a0_126 + 0<i32>:byte], byte, word32) != 0xFFFFFF01<32>, bool, word32) | a6_127
	a1_128 = a1_128 + 1<32>
	a0_126 = a0_126 + 1<32>
	a5_129 = a5_129 + ((a6_127 ^ 1<i32>) & 255<i32>)
	branch a1_128 <u a2_120 l23089218
l2308923A:
l2308915E:
	a3_124 = (a4_117 ^ 2<i32> | a5_118) & 255<i32>
	word32 a6_148 = s5_125 + 2<i32>
	word32 a1_149 = 0<32>
	word32 a0_150 = 0<32>
	a5_129 = 0<32>
l23089170:
	word32 a4_154 = CONVERT(Mem19[a6_148 + 0<i32>:byte], byte, word32)
	a1_149 = a1_149 | ((a4_154 | 0<32> - a4_154) & 255<i32>) >>u 7<i32> ^ 1<i32>
	a0_150 = a0_150 + 1<32>
	a6_148 = a6_148 + 1<32>
	a5_129 = a5_129 + (((0<32> - a1_149 | a1_149) & 255<i32>) >>u 7<i32> ^ 1<i32>)
	branch a0_150 <u a2_120 l23089170
l230891A2:
	word32 a1_178 = fp + -32<i32> + a5_129
	branch (CONVERT(a5_129 <u 8<i32>, bool, word32) | (a3_124 | CONVERT(Mem19[((fp + -32<i32>) + a5_129) + -1022<i32>:byte], byte, word32))) != 0<32> l23089244
l23089244:
l230891BE:
	word32 a2_198 = s4_102 - ((a1_178 + -1021<i32>) - s5_125)
	branch s3_101 <u a2_198 l2308924C
l2308924C:
l230891CA:
	Mem209[s2_100:word32] = a2_198
	word32 a6_496
	word32 a7_497
	word32 a4_494
	word32 a5_495
	word32 a1_491
	word32 a3_493
	word32 a2_492
	memcpy(s1_212, a1_178 + -1021<i32>, a2_198, out a1_491, out a2_492, out a3_493, out a4_494, out a5_495, out a6_496, out a7_497)
l230891D4:
	return
mbedtls_rsa_rsaes_pkcs1_v15_decrypt_exit:


void mbedtls_rsa_pkcs1_decrypt(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s7, word32 s10, word32 s11, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_decrypt_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s7:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_pkcs1_decrypt_entry:
l23089254:
	word32 t6_5 = Mem0[a0 + 164<i32>:int32]
	branch t6_5 == 0<32> l2308926C
l2308926C:
l2308926C_thunk_mbedtls_rsa_rsaes_pkcs1_v15_decrypt:
	mbedtls_rsa_rsaes_pkcs1_v15_decrypt(ra, a0, a2, a3, a4, a5, a6, a7, s7, s10, s11, mstatus)
	return
l2308925C:
	branch t6_5 == 1<32> l23089270
l23089270:
	mbedtls_rsa_rsaes_oaep_decrypt(ra, s1, a0, a1, a2, a3, 0<32>, 0<32>, a5, mstatus, a6, dwLoc1C)
	return
l23089264:
	return
mbedtls_rsa_pkcs1_decrypt_exit:


void mbedtls_rsa_rsassa_pss_sign(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s8, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_sign
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_rsassa_pss_sign_entry:
l2308928E:
	word32 s9_19 = a5
	branch a3 != 1<32> l230892EC
l230892BE:
	branch Mem31[a0 + 164<i32>:int32] == a3 l230892EC
l230892EC:
	branch a1 == 0<32> l230892C6
l230892F0:
	word32 s0_49 = Mem31[a0 + 4<i32>:int32]
	branch a4 == 0<32> l23089304
l230892F6:
	word32 a5_553
	word32 a0_53 = mbedtls_md_info_from_type(a4, out a5_553)
	branch a0_53 == 0<32> l230892C6
l230892FE:
	s9_19 = mbedtls_md_get_size(a0_53)
l23089304:
	word32 a5_554
	word32 a0_60 = mbedtls_md_info_from_type(CONVERT(Mem31[a0 + 168<i32>:byte], byte, word32), out a5_554)
	branch a0_60 == 0<32> l230892C6
l23089310:
	word32 a0_63 = mbedtls_md_get_size(a0_60)
	word32 s1_65 = a0_63 + 1<i32> << 1<i32>
	branch s0_49 <u s1_65 l230892C6
l23089320:
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 tp_390
	word32 t6_388
	word32 t5_387
	word32 t3_386
	word32 sp_104
	word32 s3_105
	word32 s7_109
	word32 s11_111
	word32 a5_112
	word32 ra_113
	word32 s0_114
	word32 s1_115
	word32 s2_116
	word32 s10_118
	word32 a0_119
	word32 a2_121
	word32 a4_127
	word32 t1_128
	call a1 (retsize: 0;)
		uses: a0:a2,a1:fp + -96<i32>,a2:a0_63,a3:a3_78,a4:a4_79,a5:a5_80,a6:a6,a7:a7,mstatus:mstatus,ra:memset(ra, a7, 0<32>, s0_49, out t1_555, out a0_556, out a1_557, out a2_558, out a3_78, out a4_79, out a5_80),s0:s0_49,s1:s1_65,s10:a0_60,s11:a6,s2:a0_63,s3:a7,s4:a0,s5:a1,s6:a3,s7:a2,s8:s8,s9:s9_94,t1:t1_128,t3:t3_386,t5:t5_387,t6:t6_388,tp:tp_390
		defs: a0:a0_119,a2:a2_121,a4:a4_127,a5:a5_112,ra:ra_113,s0:s0_114,s1:s1_115,s10:s10_118,s11:s11_111,s2:s2_116,s3:s3_105,s7:s7_109,sp:sp_104,t1:t1_128,t3:t3_386,t5:t5_387,t6:t6_388,tp:tp_390
	branch a0_119 == 0<32> l2308933E
l2308933E:
	word32 s1_137 = s0_114 - s1_115
	word32 a5_563
	word32 a2_560
	word32 a4_562
	word32 a3_561
	word32 a1_559
	word32 a0_131 = mbedtls_mpi_bitlen(a2_121, a4_127, a5_112, out a1_559, out a2_560, out a3_561, out a4_562, out a5_563)
	word32 a5_138 = s3_105 + s1_137
	Mem141[a5_138:byte] = 1<8>
	Mem144[sp_104 + 4<i32>:word32] = a0_131
	Mem146[sp_104 + 132<i32>:word32] = a5_138 + 1<i32>
	word32 a5_568
	word32 a7_570
	word32 a6_569
	word32 a2_565
	word32 a4_567
	word32 a3_566
	word32 a1_564
	memcpy(a5_138 + 1<i32>, sp_104 + 32<i32>, s2_116, out a1_564, out a2_565, out a3_566, out a4_567, out a5_568, out a6_569, out a7_570)
	word32 a3_164
	word32 a4_165
	word32 a5_166
	word32 a0_176
	word32 a4_180
	word32 a5_181
	word32 mstatus_183
	word32 s2_186
	word32 s3_187
	word32 a3_573
	word32 s8_575
	word32 s4_574
	word32 a2_572
	word32 s1_571
	word32 ra_184 = mbedtls_md_setup(mbedtls_md_init(ra_113, sp_104 + 20<i32>, out a3_164, out a4_165, out a5_166), s0_114, s1_137, sp_104 + 20<i32>, s10_118, 0<32>, a3_164, a4_165, a5_166, s2_116, mstatus, Mem146[sp_104 + 16<i32>:word32], Mem146[sp_104 + 20<i32>:word32], Mem146[sp_104 + 56<i32>:word32], Mem146[sp_104 + 264<i32>:word32], Mem146[sp_104 + 328<i32>:word32], out s1_571, out a0_176, out a2_572, out a3_573, out a4_180, out a5_181, out s2_186, out s3_187, out s4_574, out s8_575, out mstatus_183)
	word32 a2_195 = Mem146[sp_104 + 196<i32>:word32]
	branch a0_176 == 0<32> l23089386
l23089386:
	word32 a0_234 = CONVERT((a5_227 + -1<i32> & 7<32>) <u 1<i32>, bool, word32)
	word32 a5_200
	word32 a5_207
	word32 a5_214
	word32 a5_221
	word32 a5_227
	word32 a2_242
	word32 a4_244
	word32 a5_245
	word32 s0_248
	word32 s1_249
	word32 s2_250
	word32 s3_251
	word32 s6_254
	word32 a3_578
	word32 s5_580
	word32 s4_579
	word32 a2_577
	word32 ra_247 = mgf_mask(mbedtls_md_finish(mbedtls_md_update(mbedtls_md_update(mbedtls_md_update(mbedtls_md_starts(ra_184, sp_104 + 20<i32>, a5_181, Mem146[sp_104 + 16<i32>:word32], out a5_200), sp_104 + 20<i32>, a5_200, Mem146[sp_104 + 16<i32>:word32], out a5_207), sp_104 + 20<i32>, a5_207, Mem146[sp_104 + 16<i32>:word32], out a5_214), sp_104 + 20<i32>, a5_214, Mem146[sp_104 + 16<i32>:word32], out a5_221), sp_104 + 20<i32>, a5_221, Mem146[sp_104 + 16<i32>:word32], out a2_577, out a5_227), a0_234 + s3_187, Mem146[sp_104 + 228<i32>:word32] + -1<i32> - s2_186 - a0_234, out s0_248, out s1_249, out a2_242, out a3_578, out a4_244, out a5_245, out s2_250, out s3_251, out s4_579, out s5_580, out s6_254)
	word32 a5_262
	word32 a3_268
	word32 a4_269
	word32 a5_583
	word32 a2_582
	word32 a1_581
	Mem279[s3_251:byte] = SLICE(255<i32> >> ((s0_248 << 3<i32>) + 1<32>) - mbedtls_mpi_bitlen(mbedtls_md_free(ra_247, sp_104 + 20<i32>, a2_242, a4_244, a5_245, mstatus_183, out a5_262), a4_244, a5_262, out a1_581, out a2_582, out a3_268, out a4_269, out a5_583) & CONVERT(Mem146[s3_251:byte], byte, word32), byte, 0)
	word32 s2_276 = s2_250 + s1_249
	Mem280[s2_276:byte] = 0xBC<8>
	branch s6_254 != 0<32> l2308941A
l2308941A:
	word32 a0_596
	word32 a2_597
	word32 s0_594
	word32 s1_595
	word32 a4_599
	word32 a7_601
	word32 s2_602
	word32 a5_600
	word32 a3_598
	word32 s4_604
	word32 s6_606
	word32 s7_607
	word32 s3_603
	word32 s5_605
	word32 s10_609
	word32 mstatus_611
	word32 s9_608
	word32 s11_610
	mbedtls_rsa_private(ra_247, s1_249, s7_109, s3_251, s3_251, -68<i32>, s2_276, s3_251, s6_254, s7_109, s10_118, s11_111, mstatus_183, Mem280[sp_104 + 8<i32>:word32], Mem280[sp_104 + 24<i32>:word32], Mem280[sp_104 + 36<i32>:word32], Mem280[sp_104 + 40<i32>:word32], Mem280[sp_104 + 56<i32>:word32], Mem280[sp_104 + 88<i32>:word32], Mem280[sp_104 + 104<i32>:word32], Mem280[sp_104 + 120<i32>:word32], Mem280[sp_104 + 136<i32>:word32], Mem280[sp_104 + 152<i32>:word32], Mem280[sp_104 + 168<i32>:word32], Mem280[sp_104 + 180<i32>:word32], Mem280[sp_104 + 184<i32>:word32], Mem280[sp_104 + 200<i32>:word32], Mem280[sp_104 + 212<i32>:word32], Mem280[sp_104 + 216<i32>:word32], Mem280[sp_104 + 232<i32>:word32], Mem280[sp_104 + 248<i32>:word32], Mem280[sp_104 + 260<i32>:word32], Mem280[sp_104 + 264<i32>:word32], Mem280[sp_104 + 296<i32>:word32], Mem280[sp_104 + 312<i32>:word32], out s0_594, out s1_595, out a0_596, out a2_597, out a3_598, out a4_599, out a5_600, out a7_601, out s2_602, out s3_603, out s4_604, out s5_605, out s6_606, out s7_607, out s9_608, out s10_609, out s11_610, out mstatus_611)
l2308940C:
	word32 a4_588
	word32 a7_590
	word32 s2_591
	word32 s3_592
	word32 s4_593
	word32 a5_589
	word32 s1_585
	word32 a2_587
	word32 a0_586
	word32 s0_584
	mbedtls_rsa_public(ra_247, s3_251, a3_268, a4_269, s2_276, s11_111, mstatus_183, Mem280[sp_104 + 36<i32>:word32], Mem280[sp_104 + 100<i32>:word32], Mem280[sp_104 + 152<i32>:word32], Mem280[sp_104 + 168<i32>:word32], Mem280[sp_104 + 216<i32>:word32], Mem280[sp_104 + 232<i32>:word32], Mem280[sp_104 + 264<i32>:word32], Mem280[sp_104 + 280<i32>:word32], Mem280[sp_104 + 296<i32>:word32], Mem280[sp_104 + 328<i32>:word32], out s0_584, out s1_585, out a0_586, out a2_587, out a4_588, out a5_589, out a7_590, out s2_591, out s3_592, out s4_593)
l23089416:
l2308937E:
	word32 a5_576
	mbedtls_md_free(ra_184, sp_104 + 20<i32>, a2_195, a4_180, a5_181, mstatus_183, out a5_576)
l23089334:
l230892C6:
l230892CC:
	return
mbedtls_rsa_rsassa_pss_sign_exit:


void mbedtls_rsa_rsassa_pkcs1_v15_sign(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s2, word32 s9, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_sign
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
mbedtls_rsa_rsassa_pkcs1_v15_sign_entry:
l2308942A:
	word32 s9_23 = a5
	branch a3 != 1<32> l23089484
l2308945C:
	branch Mem29[a0 + 164<i32>:int32] == 0<32> l23089484
l23089484:
	word32 s0_48 = Mem29[a0 + 4<i32>:int32]
	word32 s1_49 = s0_48 + -3<i32>
	branch a4 == 0<32> l230894B4
l23089490:
	word32 a5_738
	word32 a0_52 = mbedtls_md_info_from_type(a4, out a5_738)
	branch a0_52 == 0<32> l23089462
l2308949A:
	word32 a0_60 = mbedtls_oid_get_oid_by_md(a4, fp + -52<i32>, fp + -56<i32>, a4)
	branch a0_60 != 0<32> l23089462
l230894A6:
	s0_48 = dwArg04
	s1_49 = s0_48 + -3<i32> - a0_60 + 0xFFFFFFF6<32>
	s9_23 = mbedtls_md_get_size(a0_52)
l230894B4:
	word32 s1_100 = s1_49 - s9_23
	branch s1_100 <=u 7<32> l23089462
l230894BE:
	branch s0_48 <u s1_100 l23089462
l230894C2:
	word32 a0_141
	Mem79[a7:byte] = 0<8>
	Mem80[a7 + 1<i32>:byte] = 1<8>
	word32 a1_87
	word32 a2_741
	word32 a0_740
	word32 t1_739
	word32 a3_742
	word32 a5_744
	word32 a4_743
	word32 ra_92 = memset(ra, a7 + 2<i32>, 255<i32>, s1_100, out t1_739, out a0_740, out a1_87, out a2_741, out a3_742, out a4_743, out a5_744)
	word32 a0_95 = a7 + 2<i32> + s1_100
	Mem96[a0_95:byte] = 0<8>
	branch a4 != 0<32> l23089504
l23089504:
	s1_100 = s9_23 & 255<i32>
	Mem105[a0_95 + 2<i32>:byte] = SLICE((dwArg24 & 255<i32>) + 8<i32> + s1_100, byte, 0)
	Mem108[a0_95 + 4<i32>:byte] = SLICE((dwArg24 & 255<i32>) + 4<i32>, byte, 0)
	Mem111[a0_95 + 6<i32>:byte] = SLICE(dwArg24 & 255<i32>, byte, 0)
	Mem112[a0_95 + 1<i32>:byte] = 0x30<8>
	Mem113[a0_95 + 3<i32>:byte] = 0x30<8>
	Mem114[a0_95 + 5<i32>:byte] = 6<8>
	word32 a5_812
	word32 a6_813
	word32 a7_814
	word32 a2_809
	word32 a3_810
	word32 a4_811
	word32 a1_808
	memcpy(a0_95 + 7<i32>, a1_87, dwArg24, out a1_808, out a2_809, out a3_810, out a4_811, out a5_812, out a6_813, out a7_814)
	word32 a0_132 = a0_95 + 7<i32> + dwArg04
	Mem133[a0_132:byte] = 5<8>
	Mem135[a0_132 + 1<i32>:byte] = 0<8>
	Mem136[a0_132 + 2<i32>:byte] = 4<8>
	Mem137[a0_132 + 3<i32>:byte] = SLICE(s1_100, byte, 0)
	a0_141 = a0_132 + 4<32>
l230894E8:
	a0_141 = a0_95 + 1<32>
l230894EE:
	word32 a4_148
	word32 a5_149
	word32 a3_153
	word32 a1_745
	word32 a2_746
	word32 a7_748
	word32 a6_747
	memcpy(a0_141, a6, s9_23, out a1_745, out a2_746, out a3_153, out a4_148, out a5_149, out a6_747, out a7_748)
	branch a3 != 0<32> l23089562
l23089562:
	word32 a3_179
	word32 a4_180
	word32 a5_181
	word32 s2_186
	word32 s1_760
	word32 s0_759
	word32 s8_765
	word32 a2_762
	word32 a1_761
	word32 s3_763
	word32 s4_764
	word32 ra_183 = mycalloc(ra_92, s1_100, 1<32>, Mem166[a0 + 4<i32>:int32], a3_153, a4_148, a5_149, mstatus, dwLoc20, dwLoc1C, dwArgD8, dwArg0118, out s0_759, out s1_760, out a1_761, out a2_762, out a3_179, out a4_180, out a5_181, out s2_186, out s3_763, out s4_764, out s8_765)
	branch false l23089468
l23089574:
	word32 s1_205
	word32 s2_206
	word32 s3_207
	word32 a4_769
	word32 s0_766
	word32 a1_767
	word32 a3_768
	word32 s4_770
	word32 s8_771
	word32 a5_201
	word32 a2_198
	word32 ra_203 = mycalloc(ra_183, 1<32>, 1<32>, Mem166[s2_186 + 4<i32>:int32], a3_179, a4_180, a5_181, mstatus, dwLoc20, dwLoc1C, dwArgD8, dwArg0118, out s0_766, out s1_205, out a1_767, out a2_198, out a3_768, out a4_769, out a5_201, out s2_206, out s3_207, out s4_770, out s8_771)
	word32 a0_215 = s1_205
	branch false l230895D0
l23089586:
	word32 a0_235
	word32 a3_236
	word32 a4_249
	word32 s2_252
	word32 s11_263
	word32 s0_772
	word32 a7_773
	word32 s3_774
	word32 s4_775
	word32 s6_777
	word32 s7_778
	word32 s5_776
	word32 s9_779
	word32 s10_780
	word32 s1_240
	word32 a5_250
	word32 a2_248
	word32 ra_238 = mbedtls_rsa_private(ra_203, s1_205, a2, s3_207, s1_205, a5_201, s2_206, s3_207, a1, a2, s10, s11, mstatus, dwLoc38, s2, dwLoc1C, dwLoc18, dwLoc08, dwArg18, dwArg28, dwArg38, s9, s1, dwArg68, dwArg74, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgE8, dwArgF8, out s0_772, out s1_240, out a0_235, out a2_248, out a3_236, out a4_249, out a5_250, out a7_773, out s2_252, out s3_774, out s4_775, out s5_776, out s6_777, out s7_778, out s9_779, out s10_780, out s11_263, out mstatus)
	branch a0_235 != 0<32> l230895C8
l23089598:
	word32 s2_278
	word32 s3_279
	word32 s4_280
	word32 a0_289
	word32 s0_781
	word32 a4_782
	word32 a7_783
	mbedtls_rsa_public(ra_238, s1_240, a3_236, a4_249, s2_252, s11_263, mstatus, dwLoc1C, dwArg24, s1, dwArg68, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_781, out s1_240, out a0_289, out a2_248, out a4_782, out a5_250, out a7_783, out s2_278, out s3_279, out s4_280)
	branch a0_289 != 0<32> l230895C8
l230895A6:
	a2_248 = Mem166[s2_278 + 4<i32>:int32]
	word32 a4_292 = 0<32>
	word32 a5_293 = 0<32>
l230895AE:
	branch a2_248 != a5_293 l230895D6
l230895D6:
	a5_293 = a5_293 + 1<32>
	a4_292 = a4_292 | CONVERT(Mem166[s4_280 + a5_293:byte], byte, word32) ^ CONVERT(Mem166[s3_279 + a5_293:byte], byte, word32)
l230895B2:
	word32 a5_309 = CONVERT(SLICE(a4_292, byte, 0), byte, word32)
	a5_250 = a5_309 & 255<i32>
	branch (a5_309 & 255<i32>) != 0<32> l230895EE
l230895EE:
l230895C0:
	word32 a1_784
	word32 a3_785
	word32 a4_786
	word32 a6_787
	word32 a7_788
	memcpy(s3_279, s1_240, a2_248, out a1_784, out a2_248, out a3_785, out a4_786, out a5_250, out a6_787, out a7_788)
l230895C8:
	word32 s4_347
	word32 a4_794
	word32 a6_795
	word32 t3_796
	word32 a0_791
	word32 a1_792
	word32 a3_793
	word32 s1_790
	word32 s0_789
	vPortFree(s1_240, a2_248, a5_250, mstatus, dwArg0118, dwArg0158, out s0_789, out s1_790, out a0_791, out a1_792, out a2_198, out a3_793, out a4_794, out a5_201, out a6_795, out s4_347, out t3_796)
	a0_215 = s4_347
l230895D0:
	word32 s4_806
	word32 t3_807
	word32 a4_803
	word32 a5_804
	word32 a6_805
	word32 a1_800
	word32 a2_801
	word32 a3_802
	word32 s0_797
	word32 s1_798
	word32 a0_799
	vPortFree(a0_215, a2_198, a5_201, mstatus, dwArg0118, dwArg0158, out s0_797, out s1_798, out a0_799, out a1_800, out a2_801, out a3_802, out a4_803, out a5_804, out a6_805, out s4_806, out t3_807)
l230894F6:
	word32 s0_749
	word32 s1_750
	word32 a4_753
	word32 a2_752
	word32 a0_751
	word32 a5_754
	word32 s2_756
	word32 a7_755
	word32 s3_757
	word32 s4_758
	mbedtls_rsa_public(ra_92, a7, a3_153, a4_148, a0, s11, mstatus, dwLoc1C, dwArg24, s1, dwArg68, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, out s0_749, out s1_750, out a0_751, out a2_752, out a4_753, out a5_754, out a7_755, out s2_756, out s3_757, out s4_758)
l23089462:
l23089468:
	0<32> = dwArg0198
	return
mbedtls_rsa_rsassa_pkcs1_v15_sign_exit:


void mbedtls_rsa_pkcs1_sign(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s2, word32 s8, word32 s9, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_sign_wrap
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s2:[0..31] s8:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_pkcs1_sign_entry:
l230895F6:
	word32 t1_5 = Mem0[a0 + 164<i32>:int32]
	branch t1_5 == 0<32> l2308960C
l2308960C:
l2308960C_thunk_mbedtls_rsa_rsassa_pkcs1_v15_sign:
	mbedtls_rsa_rsassa_pkcs1_v15_sign(ra, s1, a0, a1, a2, a3, a4, a5, a6, a7, s2, s9, s10, s11, mstatus, dwArg04, dwArg18, dwArg24, dwArg28, dwArg38, dwArg68, dwArg74, dwArg78, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0118, dwArg0158, dwArg0198)
	return
l230895FE:
	branch t1_5 == 1<32> l23089610
l23089610:
l23089610_thunk_mbedtls_rsa_rsassa_pss_sign:
	mbedtls_rsa_rsassa_pss_sign(ra, a0, a1, a2, a3, a4, a5, a6, a7, s8, mstatus)
	return
l23089604:
	return
mbedtls_rsa_pkcs1_sign_exit:


word32 mbedtls_rsa_rsassa_pss_verify_ext(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a7, word32 s3, word32 s10, word32 s11, word32 mstatus, int32 dwArg00, int32 dwArg04, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_pk_verify_ext
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: a0 a4 a5 a7 mstatus s10 s11
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_rsa_rsassa_pss_verify_ext_entry:
l23089614:
	word32 a4_100
	word32 s0_120
	word32 s5_129 = a4
	word32 s9_137 = a7
	word32 s7_287 = dwArg00
	word32 a5_101 = dwArg04
	branch a3 != 1<32> l2308969E
l2308965C:
	a4_100 = Mem27[a0 + 164<i32>:int32]
	branch a4_100 == a3 l2308969E
l2308969E:
	word32 s2_43 = Mem27[a0 + 4<i32>:int32]
	a4_100 = 1008<i32>
	branch s2_43 >u -1024<i32> l23089664
l230896AE:
	word32 s2_107
	word32 s4_109
	word32 ra_104
	word32 a0_118
	branch a3 != 0<32> l2308974E
l2308974E:
	word32 a2_784
	word32 a3_785
	word32 s3_786
	word32 s6_787
	word32 s1_783
	word32 s0_782
	ra_104 = mbedtls_rsa_private(ra, a0, a2, dwArg04, fp + -1072<i32>, dwArg04, s2_43, s3, a5, dwArg00, s10, s11, mstatus, dwLoc0468, dwLoc0458, dwLoc044C, dwLoc0448, dwLoc0438, dwLoc0418, dwLoc0408, dwLoc03F8, dwLoc03E8, dwLoc03D8, dwLoc03C8, dwLoc03BC, dwLoc03B8, dwLoc03A8, dwLoc039C, dwLoc0398, dwLoc0388, dwLoc0378, dwLoc036C, dwLoc0368, dwLoc0348, dwLoc0338, out s0_782, out s1_783, out a0_118, out a2_784, out a3_785, out a4_100, out a5_101, out a7, out s2_107, out s3_786, out s4_109, out s5_129, out s6_787, out s7_287, out s9_137, out s10, out s11, out mstatus)
l230896B4:
	word32 s3_791
	word32 a2_790
	word32 s1_789
	word32 s0_788
	ra_104 = mbedtls_rsa_public(ra, dwArg04, a3, 1008<i32>, s2_43, s11, mstatus, dwLoc044C, dwLoc040C, dwLoc03D8, dwLoc03C8, dwLoc0398, dwLoc0388, dwLoc0368, dwLoc0358, dwLoc0348, dwLoc0328, out s0_788, out s1_789, out a0_118, out a2_790, out a4_100, out a5_101, out a7, out s2_107, out s3_791, out s4_109)
l230896BE:
	s0_120 = a0_118
	branch a0_118 != 0<32> l2308966A
l230896C2:
	word32 s3_122 = s2_107 + -1<i32>
	a4_100 = CONVERT(Mem27[fp + -48<i32> + s3_122 + -1024<i32>:byte], byte, word32)
	a5_101 = 188<i32>
	branch a4_100 != 188<i32> l23089816
l230896D8:
	branch s5_129 == 0<32> l230896EA
l230896DC:
	word32 a0_132 = mbedtls_md_info_from_type(s5_129, out a5_101)
	branch a0_132 == 0<32> l23089664
l230896E4:
	mbedtls_md_get_size(a0_132)
l230896EA:
	word32 a0_140 = mbedtls_md_info_from_type(s9_137, out a5_101)
	branch a0_140 == 0<32> l23089664
l230896F4:
	word32 a0_143 = mbedtls_md_get_size(a0_140)
	word32 a1_794
	word32 a0_793
	word32 t1_792
	word32 a3_795
	word32 a2_153
	word32 a4_155
	word32 a5_156
	word32 ra_157 = memset(ra_104, fp + -1124<i32>, 0<32>, 8<32>, out t1_792, out a0_793, out a1_794, out a2_153, out a3_795, out a4_155, out a5_156)
	word32 a4_799
	word32 a1_796
	word32 a2_797
	word32 a3_798
	word32 a5_800
	word32 a0_163 = mbedtls_mpi_bitlen(a2_153, a4_155, a5_156, out a1_796, out a2_797, out a3_798, out a4_799, out a5_800)
	word32 s1_173 = s4_109
	branch (a0_163 + -1<i32> & 7<i32>) != 0<32> l2308971E
l23089718:
	s2_107 = s3_122
	s1_173 = fp + -1071<i32>
l2308971E:
	a5_101 = CONVERT(bLoc0430, byte, word32)
	a4_100 = a5_101 >> (s2_107 + 0xFFFFFFF8<32>) + (a0_163 + 7<32>)
	branch a4_100 != 0<32> l23089664
l23089732:
	word32 a3_194
	word32 a4_195
	word32 a5_196
	word32 a0_208
	word32 a2_210
	word32 a5_213
	word32 s1_217
	word32 s2_218
	word32 a3_801
	word32 s3_802
	word32 s4_803
	word32 s8_804
	word32 ra_216 = mbedtls_md_setup(mbedtls_md_init(ra_157, fp + -1116<i32>, out a3_194, out a4_195, out a5_196), a0_140, s1_173, fp + -1116<i32>, a0_140, 0<32>, a3_194, a4_195, a5_196, s2_107, mstatus, dwLoc0460, dwLoc045C, dwLoc0438, dwLoc0368, dwLoc0328, out s1_217, out a0_208, out a2_210, out a3_801, out a4_100, out a5_213, out s2_218, out s3_802, out s4_803, out s8_804, out mstatus)
	s0_120 = a0_208
	branch a0_208 == 0<32> l2308975A
l2308975A:
	a4_100 = CONVERT(bLoc0430, byte, word32)
	word32 a2_236
	word32 s2_244
	word32 s3_245
	word32 s4_246
	word32 s5_247
	word32 s0_805
	word32 a3_806
	word32 a5_808
	word32 s6_809
	word32 a4_807
	word32 s1_243
	word32 ra_241 = mgf_mask(ra_216, s1_217, ~a0_143 + s2_218, out s0_805, out s1_243, out a2_236, out a3_806, out a4_807, out a5_808, out s2_244, out s3_245, out s4_246, out s5_247, out s6_809)
	word32 a5_259 = 255<i32> >> (s2_244 << 3<u32>) - (a0_163 + -1<i32>) & a4_100
	word32 s2_261 = s2_244 + s4_246
l2308978A:
	branch s1_243 >=u s2_261 l2308980C
l2308980C:
	branch s2_261 != s1_243 l23089798
l2308978E:
	a5_259 = CONVERT(Mem260[s1_243:byte], byte, word32)
	a4_100 = s1_243 + 1<i32>
	branch a5_259 == 0<32> l23089808
l23089808:
	s1_243 = a4_100
l23089798:
	a4_100 = CONVERT(Mem260[s1_243:byte], byte, word32)
	a5_259 = 1<32>
	word32 s0_272 = s1_243 + 1<i32>
	branch a4_100 != 1<32> l23089810
l230897A6:
	a5_259 = 0xFFFFFFFF<32>
	word32 s3_282 = s3_245 - s5_247 - (s0_272 - s4_246)
	branch s7_287 == 0xFFFFFFFF<32> l230897BC
l230897B8:
	branch s7_287 != s3_282 l23089810
l23089810:
	mbedtls_md_free(ra_241, fp + -1116<i32>, a2_236, a4_100, a5_259, mstatus, out a5_101)
l23089816:
	s0_120 = 0xFBFFFF00<32>
l230897BC:
	word32 a5_317
	word32 a5_324
	word32 a5_337
	word32 a5_346
	word32 a2_351
	word32 a5_352
	word32 a5_810
	mbedtls_md_free(mbedtls_md_finish(mbedtls_md_update(mbedtls_md_update(mbedtls_md_update(mbedtls_md_starts(ra_241, fp + -1116<i32>, 0xFFFFFFFF<32>, dwLoc0460, out a5_317), fp + -1116<i32>, a5_317, dwLoc0460, out a5_324), fp + -1116<i32>, a5_324, dwLoc0460, out a5_337), fp + -1116<i32>, a5_337, dwLoc0460, out a5_346), fp + -1116<i32>, a5_346, dwLoc0460, out a2_351, out a5_352), fp + -1116<i32>, a2_351, a4_100, a5_352, mstatus, out a5_810)
	word32 a1_811
	word32 a2_812
	word32 a3_813
	word32 a0_364 = memcmp(s0_272 + s3_282, fp + -1104<i32>, s5_247, out a1_811, out a2_812, out a3_813, out a4_100, out a5_101)
	s0_120 = a0_364
	branch a0_364 == 0<32> l2308966A
l23089800:
	s0_120 = 0xFBFFFC80<32>
l23089746:
	mbedtls_md_free(ra_216, fp + -1116<i32>, a2_210, a4_100, a5_213, mstatus, out a5_101)
l23089664:
	s0_120 = 0xFBFFFF80<32>
l2308966A:
	a4Out = a4_100
	a5Out = a5_101
	a7Out = a7
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return s0_120
mbedtls_rsa_rsassa_pss_verify_ext_exit:


word32 mbedtls_rsa_rsassa_pss_verify(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s10, word32 s11, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_rsassa_pss_verify_entry:
l2308981E:
	word32 t1_7 = Mem5[a0 + 168<i32>:int32]
	word32 a7_10 = t1_7 & 255<i32>
	branch t1_7 != 0<32> l23089832
l23089830:
	a7_10 = a4
l23089832:
	word32 mstatus_68
	word32 s11_67
	word32 s10_66
	word32 a7_65
	word32 a4_64
	word32 a5_38
	word32 a0_36 = mbedtls_rsa_rsassa_pss_verify_ext(ra, a0, a2, a3, a4, a5, a7_10, s3, s10, s11, mstatus, 0xFFFFFFFF<32>, dwLoc1C, out a4_64, out a5_38, out a7_65, out s10_66, out s11_67, out mstatus_68)
	a5Out = a5_38
	return a0_36
mbedtls_rsa_rsassa_pss_verify_exit:


word32 mbedtls_rsa_rsassa_pkcs1_v15_verify(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_rsa_pkcs1_verify
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s6:[0..31] s7:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s2 s3 s4 sp
mbedtls_rsa_rsassa_pkcs1_v15_verify_entry:
l23089842:
	branch a3 != 1<32> l2308987C
l23089848:
	branch Mem0[a0 + 164<i32>:int32] == 0<32> l2308987C
l2308987C:
	word32 a0_111
	branch Mem27[a0 + 4<i32>:int32] >u -1024<i32> l23089858
l230898A8:
	word32 s3_101
	word32 s2_100
	word32 s1_141
	word32 s0_122
	word32 s4_102
	branch a3 != 0<32> l230898CA
l230898CA:
	word32 s11_648
	word32 mstatus_649
	word32 s10_647
	word32 s9_646
	word32 s5_643
	word32 s7_645
	word32 s6_644
	word32 a7_642
	word32 a4_641
	word32 a2_639
	word32 a3_640
	mbedtls_rsa_private(ra, a5, a2, a7, fp + -1056<i32>, a5, a4, a6, s6, s7, s10, s11, mstatus, dwLoc0438, dwLoc0428, dwLoc041C, dwLoc0418, dwLoc0408, dwLoc03E8, dwLoc03D8, dwLoc03C8, dwLoc03B8, dwLoc03A8, dwLoc0398, dwLoc038C, dwLoc0388, dwLoc0378, dwLoc036C, dwLoc0368, dwLoc0358, dwLoc0348, dwLoc033C, dwLoc0338, dwLoc0318, dwLoc0308, out s0_122, out s1_141, out a0_111, out a2_639, out a3_640, out a4_641, out a5, out a7_642, out s2_100, out s3_101, out s4_102, out s5_643, out s6_644, out s7_645, out s9_646, out s10_647, out s11_648, out mstatus_649)
l230898B2:
	word32 a4_611
	word32 a7_612
	word32 a2_610
	mbedtls_rsa_public(ra, a7, a3, a4, a4, s11, mstatus, dwLoc041C, dwLoc03DC, dwLoc03A8, dwLoc0398, dwLoc0368, dwLoc0358, dwLoc0338, dwLoc0328, dwLoc0318, dwLoc02F8, out s0_122, out s1_141, out a0_111, out a2_610, out a4_611, out a5, out a7_612, out s2_100, out s3_101, out s4_102)
l230898BA:
	branch a0_111 != 0<32> l2308985E
l230898BC:
	a5 = CONVERT(bLoc0420, byte, word32)
	branch a5 == 0<32> l230898D4
l230898D4:
	a5 = 1<32>
	branch CONVERT(bLoc041F, byte, word32) != 1<32> l230898C2
l230898E4:
	a5 = s4_102 + -1<i32> + s0_122
l230898EE:
	word32 a4_129 = CONVERT(Mem126[a0_111:byte], byte, word32)
	branch a4_129 != 0<32> l2308991C
l2308991C:
	branch a0_111 >=u a5 l230898C2
l23089920:
	branch a4_129 != 255<i32> l230898C2
l23089924:
	a0_111 = a0_111 + 1<32>
l230898F6:
	word32 a0_134 = a0_111 + 1<32>
	word32 s0_139 = s4_102 - (a0_134 - s0_122)
	branch s0_139 != s1_141 l2308992A
l23089906:
	branch s2_100 != 0<32> l2308992A
l2308992A:
	word32 a0_146 = mbedtls_md_info_from_type(s2_100, out a5)
	branch a0_146 == 0<32> l23089858
l23089858:
	a0_111 = 0xFBFFFF80<32>
l23089932:
	word32 a0_150 = mbedtls_md_get_size(a0_146)
	word32 s1_158 = s1_141 + s0_139
	word32 a4_620
	word32 a3_619
	word32 a2_618
	word32 a1_617
	branch mbedtls_asn1_get_tag(s1_158, fp + -1076<i32>, 48<i32>, a5, out a1_617, out a2_618, out a3_619, out a4_620, out a5) != 0<32> l23089914
l2308994C:
	a5 = a5 + 2<32>
	branch a5 + 2<32> != s0_139 l23089914
l23089954:
	word32 a4_624
	word32 a3_623
	word32 a1_621
	word32 a2_622
	branch mbedtls_asn1_get_tag(s1_158, fp + -1076<i32>, 48<i32>, a5 + 2<32>, out a1_621, out a2_622, out a3_623, out a4_624, out a5) != 0<32> l23089914
l23089964:
	a5 = a5 + 6<32> + a0_150
	branch a5 != s0_139 l23089914
l2308996E:
	word32 a2_192
	word32 a4_194
	word32 a3_626
	word32 a1_625
	branch mbedtls_asn1_get_tag(s1_158, fp + -1064<i32>, 6<32>, a5, out a1_625, out a2_192, out a3_626, out a4_194, out a5) != 0<32> l23089914
l2308997C:
	word32 a5_201 = a5 + a4_194
	byte bLoc0435_363 = SLICE(a5_201, byte, 24)
	word32 a0_203
	word32 s2_210
	word32 s1_209 = mbedtls_oid_get_md_alg(fp + -1068<i32>, fp + -1077<i32>, a2_192, a5_201, dwLoc0408, out a0_203, out s2_210)
	branch a0_203 != 0<32> l23089914
l23089992:
	a5 = CONVERT(bLoc0435_363, byte, word32)
	branch a5 != s2_210 l23089914
l2308999A:
	word32 a4_630
	word32 a3_629
	word32 a2_628
	word32 a1_627
	branch mbedtls_asn1_get_tag(s1_209, fp + -1076<i32>, 5<32>, a5, out a1_627, out a2_628, out a3_629, out a4_630, out a5) != 0<32> l23089914
l230899A8:
	word32 a4_634
	word32 a3_633
	word32 a2_632
	word32 a1_631
	word32 a0_228 = mbedtls_asn1_get_tag(s1_209, fp + -1076<i32>, 4<32>, a5, out a1_631, out a2_632, out a3_633, out a4_634, out a5)
	branch a0_228 != 0<32> l23089914
l230899B6:
	branch a5 != a0_150 l23089914
l230899BC:
	word32 a4_638
	word32 a3_637
	word32 a2_636
	word32 a1_635
	a0_111 = memcmp(a0_228, s3_101, a0_150, out a1_635, out a2_636, out a3_637, out a4_638, out a5)
	branch a0_111 != 0<32> l23089914
l230899C8:
	branch s1_209 == a0_150 + a5 l2308985E
l230899D0:
l2308990A:
	word32 a4_616
	word32 a3_615
	word32 a2_614
	word32 a1_613
	a0_111 = memcmp(a0_134, s3_101, s1_141, out a1_613, out a2_614, out a3_615, out a4_616, out a5)
	branch a0_111 == 0<32> l2308985E
l23089914:
	a0_111 = 0xFBFFFC80<32>
l230898C2:
	a0_111 = 0xFBFFFF00<32>
l2308985E:
	a5Out = a5
	return a0_111
l23089850:
	a5Out = a5
	return 0xFBFFFF80<32>
mbedtls_rsa_rsassa_pkcs1_v15_verify_exit:


word32 mbedtls_rsa_pkcs1_verify(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rsa_verify_wrap
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s6:[0..31] s7:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus s10 s11 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_rsa_pkcs1_verify_entry:
l230899D2:
	word32 t1_5 = Mem0[a0 + 164<i32>:int32]
	branch t1_5 == 0<32> l230899E8
l230899E8:
l230899E8_thunk_mbedtls_rsa_rsassa_pkcs1_v15_verify:
	word32 a5_25
	word32 a0_18 = mbedtls_rsa_rsassa_pkcs1_v15_verify(ra, a0, a2, a3, a4, a5, a6, a7, s6, s7, s10, s11, mstatus, out a5_25)
	a5Out = a5_25
	return a0_18
l230899DA:
	branch t1_5 == 1<32> l230899EC
l230899EC:
l230899EC_thunk_mbedtls_rsa_rsassa_pss_verify:
	word32 a5_48
	word32 a0_43 = mbedtls_rsa_rsassa_pss_verify(ra, a0, a2, a3, a4, a5, s3, s10, s11, mstatus, out a5_48)
	a5Out = a5_48
	return a0_43
l230899E0:
	a5Out = a5
	return 0xFBFFFF00<32>
mbedtls_rsa_pkcs1_verify_exit:


word32 mbedtls_rsa_free(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pk_parse_key_pkcs1_der
//      rsa_free_wrap
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
mbedtls_rsa_free_entry:
l230899F0:
	word32 a2_16
	word32 a5_17
	word32 a4_20
	word32 a0_183
	word32 a1_184
	word32 a3_185
	word32 a6_186
	word32 s4_187
	mbedtls_mpi_free(a0 + 140<i32>, a2, a4, a5, mstatus, dwArg0138, dwArg0178, out a0_183, out a1_184, out a2_16, out a3_185, out a4_20, out a5_17, out a6_186, out s4_187)
	word32 a2_28
	word32 a5_29
	word32 a4_32
	word32 a0_188
	word32 a1_189
	word32 a3_190
	word32 a6_191
	word32 s4_192
	mbedtls_mpi_free(a0 + 152<i32>, a2_16, a4_20, a5_17, mstatus, dwArg0138, dwArg0178, out a0_188, out a1_189, out a2_28, out a3_190, out a4_32, out a5_29, out a6_191, out s4_192)
	word32 a2_40
	word32 a5_41
	word32 a4_44
	word32 a0_193
	word32 a1_194
	word32 a3_195
	word32 a6_196
	word32 s4_197
	mbedtls_mpi_free(a0 + 128<i32>, a2_28, a4_32, a5_29, mstatus, dwArg0138, dwArg0178, out a0_193, out a1_194, out a2_40, out a3_195, out a4_44, out a5_41, out a6_196, out s4_197)
	word32 a2_52
	word32 a5_53
	word32 a4_56
	word32 a0_198
	word32 a1_199
	word32 a3_200
	word32 a6_201
	word32 s4_202
	mbedtls_mpi_free(a0 + 116<i32>, a2_40, a4_44, a5_41, mstatus, dwArg0138, dwArg0178, out a0_198, out a1_199, out a2_52, out a3_200, out a4_56, out a5_53, out a6_201, out s4_202)
	word32 a2_64
	word32 a5_65
	word32 a4_68
	word32 a0_203
	word32 a1_204
	word32 a3_205
	word32 a6_206
	word32 s4_207
	mbedtls_mpi_free(a0 + 104<i32>, a2_52, a4_56, a5_53, mstatus, dwArg0138, dwArg0178, out a0_203, out a1_204, out a2_64, out a3_205, out a4_68, out a5_65, out a6_206, out s4_207)
	word32 a2_76
	word32 a5_77
	word32 a4_80
	word32 a0_208
	word32 a1_209
	word32 a3_210
	word32 a6_211
	word32 s4_212
	mbedtls_mpi_free(a0 + 92<i32>, a2_64, a4_68, a5_65, mstatus, dwArg0138, dwArg0178, out a0_208, out a1_209, out a2_76, out a3_210, out a4_80, out a5_77, out a6_211, out s4_212)
	word32 a2_88
	word32 a5_89
	word32 a4_92
	word32 a0_213
	word32 a1_214
	word32 a3_215
	word32 a6_216
	word32 s4_217
	mbedtls_mpi_free(a0 + 80<i32>, a2_76, a4_80, a5_77, mstatus, dwArg0138, dwArg0178, out a0_213, out a1_214, out a2_88, out a3_215, out a4_92, out a5_89, out a6_216, out s4_217)
	word32 a2_100
	word32 a5_101
	word32 a4_104
	word32 a0_218
	word32 a1_219
	word32 a3_220
	word32 a6_221
	word32 s4_222
	mbedtls_mpi_free(a0 + 68<i32>, a2_88, a4_92, a5_89, mstatus, dwArg0138, dwArg0178, out a0_218, out a1_219, out a2_100, out a3_220, out a4_104, out a5_101, out a6_221, out s4_222)
	word32 a2_112
	word32 a5_113
	word32 a4_116
	word32 a0_223
	word32 a1_224
	word32 a3_225
	word32 a6_226
	word32 s4_227
	mbedtls_mpi_free(a0 + 56<i32>, a2_100, a4_104, a5_101, mstatus, dwArg0138, dwArg0178, out a0_223, out a1_224, out a2_112, out a3_225, out a4_116, out a5_113, out a6_226, out s4_227)
	word32 a2_124
	word32 a5_125
	word32 a4_128
	word32 a0_228
	word32 a1_229
	word32 a3_230
	word32 a6_231
	word32 s4_232
	mbedtls_mpi_free(a0 + 44<i32>, a2_112, a4_116, a5_113, mstatus, dwArg0138, dwArg0178, out a0_228, out a1_229, out a2_124, out a3_230, out a4_128, out a5_125, out a6_231, out s4_232)
	word32 a2_136
	word32 a5_137
	word32 a4_140
	word32 a0_233
	word32 a1_234
	word32 a3_235
	word32 a6_236
	word32 s4_237
	mbedtls_mpi_free(a0 + 32<i32>, a2_124, a4_128, a5_125, mstatus, dwArg0138, dwArg0178, out a0_233, out a1_234, out a2_136, out a3_235, out a4_140, out a5_137, out a6_236, out s4_237)
	word32 a5_149
	word32 a4_152
	word32 a0_238
	word32 a1_239
	word32 a2_240
	word32 a3_241
	word32 a6_242
	word32 s4_243
	mbedtls_mpi_free(a0 + 20<i32>, a2_136, a4_140, a5_137, mstatus, dwArg0138, dwArg0178, out a0_238, out a1_239, out a2_240, out a3_241, out a4_152, out a5_149, out a6_242, out s4_243)
l23089A62_thunk_mbedtls_mpi_free:
	word32 a5_164
	word32 a3_166
	word32 a4_167
	word32 a0_244
	word32 a1_245
	word32 a2_246
	word32 a6_247
	word32 s4_248
	word32 s1_169 = mbedtls_mpi_free(a0 + 8<i32>, dwArg10, a4_152, a5_149, mstatus, dwArg0148, dwArg0188, out a0_244, out a1_245, out a2_246, out a3_166, out a4_167, out a5_164, out a6_247, out s4_248)
	a3Out = a3_166
	a4Out = a4_167
	a5Out = a5_164
	return s1_169
mbedtls_rsa_free_exit:


word32 mbedtls_sha256_init(word32 ra, word32 a0, ptr32 & t1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      mbedtls_ssl_setup
//      sha224_ctx_alloc
//      sha256_wrap
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a3 a4 a5 ra t1
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_sha256_init_entry:
l23089A66:
l23089A6C_thunk_memset:
	word32 a3_10
	word32 a4_11
	word32 a5_12
	word32 t1_15
	word32 a0_20
	word32 a1_21
	word32 a2_22
	word32 ra_13 = memset(ra, a0, 0<32>, 116<i32>, out t1_15, out a0_20, out a1_21, out a2_22, out a3_10, out a4_11, out a5_12)
	t1Out = t1_15
	a3Out = a3_10
	a4Out = a4_11
	a5Out = a5_12
	return ra_13
mbedtls_sha256_init_exit:


word32 mbedtls_sha256_free(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      mbedtls_ssl_handshake_free
//      sha224_ctx_free
//      sha256_wrap
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_sha256_free_entry:
l23089A70:
	word32 a0_5
	a0_5 = a0
	a0_5 = a0
	branch a0 != 0<32> l23089A7E
l23089A7E:
	branch a0_5 != a0 + 116<i32> l23089A78
l23089A78:
	Mem7[a0_5:byte] = 0<8>
	a0_5 = a0_5 + 1<32>
l23089A82:
l23089A76:
	a5Out = a0 + 116<i32>
	return a0_5
mbedtls_sha256_free_exit:


word32 mbedtls_sha256_clone(word32 a0, word32 a1, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      sha224_clone_wrap
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a2 a5 a7 t1
// Trashed: a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
mbedtls_sha256_clone_entry:
l23089A84:
	word32 a5_10
	word32 a7_11
	word32 a1_29
	word32 a2_30
	word32 a3_31
	word32 a4_32
	word32 a6_33
	word32 t1_17 = memcpy(a0, a1, 116<i32>, out a1_29, out a2_30, out a3_31, out a4_32, out a5_10, out a6_33, out a7_11)
	a2Out = dwArg10
	a5Out = a5_10
	a7Out = a7_11
	return t1_17
mbedtls_sha256_clone_exit:


word32 mbedtls_sha256_starts(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_entropy_init
//      mbedtls_ssl_reset_checksum
//      mbedtls_ssl_setup
//      sha256_wrap
//      sha224_starts_wrap
//      sha256_starts_wrap
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
mbedtls_sha256_starts_entry:
l23089A96:
	word32 a5_29
	Mem4[a0:word32] = 0<32>
	Mem5[a0 + 4<i32>:word32] = 0<32>
	branch a1 != 0<32> l23089AF4
l23089AF4:
	Mem9[0xC1059EE0<32>:word32] = a0
	Mem12[0x367CD513<32>:word32] = a0
	Mem15[0x3070DD27<32>:word32] = a0
	Mem18[0xF70E594D<32>:word32] = a0
	Mem21[0xFFC00B49<32>:word32] = a0
	Mem24[0x6858152D<32>:word32] = a0
	Mem27[0x64F98FC7<32>:word32] = a0
	a5_29 = 0xBEFA4FA4<32>
l23089AA0:
	Mem32[0x6A09E66F<32>:word32] = a0
	Mem35[0xBB67AE91<32>:word32] = a0
	Mem38[0x3C6EF382<32>:word32] = a0
	Mem41[0xA54FF54E<32>:word32] = a0
	Mem44[0x510E5297<32>:word32] = a0
	Mem47[0x9B0568A8<32>:word32] = a0
	Mem50[0x1F83D9CB<32>:word32] = a0
	a5_29 = 0x5BE0CD19<32>
l23089AEE:
	Mem55[a5_29 + 36<i32>:word32] = a0
	Mem57[a1 + 104<i32>:word32] = a0
	return a5_29
mbedtls_sha256_starts_exit:


word32 mbedtls_sha256_process(word32 t1, word32 a0, word32 a1, word32 a3, word32 a7, ptr32 & a3Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha224_process_wrap
//      sha224_update_wrap
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a7:[0..31] t1:[0..31]
// LiveOut: a3 a7 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
mbedtls_sha256_process_entry:
l23089B44:
	word32 s2_9 = a0 + 8<i32>
	word32 s3_10 = fp + -336<i32>
	word32 a4_26 = fp + -336<i32>
l23089B78:
	word32 a5_30 = Mem29[a3:word32]
	a4_26 = a4_26 + 4<32>
	Mem34[a4_26 + 4092<i32>:word32] = a3
	branch a0 + 40<i32> != a5_30 + 4<32> l23089B78
l23089B86:
	word32 a4_116 = fp + -304<i32>
	a1_350 = a1
l23089B90:
	word32 a1_350
	a1_350 = a1_350 + 4<32>
	word32 a3_54 = CONVERT(Mem43[a1_350 + -2<i32>:byte], byte, word32)
	a4_116 = a4_116 + 4<32>
	word32 a5_120 = CONVERT(Mem43[a1_350:byte], byte, word32) << 24<i32> | CONVERT(Mem43[a1_350 + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem43[a1_350 + -1<i32>:byte], byte, word32) | a3_54 << 8<i32>
	Mem57[a4_116 + 4092<i32>:word32] = a5_120
	word32 a3_113 = a3_54 << 8<i32>
	branch a1 + 64<i32> != a1_350 l23089B90
l23089BB8:
	0<32> = dwLocCC
	word32 t3_401 = dwLoc0148
	word32 a6_274 = dwLoc0128
	word32 a2_101 = dwLoc6C
	word32 s1_448 = 0x230C6C70<32>
	word32 t6_70 = dwLoc0148
	word32 t4_71 = 0x230C6C70<32>
l23089BDA:
	word32 a6_100 = a6_274 + (((((a7 >>u 6<u32> | a7 << 0x1A<u32>) ^ (a7 >>u 0xB<u32> | a7 << 0x15<u32>)) ^ (a7 << 7<u32> | a7 >>u 0x19<u32>)) + (Mem57[t4_71:int32] + Mem57[t6_70:int32])) + ((t1 ^ a1_350) & a7 ^ t1))
	t6_70 = t6_70 + 32<i32>
	t4_71 = t4_71 + 32<i32>
	word32 a5_121 = a5_120 + a6_100
	word32 t5_142 = ((a5_121 >>u 6<u32> | a5_121 << 0x1A<u32>) ^ (a5_121 >>u 0xB<u32> | a5_121 << 0x15<u32>) ^ (a5_121 << 7<u32> | a5_121 >>u 0x19<u32>)) + ((t1 + (Mem57[t4_71 + -28<i32>:int32] + Mem57[t6_70 + -28<i32>:int32])) + ((a7 ^ a1_350) & a5_121 ^ a1_350))
	word32 a6_123 = a6_100 + ((((a2_101 >>u 2<u32> | a2_101 << 0x1E<u32>) ^ (a2_101 >>u 0xD<u32> | a2_101 << 0x13<u32>)) ^ (a2_101 << 0xA<u32> | a2_101 >>u 0x16<u32>)) + ((a2_101 | a3_113) & a4_116 | a2_101 & a3_113))
	word32 a4_160 = a4_116 + t5_142
	word32 t5_180 = ((a4_160 >>u 6<u32> | a4_160 << 0x1A<u32>) ^ (a4_160 >>u 0xB<u32> | a4_160 << 0x15<u32>) ^ (a4_160 << 7<u32> | a4_160 >>u 0x19<u32>)) + ((a1_350 + (Mem57[t4_71 + -24<i32>:int32] + Mem57[t6_70 + -24<i32>:int32])) + ((a5_121 ^ a7) & a4_160 ^ a7))
	word32 t1_159 = ((a6_123 >>u 2<u32> | a6_123 << 0x1E<u32>) ^ (a6_123 >>u 0xD<u32> | a6_123 << 0x13<u32>) ^ (a6_123 << 0xA<u32> | a6_123 >>u 0x16<u32>)) + ((a6_123 | a2_101) & a3_113 | a6_123 & a2_101) + t5_142
	word32 a3_198 = a3_113 + t5_180
	word32 t5_218 = ((a3_198 >>u 6<u32> | a3_198 << 0x1A<u32>) ^ (a3_198 >>u 0xB<u32> | a3_198 << 0x15<u32>) ^ (a3_198 << 7<u32> | a3_198 >>u 0x19<u32>)) + ((a7 + (Mem57[t4_71 + -20<i32>:int32] + Mem57[t6_70 + -20<i32>:int32])) + ((a5_121 ^ a4_160) & a3_198 ^ a5_121))
	word32 a1_197 = ((t1_159 >>u 2<u32> | t1_159 << 0x1E<u32>) ^ (t1_159 >>u 0xD<u32> | t1_159 << 0x13<u32>) ^ (t1_159 << 0xA<u32> | t1_159 >>u 0x16<u32>)) + ((a6_123 | t1_159) & a2_101 | a6_123 & t1_159) + t5_180
	word32 a2_236 = a2_101 + t5_218
	word32 t5_256 = ((a2_236 >>u 6<u32> | a2_236 << 0x1A<u32>) ^ (a2_236 >>u 0xB<u32> | a2_236 << 0x15<u32>) ^ (a2_236 << 7<u32> | a2_236 >>u 0x19<u32>)) + ((a5_121 + (Mem57[t4_71 + -16<i32>:int32] + Mem57[t6_70 + -16<i32>:int32])) + ((a4_160 ^ a3_198) & a2_236 ^ a4_160))
	word32 a7_235 = ((a1_197 >>u 2<u32> | a1_197 << 0x1E<u32>) ^ (a1_197 >>u 0xD<u32> | a1_197 << 0x13<u32>) ^ (a1_197 << 0xA<u32> | a1_197 >>u 0x16<u32>)) + ((t1_159 | a1_197) & a6_123 | t1_159 & a1_197) + t5_218
	a6_274 = a6_123 + t5_256
	word32 t5_294 = ((a6_274 >>u 6<u32> | a6_274 << 0x1A<u32>) ^ (a6_274 >>u 0xB<u32> | a6_274 << 0x15<u32>) ^ (a6_274 << 7<u32> | a6_274 >>u 0x19<u32>)) + ((a4_160 + (Mem57[t4_71 + -12<i32>:int32] + Mem57[t6_70 + -12<i32>:int32])) + ((a3_198 ^ a2_236) & a6_274 ^ a3_198))
	a5_120 = ((a7_235 >>u 2<u32> | a7_235 << 0x1E<u32>) ^ (a7_235 >>u 0xD<u32> | a7_235 << 0x13<u32>) ^ (a7_235 << 0xA<u32> | a7_235 >>u 0x16<u32>)) + ((a1_197 | a7_235) & t1_159 | a1_197 & a7_235) + t5_256
	t1 = t1_159 + t5_294
	word32 t5_332 = ((t1 >>u 6<u32> | t1 << 0x1A<u32>) ^ (t1 >>u 0xB<u32> | t1 << 0x15<u32>) ^ (t1 << 7<u32> | t1 >>u 0x19<u32>)) + ((a3_198 + (Mem57[t4_71 + -8<i32>:int32] + Mem57[t6_70 + -8<i32>:int32])) + ((a2_236 ^ a6_274) & t1 ^ a2_236))
	a4_116 = ((a5_120 >>u 2<u32> | a5_120 << 0x1E<u32>) ^ (a5_120 >>u 0xD<u32> | a5_120 << 0x13<u32>) ^ (a5_120 << 0xA<u32> | a5_120 >>u 0x16<u32>)) + ((a7_235 | a5_120) & a1_197 | a7_235 & a5_120) + t5_294
	a1_350 = a1_197 + t5_332
	word32 t5_370 = ((a1_350 >>u 6<u32> | a1_350 << 0x1A<u32>) ^ (a1_350 >>u 0xB<u32> | a1_350 << 0x15<u32>) ^ (a1_350 << 7<u32> | a1_350 >>u 0x19<u32>)) + ((a2_236 + (Mem57[t4_71 + -4<i32>:int32] + Mem57[t6_70 + -4<i32>:int32])) + ((a6_274 ^ t1) & a1_350 ^ a6_274))
	a3_113 = ((a4_116 >>u 2<u32> | a4_116 << 0x1E<u32>) ^ (a4_116 >>u 0xD<u32> | a4_116 << 0x13<u32>) ^ (a4_116 << 0xA<u32> | a4_116 >>u 0x16<u32>)) + ((a5_120 | a4_116) & a7_235 | a5_120 & a4_116) + t5_332
	a7 = a7_235 + t5_370
	a2_101 = ((a3_113 >>u 2<u32> | a3_113 << 0x1E<u32>) ^ (a3_113 >>u 0xD<u32> | a3_113 << 0x13<u32>) ^ (a3_113 << 0xA<u32> | a3_113 >>u 0x16<u32>)) + ((a4_116 | a3_113) & a5_120 | a4_116 & a3_113) + t5_370
	branch t4_71 != 0x230C6CB0<32> l23089BDA
l2308A036:
l2308A04A:
	word32 s5_403 = Mem402[t3_401 + 56<i32>:int32]
	word32 t5_404 = Mem402[t3_401 + 4<i32>:int32]
	word32 t4_429 = ((s5_403 << 0xF<u32> | s5_403 >>u 0x11<u32>) ^ (s5_403 << 0xD<u32> | s5_403 >>u 0x13<u32>) ^ s5_403 >>u 0xA<u32>) + (Mem402[t3_401 + 36<i32>:int32] + Mem402[t3_401:int32]) + (((t5_404 >>u 7<u32> | t5_404 << 0x19<u32>) ^ (t5_404 << 0xE<u32> | t5_404 >>u 0x12<u32>)) ^ t5_404 >>u 3<u32>)
	word32 a6_456 = a6_274 + ((((((a7 >>u 6<u32> | a7 << 0x1A<u32>) ^ (a7 >>u 0xB<u32> | a7 << 0x15<u32>)) ^ (a7 << 7<u32> | a7 >>u 0x19<u32>)) + ((t1 ^ a1_350) & a7 ^ t1)) + Mem402[s1_448 + 64<i32>:int32]) + t4_429)
	word32 s6_405 = Mem402[t3_401 + 60<i32>:int32]
	word32 t6_486 = Mem402[t3_401 + 8<i32>:int32]
	word32 a5_484 = a5_120 + a6_456
	word32 s0_498 = ((s6_405 << 0xF<u32> | s6_405 >>u 0x11<u32>) ^ (s6_405 << 0xD<u32> | s6_405 >>u 0x13<u32>) ^ s6_405 >>u 0xA<u32>) + (t5_404 + Mem402[t3_401 + 40<i32>:int32]) + (((t6_486 >>u 7<u32> | t6_486 << 0x19<u32>) ^ (t6_486 << 0xE<u32> | t6_486 >>u 0x12<u32>)) ^ t6_486 >>u 3<u32>)
	word32 t5_517 = ((a7 ^ a1_350) & a5_484 ^ a1_350) + ((t1 + Mem402[s1_448 + 68<i32>:int32]) + s0_498) + (((a5_484 >>u 6<u32> | a5_484 << 0x1A<u32>) ^ (a5_484 >>u 0xB<u32> | a5_484 << 0x15<u32>)) ^ (a5_484 << 7<u32> | a5_484 >>u 0x19<u32>))
	word32 s7_452 = Mem402[t3_401 + 12<i32>:int32]
	word32 a6_485 = a6_456 + ((((a2_101 >>u 2<u32> | a2_101 << 0x1E<u32>) ^ (a2_101 >>u 0xD<u32> | a2_101 << 0x13<u32>)) ^ (a2_101 << 0xA<u32> | a2_101 >>u 0x16<u32>)) + ((a2_101 | a3_113) & a4_116 | a2_101 & a3_113))
	word32 a4_535 = a4_116 + t5_517
	word32 t2_558 = ((t4_429 << 0xF<u32> | t4_429 >>u 0x11<u32>) ^ (t4_429 << 0xD<u32> | t4_429 >>u 0x13<u32>) ^ t4_429 >>u 0xA<u32>) + (t6_486 + Mem402[t3_401 + 44<i32>:int32]) + (((s7_452 >>u 7<u32> | s7_452 << 0x19<u32>) ^ (s7_452 << 0xE<u32> | s7_452 >>u 0x12<u32>)) ^ s7_452 >>u 3<u32>)
	word32 t5_577 = ((a7 ^ a5_484) & a4_535 ^ a7) + ((a1_350 + Mem402[s1_448 + 72<i32>:int32]) + t2_558) + (((a4_535 >>u 6<u32> | a4_535 << 0x1A<u32>) ^ (a4_535 >>u 0xB<u32> | a4_535 << 0x15<u32>)) ^ (a4_535 << 7<u32> | a4_535 >>u 0x19<u32>))
	Mem600[t3_401 + 68<i32>:word32] = s0_498
	word32 t5_606 = Mem600[t3_401 + 16<i32>:int32]
	word32 t1_534 = ((a6_485 >>u 2<u32> | a6_485 << 0x1E<u32>) ^ (a6_485 >>u 0xD<u32> | a6_485 << 0x13<u32>) ^ (a6_485 << 0xA<u32> | a6_485 >>u 0x16<u32>)) + ((a2_101 | a6_485) & a3_113 | a2_101 & a6_485) + t5_517
	word32 a3_605 = a3_113 + t5_577
	word32 t0_619 = ((s0_498 << 0xF<u32> | s0_498 >>u 0x11<u32>) ^ (s0_498 << 0xD<u32> | s0_498 >>u 0x13<u32>) ^ s0_498 >>u 10<i32>) + (s7_452 + Mem600[t3_401 + 48<i32>:int32]) + (((t5_606 >>u 7<u32> | t5_606 << 0x19<u32>) ^ (t5_606 << 0xE<u32> | t5_606 >>u 0x12<u32>)) ^ t5_606 >>u 3<u32>)
	word32 s1_618 = Mem600[(t5_606 >>u 3<u32>) + 76<i32>:word32]
	Mem663[t3_401 + 72<i32>:word32] = t2_558
	word32 s7_667 = Mem663[t3_401 + 20<i32>:int32]
	word32 t6_637 = ((a5_484 ^ a4_535) & a3_605 ^ a5_484) + ((a7 + (t5_606 >>u 3<u32>)) + t0_619) + (((a3_605 >>u 6<u32> | a3_605 << 0x1A<u32>) ^ (a3_605 >>u 0xB<u32> | a3_605 << 0x15<u32>)) ^ (a3_605 << 7<u32> | a3_605 >>u 0x19<u32>))
	word32 a1_604 = ((t1_534 >>u 2<u32> | t1_534 << 0x1E<u32>) ^ (t1_534 >>u 0xD<u32> | t1_534 << 0x13<u32>) ^ (t1_534 << 0xA<u32> | t1_534 >>u 0x16<u32>)) + ((a6_485 | t1_534) & a2_101 | a6_485 & t1_534) + t5_577
	word32 t6_681 = ((t2_558 << 0xF<u32> | t2_558 >>u 0x11<u32>) ^ (t2_558 << 0xD<u32> | t2_558 >>u 0x13<u32>) ^ t2_558 >>u 0xA<u32>) + (t5_606 + Mem663[t3_401 + 52<i32>:int32]) + (((s7_667 >>u 7<u32> | s7_667 << 0x19<u32>) ^ (s7_667 << 0xE<u32> | s7_667 >>u 0x12<u32>)) ^ s7_667 >>u 3<u32>)
	word32 a2_655 = a2_101 + t6_637
	word32 t5_699 = ((a2_655 >>u 6<u32> | a2_655 << 0x1A<u32>) ^ (a2_655 >>u 0xB<u32> | a2_655 << 0x15<u32>) ^ (a2_655 << 7<u32> | a2_655 >>u 0x19<u32>)) + (((a4_535 ^ a3_605) & a2_655 ^ a4_535) + (a5_484 + (Mem663[s1_618 + 80<i32>:int32] + t6_681)))
	word32 s0_720 = Mem663[t3_401 + 24<i32>:int32]
	Mem724[t3_401 + 76<i32>:word32] = t0_619
	word32 a7_654 = ((a1_604 >>u 2<u32> | a1_604 << 0x1E<u32>) ^ (a1_604 >>u 0xD<u32> | a1_604 << 0x13<u32>) ^ (a1_604 << 0xA<u32> | a1_604 >>u 0x16<u32>)) + ((t1_534 | a1_604) & a6_485 | t1_534 & a1_604) + t6_637
	word32 t5_740 = ((t0_619 << 0xF<u32> | t0_619 >>u 0x11<u32>) ^ (t0_619 << 0xD<u32> | t0_619 >>u 0x13<u32>) ^ t0_619 >>u 0xA<u32>) + (s5_403 + s7_667) + (((s0_720 >>u 7<u32> | s0_720 << 0x19<u32>) ^ (s0_720 << 0xE<u32> | s0_720 >>u 0x12<u32>)) ^ s0_720 >>u 3<u32>)
	a6_274 = a6_485 + t5_699
	word32 t0_758 = ((a6_274 >>u 6<u32> | a6_274 << 0x1A<u32>) ^ (a6_274 >>u 0xB<u32> | a6_274 << 0x15<u32>) ^ (a6_274 << 7<u32> | a6_274 >>u 0x19<u32>)) + (((a3_605 ^ a2_655) & a6_274 ^ a3_605) + (a4_535 + (Mem724[s1_618 + 84<i32>:int32] + t5_740)))
	word32 t0_783 = Mem724[t3_401 + 28<i32>:int32]
	Mem785[t3_401 + 80<i32>:word32] = t6_681
	a5_120 = ((a7_654 >>u 2<u32> | a7_654 << 0x1E<u32>) ^ (a7_654 >>u 0xD<u32> | a7_654 << 0x13<u32>) ^ (a7_654 << 0xA<u32> | a7_654 >>u 0x16<u32>)) + ((a1_604 | a7_654) & t1_534 | a1_604 & a7_654) + t5_699
	word32 s6_800 = s6_405 + s0_720 + (((t6_681 << 0xF<u32> | t6_681 >>u 0x11<u32>) ^ (t6_681 << 0xD<u32> | t6_681 >>u 0x13<u32>)) ^ t6_681 >>u 0xA<u32>) + (((t0_783 >>u 7<u32> | t0_783 << 0x19<u32>) ^ (t0_783 << 0xE<u32> | t0_783 >>u 0x12<u32>)) ^ t0_783 >>u 3<u32>)
	t1 = t1_534 + t0_758
	word32 t6_818 = ((t1 >>u 6<u32> | t1 << 0x1A<u32>) ^ (t1 >>u 0xB<u32> | t1 << 0x15<u32>) ^ (t1 << 7<u32> | t1 >>u 0x19<u32>)) + (((a2_655 ^ a6_274) & t1 ^ a2_655) + (a3_605 + (Mem785[s1_618 + 88<i32>:int32] + s6_800)))
	word32 t2_842 = Mem785[t3_401 + 32<i32>:int32]
	Mem844[t3_401 + 84<i32>:word32] = t5_740
	Mem848[t3_401 + 64<i32>:word32] = t4_429
	word32 t4_861 = t4_429 + t0_783 + (((t5_740 << 0xF<u32> | t5_740 >>u 0x11<u32>) ^ (t5_740 << 0xD<u32> | t5_740 >>u 0x13<u32>)) ^ t5_740 >>u 0xA<u32>) + (((t2_842 >>u 7<u32> | t2_842 << 0x19<u32>) ^ (t2_842 << 0xE<u32> | t2_842 >>u 0x12<u32>)) ^ t2_842 >>u 3<u32>)
	a1_350 = a1_604 + t6_818
	word32 a2_867 = a2_655 + (Mem848[s1_618 + 92<i32>:int32] + t4_861) + ((a6_274 ^ t1) & a1_350 ^ a6_274)
	Mem868[t3_401 + 92<i32>:word32] = t4_861
	a4_116 = ((a5_120 >>u 2<u32> | a5_120 << 0x1E<u32>) ^ (a5_120 >>u 0xD<u32> | a5_120 << 0x13<u32>) ^ (a5_120 << 0xA<u32> | a5_120 >>u 0x16<u32>)) + ((a7_654 | a5_120) & a1_604 | a7_654 & a5_120) + t0_758
	Mem896[t3_401 + 88<i32>:word32] = s6_800
	word32 t4_880 = ((a1_350 >>u 6<u32> | a1_350 << 0x1A<u32>) ^ (a1_350 >>u 0xB<u32> | a1_350 << 0x15<u32>) ^ (a1_350 << 7<u32> | a1_350 >>u 0x19<u32>)) + a2_867
	a3_113 = ((a4_116 >>u 2<u32> | a4_116 << 0x1E<u32>) ^ (a4_116 >>u 0xD<u32> | a4_116 << 0x13<u32>) ^ (a4_116 << 0xA<u32> | a4_116 >>u 0x16<u32>)) + ((a5_120 | a4_116) & a7_654 | a5_120 & a4_116) + t6_818
	t3_401 = t3_401 + 32<i32>
	a7 = a7_654 + t4_880
	a2_101 = ((a3_113 >>u 2<u32> | a3_113 << 0x1E<u32>) ^ (a3_113 >>u 0xD<u32> | a3_113 << 0x13<u32>) ^ (a3_113 << 0xA<u32> | a3_113 >>u 0x16<u32>)) + ((a4_116 | a3_113) & a5_120 | a4_116 & a3_113) + t4_880
	s1_448 = s1_618 + 32<i32>
	branch dwLoc0148 + 192<i32> != t3_401 l2308A04A
l2308A75A:
l2308A76A:
	s2_9 = s2_9 + 4<32>
	Mem920[s2_9 + 4092<i32>:word32] = Mem913[s2_9:int32] + Mem913[s3_10:int32]
	s3_10 = s3_10 + 4<32>
	branch a0 + 40<i32> != s2_9 l2308A76A
l2308A780:
	a3Out = a3_113
	a7Out = a7
	return t1
mbedtls_sha256_process_exit:


word32 mbedtls_sha256_update.part.0(word32 t1, word32 a1, word32 a2, word32 a3, word32 a5, word32 a7, word32 dwArg48, word32 dwArgA8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_sha256_update
//      sha224_finish_wrap
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] t1:[0..31]
// LiveOut: a2 a3 a5 a7 s0 s1 s2 s3 s5 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha256_update.part.0_entry:
l2308A7A8:
	word32 a0_21 = Mem19[a5:word32]
	word32 a5_27 = a5 + a2
	Mem28[a5_27:word32] = a0_21
	word32 s2_24 = a1
	word32 s3_139 = a5 & 63<i32>
	word32 s0_29 = a2
	branch a5_27 >=u a2 l2308A7D4
l2308A7CE:
	Mem32[a5_27 + 5<32>:word32] = Mem28[a5_27 + 4<i32>:word32]
l2308A7D4:
	branch (a5 & 63<i32>) == 0<32> l2308A806
l2308A7D8:
	word32 s4_35 = 64<i32> - (a5 & 63<i32>)
	branch a2 <u s4_35 l2308A806
l2308A7E4:
	s0_29 = a2 + -64<i32> + (a5 & 63<i32>)
	word32 a1_265
	word32 a2_266
	word32 a7_45
	word32 a3_48
	word32 a4_267
	word32 a5_268
	word32 a6_269
	t1 = mbedtls_sha256_process(memcpy(a0_21 + 40<i32> + (a5 & 63<i32>), a1, s4_35, out a1_265, out a2_266, out a3_48, out a4_267, out a5_268, out a6_269, out a7_45), a0_21, a0_21 + 40<i32>, a3_48, a7_45, out a3, out a7)
	s2_24 = a1 + s4_35
	s3_139 = 0<32>
l2308A806:
	word32 s4_108 = s0_29
	word32 s6_81 = s2_24 + s0_29
l2308A81C:
	word32 a1_85 = s6_81 - s4_108
	branch s4_108 >u 63<i32> l2308A812
l2308A812:
	t1 = mbedtls_sha256_process(t1, a0_21, a1_85, a3, a7, out a3, out a7)
	s4_108 = s4_108 + -64<i32>
l2308A824:
	word32 a2_110 = s0_29 >>u 6<u32>
	word32 a1_115 = (a2_110 << 6<u32>) + s2_24
	branch a2_110 + -64<i32> + s0_29 == 0<32> l2308A856
l2308A856:
	0<32> = dwArgA8
	s0Out = <invalid>
	s1Out = <invalid>
	a2Out = dwArg48
	a3Out = a3
	a5Out = -64<i32>
	a7Out = a7
	s2Out = <invalid>
	s3Out = <invalid>
	s5Out = <invalid>
	return t1
l2308A83A:
	0<32> = dwArgA8
	word32 a0_140 = a0_21 + 40<i32> + s3_139
l2308A852_thunk_memcpy:
	word32 a5_144
	word32 a7_145
	word32 a2_147
	word32 a3_148
	word32 a1_270
	word32 a4_271
	word32 a6_272
	word32 t1_151 = memcpy(a0_140, a1_115, dwArg48, out a1_270, out a2_147, out a3_148, out a4_271, out a5_144, out a6_272, out a7_145)
	s0Out = <invalid>
	s1Out = <invalid>
	a2Out = a2_147
	a3Out = a3_148
	a5Out = a5_144
	a7Out = a7_145
	s2Out = <invalid>
	s3Out = <invalid>
	s5Out = <invalid>
	return t1_151
mbedtls_sha256_update.part.0_exit:


word32 mbedtls_sha256_update(word32 t1, word32 a1, word32 a2, word32 a3, word32 a5, word32 a7, word32 dwArg48, word32 dwArgA8, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_update_checksum_sha256
//      sha256_wrap
//      sha224_finish_wrap
//      sha224_update_wrap
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] t1:[0..31]
// LiveOut: a2 a3 a5 a7 t1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha256_update_entry:
l2308A86A:
	branch a2 == 0<32> l2308A870
l2308A870:
	a2Out = a2
	a3Out = a3
	a5Out = a5
	a7Out = a7
	return t1
l2308A86C:
l2308A86C_thunk_mbedtls_sha256_update.part.0:
	word32 a2_12
	word32 a3_13
	word32 a5_15
	word32 a7_17
	word32 s0_83
	word32 s1_84
	word32 s2_85
	word32 s3_86
	word32 s5_87
	word32 t1_27 = mbedtls_sha256_update.part.0(t1, a1, a2, a3, a5, a7, dwArg48, dwArgA8, out s0_83, out s1_84, out a2_12, out a3_13, out a5_15, out a7_17, out s2_85, out s3_86, out s5_87)
	a2Out = a2_12
	a3Out = a3_13
	a5Out = a5_15
	a7Out = a7_17
	return t1_27
mbedtls_sha256_update_exit:


word32 mbedtls_sha256_finish(word32 t1, word32 a2, word32 a5, word32 a7, word32 dwArg28, word32 dwArg88, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      ssl_calc_verify_tls_sha256
//      sha256_wrap
//      sha224_finish_wrap
// MayUse:  a2:[0..31] a5:[0..31] a7:[0..31] Stack +0028:[0..31] Stack +0088:[0..31] t1:[0..31]
// LiveOut: a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_sha256_finish_entry:
l2308A872:
	word32 a5_43
	word32 a5_17 = a5 << 3<i32> | a2 >>u 0x1D<u32>
	branch (a2 & 63<i32>) >u 55<i32> l2308A9F8
l2308A9F8:
	a5_43 = 120<i32>
l2308A8DA:
	a5_43 = 56<i32>
l2308A8DE:
	word32 a3_62
	word32 a5_64
	word32 a7_66
	word32 s0_94
	word32 s1_95
	word32 s2_96
	word32 s3_97
	word32 s5_99
	word32 a7_242
	word32 a5_241
	word32 a3_240
	word32 a2_239
	word32 a2_238
	mbedtls_sha256_update.part.0(mbedtls_sha256_update(t1, 0x230C6D70<32>, a5_43 - (a2 & 63<i32>), a5_17 << 8<u32>, a5_43, a7, dwArg28, dwArg88, out a2_238, out a3_62, out a5_64, out a7_66), fp + 0xFFFFFFE8<32>, 8<32>, a3_62, a5_64, a7_66, dwArg28, dwArg88, out s0_94, out s1_95, out a2_239, out a3_240, out a5_241, out a7_242, out s2_96, out s3_97, out s5_99)
	Mem111[s1_95:byte] = SLICE(CONVERT(Mem38[s0_94 + 11<i32>:byte], byte, word32), byte, 0)
	word32 a5_112 = CONVERT(Mem111[s0_94 + 10<i32>:uint16], uint16, word32)
	Mem113[s1_95 + 1<i32>:byte] = SLICE(a5_112, byte, 0)
	Mem116[s1_95 + 2<i32>:byte] = SLICE(a5_112 >>u 8<i32>, byte, 0)
	word32 s0_117 = Mem116[(a5_112 >>u 8<i32>) + 8<i32>:word32]
	Mem118[s1_95 + 3<i32>:byte] = SLICE(a5_112 >>u 8<i32>, byte, 0)
	Mem120[s1_95 + 4<i32>:byte] = SLICE(CONVERT(Mem118[s0_117 + 15<i32>:byte], byte, word32), byte, 0)
	word32 a5_121 = CONVERT(Mem120[s0_117 + 14<i32>:uint16], uint16, word32)
	Mem122[s1_95 + 5<i32>:byte] = SLICE(a5_121, byte, 0)
	Mem125[s1_95 + 6<i32>:byte] = SLICE(a5_121 >>u 8<i32>, byte, 0)
	word32 s0_126 = Mem125[(a5_121 >>u 8<i32>) + 12<i32>:word32]
	Mem127[s1_95 + 7<i32>:byte] = SLICE(a5_121 >>u 8<i32>, byte, 0)
	Mem129[s1_95 + 8<i32>:byte] = SLICE(CONVERT(Mem127[s0_126 + 19<i32>:byte], byte, word32), byte, 0)
	word32 a5_130 = CONVERT(Mem129[s0_126 + 18<i32>:uint16], uint16, word32)
	Mem131[s1_95 + 9<i32>:byte] = SLICE(a5_130, byte, 0)
	Mem134[s1_95 + 10<i32>:byte] = SLICE(a5_130 >>u 8<i32>, byte, 0)
	word32 s0_135 = Mem134[(a5_130 >>u 8<i32>) + 16<i32>:word32]
	Mem136[s1_95 + 11<i32>:byte] = SLICE(a5_130 >>u 8<i32>, byte, 0)
	Mem138[s1_95 + 12<i32>:byte] = SLICE(CONVERT(Mem136[s0_135 + 23<i32>:byte], byte, word32), byte, 0)
	word32 a5_139 = CONVERT(Mem138[s0_135 + 22<i32>:uint16], uint16, word32)
	Mem140[s1_95 + 13<i32>:byte] = SLICE(a5_139, byte, 0)
	Mem143[s1_95 + 14<i32>:byte] = SLICE(a5_139 >>u 8<i32>, byte, 0)
	word32 s0_144 = Mem143[(a5_139 >>u 8<i32>) + 20<i32>:word32]
	Mem145[s1_95 + 15<i32>:byte] = SLICE(a5_139 >>u 8<i32>, byte, 0)
	Mem147[s1_95 + 16<i32>:byte] = SLICE(CONVERT(Mem145[s0_144 + 27<i32>:byte], byte, word32), byte, 0)
	word32 a5_148 = CONVERT(Mem147[s0_144 + 26<i32>:uint16], uint16, word32)
	Mem149[s1_95 + 17<i32>:byte] = SLICE(a5_148, byte, 0)
	Mem152[s1_95 + 18<i32>:byte] = SLICE(a5_148 >>u 8<i32>, byte, 0)
	word32 s0_153 = Mem152[(a5_148 >>u 8<i32>) + 24<i32>:word32]
	Mem154[s1_95 + 19<i32>:byte] = SLICE(a5_148 >>u 8<i32>, byte, 0)
	Mem156[s1_95 + 20<i32>:byte] = SLICE(CONVERT(Mem154[s0_153 + 31<i32>:byte], byte, word32), byte, 0)
	word32 a5_157 = CONVERT(Mem156[s0_153 + 30<i32>:uint16], uint16, word32)
	Mem158[s1_95 + 21<i32>:byte] = SLICE(a5_157, byte, 0)
	Mem161[s1_95 + 22<i32>:byte] = SLICE(a5_157 >>u 8<i32>, byte, 0)
	word32 s0_162 = Mem161[(a5_157 >>u 8<i32>) + 28<i32>:word32]
	Mem163[s1_95 + 23<i32>:byte] = SLICE(a5_157 >>u 8<i32>, byte, 0)
	Mem165[s1_95 + 24<i32>:byte] = SLICE(CONVERT(Mem163[s0_162 + 35<i32>:byte], byte, word32), byte, 0)
	word32 a5_166 = CONVERT(Mem165[s0_162 + 34<i32>:uint16], uint16, word32)
	Mem167[s1_95 + 25<i32>:byte] = SLICE(a5_166, byte, 0)
	Mem170[s1_95 + 26<i32>:byte] = SLICE(a5_166 >>u 8<i32>, byte, 0)
	Mem172[s1_95 + 27<i32>:byte] = SLICE(a5_166 >>u 8<i32>, byte, 0)
	word32 a5_169 = a5_166 >>u 8<i32>
	word32 s0_173 = Mem172[(a5_166 >>u 8<i32>) + 104<i32>:word32]
	branch a5_166 >>u 8<i32> != 0<32> l2308A9EE
l2308A9D0:
	Mem175[s1_95 + 28<i32>:byte] = SLICE(CONVERT(Mem172[s0_173 + 39<i32>:byte], byte, word32), byte, 0)
	word32 a5_176 = CONVERT(Mem175[s0_173 + 38<i32>:uint16], uint16, word32)
	Mem177[s1_95 + 29<i32>:byte] = SLICE(a5_176, byte, 0)
	Mem180[s1_95 + 30<i32>:byte] = SLICE(a5_176 >>u 8<i32>, byte, 0)
	s0_173 = Mem180[(a5_176 >>u 8<i32>) + 36<i32>:word32]
	Mem182[s1_95 + 31<i32>:byte] = SLICE(a5_176 >>u 8<i32>, byte, 0)
	a5_169 = a5_176 >>u 8<i32>
l2308A9EE:
	s1Out = s1_95
	a5Out = a5_169
	s2Out = s2_96
	s3Out = s3_97
	s4Out = dwArg04
	s5Out = s5_99
	return s0_173
mbedtls_sha256_finish_exit:


void mbedtls_sha256(word32 ra, word32 a0, word32 a1, word32 a7, word32 s2, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sha224_wrap
//      sha256_wrap
// MayUse:  a0:[0..31] a1:[0..31] a7:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s2 sp
mbedtls_sha256_entry:
l2308A9FE:
	word32 a3_24
	word32 t1_29
	word32 a4_108
	word32 a5_109
	mbedtls_sha256_init(ra, fp + -132<i32>, out t1_29, out a3_24, out a4_108, out a5_109)
	word32 a2_40
	word32 a5_43
	word32 a7_45
	word32 a3_110
	word32 s1_111
	word32 a5_112
	word32 s2_113
	word32 s3_114
	word32 s4_115
	word32 s5_116
	mbedtls_sha256_finish(mbedtls_sha256_update(t1_29, a0, a1, a3_24, mbedtls_sha256_starts(fp + -132<i32>, a3_24), a7, s2, dwArg08, out a2_40, out a3_110, out a5_43, out a7_45), a2_40, a5_43, a7_45, dwLoc78, dwLoc18, out s1_111, out a5_112, out s2_113, out s3_114, out s4_115, out s5_116)
	word32 a5_117
	mbedtls_sha256_free(fp + -132<i32>, out a5_117)
	return
mbedtls_sha256_exit:


word32 mbedtls_ssl_own_cert(word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_certificate
// MayUse:  a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_own_cert_entry:
l2308AA44:
	branch a5 == 0<32> l2308AA4C
l2308AA48:
	a5 = Mem0[a5 + 8<i32>:word32]
	branch a5 != 0<32> l2308AA52
l2308AA4C:
	a5 = Mem0[a5 + 76<i32>:word32]
	branch a5 == 0<32> l2308AA54
l2308AA52:
	a5 = Mem0[a5:word32]
l2308AA54:
	a5Out = a5
	return a5
mbedtls_ssl_own_cert_exit:


word32 mbedtls_zeroize(word32 a0, word32 a1, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_calc_finished_tls_sha256
//      tls_prf_sha256
//      mbedtls_ssl_derive_keys
//      mbedtls_ssl_transform_free
//      mbedtls_ssl_handshake_free
//      mbedtls_ssl_session_free
//      mbedtls_ssl_free
//      mbedtls_ssl_config_free
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1
// Preserved: sp
mbedtls_zeroize_entry:
l2308AA58:
	word32 a1_5 = a1 + a0
l2308AA5A:
	branch a0 != a1_5 l2308AA60
l2308AA60:
	Mem8[a0:byte] = 0<8>
	a0 = a0 + 1<32>
l2308AA5E:
	a1Out = a1_5
	return a0
mbedtls_zeroize_exit:


word32 ssl_swap_epochs(word32 ra, word32 a4, word32 a5, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_resend
// MayUse:  a4:[0..31] a5:[0..31] ra:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
ssl_swap_epochs_entry:
l2308AA68:
	word32 a5_102
	word32 a4_101
	word32 a3_100
	word32 a2_115
	word32 a1_114
	word32 a0_11 = Mem7[a4 + 56<i32>:word32]
	word32 a5_13 = Mem7[a5 + 68<i32>:word32]
	branch a4 != a5_13 l2308AA9C
l2308AA9C:
	word32 a3_25
	word32 a4_26
	word32 s10_203
	word32 s11_204
	word32 s9_202
	word32 s8_201
	word32 s7_200
	word32 s6_199
	word32 s5_198
	word32 s4_197
	word32 a7_196
	word32 a5_195
	word32 a2_194
	word32 a1_193
	word32 t4_205
	mbedtls_debug_print_msg(ra, a0_11, 3<32>, 0x230C825C<32>, a5_13, out a1_193, out a2_194, out a3_25, out a4_26, out a5_195, out a7_196, out s4_197, out s5_198, out s6_199, out s7_200, out s8_201, out s9_202, out s10_203, out s11_204, out t4_205)
	word32 s0_41 = Mem7[a4_26 + 56<i32>:word32]
	word32 a5_43 = Mem7[a3_25 + 68<i32>:word32]
	Mem45[a3_25 + 56<i32>:word32] = s0_41
	Mem46[a4_26 + 68<i32>:word32] = a5_43
	word32 a1_51
	word32 a2_206
	word32 a3_207
	word32 a4_208
	word32 a5_209
	word32 a6_210
	word32 a7_211
	memcpy(fp + 0xFFFFFFE8<32>, Mem46[s0_41 + 144<i32>:int32], 8<32>, out a1_51, out a2_206, out a3_207, out a4_208, out a5_209, out a6_210, out a7_211)
	word32 a0_62 = Mem46[Mem46[a1_51 + 48<i32>:word32] + 144<i32>:int32]
	word32 a1_212
	word32 a2_213
	word32 a3_214
	word32 a4_215
	word32 a5_216
	word32 a6_217
	word32 a7_218
	memcpy(a0_62, a1_51 + 72<i32>, 8<32>, out a1_212, out a2_213, out a3_214, out a4_215, out a5_216, out a6_217, out a7_218)
	word32 a5_219
	word32 a6_220
	word32 a7_221
	memcpy(a0_62 + 72<i32>, fp + 0xFFFFFFE8<32>, 8<32>, out a1_114, out a2_115, out a3_100, out a4_101, out a5_219, out a6_220, out a7_221)
	s0 = Mem46[a3_100 + 56<i32>:word32]
	a5_102 = Mem46[s0 + 156<i32>:int32]
	branch a3_100 == 0<32> l2308AB02
l2308AAF2:
	s0 = Mem46[a2_115 + 12<i32>:word32]
	a4_101 = 1<32>
	branch a2_115 <= 1<32> l2308AB02
l2308AAFA:
	a3_100 = Mem46[Mem46[0xD<32>:word32] + 16<i32>:word32]
	a4_101 = 1<32> - a3_100
	a5_102 = a5_102 + a4_101
l2308AB02:
	Mem105[s0 + 160<i32>:word32] = a5_102
l2308AA7C:
	word32 a7_222
	word32 s4_223
	word32 s5_224
	word32 s6_225
	word32 s7_226
	word32 s8_227
	word32 s9_228
	word32 s10_229
	word32 s11_230
	word32 t4_231
	mbedtls_debug_print_msg(ra, a0_11, 3<32>, 0x230C8240<32>, a5_13, out a1_114, out a2_115, out a3_100, out a4_101, out a5_102, out a7_222, out s4_223, out s5_224, out s6_225, out s7_226, out s8_227, out s9_228, out s10_229, out s11_230, out t4_231)
l2308AA94:
	a1Out = a1_114
	a2Out = a2_115
	a3Out = a3_100
	a4Out = a4_101
	a5Out = a5_102
	return s0
ssl_swap_epochs_exit:


void ssl_calc_finished_tls_sha256(word32 ra, word32 s1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ssl_calc_finished_tls_sha256_entry:
l2308AB08:
	word32 a0_18 = Mem17[s1 + 44<i32>:word32]
	branch s1 != 0<32> l2308AB24
l2308AB22:
l2308AB24:
	word32 a2_102
	word32 a5_33
	word32 a4_276
	word32 t1_274
	word32 a3_275
	word32 ra_34 = mbedtls_sha256_init(ra, fp + -148<i32>, out t1_274, out a3_275, out a4_276, out a5_33)
	word32 s10_287
	word32 a1_48
	word32 s5_56
	word32 s9_286
	word32 s7_284
	word32 s8_285
	word32 s4_282
	word32 s6_283
	word32 a5_280
	word32 a7_281
	word32 a3_278
	word32 a4_279
	word32 a2_277
	word32 s11_288
	word32 t4_289
	mbedtls_debug_print_msg(ra_34, a0_18, 2<32>, 0x230C8114<32>, a5_33, out a1_48, out a2_277, out a3_278, out a4_279, out a5_280, out a7_281, out s4_282, out s5_56, out s6_283, out s7_284, out s8_285, out s9_286, out s10_287, out s11_288, out t4_289)
	word32 a2_290
	word32 a5_291
	word32 a7_292
	mbedtls_sha256_clone(fp + -148<i32>, a1_48 + 80<i32>, out a2_290, out a5_291, out a7_292)
	word32 a5_91
	word32 a7_96
	word32 a0_293
	word32 a1_294
	word32 a2_295
	word32 a3_296
	word32 a4_297
	word32 t1_98 = mbedtls_debug_print_buf(ra_34, 4<32>, fp + -140<i32>, out a0_293, out a1_294, out a2_295, out a3_296, out a4_297, out a5_91, out a7_96)
	branch s5_56 == 0<32> l2308ABFC
l2308ABFC:
	a2_102 = 0x230C80F4<32>
l2308AB76:
	a2_102 = 0x230C8104<32>
l2308AB7E:
	word32 a5_118
	word32 s1_122
	word32 s2_123
	word32 s3_124
	word32 s4_125
	word32 s5_126
	mbedtls_sha256_finish(t1_98, a2_102, a5_91, a7_96, dwLocA8, dwLoc48, out s1_122, out a5_118, out s2_123, out s3_124, out s4_125, out s5_126)
	word32 s0_148
	word32 s3_149
	word32 ra_151
	call Mem109[a5_118 + 208<i32>:int32] (retsize: 0;)
		uses: a0:s1_122 + 44<i32>,a1:48<i32>,a2:a2_108,a3:fp + -180<i32>,a4:32<i32>,a5:s3_124,a6:0xC<32>,ra:ra_34,s0:Mem109[a5_118 + 48<i32>:word32],s1:s1_122,s2:s2_123,s3:s3_124,s4:s4_125,s5:s5_126,Stack +0028:dwLocA8,Stack +0088:dwLoc48
		defs: ra:ra_151,s0:s0_148,s3:s3_149
	word32 a0_298
	word32 a1_299
	word32 a2_300
	word32 a3_301
	word32 a4_302
	word32 a5_303
	word32 a7_304
	mbedtls_debug_print_buf(ra_151, 3<32>, s3_149, out a0_298, out a1_299, out a2_300, out a3_301, out a4_302, out a5_303, out a7_304)
	word32 a5_200
	mbedtls_sha256_free(fp - 148<i32>, out a5_200)
	word32 a1_305
	mbedtls_zeroize(fp - 180<i32>, 32<i32>, out a1_305)
	word32 a1_306
	word32 a2_307
	word32 a3_308
	word32 a4_309
	word32 a5_310
	word32 a7_311
	word32 s4_312
	word32 s5_313
	word32 s6_314
	word32 s7_315
	word32 s8_316
	word32 s9_317
	word32 s10_318
	word32 s11_319
	word32 t4_320
	mbedtls_debug_print_msg(ra_151, s0_148, 2<32>, 0x230C8160<32>, a5_200, out a1_306, out a2_307, out a3_308, out a4_309, out a5_310, out a7_311, out s4_312, out s5_313, out s6_314, out s7_315, out s8_316, out s9_317, out s10_318, out s11_319, out t4_320)
	return
ssl_calc_finished_tls_sha256_exit:


void ssl_calc_verify_tls_sha256(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ssl_calc_verify_tls_sha256_entry:
l2308AC06:
	word32 a5_22
	word32 t1_156
	word32 a3_157
	word32 a4_158
	word32 ra_23 = mbedtls_sha256_init(ra, fp + -132<i32>, out t1_156, out a3_157, out a4_158, out a5_22)
	word32 a1_35
	word32 a2_159
	word32 a3_160
	word32 a4_161
	word32 a5_162
	word32 a7_163
	word32 s4_164
	word32 s5_165
	word32 s6_166
	word32 s7_167
	word32 s8_168
	word32 s9_169
	word32 s10_170
	word32 s11_171
	word32 t4_172
	mbedtls_debug_print_msg(ra_23, a0, 2<32>, 0x230C8174<32>, a5_22, out a1_35, out a2_159, out a3_160, out a4_161, out a5_162, out a7_163, out s4_164, out s5_165, out s6_166, out s7_167, out s8_168, out s9_169, out s10_170, out s11_171, out t4_172)
	word32 a2_56
	word32 a5_59
	word32 a7_61
	word32 s2_80
	word32 s1_173
	word32 a5_174
	word32 s3_175
	word32 s4_176
	word32 s5_177
	word32 s0_78 = mbedtls_sha256_finish(mbedtls_sha256_clone(fp + -132<i32>, a1_35 + 80<i32>, out a2_56, out a5_59, out a7_61), a2_56, a5_59, a7_61, dwLoc68, dwLoc08, out s1_173, out a5_174, out s2_80, out s3_175, out s4_176, out s5_177)
	word32 a5_103
	word32 a0_178
	word32 a1_179
	word32 a2_180
	word32 a3_181
	word32 a4_182
	word32 a7_183
	mbedtls_debug_print_buf(ra_23, 3<32>, s2_80, out a0_178, out a1_179, out a2_180, out a3_181, out a4_182, out a5_103, out a7_183)
	word32 a1_184
	word32 a2_185
	word32 a3_186
	word32 a4_187
	word32 a5_188
	word32 a7_189
	word32 s4_190
	word32 s5_191
	word32 s6_192
	word32 s7_193
	word32 s8_194
	word32 s9_195
	word32 s10_196
	word32 s11_197
	word32 t4_198
	mbedtls_debug_print_msg(ra_23, s0_78, 2<32>, 0x230C81A8<32>, a5_103, out a1_184, out a2_185, out a3_186, out a4_187, out a5_188, out a7_189, out s4_190, out s5_191, out s6_192, out s7_193, out s8_194, out s9_195, out s10_196, out s11_197, out t4_198)
	word32 a5_199
	mbedtls_sha256_free(fp + -132<i32>, out a5_199)
	return
ssl_calc_verify_tls_sha256_exit:


word32 ssl_flight_free(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_recv_flight_completed
//      mbedtls_ssl_handshake_free
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
ssl_flight_free_entry:
l2308AC92:
	word32 s0_11 = a0
l2308AC9C:
	branch s0_11 != 0<32> l2308ACA8
l2308ACA8:
	word32 a2_22
	word32 a5_25
	word32 s0_31
	word32 s1_83
	word32 a0_84
	word32 a1_85
	word32 a3_86
	word32 a4_87
	word32 a6_88
	word32 s4_89
	word32 t3_90
	vPortFree(a0, a2, a5, mstatus, dwArg0148, dwArg0188, out s0_31, out s1_83, out a0_84, out a1_85, out a2_22, out a3_86, out a4_87, out a5_25, out a6_88, out s4_89, out t3_90)
	word32 s0_91
	word32 a1_92
	word32 a6_93
	word32 t3_94
	vPortFree(s0_31, a2_22, a5_25, mstatus, dwArg0148, dwArg0188, out s0_91, out s1, out a0, out a1_92, out a2, out a3, out a4, out a5, out a6_93, out s4, out t3_94)
	s0_11 = s1
l2308AC9E:
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1
ssl_flight_free_exit:


word32 ssl_append_key_cert(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgF8, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_conf_own_cert
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
ssl_append_key_cert_entry:
l2308ACBA:
	word32 a0_40
	word32 a3_24
	word32 a4_25
	word32 s1_30
	word32 s2_31
	word32 s3_32
	word32 a1_131
	word32 s4_132
	word32 s8_133
	word32 a2_23
	word32 a5_26
	word32 s0_101
	word32 ra_28 = mycalloc(ra, a1, 1<32>, 0xC<32>, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out s0_101, out s1_30, out a1_131, out a2_23, out a3_24, out a4_25, out a5_26, out s2_31, out s3_32, out s4_132, out s8_133)
	branch false l2308ACF8
l2308ACF8:
	a0_40 = 0xF8000100<32>
l2308ACD2:
	Mem42[s1_30:word32] = 1<32>
	Mem43[9<32>:word32] = 0<32>
	Mem44[a2 + 4<i32>:word32] = 1<32>
	a2_23 = a2
	s0_101 = Mem44[a5_26:word32]
	branch a5_26 != 0<32> l2308ACF0
l2308ACF0:
	a5_26 = Mem44[a4_25 + 8<i32>:word32]
	branch a4_25 != 0<32> l2308ACEE
l2308ACEE:
l2308ACF4:
	Mem51[9<32>:word32] = a5_26
l2308ACE0:
	Mem52[1<32>:word32] = s0_101
l2308ACE2:
	a0_40 = 0<32>
l2308ACE4:
	s0Out = s0_101
	s1Out = s1_30
	a0Out = a0_40
	a2Out = a2_23
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_26
	s2Out = s2_31
	s3Out = s3_32
	return ra_28
ssl_append_key_cert_exit:


void ssl_update_checksum_start(word32 t1, word32 a1, word32 a2, word32 a3, word32 a5, word32 a7, word32 dwArg48, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_update_checksum_sha256
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] t1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ssl_update_checksum_start_entry:
l2308AD00:
l2308AD06_thunk_mbedtls_sha256_update:
	word32 a2_39
	word32 a3_40
	word32 a5_41
	word32 a7_42
	mbedtls_sha256_update(t1, a1, a2, a3, a5, a7, dwArg48, dwArgA8, out a2_39, out a3_40, out a5_41, out a7_42)
	return
ssl_update_checksum_start_exit:


void ssl_update_checksum_sha256(word32 t1, word32 a1, word32 a2, word32 a3, word32 a5, word32 a7, word32 dwArg48, word32 dwArgA8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a7:[0..31] Stack +0048:[0..31] Stack +00A8:[0..31] t1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ssl_update_checksum_sha256_entry:
l2308AD0A:
l2308AD0A_thunk_ssl_update_checksum_start:
	ssl_update_checksum_start(t1, a1, a2, a3, a5, a7, dwArg48, dwArgA8)
	return
ssl_update_checksum_sha256_exit:


word32 mbedtls_ssl_hdr_len.isra.1(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_flush_output
//      mbedtls_ssl_get_record_expansion
//      mbedtls_ssl_write_record
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_hdr_len.isra.1_entry:
l2308AD0E:
	branch (CONVERT(Mem0[a0 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308AD1A
l2308AD1A:
	a5Out = <invalid>
	return 5<32>
l2308AD16:
	a5Out = <invalid>
	return 0xD<32>
mbedtls_ssl_hdr_len.isra.1_exit:


word32 ssl_set_timer(word32 ra, word32 s0, word32 a1, word32 a5, word32 dwArg10, word32 dwArg14, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_recv_flight_completed
//      mbedtls_ssl_send_flight_completed
//      mbedtls_ssl_handshake_wrapup
//      mbedtls_ssl_setup
//      mbedtls_ssl_resend
//      mbedtls_ssl_fetch_input
//      mbedtls_ssl_read
// MayUse:  a1:[0..31] a5:[0..31] ra:[0..31] s0:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: a1 a3 a4 a5 ra s0 s1 s10 s11 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s0 s1 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
ssl_set_timer_entry:
l2308AD1E:
	word32 a0_5 = Mem0[a5 + 72<i32>:word32]
	branch a5 == 0<32> l2308AD60
l2308AD60:
	s0Out = s0
	s1Out = s1
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	s11Out = s11
	return ra
l2308AD22:
	word32 a5_24
	word32 a1_134
	word32 a2_135
	word32 a3_136
	word32 a4_137
	word32 a7_138
	word32 s4_139
	word32 s5_140
	word32 s6_141
	word32 s7_142
	word32 s8_143
	word32 s9_144
	word32 s10_145
	word32 s11_146
	word32 t4_147
	mbedtls_debug_print_msg(ra, a0_5, 3<32>, 0x230C822C<32>, a1, out a1_134, out a2_135, out a3_136, out a4_137, out a5_24, out a7_138, out s4_139, out s5_140, out s6_141, out s7_142, out s8_143, out s9_144, out s10_145, out s11_146, out t4_147)
	word32 a5_52
	word32 a4_53
	word32 s1_55
	word32 a1_56
	word32 a3_57
	word32 s0_58
	word32 ra_59
	word32 t1_60
	word32 a7_62
	word32 s10_63
	word32 s11_64
	word32 s4_65
	word32 s5_66
	word32 s6_67
	word32 s7_68
	word32 s8_69
	word32 s9_70
	word32 t0_71
	word32 t3_72
	word32 t4_73
	call Mem21[a0_5 + 72<i32>:int32] (retsize: 0;)
		uses: a1:a1 >>u 2<u32>,a2:a1,a3:a3_57,a4:a4_53,a5:a5_24,a7:a7_62,ra:ra,s0:s0,s1:a1,s10:s10_63,s11:s11_64,s4:s4_65,s5:s5_66,s6:s6_67,s7:s7_68,s8:s8_69,s9:s9_70,Stack +0010:dwArg10,Stack +0014:dwArg14,t0:t0_71,t1:t1_60,t3:t3_72,t4:t4_73,tp:dwArg14
		defs: a1:a1_56,a3:a3_57,a4:a4_53,a5:a5_52,a7:a7_62,ra:ra_59,s0:s0_58,s1:s1_55,s10:s10_63,s11:s11_64,s4:s4_65,s5:s5_66,s6:s6_67,s7:s7_68,s8:s8_69,s9:s9_70,t0:t0_71,t1:t1_60,t3:t3_72,t4:t4_73
	s0Out = s0_58
	s1Out = s1_55
	a1Out = a1_56
	a3Out = a3_57
	a4Out = a4_53
	a5Out = a5_52
	s4Out = s4_65
	s5Out = s5_66
	s6Out = s6_67
	s7Out = s7_68
	s9Out = s9_70
	s10Out = s10_63
	s11Out = s11_64
	return ra_59
ssl_set_timer_exit:


word32 ssl_check_timer(word32 ra, word32 s0, word32 a5, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_fetch_input
// MayUse:  a5:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 a4 a5 ra s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: s0 sp
ssl_check_timer_entry:
l2308AD62:
	word32 a0_5 = Mem0[a5 + 76<i32>:word32]
	branch a5 != 0<32> l2308AD74
l2308AD74:
	word32 a0_23
	word32 a0_14
	word32 s0_16
	word32 ra_17
	word32 a2_19
	word32 a3_20
	word32 a1_21
	word32 a7_59
	word32 s10_60
	word32 s11_61
	word32 s4_62
	word32 s5_63
	word32 s8_66
	word32 s9_67
	word32 t0_68
	word32 t1_69
	word32 t3_70
	word32 t4_71
	word32 a4_18
	word32 s6_107
	word32 s7_110
	call a5 (retsize: 0;)
		uses: a0:Mem10[a0_5 + 68<i32>:word32],a1:a1_21,a2:a2_19,a3:a3_20,a4:a4_18,a5:a5,a7:a7_59,ra:ra,s0:a0_5,s10:s10_60,s11:s11_61,s4:s4_62,s5:s5_63,s6:s6_64,s7:s7_65,s8:s8_66,s9:s9_67,Stack +0004:s0,Stack +0084:ra,t0:t0_68,t1:t1_69,t3:t3_70,t4:t4_71
		defs: a0:a0_14,a1:a1_21,a2:a2_19,a3:a3_20,a4:a4_18,a7:a7_59,ra:ra_17,s0:s0_16,s10:s10_60,s11:s11_61,s4:s4_62,s5:s5_63,s6:s6_64,s7:s7_65,s8:s8_66,s9:s9_67,t0:t0_68,t1:t1_69,t3:t3_70,t4:t4_71
	word32 a5_22 = 2<32>
	branch a0_14 != 2<32> l2308AD6A
l2308AD6A:
	a0_23 = 0<32>
l2308AD86:
	word32 a1_139
	word32 a2_140
	word32 a3_141
	word32 a7_142
	word32 s4_143
	word32 s5_144
	word32 s8_145
	word32 s9_146
	word32 s10_147
	word32 s11_148
	word32 t4_149
	mbedtls_debug_print_msg(ra_17, s0_16, 3<32>, 0x230C81B8<32>, 2<32>, out a1_139, out a2_140, out a3_141, out a4_18, out a5_22, out a7_142, out s4_143, out s5_144, out s6_107, out s7_110, out s8_145, out s9_146, out s10_147, out s11_148, out t4_149)
	a0_23 = 0xFFFFFFFF<32>
l2308AD6C:
	a0Out = a0_23
	a4Out = a4_18
	a5Out = a5_22
	s6Out = s6_107
	s7Out = s7_110
	return ra_17
l2308AD66:
	a0Out = 0<32>
	a4Out = a4
	a5Out = a5
	s6Out = s6
	s7Out = s7
	return ra
ssl_check_timer_exit:


void tls_prf_sha256(word32 ra, word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg68)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
tls_prf_sha256_entry:
l2308ADA6:
	word32 a3_465
	word32 a4_466
	word32 a5_467
	word32 ra_49 = mbedtls_md_init(ra, fp + -220<i32>, out a3_465, out a4_466, out a5_467)
	word32 a5_468
	word32 a0_53 = mbedtls_md_info_from_type(6<32>, out a5_468)
	branch a0_53 == 0<32> l2308AEE8
l2308AEE8:
l2308ADDE:
	word32 a0_58 = mbedtls_md_get_size(a0_53)
	word32 a1_469
	word32 a2_470
	word32 a3_471
	word32 a5_473
	word32 a4_472
	branch strlen(a2, out a1_469, out a2_470, out a3_471, out a4_472, out a5_473) + a4 + a0_58 >u 128<i32> l2308AEF0
l2308AEF0:
l2308ADF8:
	word32 a1_474
	word32 a3_476
	word32 a4_477
	word32 a2_475
	word32 a5_478
	word32 a0_73 = strlen(a2, out a1_474, out a2_475, out a3_476, out a4_477, out a5_478)
	word32 a6_484
	word32 a1_479
	word32 a2_480
	word32 a3_481
	word32 a4_482
	word32 a5_483
	word32 a7_485
	memcpy(fp + -176<i32> + a0_58, a2, a0_73, out a1_479, out a2_480, out a3_481, out a4_482, out a5_483, out a6_484, out a7_485)
	word32 a4_103
	word32 a5_104
	word32 a3_108
	word32 a6_488
	word32 a1_486
	word32 a7_489
	word32 a2_487
	memcpy(a0_58 + a0_73 + (fp + -176<i32>), a3, a4, out a1_486, out a2_487, out a3_108, out a4_103, out a5_104, out a6_488, out a7_489)
	word32 a0_120
	word32 a4_124
	word32 a5_125
	word32 mstatus_127
	word32 s2_130
	word32 s4_132
	word32 s8_133
	word32 s3_493
	word32 s1_490
	word32 a2_491
	word32 a3_492
	word32 ra_128 = mbedtls_md_setup(ra_49, a2, a0_58, fp + -220<i32>, a0_53, 1<32>, a3_108, a4_103, a5_104, a4, mstatus, dwLocD0, dwLocCC, dwLocA8, dwArg28, dwArg68, out s1_490, out a0_120, out a2_491, out a3_492, out a4_124, out a5_125, out s2_130, out s3_493, out s4_132, out s8_133, out mstatus_127)
	branch a0_120 != 0<32> l2308AE6E
l2308AE2E:
	word32 s0_145
	word32 s4_146
	word32 a4_151
	word32 a5_152
	word32 s1_154
	word32 s2_155
	word32 s3_156
	word32 a4_165
	word32 a5_166
	word32 s2_178
	word32 a0_497
	word32 a2_494
	word32 s8_495
	word32 a0_496
	word32 s1_177
	word32 a5_174
	word32 a4_173
	word32 a2_172
	word32 a1_171
	word32 ra_175 = mbedtls_md_hmac_finish(mbedtls_md_hmac_update(mbedtls_md_hmac_starts(ra_128, fp + -220<i32>, a0, s8_133, a4_124, a5_125, s2_130, s4_132, out s0_145, out s1_154, out a2_494, out a4_151, out a5_152, out s2_155, out s3_156, out s4_146, out s8_495), fp + -220<i32>, a4_151, a5_152, dwLocD0, out a0_496, out a4_165, out a5_166), s0_145, s1_154, fp + -220<i32>, fp + -176<i32>, a4_165, a5_166, s2_155 + s3_156, dwArg20, dwArg24, dwArg48, out s1_177, out a0_497, out a1_171, out a2_172, out a4_173, out a5_174, out s2_178)
	word32 s3_180 = 0<32>
	word32 s2_181 = s2_178 + s1_177
l2308AE50:
	branch s3_180 <u s4_146 l2308AE8C
l2308AE8C:
	word32 a4_194
	word32 a5_195
	word32 s0_197
	word32 a4_205
	word32 a5_206
	word32 a1_212
	word32 a5_215
	word32 s1_218
	word32 s2_219
	word32 a4_227
	word32 a5_228
	word32 s0_230
	word32 a4_236
	word32 a5_237
	word32 a2_500
	word32 a0_499
	word32 a0_498
	word32 a4_501
	word32 a0_502
	word32 a0_503
	word32 a4_504
	word32 a5_505
	ra_175 = mbedtls_md_hmac_finish(mbedtls_md_hmac_update(mbedtls_md_hmac_reset(mbedtls_md_hmac_finish(mbedtls_md_hmac_update(mbedtls_md_hmac_reset(ra_175, fp + -220<i32>, a1_171, a5_174, out s0_197, out a4_194, out a5_195), fp + -220<i32>, a4_194, a5_195, dwLocD0, out a0_498, out a4_205, out a5_206), s0_197, s1_177, fp + -220<i32>, fp + -208<i32>, a4_205, a5_206, s2_181, dwArg20, dwArg24, dwArg48, out s1_218, out a0_499, out a1_212, out a2_500, out a4_501, out a5_215, out s2_219), fp + -220<i32>, a1_212, a5_215, out s0_230, out a4_227, out a5_228), fp + -220<i32>, a4_227, a5_228, dwLocD0, out a0_502, out a4_236, out a5_237), s0_230, s1_218, fp + -220<i32>, fp + -176<i32>, a4_236, a5_237, s2_219, dwArg20, dwArg24, dwArg48, out s1_177, out a0_503, out a1_171, out a2_172, out a4_504, out a5_505, out s2_181)
	a4_173 = s1_177 + s3_180
	word32 a3_252 = s1_177
	branch s4_146 >=u a4_173 l2308AEC8
l2308AEC4:
	a3_252 = s4_146 & s1_177
l2308AEC8:
	a5_174 = 0<32>
	word32 s3_258 = s3_180 + a5
l2308AECC:
	branch a5_174 != a3_252 l2308AED4
l2308AED4:
	a1_171 = CONVERT(Mem264[fp + -208<i32> + a5_174:byte], byte, word32)
	a2_172 = s3_258 + a5_174
	Mem269[a2_172:byte] = SLICE(a1_171, byte, 0)
	a5_174 = a5_174 + 1<32>
l2308AED0:
	s3_180 = a4_173
l2308AE56:
	word32 a5_506
	mbedtls_md_free(ra_175, fp + -220<i32>, a2_172, a4_173, a5_174, mstatus_127, out a5_506)
	word32 a1_507
	mbedtls_zeroize(fp + -176<i32>, 128<i32>, out a1_507)
	word32 a1_508
	mbedtls_zeroize(fp + -208<i32>, 32<i32>, out a1_508)
l2308AE6E:
	return
tls_prf_sha256_exit:


void mbedtls_ssl_derive_keys(word32 ra, word32 s0, word32 s1, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus t0 t1 t3 t4 t5 t6 tp
// Preserved: ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp
mbedtls_ssl_derive_keys_entry:
l2308AEF8:
	word32 a4_936
	word32 a5_937
	word32 a0_30 = Mem29[s1 + 64<i32>:word32]
	word32 a5_42
	word32 a4_46
	word32 s11_49
	word32 s4_50
	word32 s6_52
	word32 a1_1286
	word32 s5_1290
	word32 s7_1291
	word32 s8_1292
	word32 s10_1294
	word32 t4_1295
	word32 s9_1293
	word32 a3_1288
	word32 a7_1289
	word32 a2_1287
	mbedtls_debug_print_msg(ra, a0_30, 2<32>, 0x230C6DCC<32>, a5, out a1_1286, out a2_1287, out a3_1288, out a4_46, out a5_42, out a7_1289, out s4_50, out s5_1290, out s6_52, out s7_1291, out s8_1292, out s9_1293, out s10_1294, out s11_49, out t4_1295)
	word32 a5_64
	word32 a0_62 = mbedtls_cipher_info_from_type(CONVERT(Mem29[a5_42 + 8<i32>:byte], byte, word32), a4_46, out a5_64)
	word32 sp_119 = fp + -400<i32>
	word32 s2_121 = a0_30
	word32 s1_124 = Mem29[a5_64:word32]
	branch a0_62 != 0<32> l2308AFBE
l2308AFBE:
	word32 a5_69
	word32 a0_68 = mbedtls_md_info_from_type(CONVERT(Mem29[a5_64 + 9<i32>:byte], byte, word32), out a5_69)
	branch a0_68 != 0<32> l2308AFE0
l2308AFE0:
	word32 a5_431 = 3<32>
	branch Mem29[a0_30 + 12<i32>:int32] != 3<32> l2308B038
l2308B038:
l2308AFEA:
	word32 a5_151
	word32 a3_153
	word32 s11_132
	word32 s10_131
	word32 s8_129
	word32 s5_127
	word32 s6_122
	word32 s9_130
	word32 s4_126
	word32 s7_128
	Mem79[s4_50 + 208<i32>:word32] = 0x2308ADA6<32>
	Mem82[s4_50 + 200<i32>:word32] = 0x2308AC06<32>
	Mem85[s4_50 + 204<i32>:word32] = 0x2308AB08<32>
	word32 a5_86 = Mem85[s4_50 + 328<i32>:int32]
	word32 s3_125 = s6_52
	branch a5_86 == 0<32> l2308B058
l2308B058:
	word32 a5_1316
	word32 a7_1317
	word32 a4_1315
	word32 a3_1314
	word32 a2_1313
	word32 a0_1311
	word32 a1_1312
	mbedtls_debug_print_buf(ra, 3<32>, s4_50 + 280<i32>, out a0_1311, out a1_1312, out a2_1313, out a3_1314, out a4_1315, out a5_1316, out a7_1317)
	word32 a0_133
	word32 tp_1022
	word32 t6_1020
	word32 t5_1019
	call Mem85[s4_50 + 208<i32>:int32] (retsize: 0;)
		uses: a0:s4_50 + 280<i32>,a1:Mem85[s4_50 + 212<i32>:int32],a2:0x230C6E48<32>,a3:s4_50 + 216<i32>,a4:64<i32>,a5:s11_49 + 44<i32>,a6:48<i32>,mstatus:mstatus,ra:ra,s0:s0,s1:s1_65,s10:s4_50 + 280<i32>,s11:s11_49,s2:a0_30,s3:s6_52,s4:s4_50,s5:a0_62,s6:s6_52,s7:s4_50 + 216<i32>,s8:a0_68,s9:s11_49 + 44<i32>,t5:t5_1019,t6:t6_1020,tp:tp_1022
		defs: a0:a0_133,ra:ra_120,s1:s1_124,s10:s10_131,s11:s11_132,s2:s2_121,s3:s3_125,s4:s4_126,s5:s5_127,s6:s6_122,s7:s7_128,s8:s8_129,s9:s9_130,sp:sp_119,t5:t5_1019,t6:t6_1020,tp:tp_1022
	s0 = a0_133
	branch a0_133 == 0<32> l2308B0BA
l2308B0BA:
	word32 a1_1391
	mbedtls_zeroize(s10_131, 48<i32>, out a1_1391)
l2308B09E:
	a5_151 = a0_133
	a3_153 = 629<i32>
l2308B01E:
	word32 a3_1320
	word32 a4_1321
	word32 a5_1322
	word32 t4_1324
	word32 a7_1323
	word32 a1_1318
	word32 a2_1319
	mbedtls_debug_print_msg(ra, a0_30, 3<32>, 0x230C6E5C<32>, a5_86, out a1_1318, out a2_1319, out a3_1320, out a4_1321, out a5_1322, out a7_1323, out s4_126, out s5_127, out s6_122, out s7_128, out s8_129, out s9_130, out s10_131, out s11_132, out t4_1324)
l2308B0C4:
	word32 a7_1331
	word32 a6_1330
	word32 a5_1329
	word32 a4_1328
	word32 a1_1325
	word32 a2_1326
	word32 a3_1327
	memcpy(sp_119 + 16<i32>, s7_128, 64<i32>, out a1_1325, out a2_1326, out a3_1327, out a4_1328, out a5_1329, out a6_1330, out a7_1331)
	word32 a4_1335
	word32 a5_1336
	word32 a6_1337
	word32 a7_1338
	word32 a2_1333
	word32 a3_1334
	word32 a1_1332
	memcpy(s7_128, sp_119 + 48<i32>, 32<i32>, out a1_1332, out a2_1333, out a3_1334, out a4_1335, out a5_1336, out a6_1337, out a7_1338)
	word32 a7_1345
	word32 a6_1344
	word32 a5_1343
	word32 a1_1339
	word32 a2_1340
	word32 a3_1341
	word32 a4_1342
	memcpy(s4_126 + 248<i32>, sp_119 + 16<i32>, 32<i32>, out a1_1339, out a2_1340, out a3_1341, out a4_1342, out a5_1343, out a6_1344, out a7_1345)
	word32 a1_1346
	mbedtls_zeroize(sp_119 + 16<i32>, 64<i32>, out a1_1346)
	word32 sp_256
	word32 s1_261
	word32 s11_269
	word32 a0_270
	word32 a4_271
	word32 t5_282
	word32 t6_283
	word32 tp_1024
	call Mem85[s4_126 + 208<i32>:int32] (retsize: 0;)
		uses: a0:s9_244,a1:48<i32>,a2:0x230C6E7C<32>,a3:s7_181,a4:64<i32>,a5:sp_183 + 80<i32>,a6:256<i32>,mstatus:mstatus,ra:ra_246,s0:s0_249,s1:s1_250,s10:s10_254,s11:s11_255,s2:s2_247,s3:s3_251,s4:s4_216,s5:s5_252,s6:s6_248,s7:s7_181,s8:s8_253,s9:s9_244,t5:t5_282,t6:t6_283,tp:tp_1024
		defs: a0:a0_270,a4:a4_271,ra:ra_257,s1:s1_261,s11:s11_269,s2:s2_258,sp:sp_256,t5:t5_282,t6:t6_283,tp:tp_1024
	word32 s0_284 = a0_270
	branch a0_270 == 0<32> l2308B12C
l2308B12C:
	word32 a4_432
	word32 s1_418
	word32 s5_306
	word32 s7_308
	word32 s8_309
	word32 s9_310
	word32 a4_1350
	word32 a5_1351
	word32 a7_1352
	word32 s6_1354
	word32 s10_1355
	word32 s11_1356
	word32 t4_1357
	word32 s4_1353
	word32 a2_1348
	word32 a3_1349
	word32 a1_1347
	mbedtls_debug_print_msg(ra, s2_121, 3<32>, 0x230C6E8C<32>, mbedtls_ssl_get_ciphersuite_name(Mem85[s11_269:int32], a4_271), out a1_1347, out a2_1348, out a3_1349, out a4_1350, out a5_1351, out a7_1352, out s4_1353, out s5_306, out s6_1354, out s7_308, out s8_309, out s9_310, out s10_1355, out s11_1356, out t4_1357)
	word32 a3_1361
	word32 a5_1363
	word32 a7_1364
	word32 a4_1362
	word32 a2_1360
	word32 a1_1359
	word32 a0_1358
	mbedtls_debug_print_buf(ra, 3<32>, s9_310, out a0_1358, out a1_1359, out a2_1360, out a3_1361, out a4_1362, out a5_1363, out a7_1364)
	word32 a0_1365
	word32 a1_1366
	word32 a2_1367
	word32 a4_1369
	word32 a5_1370
	word32 a7_1371
	word32 a3_1368
	mbedtls_debug_print_buf(ra, 4<32>, s7_308, out a0_1365, out a1_1366, out a2_1367, out a3_1368, out a4_1369, out a5_1370, out a7_1371)
	word32 a3_365
	word32 a4_366
	word32 a7_1376
	word32 a5_1375
	word32 a2_1374
	word32 a1_1373
	word32 a0_1372
	mbedtls_debug_print_buf(ra, 4<32>, sp_256 + 80<i32>, out a0_1372, out a1_1373, out a2_1374, out a3_365, out a4_366, out a5_1375, out a7_1376)
	word32 a1_1377
	mbedtls_zeroize(s7_308, 64<i32>, out a1_1377)
	Mem378[(Mem85[s5_306 + 4<i32>:int32] >>u 3<i32>) + 4<i32>:word32] = s1_261
	word32 a5_381 = CONVERT(Mem378[s5_306 + 1<i32>:byte], byte, word32) + 0xFFFFFFFA<32> & 253<i32>
	branch a5_381 != 0<32> l2308B1E6
l2308B1E6:
	word32 a0_387
	word32 a3_390
	word32 a4_391
	word32 a5_392
	word32 mstatus_394
	word32 s1_396
	word32 s2_397
	word32 s8_400
	word32 s3_1393
	word32 s4_1394
	word32 a2_1392
	ra = mbedtls_md_setup(ra, a0_270, s1_261, s1_261 + 56<i32>, s8_309, 1<32>, a3_365, a4_366, a5_381, s2_121, mstatus, Mem378[sp_256 + 16<i32>:word32], Mem378[sp_256 + 20<i32>:word32], Mem378[sp_256 + 56<i32>:word32], Mem378[sp_256 + 264<i32>:word32], Mem378[sp_256 + 328<i32>:word32], out s1_396, out a0_387, out a2_1392, out a3_390, out a4_391, out a5_392, out s2_397, out s3_1393, out s4_1394, out s8_400, out mstatus_394)
	s0_284 = a0_387
	branch a0_387 != 0<32> l2308B206
l2308B1F6:
	word32 a0_409
	word32 s8_422
	word32 a4_1421
	word32 mstatus_1425
	word32 s3_1423
	word32 s4_1424
	word32 a5_1422
	word32 a3_1420
	word32 a2_1419
	ra = mbedtls_md_setup(ra, a0_387, s1_396, s1_396 + 68<i32>, s8_400, 1<32>, a3_390, a4_391, a5_392, s2_397, mstatus_394, Mem378[sp_256 + 16<i32>:word32], Mem378[sp_256 + 20<i32>:word32], Mem378[sp_256 + 56<i32>:word32], Mem378[sp_256 + 264<i32>:word32], Mem378[sp_256 + 328<i32>:word32], out s1_418, out a0_409, out a2_1419, out a3_1420, out a4_1421, out a5_1422, out s2_121, out s3_1423, out s4_1424, out s8_422, out mstatus_1425)
	s0_284 = a0_409
	branch a0_409 == 0<32> l2308B216
l2308B216:
	word32 a0_429 = mbedtls_md_get_size(s8_422)
	Mem430[a0_429 + 20<i32>:word32] = s1_418
	a5_431 = Mem430[s5_306 + 12<i32>:int32]
	Mem433[a5_431 + 12<i32>:word32] = s1_418
	a4_432 = 7<32>
	branch CONVERT(Mem433[s5_306 + 1<i32>:byte], byte, word32) != 7<32> l2308B2E2
l2308B2E2:
	word32 a3_435 = Mem433[s5_306 + 20<i32>:int32]
	word32 a0_439 = a0_429 + a3_435 - (a0_429 & a3_435)
	Mem440[a0_439 + 8<i32>:word32] = s1_418
	word32 a4_441 = Mem440[s2_121 + 12<i32>:int32]
	a4_432 = a4_441 + 0xFFFFFFFE<32>
	branch a4_441 >u 0xFFFFFFFD<32> l2308B304
l2308B304:
l2308B300:
	a5_431 = a5_431 + a0_439
l2308B22E:
	Mem447[a0_429 + 8<i32>:word32] = s1_418
l2308B206:
	a5_151 = s0_284
	a3_153 = 699<i32>
l2308B1C6:
	Mem454[0x18<32>:word32] = s1_261
	Mem456[0x14<32>:word32] = s1_261
	s1_418 = Mem456[4<32>:word32]
	Mem458[s1_418 + 20<i32>:word32] = 0<32>
	word32 a4_459 = CONVERT(Mem458[0x20<32>:byte], byte, word32)
	word32 a5_460 = 8<32>
	a4_432 = a4_459 & 2<32>
	branch (a4_459 & 2<32>) != 0<32> l2308B1E0
l2308B1DE:
	a5_460 = 0x10<32>
l2308B1E0:
	a5_431 = a5_460 + 8<32>
l2308B1E2:
	Mem468[a5_431 + 8<i32>:word32] = s1_418
l2308B230:
	word32 a4_561
	word32 s4_531
	word32 s7_532
	word32 a2_565
	Mem481[sp_256:word32] = a4_432
	word32 a1_499
	word32 s5_507
	word32 s11_1406
	word32 t4_1407
	word32 s10_1405
	word32 a2_1395
	word32 a3_1396
	word32 s9_1404
	word32 s8_1403
	word32 a4_1397
	word32 a7_1399
	word32 s4_1400
	word32 s6_1401
	word32 s7_1402
	word32 a5_1398
	mbedtls_debug_print_msg(ra, s2_121, 3<32>, 0x230C6ED0<32>, a5_431, out a1_499, out a2_1395, out a3_1396, out a4_1397, out a5_1398, out a7_1399, out s4_1400, out s5_507, out s6_1401, out s7_1402, out s8_1403, out s9_1404, out s10_1405, out s11_1406, out t4_1407)
	word32 a5_516 = Mem481[s2_121:int32]
	word32 s1_523 = Mem481[a5_516 + 20<i32>:word32]
	branch (CONVERT(Mem481[a5_516 + 116<i32>:uint16], uint16, word32) & 1<32>) != 0<32> l2308B316
l2308B316:
	word32 s6_530 = (a5_516 << 1<u32>) + a1_499 + (sp_256 + 80<i32>)
	s4_531 = (a5_516 << 1<u32>) + (sp_256 + 80<i32>)
	s7_532 = sp_256 + 80<i32> + a5_516
	branch s0_284 != 0<32> l2308B328
l2308B326:
l2308B328:
	word32 a1_544
	word32 a2_1426
	word32 a3_1427
	word32 a5_1429
	word32 a6_1430
	word32 a7_1431
	word32 a4_1428
	memcpy(s1_523 + 40<i32>, a1_499 + s6_530, s0_284, out a1_544, out a2_1426, out a3_1427, out a4_1428, out a5_1429, out a6_1430, out a7_1431)
	word32 a7_1436
	word32 a6_1435
	word32 a5_1434
	word32 a3_1433
	word32 a1_1432
	memcpy(s1_523 + 24<i32>, a1_544 + s0_284 + s6_530, s0_284, out a1_1432, out a2_565, out a3_1433, out a4_561, out a5_1434, out a6_1435, out a7_1436)
l2308B274:
	s4_531 = (a5_516 << 1<u32>) + a1_499 + (sp_256 + 80<i32>)
	branch s0_284 != 0<32> l2308B286
l2308B284:
l2308B286:
	word32 a1_592
	word32 a4_1410
	word32 a5_1411
	word32 a6_1412
	word32 a7_1413
	word32 a2_1408
	word32 a3_1409
	memcpy(s1_523 + 24<i32>, a1_499 + s4_531, s0_284, out a1_592, out a2_1408, out a3_1409, out a4_1410, out a5_1411, out a6_1412, out a7_1413)
	word32 a7_1418
	word32 a1_1414
	word32 a3_1415
	word32 a5_1416
	word32 a6_1417
	memcpy(s1_523 + 40<i32>, a1_592 + s0_284 + s4_531, s0_284, out a1_1414, out a2_565, out a3_1415, out a4_561, out a5_1416, out a6_1417, out a7_1418)
	s7_532 = sp_256 + 80<i32>
l2308B2A2:
	a5_431 = Mem481[s2_121 + 12<i32>:int32]
	branch a5_431 <= 0<32> l2308B346
l2308B346:
l2308B310:
l2308B048:
	word32 a3_1451
	word32 s4_1455
	word32 s5_1456
	word32 t4_1463
	word32 s6_1457
	word32 s8_1459
	word32 s9_1460
	word32 s10_1461
	word32 s11_1462
	word32 s7_1458
	word32 a5_1453
	word32 a7_1454
	word32 a4_1452
	word32 a2_1450
	word32 a1_1449
	mbedtls_debug_print_msg(ra, s2_121, 1<32>, 0x230C6E20<32>, a5_431, out a1_1449, out a2_1450, out a3_1451, out a4_1452, out a5_1453, out a7_1454, out s4_1455, out s5_1456, out s6_1457, out s7_1458, out s8_1459, out s9_1460, out s10_1461, out s11_1462, out t4_1463)
l2308B2AA:
	word32 a2_681
	word32 s4_684
	word32 s8_685
	word32 a4_689
	word32 a5_690
	word32 s2_693
	word32 s1_712
	word32 s2_713
	word32 a0_723
	word32 s1_731
	word32 s0_1440
	word32 a2_1441
	word32 a5_1448
	word32 a4_1442
	word32 s3_1444
	word32 s4_1445
	word32 s8_1446
	word32 a4_1447
	word32 a5_1443
	word32 s1_1438
	word32 s3_1439
	word32 s0_1437
	ra = mbedtls_cipher_setup(mbedtls_md_hmac_starts(mbedtls_md_hmac_starts(ra, Mem481[a2_565 + 20<i32>:word32] + 56<i32>, s7_532, a2_565, a4_561, a5_431, s2_121, s4_531, out s0_1437, out s1_1438, out a2_681, out a4_689, out a5_690, out s2_693, out s3_1439, out s4_684, out s8_685), Mem481[a2_681 + 20<i32>:word32] + 68<i32>, s8_685, a2_681, a4_689, a5_690, s2_693, s4_684, out s0_1440, out s1_712, out a2_1441, out a4_1442, out a5_1443, out s2_713, out s3_1444, out s4_1445, out s8_1446), s1_712 + 80<i32>, s5_507, out s1_731, out a0_723, out a4_1447, out a5_1448)
	branch a0_723 == 0<32> l2308B354
l2308B354:
	word32 a0_738
	word32 a4_743
	word32 a5_744
	word32 s1_746
	ra = mbedtls_cipher_setup(ra, s1_731 + 144<i32>, s5_507, out s1_746, out a0_738, out a4_743, out a5_744)
	branch a0_738 == 0<32> l2308B374
l2308B374:
	word32 a4_759
	word32 a5_760
	word32 a0_756 = mbedtls_cipher_setkey(s1_712 + 80<i32>, Mem481[s5_507 + 4<i32>:int32], 1<32>, a4_743, a5_744, out a4_759, out a5_760)
	branch a0_756 == 0<32> l2308B396
l2308B396:
	word32 a5_1465
	word32 a4_1464
	word32 a0_767 = mbedtls_cipher_setkey(s1_746, Mem481[s5_507 + 4<i32>:int32], 0<32>, a4_759, a5_760, out a4_1464, out a5_1465)
	branch a0_767 == 0<32> l2308B3B8
l2308B3B8:
	word32 a5_775 = 2<32>
	branch CONVERT(Mem481[s5_507 + 1<i32>:byte], byte, word32) != 2<32> l2308B416
l2308B3C2:
	word32 a5_780
	word32 a4_1482
	word32 a0_778 = mbedtls_cipher_set_padding_mode(s1_712 + 80<i32>, 4<32>, 2<32>, out a4_1482, out a5_780)
	branch a0_778 == 0<32> l2308B3EC
l2308B3EC:
	word32 a4_1483
	word32 a0_784 = mbedtls_cipher_set_padding_mode(s1_746, 4<32>, a5_780, out a4_1483, out a5_775)
	branch a0_784 == 0<32> l2308B416
l2308B416:
	word32 a1_1466
	mbedtls_zeroize(sp_256 + 80<i32>, 256<i32>, out a1_1466)
	word32 s8_1477
	word32 s4_1473
	word32 a2_1468
	word32 a1_1467
	word32 a3_1469
	word32 s7_1476
	word32 s6_1475
	word32 s5_1474
	word32 a7_1472
	word32 s9_1478
	word32 s11_1480
	word32 a5_1471
	word32 s10_1479
	word32 a4_1470
	word32 t4_1481
	mbedtls_debug_print_msg(ra, s2_713, 2<32>, 0x230C6F50<32>, a5_775, out a1_1467, out a2_1468, out a3_1469, out a4_1470, out a5_1471, out a7_1472, out s4_1473, out s5_1474, out s6_1475, out s7_1476, out s8_1477, out s9_1478, out s10_1479, out s11_1480, out t4_1481)
l2308B3F8:
	word32 a1_1497
	word32 a2_1498
	word32 a3_1499
	word32 a4_1500
	word32 a5_1501
	word32 s4_1502
	word32 s5_1503
	word32 s6_1504
	word32 s7_1505
	word32 s8_1506
	word32 s9_1507
	word32 s10_1508
	word32 s11_1509
	mbedtls_debug_print_ret(ra, 1<32>, 917<i32>, a0_784, out a1_1497, out a2_1498, out a3_1499, out a4_1500, out a5_1501, out s4_1502, out s5_1503, out s6_1504, out s7_1505, out s8_1506, out s9_1507, out s10_1508, out s11_1509)
l2308B3CE:
	word32 a1_1484
	word32 a2_1485
	word32 a3_1486
	word32 a4_1487
	word32 a5_1488
	word32 s4_1489
	word32 s5_1490
	word32 s6_1491
	word32 s7_1492
	word32 s8_1493
	word32 s9_1494
	word32 s10_1495
	word32 s11_1496
	mbedtls_debug_print_ret(ra, 1<32>, 910<i32>, a0_778, out a1_1484, out a2_1485, out a3_1486, out a4_1487, out a5_1488, out s4_1489, out s5_1490, out s6_1491, out s7_1492, out s8_1493, out s9_1494, out s10_1495, out s11_1496)
l2308B3A8:
	a5_151 = a0_767
	a3_153 = 900<i32>
l2308B386:
	a5_151 = a0_756
	a3_153 = 892<i32>
l2308B364:
	a5_151 = a0_738
	a3_153 = 884<i32>
l2308B2D2:
	a5_151 = a0_723
	a3_153 = 877<i32>
l2308B118:
	a5_151 = a0_270
	a3_153 = 662<i32>
l2308B126:
l2308B0B0:
	word32 s11_1390
	word32 a3_1380
	word32 a4_1381
	word32 s10_1389
	word32 s9_1388
	word32 a5_1382
	word32 s5_1384
	word32 s6_1385
	word32 s7_1386
	word32 s8_1387
	word32 s4_1383
	word32 a1_1378
	word32 a2_1379
	mbedtls_debug_print_ret(ra, 1<32>, a3_153, a5_151, out a1_1378, out a2_1379, out a3_1380, out a4_1381, out a5_1382, out s4_1383, out s5_1384, out s6_1385, out s7_1386, out s8_1387, out s9_1388, out s10_1389, out s11_1390)
l2308AFCC:
	a4_936 = 0x230C6DFC<32>
	a5_937 = CONVERT(Mem29[a5_69 + 9<i32>:byte], byte, word32)
l2308AF62:
	a5_937 = CONVERT(Mem29[a5_64 + 8<i32>:byte], byte, word32)
	a4_936 = 0x230C6DDC<32>
l2308AF72:
	word32 a7_1301
	word32 s7_1305
	word32 s8_1306
	word32 s9_1307
	word32 s11_1309
	word32 t4_1310
	word32 s10_1308
	word32 s5_1303
	word32 s6_1304
	word32 s4_1302
	word32 a5_1300
	word32 a4_1299
	word32 a3_1298
	word32 a1_1296
	word32 a2_1297
	mbedtls_debug_print_msg(ra, a0_30, 1<32>, a4_936, a5_937, out a1_1296, out a2_1297, out a3_1298, out a4_1299, out a5_1300, out a7_1301, out s4_1302, out s5_1303, out s6_1304, out s7_1305, out s8_1306, out s9_1307, out s10_1308, out s11_1309, out t4_1310)
l2308AF84:
	return
mbedtls_ssl_derive_keys_exit:


word32 mbedtls_ssl_flush_output(word32 ra, word32 a0, word32 a5, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_write
//      altcp_mbedtls_lower_sent
//      altcp_mbedtls_lower_poll
//      mbedtls_ssl_write_record
//      mbedtls_ssl_write
//      mbedtls_ssl_read
//      mbedtls_ssl_handshake_client_step
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a5:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s10 s11 s2 s3 s4 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mbedtls_ssl_flush_output_entry:
l2308B43A:
	word32 a4_125
	word32 s10_129
	word32 a5_126
	word32 s11_130
	word32 a3_122
	word32 s5_132
	word32 s9_136
	word32 s7_134
	word32 s1_113
	word32 a1_123
	word32 a5_31
	word32 s6_391
	word32 s7_392
	word32 s8_393
	word32 s5_390
	word32 s10_395
	word32 a7_388
	word32 s11_396
	word32 t4_397
	word32 s9_394
	word32 s4_389
	word32 a4_387
	word32 a1_384
	word32 a2_385
	word32 a3_386
	word32 a0_121 = mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C7068<32>, a5, out a1_384, out a2_385, out a3_386, out a4_387, out a5_31, out a7_388, out s4_389, out s5_390, out s6_391, out s7_392, out s8_393, out s9_394, out s10_395, out s11_396, out t4_397)
	word32 s2_10 = 0x230C8000<32>
	word32 s0_110 = Mem28[a5_31 + 16<i32>:word32]
	branch a5_31 != 0<32> l2308B4A2
l2308B4A2:
	word32 a5_141 = Mem28[s0_110 + 172<i32>:int32]
	branch a5_141 == 0<32> l2308B51E
l2308B51E:
l2308B4A8:
	s3 = 0x230C8000<32>
	word32 s4_131 = 0x230C7000<32>
	s2_10 = 0xFFF9A3<32>
l2308B4BA:
	word32 a6_164 = Mem61[s0_110 + 172<i32>:int32]
	word32 s0_64 = Mem61[a0_121:word32]
	branch a6_164 != 0<32> l2308B53A
l2308B53A:
	word32 a5_404
	word32 a1_405
	word32 a2_406
	word32 a3_407
	word32 a4_408
	word32 a5_409
	word32 a7_410
	word32 s4_411
	word32 s5_412
	word32 s6_413
	word32 s7_414
	word32 s8_415
	word32 s9_416
	word32 s10_417
	word32 s11_418
	word32 t4_419
	word32 a0_81 = mbedtls_debug_print_msg(ra, s0_64, 2<32>, s4_131 + 196<i32>, Mem66[s0_64 + 168<i32>:int32] + mbedtls_ssl_hdr_len.isra.1(a0_121, out a5_404), out a1_405, out a2_406, out a3_407, out a4_408, out a5_409, out a7_410, out s4_411, out s5_412, out s6_413, out s7_414, out s8_415, out s9_416, out s10_417, out s11_418, out t4_419)
	word32 s0_100 = Mem66[a0_81:word32]
	word32 a5_102
	word32 a0_107 = mbedtls_ssl_hdr_len.isra.1(a0_81, out a5_102) + (Mem66[s0_100 + 168<i32>:int32] - Mem66[s0_100 + 172<i32>:int32])
	word32 a0_111
	call a5_102 (retsize: 0;)
		uses: a0:a0_107
		defs: a0:a0_111
	s0_110 = Mem66[a0_107 + 28<i32>:word32]
	s1_113 = a0_111
	word32 a2_420
	word32 s6_421
	word32 s8_422
	a0_121 = mbedtls_debug_print_ret(ra, 2<32>, 0xFFF9A3<32>, a0_111, out a1_123, out a2_420, out a3_122, out a4_125, out a5_126, out s4_131, out s5_132, out s6_421, out s7_134, out s8_422, out s9_136, out s10_129, out s11_130)
	branch a0_111 <= 0<32> l2308B48C
l2308B592:
	a5_141 = Mem66[s0_110 + 172<i32>:int32]
	Mem143[s0_110 + 172<i32>:word32] = a5_141 - a0_111
l2308B4C4:
	word32 a4_144 = 8<32>
l2308B4C6:
	word32 a5_148 = CONVERT(Mem146[a5_141 + 116<i32>:uint16], uint16, word32)
	word32 s0_147 = Mem146[a5_141:word32]
	a5_141 = a5_148 & 2<32>
	branch (a5_148 & 2<32>) >=u a4_144 l2308B4EC
l2308B4D2:
	word32 a2_152 = a4_144 + -1<i32>
	word32 a3_153 = Mem146[s0_147 + 144<i32>:int32] + a2_152
	a5_141 = CONVERT(Mem146[a3_153:byte], byte, word32) + 1<32> & 255<i32>
	Mem157[a3_153:byte] = SLICE(a5_141, byte, 0)
	branch a5_141 == 0<32> l2308B5A0
l2308B5A0:
	a4_144 = a2_152 & 255<i32>
l2308B4EC:
	word32 a5_162 = CONVERT(Mem160[a5_141 + 116<i32>:uint16], uint16, word32)
	s0_110 = Mem160[a5_141:word32]
	a5_141 = a5_162 & 2<32>
	branch (a5_162 & 2<32>) == 0<32> l2308B4F8
l2308B4F6:
	a6_164 = 2<32>
l2308B4F8:
	branch a4_144 != a6_164 l2308B5A6
l2308B5A6:
l2308B52E:
	word32 a2_429
	word32 a7_430
	word32 s4_431
	word32 s6_432
	word32 s8_433
	word32 t4_434
	mbedtls_debug_print_msg(ra, s0_110, 2<32>, 0x230C70B4<32>, a5_141, out a1_123, out a2_429, out a3_122, out a4_125, out a5_126, out a7_430, out s4_431, out s5_132, out s6_432, out s7_134, out s8_433, out s9_136, out s10_129, out s11_130, out t4_434)
	s1_113 = 0<32>
l2308B4FC:
	word32 a2_423
	word32 a7_424
	word32 s4_425
	word32 s6_426
	word32 s8_427
	word32 t4_428
	mbedtls_debug_print_msg(ra, s0_110, 1<32>, 0x230C70F4<32>, a5_162 & 2<32>, out a1_123, out a2_423, out a3_122, out a4_125, out a5_126, out a7_424, out s4_425, out s5_132, out s6_426, out s7_134, out s8_427, out s9_136, out s10_129, out s11_130, out t4_428)
	s1_113 = 0xF9000480<32>
l2308B46E:
	word32 a2_398
	word32 a7_399
	word32 s4_400
	word32 s6_401
	word32 s8_402
	word32 t4_403
	mbedtls_debug_print_msg(ra, s0_110, 1<32>, 0x230C7078<32>, a5_31, out a1_123, out a2_398, out a3_122, out a4_125, out a5_126, out a7_399, out s4_400, out s5_132, out s6_401, out s7_134, out s8_402, out s9_136, out s10_129, out s11_130, out t4_403)
	s1_113 = 0xF8FFFF00<32>
l2308B48C:
	0<32> = dwArg0128
	s1Out = s1_113
	a0Out = s1_113
	a1Out = a1_123
	a2Out = dwArg0100
	a3Out = a3_122
	a4Out = a4_125
	a5Out = a5_126
	s2Out = s2_10
	s3Out = s3
	s4Out = dwArg78
	s5Out = s5_132
	s7Out = s7_134
	s9Out = s9_136
	s10Out = s10_129
	s11Out = s11_130
	return dwArgE4
mbedtls_ssl_flush_output_exit:


word32 mbedtls_ssl_recv_flight_completed(word32 ra, word32 a2, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg0138, word32 dwArg0178, ptr32 & a5Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_finished
//      mbedtls_ssl_handshake_server_step
// MayUse:  a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a5 ra s10
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
mbedtls_ssl_recv_flight_completed_entry:
l2308B5BA:
	word32 a0_9 = Mem7[a5 + 48<i32>:word32]
	word32 a4_18
	word32 a5_19
	word32 a3_129
	word32 s4_130
	ssl_flight_free(a0_9, a2, Mem7[a0_9 + 56<i32>:word32], mstatus, dwArg0138, dwArg0178, out a3_129, out a4_18, out a5_19, out s4_130)
	Mem28[a5_19 + 56<i32>:word32] = 0<32>
	Mem30[a5_19 + 60<i32>:word32] = 0<32>
	word32 s0_31 = Mem30[a5_19 + 48<i32>:word32]
	word32 a5_32 = Mem30[a4_18 + 32<i32>:word32]
	Mem33[a4_18 + 64<i32>:word32] = a5_32
	word32 a3_37
	word32 a5_39
	word32 s10_44
	word32 s9_139
	word32 s11_140
	word32 s6_137
	word32 s7_138
	word32 s4_135
	word32 s5_136
	word32 a1_133
	word32 a4_134
	word32 s0_131
	word32 s1_132
	word32 ra_41 = ssl_set_timer(ra, s0_31, 0<32>, a5_32, dwArg00, dwArg04, out s0_131, out s1_132, out a1_133, out a3_37, out a4_134, out a5_39, out s4_135, out s5_136, out s6_137, out s7_138, out s9_139, out s10_44, out s11_140)
	branch a3_37 != 0x16<32> l2308B608
l2308B5EE:
	branch CONVERT(Mem33[0x16<32>:byte], byte, word32) != 0x14<32> l2308B608
l2308B608:
	Mem64[a5_39 + 52<i32>:byte] = 0<8>
l2308B5FA:
	Mem66[a5_39 + 52<i32>:byte] = 3<8>
l2308B600:
	a5Out = a5_39
	s10Out = s10_44
	return ra_41
mbedtls_ssl_recv_flight_completed_exit:


word32 mbedtls_ssl_send_flight_completed(word32 ra, word32 a4, word32 a5, word32 dwArg00, word32 dwArg04, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_finished
//      mbedtls_ssl_handshake_client_step
// MayUse:  a4:[0..31] a5:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: a5 ra s1 s11
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
mbedtls_ssl_send_flight_completed_entry:
l2308B60E:
	word32 a4_74
	Mem16[Mem7[a4 + 104<i32>:word32] + 48<i32>:word32] = a5
	word32 a5_24
	word32 a1_25
	word32 s11_146
	word32 t4_147
	word32 s9_144
	word32 s10_145
	word32 s7_142
	word32 s8_143
	word32 s5_140
	word32 s6_141
	word32 a7_138
	word32 s4_139
	word32 a3_136
	word32 a4_137
	word32 a2_135
	mbedtls_debug_print_msg(ra, Mem16[a5 + 48<i32>:word32], 3<32>, 0x230C7C88<32>, Mem16[a5 + 48<i32>:word32], out a1_25, out a2_135, out a3_136, out a4_137, out a5_24, out a7_138, out s4_139, out s5_140, out s6_141, out s7_142, out s8_143, out s9_144, out s10_145, out s11_146, out t4_147)
	word32 a3_48
	word32 a5_50
	word32 s1_54
	word32 s11_56
	word32 s10_156
	word32 s7_154
	word32 s9_155
	word32 s5_152
	word32 s6_153
	word32 a4_150
	word32 s4_151
	word32 s0_148
	word32 a1_149
	word32 ra_52 = ssl_set_timer(ra, Mem16[a5_24 + 48<i32>:word32], a1_25, Mem16[a1_25 + 48<i32>:word32], dwArg00, dwArg04, out s0_148, out s1_54, out a1_149, out a3_48, out a4_150, out a5_50, out s4_151, out s5_152, out s6_153, out s7_154, out s9_155, out s10_156, out s11_56)
	branch a3_48 != 0x16<32> l2308B66A
l2308B650:
	branch CONVERT(Mem16[0x16<32>:byte], byte, word32) != 0x14<32> l2308B66A
l2308B66A:
	a4_74 = 2<32>
l2308B65C:
	a4_74 = 3<32>
l2308B65E:
	Mem79[a5_50 + 52<i32>:byte] = SLICE(a4_74, byte, 0)
	s1Out = s1_54
	a5Out = a5_50
	s11Out = s11_56
	return ra_52
mbedtls_ssl_send_flight_completed_exit:


word32 mbedtls_ssl_update_handshake_status(word32 ra, word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record
// MayUse:  a1:[0..31] a4:[0..31] ra:[0..31]
// LiveOut: a5
// Trashed: a0 a2 a4 a5
// Preserved: a1 ra s0 sp
mbedtls_ssl_update_handshake_status_entry:
l2308B66E:
	word32 a0_5 = Mem0[a4 + 4<i32>:word32]
	word32 a5_11 = 0x10<32>
	branch a4 == 0x10<32> l2308B68E
l2308B67E:
	word32 a0_13 = Mem10[0x40<32>:word32]
	branch false l2308B68E
l2308B682:
	call Mem10[0xD4<32>:int32] (retsize: 0;)
		uses: a0:Mem10[a1 + 100<i32>:word32],a1:a1,a2:Mem10[a0_13 + 128<i32>:int32],a4:a4,ra:ra,s0:a0_5
		defs: a4:a4_20,a5:a5_23
l2308B68E:
	word32 a5_29 = CONVERT(Mem10[a5_11 + 116<i32>:uint16], uint16, word32)
	word32 a5_30 = a5_29 & 2<32>
	branch (a5_29 & 2<32>) == 0<32> l2308B6A2
l2308B698:
	branch (a5_29 & 2<32>) == 0<32> l2308B6A2
l2308B69C:
	a5_30 = Mem10[a4 + 32<i32>:word32]
	Mem35[a4 + 0x21<32>:word32] = a5_30
l2308B6A2:
	return a5_30
mbedtls_ssl_update_handshake_status_exit:


void mbedtls_ssl_optimize_checksum(word32 ra, word32 a0, word32 a1, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: sp
mbedtls_ssl_optimize_checksum_entry:
l2308B6AA:
	branch CONVERT(Mem0[a1 + 9<i32>:byte], byte, word32) == 7<32> l2308B6C4
l2308B6C4:
l2308B6DC_thunk_mbedtls_debug_print_msg:
	word32 a1_74
	word32 a2_75
	word32 a3_76
	word32 a4_77
	word32 a5_78
	word32 a7_79
	word32 s4_80
	word32 s5_81
	word32 s6_82
	word32 s7_83
	word32 s8_84
	word32 s9_85
	word32 s10_86
	word32 s11_87
	word32 t4_88
	mbedtls_debug_print_msg(ra, a0, 1<32>, 0x230C6E20<32>, a5, out a1_74, out a2_75, out a3_76, out a4_77, out a5_78, out a7_79, out s4_80, out s5_81, out s6_82, out s7_83, out s8_84, out s9_85, out s10_86, out s11_87, out t4_88)
	return
l2308B6B4:
	Mem39[0xCB<32>:word32] = 0x2308AD0A<32>
	return
mbedtls_ssl_optimize_checksum_exit:


void mbedtls_ssl_reset_checksum(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a5
// Preserved: sp
mbedtls_ssl_reset_checksum_entry:
l2308B6E0:
	word32 a0_5 = Mem0[a0 + 48<i32>:word32]
l2308B6E8_thunk_mbedtls_sha256_starts:
	mbedtls_sha256_starts(a0_5 + 80<i32>, 0<32>)
	return
mbedtls_ssl_reset_checksum_exit:


word32 mbedtls_ssl_session_init(word32 ra, word32 a0, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_setup
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_ssl_session_init_entry:
l2308B6EC:
l2308B6F2_thunk_memset:
	word32 a4_11
	word32 t1_17
	word32 a0_18
	word32 a1_19
	word32 a2_20
	word32 a3_21
	word32 a5_22
	word32 ra_13 = memset(ra, a0, 0<32>, 116<i32>, out t1_17, out a0_18, out a1_19, out a2_20, out a3_21, out a4_11, out a5_22)
	a4Out = a4_11
	return ra_13
mbedtls_ssl_session_init_exit:


word32 mbedtls_ssl_init(word32 ra, word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_setup
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_ssl_init_entry:
l2308B6F6:
l2308B6FC_thunk_memset:
	word32 a3_10
	word32 a4_11
	word32 a5_12
	word32 t1_19
	word32 a0_20
	word32 a1_21
	word32 a2_22
	word32 ra_13 = memset(ra, a0, 0<32>, 192<i32>, out t1_19, out a0_20, out a1_21, out a2_22, out a3_10, out a4_11, out a5_12)
	a3Out = a3_10
	a4Out = a4_11
	a5Out = a5_12
	return ra_13
mbedtls_ssl_init_exit:


word32 mbedtls_ssl_conf_authmode(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cipstart
//      altcp_tls_create_config
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a1 a5
// Trashed: a1 a5
// Preserved: sp
mbedtls_ssl_conf_authmode_entry:
l2308B700:
	word32 a5_5 = (a1 & 3<32>) << 2<u32>
	word32 a1_10 = CONVERT(Mem0[a0 + 116<i32>:uint16], uint16, word32) & 0xFFFFFFF3<32> | a5_5
	Mem11[a0 + 116<i32>:word16] = SLICE(a1_10, word16, 0)
	a5Out = a5_5
	return a1_10
mbedtls_ssl_conf_authmode_exit:


void mbedtls_ssl_conf_rng(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_ssl_conf_rng_entry:
l2308B714:
	Mem5[a1 + 24<i32>:word32] = a0
	Mem7[a2 + 28<i32>:word32] = a0
	return
mbedtls_ssl_conf_rng_exit:


void mbedtls_ssl_set_bio(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_setup
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_ssl_set_bio_entry:
l2308B71A:
	Mem5[a1 + 28<i32>:word32] = a0
	Mem7[a2 + 16<i32>:word32] = a0
	Mem9[a3 + 20<i32>:word32] = a0
	Mem11[a4 + 24<i32>:word32] = a0
	return
mbedtls_ssl_set_bio_exit:


word32 mbedtls_ssl_conf_own_cert(word32 ra, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgF8, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config_client_2wayauth
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
mbedtls_ssl_conf_own_cert_entry:
l2308B724:
l2308B728_thunk_ssl_append_key_cert:
	word32 a0_13
	word32 a2_15
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 s0_21
	word32 s1_22
	word32 s2_23
	word32 s3_24
	word32 ra_20 = ssl_append_key_cert(ra, a1, a2, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out s0_21, out s1_22, out a0_13, out a2_15, out a3_16, out a4_17, out a5_18, out s2_23, out s3_24)
	s0Out = s0_21
	s1Out = s1_22
	a0Out = a0_13
	a2Out = a2_15
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s2Out = s2_23
	s3Out = s3_24
	return ra_20
mbedtls_ssl_conf_own_cert_exit:


void mbedtls_ssl_conf_ca_chain(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config_client_common
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
mbedtls_ssl_conf_ca_chain_entry:
l2308B72C:
	Mem5[a1 + 80<i32>:word32] = a0
	Mem7[a2 + 84<i32>:word32] = a0
	return
mbedtls_ssl_conf_ca_chain_exit:


word32 mbedtls_ssl_set_hostname(word32 ra, word32 a1, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cipstart
// MayUse:  a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a1 a4 a5 ra s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_ssl_set_hostname_entry:
l2308B732:
	branch a1 != 0<32> l2308B74E
l2308B74E:
	word32 a0_26
	word32 a3_18
	word32 a2_156
	word32 a5_157
	word32 a1_21
	word32 a4_101
	word32 a0_17 = strlen(a1, out a1_21, out a2_156, out a3_18, out a4_101, out a5_157)
	word32 s2_117 = a0
	word32 a5_104 = 255<i32>
	word32 s1_115 = a0_17
	branch a0_17 >u 255<i32> l2308B73C
l2308B73C:
	a0_26 = 0xF8FFFF00<32>
l2308B76C:
	word32 s0_37
	word32 a2_158
	word32 a3_159
	word32 s8_160
	ra = mycalloc(ra, a0_17, 1<32>, a0_17 + 1<i32>, a3_18, a4_101, 255<i32>, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_37, out s1_115, out a1_21, out a2_158, out a3_159, out a4_101, out a5_104, out s2_117, out s3, out s4, out s8_160)
	Mem47[s2_117 + 180<i32>:word32] = 1<32>
	branch false l2308B792
l2308B792:
	a0_26 = 0xF8000100<32>
l2308B77C:
	word32 a2_161
	word32 a3_162
	word32 a5_163
	word32 a6_164
	word32 a7_165
	memcpy(1<32>, s0_37, s1_115, out a1_21, out a2_161, out a3_162, out a4_101, out a5_163, out a6_164, out a7_165)
	a5_104 = Mem47[s2_117 + 180<i32>:int32]
	s1_115 = s1_115 + a5_104
	Mem68[s1_115:byte] = 0<8>
	a0_26 = 0<32>
l2308B742:
	0<32> = dwArg38
	s1Out = s1_115
	a0Out = a0_26
	a1Out = a1_21
	a4Out = a4_101
	a5Out = a5_104
	s2Out = s2_117
	s3Out = s3
	s4Out = s4
	return ra
l2308B734:
	s1Out = s1
	a0Out = 0xF8FFFF00<32>
	a1Out = a1
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return ra
mbedtls_ssl_set_hostname_exit:


word32 mbedtls_ssl_conf_alpn_protocols(word32 a0, word32 a1, word32 dwArg0128, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cipstart
// MayUse:  a0:[0..31] a1:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 a5 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mbedtls_ssl_conf_alpn_protocols_entry:
l2308B79A:
	word32 s1_104 = 0<32>
	a0_23 = a0
l2308B7B4:
	word32 a0_23
	branch a0_23 != 0<32> l2308B7CC
l2308B7CC:
	word32 a2_118
	word32 a3_119
	word32 a0_29 = strlen(a0_23, out a1, out a2_118, out a3_119, out a4, out a5)
	s1_104 = s1_104 + a0_29
	a0_23 = a0_29 + 0xFFFFFFFF<32>
	branch a0_29 >u 0xFFFFFF01<32> l2308B7E4
l2308B7DA:
	branch s1_104 >=u 0x10000000<32> l2308B7E4
l2308B7E4:
	a0_23 = 0xF8FFFF00<32>
l2308B7DE:
l2308B7B8:
	Mem45[a0 + 96<i32>:word32] = a1
l2308B7BC:
	0<32> = dwArg0128
	a0Out = a0_23
	a4Out = a4
	a5Out = a5
	s2Out = a0
	s3Out = 254<i32>
	s4Out = 0x10000000<32>
	return s1_104
mbedtls_ssl_conf_alpn_protocols_exit:


word32 mbedtls_ssl_get_alpn_protocol(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_connected_callback
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
mbedtls_ssl_get_alpn_protocol_entry:
l2308B7EC:
	return Mem0[a0 + 184<i32>:int32]
mbedtls_ssl_get_alpn_protocol_exit:


word32 mbedtls_ssl_get_bytes_avail(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_handle_rx_appldata
// MayUse:  a5:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
mbedtls_ssl_get_bytes_avail_entry:
l2308B7F2:
	word32 a0_5 = Mem0[a5 + 104<i32>:word32]
	branch a5 == 0<32> l2308B7FA
l2308B7FA:
	return 0<32>
l2308B7F6:
	return Mem0[a0_5 + 112<i32>:word32]
mbedtls_ssl_get_bytes_avail_exit:


word32 mbedtls_ssl_get_record_expansion(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_sndbuf
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] ra:[0..31] s0:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a7 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4
// Preserved: s0 sp
mbedtls_ssl_get_record_expansion_entry:
l2308B7FE:
	word32 a0_5 = Mem0[a4 + 56<i32>:word32]
	branch a4 != 0<32> l2308B808
l2308B808:
	word32 a5_32
	word32 a0_51
	branch a3 == 0<32> l2308B83E
l2308B812:
	a5 = CONVERT(Mem10[a3 + 1<i32>:byte], byte, word32)
	branch a5 == 2<32> l2308B836
l2308B836:
	a3 = Mem10[a5 + 20<i32>:word32]
	s0 = s0 + a5
l2308B81C:
	branch a5 <u 2<32> l2308B83E
l2308B820:
	a5 = a5 + 0xFFFFFFFA<32> & 255<i32>
	branch a5 >u 2<32> l2308B83E
l2308B83E:
	word32 s11_163
	word32 s10_162
	word32 s9_161
	word32 s8_160
	word32 s7_159
	word32 s6_158
	word32 s5_157
	word32 s4_156
	word32 a7_155
	word32 a4_154
	word32 a2_153
	word32 a1_152
	word32 t4_164
	mbedtls_debug_print_msg(ra, a0_5, 1<32>, 0x230C6E20<32>, a5, out a1_152, out a2_153, out a3, out a4_154, out a5_32, out a7_155, out s4_156, out s5_157, out s6_158, out s7_159, out s8_160, out s9_161, out s10_162, out s11_163, out t4_164)
	a0_51 = 0xF9000400<32>
l2308B82A:
l2308B82C:
	a0_51 = mbedtls_ssl_hdr_len.isra.1(Mem10[a0_5:word32], out a5_32) + s0
l2308B860:
	a3Out = a3
	a5Out = a5_32
	return a0_51
l2308B802:
	word32 a0_68 = Mem0[a0_5:word32]
l2308B804_thunk_mbedtls_ssl_hdr_len.isra.1:
	word32 a5_70
	word32 a0_69 = mbedtls_ssl_hdr_len.isra.1(a0_68, out a5_70)
	a3Out = a3
	a5Out = a5_70
	return a0_69
mbedtls_ssl_get_record_expansion_exit:


word32 mbedtls_ssl_get_max_frag_len(word32 a3, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_sndbuf
//      mbedtls_ssl_write
// MayUse:  a3:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
mbedtls_ssl_get_max_frag_len_entry:
l2308B868:
	word32 a5_14 = Mem0[(Mem0[a5 + 116<i32>:word32] >>u 4<i32> & 0x1C<32>) + 0x230C80E0<32>:word32]
	branch a3 == 0<32> l2308B890
l2308B880:
	word32 a4_18 = Mem0[(CONVERT(Mem0[a3 + 112<i32>:byte], byte, word32) << 2<i32>) + 0x230C80E0<32>:word32]
	branch a4_18 >=u a5_14 l2308B890
l2308B88E:
	a5_14 = a4_18
l2308B890:
	a5Out = a5_14
	return a5_14
mbedtls_ssl_get_max_frag_len_exit:


word32 mbedtls_ssl_handshake_step(word32 ra, word32 a0, word32 a4, word32 s5, word32 mstatus, word32 dwArg18, word32 dwArg78, word32 dwArgC4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s5:[0..31] Stack +0018:[0..31] Stack +0078:[0..31] Stack +00C4:[0..31]
// LiveOut: a0 a4 a5 mstatus ra s1 s2 s3 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_ssl_handshake_step_entry:
l2308B894:
	branch a0 == 0<32> l2308B8CC
l2308B8CC:
	s1Out = s1
	a0Out = 0xF8FFFF00<32>
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5
	mstatusOut = mstatus
	return ra
l2308B896:
	word32 a0_109
	branch a4 == 0<32> l2308B8D4
l2308B8D4:
	a0_109 = 0xF8FFFF00<32>
l2308B8A2:
	word32 a5_16 = CONVERT(Mem10[a4 + 116<i32>:uint16], uint16, word32)
	a5 = a5_16 & 1<32>
	branch (a5_16 & 1<32>) == 0<32> l2308B8B6
l2308B8B6:
	word32 a5_34
	ra = mbedtls_ssl_handshake_client_step(ra, a5_16 & 1<32>, mstatus, dwArg78, out s1, out a0_109, out a4, out a5_34, out s2, out s3, out s5, out mstatus)
	word32 a5_50 = CONVERT(Mem10[a5_34 + 116<i32>:uint16], uint16, word32)
	a5 = a5_50 & 1<32>
	branch (a5_50 & 1<32>) != 0<32> l2308B8AA
l2308B8C4:
	s1Out = s1
	a0Out = a0_109
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5
	mstatusOut = mstatus
	return ra
l2308B8AA:
l2308B8B2_thunk_mbedtls_ssl_handshake_server_step:
	word32 a4_72
	word32 a5_73
	word32 s3_79
	word32 s5_81
	word32 mstatus_94
	word32 a0_93 = mbedtls_ssl_handshake_server_step(ra, a5, s5, mstatus, dwArg18, dwArgC4, out a4_72, out a5_73, out s3_79, out s5_81, out mstatus_94)
	s1Out = s1
	a0Out = a0_93
	a4Out = a4_72
	a5Out = a5_73
	s2Out = s2
	s3Out = s3_79
	s5Out = s5_81
	mstatusOut = mstatus_94
	return ra
mbedtls_ssl_handshake_step_exit:


word32 mbedtls_ssl_handshake(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg58, word32 dwArgA4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_lower_recv
//      mbedtls_ssl_write
//      mbedtls_ssl_read
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0058:[0..31] Stack +00A4:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_handshake_entry:
l2308B8DC:
	word32 s0_120
	branch a0 == 0<32> l2308B94C
l2308B8EA:
	word32 a0_16 = Mem13[a5:word32]
	s1 = a0_16
	branch a5 == 0<32> l2308B94C
l2308B94C:
	s0_120 = 0xF8FFFF00<32>
l2308B8F0:
	word32 s9_272
	word32 a3_266
	word32 a7_267
	word32 s4_268
	word32 s7_270
	word32 s6_269
	word32 s8_271
	word32 a2_265
	word32 a1_264
	word32 s10_273
	word32 s11_274
	word32 t4_275
	word32 a4_32
	word32 s5_37
	word32 a5_100
	mbedtls_debug_print_msg(ra, a0_16, 2<32>, 0x230C71A0<32>, a5, out a1_264, out a2_265, out a3_266, out a4_32, out a5_100, out a7_267, out s4_268, out s5_37, out s6_269, out s7_270, out s8_271, out s9_272, out s10_273, out s11_274, out t4_275)
	s2 = 0x230C8000<32>
	s3 = 0x10<32>
l2308B90E:
	s1 = Mem13[a5_100 + 4<i32>:word32]
	branch a5_100 != s3 l2308B918
l2308B918:
	word32 a0_57
	ra = mbedtls_ssl_handshake_step(ra, s1, a4_32, s5_37, mstatus, dwLoc08, dwArg58, dwArgA4, out s1, out a0_57, out a4_32, out a5_100, out s2, out s3, out s5_37, out mstatus)
	s0_120 = a0_57
	branch a0_57 == 0<32> l2308B90E
l2308B914:
	s0_120 = 0<32>
l2308B922:
	word32 a2_276
	word32 a7_277
	word32 s4_278
	word32 s8_279
	word32 s9_280
	word32 s10_281
	word32 s11_282
	word32 t4_283
	mbedtls_debug_print_msg(ra, s1, 2<32>, 0x230C71B0<32>, a5_100, out a1, out a2_276, out a3, out a4, out a5, out a7_277, out s4_278, out s5, out s6, out s7, out s8_279, out s9_280, out s10_281, out s11_282, out t4_283)
l2308B93C:
	s1Out = s1
	a0Out = s0_120
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
mbedtls_ssl_handshake_exit:


word32 mbedtls_ssl_transform_free(word32 ra, word32 a0, word32 a4, word32 a5, word32 mstatus, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_handshake_wrapup_free_hs_transform
//      mbedtls_ssl_setup
//      mbedtls_ssl_free
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a0 a1 a2 a5
// Trashed: a0 a1 a2 a5
// Preserved: s0 sp
mbedtls_ssl_transform_free_entry:
l2308B954:
	branch a0 == 0<32> l2308B98E
l2308B98E:
	a1Out = a1
	a2Out = a2
	a5Out = a5
	return a0
l2308B956:
	word32 a5_14
	mbedtls_cipher_free(ra, a0 + 80<i32>, a5, out a5_14)
	word32 a5_18
	word32 a5_24
	word32 a5_28
	mbedtls_md_free(ra, a0 + 68<i32>, mbedtls_md_free(ra, a0 + 56<i32>, mbedtls_cipher_free(ra, a0 + 144<i32>, a5_14, out a5_18), a4, a5_18, mstatus, out a5_24), a4, a5_24, mstatus, out a5_28)
l2308B98A_thunk_mbedtls_zeroize:
	word32 a1_35
	word32 a0_34 = mbedtls_zeroize(a0, 208<i32>, out a1_35)
	a1Out = a1_35
	a2Out = dwArg10
	a5Out = a5_28
	return a0_34
mbedtls_ssl_transform_free_exit:


word32 mbedtls_ssl_handshake_free(word32 s1, word32 a0, word32 a2, word32 mstatus, word32 dwArg0138, word32 dwArg0148, word32 dwArg0178, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ssl_handshake_wrapup_free_hs_transform
//      mbedtls_ssl_setup
//      mbedtls_ssl_free
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] s1:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
mbedtls_ssl_handshake_free_entry:
l2308B990:
	branch a0 == 0<32> l2308B9D6
l2308B9D6:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1
l2308B992:
	word32 a5_14
	word32 a0_13 = mbedtls_sha256_free(a0 + 80<i32>, out a5_14)
l2308B9A6:
	branch a0_13 == 0<32> l2308B9B2
l2308B9B2:
	word32 a2_23
	word32 a5_26
	word32 a0_29
	word32 s0_128
	word32 s1_129
	word32 a1_130
	word32 a3_131
	word32 a4_132
	word32 a6_133
	word32 s4_134
	word32 t3_135
	vPortFree(a0_13, a2, a5_14, mstatus, dwArg0148, dwArg0188, out s0_128, out s1_129, out a0_29, out a1_130, out a2_23, out a3_131, out a4_132, out a5_26, out a6_133, out s4_134, out t3_135)
	word32 a2_36
	word32 a5_39
	word32 a0_42
	word32 s0_136
	word32 s1_137
	word32 a1_138
	word32 a3_139
	word32 a4_140
	word32 a6_141
	word32 s4_142
	word32 t3_143
	vPortFree(a0_29, a2_23, a5_26, mstatus, dwArg0148, dwArg0188, out s0_136, out s1_137, out a0_42, out a1_138, out a2_36, out a3_139, out a4_140, out a5_39, out a6_141, out s4_142, out t3_143)
	word32 s0_48 = Mem12[a0_42 + 56<i32>:word32]
	word32 a3_52
	word32 a4_53
	word32 a5_54
	word32 s4_57
	word32 s1_56 = ssl_flight_free(a0_42, a2_36, a5_39, mstatus, dwArg0138, dwArg0178, out a3_52, out a4_53, out a5_54, out s4_57)
l2308B9D2_thunk_mbedtls_zeroize:
	word32 a1_152
	a0Out = mbedtls_zeroize(s0_48, 348<i32>, out a1_152)
	a2Out = dwArg10
	a3Out = a3_52
	a4Out = a4_53
	a5Out = a5_54
	s4Out = s4_57
	return s1_56
mbedtls_ssl_handshake_free_exit:
l2308B9A8:
	word32 s0_144
	word32 a0_145
	word32 a1_146
	word32 a3_147
	word32 a4_148
	word32 a6_149
	word32 s4_150
	word32 t3_151
	vPortFree(Mem12[s1 + 8<i32>:word32], a2, a5_14, mstatus, dwArg0148, dwArg0188, out s0_144, out s1, out a0_145, out a1_146, out a2, out a3_147, out a4_148, out a5_14, out a6_149, out s4_150, out t3_151)
	a0_13 = s1


word32 ssl_handshake_wrapup_free_hs_transform(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_wrapup
//      mbedtls_ssl_read_record_layer
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
ssl_handshake_wrapup_free_hs_transform_entry:
l2308B9D8:
	word32 a2_23
	word32 a0_41
	word32 a2_43
	word32 a5_46
	word32 a3_138
	word32 a1_137
	word32 a4_139
	word32 a5_140
	word32 a7_141
	word32 s4_142
	word32 s5_143
	word32 s6_144
	word32 s7_145
	word32 s8_146
	word32 s9_147
	word32 s10_148
	word32 s11_149
	word32 t4_150
	word32 a3_151
	word32 a4_152
	word32 s4_153
	mbedtls_ssl_handshake_free(0x230C8000<32>, mbedtls_debug_print_msg(ra, a0, 3<32>, 0x230C81EC<32>, a5, out a1_137, out a2_23, out a3_138, out a4_139, out a5_140, out a7_141, out s4_142, out s5_143, out s6_144, out s7_145, out s8_146, out s9_147, out s10_148, out s11_149, out t4_150), a2_23, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_41, out a2_43, out a3_151, out a4_152, out a5_46, out s4_153)
	word32 a4_55
	word32 a0_59
	word32 s0_154
	word32 s1_155
	word32 a1_156
	word32 a2_157
	word32 a3_158
	word32 a6_159
	word32 s4_160
	word32 t3_161
	word32 a5_56
	vPortFree(a0_41, a2_43, a5_46, mstatus, dwArg0148, dwArg0188, out s0_154, out s1_155, out a0_59, out a1_156, out a2_157, out a3_158, out a4_55, out a5_56, out a6_159, out s4_160, out t3_161)
	Mem66[Mem16[a0_59 + 60<i32>:word32] + 48<i32>:word32] = 0<32>
	branch a0_59 == 0<32> l2308BA1C
l2308BA12:
	word32 a2_69
	word32 a5_70
	word32 a1_162
	word32 s0_163
	word32 s1_164
	word32 a0_165
	word32 a1_166
	word32 a2_167
	word32 a3_168
	word32 a4_169
	word32 a6_170
	word32 s4_171
	word32 t3_172
	vPortFree(mbedtls_ssl_transform_free(ra, a0_59, a4_55, a5_56, mstatus, out a1_162, out a2_69, out a5_70), a2_69, a5_70, mstatus, dwArg0148, dwArg0188, out s0_163, out s1_164, out a0_165, out a1_166, out a2_167, out a3_168, out a4_169, out a5_56, out a6_170, out s4_171, out t3_172)
l2308BA1C:
	word32 s0_86 = Mem66[a5_56 + 64<i32>:word32]
	Mem88[s0_86 + 64<i32>:word32] = 0<32>
	Mem89[a5_56 + 60<i32>:word32] = s0_86
l2308BA42_thunk_mbedtls_debug_print_msg:
	word32 a5_104
	word32 a1_173
	word32 a2_174
	word32 a3_175
	word32 a4_176
	word32 a7_177
	word32 s4_178
	word32 s5_179
	word32 s6_180
	word32 s7_181
	word32 s8_182
	word32 s9_183
	word32 s10_184
	word32 s11_185
	word32 t4_186
	mbedtls_debug_print_msg(ra, s0_86, 3<32>, 0x230C820C<32>, a5_56, out a1_173, out a2_174, out a3_175, out a4_176, out a5_104, out a7_177, out s4_178, out s5_179, out s6_180, out s7_181, out s8_182, out s9_183, out s10_184, out s11_185, out t4_186)
	return a5_104
ssl_handshake_wrapup_free_hs_transform_exit:


word32 mbedtls_ssl_session_free(word32 ra, word32 a0, word32 a1, word32 a2, word32 a5, word32 mstatus, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_wrapup
//      mbedtls_ssl_setup
//      mbedtls_ssl_free
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: ra s0 s2 s3 s8 sp
mbedtls_ssl_session_free_entry:
l2308BA46:
	branch a0 == 0<32> l2308BA74
l2308BA74:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1
l2308BA48:
	word32 a0_10 = Mem8[a0 + 92<i32>:word32]
	branch a0_10 == 0<32> l2308BA5E
l2308BA54:
	word32 a0_14
	word32 a2_16
	word32 a5_19
	word32 s0_123
	word32 s1_124
	word32 a1_125
	word32 s2_126
	word32 s3_127
	word32 s4_128
	word32 s8_129
	mbedtls_x509_crt_free(ra, a0_10, a1, a5, mstatus, dwArg0128, dwArg0168, out s0_123, out s1_124, out a0_14, out a1_125, out a2_16, out a5_19, out s2_126, out s3_127, out s4_128, out s8_129)
	word32 s0_130
	word32 s1_131
	word32 a1_132
	word32 a3_133
	word32 a4_134
	word32 a6_135
	word32 s4_136
	word32 t3_137
	vPortFree(a0_14, a2_16, a5_19, mstatus, dwArg0148, dwArg0188, out s0_130, out s1_131, out a0_10, out a1_132, out a2, out a3_133, out a4_134, out a5, out a6_135, out s4_136, out t3_137)
l2308BA5E:
	word32 a3_52
	word32 a4_53
	word32 a5_54
	word32 s1_55
	word32 s0_60
	word32 s4_61
	word32 a0_118
	word32 a1_119
	word32 a2_120
	word32 a6_121
	word32 t3_122
	vPortFree(a0_10, a2, a5, mstatus, dwArg0148, dwArg0188, out s0_60, out s1_55, out a0_118, out a1_119, out a2_120, out a3_52, out a4_53, out a5_54, out a6_121, out s4_61, out t3_122)
l2308BA70_thunk_mbedtls_zeroize:
	word32 a1_138
	a0Out = mbedtls_zeroize(s0_60, 116<i32>, out a1_138)
	a2Out = dwArg10
	a3Out = a3_52
	a4Out = a4_53
	a5Out = a5_54
	s4Out = s4_61
	return s1_55
mbedtls_ssl_session_free_exit:


void mbedtls_ssl_handshake_wrapup(word32 ra, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg38, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0038:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s10 s11 s2 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: mstatus ra s0 sp
mbedtls_ssl_handshake_wrapup_entry:
l2308BA76:
	word32 s2_22 = Mem11[a5 + 328<i32>:int32]
	word32 s1_16 = 0x230C8000<32>
	word32 a2_26
	word32 s11_340
	word32 t4_341
	word32 s7_336
	word32 s9_338
	word32 s10_339
	word32 s8_337
	word32 a7_332
	word32 s5_334
	word32 s6_335
	word32 s4_333
	word32 a1_25
	word32 a4_28
	word32 a3_27
	word32 a5_121
	word32 a0_23 = mbedtls_debug_print_msg(ra, Mem11[a5 + 48<i32>:word32], 3<32>, 0x230C71C0<32>, a5, out a1_25, out a2_26, out a3_27, out a4_28, out a5_121, out a7_332, out s4_333, out s5_334, out s6_335, out s7_336, out s8_337, out s9_338, out s10_339, out s11_340, out t4_341)
	branch a0_23 == 0<32> l2308BAB2
l2308BAA8:
	word32 a0_44
	word32 a2_46
	word32 a5_49
	word32 s4_344
	word32 a3_342
	word32 a4_343
	mbedtls_ssl_session_free(ra, a0_23, a1_25, a2_26, a5_121, mstatus, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out a0_44, out a2_46, out a3_342, out a4_343, out a5_49, out s4_344)
	word32 s4_348
	word32 t3_349
	word32 a2_346
	word32 a6_347
	word32 s0_345
	vPortFree(a0_44, a2_46, a5_49, mstatus, dwArg0148, dwArg0188, out s0_345, out s1_16, out a0_23, out a1_25, out a2_346, out a3_27, out a4_28, out a5_121, out a6_347, out s4_348, out t3_349)
l2308BAB2:
	word32 s0_72 = Mem11[a4_28:word32]
	Mem73[s0_72 + 44<i32>:word32] = 0<32>
	Mem74[a1_25 + 40<i32>:word32] = s0_72
	branch a5_121 == 0<32> l2308BAE8
l2308BAC0:
	branch a3_27 == 0<32> l2308BAE8
l2308BAC4:
	branch s2_22 != 0<32> l2308BAE8
l2308BAC8:
	word32 s0_87
	word32 a0_91
	word32 a6_112
	call a5_121 (retsize: 0;)
		uses: a4:Mem74[a0_80 + 40<i32>:word32],a5:a5_75,a6:a6_112,mstatus:mstatus,ra:ra,s0:s0_72,s1:s1_82,s2:s2_22,Stack +0128:dwArg0118,Stack +0148:dwArg0138,Stack +0158:dwArg0148,Stack +0168:dwArg0158,Stack +0188:dwArg0178,Stack +0198:dwArg0188
		defs: a0:a0_91,a5:a5_92,a6:a6_112,mstatus:mstatus_111,ra:ra_89,s0:s0_87
	branch a0_91 == 0<32> l2308BAE8
l2308BACE:
	word32 t4_363
	word32 s9_360
	word32 s10_361
	word32 s11_362
	word32 s7_358
	word32 s8_359
	word32 s5_356
	word32 s6_357
	word32 a7_354
	word32 s4_355
	word32 a3_352
	word32 a4_353
	word32 a1_350
	word32 a2_351
	mbedtls_debug_print_msg(ra, s0_87, 1<32>, 0x230C71D4<32>, a5_121, out a1_350, out a2_351, out a3_352, out a4_353, out a5_121, out a7_354, out s4_355, out s5_356, out s6_357, out s7_358, out s8_359, out s9_360, out s10_361, out s11_362, out t4_363)
l2308BAE8:
	word32 a5_161
	word32 a5_142 = CONVERT(Mem74[a5_121 + 116<i32>:uint16], uint16, word32)
	word32 s0_141 = Mem74[a5_121:word32]
	word32 a5_143 = a5_142 & 2<32>
	branch (a5_142 & 2<32>) == 0<32> l2308BB44
l2308BAF2:
	s0_141 = Mem74[(a5_142 & 2<32>) + 48<i32>:word32]
	a5_143 = Mem74[(a5_142 & 2<32>) + 56<i32>:word32]
	branch a5_143 == 0<32> l2308BB44
l2308BB44:
	a5_161 = ssl_handshake_wrapup_free_hs_transform(ra, s0_141, a5_143, mstatus, dwArg0118, dwArg0128, dwArg0138, dwArg0158, dwArg0168, dwArg0178)
l2308BAF8:
	word32 a1_365
	word32 a5_185
	word32 s0_188
	word32 s1_364
	word32 a3_366
	word32 a4_367
	word32 s4_368
	word32 s5_369
	word32 s6_370
	word32 s7_371
	word32 s9_372
	word32 s10_373
	word32 s11_374
	ra = ssl_set_timer(ra, s0_141, 0<32>, a5_143, dwArg00, dwArg04, out s0_188, out s1_364, out a1_365, out a3_366, out a4_367, out a5_185, out s4_368, out s5_369, out s6_370, out s7_371, out s9_372, out s10_373, out s11_374)
	word32 a1_375
	word32 a2_376
	word32 a3_377
	word32 a4_378
	word32 a7_379
	word32 s4_380
	word32 s5_381
	word32 s6_382
	word32 s7_383
	word32 s8_384
	word32 s9_385
	word32 s10_386
	word32 s11_387
	word32 t4_388
	mbedtls_debug_print_msg(ra, s0_188, 3<32>, 0x230C71F0<32>, a5_185, out a1_375, out a2_376, out a3_377, out a4_378, out a5_161, out a7_379, out s4_380, out s5_381, out s6_382, out s7_383, out s8_384, out s9_385, out s10_386, out s11_387, out t4_388)
l2308BB1A:
	word32 s0_231 = Mem74[a5_161 + 4<i32>:word32]
	word32 a5_235 = a5_161 + 1<32>
	Mem236[a5_235 + 4<i32>:word32] = s0_231
	0<32> = dwArg38
l2308BB40_thunk_mbedtls_debug_print_msg:
	word32 a1_389
	word32 a2_390
	word32 a3_391
	word32 a4_392
	word32 a5_393
	word32 a7_394
	word32 s4_395
	word32 s5_396
	word32 s6_397
	word32 s7_398
	word32 s8_399
	word32 s9_400
	word32 s10_401
	word32 s11_402
	word32 t4_403
	mbedtls_debug_print_msg(ra, s0_231, 3<32>, 0x230C7218<32>, a5_235, out a1_389, out a2_390, out a3_391, out a4_392, out a5_393, out a7_394, out s4_395, out s5_396, out s6_397, out s7_398, out s8_399, out s9_400, out s10_401, out s11_402, out t4_403)
	return
mbedtls_ssl_handshake_wrapup_exit:


word32 ssl_handshake_init(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_setup
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a3 a4 ra s1 s2 s3 s4 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
ssl_handshake_init_entry:
l2308BB4C:
	word32 a0_103 = Mem11[a0 + 64<i32>:word32]
	branch a0_103 == 0<32> l2308BB60
l2308BB5C:
	a0_103 = mbedtls_ssl_transform_free(ra, a0_103, a4, a5, mstatus, out a1, out a2, out a5)
l2308BB60:
	branch a0_103 == 0<32> l2308BB68
l2308BB64:
	s1 = mbedtls_ssl_session_free(ra, a0_103, a1, a2, a5, mstatus, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out a0_103, out a2, out a3, out a4, out a5, out s4)
l2308BB68:
	branch a0_103 == 0<32> l2308BB70
l2308BB6C:
	word32 a2_624
	s1 = mbedtls_ssl_handshake_free(s1, a0_103, a2, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_103, out a2_624, out a3, out a4, out a5, out s4)
l2308BB70:
	branch a5 != 0<32> l2308BB80
l2308BB74:
	word32 s0_88
	word32 s8_627
	word32 a1_625
	word32 a2_626
	ra = mycalloc(ra, s1, 1<32>, 208<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_88, out s1, out a1_625, out a2_626, out a3, out a4, out a5, out s2, out s3, out s4, out s8_627)
	Mem98[0x41<32>:word32] = s0_88
	a0_103 = 1<32>
l2308BB80:
	branch a5 != 0<32> l2308BB90
l2308BB84:
	word32 s0_117
	word32 s8_630
	word32 a1_628
	word32 a2_629
	ra = mycalloc(ra, s1, 1<32>, 116<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_117, out s1, out a1_628, out a2_629, out a3, out a4, out a5, out s2, out s3, out s4, out s8_630)
	Mem127[0x2D<32>:word32] = s0_117
	a0_103 = 1<32>
l2308BB90:
	word32 a4_248
	word32 a3_259
	word32 a0_264
	word32 s0_146
	branch a5 == 0<32> l2308BBE6
l2308BBE6:
	word32 a1_693
	word32 a2_694
	word32 a3_695
	word32 a4_696
	word32 s8_697
	ra = mycalloc(ra, s1, 1<32>, 348<i32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_146, out s1, out a1_693, out a2_694, out a3_695, out a4_696, out a5, out s2, out s3, out s4, out s8_697)
	Mem156[0x31<32>:word32] = s0_146
	a0_103 = 1<32>
	branch true l2308BB94
l2308BBF4:
l2308BB94:
	s0_146 = Mem158[a5 + 64<i32>:word32]
	branch a5 != 0<32> l2308BBF6
l2308BBF6:
	s0_146 = Mem158[a0_103 + 44<i32>:word32]
	branch a0_103 == 0<32> l2308BB98
l2308BBFA:
	s2 = s1 + 80<i32>
	word32 t1_664
	word32 a0_665
	word32 a1_666
	word32 a2_667
	word32 a3_668
	word32 a4_663
	word32 a4_675
	word32 a4_669
	word32 a5_670
	word32 a3_671
	word32 a4_672
	word32 a5_673
	word32 a3_674
	word32 a5_676
	word32 t1_677
	word32 a0_678
	word32 a1_679
	word32 a2_680
	word32 a3_681
	word32 a4_682
	word32 a5_683
	word32 t1_684
	word32 a3_685
	word32 a5_686
	ra = mbedtls_sha256_init(memset(mbedtls_md_init(mbedtls_md_init(mbedtls_cipher_init(mbedtls_cipher_init(memset(mbedtls_ssl_session_init(ra, a0_103, out a4_663), s1, 0<32>, 208<i32>, out t1_664, out a0_665, out a1_666, out a2_667, out a3_668, out a4_669, out a5_670), s1 + 80<i32>), s1 + 144<i32>), s1 + 56<i32>, out a3_671, out a4_672, out a5_673), s1 + 68<i32>, out a3_674, out a4_675, out a5_676), s1, 0<32>, 348<i32>, out t1_677, out a0_678, out a1_679, out a2_680, out a3_681, out a4_682, out a5_683), s2, out t1_684, out a3_685, out a4_248, out a5_686)
	mbedtls_sha256_starts(s2, 0<32>)
	Mem258[s1 + 196<i32>:word32] = 0x2308AD00<32>
	Mem261[2<32>:word32] = s1
	Mem262[0xF<32>:word32] = s1
	a3_259 = 2<32>
	a0_264 = 0<32>
	word32 a5_265 = CONVERT(Mem262[0x77<32>:uint16], uint16, word32)
	branch (a5_265 & 2<32>) == 0<32> l2308BBDA
l2308BC6C:
	Mem269[a4_248 + 68<i32>:word32] = a5_265 & 2<32>
	word32 s0_271 = Mem269[a4_248 + 48<i32>:word32]
	word32 a5_272 = CONVERT(Mem269[(a5_265 & 2<32>) + 116<i32>:uint16], uint16, word32)
	branch (a5_272 & 1<32>) != 0<32> l2308BC8E
l2308BC8E:
	Mem274[a4_248 + 52<i32>:byte] = 2<8>
l2308BC7E:
	Mem275[a4_248 + 52<i32>:byte] = 0<8>
l2308BC82:
	word32 s0_687
	word32 a1_688
	word32 a5_689
	word32 s5_690
	word32 s10_691
	word32 s11_692
	ra = ssl_set_timer(ra, s0_271, 0<32>, a5_272 & 1<32>, dwArg00, dwArg04, out s0_687, out s1, out a1_688, out a3_259, out a4_248, out a5_689, out s4, out s5_690, out s6, out s7, out s9, out s10_691, out s11_692)
	a0_264 = 0<32>
l2308BB98:
	word32 t3_648
	word32 s1_642
	word32 a1_643
	word32 a3_644
	word32 a6_646
	word32 a4_645
	word32 s4_647
	word32 s5_636
	word32 s8_637
	word32 s10_638
	word32 a5_320
	word32 a2_322
	word32 a2_343
	word32 a5_346
	word32 a0_349
	word32 s11_639
	word32 t4_640
	word32 s0_641
	word32 a1_631
	word32 a3_632
	word32 a4_633
	word32 a7_634
	word32 s4_635
	vPortFree(mbedtls_debug_print_msg(ra, s0_146, 1<32>, 0x230C81C8<32>, a5, out a1_631, out a2_322, out a3_632, out a4_633, out a5_320, out a7_634, out s4_635, out s5_636, out s6, out s7, out s8_637, out s9, out s10_638, out s11_639, out t4_640), a2_322, a5_320, mstatus, dwArg0148, dwArg0188, out s0_641, out s1_642, out a0_349, out a1_643, out a2_343, out a3_644, out a4_645, out a5_346, out a6_646, out s4_647, out t3_648)
	word32 a2_356
	word32 a5_359
	word32 a0_362
	word32 s0_649
	word32 a3_652
	word32 a1_651
	word32 s1_650
	word32 a6_654
	word32 s4_655
	word32 t3_656
	word32 a4_653
	vPortFree(a0_349, a2_343, a5_346, mstatus, dwArg0148, dwArg0188, out s0_649, out s1_650, out a0_362, out a1_651, out a2_356, out a3_652, out a4_653, out a5_359, out a6_654, out s4_655, out t3_656)
	word32 s0_378
	word32 a2_659
	word32 a5_660
	word32 a6_661
	word32 t3_662
	word32 a0_657
	word32 a1_658
	vPortFree(a0_362, a2_356, a5_359, mstatus, dwArg0148, dwArg0188, out s0_378, out s1, out a0_657, out a1_658, out a2_659, out a3_259, out a4_248, out a5_660, out a6_661, out s4, out t3_662)
	Mem382[s0_378 + 48<i32>:word32] = 0<32>
	Mem383[s0_378 + 64<i32>:word32] = 0<32>
	Mem384[s0_378 + 44<i32>:word32] = 0<32>
	a0_264 = 0xF8000100<32>
l2308BBDA:
	0<32> = dwArg38
	s1Out = s1
	a0Out = a0_264
	a3Out = a3_259
	a4Out = a4_248
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s6Out = s6
	s7Out = s7
	s9Out = s9
	return ra
ssl_handshake_init_exit:


word32 mbedtls_ssl_setup(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_setup
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a3 a4 ra s1 s2 s3 s4 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
mbedtls_ssl_setup_entry:
l2308BC94:
	Mem15[a1:word32] = a0
	word32 a3_26
	word32 a4_27
	word32 a5_28
	word32 s1_32
	word32 a1_261
	word32 a2_262
	word32 s4_263
	word32 s8_264
	word32 s0_31
	word32 s3_238
	word32 s2_236
	word32 ra_30 = mycalloc(ra, a1, 1<32>, 0x400013D<32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_31, out s1_32, out a1_261, out a2_262, out a3_26, out a4_27, out a5_28, out s2_236, out s3_238, out s4_263, out s8_264)
	Mem41[0x51<32>:word32] = s0_31
	branch false l2308BD2E
l2308BCB4:
	word32 a5_48
	word32 s1_52
	word32 a1_281
	word32 a2_282
	word32 a3_283
	word32 a4_284
	word32 s4_285
	word32 s8_286
	ra_30 = mycalloc(ra_30, s1_32, 1<32>, s2_236 + 317<i32>, a3_26, a4_27, a5_28, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s0_31, out s1_52, out a1_281, out a2_282, out a3_283, out a4_284, out a5_48, out s2_236, out s3_238, out s4_285, out s8_286)
	Mem61[s0_31 + 140<i32>:word32] = 1<32>
	branch false l2308BD2E
l2308BD2E:
	word32 a5_75
	word32 a2_77
	word32 s6_85
	word32 s7_86
	word32 s9_88
	word32 a3_98
	word32 a4_99
	word32 s1_101
	word32 s0_106
	word32 s4_107
	word32 a1_265
	word32 a3_266
	word32 a4_267
	word32 a7_268
	word32 s4_269
	word32 s5_270
	word32 s8_271
	word32 s10_272
	word32 s11_273
	word32 t4_274
	word32 a0_275
	word32 a1_276
	word32 a2_277
	word32 a5_278
	word32 a6_279
	word32 t3_280
	vPortFree(mbedtls_debug_print_msg(ra_30, s0_31, 1<32>, 0x230C7CB0<32>, 0x400013D<32>, out a1_265, out a2_77, out a3_266, out a4_267, out a5_75, out a7_268, out s4_269, out s5_270, out s6_85, out s7_86, out s8_271, out s9_88, out s10_272, out s11_273, out t4_274), a2_77, a5_75, mstatus, dwArg0148, dwArg0188, out s0_106, out s1_101, out a0_275, out a1_276, out a2_277, out a3_98, out a4_99, out a5_278, out a6_279, out s4_107, out t3_280)
	Mem110[s0_106 + 80<i32>:word32] = 0<32>
	0<32> = dwArg38
	s1Out = s1_101
	a0Out = 0xF8000100<32>
	a3Out = a3_98
	a4Out = a4_99
	s2Out = s2_236
	s3Out = s3_238
	s4Out = s4_107
	s6Out = s6_85
	s7Out = s7_86
	s9Out = s9_88
	return ra_30
l2308BCC4:
	word32 a5_126
	word32 s0_117 = Mem61[a5_48 + 80<i32>:word32]
	branch (CONVERT(Mem61[s1_52 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308BD10
l2308BD10:
	Mem123[s0_117 + 144<i32>:word32] = 1<32>
	Mem124[a5_48 + 84<i32>:word32] = s0_117
	Mem127[s0_117 + 148<i32>:word32] = 9<32>
	Mem128[s0_117 + 152<i32>:word32] = 0xC<32>
	Mem129[s0_117 + 156<i32>:word32] = 0xE<32>
	Mem130[s0_117 + 160<i32>:word32] = 0xE<32>
	Mem131[a5_48 + 0x60<32>:word32] = s0_117
	a5_126 = a5_48 + 8<32>
l2308BCDE:
	Mem132[s0_117 + 148<i32>:word32] = 1<32>
	Mem133[a5_48 + 88<i32>:word32] = s0_117
	Mem136[s0_117 + 144<i32>:word32] = 4<32>
	Mem137[s0_117 + 152<i32>:word32] = 0xC<32>
	Mem138[s0_117 + 156<i32>:word32] = 0xE<32>
	Mem139[s0_117 + 160<i32>:word32] = 0xE<32>
	Mem140[a5_48 + 0x57<32>:word32] = s0_117
	a5_126 = a5_48 + 3<32>
l2308BCFA:
	Mem143[a5_48 + 103<i32>:word32] = s0_117
	Mem145[a5_48 + 109<i32>:word32] = s0_117
	Mem146[a5_48 + 113<i32>:word32] = s0_117
	0<32> = dwArg38
l2308BD0C_thunk_ssl_handshake_init:
	word32 a0_158
	word32 a3_161
	word32 a4_162
	word32 s1_167
	word32 s2_170
	word32 s3_171
	word32 s4_172
	word32 s6_174
	word32 s7_175
	word32 s9_177
	word32 ra_166 = ssl_handshake_init(ra_30, s1_52, s0_117, a5_48 + 11<i32>, dwArg10, 0xE<32>, a5_48 + 13<i32>, a5_126, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg38, dwArg0108, dwArg0118, dwArg0128, dwArg0138, dwArg0148, dwArg0158, dwArg0168, dwArg0178, dwArg0188, out s1_167, out a0_158, out a3_161, out a4_162, out s2_170, out s3_171, out s4_172, out s6_174, out s7_175, out s9_177)
	s1Out = s1_167
	a0Out = a0_158
	a3Out = a3_161
	a4Out = a4_162
	s2Out = s2_170
	s3Out = s3_171
	s4Out = s4_172
	s6Out = s6_174
	s7Out = s7_175
	s9Out = s9_177
	return ra_166
mbedtls_ssl_setup_exit:


word32 mbedtls_ssl_free(word32 ra, word32 a0, word32 a5, word32 mstatus, word32 dwArg38, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, word32 dwArg0178, word32 dwArg0188, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_dealloc
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31] Stack +0178:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a7 s1 s10 s11 s2 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: a6 s0 sp
mbedtls_ssl_free_entry:
l2308BD6E:
	branch a0 == 0<32> l2308BE54
l2308BE54:
	a4Out = a4
	s2Out = s2
	s4Out = s4
	return a3
l2308BD72:
	word32 a3_424
	word32 a7_425
	word32 s4_426
	word32 s5_427
	word32 s6_428
	word32 s7_429
	word32 s8_430
	word32 s9_431
	word32 s10_432
	word32 s11_433
	word32 t4_434
	word32 a4_27
	word32 a1_106
	word32 a2_118
	word32 a5_102
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C7118<32>, a5, out a1_106, out a2_118, out a3_424, out a4_27, out a5_102, out a7_425, out s4_426, out s5_427, out s6_428, out s7_429, out s8_430, out s9_431, out s10_432, out s11_433, out t4_434)
	word32 s1_103 = 0x230C8000<32>
	word32 a0_105 = Mem20[a0 + 140<i32>:int32]
	branch a0_105 == 0<32> l2308BDB2
l2308BDA0:
	word32 a1_435
	mbedtls_zeroize(a0_105, 0x400013D<32>, out a1_435)
	word32 s0_436
	word32 a3_437
	word32 a6_438
	word32 s4_439
	word32 t3_440
	vPortFree(Mem20[a0 + 140<i32>:int32], a2_118, a5_102, mstatus, dwArg0148, dwArg0188, out s0_436, out s1_103, out a0_105, out a1_106, out a2_118, out a3_437, out a4_27, out a5_102, out a6_438, out s4_439, out t3_440)
l2308BDB2:
	branch a0_105 == 0<32> l2308BDC6
l2308BDB6:
	word32 a1_441
	word32 s0_442
	word32 a3_443
	word32 a6_444
	word32 s4_445
	word32 t3_446
	vPortFree(mbedtls_zeroize(a0_105, 0x400013D<32>, out a1_441), a2_118, a5_102, mstatus, dwArg0148, dwArg0188, out s0_442, out s1_103, out a0_105, out a1_106, out a2_118, out a3_443, out a4_27, out a5_102, out a6_444, out s4_445, out t3_446)
l2308BDC6:
	branch a0_105 == 0<32> l2308BDD4
l2308BDCA:
	word32 a2_95
	word32 a5_96
	word32 a1_447
	word32 s0_448
	word32 a3_449
	word32 a4_450
	word32 a6_451
	word32 s4_452
	word32 t3_453
	vPortFree(mbedtls_ssl_transform_free(ra, a0_105, a4_27, a5_102, mstatus, out a1_447, out a2_95, out a5_96), a2_95, a5_96, mstatus, dwArg0148, dwArg0188, out s0_448, out s1_103, out a0_105, out a1_106, out a2_118, out a3_449, out a4_450, out a5_102, out a6_451, out s4_452, out t3_453)
l2308BDD4:
	branch a0_105 == 0<32> l2308BDFA
l2308BDD8:
	word32 a0_121
	word32 a4_125
	word32 a5_126
	word32 a2_454
	word32 a3_455
	word32 s4_456
	mbedtls_ssl_handshake_free(s1_103, a0_105, a2_118, mstatus, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out a0_121, out a2_454, out a3_455, out a4_125, out a5_126, out s4_456)
	word32 a1_135
	word32 a2_136
	word32 a5_137
	word32 a0_139
	word32 a2_141
	word32 a5_144
	word32 a3_457
	word32 a4_458
	word32 s4_459
	mbedtls_ssl_session_free(ra, mbedtls_ssl_transform_free(ra, a0_121, a4_125, a5_126, mstatus, out a1_135, out a2_136, out a5_137), a1_135, a2_136, a5_137, mstatus, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out a0_139, out a2_141, out a3_457, out a4_458, out a5_144, out s4_459)
	word32 a2_151
	word32 a5_154
	word32 a0_157
	word32 s0_460
	word32 s1_461
	word32 a1_462
	word32 a3_463
	word32 a4_464
	word32 a6_465
	word32 s4_466
	word32 t3_467
	vPortFree(a0_139, a2_141, a5_144, mstatus, dwArg0148, dwArg0188, out s0_460, out s1_461, out a0_157, out a1_462, out a2_151, out a3_463, out a4_464, out a5_154, out a6_465, out s4_466, out t3_467)
	word32 a2_164
	word32 a5_167
	word32 a0_170
	word32 s0_468
	word32 s1_469
	word32 a1_470
	word32 a3_471
	word32 a4_472
	word32 a6_473
	word32 s4_474
	word32 t3_475
	vPortFree(a0_157, a2_151, a5_154, mstatus, dwArg0148, dwArg0188, out s0_468, out s1_469, out a0_170, out a1_470, out a2_164, out a3_471, out a4_472, out a5_167, out a6_473, out s4_474, out t3_475)
	word32 s0_476
	word32 s1_477
	word32 a3_478
	word32 a4_479
	word32 a6_480
	word32 s4_481
	word32 t3_482
	vPortFree(a0_170, a2_164, a5_167, mstatus, dwArg0148, dwArg0188, out s0_476, out s1_477, out a0_105, out a1_106, out a2_118, out a3_478, out a4_479, out a5_102, out a6_480, out s4_481, out t3_482)
l2308BDFA:
	word32 s0_191 = Mem20[a0_105 + 40<i32>:word32]
	branch a0_105 == 0<32> l2308BE08
l2308BDFE:
	word32 a0_202
	word32 a2_204
	word32 a5_207
	word32 a3_483
	word32 a4_484
	word32 s4_485
	mbedtls_ssl_session_free(ra, a0_105, a1_106, a2_118, a5_102, mstatus, dwArg0118, dwArg0138, dwArg0158, dwArg0178, out a0_202, out a2_204, out a3_483, out a4_484, out a5_207, out s4_485)
	word32 s1_486
	word32 a0_487
	word32 a1_488
	word32 a2_489
	word32 a3_490
	word32 a4_491
	word32 a6_492
	word32 s4_493
	word32 t3_494
	vPortFree(a0_202, a2_204, a5_207, mstatus, dwArg0148, dwArg0188, out s0_191, out s1_486, out a0_487, out a1_488, out a2_489, out a3_490, out a4_491, out a5_102, out a6_492, out s4_493, out t3_494)
l2308BE08:
	word32 s2_228 = Mem20[s0_191 + 180<i32>:int32]
	branch s2_228 == 0<32> l2308BE26
l2308BE10:
	word32 a5_233
	word32 a2_235
	word32 a1_507
	word32 a3_508
	word32 a4_509
	word32 a1_510
	mbedtls_zeroize(s2_228, strlen(s2_228, out a1_507, out a2_235, out a3_508, out a4_509, out a5_233), out a1_510)
	word32 s1_511
	word32 a0_512
	word32 a1_513
	word32 a2_514
	word32 a3_515
	word32 a4_516
	word32 a6_517
	word32 s4_518
	word32 t3_519
	vPortFree(Mem20[s0_191 + 180<i32>:int32], a2_235, a5_233, mstatus, dwArg0148, dwArg0188, out s0_191, out s1_511, out a0_512, out a1_513, out a2_514, out a3_515, out a4_516, out a5_102, out a6_517, out s4_518, out t3_519)
l2308BE26:
	word32 a3_274
	word32 a4_275
	word32 s4_279
	word32 a1_495
	word32 a2_496
	word32 a5_497
	word32 a7_498
	word32 s5_499
	word32 s6_500
	word32 s7_501
	word32 s8_502
	word32 s9_503
	word32 s10_504
	word32 s11_505
	word32 t4_506
	mbedtls_debug_print_msg(ra, s0_191, 2<32>, 0x230C7120<32>, a5_102, out a1_495, out a2_496, out a3_274, out a4_275, out a5_497, out a7_498, out s4_279, out s5_499, out s6_500, out s7_501, out s8_502, out s9_503, out s10_504, out s11_505, out t4_506)
	0<32> = dwArg38
l2308BE50_thunk_mbedtls_zeroize:
	word32 a1_520
	mbedtls_zeroize(s0_191, 192<i32>, out a1_520)
	a4Out = a4_275
	s2Out = s2_228
	s4Out = s4_279
	return a3_274
mbedtls_ssl_free_exit:


word32 mbedtls_ssl_config_init(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_ssl_config_init_entry:
l2308BE56:
l2308BE5C_thunk_memset:
	word32 t1_16
	word32 a0_17
	word32 a1_18
	word32 a2_19
	word32 a3_20
	word32 a4_21
	word32 a5_22
	return memset(ra, a0, 0<32>, 120<i32>, out t1_16, out a0_17, out a1_18, out a2_19, out a3_20, out a4_21, out a5_22)
mbedtls_ssl_config_init_exit:


word32 mbedtls_ssl_config_defaults(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: s0 sp
mbedtls_ssl_config_defaults_entry:
l2308BE60:
	word32 a5_14 = (CONVERT(Mem0[a0 + 116<i32>:uint16], uint16, word32) & 0xFFFFFFFE<32> | a1 & 1<i32>) & 0xFFFFFFFD<32> | (a2 & 1<i32>) << 1<i32>
	Mem15[a0 + 116<i32>:word16] = SLICE(a5_14, word16, 0)
	branch a1 != 0<32> l2308BE88
l2308BE7C:
	Mem18[a0 + 116<i32>:word16] = SLICE(a5_14 & -525<i32> | 520<i32>, word16, 0)
l2308BE88:
	Mem21[0x450<32>:word32] = a0
	Mem24[0xEFFFACC<32>:word32] = a0
	branch a3 != 2<32> l2308BED8
l2308BED8:
	Mem38[0x3030373<32>:word32] = a0
	branch a2 != 1<32> l2308BEEA
l2308BEE6:
	Mem41[a0 + 115<i32>:byte] = 2<8>
l2308BEEA:
	word32 a0_44
	word32 s1_50
	word32 s2_51
	word32 s3_52
	word32 s4_53
	word32 s5_54
	word32 s0_49 = mbedtls_ssl_list_ciphersuites(out s1_50, out a0_44, out s2_51, out s3_52, out s4_53, out s5_54)
	Mem60[0x230C85D0<32>:word32] = s0_49
	Mem63[a0_44 + 12<i32>:word32] = s0_49
	Mem64[a0_44 + 8<i32>:word32] = s0_49
	Mem65[a0_44 + 4<i32>:word32] = s0_49
	Mem66[a0_44:word32] = s0_49
	Mem67[0x4200E17C<32>:word32] = s0_49
	word32 a3_71
	word32 a4_72
	word32 a5_73
	Mem75[mbedtls_ecp_grp_id_list(out a3_71, out a4_72, out a5_73) + 92<i32>:word32] = s0_49
	a0Out = <invalid>
	a2Out = dwArg10
	a3Out = a3_71
	a4Out = a4_72
	a5Out = a5_73
	s2Out = s2_51
	s3Out = s3_52
	s4Out = s4_53
	s5Out = s5_54
	return s1_50
l2308BEA4:
	Mem81[0x3030373<32>:word32] = a0
	Mem84[0x4200E140<32>:word32] = a0
	Mem85[0x4200E13C<32>:word32] = a0
	Mem86[0x4200E138<32>:word32] = a0
	Mem87[0x4200E134<32>:word32] = a0
	Mem90[0x230C85E0<32>:word32] = a0
	Mem93[0x4200E198<32>:word32] = a0
	Mem96[0x4200ED3C<32>:word32] = a0
	a0Out = <invalid>
	a2Out = a2
	a3Out = a3
	a4Out = 2<32>
	a5Out = 0x4200ECE0<32>
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	return s1
mbedtls_ssl_config_defaults_exit:


word32 mbedtls_ssl_config_free(word32 s1, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a4Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_free_config
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a3 a4 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
mbedtls_ssl_config_free_entry:
l2308BF1C:
	word32 s0_11 = a0
	word32 a0_12 = Mem9[a0 + 76<i32>:word32]
l2308BF28:
	branch a0_12 != 0<32> l2308BF3C
l2308BF3C:
	word32 a0_70
	word32 a1_71
	word32 a6_72
	word32 t3_73
	vPortFree(Mem9[s1 + 8<i32>:word32], a2, a5, mstatus, dwArg0148, dwArg0188, out s0_11, out s1, out a0_70, out a1_71, out a2, out a3, out a4, out a5, out a6_72, out s4, out t3_73)
	a0_12 = s1
l2308BF2A:
l2308BF38_thunk_mbedtls_zeroize:
	word32 a1_74
	mbedtls_zeroize(s0_11, 120<i32>, out a1_74)
	a4Out = a4
	s4Out = s4
	return a3
mbedtls_ssl_config_free_exit:


void mbedtls_ssl_sig_from_pk(word32 a0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 t1
// Preserved: sp
mbedtls_ssl_sig_from_pk_entry:
l2308BF46:
	word32 a5_18
	mbedtls_pk_can_do(a0, 1<32>, a5, out a5_18)
	return
mbedtls_ssl_sig_from_pk_exit:


void mbedtls_ssl_pk_alg_from_sig()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
mbedtls_ssl_pk_alg_from_sig_entry:
l2308BF5A:
	return
mbedtls_ssl_pk_alg_from_sig_exit:


word32 mbedtls_ssl_md_alg_from_hash(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a4 a5
// Preserved: sp
mbedtls_ssl_md_alg_from_hash_entry:
l2308BF62:
	word32 a5_5 = a0 + 0xFFFFFFFF<32> & 255<i32>
	branch a5_5 >u 3<32> l2308BF7E
l2308BF7E:
	a5Out = <invalid>
	return 0<32>
l2308BF6E:
	word32 a0_12 = CONVERT(Mem0[a5_5 + 0x230CBB10<32>:byte], byte, word32)
	a5Out = <invalid>
	return a0_12
mbedtls_ssl_md_alg_from_hash_exit:


word32 mbedtls_ssl_hash_from_md_alg(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_client_step
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_hash_from_md_alg_entry:
l2308BF82:
	branch a0 >u 0xFFFFFFFA<32> l2308BF9A
l2308BF9A:
	return 0<32>
l2308BF8A:
	return CONVERT(Mem0[a0 + 0x230CBB11<32>:byte], byte, word32)
mbedtls_ssl_hash_from_md_alg_exit:


word32 mbedtls_ssl_check_curve(word32 a1, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
// MayUse:  a1:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
mbedtls_ssl_check_curve_entry:
l2308BF9E:
	word32 a5_12 = Mem0[a5 + 92<i32>:word32]
	branch a5_12 != 0<32> l2308BFAE
l2308BFAE:
	a4 = CONVERT(Mem0[a5_12:byte], byte, word32)
	branch a4 != 0<32> l2308BFA8
l2308BFA8:
	branch a4 == a1 l2308BFB6
l2308BFB6:
	a4Out = a4
	a5Out = a5_12
	return 0<32>
l2308BFAC:
	a5_12 = a5_12 + 1<32>
l2308BFB4:
l2308BFA4:
	a4Out = a4
	a5Out = a5_12
	return 0xFFFFFFFF<32>
mbedtls_ssl_check_curve_exit:


word32 mbedtls_ssl_check_cert_usage(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a5 s0 s1 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
mbedtls_ssl_check_cert_usage_entry:
l2308BFBA:
	word32 a1_19 = 128<i32>
	branch a2 != 1<32> l2308BFFE
l2308BFD4:
	word32 a5_21 = CONVERT(Mem11[a1 + 10<i32>:byte], byte, word32)
	a1_19 = 0<32>
	branch a5_21 >u 0xA<32> l2308BFFE
l2308BFE0:
	word32 a5_24 = a2 << a5_21
	a1_19 = 32<i32>
	branch (a5_24 & 130<i32>) != 0<32> l2308BFFE
l2308BFEE:
	a1_19 = 8<32>
	branch (a5_24 & 1536<i32>) != 0<32> l2308BFFE
l2308BFF6:
	a1_19 = CONVERT((a5_24 & 0x1C<32>) != 0<32>, bool, word32) << 7<i32>
l2308BFFE:
	word32 a5_39
	word32 a3_133
	word32 a4_134
	branch mbedtls_x509_crt_check_key_usage(a0, a1_19, out a3_133, out a4_134, out a5_39) == 0<32> l2308C01A
l2308C00C:
	Mem49[a5_39 | 0xFFF800<32>:word32] = Mem36[a5_39:word32]
l2308C01A:
	word32 a1_54
	branch a2 == 1<32> l2308C04A
l2308C04A:
	a1_54 = 0x230C6DB4<32>
l2308C020:
	a1_54 = 0x230C6DC0<32>
l2308C028:
	word32 a0_62
	word32 s3_72
	word32 a5_123
	word32 s1_124
	word32 s0_69 = mbedtls_x509_crt_check_extended_key_usage(a0, a1_54, 8<32>, out s1_124, out a0_62, out a5_123, out s3_72)
	branch a0_62 == 0<32> l2308C03C
l2308C032:
	s1_124 = Mem77[a5_123:word32]
	Mem82[a5_123 | 0x1000000<32>:word32] = s1_124
	s0_69 = 0xFFFFFFFF<32>
	a5_123 = a5_123 | 0x1000000<32>
l2308C03C:
	s1Out = s1_124
	a0Out = s0_69
	a5Out = a5_123
	s3Out = s3_72
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0_69
mbedtls_ssl_check_cert_usage_exit:


word32 mbedtls_ssl_write_version(word32 a0, word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_write_record
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_handshake_client_step
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a5
// Preserved: sp
mbedtls_ssl_write_version_entry:
l2308C054:
	word32 a0_14 = a0 & 255<i32>
	branch a2 != 1<32> l2308C07A
l2308C07A:
	Mem8[a3:byte] = SLICE(a0 & 255<i32>, byte, 0)
l2308C05E:
	branch a1 != 2<32> l2308C066
l2308C064:
	a1 = 1<32>
l2308C066:
	a0_14 = ~((a0 & 255<i32>) + 0xFFFFFFFE<32>)
	Mem16[a3:byte] = SLICE(a0_14, byte, 0)
	a1 = 0<32> - a1
l2308C074:
	Mem21[a3 + 1<i32>:byte] = SLICE(a1, byte, 0)
	return a0_14
mbedtls_ssl_write_version_exit:


word32 mbedtls_ssl_write_record(word32 ra, word32 s1, word32 a0, word32 a5, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_resend
//      mbedtls_ssl_send_alert_message
//      mbedtls_ssl_write_certificate
//      mbedtls_ssl_write_change_cipher_spec
//      mbedtls_ssl_write_finished
//      mbedtls_ssl_write
//      mbedtls_ssl_handshake_client_step
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s11 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_write_record_entry:
l2308C080:
	word32 s1_1075
	word32 a1_1084
	word32 a2_1085
	word32 a4_1087
	word32 a5_1083
	word32 s11_1090
	word32 s4_1091
	word32 a5_129
	word32 s3_1074 = Mem22[a0 + 168<i32>:int32]
	word32 a5_32
	word32 s4_40
	word32 s5_41
	word32 s6_42
	word32 s8_1716
	word32 s9_1717
	word32 s10_1718
	word32 t4_1720
	word32 s11_1719
	word32 a4_1713
	word32 a7_1714
	word32 s7_1715
	word32 a3_133
	word32 a1_131
	word32 a2_132
	word32 a0_127 = mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C7EC0<32>, a5, out a1_131, out a2_132, out a3_133, out a4_1713, out a5_32, out a7_1714, out s4_40, out s5_41, out s6_42, out s7_1715, out s8_1716, out s9_1717, out s10_1718, out s11_1719, out t4_1720)
	word32 sp_173 = fp + -96<i32>
	word32 s2_1062 = 0x230C8000<32>
	word32 s0_1058 = Mem22[a5_32:word32]
	word32 a5_51 = CONVERT(Mem22[a5_32 + 116<i32>:uint16], uint16, word32)
	branch (a5_51 & 2<32>) == 0<32> l2308C0CC
l2308C0BE:
	s0_1058 = Mem22[(a5_51 & 2<32>) + 48<i32>:word32]
	branch (a5_51 & 2<32>) == 0<32> l2308C0CC
l2308C0C2:
	a5_129 = 1<32>
	branch CONVERT(Mem22[(a5_51 & 2<32>) + 52<i32>:byte], byte, word32) == 1<32> l2308C1B2
l2308C0CC:
	word32 a4_58 = Mem22[s0_1058 + 164<i32>:int32]
	a5_129 = 0x16<32>
	branch a4_58 != 0x16<32> l2308C1B2
l2308C0D6:
	word32 a5_60 = Mem22[s0_1058 + 160<i32>:int32]
	s1 = CONVERT(Mem22[a5_60:byte], byte, word32)
	branch s1 == 0<32> l2308C11A
l2308C0E0:
	s0_1058 = Mem22[a4_58 + 48<i32>:word32]
	branch a4_58 != 0<32> l2308C11A
l2308C11A:
	Mem68[a5_60 + 1<i32>:byte] = SLICE(s3_1074 + -4<i32> >>u 0x10<u32>, byte, 0)
	Mem72[Mem68[s0_1058 + 160<i32>:int32] + 2<i32>:byte] = SLICE(s3_1074 + -4<i32> >>u 8<u32>, byte, 0)
	word32 a5_73 = Mem72[s0_1058 + 160<i32>:int32]
	Mem74[a5_73 + 3<i32>:byte] = SLICE(s3_1074 + -4<i32>, byte, 0)
	word32 a5_76 = CONVERT(Mem74[a5_73 + 116<i32>:uint16], uint16, word32)
	a2_132 = s3_1074 + -4<i32>
	word32 s0_102 = Mem74[a5_73:word32]
	a5_129 = a5_76 & 2<32>
	branch (a5_76 & 2<32>) == 0<32> l2308C1A0
l2308C144:
	word32 a0_78 = Mem74[s0_102 + 160<i32>:int32]
	word32 a5_1759
	word32 a3_1757
	word32 a4_1758
	memmove(a0_78 + 0xC<32>, a0_78 + 4<i32>, s3_1074 + -4<i32>, out a3_1757, out a4_1758, out a5_1759)
	word32 a5_86 = Mem74[s0_102 + 168<i32>:int32]
	word32 a4_87 = Mem74[s0_102 + 160<i32>:int32]
	Mem89[s0_102 + 168<i32>:word32] = a5_86 + 8<32>
	s3_1074 = s3_1074 + 8<32>
	branch s1 == 0<32> l2308C224
l2308C224:
	Mem91[a4_87 + 4<i32>:byte] = 0<8>
	Mem93[Mem91[s0_102 + 160<i32>:int32] + 5<i32>:byte] = 0<8>
l2308C164:
	Mem97[a4_87 + 4<i32>:byte] = SLICE(Mem89[a5_86 + 0x24<32>:word32] >>u 8<i32>, byte, 0)
	word32 a5_99 = Mem97[Mem97[a4_87 + 48<i32>:word32] + 160<i32>:int32]
	word32 a4_100 = Mem97[a4_87 + 28<i32>:word32]
	Mem101[a5_99 + 5<i32>:byte] = SLICE(a4_100, byte, 0)
	s0_102 = Mem101[a4_100 + 48<i32>:word32]
	Mem105[a5_99 + 0x1D<32>:word32] = Mem101[a5_99 + 28<i32>:word32]
l2308C182:
	word32 t1_1794
	word32 a1_1796
	word32 a2_1797
	word32 a3_1798
	word32 a4_1799
	word32 a5_1800
	word32 a0_1795
	ra = memset(ra, Mem107[s0_102 + 160<i32>:int32] + 6<32>, 0<32>, 3<32>, out t1_1794, out a0_1795, out a1_1796, out a2_1797, out a3_1798, out a4_1799, out a5_1800)
	word32 a0_124 = Mem107[s0_102 + 160<i32>:int32]
	word32 a7_1803
	word32 a4_1801
	word32 a6_1802
	memcpy(a0_124 + 9<32>, a0_124 + 1<i32>, 3<32>, out a1_131, out a2_132, out a3_133, out a4_1801, out a5_129, out a6_1802, out a7_1803)
	a0_127 = a0_124 + 9<32>
l2308C1A0:
	branch s1 == 0<32> l2308C1B2
l2308C1A2:
	word32 s0_145 = Mem144[a5_129 + 48<i32>:word32]
	word32 a5_150 = Mem144[a5_129 + 196<i32>:int32]
	word32 a6_192
	word32 t5_199
	word32 t6_200
	word32 t2_1387
	word32 tp_1386
	call a5_150 (retsize: 0;)
		uses: a0:s0_145,a1:Mem144[s0_145 + 160<i32>:int32],a2:s3_147,a5:a5_150,a6:a6_192,mstatus:mstatus,ra:ra_156,s0:s0_145,s1:s1_61,s2:0x230C8000<32>,s3:s3_147,s4:s4_40,s5:s5_41,s6:s6_42,t2:t2_1387,t5:t5_199,t6:t6_200,tp:tp_1386
		defs: a0:a0_186,a1:a1_185,a2:a2_184,a3:a3_176,a5:a5_187,a6:a6_192,ra:ra_178,s1:s1_179,s2:s2_174,s3:s3_180,sp:sp_173,t2:t2_1387,t5:t5_199,t6:t6_200,tp:tp_1386
l2308C1B2:
	word32 s0_203 = Mem202[a5_129:word32]
	word32 a5_204 = CONVERT(Mem202[a5_129 + 116<i32>:uint16], uint16, word32)
	branch (a5_204 & 2<32>) == 0<32> l2308C28A
l2308C1BC:
	s0_203 = Mem202[(a5_204 & 2<32>) + 48<i32>:word32]
	branch (a5_204 & 2<32>) == 0<32> l2308C28A
l2308C1C0:
	branch CONVERT(Mem202[(a5_204 & 2<32>) + 52<i32>:byte], byte, word32) == 1<32> l2308C28A
l2308C1CA:
	word32 a5_209 = Mem202[s0_203 + 164<i32>:int32]
	branch (a5_209 & 0xFFFFFFFD<32>) != 0x14<32> l2308C28A
l2308C1D6:
	word32 a3_230
	word32 a4_231
	word32 a5_232
	word32 s8_1734
	word32 a2_1732
	word32 s4_1733
	word32 s1_1730
	word32 a1_1731
	ra = mycalloc(ra, s1, 1<32>, 0x10<32>, a3_133, 0x14<32>, a5_209 & 0xFFFFFFFD<32>, mstatus, Mem202[sp_173 + 32<i32>:word32], Mem202[sp_173 + 36<i32>:word32], Mem202[sp_173 + 280<i32>:word32], Mem202[sp_173 + 344<i32>:word32], out s0_1058, out s1_1730, out a1_1731, out a2_1732, out a3_230, out a4_231, out a5_232, out s2_1062, out s3_1074, out s4_1733, out s8_1734)
	branch true l2308C232
l2308C232:
	word32 s0_255
	word32 s1_256
	word32 a5_1739
	word32 s4_1740
	word32 s8_1741
	word32 a2_1736
	word32 a3_1737
	word32 a4_1738
	word32 a1_1735
	ra = mycalloc(ra, 1<32>, 1<32>, Mem202[s0_1058 + 168<i32>:int32], a3_230, a4_231, a5_232, mstatus, Mem202[sp_173 + 32<i32>:word32], Mem202[sp_173 + 36<i32>:word32], Mem202[sp_173 + 280<i32>:word32], Mem202[sp_173 + 344<i32>:word32], out s0_255, out s1_256, out a1_1735, out a2_1736, out a3_1737, out a4_1738, out a5_1739, out s2_1062, out s3_1074, out s4_1740, out s8_1741)
	Mem265[1<32>:word32] = s1_256
	a0_127 = 1<32>
	word32 a5_266 = Mem265[s0_255 + 168<i32>:int32]
	branch true l2308C266
l2308C266:
	word32 a4_269
	word32 a6_1762
	word32 a7_1763
	word32 a3_1760
	word32 a5_1761
	memcpy(1<32>, Mem265[s0_255 + 160<i32>:int32], a5_266, out a1_131, out a2_132, out a3_1760, out a4_269, out a5_1761, out a6_1762, out a7_1763)
	Mem283[Mem265[s0_255 + 168<i32>:int32] + 4<i32>:word32] = s1_256
	word32 a5_284 = Mem283[s0_255 + 164<i32>:int32]
	Mem285[s1_256 + 12<i32>:word32] = 0<32>
	Mem286[s1_256 + 8<i32>:byte] = SLICE(a5_284, byte, 0)
	s0_203 = Mem286[a4_269 + 48<i32>:word32]
	word32 a4_288 = Mem286[a5_284 + 56<i32>:word32]
	branch a5_284 != 0<32> l2308C308
l2308C308:
	word32 a5_291 = Mem286[a4_288 + 12<i32>:word32]
	branch a4_288 != 0<32> l2308C306
l2308C306:
l2308C30C:
	Mem294[s1_256 + 12<i32>:word32] = a5_291
l2308C288:
	Mem295[s1_256 + 56<i32>:word32] = a4_288
l2308C28A:
	word32 a5_1102
	word32 a3_1104
	word32 a5_299 = Mem298[s0_203 + 148<i32>:int32]
	Mem301[a5_299:byte] = Mem298[s0_203 + 0xA4<32>:byte]
	word32 s0_323 = Mem301[a0_127 + 8<i32>:word32]
	word32 a0_327 = mbedtls_ssl_write_version(a0_127, a1_131, a2_132 >>u 1<i32> & 1<32>, Mem301[Mem301[a5_299:word32] + 148<i32>:int32] + 1<32>)
	Mem335[Mem301[s0_323 + 152<i32>:int32]:byte] = SLICE(s3_1074 >>u 8<u32>, byte, 0)
	word32 a5_336 = Mem335[s0_323 + 152<i32>:int32]
	Mem337[a5_336 + 1<i32>:byte] = SLICE(s3_1074, byte, 0)
	word32 s0_338 = Mem337[a5_336 + 56<i32>:word32]
	branch a5_336 == 0<32> l2308C6D2
l2308C2C6:
	word32 a7_1842
	word32 a3_1840
	word32 a1_1838
	word32 s6_361
	word32 s11_1849
	word32 t4_1850
	word32 s4_1843
	word32 s9_1847
	word32 s5_1844
	word32 s10_1848
	word32 a4_1841
	word32 s8_1846
	word32 s7_1845
	word32 a2_1839
	word32 a5_1160
	mbedtls_debug_print_msg(ra, s0_338, 2<32>, 0x230C7EFC<32>, a5_336, out a1_1838, out a2_1839, out a3_1840, out a4_1841, out a5_1160, out a7_1842, out s4_1843, out s5_1844, out s6_361, out s7_1845, out s8_1846, out s9_1847, out s10_1848, out s11_1849, out t4_1850)
	s0_1058 = Mem337[a5_1160 + 36<i32>:word32]
	branch a5_1160 == 0<32> l2308C2E6
l2308C2E2:
	s0_1058 = Mem337[a5_1160 + 56<i32>:word32]
	branch a5_1160 != 0<32> l2308C310
l2308C310:
	word32 a5_371 = Mem337[a5_1160 + 80<i32>:word32]
	word32 s1_372 = 0<32>
	branch a5_371 == 0<32> l2308C31A
l2308C316:
	s1_372 = CONVERT(Mem337[a5_371 + 1<i32>:byte], byte, word32)
l2308C31A:
	word32 s5_400
	word32 a7_1853
	word32 a3_390
	word32 a4_391
	word32 a5_1852
	word32 a1_1851
	word32 a2_389
	word32 a0_386
	mbedtls_debug_print_buf(ra, 4<32>, Mem337[s0_1058 + 160<i32>:int32], out a0_386, out a1_1851, out a2_389, out a3_390, out a4_391, out a5_1852, out a7_1853)
	a5_1160 = 7<32>
	branch s1_372 == 7<32> l2308C348
l2308C340:
	a5_1160 = 2<32>
	s5_400 = 0<32>
	branch s1_372 != 2<32> l2308C3E6
l2308C348:
	s0_1058 = Mem337[a5_1160 + 12<i32>:word32]
	branch a5_1160 <= 0<32> l2308C470
l2308C470:
l2308C34E:
	word32 a0_418
	word32 a4_420
	word32 a5_421
	word32 a0_427
	word32 a4_429
	word32 a5_430
	word32 a0_436
	word32 a4_438
	word32 a5_439
	word32 ra_440 = mbedtls_md_hmac_update(mbedtls_md_hmac_update(mbedtls_md_hmac_update(ra, a0_386 + 56<i32>, a4_391, a5_1160, Mem337[sp_173 + 16<i32>:word32], out a0_418, out a4_420, out a5_421), a0_418 + 56<i32>, a4_420, a5_421, Mem337[sp_173 + 16<i32>:word32], out a0_427, out a4_429, out a5_430), a0_427 + 56<i32>, a4_429, a5_430, Mem337[sp_173 + 16<i32>:word32], out a0_436, out a4_438, out a5_439)
	word32 s0_441 = Mem337[a0_436 + 56<i32>:word32]
	word32 a5_1870
	word32 a0_446
	word32 a4_448
	word32 ra_450 = mbedtls_md_hmac_update(ra_440, a0_436 + 56<i32>, a4_438, a5_439, Mem337[sp_173 + 16<i32>:word32], out a0_446, out a4_448, out a5_1870)
	word32 a5_451 = Mem337[s0_441 + 168<i32>:int32]
	word32 a5_1875
	word32 a4_1872
	word32 a4_1874
	word32 s0_1873
	word32 a2_1871
	word32 a0_458
	word32 a1_459
	word32 a5_462
	ra = mbedtls_md_hmac_reset(mbedtls_md_hmac_finish(ra_450, Mem337[a0_446 + 56<i32>:word32], s1_372, a0_446 + 56<i32>, Mem337[s0_441 + 160<i32>:int32] + a5_451, a4_448, a5_451, s2_1062, Mem337[sp_173 + 256<i32>:word32], Mem337[sp_173 + 260<i32>:word32], Mem337[sp_173 + 296<i32>:word32], out s1_372, out a0_458, out a1_459, out a2_1871, out a4_1872, out a5_462, out s2_1062), a0_458 + 56<i32>, a1_459, a5_462, out s0_1873, out a4_1874, out a5_1875)
	word32 s0_480 = Mem337[a3_390 + 56<i32>:word32]
	word32 a1_1876
	word32 a4_496
	word32 a5_1878
	word32 a7_1879
	word32 a3_1877
	mbedtls_debug_print_buf(ra, 4<32>, Mem337[s0_480 + 168<i32>:int32] + Mem337[s0_480 + 160<i32>:int32], out a0_386, out a1_1876, out a2_389, out a3_1877, out a4_496, out a5_1878, out a7_1879)
	s0_1058 = Mem337[a4_496 + 56<i32>:word32]
	Mem506[s0_1058 + 168<i32>:word32] = Mem337[s0_1058 + 168<i32>:int32] + Mem337[a4_496 + 20<i32>:word32]
	s5_400 = 1<32>
l2308C3E6:
	word32 a5_1112
	word32 a3_1114
	word32 s5_702
	word32 a5_508 = s1_372 + -6<i32>
	branch (a5_508 & 253<i32>) != 0<32> l2308C5A6
l2308C5A6:
	a5_1160 = 2<32>
	branch s1_372 != 2<32> l2308C694
l2308C694:
l2308C5AC:
	word32 s0_515 = Mem514[0x3A<32>:word32]
	Mem517[sp_173 + 24<i32>:word32] = 0<32>
	word32 a5_519 = Mem517[0xE<32>:word32]
	word32 s3_1376 = a5_519 - (Mem517[s0_515 + 168<i32>:int32] + 1<32> & a5_519)
	branch a5_519 != s3_1376 l2308C5C6
l2308C5C4:
	s3_1376 = 0<32>
l2308C5C6:
	word32 a4_524 = 0<32>
l2308C5C8:
	Mem533[Mem526[s0_515 + 160<i32>:int32] + a4_524 + Mem526[s0_515 + 168<i32>:int32]:byte] = SLICE(s3_1376, byte, 0)
	a4_524 = a4_524 + 1<32>
	branch s3_1376 >=u a4_524 l2308C5C8
l2308C5DE:
	word32 s1_631
	word32 s0_536 = Mem533[a4_524 + 12<i32>:word32]
	word32 s4_539 = Mem533[s0_515 + 168<i32>:int32] + 1<32> + s3_1376
	Mem540[s0_536 + 168<i32>:word32] = s4_539
	word32 a5_537 = 1<32>
	branch a4_524 > 1<32> l2308C64A
l2308C64A:
	word32 a2_592
	word32 a1_593
	word32 a0_594
	word32 a6_600
	word32 t5_607
	word32 t6_608
	word32 tp_610
	word32 t2_1388
	call a4_524 (retsize: 0;)
		uses: a0:a0_553,a1:Mem540[a2_548 + 12<i32>:word32] + 0x18<32>,a5:Mem540[a0_553 + 28<i32>:word32],a6:a6_600,mstatus:mstatus,ra:ra_561,s0:Mem540[1<32>:word32],s1:s1_507,s2:s2_558,s3:s3_1376,s4:s4_539,s5:s5_566,s6:s6_361,t2:t2_1388,t5:t5_607,t6:t6_608,tp:tp_610
		defs: a0:a0_594,a1:a1_593,a2:a2_592,a6:a6_600,mstatus:mstatus_609,ra:ra_586,s0:s0_585,s2:s2_582,s3:s3_588,sp:sp_581,t2:t2_1388,t5:t5_607,t6:t6_608,tp:tp_610
	s1_1075 = a0_594
	branch a0_594 != 0<32> l2308C538
l2308C65E:
	word32 a5_617
	word32 a1_1967
	word32 a2_1968
	word32 a3_1969
	word32 a4_1970
	word32 a6_1971
	word32 a7_1972
	memcpy(Mem540[Mem540[a1_593 + 56<i32>:word32] + 156<i32>:int32], Mem540[a2_592 + 12<i32>:word32] + 0x18<32>, a2_592, out a1_1967, out a2_1968, out a3_1969, out a4_1970, out a5_617, out a6_1971, out a7_1972)
	word32 s0_629 = Mem540[a5_617 + 56<i32>:word32]
	s1_631 = Mem540[s0_629 + 160<i32>:int32]
	a5_537 = Mem540[a5_617 + 12<i32>:word32] + Mem540[s0_629 + 168<i32>:int32]
	Mem634[s0_629 + 168<i32>:word32] = a5_537
l2308C5F2:
	s1_631 = Mem540[s0_536 + 160<i32>:int32]
l2308C5F6:
	word32 s0_638 = Mem637[a5_537 + 56<i32>:word32]
	word32 a2_654
	word32 s4_660
	word32 s5_661
	word32 s7_663
	word32 a1_1973
	word32 a3_1974
	word32 a4_1975
	word32 a5_1976
	word32 a7_1977
	word32 s6_1978
	word32 s8_1979
	word32 s9_1980
	word32 s10_1981
	word32 s11_1982
	word32 t4_1983
	mbedtls_debug_print_msg(ra, s0_638, 3<32>, 0x230C7FD0<32>, Mem637[s0_638 + 168<i32>:int32], out a1_1973, out a2_654, out a3_1974, out a4_1975, out a5_1976, out a7_1977, out s4_660, out s5_661, out s6_1978, out s7_663, out s8_1979, out s9_1980, out s10_1981, out s11_1982, out t4_1983)
	word32 a0_674 = Mem637[a2_654 + 12<i32>:word32]
	word32 a0_680
	word32 s4_692
	word32 s1_1984
	word32 a1_1985
	word32 a2_1986
	word32 a3_1987
	ra = mbedtls_cipher_crypt(ra, a0_674 + 80<i32>, a0_674 + 24<i32>, a2_654, s1_631, s4_660, s1_631, sp_173 + 48<i32>, s5_661, s7_663, Mem637[sp_173 + 8<i32>:word32], Mem637[sp_173 + 72<i32>:word32], Mem637[sp_173 + 104<i32>:word32], Mem637[sp_173 + 136<i32>:word32], Mem637[sp_173 + 180<i32>:word32], Mem637[sp_173 + 208<i32>:word32], Mem637[sp_173 + 212<i32>:word32], Mem637[sp_173 + 248<i32>:word32], Mem637[sp_173 + 296<i32>:word32], out s0_1058, out s1_1984, out a0_680, out a1_1985, out a2_1986, out a3_1987, out a5_1160, out s2_1062, out s3_1074, out s4_692, out s5_702)
	s1_1075 = a0_680
	branch a0_680 == 0<32> l2308C680
l2308C680:
	branch s4_692 == a5_1160 l2308C592
l2308C686:
l2308C63A:
	a5_1112 = a0_680
	a3_1114 = 1515<i32>
l2308C3F2:
	word32 s0_714 = Mem514[(a5_508 & 253<i32>) + 56<i32>:word32]
	s3_1074 = 8<32>
	branch (CONVERT(Mem514[Mem514[a5_508 & 253<i32>:word32] + 28<i32>:byte], byte, word32) & 2<32>) != 0<32> l2308C402
l2308C400:
	s3_1074 = 0x10<32>
l2308C402:
	word32 a0_725 = sp_173 + 48<i32>
	word32 a1_729
	word32 a2_730
	word32 a3_1895
	word32 a4_1896
	word32 a5_1897
	word32 a6_1898
	word32 a7_1899
	memcpy(a0_725, Mem514[s0_714 + 144<i32>:int32], 8<32>, out a1_729, out a2_730, out a3_1895, out a4_1896, out a5_1897, out a6_1898, out a7_1899)
	word32 a5_739 = Mem514[s0_714 + 164<i32>:int32]
	Mem742[sp_173 + 56<i32>:byte] = SLICE(a5_739, byte, 0)
	word32 s0_743 = Mem742[a5_739:word32]
	mbedtls_ssl_write_version(a0_725, a1_729, a2_730 >>u 1<i32> & 1<32>, sp_173 + 57<i32>)
	word32 a5_751 = Mem742[s0_743 + 168<i32>:int32]
	Mem755[sp_173 + 59<i32>:byte] = SLICE(a5_751 >>u 8<u32>, byte, 0)
	Mem757[sp_173 + 60<i32>:byte] = SLICE(a5_751, byte, 0)
	word32 a0_765
	word32 a5_766
	word32 a4_770
	word32 a1_1900
	word32 a2_1901
	word32 a3_1902
	word32 a7_1903
	mbedtls_debug_print_buf(ra, 4<32>, sp_173 + 48<i32>, out a0_765, out a1_1900, out a2_1901, out a3_1902, out a4_770, out a5_766, out a7_1903)
	s0_1058 = Mem757[a5_766 + 56<i32>:word32]
	a5_1160 = Mem757[a0_765 + 16<i32>:word32]
	branch a4_770 + 0xFFFFFFF8<32> == a0_765 l2308C47E
l2308C47E:
	word32 a1_1904
	word32 a2_1905
	word32 a3_1906
	word32 a4_1907
	word32 a5_1908
	word32 a6_1909
	word32 a7_1910
	memcpy(a0_765 + (a5_1160 + 0x18<32>), Mem757[s0_1058 + 144<i32>:int32], 8<32>, out a1_1904, out a2_1905, out a3_1906, out a4_1907, out a5_1908, out a6_1909, out a7_1910)
	word32 a5_801
	word32 a1_1911
	word32 a2_1912
	word32 a3_1913
	word32 a4_1914
	word32 a6_1915
	word32 a7_1916
	memcpy(Mem757[s0_1058 + 156<i32>:int32], Mem757[s0_1058 + 144<i32>:int32], 8<32>, out a1_1911, out a2_1912, out a3_1913, out a4_1914, out a5_801, out a6_1915, out a7_1916)
	word32 a5_825
	word32 a4_829
	word32 a0_1917
	word32 a1_1918
	word32 a2_1919
	word32 a3_1920
	word32 a7_1921
	mbedtls_debug_print_buf(ra, 4<32>, Mem757[Mem757[a5_801 + 56<i32>:word32] + 156<i32>:int32], out a0_1917, out a1_1918, out a2_1919, out a3_1920, out a4_829, out a5_825, out a7_1921)
	word32 s0_835 = Mem757[a4_829 + 56<i32>:word32]
	word32 a7_837 = Mem757[s0_835 + 160<i32>:int32]
	word32 a5_842 = a5_825 + Mem757[s0_835 + 168<i32>:int32] - Mem757[Mem757[a5_825 + 12<i32>:word32] + 16<i32>:word32]
	Mem844[s0_835 + 168<i32>:word32] = a5_842
	Mem850[sp_173 + 140<i32>:word32] = a7_837
	word32 a2_854
	word32 a7_857
	word32 s4_860
	word32 s5_861
	word32 t4_869
	word32 a1_1922
	word32 a3_1923
	word32 a4_1924
	word32 a5_1925
	word32 s6_1926
	word32 s7_1927
	word32 s8_1928
	word32 s9_1929
	word32 s10_1930
	word32 s11_1931
	mbedtls_debug_print_msg(ra, s0_835, 3<32>, 0x230C7F64<32>, a5_842, out a1_1922, out a2_854, out a3_1923, out a4_1924, out a5_1925, out a7_857, out s4_860, out s5_861, out s6_1926, out s7_1927, out s8_1928, out s9_1929, out s10_1930, out s11_1931, out t4_869)
	word32 a0_873 = Mem850[a2_854 + 12<i32>:word32]
	Mem875[sp_173:word32] = sp_173 + 44<i32>
	Mem878[sp_173 + 4<i32>:word32] = s3_1074
	Mem879[sp_173 + 128<i32>:word32] = a7_857 + s4_860
	word32 a0_885
	word32 s4_902
	word32 s5_903
	word32 s6_904
	ra = mbedtls_cipher_auth_encrypt(ra, a0_873 + 80<i32>, a0_873 + 24<i32>, a2_854, 0xD<32>, s4_860, s5_861, t4_869, Mem879[sp_173 + 56<i32>:word32], Mem879[sp_173 + 132<i32>:word32], Mem879[sp_173 + 168<i32>:word32], Mem879[sp_173 + 172<i32>:word32], Mem879[sp_173 + 296<i32>:word32], Mem879[sp_173 + 408<i32>:word32], out s0_1058, out a0_885, out a5_1160, out s2_1062, out s3_1074, out s4_902, out s5_903, out s6_904)
	s1_1075 = a0_885
	branch a0_885 == 0<32> l2308C556
l2308C556:
	branch s4_902 == a5_1160 l2308C56A
l2308C56A:
	Mem917[s0_1058 + 168<i32>:word32] = Mem879[s0_1058 + 168<i32>:int32] + s3_1074
	word32 a0_1932
	word32 a1_1933
	word32 a2_1934
	word32 a3_1935
	word32 a4_1936
	word32 a5_1937
	word32 a7_1938
	mbedtls_debug_print_buf(ra, 4<32>, s6_904, out a0_1932, out a1_1933, out a2_1934, out a3_1935, out a4_1936, out a5_1937, out a7_1938)
	s5_702 = s5_903 + 1<32>
l2308C592:
	a5_1160 = 1<32>
	branch s5_702 == 1<32> l2308C6A2
l2308C6A2:
	word32 a1_1952
	word32 a2_1953
	word32 a3_1954
	word32 a4_1955
	word32 a5_1956
	word32 a7_1957
	word32 s4_1958
	word32 s5_1959
	word32 s6_1960
	word32 s7_1961
	word32 s8_1962
	word32 s9_1963
	word32 s10_1964
	word32 s11_1965
	word32 t4_1966
	a0_327 = mbedtls_debug_print_msg(ra, s0_1058, 2<32>, 0x230C8038<32>, 1<32>, out a1_1952, out a2_1953, out a3_1954, out a4_1955, out a5_1956, out a7_1957, out s4_1958, out s5_1959, out s6_1960, out s7_1961, out s8_1962, out s9_1963, out s10_1964, out s11_1965, out t4_1966)
	word32 a5_967 = Mem966[s0_1058 + 168<i32>:int32]
	Mem970[Mem966[s0_1058 + 152<i32>:int32]:byte] = SLICE(a5_967 >>u 8<u32>, byte, 0)
	Mem972[Mem970[s0_1058 + 152<i32>:int32] + 1<i32>:byte] = SLICE(a5_967, byte, 0)
l2308C6D2:
	word32 s0_975 = Mem974[a0_327:word32]
	word32 a5_1804
	word32 a0_977 = mbedtls_ssl_hdr_len.isra.1(a0_327, out a5_1804)
	word32 a3_980 = Mem974[s0_975 + 152<i32>:int32]
	Mem983[s0_975 + 172<i32>:word32] = a0_977 + Mem974[s0_975 + 168<i32>:int32]
	word32 a4_988 = CONVERT(Mem983[a3_980 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem983[a3_980:byte], byte, word32)
	word32 a5_996 = CONVERT(Mem983[Mem983[s0_975 + 148<i32>:int32]:byte], byte, word32)
	Mem999[sp_173:word32] = CONVERT(SLICE(a4_988 >>u 8<i32> | a4_988 << 8<u32>, word16, 0), word16, word32)
	word32 s7_1814
	word32 s8_1815
	word32 s10_1817
	word32 t4_1819
	word32 s11_1818
	word32 s9_1816
	word32 s6_1813
	word32 a4_1808
	word32 a5_1809
	word32 a7_1810
	word32 s5_1812
	word32 s4_1811
	word32 a1_1805
	word32 a2_1806
	word32 a3_1807
	word32 a0_1007 = mbedtls_debug_print_msg(ra, s0_975, 3<32>, 0x230C8058<32>, a5_996, out a1_1805, out a2_1806, out a3_1807, out a4_1808, out a5_1809, out a7_1810, out s4_1811, out s5_1812, out s6_1813, out s7_1814, out s8_1815, out s9_1816, out s10_1817, out s11_1818, out t4_1819)
	word32 s0_1026 = Mem999[a0_1007:word32]
	word32 a5_1820
	mbedtls_ssl_hdr_len.isra.1(a0_1007, out a5_1820)
	word32 a5_1039
	word32 a7_1826
	word32 a3_1824
	word32 a4_1825
	word32 a0_1821
	word32 a1_1822
	word32 a2_1823
	mbedtls_debug_print_buf(ra, 4<32>, Mem999[s0_1026 + 148<i32>:int32], out a0_1821, out a1_1822, out a2_1823, out a3_1824, out a4_1825, out a5_1039, out a7_1826)
	word32 s11_1837
	word32 a0_1050
	word32 a5_1055
	word32 s10_1836
	word32 a4_1831
	word32 s4_1832
	word32 s5_1833
	word32 s9_1835
	word32 s7_1834
	word32 a1_1828
	word32 a2_1829
	word32 a3_1830
	word32 s1_1827
	s0_1058 = mbedtls_ssl_flush_output(ra, s0_1026, a5_1039, Mem999[sp_173 + 296<i32>:word32], out s1_1827, out a0_1050, out a1_1828, out a2_1829, out a3_1830, out a4_1831, out a5_1055, out s2_1062, out s3_1074, out s4_1832, out s5_1833, out s7_1834, out s9_1835, out s10_1836, out s11_1837)
	s1_1075 = a0_1050
	branch a0_1050 == 0<32> l2308C76C
l2308C76C:
	word32 s8_1859
	word32 t4_1862
	word32 a3_1854
	word32 s5_1856
	word32 a7_1855
	word32 s6_1857
	word32 s7_1858
	word32 s10_1861
	word32 s9_1860
	mbedtls_debug_print_msg(ra, s0_1058, 2<32>, 0x230C80D0<32>, a5_1055, out a1_1084, out a2_1085, out a3_1854, out a4_1087, out a5_1083, out a7_1855, out s4_1091, out s5_1856, out s6_1857, out s7_1858, out s8_1859, out s9_1860, out s10_1861, out s11_1090, out t4_1862)
l2308C75C:
	a5_1102 = a0_1050
	a3_1104 = s3_1074 + -1224<i32>
l2308C598:
l2308C55C:
l2308C51E:
	a5_1112 = a0_885
	a3_1114 = 1439<i32>
l2308C52C:
	word32 a1_1939
	word32 a2_1940
	word32 a3_1941
	word32 a4_1942
	word32 a5_1943
	word32 s4_1944
	word32 s5_1945
	word32 s6_1946
	word32 s7_1947
	word32 s8_1948
	word32 s9_1949
	word32 s10_1950
	word32 s11_1951
	mbedtls_debug_print_ret(ra, 1<32>, a3_1114, a5_1112, out a1_1939, out a2_1940, out a3_1941, out a4_1942, out a5_1943, out s4_1944, out s5_1945, out s6_1946, out s7_1947, out s8_1948, out s9_1949, out s10_1950, out s11_1951)
l2308C462:
l2308C2E6:
l2308C2F2:
	word32 a2_1881
	word32 a1_1880
	word32 a3_1882
	word32 a4_1883
	word32 a5_1884
	word32 a7_1885
	word32 s4_1886
	word32 s5_1887
	word32 s6_1888
	word32 s7_1889
	word32 s8_1890
	word32 s9_1891
	word32 s10_1892
	word32 s11_1893
	word32 t4_1894
	mbedtls_debug_print_msg(ra, s0_1058, 1<32>, 0x230C6E20<32>, a5_1160, out a1_1880, out a2_1881, out a3_1882, out a4_1883, out a5_1884, out a7_1885, out s4_1886, out s5_1887, out s6_1888, out s7_1889, out s8_1890, out s9_1891, out s10_1892, out s11_1893, out t4_1894)
	s1_1075 = 0xF9000400<32>
l2308C538:
	a5_1102 = s1_1075
	a3_1104 = 0xFFFB22<32>
l2308C548:
	word32 s6_1865
	word32 s7_1866
	word32 s8_1867
	word32 s9_1868
	word32 s5_1864
	word32 s10_1869
	word32 a3_1863
	mbedtls_debug_print_ret(ra, 1<32>, a3_1104, a5_1102, out a1_1084, out a2_1085, out a3_1863, out a4_1087, out a5_1083, out s4_1091, out s5_1864, out s6_1865, out s7_1866, out s8_1867, out s9_1868, out s10_1869, out s11_1090)
l2308C244:
	word32 a5_1229
	word32 a2_1231
	word32 s4_1768
	word32 s5_1769
	word32 s7_1771
	word32 s9_1773
	word32 s10_1774
	word32 s11_1775
	word32 t4_1776
	word32 s8_1772
	word32 s6_1770
	word32 a7_1767
	word32 a1_1764
	word32 a4_1766
	word32 a3_1765
	mbedtls_debug_print_msg(ra, s0_255, 1<32>, 0x230C7ED0<32>, a5_266, out a1_1764, out a2_1231, out a3_1765, out a4_1766, out a5_1229, out a7_1767, out s4_1768, out s5_1769, out s6_1770, out s7_1771, out s8_1772, out s9_1773, out s10_1774, out s11_1775, out t4_1776)
	word32 s4_1785
	word32 t3_1786
	word32 a4_1782
	word32 a5_1783
	word32 a6_1784
	word32 a2_1780
	word32 a3_1781
	word32 a0_1778
	word32 a1_1779
	word32 s1_1777
	vPortFree(s1_256, a2_1231, a5_1229, mstatus, Mem265[sp_173 + 344<i32>:word32], Mem265[sp_173 + 408<i32>:word32], out s0_1058, out s1_1777, out a0_1778, out a1_1779, out a2_1780, out a3_1781, out a4_1782, out a5_1783, out a6_1784, out s4_1785, out t3_1786)
l2308C1E2:
	word32 a4_1745
	word32 a5_1746
	word32 s4_1748
	word32 s6_1750
	word32 s11_1755
	word32 t4_1756
	word32 s7_1751
	word32 s8_1752
	word32 s9_1753
	word32 s10_1754
	word32 s5_1749
	word32 a7_1747
	word32 a3_1744
	word32 a2_1743
	word32 a1_1742
	mbedtls_debug_print_msg(ra, s0_1058, 1<32>, 0x230C7ED0<32>, 0x10<32>, out a1_1742, out a2_1743, out a3_1744, out a4_1745, out a5_1746, out a7_1747, out s4_1748, out s5_1749, out s6_1750, out s7_1751, out s8_1752, out s9_1753, out s10_1754, out s11_1755, out t4_1756)
l2308C1FE:
	word32 s8_1791
	word32 s9_1792
	word32 s10_1793
	word32 s7_1790
	word32 a3_1787
	word32 s6_1789
	word32 s5_1788
	mbedtls_debug_print_ret(ra, 1<32>, 0xFFFAF1<32>, 0xF8000100<32>, out a1_1084, out a2_1085, out a3_1787, out a4_1087, out a5_1083, out s4_1091, out s5_1788, out s6_1789, out s7_1790, out s8_1791, out s9_1792, out s10_1793, out s11_1090)
	s1_1075 = 0xF8000100<32>
l2308C0E4:
	word32 a7_1722
	word32 s5_1723
	word32 s7_1725
	word32 s9_1727
	word32 s10_1728
	word32 t4_1729
	word32 s8_1726
	word32 s6_1724
	word32 a3_1721
	mbedtls_debug_print_msg(ra, s0_1058, 1<32>, 0x230C6E20<32>, a5_60, out a1_1084, out a2_1085, out a3_1721, out a4_1087, out a5_1083, out a7_1722, out s4_1091, out s5_1723, out s6_1724, out s7_1725, out s8_1726, out s9_1727, out s10_1728, out s11_1090, out t4_1729)
	s1_1075 = 0xF9000400<32>
l2308C104:
	s0Out = s0_1058
	s1Out = dwArg28
	a0Out = s1_1075
	a1Out = a1_1084
	a2Out = a2_1085
	a3Out = dwArg08
	a4Out = a4_1087
	a5Out = a5_1083
	s2Out = s2_1062
	s3Out = s3_1074
	s4Out = s4_1091
	s5Out = s4
	s11Out = s11_1090
	mstatusOut = mstatus
	return dwArg68
mbedtls_ssl_write_record_exit:


word32 mbedtls_ssl_resend(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 mstatus, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_fetch_input
//      mbedtls_ssl_prepare_handshake_record
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_read
//      mbedtls_ssl_handshake_client_step
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_resend_entry:
l2308C786:
	word32 a5_33
	word32 s4_480
	word32 s5_481
	word32 a7_479
	word32 s6_482
	word32 s7_483
	word32 s8_484
	word32 s9_485
	word32 s10_486
	word32 s11_487
	word32 t4_488
	word32 a3_208
	word32 a4_125
	word32 a2_128
	word32 a1_127
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C7BD4<32>, a5, out a1_127, out a2_128, out a3_208, out a4_125, out a5_33, out a7_479, out s4_480, out s5_481, out s6_482, out s7_483, out s8_484, out s9_485, out s10_486, out s11_487, out t4_488)
	word32 s2_10 = 0x230C8000<32>
	word32 s0_51 = Mem30[a5_33 + 48<i32>:word32]
	word32 s1_116 = 1<32>
	word32 a5_113 = CONVERT(Mem30[a5_33 + 52<i32>:byte], byte, word32)
	branch a5_113 == 1<32> l2308C7EE
l2308C7C4:
	word32 a4_65
	word32 a1_489
	word32 a2_490
	word32 a3_491
	word32 a5_492
	word32 a7_493
	word32 s4_494
	word32 s5_495
	word32 s6_496
	word32 s7_497
	word32 s8_498
	word32 s9_499
	word32 s10_500
	word32 s11_501
	word32 t4_502
	mbedtls_debug_print_msg(ra, s0_51, 2<32>, 0x230C7BEC<32>, a5_113, out a1_489, out a2_490, out a3_491, out a4_65, out a5_492, out a7_493, out s4_494, out s5_495, out s6_496, out s7_497, out s8_498, out s9_499, out s10_500, out s11_501, out t4_502)
	word32 a5_81 = Mem30[a4_65 + 56<i32>:word32]
	Mem82[a4_65 + 60<i32>:word32] = a5_81
	ssl_swap_epochs(ra, a4_65, a5_81, out a1_127, out a2_128, out a3_208, out a4_125, out a5_113)
	Mem107[a5_113 + 52<i32>:byte] = 1<8>
l2308C7EE:
	word32 s3_108 = 0x1000000<32>
	word32 s4_109 = 0x16<32>
	word32 s5_110 = 0x14<32>
l2308C7FC:
	word32 a5_249
	word32 a4_248
	word32 a3_245
	word32 a1_246
	word32 s10_252
	word32 s11_253
	word32 s5_255
	word32 s9_259
	word32 s7_257
	word32 s6_256
	word32 s0_115 = Mem114[a5_113 + 48<i32>:word32]
	word32 a5_117 = Mem114[s1_116 + 60<i32>:word32]
	branch s1_116 != 0<32> l2308C82E
l2308C82E:
	word32 a5_118 = CONVERT(Mem114[s1_116 + 8<i32>:byte], byte, word32)
	branch a5_118 != s4_109 l2308C846
l2308C836:
	word32 a5_121 = CONVERT(Mem114[a5_118:byte], byte, word32)
	branch a5_121 != s5_110 l2308C846
l2308C840:
	word32 a3_528
	word32 a4_529
	word32 a5_530
	s0_115 = ssl_swap_epochs(ra, a4_125, a5_121, out a1_127, out a2_128, out a3_528, out a4_529, out a5_530)
l2308C846:
	word32 a4_158
	word32 a5_159
	word32 a1_514
	word32 a2_515
	word32 a3_516
	word32 a6_517
	word32 a7_518
	memcpy(Mem114[s0_115 + 160<i32>:int32], a1_127, a2_128, out a1_514, out a2_515, out a3_516, out a4_158, out a5_159, out a6_517, out a7_518)
	word32 s1_171 = Mem114[a5_159 + 4<i32>:word32]
	Mem176[s0_115 + 168<i32>:word32] = a5_159
	word32 a5_177 = CONVERT(Mem176[s1_171 + 8<i32>:byte], byte, word32)
	Mem182[s0_115 + 164<i32>:word32] = a5_177
	word32 s1_183 = Mem182[a4_158 + 12<i32>:word32]
	word32 s0_184 = Mem182[a5_177 + 48<i32>:word32]
	Mem186[a4_158 + 60<i32>:word32] = a5_177
	word32 a5_193
	word32 a0_519
	word32 a1_520
	word32 a2_521
	word32 a3_522
	word32 a4_523
	word32 a7_524
	mbedtls_debug_print_buf(ra, 3<32>, Mem186[s0_184 + 160<i32>:int32], out a0_519, out a1_520, out a2_521, out a3_522, out a4_523, out a5_193, out a7_524)
	word32 a0_231
	word32 s0_525
	word32 s1_526
	word32 s11_527
	ra = mbedtls_ssl_write_record(ra, s1_183, s0_184, a5_193, mstatus, out s0_525, out s1_526, out a0_231, out a1_127, out a2_128, out a3_208, out a4_125, out a5_113, out s2_10, out s3_108, out s4_109, out s5_110, out s11_527, out mstatus)
	s1_116 = a0_231
	branch a0_231 == 0<32> l2308C7FC
l2308C888:
	word32 a2_536
	word32 s4_537
	word32 s8_538
	mbedtls_debug_print_ret(ra, 1<32>, s3_108 + -1443<i32>, a0_231, out a1_246, out a2_536, out a3_245, out a4_248, out a5_249, out s4_537, out s5_255, out s6_256, out s7_257, out s8_538, out s9_259, out s10_252, out s11_253)
l2308C802:
	word32 s0_266 = Mem114[a3_208 + 4<i32>:word32]
	branch a3_208 != 0x10<32> l2308C8BA
l2308C8BA:
	Mem269[a5_117 + 52<i32>:byte] = 2<8>
	word32 s1_503
	word32 a1_504
	word32 a3_505
	word32 a4_506
	word32 s4_507
	word32 s5_508
	word32 s6_509
	word32 s7_510
	word32 s9_511
	word32 s10_512
	word32 s11_513
	ra = ssl_set_timer(ra, Mem269[a5_117 + 48<i32>:word32], a1_127, Mem269[a1_127 + 48<i32>:word32], s2, s0, out s0_266, out s1_503, out a1_504, out a3_505, out a4_506, out a5_117, out s4_507, out s5_508, out s6_509, out s7_510, out s9_511, out s10_512, out s11_513)
l2308C80A:
	Mem300[a5_117 + 52<i32>:byte] = 3<8>
l2308C810:
	word32 a2_531
	word32 a7_532
	word32 s4_533
	word32 s8_534
	word32 t4_535
	mbedtls_debug_print_msg(ra, s0_266, 2<32>, 0x230C7C40<32>, a5_117, out a1_246, out a2_531, out a3_245, out a4_248, out a5_249, out a7_532, out s4_533, out s5_255, out s6_256, out s7_257, out s8_534, out s9_259, out s10_252, out s11_253, out t4_535)
	s1_116 = 0<32>
l2308C8A2:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_116
	a0Out = s1_116
	a1Out = a1_246
	a2Out = dwArgB8
	a3Out = a3_245
	a4Out = a4_248
	a5Out = a5_249
	s2Out = s2_10
	s3Out = s3_108
	s4Out = dwArg78
	s5Out = s5_255
	s6Out = s6_256
	s7Out = s7_257
	s9Out = s9_259
	s10Out = s10_252
	s11Out = s11_253
	mstatusOut = mstatus
	return ra
mbedtls_ssl_resend_exit:


word32 mbedtls_ssl_fetch_input(word32 ra, word32 s0, word32 a0, word32 a1, word32 a5, word32 s2, word32 mstatus, word32 dwArgF8, word32 dwArg0128, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 mstatus ra s0 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_fetch_input_entry:
l2308C8CC:
	word32 s10_1125
	word32 s11_1128
	word32 s5_1146
	word32 s6_1149
	word32 s7_1152
	word32 s9_1155
	word32 s1_135
	word32 a4_765
	word32 s0_258
	word32 a4_43
	word32 a7_1240
	word32 a3_1239
	word32 a1_1237
	word32 a2_1238
	word32 s6_1243
	word32 s4_1241
	word32 s5_1242
	word32 s11_1248
	word32 t4_1249
	word32 s7_1244
	word32 s8_1245
	word32 s9_1246
	word32 s10_1247
	word32 a5_113
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C6F60<32>, a5, out a1_1237, out a2_1238, out a3_1239, out a4_43, out a5_113, out a7_1240, out s4_1241, out s5_1242, out s6_1243, out s7_1244, out s8_1245, out s9_1246, out s10_1247, out s11_1248, out t4_1249)
	word32 s3_1135 = a1
	word32 s2_1131 = 0x230C8000<32>
	branch a5_113 != 0<32> l2308C948
l2308C90A:
	s0_258 = Mem36[a5_113 + 24<i32>:word32]
	branch a5_113 != 0<32> l2308C948
l2308C948:
	word32 a4_65 = a5_113 - a4_43
	s0_258 = Mem36[a4_43 + 80<i32>:word32]
	a5_113 = 0x400013D<32> - a4_65
	branch a5_113 >=u a1 l2308C970
l2308C970:
	word32 s0_108
	word32 a5_71 = CONVERT(Mem36[a5_113 + 116<i32>:uint16], uint16, word32)
	a5_113 = a5_71 & 2<32>
	branch (a5_71 & 2<32>) == 0<32> l2308CB94
l2308CB94:
	s0_108 = Mem36[(a5_71 & 2<32>) + 116<i32>:word32]
	word32 s9_1269
	word32 a3_1261
	word32 a4_1262
	word32 a2_1260
	word32 a1_1259
	word32 s6_1266
	word32 s7_1267
	word32 s5_1265
	word32 a7_1263
	word32 s4_1264
	word32 s10_1270
	word32 t4_1272
	word32 s8_1268
	word32 s11_1271
	mbedtls_debug_print_msg(ra, s0_108, 2<32>, 0x230C6FF0<32>, a5_71 & 2<32>, out a1_1259, out a2_1260, out a3_1261, out a4_1262, out a5_113, out a7_1263, out s4_1264, out s5_1265, out s6_1266, out s7_1267, out s8_1268, out s9_1269, out s10_1270, out s11_1271, out t4_1272)
l2308CBC4:
	branch Mem109[s0_108 + 116<i32>:int32] >=u a1 l2308CB0A
l2308CBCC:
	word32 a0_115
	word32 a4_119
	word32 s7_128
	word32 a5_120
	word32 s6_127
	ra = ssl_check_timer(ra, s0_108, a5_113, out a0_115, out a4_119, out a5_120, out s6_127, out s7_128)
	s1_135 = s7_128
	branch a0_115 != 0<32> l2308CBEE
l2308CBD6:
	word32 a0_143
	branch a5_120 == 0<32> l2308CC28
l2308CC28:
	call a5_120 (retsize: 0;)
		uses: a5:a5_120,ra:ra_122,s0:Mem109[a5_120 + 20<i32>:word32]
		defs: a0:a0_143,a5:a5_148,ra:ra_150,s6:s6_155
l2308CBE6:
	call a5_120 (retsize: 0;)
		uses: a5:a5_120,ra:ra_122,s0:Mem109[a4_119:word32]
		defs: a0:a0_165,a5:a5_170,ra:ra_172,s6:s6_177
l2308CBEC:
	s1_135 = a0_143
l2308CBEE:
	word32 s5_219
	word32 a2_1274
	word32 a1_1273
	word32 s8_1282
	word32 a5_1277
	word32 a4_1276
	word32 a3_1275
	word32 s6_1280
	word32 s4_1279
	word32 a7_1278
	word32 s7_1281
	word32 s9_1283
	word32 s11_1285
	word32 s10_1284
	word32 t4_1286
	mbedtls_debug_print_msg(ra, Mem109[a5_120 + 116<i32>:word32], 2<32>, s6_127 + -16<i32>, a5_120, out a1_1273, out a2_1274, out a3_1275, out a4_1276, out a5_1277, out a7_1278, out s4_1279, out s5_219, out s6_1280, out s7_1281, out s8_1282, out s9_1283, out s10_1284, out s11_1285, out t4_1286)
	word32 a4_1290
	word32 a2_1288
	word32 a1_1287
	word32 s8_1292
	word32 a3_1289
	word32 s4_1291
	mbedtls_debug_print_ret(ra, 2<32>, s5_219, s1_135, out a1_1287, out a2_1288, out a3_1289, out a4_1290, out a5_113, out s4_1291, out s5_1146, out s6_1149, out s7_1152, out s8_1292, out s9_1155, out s10_1125, out s11_1128)
	branch s1_135 == 0<32> l2308CAE2
l2308CC1C:
	branch s1_135 < 0<32> l2308C92C
l2308CC20:
	s0_108 = Mem109[a5_113 + 116<i32>:word32]
	Mem257[s1_135 + a5_113 + 116<i32>:word32] = s0_108
l2308C97C:
	s0_258 = Mem36[(a5_71 & 2<32>) + 72<i32>:word32]
	branch (a5_71 & 2<32>) == 0<32> l2308C984
l2308C980:
	s0_258 = Mem36[(a5_71 & 2<32>) + 76<i32>:word32]
	branch (a5_71 & 2<32>) != 0<32> l2308C994
l2308C994:
	branch (a5_71 & 2<32>) == 0<32> l2308C9F0
l2308C998:
	s0_108 = Mem36[a4_65 + 116<i32>:word32]
	branch a4_65 >=u (a5_71 & 2<32>) l2308C9C0
l2308C9C0:
	word32 a4_262 = a4_65 - (a5_71 & 2<32>)
	Mem263[a4_262 + 116<i32>:word32] = s0_108
	branch a4_262 == 0<32> l2308C9EC
l2308C9C6:
	word32 a7_1319
	word32 a1_273
	word32 a2_274
	word32 s10_1326
	word32 s11_1327
	word32 t4_1328
	word32 s8_1324
	word32 s9_1325
	word32 s7_1323
	word32 s5_1321
	word32 s6_1322
	word32 s4_1320
	word32 a3_1316
	word32 a5_1318
	word32 a4_1317
	word32 a0_271 = mbedtls_debug_print_msg(ra, s0_108, 2<32>, 0x230C6FC4<32>, a5_71 & 2<32>, out a1_273, out a2_274, out a3_1316, out a4_1317, out a5_1318, out a7_1319, out s4_1320, out s5_1321, out s6_1322, out s7_1323, out s8_1324, out s9_1325, out s10_1326, out s11_1327, out t4_1328)
	s0_108 = Mem263[a2_274 + 116<i32>:word32]
	word32 a3_1329
	word32 a4_1330
	memmove(a0_271, a1_273 + a0_271, a2_274, out a3_1329, out a4_1330, out a5_113)
l2308C9EC:
	Mem299[s0_108 + 124<i32>:word32] = 0<32>
l2308C9F0:
	word32 t4_1315
	word32 s9_1312
	word32 s10_1313
	word32 s11_1314
	word32 s4_1307
	word32 s5_1308
	word32 s6_1309
	word32 s7_1310
	word32 s8_1311
	word32 a4_1305
	word32 a7_1306
	word32 a3_1304
	word32 a1_1302
	word32 a2_1303
	mbedtls_debug_print_msg(ra, Mem302[a5_113 + 116<i32>:word32], 2<32>, 0x230C6FF0<32>, a5_113, out a1_1302, out a2_1303, out a3_1304, out a4_1305, out a5_113, out a7_1306, out s4_1307, out s5_1308, out s6_1309, out s7_1310, out s8_1311, out s9_1312, out s10_1313, out s11_1314, out t4_1315)
	s0_108 = Mem302[a5_113 + 116<i32>:word32]
	branch a5_113 <u a1 l2308CA30
l2308CA30:
	branch a5_113 == 0<32> l2308CA40
l2308CA40:
	word32 a0_339
	word32 a4_343
	word32 s6_1331
	word32 s7_1332
	ra = ssl_check_timer(ra, s0_108, a5_113, out a0_339, out a4_343, out a5_113, out s6_1331, out s7_1332)
	branch a0_339 == 0<32> l2308CA7A
l2308CA7A:
	word32 s0_367
	branch a4_343 == 0x10<32> l2308CAEA
l2308CAEA:
	s0_367 = Mem302[0x10<32>:word32]
	s3_1135 = Mem302[0x74<32>:int32]
l2308CA92:
	s0_367 = Mem302[0x40<32>:word32]
	s3_1135 = Mem302[0x40<32>:int32]
l2308CA98:
	word32 a0_409
	word32 a5_384
	word32 a1_385
	word32 a4_388
	word32 a2_1406
	word32 a3_1407
	word32 a7_1408
	word32 s4_1409
	word32 s5_1410
	word32 s6_1411
	word32 s7_1412
	word32 s8_1413
	word32 s9_1414
	word32 s10_1415
	word32 s11_1416
	word32 t4_1417
	word32 a0_383 = mbedtls_debug_print_msg(ra, s0_367, 3<32>, 0x230C7024<32>, s3_1135, out a1_385, out a2_1406, out a3_1407, out a4_388, out a5_384, out a7_1408, out s4_1409, out s5_1410, out s6_1411, out s7_1412, out s8_1413, out s9_1414, out s10_1415, out s11_1416, out t4_1417)
	s0_108 = Mem302[a0_383 + 28<i32>:word32]
	branch a5_384 == 0<32> l2308CAF2
l2308CAF2:
	call a5_384 (retsize: 0;)
		uses: a0:a0_383,a1:a1_385,a4:a4_388,a5:a5_384,ra:ra_346
		defs: a0:a0_409
	s0_108 = Mem302[a5_384 + 20<i32>:word32]
l2308CABC:
	call a5_384 (retsize: 0;)
		uses: a0:a0_383,a1:a1_385,a4:a4_388,a5:a5_384,ra:ra_346
		defs: a0:a0_430
l2308CAC2:
	word32 a1_1399
	word32 a2_1400
	word32 a3_1401
	word32 a4_1402
	word32 a5_1403
	word32 s4_1404
	word32 s8_1405
	mbedtls_debug_print_ret(ra, 2<32>, 0xFFF925<32>, a0_409, out a1_1399, out a2_1400, out a3_1401, out a4_1402, out a5_1403, out s4_1404, out s5_1146, out s6_1149, out s7_1152, out s8_1405, out s9_1155, out s10_1125, out s11_1128)
	s1_135 = a0_409
	branch a0_409 != 0<32> l2308CAFA
l2308CAFA:
	a5_113 = 0xF9FFF800<32>
	branch a0_409 == 0xF9FFF800<32> l2308CA48
l2308CB04:
	branch a0_409 < 0<32> l2308C92C
l2308CB08:
	Mem484[a0_409 + 116<i32>:word32] = s0_108
l2308CB0A:
l2308CAE2:
	s1_135 = 0xF8FFFD80<32>
l2308CA48:
	word32 a1_1342
	word32 a2_1343
	word32 a3_1344
	word32 s5_1348
	word32 s6_1349
	word32 a7_1346
	word32 s4_1347
	word32 s9_1352
	word32 a4_1345
	word32 s7_1350
	word32 s8_1351
	word32 t4_1355
	word32 s11_1354
	word32 s10_1353
	word32 a5_503
	mbedtls_debug_print_msg(ra, s0_108, 2<32>, 0x230C701C<32>, a5_113, out a1_1342, out a2_1343, out a3_1344, out a4_1345, out a5_503, out a7_1346, out s4_1347, out s5_1348, out s6_1349, out s7_1350, out s8_1351, out s9_1352, out s10_1353, out s11_1354, out t4_1355)
	word32 s0_1356
	word32 a1_1358
	word32 s4_1360
	word32 a5_1359
	word32 a3_534
	word32 a4_535
	word32 s1_1357
	ra = ssl_set_timer(ra, s0_108, 0<32>, a5_503, s2, s0, out s0_1356, out s1_1357, out a1_1358, out a3_534, out a4_535, out a5_1359, out s4_1360, out s5_1146, out s6_1149, out s7_1152, out s9_1155, out s10_1125, out s11_1128)
	branch a4_535 != 0x10<32> l2308CB1A
l2308CB1A:
	word32 s0_557 = Mem302[0x10<32>:word32]
	word32 a2_558 = Mem302[a3_534 + 48<i32>:word32]
	word32 a5_559 = Mem302[0x7C<32>:word32]
	branch a3_534 <u a5_559 l2308CB40
l2308CB40:
	branch a3_534 << 1<u32> <u a3_534 l2308CB4E
l2308CB48:
	branch a3_534 << 1<u32> >=u a5_559 l2308CB4E
l2308CB4C:
	a5_559 = a3_534 << 1<u32>
l2308CB4E:
	Mem564[a5_559 + 48<i32>:word32] = a2_558
	word32 s0_565 = Mem564[a5_559 + 48<i32>:word32]
	word32 a2_1371
	word32 a1_1370
	word32 a7_1374
	word32 a5_576
	word32 s7_1378
	word32 s8_1379
	word32 s4_1375
	word32 a4_1373
	word32 a3_1372
	word32 s10_1381
	word32 s11_1382
	word32 s6_1377
	word32 s9_1380
	word32 s5_1376
	word32 t4_1383
	mbedtls_debug_print_msg(ra, s0_565, 3<32>, 0x230C7C88<32>, Mem564[a5_559 + 48<i32>:word32], out a1_1370, out a2_1371, out a3_1372, out a4_1373, out a5_576, out a7_1374, out s4_1375, out s5_1376, out s6_1377, out s7_1378, out s8_1379, out s9_1380, out s10_1381, out s11_1382, out t4_1383)
	word32 a0_633
	word32 s0_1384
	word32 s1_1385
	word32 a2_1387
	word32 a1_1386
	word32 a3_1388
	word32 a5_1390
	word32 s4_1391
	word32 a4_1389
	ra = mbedtls_ssl_resend(ra, s0_565, s0_565, a5_576, 0x230C8000<32>, mstatus, dwArgF8, out s0_1384, out s1_1385, out a0_633, out a1_1386, out a2_1387, out a3_1388, out a4_1389, out a5_1390, out s2_1131, out s3_1135, out s4_1391, out s5_1146, out s6_1149, out s7_1152, out s9_1155, out s10_1125, out s11_1128, out mstatus)
	s1_135 = a0_633
	branch a0_633 == 0<32> l2308CC2E
l2308CC2E:
	s1_135 = 0xF9000700<32>
l2308CB76:
	word32 a2_1393
	word32 a3_1394
	word32 a1_1392
	word32 a4_1395
	word32 a5_1396
	word32 s4_1397
	word32 s8_1398
	mbedtls_debug_print_ret(ra, 1<32>, 0xFFF93A<32>, a0_633, out a1_1392, out a2_1393, out a3_1394, out a4_1395, out a5_1396, out s4_1397, out s5_1146, out s6_1149, out s7_1152, out s8_1398, out s9_1155, out s10_1125, out s11_1128)
l2308CB26:
	word32 a1_1361
	word32 a5_1365
	word32 s8_1368
	word32 a3_1363
	word32 a2_1362
	word32 a7_1366
	word32 s4_1367
	word32 a4_1364
	word32 t4_1369
	mbedtls_debug_print_msg(ra, s0_557, 1<32>, 0x230B2580<32>, a5_559, out a1_1361, out a2_1362, out a3_1363, out a4_1364, out a5_1365, out a7_1366, out s4_1367, out s5_1146, out s6_1149, out s7_1152, out s8_1368, out s9_1155, out s10_1125, out s11_1128, out t4_1369)
l2308CA72:
	s1_135 = 0xF9FFF800<32>
l2308CA32:
l2308CA14:
l2308CA20:
	word32 s8_1300
	word32 t4_1301
	word32 a4_1296
	word32 a5_1297
	word32 s4_1299
	word32 a7_1298
	word32 a1_1293
	word32 a3_1295
	word32 a2_1294
	mbedtls_debug_print_msg(ra, s0_108, 2<32>, 0x230C700C<32>, a5_113, out a1_1293, out a2_1294, out a3_1295, out a4_1296, out a5_1297, out a7_1298, out s4_1299, out s5_1146, out s6_1149, out s7_1152, out s8_1300, out s9_1155, out s10_1125, out s11_1128, out t4_1301)
	s1_135 = 0<32>
l2308C99E:
l2308C9AC:
	word32 a2_1334
	word32 s4_1339
	word32 t4_1341
	word32 s8_1340
	word32 a7_1338
	word32 a3_1335
	word32 a5_1337
	word32 a4_1336
	word32 a1_1333
	mbedtls_debug_print_msg(ra, s0_108, 1<32>, 0x230C6E20<32>, a5_113, out a1_1333, out a2_1334, out a3_1335, out a4_1336, out a5_1337, out a7_1338, out s4_1339, out s5_1146, out s6_1149, out s7_1152, out s8_1340, out s9_1155, out s10_1125, out s11_1128, out t4_1341)
	s1_135 = 0xF9000400<32>
l2308C984:
	a4_765 = 0x230C6F90<32>
l2308C95C:
	a4_765 = 0x230C6F70<32>
l2308C96A:
l2308C90E:
	a4_765 = 0x230C7078<32>
l2308C91E:
	word32 s8_1257
	word32 a1_1250
	word32 a4_1253
	word32 a2_1251
	word32 a3_1252
	word32 s4_1256
	word32 a5_1254
	word32 a7_1255
	word32 t4_1258
	mbedtls_debug_print_msg(ra, s0_258, 1<32>, a4_765, a5_113, out a1_1250, out a2_1251, out a3_1252, out a4_1253, out a5_1254, out a7_1255, out s4_1256, out s5_1146, out s6_1149, out s7_1152, out s8_1257, out s9_1155, out s10_1125, out s11_1128, out t4_1258)
	s1_135 = 0xF8FFFF00<32>
l2308C92C:
	0<32> = dwArg0128
	s0Out = s4
	a0Out = s1_135
	s2Out = s2_1131
	s3Out = s3_1135
	s4Out = dwArg78
	s5Out = s5_1146
	s6Out = s6_1149
	s7Out = s7_1152
	s8Out = s5
	s9Out = s9_1155
	s10Out = s10_1125
	s11Out = s11_1128
	mstatusOut = mstatus
	return ra
mbedtls_ssl_fetch_input_exit:


word32 mbedtls_ssl_prepare_handshake_record(word32 ra, word32 a4, word32 a5, word32 mstatus, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handle_message_type
// MayUse:  a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a4 mstatus ra s1 s11 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_prepare_handshake_record_entry:
l2308CC36:
	word32 a0_23 = Mem21[a4:word32]
	word32 a4_27 = CONVERT(Mem21[a4 + 116<i32>:uint16], uint16, word32)
	word32 a3_28 = 0xC<32>
	branch (a4_27 & 2<32>) != 0<32> l2308CC5C
l2308CC5A:
	a3_28 = 4<32>
l2308CC5C:
	word32 a1_1283
	word32 a4_112
	word32 s11_1002
	word32 s1_1013
	word32 s2_1321 = 0x230C8000<32>
	branch a5 >=u a3_28 l2308CC9C
l2308CC9C:
	word32 s0_36 = Mem21[(a4_27 & 2<32>) + 100<i32>:word32]
	Mem48[s0_36 + 128<i32>:word32] = (CONVERT(Mem21[(a4_27 & 2<32>) + 1<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem21[(a4_27 & 2<32>) + 2<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem21[(a4_27 & 2<32>) + 3<i32>:byte], byte, word32)) + a3_28
	word32 a5_56
	word32 a3_59
	word32 s9_1455
	word32 s10_1456
	word32 t4_1457
	word32 s8_1454
	word32 s4_1450
	word32 s6_1452
	word32 s5_1451
	word32 a2_1448
	word32 a7_1449
	word32 s7_1453
	word32 a0_55 = mbedtls_debug_print_msg(ra, s0_36, 3<32>, 0x230C744C<32>, a5, out a1_1283, out a2_1448, out a3_59, out a4_112, out a5_56, out a7_1449, out s4_1450, out s5_1451, out s6_1452, out s7_1453, out s8_1454, out s9_1455, out s10_1456, out s11_1002, out t4_1457)
	s3 = 0x1000000<32>
	branch (CONVERT(Mem48[a5_56 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308D13A
l2308D13A:
	word32 s0_77 = Mem48[a4_112 + 112<i32>:word32]
	word32 a5_78 = Mem48[s0_77 + 128<i32>:int32]
	branch a4_112 >=u a5_78 l2308CE0A
l2308D144:
	word32 s9_1516
	word32 s10_1517
	word32 t4_1518
	word32 a7_1510
	word32 a2_1507
	word32 a3_1508
	word32 a5_1509
	word32 s5_1512
	word32 s7_1514
	word32 s6_1513
	word32 s8_1515
	word32 s4_1511
	mbedtls_debug_print_msg(ra, s0_77, 1<32>, 0x230C76F8<32>, a5_78, out a1_1283, out a2_1507, out a3_1508, out a4_112, out a5_1509, out a7_1510, out s4_1511, out s5_1512, out s6_1513, out s7_1514, out s8_1515, out s9_1516, out s10_1517, out s11_1002, out t4_1518)
	s1_1013 = 0xF8FFFF80<32>
l2308CCE6:
	word32 a5_848
	word32 a3_850
	word32 s0_107 = Mem48[a0_55 + 100<i32>:word32]
	branch a3_59 == 0<32> l2308CD84
l2308CCEC:
	word32 a5_111 = CONVERT(Mem48[a0_55 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem48[a0_55 + 4<i32>:byte], byte, word32)
	a4_112 = a5_111 << 8<u32>
	word32 a3_115 = Mem48[(a5_111 << 8<u32>) + 32<i32>:word32]
	word32 a5_117 = CONVERT(SLICE(a5_111 >>u 8<i32> | a5_111 << 8<u32>, word16, 0), word16, word32)
	branch a5_111 << 8<u32> == a5_117 l2308CD84
l2308CD84:
	word32 s0_120 = Mem48[a4_112 + 112<i32>:word32]
	word32 a5_121 = Mem48[s0_120 + 128<i32>:int32]
	branch a4_112 >=u a5_121 l2308CDE4
l2308CDE4:
	word32 a4_1522
	word32 a1_1519
	word32 a2_1520
	word32 a3_1521
	word32 a0_127 = memcmp(a0_55 + 6<32>, 0x230C6DB0<32>, 3<32>, out a1_1519, out a2_1520, out a3_1521, out a4_1522, out a5_121)
	branch a0_127 != 0<32> l2308CD8E
l2308CDF6:
	s0_120 = Mem48[a0_127 + 100<i32>:word32]
	word32 a2_1583
	word32 a3_1584
	branch memcmp(a0_127 + 9<32>, a0_127 + 1<i32>, 3<32>, out a1_1283, out a2_1583, out a3_1584, out a4_112, out a5_121) != 0<32> l2308CD8E
l2308CE06:
	s0_120 = Mem48[a5_121 + 48<i32>:word32]
	branch a5_121 != 0<32> l2308CE0E
l2308CE0E:
	a5_121 = Mem48[a5_121 + 44<i32>:word32]
	branch a5_121 != 0<32> l2308CD8E
l2308CE12:
l2308CD8E:
	word32 a4_723
	word32 a1_160
	word32 a3_1524
	word32 a2_1523
	word32 s4_1527
	word32 a7_1526
	word32 a4_1525
	word32 s5_1528
	word32 s6_1529
	word32 s8_1531
	word32 s7_1530
	word32 s11_1534
	word32 t4_1535
	word32 s10_1533
	word32 s9_1532
	word32 a5_159
	word32 a0_158 = mbedtls_debug_print_msg(ra, s0_120, 2<32>, 0x230C7514<32>, a5_121, out a1_160, out a2_1523, out a3_1524, out a4_1525, out a5_159, out a7_1526, out s4_1527, out s5_1528, out s6_1529, out s7_1530, out s8_1531, out s9_1532, out s10_1533, out s11_1534, out t4_1535)
	word32 s0_178 = Mem48[a5_159 + 48<i32>:word32]
	word32 s4_179 = Mem48[s0_178 + 128<i32>:int32]
	word32 s5_180 = s4_179 + -12<i32>
	branch a5_159 != 0<32> l2308CE14
l2308CE14:
	word32 a5_185
	branch a0_158 != 0<32> l2308CF1C
l2308CF1C:
	word32 s0_182 = Mem48[a1_160 + 100<i32>:word32]
	word32 a4_1549
	word32 a3_1548
	word32 a2_1547
	word32 a1_1546
	branch memcmp(a0_158, a1_160, 4<32>, out a1_1546, out a2_1547, out a3_1548, out a4_1549, out a5_185) == 0<32> l2308CEBC
l2308CF26:
	word32 a1_1619
	word32 a2_1620
	word32 a3_1621
	word32 a4_1622
	word32 a5_1623
	word32 a7_1624
	word32 s4_1625
	word32 s5_1626
	word32 s6_1627
	word32 s7_1628
	word32 s8_1629
	word32 s9_1630
	word32 s10_1631
	word32 s11_1632
	word32 t4_1633
	mbedtls_debug_print_msg(ra, s0_182, 1<32>, 0x230C75C8<32>, a5_185, out a1_1619, out a2_1620, out a3_1621, out a4_1622, out a5_1623, out a7_1624, out s4_1625, out s5_1626, out s6_1627, out s7_1628, out s8_1629, out s9_1630, out s10_1631, out s11_1632, out t4_1633)
l2308CE1A:
	word32 a3_226
	word32 s4_231
	word32 s9_1558
	word32 t4_1561
	word32 a2_1551
	word32 a5_1553
	word32 a7_1554
	word32 a4_1552
	word32 a1_1550
	word32 s8_1557
	word32 s6_1555
	word32 s7_1556
	word32 s10_1559
	word32 s11_1560
	mbedtls_debug_print_msg(ra, s0_178, 2<32>, 0x230C7568<32>, s4_179 + -12<i32>, out a1_1550, out a2_1551, out a3_226, out a4_1552, out a5_1553, out a7_1554, out s4_231, out s5_180, out s6_1555, out s7_1556, out s8_1557, out s9_1558, out s10_1559, out s11_1560, out t4_1561)
	a5_159 = 0x4000000<32>
	branch Mem48[s0_178 + 128<i32>:int32] <=u 0x4000000<32> l2308CE4C
l2308CE4C:
	word32 a4_245 = (s5_180 >>u 3<u32>) + s4_231
	word32 a5_247 = CONVERT((s5_180 & 7<i32>) != 0<32>, bool, word32) + a4_245
	word32 a1_259
	word32 a4_262
	word32 a5_263
	word32 s1_1563
	word32 s0_1562
	word32 s4_1566
	word32 s8_1567
	word32 a2_1564
	word32 a3_1565
	ra = mycalloc(ra, 0x1000000<32>, 1<32>, a5_247, a3_226, a4_245, a5_247, mstatus, dwLoc20, dwLoc1C, dwArgD8, dwArg0118, out s0_1562, out s1_1563, out a1_259, out a2_1564, out a3_1565, out a4_262, out a5_263, out s2_1321, out s3, out s4_1566, out s8_1567)
	Mem276[s3 + 44<i32>:word32] = 1<32>
	word32 s0_277 = Mem276[a4_262 + 48<i32>:word32]
	branch true l2308CE96
l2308CE96:
	word32 a1_1585
	word32 a2_1586
	word32 a3_1587
	word32 a4_1588
	word32 a5_1589
	word32 a6_1590
	word32 a7_1591
	memcpy(1<32>, a1_259, 6<32>, out a1_1585, out a2_1586, out a3_1587, out a4_1588, out a5_1589, out a6_1590, out a7_1591)
	word32 a0_300
	word32 t1_1592
	word32 a1_1593
	word32 a2_1594
	word32 a3_1595
	word32 a4_1596
	word32 a5_1597
	ra = memset(ra, 7<32>, 0<32>, 3<32>, out t1_1592, out a0_300, out a1_1593, out a2_1594, out a3_1595, out a4_1596, out a5_1597)
	word32 a1_1598
	word32 a2_1599
	word32 a3_1600
	word32 a4_1601
	word32 a6_1602
	word32 a7_1603
	memcpy(a0_300 + 9<32>, a0_300 + 1<i32>, 3<32>, out a1_1598, out a2_1599, out a3_1600, out a4_1601, out a5_185, out a6_1602, out a7_1603)
l2308CEBC:
	s3 = CONVERT(Mem328[a5_185 + 6<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem328[a5_185 + 7<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem328[a5_185 + 8<i32>:byte], byte, word32)
	word32 s1_347 = CONVERT(Mem328[a5_185 + 9<i32>:byte], byte, word32) << 16<i32> | CONVERT(Mem328[a5_185 + 10<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem328[a5_185 + 11<i32>:byte], byte, word32)
	word32 s0_331 = Mem328[a5_185 + 100<i32>:word32]
	branch s5_180 >=u s3 + s1_347 l2308CF46
l2308CF46:
	branch Mem328[s0_331 + 112<i32>:int32] >=u s1_347 + 12<i32> l2308CF70
l2308CF70:
	word32 a1_365
	word32 s4_372
	word32 s5_373
	word32 s7_375
	word32 a2_1649
	word32 a3_1650
	word32 a4_1651
	word32 a5_1652
	word32 a7_1653
	word32 s6_1654
	word32 s8_1655
	word32 s9_1656
	word32 s10_1657
	word32 s11_1658
	word32 t4_1659
	mbedtls_debug_print_msg(ra, s0_331, 2<32>, 0x230C7638<32>, s3, out a1_365, out a2_1649, out a3_1650, out a4_1651, out a5_1652, out a7_1653, out s4_372, out s5_373, out s6_1654, out s7_375, out s8_1655, out s9_1656, out s10_1657, out s11_1658, out t4_1659)
	word32 s0_382 = Mem328[a1_365 + 100<i32>:word32]
	word32 a1_1660
	word32 a2_1661
	word32 a3_1662
	word32 a4_1663
	word32 a5_1664
	word32 a6_1665
	word32 a7_1666
	memcpy(s3 + 12<i32> + s7_375, a1_365 + 0xC<32>, s1_347, out a1_1660, out a2_1661, out a3_1662, out a4_1663, out a5_1664, out a6_1665, out a7_1666)
	word32 a5_402 = 8<32> - (s3 & 7<i32>)
	branch a5_402 == 8<32> l2308D03C
l2308CFAC:
	branch a5_402 <u s1_347 l2308D01C
l2308D01C:
	word32 a4_405 = (s3 >>u 3<u32>) + s4_372
	s1_347 = s1_347 + 0xFFFFFFF8<32> + (s3 & 7<i32>)
	word32 a3_407 = CONVERT(Mem328[a4_405:byte], byte, word32)
	s3 = s3 + a5_402
l2308D02A:
	a5_402 = a5_402 + 0xFFFFFFFF<32>
	word32 a3_415 = a3_407 | 1<32> << a5_402
	a3_407 = a3_415 & 255<i32>
	branch a5_402 != 0<32> l2308D02A
l2308D038:
	Mem418[a4_405:byte] = SLICE(a3_415 & 255<i32>, byte, 0)
l2308D03C:
	word32 a2_421 = s1_347 & 7<i32>
	branch a2_421 == 0<32> l2308D06C
l2308D042:
	word32 a5_428 = (s1_347 + s3 >>u 3<i32>) + s4_372
	word32 a3_430 = CONVERT(Mem429[a5_428:byte], byte, word32)
	s1_347 = s1_347 - a2_421
	word32 a4_433 = 8<32> - a2_421
l2308D058:
	word32 a3_440 = a3_430 | 1<32> << a4_433
	a4_433 = a4_433 + 1<32>
	a3_430 = a3_440 & 255<i32>
	branch a4_433 != 8<32> l2308D058
l2308D068:
	Mem445[a5_428:byte] = SLICE(a3_440 & 255<i32>, byte, 0)
l2308D06C:
	word32 t1_1691
	word32 a0_1692
	word32 a1_1693
	word32 a2_1694
	word32 a3_1695
	word32 a4_1696
	word32 a5_1697
	ra = memset(ra, (s3 >>u 3<u32>) + s4_372, 255<i32>, s1_347 >>u 3<u32>, out t1_1691, out a0_1692, out a1_1693, out a2_1694, out a3_1695, out a4_1696, out a5_1697)
l2308CFB4:
	word32 s1_469 = a5_402 - s1_347
	word32 a4_470 = (s3 >>u 3<u32>) + s4_372
l2308CFBC:
	branch s1_469 != a5_402 l2308D00A
l2308D00A:
	Mem481[a4_470:byte] = SLICE(1<32> << s1_469 | CONVERT(Mem475[a4_470:byte], byte, word32), byte, 0)
	s1_469 = s1_469 + 1<32>
l2308CFC0:
	word32 a5_489 = 0<32>
l2308CFCA:
	branch a5_489 != s5_373 >>u 3<u32> l2308D080
l2308D080:
	branch CONVERT(Mem1046[s4_372 + a5_489:byte], byte, word32) != 255<i32> l2308D164
l2308D08C:
	a5_489 = a5_489 + 1<32>
l2308CFCE:
	word32 a4_499 = 0<32>
	word32 s4_502 = s4_372 + a5_489
l2308CFD8:
	branch a4_499 <u (s5_373 & 7<i32>) l2308D090
l2308D090:
	word32 a5_511 = CONVERT(Mem1046[s4_502:byte], byte, word32) >> 7<32> - a4_499
	a5_489 = a5_511 & 1<32>
	branch (a5_511 & 1<32>) == 0<32> l2308D164
l2308D164:
	word32 a1_1698
	word32 a2_1699
	word32 a3_1700
	word32 a4_1701
	word32 a5_1702
	word32 a7_1703
	word32 s4_1704
	word32 s5_1705
	word32 s6_1706
	word32 s7_1707
	word32 s8_1708
	word32 s9_1709
	word32 s10_1710
	word32 s11_1711
	word32 t4_1712
	mbedtls_debug_print_msg(ra, s0_382, 2<32>, 0x230C7724<32>, a5_489, out a1_1698, out a2_1699, out a3_1700, out a4_1701, out a5_1702, out a7_1703, out s4_1704, out s5_1705, out s6_1706, out s7_1707, out s8_1708, out s9_1709, out s10_1710, out s11_1711, out t4_1712)
	s1_1013 = 0xF9000700<32>
l2308D0A0:
	a4_499 = a4_499 + 1<32>
l2308CFDC:
	word32 a2_577
	word32 a4_579
	word32 s6_585
	word32 a3_1682
	word32 a7_1683
	word32 s4_1684
	word32 s5_1685
	word32 s7_1686
	word32 s8_1687
	word32 s9_1688
	word32 s10_1689
	word32 t4_1690
	word32 a1_576
	word32 a0_574 = mbedtls_debug_print_msg(ra, s0_382, 2<32>, 0x230C7740<32>, a5_489, out a1_576, out a2_577, out a3_1682, out a4_579, out a5_159, out a7_1683, out s4_1684, out s5_1685, out s6_585, out s7_1686, out s8_1687, out s9_1688, out s10_1689, out s11_1002, out t4_1690)
	s0_178 = Mem1046[a5_159 + 112<i32>:word32]
	branch s6_585 >=u a5_159 l2308D0A4
l2308D0A4:
	word32 s0_595 = Mem1046[a4_579 + 124<i32>:word32]
	branch a4_579 >=u a2_577 l2308D0FC
l2308D0AC:
	word32 a3_596 = Mem1046[s0_595 + 128<i32>:int32]
	a0_574 = a0_574 + a3_596
	word32 s0_601 = Mem1046[a3_596 + 80<i32>:word32]
	word32 a4_603 = a0_574 - a5_159
	Mem606[a4_603 + 124<i32>:word32] = s0_601
	word32 a2_599 = a2_577 - a4_579
	word32 a4_608 = a4_603 + a2_599
	Mem609[a4_608 + 116<i32>:word32] = s0_601
	word32 a1_602 = a5_159 + a4_579
	word32 a5_610 = 0x400013D<32> - (a5_159 - a3_596)
	branch a5_610 >=u a4_608 l2308D0F8
l2308D0F8:
	word32 a3_1734
	word32 a4_1735
	a1_576 = memmove(a0_574, a1_602, a2_599, out a3_1734, out a4_1735, out a5_159)
l2308D0FC:
	word32 a2_627
	word32 a1_1713
	word32 a3_1714
	word32 a4_1715
	word32 a5_1716
	word32 a6_1717
	word32 a7_1718
	memcpy(a0_574, a1_576, Mem616[Mem616[a5_159 + 48<i32>:word32] + 128<i32>:int32], out a1_1713, out a2_627, out a3_1714, out a4_1715, out a5_1716, out a6_1717, out a7_1718)
	word32 a5_661
	word32 s0_1719
	word32 s1_1720
	word32 a0_1721
	word32 a1_1722
	word32 a2_1723
	word32 a3_1724
	word32 a4_1725
	word32 a6_1726
	word32 s4_1727
	word32 t3_1728
	vPortFree(a0_574, a2_627, Mem616[a0_574 + 44<i32>:word32], mstatus, dwArg0118, dwArg0158, out s0_1719, out s1_1720, out a0_1721, out a1_1722, out a2_1723, out a3_1724, out a4_1725, out a5_661, out a6_1726, out s4_1727, out t3_1728)
	Mem673[a5_661 + 44<i32>:word32] = 0<32>
	word32 a0_1729
	word32 a2_1730
	word32 a3_1731
	word32 a5_1732
	word32 a7_1733
	mbedtls_debug_print_buf(ra, 3<32>, a5_661, out a0_1729, out a1_1283, out a2_1730, out a3_1731, out a4_112, out a5_1732, out a7_1733)
l2308CE0A:
	s1_1013 = 0<32>
l2308D0D8:
	word32 a1_1736
	word32 a2_1737
	word32 a3_1738
	word32 a4_1739
	word32 a5_1740
	word32 a7_1741
	word32 s4_1742
	word32 s5_1743
	word32 s6_1744
	word32 s7_1745
	word32 s8_1746
	word32 s9_1747
	word32 s10_1748
	word32 s11_1749
	word32 t4_1750
	mbedtls_debug_print_msg(ra, s0_601, 1<32>, 0x230C768C<32>, a5_610, out a1_1736, out a2_1737, out a3_1738, out a4_1739, out a5_1740, out a7_1741, out s4_1742, out s5_1743, out s6_1744, out s7_1745, out s8_1746, out s9_1747, out s10_1748, out s11_1749, out t4_1750)
	s1_1013 = 0xF9000600<32>
l2308CFFC:
	a4_723 = 0x230C7664<32>
l2308CF52:
	word32 a1_1667
	word32 a2_1668
	word32 a3_1669
	word32 a4_1670
	word32 a5_1671
	word32 a7_1672
	word32 s4_1673
	word32 s5_1674
	word32 s6_1675
	word32 s7_1676
	word32 s8_1677
	word32 s9_1678
	word32 s10_1679
	word32 s11_1680
	word32 t4_1681
	mbedtls_debug_print_msg(ra, s0_331, 1<32>, 0x230C7610<32>, s1_347, out a1_1667, out a2_1668, out a3_1669, out a4_1670, out a5_1671, out a7_1672, out s4_1673, out s5_1674, out s6_1675, out s7_1676, out s8_1677, out s9_1678, out s10_1679, out s11_1680, out t4_1681)
l2308CEFA:
	word32 a1_1634
	word32 a2_1635
	word32 a3_1636
	word32 a4_1637
	word32 a5_1638
	word32 a7_1639
	word32 s4_1640
	word32 s5_1641
	word32 s6_1642
	word32 s7_1643
	word32 s8_1644
	word32 s9_1645
	word32 s10_1646
	word32 s11_1647
	word32 t4_1648
	mbedtls_debug_print_msg(ra, s0_331, 1<32>, 0x230C75E4<32>, s3, out a1_1634, out a2_1635, out a3_1636, out a4_1637, out a5_1638, out a7_1639, out s4_1640, out s5_1641, out s6_1642, out s7_1643, out s8_1644, out s9_1645, out s10_1646, out s11_1647, out t4_1648)
l2308CF3E:
	s1_1013 = 0xF8FFFE00<32>
l2308CE76:
	word32 a1_1604
	word32 a2_1605
	word32 a3_1606
	word32 a4_1607
	word32 a5_1608
	word32 a7_1609
	word32 s4_1610
	word32 s5_1611
	word32 s6_1612
	word32 s7_1613
	word32 s8_1614
	word32 s9_1615
	word32 s10_1616
	word32 s11_1617
	word32 t4_1618
	mbedtls_debug_print_msg(ra, s0_277, 1<32>, 0x230C75B0<32>, a5_263, out a1_1604, out a2_1605, out a3_1606, out a4_1607, out a5_1608, out a7_1609, out s4_1610, out s5_1611, out s6_1612, out s7_1613, out s8_1614, out s9_1615, out s10_1616, out s11_1617, out t4_1618)
	s1_1013 = 0xF8000100<32>
l2308CE3E:
	a4_723 = 0x230C7594<32>
l2308CDB4:
	a4_723 = 0x230C753C<32>
l2308CDC0:
	word32 a2_1569
	word32 a1_1568
	word32 a3_1570
	word32 a4_1571
	word32 a5_1572
	word32 a7_1573
	word32 s4_1574
	word32 s5_1575
	word32 s6_1576
	word32 s7_1577
	word32 s8_1578
	word32 s9_1579
	word32 s10_1580
	word32 s11_1581
	word32 t4_1582
	mbedtls_debug_print_msg(ra, s0_178, 1<32>, a4_723, a5_159, out a1_1568, out a2_1569, out a3_1570, out a4_1571, out a5_1572, out a7_1573, out s4_1574, out s5_1575, out s6_1576, out s7_1577, out s8_1578, out s9_1579, out s10_1580, out s11_1581, out t4_1582)
	s1_1013 = 0xF8FFFF80<32>
l2308CDD2:
	a5_848 = s1_1013
	a3_850 = 0xFFFC5F<32>
l2308CD0A:
	word32 a6_851 = Mem48[a3_115 + 64<i32>:int32]
	branch a6_851 + -1<i32> != a5_117 l2308CD60
l2308CD16:
	branch CONVERT(Mem48[a0_55:byte], byte, word32) == 3<32> l2308CD60
l2308CD60:
	word32 a5_1472
	word32 s7_1477
	word32 s8_1478
	word32 a3_1471
	word32 t4_1481
	word32 s9_1479
	word32 s10_1480
	word32 s6_1476
	word32 s4_1474
	word32 s5_1475
	word32 a7_1473
	word32 a2_1470
	mbedtls_debug_print_msg(ra, s0_107, 2<32>, 0x230C74D0<32>, a5_117, out a1_1283, out a2_1470, out a3_1471, out a4_112, out a5_1472, out a7_1473, out s4_1474, out s5_1475, out s6_1476, out s7_1477, out s8_1478, out s9_1479, out s10_1480, out s11_1002, out t4_1481)
l2308CD20:
	word32 a5_895
	word32 a1_1482
	word32 s6_1489
	word32 s4_1487
	word32 a7_1486
	word32 a4_1485
	word32 a3_1484
	word32 a2_1483
	word32 s5_1488
	word32 s9_1492
	word32 s8_1491
	word32 s7_1490
	word32 s10_1493
	word32 t4_1495
	word32 s11_1494
	mbedtls_debug_print_msg(ra, s0_107, 2<32>, 0x230C7484<32>, a6_851 + -1<i32>, out a1_1482, out a2_1483, out a3_1484, out a4_1485, out a5_895, out a7_1486, out s4_1487, out s5_1488, out s6_1489, out s7_1490, out s8_1491, out s9_1492, out s10_1493, out s11_1494, out t4_1495)
	word32 a0_943
	word32 a5_1500
	word32 a2_1498
	word32 s1_1497
	word32 s0_1496
	word32 s4_1501
	word32 s6_1503
	word32 a3_1499
	word32 s5_1502
	word32 s7_1504
	word32 s9_1505
	word32 s10_1506
	ra = mbedtls_ssl_resend(ra, s0_107, s0_107, a5_895, 0x230C8000<32>, mstatus, dwArgE8, out s0_1496, out s1_1497, out a0_943, out a1_1283, out a2_1498, out a3_1499, out a4_112, out a5_1500, out s2_1321, out s3, out s4_1501, out s5_1502, out s6_1503, out s7_1504, out s9_1505, out s10_1506, out s11_1002, out mstatus)
	s1_1013 = a0_943
	branch a0_943 == 0<32> l2308CD7C
l2308CD7C:
	s1_1013 = 0xF9000700<32>
l2308CD44:
	a5_848 = a0_943
	a3_850 = s3 + -956<i32>
l2308CD52:
	word32 a5_1538
	word32 a2_1536
	word32 a3_1537
	word32 s4_1539
	word32 s7_1542
	word32 s9_1544
	word32 s5_1540
	word32 s8_1543
	word32 s6_1541
	word32 s10_1545
	mbedtls_debug_print_ret(ra, 1<32>, a3_850, a5_848, out a1_1283, out a2_1536, out a3_1537, out a4_112, out a5_1538, out s4_1539, out s5_1540, out s6_1541, out s7_1542, out s8_1543, out s9_1544, out s10_1545, out s11_1002)
l2308CC64:
	word32 t4_1469
	word32 s6_1464
	word32 a7_1461
	word32 s4_1462
	word32 a3_1459
	word32 a5_1460
	word32 s5_1463
	word32 a2_1458
	word32 s9_1467
	word32 s8_1466
	word32 s7_1465
	word32 s10_1468
	mbedtls_debug_print_msg(ra, a0_23, 1<32>, 0x230C742C<32>, a5, out a1_1283, out a2_1458, out a3_1459, out a4_112, out a5_1460, out a7_1461, out s4_1462, out s5_1463, out s6_1464, out s7_1465, out s8_1466, out s9_1467, out s10_1468, out s11_1002, out t4_1469)
	s1_1013 = 0xF8FFFE00<32>
l2308CC84:
	0<32> = dwArg0198
	s1Out = s1_1013
	a0Out = s1_1013
	a1Out = a1_1283
	a4Out = a4_112
	s2Out = s2_1321
	s3Out = s3
	s11Out = s11_1002
	mstatusOut = mstatus
	return ra
mbedtls_ssl_prepare_handshake_record_exit:


word32 mbedtls_ssl_handle_message_type(word32 ra, word32 a4, word32 mstatus, word32 dwArg38, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a2 a4 mstatus ra s1 s11 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_ssl_handle_message_type_entry:
l2308D186:
	word32 a0_141
	branch a4 == 0x16<32> l2308D1A6
l2308D1A6:
	ra = mbedtls_ssl_prepare_handshake_record(ra, a4, 0x16<32>, mstatus, dwArgC8, dwArgD8, dwArg0108, dwArg0148, dwArg0188, out s1, out a0_141, out a1, out a4, out s2, out s3, out s11, out mstatus)
	branch a0_141 == 0<32> l2308D19A
l2308D19A:
	branch a4 == 0x15<32> l2308D1B8
l2308D1B8:
	word32 a5_64
	word32 t4_352
	word32 s10_351
	word32 s9_350
	word32 s8_349
	word32 s7_348
	word32 s6_347
	word32 s5_346
	word32 s4_345
	word32 a7_344
	word32 a4_343
	word32 a3_342
	word32 a2_341
	mbedtls_debug_print_msg(ra, Mem11[0x79<32>:word32], 2<32>, 0x230C7128<32>, CONVERT(Mem11[0x15<32>:byte], byte, word32), out a1, out a2_341, out a3_342, out a4_343, out a5_64, out a7_344, out s4_345, out s5_346, out s6_347, out s7_348, out s8_349, out s9_350, out s10_351, out s11, out t4_352)
	s2 = 0x1000000<32>
	s1 = 0x230C8000<32>
	word32 s0_82 = Mem11[a5_64 + 100<i32>:word32]
	a4 = CONVERT(Mem11[a5_64:byte], byte, word32)
	branch a4 != 2<32> l2308D210
l2308D210:
	branch a4 != 1<32> l2308D25E
l2308D216:
	word32 a5_86 = CONVERT(Mem11[a5_64 + 1<i32>:byte], byte, word32)
	branch a5_86 != 0<32> l2308D23C
l2308D23C:
	a4 = 100<i32>
	branch a5_86 != 100<i32> l2308D25E
l2308D25E:
	a0_141 = 0xF9FFF980<32>
l2308D244:
	word32 a2_377
	word32 a3_378
	word32 a5_379
	word32 a7_380
	word32 s4_381
	word32 s5_382
	word32 s6_383
	word32 s7_384
	word32 s8_385
	word32 s9_386
	word32 s10_387
	word32 t4_388
	mbedtls_debug_print_msg(ra, s0_82, 2<32>, 0x230C718C<32>, a5_86, out a1, out a2_377, out a3_378, out a4, out a5_379, out a7_380, out s4_381, out s5_382, out s6_383, out s7_384, out s8_385, out s9_386, out s10_387, out s11, out t4_388)
l2308D21C:
	word32 a2_365
	word32 a3_366
	word32 a5_367
	word32 a7_368
	word32 s4_369
	word32 s5_370
	word32 s6_371
	word32 s7_372
	word32 s8_373
	word32 s9_374
	word32 s10_375
	word32 t4_376
	mbedtls_debug_print_msg(ra, s0_82, 2<32>, 0x230C7170<32>, a5_86, out a1, out a2_365, out a3_366, out a4, out a5_367, out a7_368, out s4_369, out s5_370, out s6_371, out s7_372, out s8_373, out s9_374, out s10_375, out s11, out t4_376)
	a0_141 = 0xF8000780<32>
l2308D1EC:
	word32 s7_360
	word32 s8_361
	word32 s6_359
	word32 s5_358
	word32 s4_357
	word32 a7_356
	word32 a5_355
	word32 a3_354
	word32 a2_353
	word32 s9_362
	word32 s10_363
	word32 t4_364
	mbedtls_debug_print_msg(ra, s0_82, 1<32>, 0x230C714C<32>, CONVERT(Mem11[a5_64 + 1<i32>:byte], byte, word32), out a1, out a2_353, out a3_354, out a4, out a5_355, out a7_356, out s4_357, out s5_358, out s6_359, out s7_360, out s8_361, out s9_362, out s10_363, out s11, out t4_364)
	a0_141 = 0xF8FFF880<32>
l2308D1A2:
	a0_141 = 0<32>
l2308D1AC:
	0<32> = dwArg38
	s1Out = s1
	a0Out = a0_141
	a1Out = a1
	a2Out = dwArg10
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_ssl_handle_message_type_exit:


word32 mbedtls_ssl_send_alert_message(word32 ra, word32 a0, word32 a2, word32 a5, word32 mstatus, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_send_fatal_handshake_failure
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a0 a4 mstatus ra s0 s10 s2 s3 s5 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_send_alert_message_entry:
l2308D266:
	word32 s1_151
	branch a0 == 0<32> l2308D308
l2308D276:
	word32 a0_18 = Mem15[a5:word32]
	branch a5 == 0<32> l2308D308
l2308D308:
	s1_151 = 0xF8FFFF00<32>
l2308D27C:
	word32 s4_42
	word32 s6_257
	word32 s7_258
	word32 s8_259
	word32 s9_260
	word32 s10_261
	word32 s5_256
	word32 a7_255
	word32 a5_254
	word32 a4_253
	word32 a3_252
	word32 a2_251
	word32 a1_250
	word32 s11_262
	word32 t4_263
	mbedtls_debug_print_msg(ra, a0_18, 2<32>, 0x230C7C58<32>, a5, out a1_250, out a2_251, out a3_252, out a4_253, out a5_254, out a7_255, out s4_42, out s5_256, out s6_257, out s7_258, out s8_259, out s9_260, out s10_261, out s11_262, out t4_263)
	Mem53[a0_18 + 164<i32>:word32] = 0x15<32>
	Mem55[a0_18 + 168<i32>:word32] = 2<32>
	Mem58[Mem55[a0_18 + 160<i32>:int32]:byte] = SLICE(s4_42, byte, 0)
	word32 a5_59 = Mem58[a0_18 + 160<i32>:int32]
	Mem60[a5_59 + 1<i32>:byte] = SLICE(a2, byte, 0)
	word32 a5_66
	word32 s0_70
	word32 a0_87
	word32 s1_264
	word32 a1_265
	word32 a2_266
	word32 a3_267
	word32 a4_268
	word32 s4_269
	word32 s5_270
	word32 s11_271
	ra = mbedtls_ssl_write_record(ra, a2, a0_18, a5_59, mstatus, out s0_70, out s1_264, out a0_87, out a1_265, out a2_266, out a3_267, out a4_268, out a5_66, out s2, out s3, out s4_269, out s5_270, out s11_271, out mstatus)
	s1_151 = a0_87
	branch a0_87 == 0<32> l2308D2EE
l2308D2EE:
	word32 a1_272
	word32 a2_273
	word32 a3_274
	word32 a5_275
	word32 a7_276
	word32 s4_277
	word32 s6_278
	word32 s7_279
	word32 s8_280
	word32 s11_281
	word32 t4_282
	mbedtls_debug_print_msg(ra, s0_70, 2<32>, 0x230C7C70<32>, a5_66, out a1_272, out a2_273, out a3_274, out a4, out a5_275, out a7_276, out s4_277, out s5, out s6_278, out s7_279, out s8_280, out s9, out s10, out s11_281, out t4_282)
l2308D2C2:
	word32 a1_283
	word32 a2_284
	word32 a3_285
	word32 a5_286
	word32 s4_287
	word32 s6_288
	word32 s7_289
	word32 s8_290
	word32 s11_291
	mbedtls_debug_print_ret(ra, 1<32>, s3 + -29<i32>, a0_87, out a1_283, out a2_284, out a3_285, out a4, out a5_286, out s4_287, out s5, out s6_288, out s7_289, out s8_290, out s9, out s10, out s11_291)
l2308D2DC:
	s0Out = s1
	a0Out = s1_151
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s5Out = s5
	s8Out = s4
	s9Out = s9
	s10Out = s10
	mstatusOut = mstatus
	return ra
mbedtls_ssl_send_alert_message_exit:


word32 mbedtls_ssl_send_fatal_handshake_failure(word32 ra, word32 a0, word32 a5, word32 mstatus, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut: a0 a4 mstatus s0 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_send_fatal_handshake_failure_entry:
l2308D310:
l2308D316_thunk_mbedtls_ssl_send_alert_message:
	word32 a0_9
	word32 s0_12
	word32 a4_19
	word32 mstatus_22
	word32 s5_28
	word32 s2_43
	word32 s3_44
	word32 s8_45
	word32 s9_46
	word32 s10_47
	mbedtls_ssl_send_alert_message(ra, a0, 40<i32>, a5, mstatus, out s0_12, out a0_9, out a4_19, out s2_43, out s3_44, out s5_28, out s8_45, out s9_46, out s10_47, out mstatus_22)
	a0Out = a0_9
	a4Out = a4_19
	s5Out = s5_28
	mstatusOut = mstatus_22
	return s0_12
mbedtls_ssl_send_fatal_handshake_failure_exit:


void mbedtls_ssl_write_certificate(word32 ra, word32 a5, word32 mstatus, word32 dwArgB4, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +00B4:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_write_certificate_entry:
l2308D31A:
	word32 a0_15 = Mem13[a5 + 64<i32>:word32]
	word32 s2_18 = Mem13[a5:int32]
	word32 a7_468
	word32 s4_469
	word32 a5_467
	word32 a3_465
	word32 a4_466
	word32 a2_464
	word32 a1_463
	word32 s5_470
	word32 s6_471
	word32 s7_472
	word32 s8_473
	word32 s9_474
	word32 s10_475
	word32 s11_476
	word32 t4_477
	mbedtls_debug_print_msg(ra, a0_15, 2<32>, 0x230C7D7C<32>, a5, out a1_463, out a2_464, out a3_465, out a4_466, out a5_467, out a7_468, out s4_469, out s5_470, out s6_471, out s7_472, out s8_473, out s9_474, out s10_475, out s11_476, out t4_477)
	word32 a5_48 = CONVERT(Mem13[s2_18 + 10<i32>:byte], byte, word32) + 0xFFFFFFFB<32> & 255<i32>
	branch a5_48 >u 6<32> l2308D398
l2308D35C:
	word32 a5_50 = 75<i32> >>u a5_48
	a5_48 = a5_50 & 1<32>
	branch (a5_50 & 1<32>) == 0<32> l2308D398
l2308D398:
	word32 a5_55 = CONVERT(Mem13[a5_48 + 116<i32>:uint16], uint16, word32)
	word32 s0_54 = Mem13[a5_48:word32]
	word32 a5_56 = a5_55 & 1<32>
	branch (a5_55 & 1<32>) != 0<32> l2308D3CA
l2308D3CA:
	branch mbedtls_ssl_own_cert(a5_55 & 1<32>, out a5_56) != 0<32> l2308D3F4
l2308D3D2:
	word32 a1_557
	word32 a2_558
	word32 a3_559
	word32 a4_560
	word32 a5_561
	word32 a7_562
	word32 s4_563
	word32 s5_564
	word32 s6_565
	word32 s7_566
	word32 s8_567
	word32 s9_568
	word32 s10_569
	word32 s11_570
	word32 t4_571
	mbedtls_debug_print_msg(ra, s0_54, 1<32>, 0x230C7DB0<32>, a5_56, out a1_557, out a2_558, out a3_559, out a4_560, out a5_561, out a7_562, out s4_563, out s5_564, out s6_565, out s7_566, out s8_567, out s9_568, out s10_569, out s11_570, out t4_571)
l2308D3A2:
	branch Mem13[s0_54 + 176<i32>:int32] != 0<32> l2308D3F4
l2308D3F4:
	word32 a5_116
	word32 s0_122
	word32 a5_492
	word32 s1_493
	word32 a0_494
	word32 a1_495
	word32 a3_496
	word32 s3_497
	word32 s4_498
	word32 s7_499
	word32 s9_500
	word32 s10_501
	word32 s11_502
	word32 a2_119
	word32 ra_109 = mbedtls_debug_print_crt(ra, 3<32>, 0x230C7DCC<32>, mbedtls_ssl_own_cert(a5_56, out a5_492), out s0_122, out s1_493, out a0_494, out a1_495, out a2_119, out a3_496, out a5_116, out s3_497, out s4_498, out s7_499, out s9_500, out s10_501, out s11_502)
	word32 a5_503
	word32 s1_137 = mbedtls_ssl_own_cert(a5_116, out a5_503)
	word32 a4_138 = 7<32>
l2308D424:
	branch s1_137 != 0<32> l2308D48C
l2308D48C:
	word32 a0_145 = a4_138 + 3<i32>
	word32 a5_148 = a0_145 + a2_119
	branch 0x3FFFFFD<32> - a4_138 >=u a2_119 l2308D4C2
l2308D4C2:
	Mem155[Mem142[s0_122 + 160<i32>:int32] + a4_138:byte] = SLICE(a2_119 >>u 0x10<u32>, byte, 0)
	word32 a1_157 = a2_119 >>u 8<u32>
	Mem159[Mem155[s0_122 + 160<i32>:int32] + a4_138 + 1<i32>:byte] = SLICE(a1_157, byte, 0)
	Mem162[a4_138 + Mem159[s0_122 + 160<i32>:int32] + 2<i32>:byte] = SLICE(a2_119, byte, 0)
	word32 s1_164 = Mem162[a1_157 + 8<i32>:word32]
	word32 a5_167
	word32 a1_572
	word32 a2_573
	word32 a3_574
	word32 a4_575
	word32 a6_576
	word32 a7_577
	memcpy(a0_145 + Mem162[s0_122 + 160<i32>:int32], a1_157, a2_119, out a1_572, out a2_573, out a3_574, out a4_575, out a5_167, out a6_576, out a7_577)
	a2_119 = dwArgB4
	s1_137 = Mem162[s1_164 + 304<i32>:int32]
	a4_138 = a5_167
l2308D49E:
	word32 a1_578
	word32 a2_579
	word32 a3_580
	word32 a4_581
	word32 a5_582
	word32 a7_583
	word32 s4_584
	word32 s5_585
	word32 s6_586
	word32 s7_587
	word32 s8_588
	word32 s9_589
	word32 s10_590
	word32 s11_591
	word32 t4_592
	mbedtls_debug_print_msg(ra_109, s0_122, 1<32>, 0x230C7DDC<32>, a5_148, out a1_578, out a2_579, out a3_580, out a4_581, out a5_582, out a7_583, out s4_584, out s5_585, out s6_586, out s7_587, out s8_588, out s9_589, out s10_590, out s11_591, out t4_592)
l2308D426:
	word32 a5_214 = a4_138 + -7<i32>
	Mem216[Mem142[s0_122 + 160<i32>:int32] + 4<i32>:byte] = SLICE(a5_214 >>u 0x10<u32>, byte, 0)
	Mem220[Mem216[s0_122 + 160<i32>:int32] + 5<i32>:byte] = SLICE(a5_214 >>u 8<u32>, byte, 0)
	Mem222[Mem220[s0_122 + 160<i32>:int32] + 6<i32>:byte] = SLICE(a5_214, byte, 0)
	Mem224[s0_122 + 164<i32>:word32] = 0x16<32>
	word32 a5_225 = Mem224[s0_122 + 160<i32>:int32]
	Mem226[s0_122 + 168<i32>:word32] = a4_138
	Mem228[a5_225:byte] = 0xB<8>
	Mem231[a5_225 + 5<32>:word32] = Mem228[a5_225 + 4<i32>:word32]
	word32 a5_240
	word32 s0_244
	word32 a0_261
	word32 s1_518
	word32 a1_519
	word32 a2_520
	word32 a3_521
	word32 a4_522
	word32 s2_523
	word32 s3_524
	word32 s4_525
	word32 s5_526
	word32 s11_527
	word32 mstatus_528
	word32 ra_243 = mbedtls_ssl_write_record(ra_109, s1_137, s0_122, a5_225 + 1<32>, mstatus, out s0_244, out s1_518, out a0_261, out a1_519, out a2_520, out a3_521, out a4_522, out a5_240, out s2_523, out s3_524, out s4_525, out s5_526, out s11_527, out mstatus_528)
	branch a0_261 == 0<32> l2308D500
l2308D500:
	word32 a1_529
	word32 a2_530
	word32 a3_531
	word32 a4_532
	word32 a5_533
	word32 a7_534
	word32 s4_535
	word32 s5_536
	word32 s6_537
	word32 s7_538
	word32 s8_539
	word32 s9_540
	word32 s10_541
	word32 s11_542
	word32 t4_543
	mbedtls_debug_print_msg(ra_243, s0_244, 2<32>, 0x230C7DFC<32>, a5_240, out a1_529, out a2_530, out a3_531, out a4_532, out a5_533, out a7_534, out s4_535, out s5_536, out s6_537, out s7_538, out s8_539, out s9_540, out s10_541, out s11_542, out t4_543)
l2308D46E:
	word32 a1_544
	word32 a2_545
	word32 a3_546
	word32 a4_547
	word32 a5_548
	word32 s4_549
	word32 s5_550
	word32 s6_551
	word32 s7_552
	word32 s8_553
	word32 s9_554
	word32 s10_555
	word32 s11_556
	mbedtls_debug_print_ret(ra_243, 1<32>, 0x1000089<32>, a0_261, out a1_544, out a2_545, out a3_546, out a4_547, out a5_548, out s4_549, out s5_550, out s6_551, out s7_552, out s8_553, out s9_554, out s10_555, out s11_556)
l2308D3A8:
	word32 a5_329
	word32 a1_504
	word32 a2_505
	word32 a3_506
	word32 a4_507
	word32 a7_508
	word32 s4_509
	word32 s5_510
	word32 s6_511
	word32 s7_512
	word32 s8_513
	word32 s9_514
	word32 s10_515
	word32 s11_516
	word32 t4_517
	mbedtls_debug_print_msg(ra, s0_54, 2<32>, 0x230C7D94<32>, a5_55 & 1<32>, out a1_504, out a2_505, out a3_506, out a4_507, out a5_329, out a7_508, out s4_509, out s5_510, out s6_511, out s7_512, out s8_513, out s9_514, out s10_515, out s11_516, out t4_517)
	Mem349[a5_329 + 5<32>:word32] = Mem13[a5_329 + 4<i32>:word32]
l2308D368:
	word32 a5_357
	word32 a1_478
	word32 a2_479
	word32 a3_480
	word32 a4_481
	word32 a7_482
	word32 s4_483
	word32 s5_484
	word32 s6_485
	word32 s7_486
	word32 s8_487
	word32 s9_488
	word32 s10_489
	word32 s11_490
	word32 t4_491
	mbedtls_debug_print_msg(ra, a0_15, 2<32>, 0x230C7D94<32>, a5_50 & 1<32>, out a1_478, out a2_479, out a3_480, out a4_481, out a5_357, out a7_482, out s4_483, out s5_484, out s6_485, out s7_486, out s8_487, out s9_488, out s10_489, out s11_490, out t4_491)
	Mem378[a5_357 + 5<32>:word32] = Mem13[a5_357 + 4<i32>:word32]
l2308D388:
	0<32> = dwArg0128
	return
mbedtls_ssl_write_certificate_exit:


void mbedtls_ssl_write_change_cipher_spec(word32 ra, word32 s1, word32 a0, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_write_change_cipher_spec_entry:
l2308D51C:
	word32 s6_193
	word32 s5_192
	word32 s4_191
	word32 a7_190
	word32 a5_189
	word32 a4_188
	word32 a3_187
	word32 a2_186
	word32 a1_185
	word32 s7_194
	word32 s8_195
	word32 s9_196
	word32 s10_197
	word32 s11_198
	word32 t4_199
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C7E14<32>, a5, out a1_185, out a2_186, out a3_187, out a4_188, out a5_189, out a7_190, out s4_191, out s5_192, out s6_193, out s7_194, out s8_195, out s9_196, out s10_197, out s11_198, out t4_199)
	word32 a4_44 = Mem20[a0 + 160<i32>:int32]
	Mem45[a0 + 164<i32>:word32] = 0x14<32>
	Mem47[a0 + 168<i32>:word32] = 1<32>
	Mem48[a4_44:byte] = 1<8>
	word32 s0_49 = Mem48[5<32>:word32]
	Mem52[6<32>:word32] = s0_49
	word32 a5_58
	word32 s0_62
	word32 s3_67
	word32 a0_79
	word32 s1_200
	word32 a1_201
	word32 a2_202
	word32 a3_203
	word32 a4_204
	word32 s2_205
	word32 s4_206
	word32 s5_207
	word32 s11_208
	word32 mstatus_209
	word32 ra_61 = mbedtls_ssl_write_record(ra, s1, s0_49, 2<32>, mstatus, out s0_62, out s1_200, out a0_79, out a1_201, out a2_202, out a3_203, out a4_204, out a5_58, out s2_205, out s3_67, out s4_206, out s5_207, out s11_208, out mstatus_209)
	branch a0_79 == 0<32> l2308D594
l2308D594:
	word32 a1_210
	word32 a2_211
	word32 a3_212
	word32 a4_213
	word32 a5_214
	word32 a7_215
	word32 s4_216
	word32 s5_217
	word32 s6_218
	word32 s7_219
	word32 s8_220
	word32 s9_221
	word32 s10_222
	word32 s11_223
	word32 t4_224
	mbedtls_debug_print_msg(ra_61, s0_62, 2<32>, 0x230C7E30<32>, a5_58, out a1_210, out a2_211, out a3_212, out a4_213, out a5_214, out a7_215, out s4_216, out s5_217, out s6_218, out s7_219, out s8_220, out s9_221, out s10_222, out s11_223, out t4_224)
l2308D56A:
	word32 a1_225
	word32 a2_226
	word32 a3_227
	word32 a4_228
	word32 a5_229
	word32 s4_230
	word32 s5_231
	word32 s6_232
	word32 s7_233
	word32 s8_234
	word32 s9_235
	word32 s10_236
	word32 s11_237
	mbedtls_debug_print_ret(ra_61, 1<32>, s3_67 + 446<i32>, a0_79, out a1_225, out a2_226, out a3_227, out a4_228, out a5_229, out s4_230, out s5_231, out s6_232, out s7_233, out s8_234, out s9_235, out s10_236, out s11_237)
l2308D584:
	return
mbedtls_ssl_write_change_cipher_spec_exit:


void mbedtls_ssl_write_finished(word32 ra, word32 s0, word32 a0, word32 a5, word32 s2, word32 mstatus, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
mbedtls_ssl_write_finished_entry:
l2308D5AE:
	word32 a2_25
	word32 a4_27
	word32 s8_481
	word32 s11_484
	word32 t4_485
	word32 s9_482
	word32 s10_483
	word32 a1_473
	word32 a7_476
	word32 s4_477
	word32 s5_478
	word32 s6_479
	word32 s7_480
	word32 a3_474
	word32 a5_475
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C7E4C<32>, a5, out a1_473, out a2_25, out a3_474, out a4_27, out a5_475, out a7_476, out s4_477, out s5_478, out s6_479, out s7_480, out s8_481, out s9_482, out s10_483, out s11_484, out t4_485)
	word32 a5_42 = 1<32>
	word32 a1_43 = Mem20[Mem20[a4_27 + 12<i32>:word32] + 156<i32>:int32]
	branch a4_27 <= 1<32> l2308D5EC
l2308D5E2:
	a5_42 = 1<32> - Mem20[Mem20[0xD<32>:word32] + 16<i32>:word32]
	a1_43 = a1_43 + a5_42
l2308D5EC:
	word32 s0_51 = Mem20[a5_42:word32]
	Mem53[s0_51 + 160<i32>:word32] = a1_43
	word32 a5_56 = Mem53[a2_25 + 116<i32>:word32]
	word32 a5_60 = Mem53[a5_56 + 204<i32>:int32]
	word32 a4_67
	word32 ra_72
	word32 s1_238
	call a5_60 (retsize: 0;)
		uses: a0:s0_51,a1:a1_52 + 4<32>,a2:a2_25 & 1<32>,a5:a5_60,mstatus:mstatus,ra:ra,s0:Mem53[a5_56 + 48<i32>:word32],s1:0x230C8000<32>,s2:s2
		defs: a4:a4_67,ra:ra_72,s1:s1_66
	word32 s0_90 = Mem53[a4_67 + 12<i32>:word32]
	word32 a5_91 = 36<i32>
	branch a4_67 == 0<32> l2308D60C
l2308D60A:
	a5_91 = 0xC<32>
l2308D60C:
	word32 a5_105
	word32 s0_104
	Mem96[s0_90 + 168<i32>:word32] = a5_91 + 4<32>
	Mem98[s0_90 + 164<i32>:word32] = 0x16<32>
	word32 a5_99 = Mem98[s0_90 + 160<i32>:int32]
	Mem101[a5_99:byte] = 0x14<8>
	word32 a5_103 = Mem101[a5_99 + 328<i32>:int32]
	branch a5_103 == 0<32> l2308D6E2
l2308D6E2:
	s0_104 = Mem101[a5_103 + 4<i32>:word32]
	a5_105 = a5_103 + 1<32>
l2308D62A:
	s0_104 = Mem101[0x14<32>:word32]
	branch (CONVERT(Mem101[0x88<32>:uint16], uint16, word32) & 1<32>) == 0<32> l2308D63A
l2308D63A:
	Mem110[0x13<32>:word32] = s0_104
	word32 a5_111 = CONVERT(Mem110[0x88<32>:uint16], uint16, word32)
	a5_105 = a5_111 & 1<32>
	branch (a5_111 & 1<32>) != 0<32> l2308D634
l2308D634:
	a5_105 = 0xA<32>
l2308D636:
	Mem117[a5_105 + 4<i32>:word32] = s0_104
l2308D646:
	word32 ra_167
	word32 a4_165
	word32 a5_166
	word32 a5_136
	word32 a4_140
	word32 s5_491
	word32 s8_494
	word32 s9_495
	word32 s10_496
	word32 s11_497
	word32 t4_498
	word32 s6_492
	word32 s7_493
	word32 a7_489
	word32 s4_490
	word32 a1_486
	word32 a2_487
	word32 a3_488
	word32 a0_135 = mbedtls_debug_print_msg(ra_72, s0_104, 3<32>, 0x230C7E60<32>, a5_105, out a1_486, out a2_487, out a3_488, out a4_140, out a5_136, out a7_489, out s4_490, out s5_491, out s6_492, out s7_493, out s8_494, out s9_495, out s10_496, out s11_497, out t4_498)
	word32 s0_155 = Mem154[a5_136:word32]
	word32 a5_156 = CONVERT(Mem154[a5_136 + 116<i32>:uint16], uint16, word32)
	branch (a5_156 & 2<32>) == 0<32> l2308D6E8
l2308D6E8:
	word32 t1_499
	word32 a0_500
	word32 a1_501
	word32 a2_502
	word32 a3_503
	ra_167 = memset(ra_72, Mem154[s0_155 + 144<i32>:int32], 0<32>, 8<32>, out t1_499, out a0_500, out a1_501, out a2_502, out a3_503, out a4_165, out a5_166)
l2308D66A:
	Mem173[a4_140 + 68<i32>:word32] = a5_156 & 2<32>
	word32 s0_174 = Mem173[a0_135 + 48<i32>:word32]
	word32 a5_508
	word32 a6_509
	word32 a7_510
	word32 a2_505
	word32 a3_506
	word32 a4_507
	word32 a1_504
	memcpy(a0_135 + 72<i32>, Mem173[s0_174 + 144<i32>:int32], 8<32>, out a1_504, out a2_505, out a3_506, out a4_507, out a5_508, out a6_509, out a7_510)
	word32 t1_511
	word32 a0_512
	word32 a1_513
	word32 a2_514
	word32 a3_515
	word32 a4_516
	word32 a5_517
	ra_167 = memset(ra_72, Mem173[s0_174 + 144<i32>:int32] + 2<32>, 0<32>, 6<32>, out t1_511, out a0_512, out a1_513, out a2_514, out a3_515, out a4_516, out a5_517)
	a4_165 = Mem173[s0_174 + 144<i32>:int32]
	a5_166 = CONVERT(Mem173[a4_165 + 1<i32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem207[a4_165 + 1<i32>:byte] = SLICE(a5_166, byte, 0)
	branch a5_166 != 0<32> l2308D6F4
l2308D6A2:
	a4_165 = Mem207[s0_174 + 144<i32>:int32]
	a5_166 = CONVERT(Mem207[a4_165:byte], byte, word32) + 1<32> & 255<i32>
	Mem212[a4_165:byte] = SLICE(a5_166, byte, 0)
	branch a5_166 != 0<32> l2308D6F4
l2308D6F4:
	Mem216[a5_166 + 56<i32>:word32] = Mem214[a5_166 + 64<i32>:word32]
	Mem218[a5_166 + 36<i32>:word32] = Mem216[a5_166 + 44<i32>:word32]
	word32 a5_220 = CONVERT(Mem218[a5_166 + 116<i32>:uint16], uint16, word32)
	word32 s0_219 = Mem218[a5_166:word32]
	word32 a5_221 = a5_220 & 2<32>
	branch (a5_220 & 2<32>) == 0<32> l2308D70C
l2308D706:
	word32 s11_544
	ra_167 = mbedtls_ssl_send_flight_completed(ra_167, a4_165, a5_220 & 2<32>, s2, s0, out s1_238, out a5_221, out s11_544)
l2308D70C:
	word32 a5_270
	word32 s0_274
	word32 a0_291
	word32 s1_533
	word32 a1_534
	word32 a2_535
	word32 a3_536
	word32 a4_537
	word32 s2_538
	word32 s3_539
	word32 s4_540
	word32 s5_541
	word32 s11_542
	word32 mstatus_543
	word32 ra_273 = mbedtls_ssl_write_record(ra_167, s1_238, s0_219, a5_221, mstatus, out s0_274, out s1_533, out a0_291, out a1_534, out a2_535, out a3_536, out a4_537, out a5_270, out s2_538, out s3_539, out s4_540, out s5_541, out s11_542, out mstatus_543)
	branch a0_291 == 0<32> l2308D734
l2308D734:
	word32 a1_545
	word32 a2_546
	word32 a3_547
	word32 a4_548
	word32 a5_549
	word32 a7_550
	word32 s4_551
	word32 s5_552
	word32 s6_553
	word32 s7_554
	word32 s8_555
	word32 s9_556
	word32 s10_557
	word32 s11_558
	word32 t4_559
	mbedtls_debug_print_msg(ra_273, s0_274, 2<32>, 0x230C7EAC<32>, a5_270, out a1_545, out a2_546, out a3_547, out a4_548, out a5_549, out a7_550, out s4_551, out s5_552, out s6_553, out s7_554, out s8_555, out s9_556, out s10_557, out s11_558, out t4_559)
l2308D716:
	word32 a1_560
	word32 a2_561
	word32 a3_562
	word32 a4_563
	word32 a5_564
	word32 s4_565
	word32 s5_566
	word32 s6_567
	word32 s7_568
	word32 s8_569
	word32 s9_570
	word32 s10_571
	word32 s11_572
	mbedtls_debug_print_ret(ra_273, 1<32>, 0x1000471<32>, a0_291, out a1_560, out a2_561, out a3_562, out a4_563, out a5_564, out s4_565, out s5_566, out s6_567, out s7_568, out s8_569, out s9_570, out s10_571, out s11_572)
l2308D6B6:
	word32 a1_518
	word32 a2_519
	word32 a3_520
	word32 a4_521
	word32 a5_522
	word32 a7_523
	word32 s4_524
	word32 s5_525
	word32 s6_526
	word32 s7_527
	word32 s8_528
	word32 s9_529
	word32 s10_530
	word32 s11_531
	word32 t4_532
	mbedtls_debug_print_msg(ra_167, s0_174, 1<32>, 0x230C7E94<32>, a5_166, out a1_518, out a2_519, out a3_520, out a4_521, out a5_522, out a7_523, out s4_524, out s5_525, out s6_526, out s7_527, out s8_528, out s9_529, out s10_530, out s11_531, out t4_532)
l2308D6D4:
	0<32> = dwArg38
	return
mbedtls_ssl_write_finished_exit:


word32 mbedtls_ssl_write(word32 ra, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg38, word32 dwArg84, word32 dwArgA8, word32 dwArg0108, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_write
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a5 s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_write_entry:
l2308D750:
	word32 s0_169
	word32 a4_39
	word32 s5_537
	word32 a7_535
	word32 s4_536
	word32 s7_538
	word32 s10_541
	word32 s8_539
	word32 s9_540
	word32 s11_542
	word32 t4_543
	word32 a1_533
	word32 a2_534
	word32 a3_38
	word32 s6_118
	word32 a5_297
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C7CC8<32>, a5, out a1_533, out a2_534, out a3_38, out a4_39, out a5_297, out a7_535, out s4_536, out s5_537, out s6_118, out s7_538, out s8_539, out s9_540, out s10_541, out s11_542, out t4_543)
	word32 s2_101 = a2
	branch a0 == 0<32> l2308D8A8
l2308D788:
	branch a5_297 == 0<32> l2308D8A8
l2308D8A8:
	s0_169 = 0xF8FFFF00<32>
l2308D78E:
	word32 s1_103 = Mem32[a4_39 + 4<i32>:word32]
	word32 a5_57 = 0x10<32>
	branch a4_39 == 0x10<32> l2308D7D2
l2308D798:
	word32 a0_61
	word32 s5_81
	word32 a2_545
	word32 a1_544
	word32 s4_548
	word32 a4_546
	word32 s3_547
	word32 s7_549
	ra = mbedtls_ssl_handshake(ra, s1_103, 0x10<32>, mstatus, dwArg38, dwArg84, out s1_103, out a0_61, out a1_544, out a2_545, out a3_38, out a4_546, out a5_57, out s2_101, out s3_547, out s4_548, out s5_81, out s6_118, out s7_549, out mstatus)
	s0_169 = a0_61
	branch a0_61 == 0<32> l2308D7D2
l2308D7D2:
	word32 a5_143
	word32 a4_178
	word32 a5_177
	word32 a5_99
	word32 a0_97 = mbedtls_ssl_get_max_frag_len(a3_38, a5_57, out a5_99)
	branch a0_97 >=u s2_101 l2308D828
l2308D7DC:
	s1_103 = Mem32[a5_99:word32]
	branch (CONVERT(Mem32[a5_99 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308D826
l2308D826:
	s2_101 = a0_97
l2308D828:
	word32 a5_172
	word32 a3_174
	word32 a5_109 = Mem32[s1_103 + 172<i32>:int32]
	branch a5_109 == 0<32> l2308D856
l2308D856:
	branch s2_101 <=u 0x4000130<32> l2308D872
l2308D872:
	word32 a0_113 = Mem32[s1_103 + 160<i32>:int32]
	Mem115[s1_103 + 164<i32>:word32] = 0x17<32>
	Mem120[s1_103 + 168<i32>:word32] = s2_101
	word32 a5_122
	word32 a1_587
	word32 a2_588
	word32 a3_589
	word32 a4_590
	word32 a6_591
	word32 a7_592
	memcpy(a0_113, s6_118, s2_101, out a1_587, out a2_588, out a3_589, out a4_590, out a5_122, out a6_591, out a7_592)
	word32 a0_164
	word32 s0_593
	word32 a1_594
	word32 a2_595
	word32 a3_596
	word32 a4_597
	word32 s3_598
	word32 s4_599
	word32 s5_600
	word32 s11_601
	word32 mstatus_602
	ra = mbedtls_ssl_write_record(ra, s1_103, s1_103, a5_122, mstatus, out s0_593, out s1_103, out a0_164, out a1_594, out a2_595, out a3_596, out a4_597, out a5_143, out s2_101, out s3_598, out s4_599, out s5_600, out s11_601, out mstatus_602)
	s0_169 = a0_164
	branch a0_164 == 0<32> l2308D8A4
l2308D892:
	a5_172 = a0_164
	a3_174 = 0x1FFFB08<32>
l2308D860:
	a5_177 = s2_101
	a4_178 = 0x230C7D34<32>
l2308D82E:
	word32 a0_183
	word32 a2_563
	word32 a1_562
	word32 a3_564
	word32 a4_565
	word32 s3_566
	word32 s4_567
	word32 s5_568
	word32 s7_569
	word32 s9_570
	word32 s10_571
	word32 s11_572
	mbedtls_ssl_flush_output(ra, s1_103, a5_109, dwArg0108, out s1_103, out a0_183, out a1_562, out a2_563, out a3_564, out a4_565, out a5_143, out s2_101, out s3_566, out s4_567, out s5_568, out s7_569, out s9_570, out s10_571, out s11_572)
	s0_169 = a0_183
	branch a0_183 == 0<32> l2308D8A4
l2308D8A4:
	s0_169 = s2_101
l2308D838:
	a5_172 = a0_183
	a3_174 = 0x1FFFAF4<32>
l2308D848:
	word32 a1_617
	word32 a2_618
	word32 a3_619
	word32 a4_620
	word32 s4_621
	word32 s5_622
	word32 s6_623
	word32 s7_624
	word32 s8_625
	word32 s9_626
	word32 s10_627
	word32 s11_628
	mbedtls_debug_print_ret(ra, 1<32>, a3_174, a5_172, out a1_617, out a2_618, out a3_619, out a4_620, out a5_143, out s4_621, out s5_622, out s6_623, out s7_624, out s8_625, out s9_626, out s10_627, out s11_628)
l2308D7E6:
	a5_177 = s2_101
	a4_178 = 0x230C7CEC<32>
l2308D7F8:
	word32 a1_603
	word32 a2_604
	word32 a3_605
	word32 a4_606
	word32 a7_607
	word32 s4_608
	word32 s5_609
	word32 s6_610
	word32 s7_611
	word32 s8_612
	word32 s9_613
	word32 s10_614
	word32 s11_615
	word32 t4_616
	mbedtls_debug_print_msg(ra, s1_103, 1<32>, a4_178, a5_177, out a1_603, out a2_604, out a3_605, out a4_606, out a5_143, out a7_607, out s4_608, out s5_609, out s6_610, out s7_611, out s8_612, out s9_613, out s10_614, out s11_615, out t4_616)
	s0_169 = 0xF8FFFF00<32>
l2308D80A:
	word32 a1_573
	word32 a2_574
	word32 a3_575
	word32 a4_576
	word32 a7_577
	word32 s4_578
	word32 s5_579
	word32 s6_580
	word32 s7_581
	word32 s8_582
	word32 s9_583
	word32 s10_584
	word32 s11_585
	word32 t4_586
	mbedtls_debug_print_msg(ra, s1_103, 2<32>, 0x230C7D70<32>, a5_143, out a1_573, out a2_574, out a3_575, out a4_576, out a5_297, out a7_577, out s4_578, out s5_579, out s6_580, out s7_581, out s8_582, out s9_583, out s10_584, out s11_585, out t4_586)
l2308D7A2:
	word32 a1_550
	word32 s7_557
	word32 s5_555
	word32 a3_552
	word32 a2_551
	word32 s4_554
	word32 s9_559
	word32 s6_556
	word32 a4_553
	word32 s8_558
	word32 s10_560
	word32 s11_561
	mbedtls_debug_print_ret(ra, 1<32>, s5_81 + -1202<i32>, a0_61, out a1_550, out a2_551, out a3_552, out a4_553, out a5_297, out s4_554, out s5_555, out s6_556, out s7_557, out s8_558, out s9_559, out s10_560, out s11_561)
l2308D7BC:
	0<32> = dwArgA8
	a0Out = s0_169
	a5Out = a5_297
	s2Out = s2_101
	return s1
mbedtls_ssl_write_exit:


word32 mbedtls_ssl_read_version(word32 a0, word32 a1, word32 a2, word32 a3, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record_layer
//      mbedtls_ssl_handshake_server_step
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
mbedtls_ssl_read_version_entry:
l2308D8B0:
	word32 a5_10
	word32 a4_14 = CONVERT(Mem0[a3:byte], byte, word32)
	branch a2 != 1<32> l2308D8D8
l2308D8D8:
	Mem9[a4_14:word32] = a0
	a5_10 = CONVERT(Mem9[a3 + 1<i32>:byte], byte, word32)
l2308D8BA:
	Mem13[257<i32> - a4_14:word32] = a0
	a4_14 = CONVERT(Mem13[a3 + 1<i32>:byte], byte, word32)
	a5_10 = 256<i32> - a4_14
	branch a5_10 == a2 l2308D8D4
l2308D8D4:
	a5_10 = 2<32>
l2308D8D0:
	Mem21[a5_10:word32] = a1
	a5Out = a5_10
	return a4_14
mbedtls_ssl_read_version_exit:


word32 mbedtls_ssl_read_record_layer(word32 ra, word32 s1, word32 a0, word32 a2, word32 s2, word32 s11, word32 mstatus, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_read_record
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s11:[0..31] s2:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a4 mstatus ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s2 sp
mbedtls_ssl_read_record_layer_entry:
l2308D8E0:
	word32 a0_1699
	word32 a1_31 = Mem29[a0 + 128<i32>:int32]
	a0_1699 = a0
	branch a1_31 == 0<32> l2308D95C
l2308D908:
	a0_1699 = Mem29[a2 + 112<i32>:word32]
	branch a1_31 >=u a2 l2308D95C
l2308D95C:
	Mem39[a0 + 128<i32>:word32] = 0<32>
	s2_1043 = s2
l2308D974:
	word32 a5_1223
	word32 a3_1225
	word32 s2_1043
	word32 s0_46 = Mem45[a0_1699:word32]
	word32 a5_48
	word32 a0_55
	word32 s0_3217
	word32 s11_3226
	word32 s5_3220
	word32 s2_3218
	word32 s4_3219
	word32 s7_3222
	word32 s9_3224
	word32 s10_3225
	word32 s6_3221
	word32 s8_3223
	ra = mbedtls_ssl_fetch_input(ra, s0_46, s0_46, mbedtls_ssl_hdr_len.isra.1(a0_1699, out a5_48), a5_48, s2_1043, mstatus, dwArg58, dwArg88, out s0_3217, out a0_55, out s2_3218, out s3, out s4_3219, out s5_3220, out s6_3221, out s7_3222, out s8_3223, out s9_3224, out s10_3225, out s11_3226, out mstatus)
	branch a0_55 == 0<32> l2308D9A4
l2308D9A4:
	word32 a4_1474
	word32 a5_1471
	word32 s0_1469
	word32 s10_1497
	word32 s9_1504
	word32 s8_1503
	word32 s6_1544
	word32 a0_1490
	word32 a5_90
	mbedtls_ssl_hdr_len.isra.1(a0_55, out a5_90)
	word32 a3_103
	word32 a4_104
	word32 a0_3171
	word32 a1_3172
	word32 a2_3173
	word32 a7_3175
	word32 a5_3174
	mbedtls_debug_print_buf(ra, 4<32>, a5_90, out a0_3171, out a1_3172, out a2_3173, out a3_103, out a4_104, out a5_3174, out a7_3175)
	word32 s0_111 = Mem45[a4_104 + 92<i32>:word32]
	Mem116[CONVERT(Mem45[a3_103:byte], byte, word32) + 108<i32>:word32] = s0_111
	word32 a2_118 = CONVERT(Mem116[a4_104:byte], byte, word32)
	word32 a5_120 = CONVERT(Mem116[a4_104 + 1<i32>:byte], byte, word32) << 8<i32> | a2_118
	Mem126[CONVERT(SLICE(a5_120 >>u 8<i32> | a5_120 << 8<u32>, word16, 0), word16, word32) + 112<i32>:word32] = s0_111
	word32 a5_132
	mbedtls_ssl_read_version(fp + -116<i32>, fp + -112<i32>, a2_118 >>u 1<i32> & 1<32>, a3_103 + 1<32>, out a5_132)
	word32 a4_149
	word32 s11_152
	word32 s4_153
	word32 a3_3178
	word32 a2_3177
	word32 a1_3176
	word32 a5_3179
	word32 s6_3182
	word32 s7_3183
	word32 a7_3180
	word32 s5_3181
	word32 s8_3184
	word32 s10_3186
	word32 s9_3185
	word32 t4_3187
	word32 a0_144 = mbedtls_debug_print_msg(ra, Mem136[a5_132 + 108<i32>:word32], 3<32>, 0x230C785C<32>, a5_132, out a1_3176, out a2_3177, out a3_3178, out a4_149, out a5_3179, out a7_3180, out s4_153, out s5_3181, out s6_3182, out s7_3183, out s8_3184, out s9_3185, out s10_3186, out s11_152, out t4_3187)
	s2_1043 = 0x1000000<32>
	word32 s0_163 = Mem136[a4_149 + 108<i32>:word32]
	word32 a5_1563 = 3<32>
	branch a4_149 <=u 0xFFFFFFE9<32> l2308DA96
l2308DA96:
	word32 a4_1546
	word32 s0_1516 = Mem136[a4_149 + -12<i32>:word32]
	branch a4_149 == 0xFFFFFFE9<32> l2308DAB8
l2308DAB8:
	s0_1516 = Mem136[a0_144:word32]
	word32 a3_170 = CONVERT(Mem136[a0_144 + 113<i32>:byte], byte, word32)
	branch a3_170 >= 3<32> l2308DAD2
l2308DAD2:
	s0_1516 = Mem136[a3_170 + 80<i32>:word32]
	word32 s6_173 = Mem136[s0_1516 + 112<i32>:int32]
	a5_1563 = s11_152 - (3<32> - a3_170)
	branch a5_1563 >=u s6_173 l2308DAF2
l2308DAF2:
	s0_1516 = Mem136[a5_1563 + 52<i32>:word32]
	branch a5_1563 != 0<32> l2308DB0C
l2308DB0C:
	a5_1563 = Mem136[a5_1563 + 8<i32>:word32]
	branch s6_173 >=u a5_1563 l2308DB20
l2308DB20:
	s0_1516 = Mem136[a3_170 + 12<i32>:word32]
	branch a3_170 <= 0<32> l2308DB3E
l2308DB26:
	a3_170 = s4_153 + 256<i32>
	a5_1563 = a5_1563 + (s4_153 + 256<i32>)
	branch a5_1563 >=u s6_173 l2308DB3E
l2308DB30:
	a4_1546 = 0x230C78DC<32>
l2308DB12:
	a4_1546 = 0x230C78DC<32>
l2308DAF6:
	a5_1563 = s6_173 + -1<i32>
	branch s6_173 + -1<i32> <u s4_153 l2308DB3E
l2308DB3E:
	branch (CONVERT(Mem136[a0_144 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308DBD8
l2308DB46:
	word32 a4_1511
	word32 a5_1519
	word32 a5_197 = CONVERT(Mem136[a3_170 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem136[a3_170:byte], byte, word32)
	s0_1516 = Mem136[a3_170 + 84<i32>:word32]
	word32 a6_203 = CONVERT(SLICE(a5_197 << 8<u32> | a5_197 >>u 8<i32>, word16, 0), word16, word32)
	branch a4_149 != 0x14<32> l2308DB96
l2308DB96:
	branch a4_149 != 0x17<32> l2308DBB4
l2308DB9C:
	s0_1516 = Mem136[a4_149 + 4<i32>:word32]
	a5_1519 = 0x10<32>
	branch a4_149 == 0x10<32> l2308DBB4
l2308DBA4:
	a4_1511 = 0x230C7918<32>
l2308DB6E:
	s0_1516 = Mem136[0x18<32>:word32]
	a5_1519 = 8<32>
	branch false l2308DBB4
l2308DBB4:
	word32 a5_217 = CONVERT(Mem136[s0_1516 + 120<i32>:uint16], uint16, word32)
	branch a6_203 == a5_217 l2308DBD8
l2308DBD8:
	word32 a5_222
	word32 a0_243
	word32 s0_251
	word32 s10_3249
	word32 s7_3246
	word32 s11_3250
	word32 s2_3242
	word32 s5_3244
	word32 s6_3245
	word32 s4_3243
	word32 s8_3247
	word32 s9_3248
	ra = mbedtls_ssl_fetch_input(ra, s0_1516, s0_1516, mbedtls_ssl_hdr_len.isra.1(a0_144, out a5_222) + s6_173, a5_222, 0x1000000<32>, mstatus, dwArg58, dwArg88, out s0_251, out a0_243, out s2_3242, out s3, out s4_3243, out s5_3244, out s6_3245, out s7_3246, out s8_3247, out s9_3248, out s10_3249, out s11_3250, out mstatus)
	branch a0_243 == 0<32> l2308DC10
l2308DC10:
	word32 s7_274 = Mem136[s0_251:int32]
	s2_1043 = Mem136[s0_251 + 112<i32>:int32]
	branch (CONVERT(Mem136[s7_274 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308DC96
l2308DC96:
	Mem278[s0_251 + 116<i32>:word32] = 0<32>
l2308DC20:
	word32 a5_3288
	Mem283[mbedtls_ssl_hdr_len.isra.1(s7_274, out a5_3288) + s2_1043 + 124<i32>:word32] = s0_251
l2308DC2A:
	word32 a5_287
	mbedtls_ssl_hdr_len.isra.1(s7_274, out a5_287)
	word32 a0_3339
	word32 a2_3341
	word32 a3_3342
	word32 a7_3343
	word32 a1_3340
	word32 a5_1083
	word32 a4_1087
	mbedtls_debug_print_buf(ra, 4<32>, a5_287, out a0_3339, out a1_3340, out a2_3341, out a3_3342, out a4_1087, out a5_1083, out a7_3343)
	word32 s0_312 = Mem288[a5_1083 + 52<i32>:word32]
	branch a5_1083 == 0<32> l2308E274
l2308DC56:
	word32 s6_1252
	word32 a5_1233
	word32 s6_1042
	word32 a1_321
	word32 s5_329
	word32 s7_331
	word32 a3_3290
	word32 s9_3296
	word32 s11_3298
	word32 t4_3299
	word32 s10_3297
	word32 s6_3294
	word32 s8_3295
	word32 a4_3291
	word32 a7_3292
	word32 s4_3293
	word32 a2_3289
	word32 a5_1393
	mbedtls_debug_print_msg(ra, s0_312, 2<32>, 0x230C79D8<32>, a5_1083, out a1_321, out a2_3289, out a3_3290, out a4_3291, out a5_1393, out a7_3292, out s4_3293, out s5_329, out s6_3294, out s7_331, out s8_3295, out s9_3296, out s10_3297, out s11_3298, out t4_3299)
	word32 s0_1320 = Mem288[a5_1393 + 32<i32>:word32]
	branch a5_1393 == 0<32> l2308DC76
l2308DC72:
	s0_1320 = Mem288[a5_1393 + 52<i32>:word32]
	branch a5_1393 != 0<32> l2308DC9C
l2308DC9C:
	word32 a3_340 = Mem288[a5_1393 + 144<i32>:int32]
	word32 a4_341 = 0<32>
	branch a3_340 == 0<32> l2308DCA8
l2308DCA4:
	a4_341 = CONVERT(Mem288[a3_340 + 1<i32>:byte], byte, word32)
l2308DCA8:
	word32 a4_1350
	s2_1043 = Mem288[s0_1320 + 112<i32>:int32]
	branch s2_1043 >=u Mem288[a5_1393 + 8<i32>:int32] l2308DCD0
l2308DCD0:
	word32 a4_1313
	word32 s5_512
	word32 s7_447
	word32 s1_431
	branch (a4_341 + -6<i32> & 253<i32>) != 0<32> l2308DFAA
l2308DFAA:
	branch a4_341 != 2<32> l2308E178
l2308E178:
l2308DFB0:
	word32 a6_358 = Mem357[a5_1393 + 12<i32>:int32]
	s0_1320 = Mem357[0xE<32>:word32]
	word32 a2_360 = 1<32>
	word32 a4_361 = a6_358
	branch true l2308DFC2
l2308DFC0:
	a4_361 = 0<32>
l2308DFC2:
	word32 a7_365 = Mem357[a5_1393 + 20<i32>:int32]
	branch s2_1043 <u a4_361 + a6_358 l2308DFD8
l2308DFCE:
	word32 a5_371 = a7_365 + 1<i32> + a4_361
	branch s2_1043 >=u a5_371 l2308DFE8
l2308DFE8:
	word32 s5_372 = s2_1043 & a6_358
	branch s5_372 == 0<32> l2308E000
l2308E000:
	word32 s0_374 = Mem357[a5_371 + 100<i32>:word32]
	branch false l2308E01A
l2308E008:
	s2_1043 = s2_1043 - a6_358
	Mem377[s0_374 + 112<i32>:word32] = s2_1043
	word32 a4_378 = 0<32>
l2308E012:
	word32 a3_383 = Mem380[a2_360 + 12<i32>:word32]
	branch a4_378 <u a2_360 l2308E0A2
l2308E0A2:
	a2_360 = CONVERT(Mem380[a2_360 + a4_378:byte], byte, word32)
	Mem390[a3_383 + a4_378 + 40<i32>:byte] = SLICE(a2_360, byte, 0)
	a4_378 = a4_378 + 1<32>
l2308E01A:
	word32 a0_406 = Mem395[a2_360 + 12<i32>:word32]
	word32 a0_422
	word32 a1_423
	word32 a2_424
	word32 a3_425
	word32 s4_434
	word32 s5_444
	ra = mbedtls_cipher_crypt(ra, a0_406 + 144<i32>, a0_406 + 40<i32>, a2_360, a5_371, s2_1043, a5_371, fp + -112<i32>, s5_372, s7_331, dwLoc98, s2, dwLoc38, dwLoc18, s11, dwArg30, dwArg34, dwArg58, dwArg88, out s0_1320, out s1_431, out a0_422, out a1_423, out a2_424, out a3_425, out a5_1393, out s2_1043, out s3, out s4_434, out s5_444)
	s7_447 = a0_422
	branch a0_422 == 0<32> l2308E0B4
l2308E0B4:
	branch s2_1043 == a5_1393 l2308E0C8
l2308E0C8:
	word32 a5_454 = CONVERT(Mem395[a1_423 + (a2_424 + -1<i32>):byte], byte, word32)
	word32 a6_456 = 1<32>
	a5_1393 = a5_454 + 1<32>
	word32 a4_458 = a5_454 + 1<32> + a3_425
	branch a2_424 >=u a4_458 l2308E0EC
l2308E0E8:
	a6_456 = 0<32>
	a5_1393 = 0<32>
l2308E0EC:
	s0_1320 = Mem395[a4_458 + 12<i32>:word32]
	branch a4_458 <= 0<32> l2308E16A
l2308E16A:
l2308E0F2:
	word32 a0_470 = a2_424 + -1<i32> - a5_1393
	word32 a4_480 = (CONVERT(a2_424 <u a5_1393 + 1<i32>, bool, word32) ^ 1<i32>) & CONVERT(a0_470 <u a3_425 + s4_434, bool, word32) & a6_456
	word32 a6_481 = a0_470 + a4_480
	word32 t3_482 = 1<32>
	word32 a0_483 = 1<32>
	word32 t5_484 = a5_1393 + -1<i32>
l2308E120:
	t3_482 = t3_482 & (CONVERT(a5_1393 <u a0_483, bool, word32) ^ 1<i32>)
	a0_483 = a0_483 + 1<32>
	s5_444 = s5_444 + (CONVERT(CONVERT(Mem395[(a6_481 + a0_483) + a1_423:byte], byte, word32) - t5_484 <u 1<i32>, bool, word32) + t3_482)
	branch a0_483 != 257<i32> l2308E120
l2308E14A:
	s2_1043 = CONVERT(a5_1393 - s5_444 <u 1<i32>, bool, word32) & a4_480
	s5_512 = s2_1043 + 511<i32> & a5_1393
	Mem516[a2_424 - s5_512 + 112<i32>:word32] = s0_1320
l2308E0BA:
l2308E036:
	word32 s7_540
	word32 a2_3430
	word32 a3_3431
	word32 a4_3432
	word32 s4_3434
	word32 s11_3440
	word32 s9_3438
	word32 s10_3439
	word32 s5_3435
	word32 s6_3436
	word32 s8_3437
	word32 a5_3433
	word32 a1_3429
	mbedtls_debug_print_ret(ra, 1<32>, 1827<i32>, a0_422, out a1_3429, out a2_3430, out a3_3431, out a4_3432, out a5_3433, out s4_3434, out s5_3435, out s6_3436, out s7_540, out s8_3437, out s9_3438, out s10_3439, out s11_3440)
	s6_1042 = s7_540
l2308DFF0:
	a4_1350 = 0x230C7AA4<32>
l2308DFD8:
	a4_1313 = 0x230C7A64<32>
l2308DCDC:
	word32 a7_558 = 8<32>
	word32 a4_559 = CONVERT(Mem288[a4_341 + 28<i32>:byte], byte, word32)
	branch (a4_559 & 2<32>) != 0<32> l2308DCEA
l2308DCE8:
	a7_558 = 0x10<32>
l2308DCEA:
	word32 a5_565 = Mem288[Mem288[(a4_559 & 2<32>) + 12<i32>:word32] + 16<i32>:word32]
	branch s2_1043 >=u ((a4_559 & 2<32>) - a5_565) + a7_558 l2308DD16
l2308DD16:
	word32 s0_574 = Mem288[a1_321 + 84<i32>:word32]
	word32 s2_575 = s2_1043 + a5_565 - (a4_559 & 2<32>) - a7_558
	Mem577[s0_574 + 112<i32>:word32] = s2_575
	word32 s7_581 = Mem580[s0_574 + 100<i32>:int32]
	word32 a1_585
	word32 a2_586
	word32 a6_3347
	word32 a7_3348
	word32 a4_3345
	word32 a5_3346
	word32 a3_3344
	memcpy(fp + -112<i32>, a1_321, 8<32>, out a1_585, out a2_586, out a3_3344, out a4_3345, out a5_3346, out a6_3347, out a7_3348)
	mbedtls_ssl_write_version(fp + -112<i32>, a1_585, a2_586 >>u 1<i32> & 1<32>, fp + -103<i32>)
	word32 a0_622
	word32 a1_624
	word32 a2_625
	word32 a3_3349
	word32 a4_3350
	word32 a5_3351
	word32 a7_3352
	mbedtls_debug_print_buf(ra, 4<32>, fp + -112<i32>, out a0_622, out a1_624, out a2_625, out a3_3349, out a4_3350, out a5_3351, out a7_3352)
	word32 a5_641
	word32 a7_3358
	word32 a6_3357
	word32 a3_3355
	word32 a4_3356
	word32 a2_3354
	word32 a1_3353
	memcpy(a0_622 + (Mem614[a2_625 + 12<i32>:word32] + 40<i32>), a1_624, a2_625 - a0_622, out a1_3353, out a2_3354, out a3_3355, out a4_3356, out a5_641, out a6_3357, out a7_3358)
	word32 a5_3364
	word32 a7_3365
	word32 a4_3363
	word32 a2_3361
	word32 a3_3362
	word32 a0_3359
	word32 a1_3360
	mbedtls_debug_print_buf(ra, 4<32>, a5_641 + 40<i32>, out a0_3359, out a1_3360, out a2_3361, out a3_3362, out a4_3363, out a5_3364, out a7_3365)
	word32 a2_688
	word32 a3_3368
	word32 a4_3369
	word32 a7_3371
	word32 a5_3370
	word32 a1_3367
	word32 a0_3366
	mbedtls_debug_print_buf(ra, 4<32>, s7_581 + s2_575, out a0_3366, out a1_3367, out a2_688, out a3_3368, out a4_3369, out a5_3370, out a7_3371)
	word32 a0_699 = Mem684[a2_688 + 12<i32>:word32]
	word32 a0_712
	ra = mbedtls_cipher_auth_decrypt(a0_699 + 144<i32>, a0_699 + 40<i32>, a2_688, 0xD<32>, s2_575, s7_581, s5_329, dwLoc7C, s2, s1, dwArg98, dwArgB4, out s0_1320, out s1_431, out a0_712, out a5_1393, out s2_1043, out s3)
	branch a0_712 == 0<32> l2308DE28
l2308DE28:
	branch s2_1043 == a5_1393 l2308DE3C
l2308DE3C:
	s2_1043 = 1<32>
	s5_512 = 0<32>
	s7_447 = 1<32>
l2308DE42:
	word32 a1_762
	word32 a2_763
	word32 a4_765
	word32 a7_3442
	word32 a0_3441
	word32 a5_761
	word32 a3_1854
	mbedtls_debug_print_buf(ra, 4<32>, a5_1393, out a0_3441, out a1_762, out a2_763, out a3_1854, out a4_765, out a5_761, out a7_3442)
	branch s7_447 != 0<32> l2308DF78
l2308DE64:
	word32 a4_780 = Mem744[a4_765 + 20<i32>:word32]
	word32 a5_781 = a5_761 - a4_780
	Mem783[a5_781 + 112<i32>:word32] = Mem744[a4_780 + 92<i32>:word32]
	Mem785[a4_780:byte] = SLICE(a5_781 >>u 8<i32>, byte, 0)
	Mem788[(a5_781 >>u 8<i32>) + 1<i32>:byte] = SLICE(a4_780, byte, 0)
	word32 a4_794
	word32 a1_797
	word32 a2_3443
	word32 a3_3444
	word32 a6_3445
	word32 a7_3446
	memcpy(fp + -112<i32>, a1_762 + (a5_781 >>u 8<i32>), a2_763, out a1_797, out a2_3443, out a3_3444, out a4_794, out a5_1393, out a6_3445, out a7_3446)
	s0_1320 = Mem788[a5_1393 + 12<i32>:word32]
	branch a5_1393 <= 0<32> l2308E1A4
l2308E1A4:
l2308DE94:
	word32 a5_822 = s2_1043 + 255<i32>
	word32 s5_825 = a5_822 & (s5_512 + (a5_1393 + 0x15<32>) >>u 6<u32>) - (a5_1393 + 0x15<32> >>u 6<i32>)
	word32 a0_826
	word32 a4_828
	word32 a5_829
	word32 a0_835
	word32 a4_837
	word32 a5_838
	word32 a0_844
	word32 a4_846
	word32 a5_847
	word32 a0_854
	word32 a4_856
	word32 a5_857
	word32 a1_865
	word32 a5_3450
	word32 a2_3448
	word32 a4_3449
	word32 s1_3447
	word32 a0_864
	word32 ra_869 = mbedtls_md_hmac_finish(mbedtls_md_hmac_update(mbedtls_md_hmac_update(mbedtls_md_hmac_update(mbedtls_md_hmac_update(ra, fp + -44<i32>, a4_794, a5_822, dwLoc90, out a0_826, out a4_828, out a5_829), a0_826 + 68<i32>, a4_828, a5_829, dwLoc90, out a0_835, out a4_837, out a5_838), a0_835 + 68<i32>, a4_837, a5_838, dwLoc90, out a0_844, out a4_846, out a5_847), a0_844 + 68<i32>, a4_846, a5_847, dwLoc90, out a0_854, out a4_856, out a5_857), Mem788[a0_854 + 52<i32>:word32], s1_431, a0_854 + 68<i32>, a1_797 + a5_857, a4_856, a5_857, s2_1043, dwArg60, dwArg64, dwArg88, out s1_3447, out a0_864, out a1_865, out a2_3448, out a4_3449, out a5_3450, out s2_1043)
	word32 a5_874 = 0<32>
l2308DEFC:
	word32 a5_887
	ra_869 = mbedtls_md_process(ra_869, a0_864 + 68<i32>, a5_874, dwLoc90, out a0_864, out a5_887)
	a5_874 = a5_887 + 1<32>
	branch a5_887 + 1<32> <u s5_825 + 1<32> l2308DEFC
l2308DF12:
	word32 s0_3451
	word32 a4_3452
	word32 a5_3453
	ra = mbedtls_md_hmac_reset(ra_869, a0_864 + 68<i32>, a1_865, a5_887 + 1<32>, out s0_3451, out a4_3452, out a5_3453)
	word32 a3_3457
	word32 a5_914
	word32 a4_918
	word32 a7_3458
	word32 a2_3456
	word32 a0_3454
	word32 a1_3455
	mbedtls_debug_print_buf(ra, 4<32>, fp + -112<i32>, out a0_3454, out a1_3455, out a2_3456, out a3_3457, out a4_918, out a5_914, out a7_3458)
	word32 a0_935
	word32 a1_937
	word32 a2_938
	word32 a4_3459
	word32 a7_3461
	word32 a5_3460
	mbedtls_debug_print_buf(ra, 4<32>, a5_914 + a4_918, out a0_935, out a1_937, out a2_938, out a3_1854, out a4_3459, out a5_3460, out a7_3461)
	word32 a4_950 = 0<32>
	a5_761 = 0<32>
l2308DF6C:
	branch a2_938 != a5_761 l2308E186
l2308E186:
	a3_1854 = CONVERT(Mem882[a0_935 + a5_761 + a1_937:byte], byte, word32) ^ CONVERT(Mem882[(fp + -112<i32>) + a5_761:byte], byte, word32)
	a5_761 = a5_761 + 1<32>
	a4_950 = a4_950 | a3_1854
l2308DF70:
	branch a4_950 != 0<32> l2308DE20
l2308DF74:
	branch s2_1043 == 0<32> l2308DE20
l2308DF78:
	word32 s0_972 = Mem971[a5_761 + 112<i32>:word32]
	branch a5_761 != 0<32> l2308E1B2
l2308E1B2:
	Mem973[s0_972 + 132<i32>:word32] = 0<32>
l2308DF7E:
	word32 a5_974 = Mem971[s0_972 + 132<i32>:int32]
	Mem977[s0_972 + 132<i32>:word32] = a5_974 + 1<32>
	a5_761 = a5_974 + 1<32>
	branch a5_974 <= 0xFFFFFFFE<32> l2308E1B6
l2308E1B6:
	word32 a5_982 = CONVERT(Mem979[a5_761 + 116<i32>:uint16], uint16, word32)
	word32 s0_1001 = Mem979[a5_761:word32]
	word32 a4_981 = 8<32>
	word32 a5_1003 = a5_982 & 2<32>
	branch (a5_982 & 2<32>) == 0<32> l2308E222
l2308E222:
	word32 a5_987 = CONVERT(Mem985[a5_1003 + 116<i32>:uint16], uint16, word32)
	a5_1003 = a5_987 & 2<32>
	branch (a5_987 & 2<32>) >=u a4_981 l2308E246
l2308E22E:
	word32 a2_992 = a4_981 + -1<i32>
	a3_1854 = a3_1854 + a2_992
	a5_1003 = CONVERT(Mem985[a3_1854:byte], byte, word32) + 1<32> & 255<i32>
	Mem997[a3_1854:byte] = SLICE(a5_1003, byte, 0)
	branch a5_1003 == 0<32> l2308E220
l2308E220:
	a4_981 = a2_992
l2308E246:
	word32 a5_1002 = CONVERT(Mem1000[a5_1003 + 116<i32>:uint16], uint16, word32)
	s0_1001 = Mem1000[a5_1003:word32]
	a5_1003 = a5_1002 & 2<32>
	branch a4_981 != (a5_1002 & 2<32>) l2308E1C2
l2308E252:
	word32 s7_3518
	word32 s8_3519
	word32 s9_3520
	word32 s10_3521
	word32 s11_3522
	word32 t4_3523
	word32 s6_3517
	word32 a2_3510
	word32 s4_3515
	word32 s5_3516
	word32 a3_3511
	word32 a5_3513
	word32 a7_3514
	word32 a4_3512
	word32 a1_3509
	mbedtls_debug_print_msg(ra, s0_1001, 1<32>, 0x230C7B30<32>, a5_1002 & 2<32>, out a1_3509, out a2_3510, out a3_3511, out a4_3512, out a5_3513, out a7_3514, out s4_3515, out s5_3516, out s6_3517, out s7_3518, out s8_3519, out s9_3520, out s10_3521, out s11_3522, out t4_3523)
	s6_1042 = 0xF9000480<32>
l2308E1C2:
	word32 s6_3483
	word32 a5_1055
	word32 s4_1063
	word32 s7_3484
	word32 s8_3485
	word32 s10_3487
	word32 s11_3488
	word32 t4_3489
	word32 s9_3486
	word32 s5_3482
	word32 a1_3477
	word32 a4_3480
	word32 a7_3481
	word32 a2_3478
	word32 a3_3479
	mbedtls_debug_print_msg(ra, s0_1001, 2<32>, 0x230C7B54<32>, a5_1003, out a1_3477, out a2_3478, out a3_3479, out a4_3480, out a5_1055, out a7_3481, out s4_1063, out s5_3482, out s6_3483, out s7_3484, out s8_3485, out s9_3486, out s10_3487, out s11_3488, out t4_3489)
	word32 a3_3493
	word32 a7_3494
	word32 a1_3491
	word32 a2_3492
	word32 a0_3490
	mbedtls_debug_print_buf(ra, 4<32>, a5_1055, out a0_3490, out a1_3491, out a2_3492, out a3_3493, out a4_1087, out a5_1083, out a7_3494)
	s2_1043 = 0x1000000<32>
	word32 s0_1093 = Mem1073[a5_1083 + 112<i32>:word32]
	branch s4_1063 >=u a5_1083 l2308E274
l2308E274:
	word32 a5_1097 = CONVERT(Mem1095[a5_1083 + 116<i32>:uint16], uint16, word32)
	branch (a5_1097 & 2<32>) == 0<32> l2308D93C
l2308E280:
	branch (a5_1097 & 2<32>) == 0<32> l2308D93C
l2308E286:
	branch a4_1087 != 0x10<32> l2308D93C
l2308E28E:
	word32 s0_1103 = Mem1095[a4_1087 + 108<i32>:word32]
	word32 a5_1104 = 0x16<32>
	branch a4_1087 != 0x16<32> l2308E2D8
l2308E296:
	s0_1103 = Mem1095[0x7A<32>:word32]
	a5_1104 = 0x14<32>
	branch CONVERT(Mem1095[0x16<32>:byte], byte, word32) != 0x14<32> l2308E2D8
l2308E2D8:
	ssl_handshake_wrapup_free_hs_transform(ra, s0_1103, a5_1104, mstatus, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArgE8)
l2308E2A2:
	word32 a5_1170
	word32 s9_3321
	word32 s10_3322
	word32 s11_3323
	word32 t4_3324
	word32 s8_3320
	word32 s7_3319
	word32 s4_3316
	word32 s5_3317
	word32 s6_3318
	word32 a7_3315
	word32 a4_3314
	word32 a2_3312
	word32 a3_3313
	word32 a1_3311
	mbedtls_debug_print_msg(ra, s0_1103, 2<32>, 0x230C7BB0<32>, 0x14<32>, out a1_3311, out a2_3312, out a3_3313, out a4_3314, out a5_1170, out a7_3315, out s4_3316, out s5_3317, out s6_3318, out s7_3319, out s8_3320, out s9_3321, out s10_3322, out s11_3323, out t4_3324)
	word32 s2_1202
	word32 a0_1218
	word32 s10_3337
	word32 s11_3338
	word32 s9_3336
	word32 a5_3331
	word32 s6_3334
	word32 s7_3335
	word32 s4_3332
	word32 s5_3333
	word32 a2_3328
	word32 a3_3329
	word32 a4_3330
	word32 a1_3327
	word32 s0_3325
	word32 s1_3326
	ra = mbedtls_ssl_resend(ra, s0_1103, s0_1103, a5_1170, 0x1000000<32>, mstatus, dwArg88, out s0_3325, out s1_3326, out a0_1218, out a1_3327, out a2_3328, out a3_3329, out a4_3330, out a5_3331, out s2_1202, out s3, out s4_3332, out s5_3333, out s6_3334, out s7_3335, out s9_3336, out s10_3337, out s11_3338, out mstatus)
	branch a0_1218 == 0<32> l2308E2E2
l2308E2E2:
l2308E2C6:
	a5_1223 = a0_1218
	a3_1225 = s2_1202 + -143<i32>
l2308E200:
	word32 s10_3506
	word32 s11_3507
	word32 t4_3508
	word32 s7_3503
	word32 s8_3504
	word32 s9_3505
	word32 s6_3502
	word32 a1_3495
	word32 a2_3496
	word32 a3_3497
	word32 a4_3498
	word32 a7_3499
	word32 s4_3500
	word32 s5_3501
	mbedtls_debug_print_msg(ra, s0_1093, 1<32>, 0x230C78DC<32>, a5_1083, out a1_3495, out a2_3496, out a3_3497, out a4_3498, out a5_1233, out a7_3499, out s4_3500, out s5_3501, out s6_3502, out s7_3503, out s8_3504, out s9_3505, out s10_3506, out s11_3507, out t4_3508)
	s6_1252 = 0xF8FFFE00<32>
l2308DF8E:
	word32 a7_3467
	word32 s11_3475
	word32 t4_3476
	word32 s10_3474
	word32 s5_3469
	word32 s6_3470
	word32 s7_3471
	word32 s8_3472
	word32 s9_3473
	word32 s4_3468
	word32 a4_3465
	word32 a5_3466
	word32 a1_3462
	word32 a2_3463
	word32 a3_3464
	mbedtls_debug_print_msg(ra, s0_972, 1<32>, 0x230C7AF0<32>, a5_974 + 1<32>, out a1_3462, out a2_3463, out a3_3464, out a4_3465, out a5_3466, out a7_3467, out s4_3468, out s5_3469, out s6_3470, out s7_3471, out s8_3472, out s9_3473, out s10_3474, out s11_3475, out t4_3476)
l2308DE2E:
l2308DDFC:
	word32 s5_1300
	word32 a1_3372
	word32 a5_3376
	word32 a2_3373
	word32 s4_3377
	word32 s6_3378
	word32 s8_3380
	word32 s9_3381
	word32 s10_3382
	word32 s11_3383
	word32 s7_3379
	word32 a4_3375
	word32 a3_3374
	mbedtls_debug_print_ret(ra, 1<32>, 1701<i32>, a0_712, out a1_3372, out a2_3373, out a3_3374, out a4_3375, out a5_3376, out s4_3377, out s5_1300, out s6_3378, out s7_3379, out s8_3380, out s9_3381, out s10_3382, out s11_3383)
	s6_1042 = s5_1300
	branch s5_1300 != s3 + -768<i32> l2308E052
l2308DCFA:
	a4_1313 = 0x230C7A08<32>
l2308DD08:
	word32 a5_3403
	word32 a7_3404
	word32 s4_3405
	word32 s6_3407
	word32 t4_3413
	word32 s10_3411
	word32 s11_3412
	word32 s7_3408
	word32 s8_3409
	word32 s9_3410
	word32 s5_3406
	word32 a4_3402
	word32 a2_3400
	word32 a3_3401
	word32 a1_3399
	mbedtls_debug_print_msg(ra, s0_1320, 1<32>, a4_1313, s2_1043, out a1_3399, out a2_3400, out a3_3401, out a4_3402, out a5_3403, out a7_3404, out s4_3405, out s5_3406, out s6_3407, out s7_3408, out s8_3409, out s9_3410, out s10_3411, out s11_3412, out t4_3413)
l2308DCB4:
	a4_1350 = 0x230C79E8<32>
l2308DCC2:
	word32 s8_3424
	word32 s11_3427
	word32 t4_3428
	word32 s9_3425
	word32 s10_3426
	word32 s7_3423
	word32 s5_3421
	word32 s6_3422
	word32 s4_3420
	word32 a2_3415
	word32 a3_3416
	word32 a4_3417
	word32 a5_3418
	word32 a7_3419
	word32 a1_3414
	mbedtls_debug_print_msg(ra, s0_1320, 1<32>, a4_1350, s2_1043, out a1_3414, out a2_3415, out a3_3416, out a4_3417, out a5_3418, out a7_3419, out s4_3420, out s5_3421, out s6_3422, out s7_3423, out s8_3424, out s9_3425, out s10_3426, out s11_3427, out t4_3428)
l2308DE20:
	s6_1042 = 0xF8FFFE80<32>
l2308DC76:
l2308DC82:
	word32 s11_3397
	word32 t4_3398
	word32 a3_3386
	word32 s10_3396
	word32 s8_3394
	word32 s9_3395
	word32 s7_3393
	word32 a5_3388
	word32 a7_3389
	word32 s4_3390
	word32 s5_3391
	word32 s6_3392
	word32 a4_3387
	word32 a1_3384
	word32 a2_3385
	mbedtls_debug_print_msg(ra, s0_1320, 1<32>, 0x230C6E20<32>, a5_1393, out a1_3384, out a2_3385, out a3_3386, out a4_3387, out a5_3388, out a7_3389, out s4_3390, out s5_3391, out s6_3392, out s7_3393, out s8_3394, out s9_3395, out s10_3396, out s11_3397, out t4_3398)
	s6_1042 = 0xF9000400<32>
l2308E052:
	word32 s10_3309
	word32 s11_3310
	word32 s7_3306
	word32 s8_3307
	word32 s9_3308
	word32 s5_3305
	word32 a1_3300
	word32 a2_3301
	word32 a3_3302
	word32 a4_3303
	word32 s4_3304
	mbedtls_debug_print_ret(ra, 1<32>, 0xFFFE79<32>, s6_1042, out a1_3300, out a2_3301, out a3_3302, out a4_3303, out a5_1233, out s4_3304, out s5_3305, out s6_1252, out s7_3306, out s8_3307, out s9_3308, out s10_3309, out s11_3310)
l2308E06E:
	branch (CONVERT(Mem1454[a5_1233 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308D93C
l2308E07A:
	branch (s6_1252 & -129<i32>) != 0xF8FFFE00<32> l2308D93C
l2308E088:
	s0_1469 = Mem1454[0xF8FFFE04<32>:word32]
	a5_1471 = 0xF8FFFDF5<32>
	branch false l2308D93C
l2308E092:
	a4_1474 = 0x230C7B90<32>
l2308DBEA:
	a5_1223 = a0_243
	a3_1225 = 0xFFFF11<32>
l2308DBBC:
	word32 a3_3253
	word32 s4_3257
	word32 a4_3254
	word32 s5_3258
	word32 s6_3259
	word32 s11_3261
	word32 t4_3262
	word32 s7_3260
	word32 a7_3256
	word32 a5_3255
	word32 a2_3252
	word32 a1_3251
	a0_1490 = mbedtls_debug_print_msg(ra, s0_1516, 1<32>, 0x230C793C<32>, a5_217, out a1_3251, out a2_3252, out a3_3253, out a4_3254, out a5_3255, out a7_3256, out s4_3257, out s5_3258, out s6_3259, out s7_3260, out s8_1503, out s9_1504, out s10_1497, out s11_3261, out t4_3262)
l2308DB76:
	a4_1511 = 0x230C78F0<32>
l2308DB84:
	word32 a5_3267
	word32 s4_3269
	word32 s5_3270
	word32 s6_3271
	word32 s7_3272
	word32 s11_3273
	word32 t4_3274
	word32 a7_3268
	word32 a3_3265
	word32 a4_3266
	word32 a1_3263
	word32 a2_3264
	a0_1490 = mbedtls_debug_print_msg(ra, s0_1516, 1<32>, a4_1511, a5_1519, out a1_3263, out a2_3264, out a3_3265, out a4_3266, out a5_3267, out a7_3268, out s4_3269, out s5_3270, out s6_3271, out s7_3272, out s8_1503, out s9_1504, out s10_1497, out s11_3273, out t4_3274)
l2308DB90:
	s6_1544 = s3 + -1792<i32>
l2308DAFE:
	a4_1546 = 0x230C78DC<32>
l2308DAE4:
	a4_1546 = 0x230C78DC<32>
l2308DAC4:
	a4_1546 = 0x230C78C4<32>
l2308DA9E:
	a4_1546 = 0x230C78AC<32>
l2308DAAA:
	word32 t4_3216
	word32 s4_3211
	word32 a7_3210
	word32 a5_3209
	word32 a4_3208
	word32 s7_3214
	word32 s5_3212
	word32 s6_3213
	word32 a1_3205
	word32 a2_3206
	word32 a3_3207
	word32 s11_3215
	a0_1490 = mbedtls_debug_print_msg(ra, s0_1516, 1<32>, a4_1546, a5_1563, out a1_3205, out a2_3206, out a3_3207, out a4_3208, out a5_3209, out a7_3210, out s4_3211, out s5_3212, out s6_3213, out s7_3214, out s8_1503, out s9_1504, out s10_1497, out s11_3215, out t4_3216)
l2308DA30:
	word32 s7_3196
	word32 a5_1591
	word32 s9_3198
	word32 s10_3199
	word32 s5_3194
	word32 a1_3188
	word32 a2_3189
	word32 a4_3191
	word32 a7_3192
	word32 s6_3195
	word32 a3_3190
	word32 s4_3193
	word32 s8_3197
	word32 s11_3200
	word32 t4_3201
	mbedtls_debug_print_msg(ra, s0_163, 1<32>, 0x230C7898<32>, 3<32>, out a1_3188, out a2_3189, out a3_3190, out a4_3191, out a5_1591, out a7_3192, out s4_3193, out s5_3194, out s6_3195, out s7_3196, out s8_3197, out s9_3198, out s10_3199, out s11_3200, out t4_3201)
	word32 s0_3202
	word32 a4_3203
	word32 s5_3204
	ra = mbedtls_ssl_send_alert_message(ra, s0_163, 0xA<32>, a5_1591, mstatus, out s0_3202, out a0_1490, out a4_3203, out s2_1043, out s3, out s5_3204, out s8_1503, out s9_1504, out s10_1497, out mstatus)
	s6_1544 = a0_1490
	branch a0_1490 != 0<32> l2308DA5C
l2308DA56:
	s6_1544 = 0xF8FFFE00<32>
l2308DA5C:
	s0_1469 = Mem136[a0_1490:word32]
	branch (CONVERT(Mem136[a0_1490 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308D93C
l2308DA68:
	branch s6_1544 == s8_1503 l2308D93C
l2308DA6C:
	a5_1471 = s3 + -1792<i32>
	branch s6_1544 != a5_1471 l2308DBFC
l2308DBFC:
	Mem1665[s0_1469 + 124<i32>:word32] = 0<32>
	Mem1666[s0_1469 + 116<i32>:word32] = 0<32>
	a4_1474 = s9_1504 + -1640<i32>
l2308DA74:
	word32 a0_1672 = mbedtls_ssl_hdr_len.isra.1(a0_1490, out a5_1471)
	s0_1469 = Mem136[a5_1471 + 112<i32>:word32]
	Mem1681[a0_1672 + a5_1471 + 124<i32>:word32] = s0_1469
	a4_1474 = s10_1497 + -1680<i32>
l2308DA88:
	word32 s8_3237
	word32 a1_3227
	word32 s9_3238
	word32 a2_3228
	word32 s5_3234
	word32 a5_3231
	word32 a3_3229
	word32 a7_3232
	word32 s4_3233
	word32 a4_3230
	word32 t4_3241
	word32 s6_3235
	word32 s7_3236
	word32 s10_3239
	word32 s11_3240
	a0_1699 = mbedtls_debug_print_msg(ra, s0_1469, 1<32>, a4_1474, a5_1471, out a1_3227, out a2_3228, out a3_3229, out a4_3230, out a5_3231, out a7_3232, out s4_3233, out s5_3234, out s6_3235, out s7_3236, out s8_3237, out s9_3238, out s10_3239, out s11_3240, out t4_3241)
l2308D986:
	a5_1223 = a0_55
	a3_1225 = 0xFFFEE7<32>
l2308D996:
	word32 s10_3286
	word32 s11_3287
	word32 s9_3285
	word32 s4_3280
	word32 s7_3283
	word32 s8_3284
	word32 s5_3281
	word32 s6_3282
	word32 a3_3277
	word32 a4_3278
	word32 a5_3279
	word32 a2_3276
	word32 a1_3275
	mbedtls_debug_print_ret(ra, 1<32>, a3_1225, a5_1223, out a1_3275, out a2_3276, out a3_3277, out a4_3278, out a5_3279, out s4_3280, out s5_3281, out s6_3282, out s7_3283, out s8_3284, out s9_3285, out s10_3286, out s11_3287)
l2308D90E:
	word32 a2_1751 = a2 - a1_31
	Mem1752[a2_1751 + 112<i32>:word32] = a0_1699
	word32 a0_1753 = Mem1752[a0_1699 + 100<i32>:word32]
	word32 a5_1759
	word32 a3_3162
	word32 a4_3163
	memmove(a0_1753, a1_31 + a0_1753, a2_1751, out a3_3162, out a4_3163, out a5_1759)
	word32 a1_3165
	word32 a0_3164
	word32 a2_3166
	word32 a7_3170
	word32 a3_3167
	word32 a5_3169
	word32 a4_3168
	mbedtls_debug_print_buf(ra, 4<32>, a5_1759, out a0_3164, out a1_3165, out a2_3166, out a3_3167, out a4_3168, out a5_3169, out a7_3170)
l2308D93C:
	a0Out = dwLoc18
	a4Out = dwLoc38
	s3Out = s3
	mstatusOut = mstatus
	return ra
mbedtls_ssl_read_record_layer_exit:


word32 mbedtls_ssl_read_record(word32 ra, word32 s1, word32 a0, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
//      mbedtls_ssl_parse_change_cipher_spec
//      mbedtls_ssl_parse_finished
//      mbedtls_ssl_read
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a3 a4 a5 mstatus ra s10 s11 s3 s4 s5 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_read_record_entry:
l2308E2EC:
	word32 a1_316
	word32 a3_317
	word32 a4_318
	word32 a5_319
	word32 a7_320
	word32 s4_321
	word32 s5_322
	word32 s6_323
	word32 s7_324
	word32 s8_325
	word32 s9_326
	word32 s10_327
	word32 t4_328
	word32 s11_34
	word32 a2_29
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C77B4<32>, a5, out a1_316, out a2_29, out a3_317, out a4_318, out a5_319, out a7_320, out s4_321, out s5_322, out s6_323, out s7_324, out s8_325, out s9_326, out s10_327, out s11_34, out t4_328)
	word32 s2_48 = 0x230C8000<32>
	word32 s1_23 = a0
l2308E31C:
	word32 s9_147
	word32 s7_145
	word32 s5_143
	word32 a1_135
	word32 a3_137
	word32 a4_138
	word32 a5_134
	word32 a5_154
	word32 a3_156
	word32 s11_141
	word32 s10_140
	word32 a0_54
	word32 a4_58
	word32 s3_281
	ra = mbedtls_ssl_read_record_layer(ra, s1_23, s1_23, a2_29, s2_48, s11_34, mstatus, dwArg10, dwArg14, dwArg38, dwArg40, dwArg44, s1, dwArg78, dwArg88, dwArg94, dwArgA8, dwArgB8, dwArgC8, out a0_54, out a4_58, out s3_281, out mstatus)
	word32 s0_114 = a0_54
	branch a0_54 == 0<32> l2308E352
l2308E352:
	word32 a0_85
	word32 a1_86
	word32 a4_89
	ra = mbedtls_ssl_handle_message_type(ra, a4_58, mstatus, dwArg18, dwArgA8, dwArgB8, dwArgE8, dwArg0128, dwArg0168, out s1_23, out a0_85, out a1_86, out a2_29, out a4_89, out s2_48, out s3_281, out s11_34, out mstatus)
	s0_114 = a0_85
	branch a0_85 == s3_281 l2308E31C
l2308E35E:
	branch a0_85 == 0<32> l2308E372
l2308E372:
	word32 s1_115 = Mem21[a4_89 + 108<i32>:word32]
	word32 a5_116 = 0x16<32>
	branch a4_89 != 0x16<32> l2308E380
l2308E37A:
	a5_116 = mbedtls_ssl_update_handshake_status(ra, a1_86, a4_89)
l2308E380:
	word32 a2_333
	word32 a7_334
	word32 s4_335
	word32 s6_336
	word32 s8_337
	word32 t4_338
	mbedtls_debug_print_msg(ra, s1_115, 2<32>, 0x230C7804<32>, a5_116, out a1_135, out a2_333, out a3_137, out a4_138, out a5_134, out a7_334, out s4_335, out s5_143, out s6_336, out s7_145, out s8_337, out s9_147, out s10_140, out s11_141, out t4_338)
l2308E360:
	a5_154 = a0_85
	a3_156 = 0xFFFEBA<32>
l2308E326:
	a5_154 = a0_54
	a3_156 = 0xFFFEB0<32>
l2308E336:
	word32 a2_329
	word32 s4_330
	word32 s6_331
	word32 s8_332
	mbedtls_debug_print_ret(ra, 1<32>, a3_156, a5_154, out a1_135, out a2_329, out a3_137, out a4_138, out a5_134, out s4_330, out s5_143, out s6_331, out s7_145, out s8_332, out s9_147, out s10_140, out s11_141)
l2308E342:
	a0Out = s0_114
	a1Out = a1_135
	a3Out = a3_137
	a4Out = a4_138
	a5Out = a5_134
	s3Out = s3_281
	s4Out = dwArg04
	s5Out = s5_143
	s7Out = s7_145
	s9Out = s9_147
	s10Out = s10_140
	s11Out = s11_141
	mstatusOut = mstatus
	return ra
mbedtls_ssl_read_record_exit:


void mbedtls_ssl_parse_certificate(word32 ra, word32 s0, word32 s1, word32 a5, word32 s2, word32 s5, word32 s6, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0114, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0114:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_parse_certificate_entry:
l2308E39C:
	word32 a0_27 = Mem21[a5:word32]
	word32 s5_45
	word32 a3_1543
	word32 a5_1545
	word32 a4_1544
	word32 a1_1541
	word32 a2_1542
	word32 s4_1547
	word32 s7_1549
	word32 s6_1548
	word32 a7_1546
	word32 s11_1553
	word32 t4_1554
	word32 s8_1550
	word32 s9_1551
	word32 s10_1552
	mbedtls_debug_print_msg(ra, a0_27, 2<32>, 0x230C722C<32>, Mem21[s1 + 116<i32>:word32], out a1_1541, out a2_1542, out a3_1543, out a4_1544, out a5_1545, out a7_1546, out s4_1547, out s5_45, out s6_1548, out s7_1549, out s8_1550, out s9_1551, out s10_1552, out s11_1553, out t4_1554)
	word32 a3_54 = CONVERT(Mem21[s5_45 + 10<i32>:byte], byte, word32)
	word32 s0_34 = a0_27
	word32 s1_56 = s1 >>u 2<i32> & 3<32>
	word32 a4_58 = a3_54 + -5<i32> & 255<i32>
	word32 a5_59 = 6<32>
	branch a4_58 >u 6<32> l2308E434
l2308E3F0:
	word32 a5_62 = 75<i32> >>u a4_58
	a5_59 = a5_62 & 1<32>
	branch (a5_62 & 1<32>) == 0<32> l2308E434
l2308E434:
	word32 a5_67 = CONVERT(Mem21[a5_59 + 116<i32>:uint16], uint16, word32)
	s0_34 = Mem21[a5_59:word32]
	a5_59 = a5_67 & 1<32>
	branch (a5_67 & 1<32>) == 0<32> l2308E458
l2308E43E:
	a4_58 = 7<32>
	branch a3_54 != 7<32> l2308E458
l2308E458:
	word32 s0_74 = Mem21[a4_58 + 48<i32>:word32]
	word32 s4_75 = Mem21[a4_58 + 12<i32>:int32]
	branch s4_75 != 3<32> l2308E466
l2308E464:
	s4_75 = s1_56
l2308E466:
	branch (a5_67 & 1<32>) == 0<32> l2308E484
l2308E468:
	branch s4_75 != 0<32> l2308E484
l2308E484:
	word32 a5_352
	word32 a3_354
	word32 a5_108
	word32 s3_1571
	word32 a4_1570
	word32 s9_1574
	word32 s4_1572
	word32 s7_1573
	word32 a3_1569
	word32 a0_133
	word32 a1_104
	word32 s5_120
	word32 mstatus_111
	word32 s10_115
	word32 s11_116
	word32 ra_112 = mbedtls_ssl_read_record(ra, s1_56, s0_74, a5_67 & 1<32>, mstatus, s2, s0, dwLoc18, dwArg08, dwArg10, dwArg14, dwArg48, s5, ra, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgF8, dwArg0138, out a0_133, out a1_104, out a3_1569, out a4_1570, out a5_108, out s3_1571, out s4_1572, out s5_120, out s7_1573, out s9_1574, out s10_115, out s11_116, out mstatus_111)
	word32 s1_134 = a0_133
	branch a0_133 == 0<32> l2308E4AC
l2308E4AC:
	word32 s0_150
	Mem137[a5_108 + 5<32>:word32] = Mem21[a5_108 + 4<i32>:word32]
	word32 a5_139 = CONVERT(Mem137[a5_108 + 0x75<32>:uint16], uint16, word32)
	word32 a4_140 = a5_139 & 1<i32>
	branch (a5_139 & 1<i32>) == 0<32> l2308E550
l2308E4BE:
	word32 s0_141 = Mem137[(a5_139 & 1<i32>) + 12<i32>:word32]
	branch (a5_139 & 1<i32>) == 0<32> l2308E550
l2308E4C2:
	word32 a3_143 = Mem137[s0_141 + 128<i32>:int32]
	a4_140 = 4<32>
	branch (a5_139 & 2<32>) == 0<32> l2308E4CE
l2308E4CC:
	a4_140 = 0xC<32>
l2308E4CE:
	branch a3_143 != a4_140 + 3<i32> l2308E550
l2308E4D6:
	s0_150 = Mem137[a3_143 + 108<i32>:word32]
	branch a3_143 == 0x16<32> l2308E500
l2308E500:
	word32 s0_153 = Mem137[a0_133 + 100<i32>:word32]
	branch CONVERT(Mem137[a0_133:byte], byte, word32) != 0xB<32> l2308E558
l2308E50C:
	word32 a5_161
	word32 a2_1590
	word32 a3_1591
	a0_133 = memcmp(a0_133 + a4_140, 0x230C6DB0<32>, 3<32>, out a1_104, out a2_1590, out a3_1591, out a4_140, out a5_161)
	s1_134 = a0_133
	branch a0_133 != 0<32> l2308E550
l2308E550:
	s0_150 = Mem137[a4_140 + 108<i32>:word32]
	branch a4_140 != 0x16<32> l2308E4DE
l2308E558:
	word32 s0_173 = Mem137[a4_140 + 100<i32>:word32]
	word32 a5_174 = 0xB<32>
	branch CONVERT(Mem137[a4_140:byte], byte, word32) != 0xB<32> l2308E57E
l2308E564:
	s0_173 = Mem137[0xB<32>:word32]
	word32 a3_177 = Mem137[s0_173 + 128<i32>:int32]
	word32 s3_178 = 4<32>
	branch (CONVERT(Mem137[0x7F<32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308E576
l2308E574:
	s3_178 = 0xC<32>
l2308E576:
	a5_174 = s3_178 + 6<i32>
	branch a3_177 >=u a5_174 l2308E5A0
l2308E5A0:
	word32 a4_186 = a4_140 + s3_178
	word32 a4_190 = CONVERT(Mem137[a4_186:byte], byte, word32)
	a5_174 = CONVERT(Mem137[a4_186 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem137[a4_186 + 2<i32>:byte], byte, word32)
	branch a4_190 != 0<32> l2308E5BC
l2308E5B4:
	a5_174 = a5_174 + (s3_178 + 3<32>)
	branch a3_177 == a5_174 l2308E5CC
l2308E5CC:
	word32 a5_199 = Mem137[a0_133 + 92<i32>:word32]
	branch a0_133 == 0<32> l2308E5DE
l2308E5D2:
	word32 a0_216
	word32 a2_218
	word32 a5_1630
	word32 s3_1632
	word32 s4_1633
	word32 s2_1631
	word32 s1_1628
	word32 a1_1629
	word32 s0_1627
	word32 s8_1634
	ra_112 = mbedtls_x509_crt_free(ra_112, a0_133, a1_104, a5_199, mstatus_111, dwArg0108, dwArg0148, out s0_1627, out s1_1628, out a0_216, out a1_1629, out a2_218, out a5_1630, out s2_1631, out s3_1632, out s4_1633, out s8_1634)
	word32 t3_1641
	word32 s4_1640
	word32 a6_1639
	word32 s0_1635
	word32 a0_1636
	word32 a1_1637
	word32 a2_1638
	vPortFree(a0_216, a2_218, Mem137[a0_216 + 92<i32>:word32], mstatus_111, dwArg0128, dwArg0168, out s0_1635, out s1_134, out a0_1636, out a1_1637, out a2_1638, out a3_177, out a4_190, out a5_199, out a6_1639, out s4_1640, out t3_1641)
l2308E5DE:
	word32 a5_265
	word32 s0_268
	word32 s1_269
	word32 s8_1626
	word32 a1_1620
	word32 a3_1622
	word32 a4_1623
	word32 s2_1624
	word32 s4_1625
	word32 a2_1621
	word32 s3_271
	word32 ra_267 = mycalloc(ra_112, s1_134, 1<32>, 308<i32>, a3_177, a4_190, a5_199, mstatus_111, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out s0_268, out s1_269, out a1_1620, out a2_1621, out a3_1622, out a4_1623, out a5_265, out s2_1624, out s3_271, out s4_1625, out s8_1626)
	Mem278[0x5D<32>:word32] = s1_269
	branch true l2308E614
l2308E614:
	word32 s0_279 = Mem278[a5_265 + 44<i32>:word32]
	word32 s7_283 = 127<i32>
	word32 s6_284 = 0xFDFFF9D2<32>
	word32 a3_1642
	word32 a4_1643
	word32 a1_286
	word32 a0_285
	word32 a5_290
	ra_112 = mbedtls_x509_crt_init(ra_267, 1<32>, out a0_285, out a1_286, out a3_1642, out a4_1643, out a5_290)
l2308E628:
	word32 a4_296 = Mem278[s0_279 + 128<i32>:int32]
	branch s3_271 <u a4_296 l2308E73E
l2308E73E:
	a5_174 = a1_286 + s3_271
	s0_173 = Mem278[a1_286 + 100<i32>:word32]
	word32 a3_301 = CONVERT(Mem278[a5_174:byte], byte, word32)
	branch a3_301 == 0<32> l2308E75A
l2308E75A:
	word32 a2_305 = CONVERT(Mem278[a5_174 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem278[a5_174 + 2<i32>:byte], byte, word32)
	a5_174 = s3_271 + 3<i32>
	branch s7_283 >=u a2_305 l2308E776
l2308E76E:
	branch a4_296 >=u a2_305 + a5_174 l2308E786
l2308E786:
	word32 s8_1688
	word32 s9_1689
	word32 s2_1687
	word32 a4_1686
	word32 a2_1685
	ra_112 = mbedtls_x509_crt_parse_der(ra_112, Mem278[a4_296 + 44<i32>:word32], a0_285, a1_286 + a5_174, a2_305, a3_301, Mem278[a0_285 + 92<i32>:word32], a5_174, s5_120, s6_284, s7_283, s10_115, s11_116, mstatus_111, dwLoc2C, s6, s0, dwLoc18, dwArg08, dwArg18, dwArg24, dwArg28, dwArg38, dwArg48, s5, dwArg68, dwArg78, dwArg94, dwArg98, dwArgB8, dwArgD8, dwArg0114, out s0_279, out a0_285, out a1_286, out a2_1685, out a4_1686, out a5_290, out s2_1687, out s3_271, out s5_120, out s6_284, out s7_283, out s8_1688, out s9_1689, out s10_115, out s11_116, out mstatus_111)
	branch a0_285 == 0<32> l2308E628
l2308E796:
	branch a0_285 == s6_284 l2308E628
l2308E79A:
	a5_352 = a0_285
	a3_354 = 0x1000138<32>
l2308E776:
l2308E74A:
l2308E630:
	word32 a0_374
	word32 s1_378
	word32 s9_380
	word32 a1_386
	word32 a2_387
	word32 s10_391
	word32 s11_392
	word32 s3_393
	word32 s4_394
	word32 s7_395
	word32 a3_375
	word32 s0_390
	word32 a5_384
	word32 ra_377 = mbedtls_debug_print_crt(ra_112, 3<32>, 0x230C72CC<32>, Mem278[a5_290 + 92<i32>:word32], out s0_390, out s1_378, out a0_374, out a1_386, out a2_387, out a3_375, out a5_384, out s3_393, out s4_394, out s7_395, out s9_380, out s10_391, out s11_392)
	branch s4_394 == 0<32> l2308E722
l2308E652:
	word32 s0_402 = Mem278[a3_375:word32]
	word32 a5_403 = Mem278[a1_386 + 20<i32>:word32]
	branch a1_386 == 0<32> l2308E7AC
l2308E7AC:
	a3_375 = Mem278[a2_387 + 84<i32>:word32]
	branch a1_386 != 0<32> l2308E65E
l2308E7B4:
	word32 s6_1740
	word32 t4_1746
	word32 s7_1741
	word32 s8_1742
	word32 s9_1743
	word32 s10_1744
	word32 s11_1745
	word32 a4_1735
	word32 a5_1736
	word32 s5_1739
	word32 a7_1737
	word32 s4_1738
	word32 a1_1732
	word32 a3_1734
	word32 a2_1733
	mbedtls_debug_print_msg(ra_377, s0_402, 1<32>, 0x230C72E0<32>, a5_403, out a1_1732, out a2_1733, out a3_1734, out a4_1735, out a5_1736, out a7_1737, out s4_1738, out s5_1739, out s6_1740, out s7_1741, out s8_1742, out s9_1743, out s10_1744, out s11_1745, out t4_1746)
l2308E65C:
l2308E65E:
	word32 a0_454
	word32 a5_459
	word32 a4_458
	word32 s5_471
	ra_377 = mbedtls_x509_crt_verify_with_profile(ra_377, s1_378, Mem278[a0_374 + 92<i32>:word32], a1_386, Mem278[a3_375 + 72<i32>:word32], Mem278[Mem278[a0_374 + 44<i32>:word32] + 180<i32>:int32], a0_374 + 96<i32>, Mem278[a3_375 + 52<i32>:int32], Mem278[a3_375 + 56<i32>:int32], s3_393, s7_395, s9_380, s10_391, s11_392, mstatus_111, dwLoc2C, dwLoc08, dwArg28, dwArg78, dwArg88, dwArg98, out a0_454, out a4_458, out a5_459, out s5_471)
	branch a0_454 == 0<32> l2308E698
l2308E67C:
	word32 s7_1680
	word32 s8_1681
	word32 s9_1682
	word32 s10_1683
	word32 s11_1684
	word32 s4_1678
	word32 s6_1679
	word32 a1_1675
	word32 a2_1676
	word32 a3_1677
	mbedtls_debug_print_ret(ra_377, 1<32>, 0x1000180<32>, a0_454, out a1_1675, out a2_1676, out a3_1677, out a4_458, out a5_459, out s4_1678, out s5_471, out s6_1679, out s7_1680, out s8_1681, out s9_1682, out s10_1683, out s11_1684)
l2308E698:
	word32 s0_514 = Mem278[a5_459 + 44<i32>:word32]
	word32 s3_516 = Mem278[a5_459 + 92<i32>:int32]
	word32 a5_1674
	word32 a0_518 = mbedtls_pk_can_do(s3_516 + 188<i32>, 2<32>, a5_459, out a5_1674)
	branch a0_518 == 0<32> l2308E6DC
l2308E6AA:
	word32 a5_522 = Mem278[s3_516 + 192<i32>:int32]
	word32 a5_527
	a0_518 = mbedtls_ssl_check_curve(CONVERT(Mem278[a5_522:byte], byte, word32), a5_522, out a4_458, out a5_527)
	branch a0_518 == 0<32> l2308E6DC
l2308E6BA:
	word32 t4_1704
	word32 s11_1703
	word32 s10_1702
	word32 s9_1701
	word32 a7_1696
	word32 s4_1697
	word32 s6_1698
	word32 s7_1699
	word32 s8_1700
	word32 a3_1694
	word32 a5_1695
	word32 a1_1692
	word32 a2_1693
	a0_518 = mbedtls_debug_print_msg(ra_377, s0_514, 1<32>, 0x230C7304<32>, a5_527, out a1_1692, out a2_1693, out a3_1694, out a4_458, out a5_1695, out a7_1696, out s4_1697, out s5_471, out s6_1698, out s7_1699, out s8_1700, out s9_1701, out s10_1702, out s11_1703, out t4_1704)
	branch a0_454 != 0<32> l2308E6DC
l2308E6D6:
l2308E6DC:
	word32 a0_574
	word32 a5_579
	word32 s1_582
	word32 s8_1691
	word32 s3_1690
	word32 s4_585
	s0_390 = mbedtls_ssl_check_cert_usage(a0_518, s5_471, ~CONVERT(Mem278[a4_458 + 116<i32>:uint16], uint16, word32) & 1<32>, out s1_582, out a0_574, out a5_579, out s3_1690, out s4_585, out s8_1691)
	branch a0_574 == 0<32> l2308E71A
l2308E6F8:
	word32 t4_1731
	word32 a7_1723
	word32 s9_1728
	word32 s11_1730
	word32 s10_1729
	word32 s8_1727
	word32 s6_1725
	word32 s7_1726
	word32 s5_1724
	word32 a5_1722
	word32 a1_1718
	word32 a2_1719
	word32 a3_1720
	word32 a4_1721
	mbedtls_debug_print_msg(ra_377, s0_390, 1<32>, 0x230C7324<32>, a5_579, out a1_1718, out a2_1719, out a3_1720, out a4_1721, out a5_1722, out a7_1723, out s4_585, out s5_1724, out s6_1725, out s7_1726, out s8_1727, out s9_1728, out s10_1729, out s11_1730, out t4_1731)
	branch s1_582 != 0<32> l2308E71A
l2308E714:
l2308E71A:
	a5_384 = 1<32>
	branch s4_585 != 1<32> l2308E722
l2308E720:
l2308E722:
	word32 s11_1672
	word32 t4_1673
	word32 s10_1671
	word32 s9_1670
	word32 s8_1669
	word32 s4_1665
	word32 s5_1666
	word32 s6_1667
	word32 s7_1668
	word32 a5_1663
	word32 a7_1664
	word32 a2_1660
	word32 a3_1661
	word32 a4_1662
	word32 a1_1659
	mbedtls_debug_print_msg(ra_377, s0_390, 2<32>, 0x230C7348<32>, a5_384, out a1_1659, out a2_1660, out a3_1661, out a4_1662, out a5_1663, out a7_1664, out s4_1665, out s5_1666, out s6_1667, out s7_1668, out s8_1669, out s9_1670, out s10_1671, out s11_1672, out t4_1673)
l2308E5EE:
	word32 s11_1657
	word32 t4_1658
	word32 s10_1656
	word32 s9_1655
	word32 s8_1654
	word32 s4_1650
	word32 s5_1651
	word32 s6_1652
	word32 s7_1653
	word32 a5_1648
	word32 a7_1649
	word32 a2_1645
	word32 a3_1646
	word32 a4_1647
	word32 a1_1644
	mbedtls_debug_print_msg(ra_267, s0_268, 1<32>, 0x230C7CB0<32>, 308<i32>, out a1_1644, out a2_1645, out a3_1646, out a4_1647, out a5_1648, out a7_1649, out s4_1650, out s5_1651, out s6_1652, out s7_1653, out s8_1654, out s9_1655, out s10_1656, out s11_1657, out t4_1658)
l2308E5BC:
l2308E57E:
l2308E58C:
	word32 s6_1613
	word32 s4_1611
	word32 s5_1612
	word32 s10_1617
	word32 s11_1618
	word32 t4_1619
	word32 a2_1606
	word32 a1_1605
	word32 a4_1608
	word32 a5_1609
	word32 a7_1610
	word32 a3_1607
	word32 s8_1615
	word32 s9_1616
	word32 s7_1614
	mbedtls_debug_print_msg(ra_112, s0_173, 1<32>, 0x230C7278<32>, a5_174, out a1_1605, out a2_1606, out a3_1607, out a4_1608, out a5_1609, out a7_1610, out s4_1611, out s5_1612, out s6_1613, out s7_1614, out s8_1615, out s9_1616, out s10_1617, out s11_1618, out t4_1619)
l2308E520:
	word32 a5_744
	word32 s4_752
	word32 s6_1598
	word32 s10_1602
	word32 a1_1592
	word32 a7_1596
	word32 a3_1594
	word32 a4_1595
	word32 a2_1593
	word32 s5_1597
	word32 s11_1603
	word32 t4_1604
	word32 s8_1600
	word32 s9_1601
	word32 s7_1599
	mbedtls_debug_print_msg(ra_112, s0_153, 1<32>, 0x230C7290<32>, a5_161, out a1_1592, out a2_1593, out a3_1594, out a4_1595, out a5_744, out a7_1596, out s4_752, out s5_1597, out s6_1598, out s7_1599, out s8_1600, out s9_1601, out s10_1602, out s11_1603, out t4_1604)
	Mem764[0xA0<32>:word32] = a5_744
	branch s4_752 == 1<32> l2308E41C
l2308E548:
l2308E4DE:
	word32 a7_1580
	word32 s11_1588
	word32 s4_1581
	word32 s9_1586
	word32 a1_1575
	word32 a2_1576
	word32 a3_1577
	word32 a4_1578
	word32 a5_1579
	word32 s10_1587
	word32 s8_1585
	word32 s6_1583
	word32 s7_1584
	word32 s5_1582
	word32 t4_1589
	mbedtls_debug_print_msg(ra_112, s0_150, 1<32>, 0x230C7278<32>, 0x16<32>, out a1_1575, out a2_1576, out a3_1577, out a4_1578, out a5_1579, out a7_1580, out s4_1581, out s5_1582, out s6_1583, out s7_1584, out s8_1585, out s9_1586, out s10_1587, out s11_1588, out t4_1589)
l2308E48E:
	a5_352 = a0_133
	a3_354 = 0x10000BF<32>
l2308E49E:
	word32 s10_1716
	word32 s11_1717
	word32 s5_1711
	word32 s6_1712
	word32 s9_1715
	word32 s7_1713
	word32 s8_1714
	word32 a3_1707
	word32 a4_1708
	word32 s4_1710
	word32 a5_1709
	word32 a2_1706
	word32 a1_1705
	mbedtls_debug_print_ret(ra_112, 1<32>, a3_354, a5_352, out a1_1705, out a2_1706, out a3_1707, out a4_1708, out a5_1709, out s4_1710, out s5_1711, out s6_1712, out s7_1713, out s8_1714, out s9_1715, out s10_1716, out s11_1717)
l2308E46C:
	s0_34 = Mem21[(a5_67 & 1<32>) + 44<i32>:word32]
	Mem836[0xE0<32>:word32] = a5_67 & 1<32>
l2308E444:
l2308E452:
l2308E3FC:
l2308E40C:
	word32 a5_864
	word32 s9_1565
	word32 a3_1557
	word32 a2_1556
	word32 a1_1555
	word32 s7_1563
	word32 s6_1562
	word32 s5_1561
	word32 a4_1558
	word32 a7_1559
	word32 s4_1560
	word32 s11_1567
	word32 s8_1564
	word32 s10_1566
	word32 t4_1568
	mbedtls_debug_print_msg(ra, s0_34, 2<32>, 0x230C7244<32>, a5_59, out a1_1555, out a2_1556, out a3_1557, out a4_1558, out a5_864, out a7_1559, out s4_1560, out s5_1561, out s6_1562, out s7_1563, out s8_1564, out s9_1565, out s10_1566, out s11_1567, out t4_1568)
	Mem887[a5_864 + 5<32>:word32] = Mem882[a5_864 + 4<i32>:word32]
l2308E41C:
	0<32> = dwArg0128
	return
mbedtls_ssl_parse_certificate_exit:


void mbedtls_ssl_parse_change_cipher_spec(word32 ra, word32 s1, word32 a0, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg58, word32 dwArg74, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_parse_change_cipher_spec_entry:
l2308E7D4:
	word32 a5_27
	word32 s11_414
	word32 t4_415
	word32 s7_410
	word32 s10_413
	word32 s8_411
	word32 s9_412
	word32 a7_406
	word32 s6_409
	word32 s4_407
	word32 s5_408
	word32 a1_402
	word32 a4_405
	word32 a2_403
	word32 a3_404
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C7360<32>, a5, out a1_402, out a2_403, out a3_404, out a4_405, out a5_27, out a7_406, out s4_407, out s5_408, out s6_409, out s7_410, out s8_411, out s9_412, out s10_413, out s11_414, out t4_415)
	word32 a4_50
	word32 s3_61
	word32 a0_76
	word32 a5_418
	word32 s5_420
	word32 s7_421
	word32 s4_419
	word32 s9_422
	word32 s11_424
	word32 mstatus_425
	word32 s10_423
	word32 a3_417
	word32 a1_416
	word32 ra_126 = mbedtls_ssl_read_record(ra, s1, a0, a5_27, mstatus, dwLoc10, dwLoc0C, dwLoc08, dwArg18, dwArg20, dwArg24, dwArg58, s1, dwArg74, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArg0108, dwArg0148, out a0_76, out a1_416, out a3_417, out a4_50, out a5_418, out s3_61, out s4_419, out s5_420, out s7_421, out s9_422, out s10_423, out s11_424, out mstatus_425)
	branch a0_76 == 0<32> l2308E836
l2308E836:
	word32 s0_78 = Mem24[a4_50 + 108<i32>:word32]
	branch a4_50 == 0x14<32> l2308E85E
l2308E85E:
	word32 s0_215 = Mem24[0x84<32>:word32]
	branch true l2308E872
l2308E868:
	s0_215 = Mem24[0x65<32>:word32]
	branch CONVERT(Mem24[1<32>:byte], byte, word32) == 0x14<32> l2308E894
l2308E894:
	word32 a5_125
	word32 a5_92
	word32 a1_469
	word32 a2_470
	word32 a4_471
	word32 a7_472
	word32 s4_473
	word32 s5_474
	word32 s6_475
	word32 s7_476
	word32 s8_477
	word32 s9_478
	word32 s10_479
	word32 s11_480
	word32 t4_481
	word32 a3_123
	word32 a0_91 = mbedtls_debug_print_msg(ra_126, s0_215, 3<32>, 0x230C739C<32>, 0x14<32>, out a1_469, out a2_470, out a3_123, out a4_471, out a5_92, out a7_472, out s4_473, out s5_474, out s6_475, out s7_476, out s8_477, out s9_478, out s10_479, out s11_480, out t4_481)
	Mem111[a5_92 + 52<i32>:word32] = Mem24[a5_92 + 64<i32>:word32]
	Mem113[a5_92 + 32<i32>:word32] = Mem111[a5_92 + 44<i32>:word32]
	word32 s0_114 = Mem113[a5_92:word32]
	branch (CONVERT(Mem113[a5_92 + 116<i32>:uint16], uint16, word32) & 2<32>) == 0<32> l2308E8EE
l2308E8EE:
	word32 t1_482
	word32 a0_483
	word32 a1_484
	word32 a2_485
	word32 a4_486
	ra_126 = memset(ra_126, a0_91, 0<32>, 8<32>, out t1_482, out a0_483, out a1_484, out a2_485, out a3_123, out a4_486, out a5_125)
l2308E8BE:
	word32 a5_131 = CONVERT(Mem113[s0_114 + 120<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem133[s0_114 + 120<i32>:word16] = SLICE(a5_131 >>u 16<i32>, word16, 0)
	a5_125 = a5_131 >>u 16<i32>
	branch a5_131 >>u 16<i32> != 0<32> l2308E8F8
l2308E8F8:
	word32 s0_139 = Mem135[a5_125 + 96<i32>:word32]
	branch a3_123 <= 1<32> l2308E90C
l2308E902:
	s0_139 = Mem135[a3_123 + 64<i32>:word32]
	a5_125 = a5_125 + (1<32> - Mem135[Mem135[0xD<32>:word32] + 16<i32>:word32])
l2308E90C:
	Mem147[a5_125 + 100<i32>:word32] = s0_139
	word32 s0_148 = Mem147[a5_125 + 4<i32>:word32]
	word32 a5_151 = a5_125 + 1<32>
	Mem152[a5_151 + 4<i32>:word32] = s0_148
	word32 a1_502
	word32 a2_503
	word32 a3_504
	word32 a4_505
	word32 a5_506
	word32 a7_507
	word32 s4_508
	word32 s5_509
	word32 s6_510
	word32 s7_511
	word32 s8_512
	word32 s9_513
	word32 s10_514
	word32 s11_515
	word32 t4_516
	mbedtls_debug_print_msg(ra_126, s0_148, 2<32>, 0x230C73D0<32>, a5_151, out a1_502, out a2_503, out a3_504, out a4_505, out a5_506, out a7_507, out s4_508, out s5_509, out s6_510, out s7_511, out s8_512, out s9_513, out s10_514, out s11_515, out t4_516)
l2308E8CE:
	word32 a1_487
	word32 a2_488
	word32 a3_489
	word32 a4_490
	word32 a5_491
	word32 a7_492
	word32 s4_493
	word32 s5_494
	word32 s6_495
	word32 s7_496
	word32 s8_497
	word32 s9_498
	word32 s10_499
	word32 s11_500
	word32 t4_501
	mbedtls_debug_print_msg(ra_126, s0_114, 1<32>, 0x230C7E94<32>, a5_131 >>u 16<i32>, out a1_487, out a2_488, out a3_489, out a4_490, out a5_491, out a7_492, out s4_493, out s5_494, out s6_495, out s7_496, out s8_497, out s9_498, out s10_499, out s11_500, out t4_501)
l2308E872:
	word32 a1_454
	word32 a2_455
	word32 a3_456
	word32 a4_457
	word32 a5_458
	word32 a7_459
	word32 s4_460
	word32 s5_461
	word32 s6_462
	word32 s7_463
	word32 s8_464
	word32 s9_465
	word32 s10_466
	word32 s11_467
	word32 t4_468
	mbedtls_debug_print_msg(ra_126, s0_215, 1<32>, 0x230C737C<32>, 0x14<32>, out a1_454, out a2_455, out a3_456, out a4_457, out a5_458, out a7_459, out s4_460, out s5_461, out s6_462, out s7_463, out s8_464, out s9_465, out s10_466, out s11_467, out t4_468)
l2308E83E:
	word32 a1_439
	word32 a2_440
	word32 a3_441
	word32 a4_442
	word32 a5_443
	word32 a7_444
	word32 s4_445
	word32 s5_446
	word32 s6_447
	word32 s7_448
	word32 s8_449
	word32 s9_450
	word32 s10_451
	word32 s11_452
	word32 t4_453
	mbedtls_debug_print_msg(ra_126, s0_78, 1<32>, 0x230C737C<32>, 0x14<32>, out a1_439, out a2_440, out a3_441, out a4_442, out a5_443, out a7_444, out s4_445, out s5_446, out s6_447, out s7_448, out s8_449, out s9_450, out s10_451, out s11_452, out t4_453)
l2308E80A:
	word32 a3_428
	word32 a2_427
	word32 a1_426
	word32 a4_429
	word32 a5_430
	word32 s4_431
	word32 s5_432
	word32 s6_433
	word32 s7_434
	word32 s8_435
	word32 s9_436
	word32 s10_437
	word32 s11_438
	mbedtls_debug_print_ret(ra_126, 1<32>, s3_61 + 463<i32>, a0_76, out a1_426, out a2_427, out a3_428, out a4_429, out a5_430, out s4_431, out s5_432, out s6_433, out s7_434, out s8_435, out s9_436, out s10_437, out s11_438)
l2308E824:
	return
mbedtls_ssl_parse_change_cipher_spec_exit:


void mbedtls_ssl_parse_finished(word32 ra, word32 s0, word32 s1, word32 a0, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_parse_finished_entry:
l2308E930:
	word32 a5_27
	word32 a2_29
	word32 s4_35
	word32 s10_548
	word32 s11_549
	word32 t4_550
	word32 a1_539
	word32 s6_544
	word32 s8_546
	word32 s9_547
	word32 s7_545
	word32 a3_540
	word32 a4_541
	word32 a7_542
	word32 s5_543
	mbedtls_debug_print_msg(ra, a0, 2<32>, 0x230C73EC<32>, a5, out a1_539, out a2_29, out a3_540, out a4_541, out a5_27, out a7_542, out s4_35, out s5_543, out s6_544, out s7_545, out s8_546, out s9_547, out s10_548, out s11_549, out t4_550)
	word32 a5_48 = Mem24[a2_29 + 116<i32>:word32]
	word32 a5_51 = Mem24[a5_48 + 204<i32>:int32]
	word32 ra_60
	word32 s0_61
	word32 s1_62
	word32 a5_65
	call a5_51 (retsize: 0;)
		uses: a0:Mem24[a5_27:word32],a1:fp + -44<i32>,a2:a2_29 & 1<32> ^ 1<i32>,a5:a5_51,mstatus:mstatus_89,ra:ra,s0:Mem24[a5_48 + 48<i32>:word32],s1:s1,s2:0x230C8000<32>,s3:s3,s4:s4_35
		defs: a5:a5_65,ra:ra_60,s0:s0_61,s1:s1_62
	word32 a3_84
	word32 a4_85
	word32 mstatus_89
	word32 s4_97
	word32 a0_111
	word32 s10_557
	word32 s11_558
	word32 s3_553
	word32 s7_555
	word32 s9_556
	word32 s5_554
	word32 a1_551
	word32 a5_552
	word32 ra_197 = mbedtls_ssl_read_record(ra_60, s1_62, s0_61, a5_65, mstatus, s2, s0, dwLoc18, dwArg08, dwArg10, dwArg14, dwArg48, dwArg58, ra, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgF8, dwArg0138, out a0_111, out a1_551, out a3_84, out a4_85, out a5_552, out s3_553, out s4_97, out s5_554, out s7_555, out s9_556, out s10_557, out s11_558, out mstatus_89)
	branch a0_111 == 0<32> l2308E9A8
l2308E9A8:
	word32 s0_113 = Mem24[a4_85 + 108<i32>:word32]
	branch a4_85 == 0x16<32> l2308E9D0
l2308E9D0:
	word32 a6_115 = Mem24[s0_113 + 100<i32>:int32]
	word32 a5_116 = 0x14<32>
	branch CONVERT(Mem24[a6_115:byte], byte, word32) != 0x14<32> l2308EA02
l2308E9E0:
	s0_113 = Mem24[a3_84:word32]
	word32 t1_120 = Mem24[s0_113 + 128<i32>:int32]
	word32 a0_121 = 4<32>
	word32 a4_122 = CONVERT(Mem24[a3_84 + 116<i32>:uint16], uint16, word32)
	branch (a4_122 & 2<i32>) == 0<32> l2308E9F4
l2308E9F2:
	a0_121 = 0xC<32>
l2308E9F4:
	word32 a2_127 = 0<32>
	a5_116 = 0<32>
	branch t1_120 == a0_121 + 12<i32> l2308EA24
l2308EA24:
	a5_116 = a5_116 + 1<32>
	a2_127 = a2_127 | CONVERT(Mem24[(a0_121 + a5_116) + a6_115:byte], byte, word32) ^ CONVERT(Mem24[(fp - 44<i32>) + a5_116:byte], byte, word32)
	branch a5_116 != 0xC<32> l2308EA24
l2308EA44:
	branch a2_127 == 0<32> l2308EA56
l2308EA56:
	word32 a5_150
	word32 s0_147 = Mem24[a5_116 + 48<i32>:word32]
	word32 a5_148 = Mem24[a5_116 + 328<i32>:int32]
	branch a5_148 == 0<32> l2308EA9E
l2308EA9E:
	s0_147 = Mem24[a5_148 + 4<i32>:word32]
	a5_150 = a5_148 + 1<32>
l2308EA5E:
	branch (a4_122 & 1<32>) == 0<32> l2308EA68
l2308EA68:
	Mem155[0xE<32>:word32] = s0_147
	branch (CONVERT(Mem155[a3_84 + 116<i32>:uint16], uint16, word32) & 1<32>) != 0<32> l2308EA62
l2308EA62:
	a5_150 = 0xF<32>
l2308EA64:
	Mem164[a5_150 + 4<i32>:word32] = s0_147
l2308EA74:
	word32 a5_169 = CONVERT(Mem168[a3_84 + 116<i32>:uint16], uint16, word32)
	word32 a5_170 = a5_169 & 2<32>
	branch (a5_169 & 2<32>) == 0<32> l2308EA82
l2308EA7C:
	word32 s10_617
	ra_197 = mbedtls_ssl_recv_flight_completed(ra_197, a2_127, a5_169 & 2<32>, mstatus_89, dwLoc30, dwLoc2C, dwArg0108, dwArg0148, out a5_170, out s10_617)
l2308EA82:
	word32 s7_611
	word32 a7_607
	word32 a5_606
	word32 a4_605
	word32 a2_603
	word32 a3_604
	word32 s6_610
	word32 a1_602
	word32 s5_609
	word32 s8_612
	word32 s4_608
	word32 s9_613
	word32 s10_614
	word32 s11_615
	word32 t4_616
	mbedtls_debug_print_msg(ra_197, s0_147, 2<32>, 0x230C7418<32>, a5_170, out a1_602, out a2_603, out a3_604, out a4_605, out a5_606, out a7_607, out s4_608, out s5_609, out s6_610, out s7_611, out s8_612, out s9_613, out s10_614, out s11_615, out t4_616)
l2308EA46:
l2308EA02:
l2308EA10:
	word32 t4_601
	word32 s9_598
	word32 s11_600
	word32 s4_593
	word32 s8_597
	word32 s10_599
	word32 s5_594
	word32 s7_596
	word32 s6_595
	word32 a7_592
	word32 a3_589
	word32 a5_591
	word32 a4_590
	word32 a1_587
	word32 a2_588
	mbedtls_debug_print_msg(ra_197, s0_113, 1<32>, 0x230C7400<32>, a5_116, out a1_587, out a2_588, out a3_589, out a4_590, out a5_591, out a7_592, out s4_593, out s5_594, out s6_595, out s7_596, out s8_597, out s9_598, out s10_599, out s11_600, out t4_601)
l2308E9B0:
	word32 s10_584
	word32 s11_585
	word32 t4_586
	word32 a4_575
	word32 s6_580
	word32 s8_582
	word32 s9_583
	word32 s7_581
	word32 a5_576
	word32 a7_577
	word32 s4_578
	word32 s5_579
	word32 a2_573
	word32 a3_574
	word32 a1_572
	mbedtls_debug_print_msg(ra_197, s0_113, 1<32>, 0x230C7400<32>, 0x16<32>, out a1_572, out a2_573, out a3_574, out a4_575, out a5_576, out a7_577, out s4_578, out s5_579, out s6_580, out s7_581, out s8_582, out s9_583, out s10_584, out s11_585, out t4_586)
l2308E97C:
	word32 s6_566
	word32 s11_571
	word32 s7_567
	word32 s8_568
	word32 s9_569
	word32 s10_570
	word32 a4_562
	word32 s4_564
	word32 s5_565
	word32 a5_563
	word32 a1_559
	word32 a2_560
	word32 a3_561
	mbedtls_debug_print_ret(ra_197, 1<32>, s4_97 + 1164<i32>, a0_111, out a1_559, out a2_560, out a3_561, out a4_562, out a5_563, out s4_564, out s5_565, out s6_566, out s7_567, out s8_568, out s9_569, out s10_570, out s11_571)
l2308E996:
	0<32> = dwArg0128
	return
mbedtls_ssl_parse_finished_exit:


word32 mbedtls_ssl_read(word32 ra, word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg38, word32 dwArg84, word32 dwArg0108, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_handle_rx_appldata
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0038:[0..31] Stack +0084:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s10 s3 s4 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_ssl_read_entry:
l2308EAA4:
	word32 s0_117
	word32 sp_194 = fp + 0xFFFFFFE0<32>
	branch a0 == 0<32> l2308EC7A
l2308EAB6:
	word32 a0_18 = Mem15[a5:word32]
	branch a5 == 0<32> l2308EC7A
l2308EC7A:
	s0_117 = 0xF8FFFF00<32>
l2308EABE:
	word32 a5_34
	word32 s6_836
	word32 t4_842
	word32 s11_841
	word32 s7_837
	word32 s8_838
	word32 s9_839
	word32 s10_840
	word32 s5_835
	word32 a7_834
	word32 a3_833
	word32 a2_127
	word32 a1_134
	word32 s4_102
	word32 a0_116 = mbedtls_debug_print_msg(ra, a0_18, 2<32>, 0x230C775C<32>, a5, out a1_134, out a2_127, out a3_833, out a4, out a5_34, out a7_834, out s4_102, out s5_835, out s6_836, out s7_837, out s8_838, out s9_839, out s10_840, out s11_841, out t4_842)
	word32 s2_100 = 0x230C8000<32>
	s3 = a2
	word32 s1_52 = Mem15[a5_34:word32]
	word32 a5_53 = CONVERT(Mem15[a5_34 + 116<i32>:uint16], uint16, word32)
	branch (a5_53 & 2<32>) != 0<32> l2308EB22
l2308EB22:
	word32 a5_61
	word32 s5_844
	word32 s11_845
	word32 s1_843
	mbedtls_ssl_flush_output(ra, s1_52, a5_53 & 2<32>, dwArg0108, out s1_843, out a0_116, out a1_134, out a2_127, out a3, out a4, out a5_61, out s2_100, out s3, out s4_102, out s5_844, out s7, out s9, out s10, out s11_845)
	s0_117 = a0_116
	branch a0_116 != 0<32> l2308EB44
l2308EB2C:
	word32 s1_82 = Mem15[a5_61 + 48<i32>:word32]
	branch a5_61 == 0<32> l2308EAE8
l2308EB30:
	a4 = CONVERT(Mem15[a5_61 + 52<i32>:byte], byte, word32)
	branch a4 != 1<32> l2308EAE8
l2308EB3A:
	word32 s5_855
	word32 s11_857
	word32 s6_856
	word32 a5_854
	word32 s0_852
	word32 s1_853
	ra = mbedtls_ssl_resend(ra, a0_116, s1_82, 1<32>, s2_100, mstatus, dwArg0108, out s0_852, out s1_853, out a0_116, out a1_134, out a2_127, out a3, out a4, out a5_854, out s2_100, out s3, out s4_102, out s5_855, out s6_856, out s7, out s9, out s10, out s11_857, out mstatus)
	s0_117 = a0_116
	branch a0_116 == 0<32> l2308EAE8
l2308EAE8:
	word32 a5_514
	word32 a3_516
	word32 s1_120 = Mem15[a4 + 4<i32>:word32]
	word32 a5_121 = 0x10<32>
	branch a4 == 0x10<32> l2308EB56
l2308EAF0:
	word32 s5_849
	word32 s6_850
	word32 s7_851
	word32 a5_848
	word32 a3_847
	word32 s1_846
	ra = mbedtls_ssl_handshake(ra, s1_120, 0x10<32>, mstatus, dwArg38, dwArg84, out s1_846, out a0_116, out a1_134, out a2_127, out a3_847, out a4, out a5_848, out s2_100, out s3, out s4_102, out s5_849, out s6_850, out s7_851, out mstatus)
	a5_121 = 0xF9000500<32>
	s0_117 = a0_116
	branch a0_116 == 0xF9000500<32> l2308EB8E
l2308EB8E:
	s0_117 = 1<32>
l2308EB02:
	branch a0_116 == 0<32> l2308EB56
l2308EB56:
	s0_117 = 0<32>
l2308EB58:
	branch a5_121 != 0<32> l2308EC3C
l2308EB5C:
	word32 s1_167 = Mem15[a5_121 + 76<i32>:word32]
	branch a5_121 == 0<32> l2308EB74
l2308EB60:
	word32 a0_201
	word32 a3_204
	word32 a7_210
	word32 s10_211
	word32 s11_212
	word32 s5_213
	word32 s6_214
	word32 s7_215
	word32 s9_216
	word32 t0_217
	word32 t1_218
	word32 t4_219
	word32 tp_220
	word32 t2_222
	word32 t5_223
	word32 t6_224
	word32 gp_225
	call a5_121 (retsize: 0;)
		uses: a0:a0_168,a1:a1_187,a2:a2_184,a3:a3_204,a4:a4_203,a5:a5_162,a7:a7_210,gp:gp_225,mstatus:mstatus_190,ra:ra_172,s0:s0_174,s1:Mem15[a0_168 + 68<i32>:word32],s10:s10_211,s11:s11_212,s2:s2_175,s3:s3_178,s4:s4_181,s5:s5_213,s6:s6_214,s7:s7_215,s9:s9_216,Stack +0058:dwArg38,Stack +00A4:dwArg84,Stack +0128:dwArg0108,t0:t0_217,t1:t1_218,t2:t2_222,t4:t4_219,t5:t5_223,t6:t6_224,tp:tp_220
		defs: a0:a0_201,a1:a1_206,a3:a3_204,a4:a4_203,a7:a7_210,gp:gp_225,mstatus:mstatus_221,ra:ra_195,s0:s0_196,s1:s1_197,s10:s10_211,s11:s11_212,s3:s3_199,s4:s4_200,s5:s5_213,s6:s6_214,s7:s7_215,s9:s9_216,sp:sp_194,t0:t0_217,t1:t1_218,t2:t2_222,t4:t4_219,t5:t5_223,t6:t6_224,tp:tp_220
	a5_121 = 0xFFFFFFFF<32>
	branch a0_201 != 0xFFFFFFFF<32> l2308EB74
l2308EB6A:
	word32 s11_864
	word32 s10_863
	word32 s9_862
	word32 s7_861
	word32 a3_858
	word32 s6_860
	word32 s5_859
	ra = ssl_set_timer(ra, s0_117, a1_134, Mem15[a1_134 + 100<i32>:word32], Mem15[sp_194 + 16<i32>:word32], Mem15[sp_194 + 20<i32>:word32], out s0_117, out s1_167, out a1_134, out a3_858, out a4, out a5_121, out s4_102, out s5_859, out s6_860, out s7_861, out s9_862, out s10_863, out s11_864)
l2308EB74:
	branch s0_117 != 0<32> l2308EBA4
l2308EB76:
	word32 a0_290
	word32 s5_865
	word32 s11_866
	ra = mbedtls_ssl_read_record(ra, s1_167, s1_167, a5_121, mstatus, Mem15[sp_194 + 16<i32>:word32], Mem15[sp_194 + 20<i32>:word32], Mem15[sp_194 + 24<i32>:word32], Mem15[sp_194 + 56<i32>:word32], Mem15[sp_194 + 64<i32>:word32], Mem15[sp_194 + 68<i32>:word32], Mem15[sp_194 + 120<i32>:word32], Mem15[sp_194 + 136<i32>:word32], Mem15[sp_194 + 148<i32>:word32], Mem15[sp_194 + 168<i32>:word32], Mem15[sp_194 + 184<i32>:word32], Mem15[sp_194 + 200<i32>:word32], Mem15[sp_194 + 232<i32>:word32], Mem15[sp_194 + 296<i32>:word32], Mem15[sp_194 + 360<i32>:word32], out a0_290, out a1_134, out a3, out a4, out a5_121, out s3, out s4_102, out s5_865, out s7, out s9, out s10, out s11_866, out mstatus)
	s0_117 = a0_290
	branch a0_290 == 0<32> l2308EBA4
l2308EBA4:
	branch a5_121 != 0<32> l2308EBD6
l2308EBA8:
	word32 s1_299 = Mem15[a4 + 108<i32>:word32]
	a5_121 = 0x17<32>
	branch a4 != 0x17<32> l2308EBD6
l2308EBB0:
	word32 a0_334
	word32 s11_892
	word32 s5_891
	ra = mbedtls_ssl_read_record(ra, s1_299, s1_299, 0x17<32>, mstatus, Mem15[sp_194 + 16<i32>:word32], Mem15[sp_194 + 20<i32>:word32], Mem15[sp_194 + 24<i32>:word32], Mem15[sp_194 + 56<i32>:word32], Mem15[sp_194 + 64<i32>:word32], Mem15[sp_194 + 68<i32>:word32], Mem15[sp_194 + 120<i32>:word32], Mem15[sp_194 + 136<i32>:word32], Mem15[sp_194 + 148<i32>:word32], Mem15[sp_194 + 168<i32>:word32], Mem15[sp_194 + 184<i32>:word32], Mem15[sp_194 + 200<i32>:word32], Mem15[sp_194 + 232<i32>:word32], Mem15[sp_194 + 296<i32>:word32], Mem15[sp_194 + 360<i32>:word32], out a0_334, out a1_134, out a3, out a4, out a5_121, out s3, out s4_102, out s5_891, out s7, out s9, out s10, out s11_892, out mstatus)
	s0_117 = a0_334
	branch a0_334 == 0<32> l2308EBD6
l2308EBD6:
	word32 s1_338 = Mem15[a5_121 + 108<i32>:word32]
	branch a5_121 != 0x15<32> l2308EC00
l2308EC00:
	branch a5_121 == 0x17<32> l2308EC28
l2308EC28:
	Mem343[a5_121 + 104<i32>:word32] = Mem15[0x1B<32>:word32]
	branch true l2308EC3C
l2308EC34:
	word32 s1_913
	word32 a3_914
	word32 a4_915
	word32 a5_916
	word32 s5_917
	word32 s6_918
	word32 s7_919
	word32 s9_920
	word32 s10_921
	word32 s11_922
	ra = ssl_set_timer(ra, s0_117, 0<32>, 0x10<32>, Mem343[sp_194 + 16<i32>:word32], Mem343[sp_194 + 20<i32>:word32], out s0_117, out s1_913, out a1_134, out a3_914, out a4_915, out a5_916, out s4_102, out s5_917, out s6_918, out s7_919, out s9_920, out s10_921, out s11_922)
l2308EC3C:
	branch s3 >=u s0_117 l2308EC44
l2308EC42:
	s0_117 = s3
l2308EC44:
	word32 a7_872
	word32 a3_869
	word32 a4_397
	word32 a1_867
	word32 a2_868
	word32 a6_871
	word32 a5_870
	memcpy(s4_102, a1_134, s0_117, out a1_867, out a2_868, out a3_869, out a4_397, out a5_870, out a6_871, out a7_872)
	word32 s1_410 = Mem375[a4_397 + 112<i32>:word32]
	word32 a4_412 = a4_397 - s0_117
	Mem413[a4_412 + 112<i32>:word32] = s1_410
	word32 a5_411 = 0<32>
	branch a4_412 == 0<32> l2308EC5C
l2308EC58:
	s1_410 = Mem413[0x68<32>:word32]
	a5_411 = s0_117
l2308EC5C:
	Mem420[a5_411 + 104<i32>:word32] = s1_410
	word32 a2_882
	word32 s4_885
	word32 s5_886
	word32 a5_883
	word32 a7_884
	word32 a1_881
	word32 s6_887
	word32 t4_890
	word32 s11_889
	word32 s8_888
	mbedtls_debug_print_msg(ra, s1_410, 2<32>, 0x230C77AC<32>, a5_411, out a1_881, out a2_882, out a3, out a4, out a5_883, out a7_884, out s4_885, out s5_886, out s6_887, out s7, out s8_888, out s9, out s10, out s11_889, out t4_890)
l2308EC06:
	word32 a1_903
	word32 a2_904
	word32 a5_905
	word32 a7_906
	word32 s4_907
	word32 s5_908
	word32 s6_909
	word32 s8_910
	word32 s11_911
	word32 t4_912
	mbedtls_debug_print_msg(ra, s1_338, 1<32>, 0x230C778C<32>, a5_121, out a1_903, out a2_904, out a3, out a4, out a5_905, out a7_906, out s4_907, out s5_908, out s6_909, out s7, out s8_910, out s9, out s10, out s11_911, out t4_912)
	s0_117 = 0xF8FFF900<32>
l2308EBDE:
	word32 a5_895
	word32 a1_893
	word32 s5_898
	word32 s6_899
	word32 s4_897
	word32 a7_896
	word32 a2_894
	word32 s8_900
	word32 s11_901
	word32 t4_902
	mbedtls_debug_print_msg(ra, s1_338, 2<32>, 0x230C7764<32>, a5_121, out a1_893, out a2_894, out a3, out a4, out a5_895, out a7_896, out s4_897, out s5_898, out s6_899, out s7, out s8_900, out s9, out s10, out s11_901, out t4_902)
	s0_117 = 0xF9000700<32>
l2308EBBA:
	branch a0_334 == 0xF8FFFD80<32> l2308EB8A
l2308EBC4:
	a5_514 = a0_334
	a3_516 = 0x1FFFA27<32>
l2308EB80:
	branch a0_290 != 0xF8FFFD80<32> l2308EB92
l2308EB92:
	a5_514 = a0_290
	a3_516 = 0x1FFFA17<32>
l2308EB8A:
	s0_117 = 0<32>
l2308EB04:
	a5_514 = a0_116
	a3_516 = 0x1FFFA02<32>
l2308EB14:
	word32 a1_873
	word32 a2_874
	word32 s8_879
	word32 s5_877
	word32 s6_878
	word32 s4_876
	word32 s11_880
	word32 a5_875
	mbedtls_debug_print_ret(ra, 1<32>, a3_516, a5_514, out a1_873, out a2_874, out a3, out a4, out a5_875, out s4_876, out s5_877, out s6_878, out s7, out s8_879, out s9, out s10, out s11_880)
l2308EB44:
	s0Out = s1
	a0Out = s0_117
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = dwArg04
	s7Out = s7
	s9Out = s9
	s10Out = s10
	mstatusOut = mstatus
	return ra
mbedtls_ssl_read_exit:


void mbedtls_ssl_set_calc_verify_md(word32 a1, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a4:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
mbedtls_ssl_set_calc_verify_md_entry:
l2308EC82:
	branch a4 != 3<32> l2308ECA2
l2308EC8A:
	branch a1 != 4<32> l2308ECA2
l2308ECA2:
	return
l2308EC90:
	Mem14[a4 + 200<i32>:word32] = 0x2308AC06<32>
	return
mbedtls_ssl_set_calc_verify_md_exit:


word32 mbedtls_zeroize(word32 a0, word32 a1, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_free
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1
// Preserved: sp
mbedtls_zeroize_entry:
l2308ECAA:
	word32 a1_5 = a1 + a0
l2308ECAC:
	branch a0 != a1_5 l2308ECB2
l2308ECB2:
	Mem8[a0:byte] = 0<8>
	a0 = a0 + 1<32>
l2308ECB0:
	a1Out = a1_5
	return a0
mbedtls_zeroize_exit:


word32 x509_memcasecmp(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_name_cmp
//      x509_check_wildcard
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5 a7
// Trashed: a0 a3 a4 a5 a6 a7 t1
// Preserved: sp
x509_memcasecmp_entry:
l2308ECBA:
	word32 a4_23 = 0<32>
l2308ECC2:
	branch a4_23 != a2 l2308ECCA
l2308ECCA:
	a5 = CONVERT(Mem0[a0 + a4_23:byte], byte, word32)
	a3 = CONVERT(Mem0[a1 + a4_23:byte], byte, word32)
	word32 t1_15 = a5 ^ a3
	branch a5 == a3 l2308ECF6
l2308ECE2:
	branch t1_15 != 32<i32> l2308ECFA
l2308ECE6:
	word32 a5_18 = (a5 & -33<i32>) + -65<i32>
	a5 = a5_18 & 255<i32>
	branch (a5_18 & 255<i32>) >u 0x19<32> l2308ECFA
l2308ECFA:
	a3Out = a3
	a4Out = <invalid>
	a5Out = a5
	a7Out = <invalid>
	return 0xFFFFFFFF<32>
l2308ECF6:
	a4_23 = a4_23 + 1<32>
l2308ECC6:
	a3Out = a3
	a4Out = <invalid>
	a5Out = a5
	a7Out = <invalid>
	return 0<32>
x509_memcasecmp_exit:


word32 x509_name_cmp(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_check_parent
//      x509_crt_verify_child
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
x509_name_cmp_entry:
l2308ECFE:
	word32 s1_15 = a0
	word32 s0_17 = a1
l2308ED12:
	word32 a0_166
	branch s1_15 != 0<32> l2308ED1E
l2308ED1E:
	branch s0_17 != 0<32> l2308ED30
l2308ED30:
	s1_15 = Mem13[a4:word32]
	branch a4 != a5 l2308ED20
l2308ED38:
	s1_15 = Mem13[a2 + 4<i32>:word32]
	branch a2 != a5 l2308ED20
l2308ED40:
	s1_15 = Mem13[a0 + 8<i32>:word32]
	a0 = memcmp(a0, a1, a2, out a1, out a2, out a3, out a4, out a5)
	branch a0 != 0<32> l2308ED20
l2308ED4A:
	word32 s0_44
	branch a4 == a5 l2308ED76
l2308ED76:
	branch a2 != a5 l2308ED52
l2308ED7E:
	s0_44 = Mem13[a1 + 20<i32>:word32]
	s1_15 = Mem13[a0 + 20<i32>:word32]
	a0 = memcmp(a0, a1, a2, out a1, out a2, out a3, out a4, out a5)
	branch a0 != 0<32> l2308ED52
l2308ED52:
	s1_15 = Mem13[a5 + 12<i32>:word32]
	branch a5 != 0xC<32> l2308ED9A
l2308ED9A:
	branch a5 == 0x13<32> l2308ED58
l2308ED9E:
l2308ED58:
	branch a5 == 0xC<32> l2308ED62
l2308ED5E:
	branch a5 != 0x13<32> l2308ED20
l2308ED62:
	s1_15 = Mem13[a2 + 16<i32>:word32]
	branch a2 != a5 l2308ED20
l2308ED6A:
	s0_44 = Mem13[a1 + 20<i32>:word32]
	s1_15 = Mem13[a0 + 20<i32>:word32]
	a0 = x509_memcasecmp(a0, a1, a2, out a3, out a4, out a5, out a7)
	branch a0 == 0<32> l2308ED88
l2308ED88:
	a4 = CONVERT(Mem13[s1_15 + 28<i32>:byte], byte, word32)
	a5 = CONVERT(Mem13[s0_44 + 28<i32>:byte], byte, word32)
	branch a4 != a5 l2308ED20
l2308ED94:
	s1_15 = Mem13[s1_15 + 24<i32>:word32]
	s0_17 = Mem13[s0_44 + 24<i32>:word32]
l2308ED74:
l2308ED20:
	a0_166 = 0xFFFFFFFF<32>
l2308ED14:
	a0_166 = 0<32> - CONVERT(s0_17 != 0<32>, bool, word32)
l2308ED22:
	a0Out = a0_166
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a6Out = dwArg28
	a7Out = a7
	s2Out = 0xC<32>
	s3Out = 0x13<32>
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s1_15
x509_name_cmp_exit:


word32 x509_check_wildcard(word32 a0, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31]
// LiveOut: a0 a5 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t1 t3
// Preserved: sp
x509_check_wildcard_entry:
l2308EDA0:
	word32 a5_21
	word32 a3_13
	word32 a4_14
	word32 a1_90
	word32 a2_91
	word32 a5_92
	word32 a0_12 = strlen(a0, out a1_90, out a2_91, out a3_13, out a4_14, out a5_92)
	branch a4_14 <=u 2<32> l2308EE1A
l2308EE1A:
	a5_21 = 0<32>
l2308EDB8:
	a5_21 = 0<32>
	branch CONVERT(Mem9[a3_13:byte], byte, word32) != 42<i32> l2308EDE0
l2308EDC8:
	branch CONVERT(Mem9[a3_13 + 1<i32>:byte], byte, word32) != 46<i32> l2308EDE0
l2308EDD4:
	word32 a2_28 = 0<32>
l2308EDDA:
	branch a2_28 != a0_12 l2308EDEA
l2308EDEA:
	word32 a1_33 = a0 + a2_28
	branch CONVERT(Mem9[a1_33:byte], byte, word32) == 46<i32> l2308EDFA
l2308EDFA:
	a5_21 = 0xFFFFFFFF<32>
	branch a2_28 == 0<32> l2308EDE0
l2308EDFE:
	word32 a2_40 = a0_12 - a2_28
	branch a2_40 != a4_14 + 0xFFFFFFFF<32> l2308EDE0
l2308EE08:
	word32 a3_93
	word32 a4_94
	word32 a5_95
	word32 a7_96
	a5_21 = 0<32> - CONVERT(x509_memcasecmp(a3_13 + 1<i32>, a1_33, a2_40, out a3_93, out a4_94, out a5_95, out a7_96) != 0<32>, bool, word32)
l2308EDF6:
	a2_28 = a2_28 + 1<32>
l2308EDDE:
	a5_21 = 0xFFFFFFFF<32>
l2308EDE0:
	a0Out = a5_21
	a5Out = a5_21
	s8Out = dwLoc1C
	return a0
x509_check_wildcard_exit:


word32 x509_profile_check_key(word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a1 a2 a4 a5 t1
// Preserved: s0 sp
x509_profile_check_key_entry:
l2308EE1E:
	word32 a4_16
	word32 a5_23 = 1<32>
	branch a1 == 1<32> l2308EE32
l2308EE2C:
	branch a1 != 6<32> l2308EE4C
l2308EE4C:
	a4_16 = 0xFFFFFFFF<32>
	branch (a1 + 0xFFFFFFFE<32> & 255<i32>) >u 2<32> l2308EE42
l2308EE5A:
	word32 a0_18 = CONVERT(Mem7[0xFFFFFFFF<32>:byte], byte, word32)
	a5_23 = CONVERT((1<32> << a0_18 + 0xFFFFFFFF<32> & a0_18 + 0xFFFFFFFF<32>) <u 1<i32>, bool, word32)
l2308EE32:
	word32 a5_29
	a5_23 = CONVERT(mbedtls_pk_get_bitlen(a2, 1<32>, out a5_29) <u a5_29, bool, word32)
l2308EE3E:
	a4_16 = 0<32> - a5_23
l2308EE42:
	a2Out = dwArg10
	a4Out = a4_16
	a5Out = a5_23
	return a4_16
x509_profile_check_key_exit:


word32 mbedtls_x509_crt_info(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg5C, word32 dwArg6C, word32 dwArgC8, word32 dwArg0174, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_debug_print_crt
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +005C:[0..31] Stack +006C:[0..31] Stack +00C8:[0..31] Stack +0174:[0..31]
// LiveOut: ra s0 s1 s10 s2 s3 s4 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
mbedtls_x509_crt_info_entry:
l2308EE70:
	word32 s0_100
	word32 s10_1002
	word32 s4_1006
	word32 s3_1005
	word32 s2_1004
	word32 s7_1009
	branch a3 != 0<32> l2308EEB6
l2308EEB6:
	word32 a0_33
	word32 s1_42
	word32 a7_2136
	word32 s5_2137
	word32 a1_2131
	word32 s8_2139
	word32 a2_2132
	word32 s6_2138
	word32 a5_2135
	word32 a4_2134
	word32 s11_2141
	word32 s9_2140
	word32 a3_2133
	word32 ra_40 = snprintf(ra, a0, a1, 0x230C8290<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_42, out a0_33, out a1_2131, out a2_2132, out a3_2133, out a4_2134, out a5_2135, out a7_2136, out s2_1004, out s3_1005, out s4_1006, out s5_2137, out s6_2138, out s7_1009, out s8_2139, out s9_2140, out s10_1002, out s11_2141)
	branch a0_33 < 0<32> l2308EE96
l2308EED0:
	branch a0_33 >=u s4_1006 l2308EE96
l2308EED4:
	word32 a0_63
	word32 s1_72
	word32 s9_82
	word32 a7_2159
	word32 a5_2158
	word32 a3_2156
	word32 a4_2157
	word32 a1_2154
	word32 a2_2155
	word32 s5_2160
	word32 s6_2161
	word32 s8_2162
	word32 s11_2163
	word32 ra_70 = snprintf(ra_40, s1_42 + a0_33, s4_1006 - a0_33, 0x230C82AC<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_72, out a0_63, out a1_2154, out a2_2155, out a3_2156, out a4_2157, out a5_2158, out a7_2159, out s2_1004, out s3_1005, out s4_1006, out s5_2160, out s6_2161, out s7_1009, out s8_2162, out s9_82, out s10_1002, out s11_2163)
	branch a0_63 < 0<32> l2308EE96
l2308EEF0:
	branch a0_63 >=u s0_100 l2308EE96
l2308EEF4:
	word32 a0_91
	word32 s1_101
	word32 ra_99 = mbedtls_x509_serial_gets(ra_70, s1_72 + a0_63, s0_100 - a0_63, s2_1004 + 28<i32>, s7_1009, s9_82, dwLoc58, dwLoc44, dwLoc2C, dwArg18, dwArg3C, dwArgC8, out s0_100, out s1_101, out a0_91, out s2_1004, out s3_1005, out s4_1006, out s7_1009, out s10_1002)
	branch a0_91 < 0<32> l2308EE96
l2308EF08:
	branch a0_91 >=u s0_100 l2308EE96
l2308EF0C:
	word32 a0_123
	word32 s1_132
	word32 a3_2166
	word32 a4_2167
	word32 a5_2168
	word32 a2_2165
	word32 a1_2164
	word32 s6_2171
	word32 s8_2172
	word32 s9_2173
	word32 s5_2170
	word32 a7_2169
	word32 s11_2174
	word32 ra_130 = snprintf(ra_99, s1_101 + a0_91, s0_100 - a0_91, 0x230C82C4<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_132, out a0_123, out a1_2164, out a2_2165, out a3_2166, out a4_2167, out a5_2168, out a7_2169, out s2_1004, out s3_1005, out s4_1006, out s5_2170, out s6_2171, out s7_1009, out s8_2172, out s9_2173, out s10_1002, out s11_2174)
	branch a0_123 < 0<32> l2308EE96
l2308EF26:
	branch a0_123 >=u s0_100 l2308EE96
l2308EF2A:
	s0_100 = s0_100 - a0_123
	word32 s1_147 = s1_132 + a0_123
	word32 a0_151 = mbedtls_x509_dn_gets(ra_130, s1_147, s0_100, s2_1004 + 76<i32>, out s10_1002)
	branch a0_151 < 0<32> l2308EE96
l2308EF3E:
	branch a0_151 >=u s0_100 l2308EE96
l2308EF42:
	word32 a0_173
	word32 s1_182
	word32 s9_2184
	word32 a5_2179
	word32 a1_2175
	word32 a2_2176
	word32 a3_2177
	word32 a4_2178
	word32 s5_2181
	word32 a7_2180
	word32 s6_2182
	word32 s8_2183
	word32 s11_2185
	word32 ra_180 = snprintf(ra_130, s1_147 + a0_151, s0_100 - a0_151, 0x230C82E0<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_182, out a0_173, out a1_2175, out a2_2176, out a3_2177, out a4_2178, out a5_2179, out a7_2180, out s2_1004, out s3_1005, out s4_1006, out s5_2181, out s6_2182, out s7_1009, out s8_2183, out s9_2184, out s10_1002, out s11_2185)
	branch a0_173 < 0<32> l2308EE96
l2308EF5C:
	branch a0_173 >=u s0_100 l2308EE96
l2308EF60:
	s0_100 = s0_100 - a0_173
	word32 s1_197 = s1_182 + a0_173
	word32 a0_201 = mbedtls_x509_dn_gets(ra_180, s1_197, s0_100, s2_1004 + 108<i32>, out s10_1002)
	branch a0_201 < 0<32> l2308EE96
l2308EF74:
	branch a0_201 >=u s0_100 l2308EE96
l2308EF78:
	word32 a0_231
	word32 s1_240
	word32 a5_2190
	word32 a1_2186
	word32 a2_2187
	word32 a7_2191
	word32 s5_2192
	word32 s6_2193
	word32 a3_2188
	word32 a4_2189
	word32 s11_2196
	word32 s8_2194
	word32 s9_2195
	word32 ra_238 = snprintf(ra_180, s1_197 + a0_201, s0_100 - a0_201, 0x230C82FC<32>, dwLoc48, dwLoc28, dwArg04, Mem19[s2_1004 + 160<i32>:int32], dwArg24, s1, dwArg6C, out s0_100, out s1_240, out a0_231, out a1_2186, out a2_2187, out a3_2188, out a4_2189, out a5_2190, out a7_2191, out s2_1004, out s3_1005, out s4_1006, out s5_2192, out s6_2193, out s7_1009, out s8_2194, out s9_2195, out s10_1002, out s11_2196)
	branch a0_231 < 0<32> l2308EE96
l2308EFAE:
	branch a0_231 >=u s0_100 l2308EE96
l2308EFB2:
	word32 a5_254 = Mem223[s2_1004 + 184<i32>:int32]
	word32 a0_269
	word32 s1_278
	word32 a3_2199
	word32 a4_2200
	word32 a5_2201
	word32 s8_2205
	word32 s6_2204
	word32 s5_2203
	word32 a7_2202
	word32 a1_2197
	word32 a2_2198
	word32 s9_2206
	word32 s11_2207
	word32 ra_276 = snprintf(ra_238, s1_240 + a0_231, s0_100 - a0_231, 0x230C8334<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_278, out a0_269, out a1_2197, out a2_2198, out a3_2199, out a4_2200, out a5_2201, out a7_2202, out s2_1004, out s3_1005, out s4_1006, out s5_2203, out s6_2204, out s7_1009, out s8_2205, out s9_2206, out s10_1002, out s11_2207)
	branch a0_269 < 0<32> l2308EE96
l2308EFE8:
	branch a0_269 >=u s0_100 l2308EE96
l2308EFEC:
	word32 a0_299
	word32 s6_2216
	word32 s5_2215
	word32 s8_2217
	word32 s9_2218
	word32 s11_2219
	word32 a7_2214
	word32 a3_2211
	word32 a4_2212
	word32 a5_2213
	word32 s1_2208
	word32 a1_2209
	word32 a2_2210
	word32 ra_306 = snprintf(ra_276, s1_278 + a0_269, s0_100 - a0_269, 0x230C836C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_2208, out a0_299, out a1_2209, out a2_2210, out a3_2211, out a4_2212, out a5_2213, out a7_2214, out s2_1004, out s3_1005, out s4_1006, out s5_2215, out s6_2216, out s7_1009, out s8_2217, out s9_2218, out s10_1002, out s11_2219)
	branch a0_299 < 0<32> l2308EE96
l2308F006:
	branch a0_299 >=u s0_100 l2308EE96
l2308F00A:
	word32 a0_330
	word32 a5_335
	word32 ra_337 = mbedtls_x509_sig_alg_gets(ra_306, s0_100 - a0_299, s2_1004 + 40<i32>, Mem261[s2_1004 + 300<i32>:int32], dwLoc48, dwLoc1C, dwArg00, dwArg28, ra, out s0_100, out a0_330, out a5_335, out s2_1004, out s3_1005, out s4_1006, out s7_1009, out s10_1002)
	branch a0_330 < 0<32> l2308EE96
l2308F02C:
	branch a0_330 >=u s0_100 l2308EE96
l2308F030:
	mbedtls_pk_get_name(s2_1004 + 188<i32>, a5_335)
	word32 a0_362
	word32 a5_367
	word32 s1_370
	word32 s5_376
	word32 s6_377
	word32 ra_369 = mbedtls_x509_key_size_helper(ra_337, fp + -52<i32>, 0x12<32>, dwLoc58, s2, dwLoc0C, dwArg10, dwArg38, dwArg5C, out s1_370, out a0_362, out a5_367, out s2_1004, out s3_1005, out s4_1006, out s5_376, out s6_377, out s7_1009, out s10_1002)
	branch a0_362 != 0<32> l2308EEA2
l2308F048:
	word32 a5_2220
	mbedtls_pk_get_bitlen(s6_377, a5_367, out a5_2220)
	word32 a0_397
	word32 s1_406
	word32 s9_2230
	word32 s11_2231
	word32 s8_2229
	word32 s6_2228
	word32 a5_2225
	word32 a7_2226
	word32 s5_2227
	word32 a4_2224
	word32 a3_2223
	word32 a1_2221
	word32 a2_2222
	word32 ra_1027 = snprintf(ra_369, s1_370 + s5_376, s0_100 - s5_376, 0x230C8388<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_406, out a0_397, out a1_2221, out a2_2222, out a3_2223, out a4_2224, out a5_2225, out a7_2226, out s2_1004, out s3_1005, out s4_1006, out s5_2227, out s6_2228, out s7_1009, out s8_2229, out s9_2230, out s10_1002, out s11_2231)
	branch a0_397 < 0<32> l2308EE96
l2308F06E:
	branch a0_397 >=u s0_100 l2308EE96
l2308F072:
	s0_100 = s0_100 - a0_397
	word32 s1_1017 = s1_406 + a0_397
	branch (Mem261[s2_1004 + 248<i32>:int32] & 256<i32>) == 0<32> l2308F0D2
l2308F080:
	branch Mem261[s2_1004 + 252<i32>:int32] != 0<32> l2308F11E
l2308F11E:
l2308F086:
l2308F08E:
	word32 a0_440
	word32 s1_449
	word32 s11_2253
	word32 s9_2252
	word32 s8_2251
	word32 a2_2244
	word32 a3_2245
	word32 a4_2246
	word32 a5_2247
	word32 a7_2248
	word32 s5_2249
	word32 s6_2250
	word32 a1_2243
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C839C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_449, out a0_440, out a1_2243, out a2_2244, out a3_2245, out a4_2246, out a5_2247, out a7_2248, out s2_1004, out s3_1005, out s4_1006, out s5_2249, out s6_2250, out s7_1009, out s8_2251, out s9_2252, out s10_1002, out s11_2253)
	branch a0_440 < 0<32> l2308EE96
l2308F0A4:
	branch a0_440 >=u s0_100 l2308EE96
l2308F0A8:
	s0_100 = s0_100 - a0_440
	s1_1017 = s1_449 + a0_440
	branch Mem261[s2_1004 + 256<i32>:int32] <= 0<32> l2308F0D2
l2308F0B4:
	word32 a0_471
	word32 s1_480
	word32 s11_2242
	word32 s9_2241
	word32 s8_2240
	word32 a4_2235
	word32 a5_2236
	word32 a7_2237
	word32 s5_2238
	word32 s6_2239
	word32 a2_2233
	word32 a3_2234
	word32 a1_2232
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C83BC<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_480, out a0_471, out a1_2232, out a2_2233, out a3_2234, out a4_2235, out a5_2236, out a7_2237, out s2_1004, out s3_1005, out s4_1006, out s5_2238, out s6_2239, out s7_1009, out s8_2240, out s9_2241, out s10_1002, out s11_2242)
	branch a0_471 < 0<32> l2308EE96
l2308F0CA:
	branch a0_471 >=u s0_100 l2308EE96
l2308F0CE:
	s0_100 = s0_100 - a0_471
	s1_1017 = s1_480 + a0_471
l2308F0D2:
	branch (Mem261[s2_1004 + 248<i32>:int32] & 32<i32>) == 0<32> l2308F14C
l2308F0DC:
	word32 a0_510
	word32 s1_519
	word32 a7_2258
	word32 s5_2259
	word32 s11_2263
	word32 s8_2261
	word32 s9_2262
	word32 s6_2260
	word32 a5_2257
	word32 a3_2256
	word32 a1_2254
	word32 a2_2255
	word32 a4_514
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C83D0<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_519, out a0_510, out a1_2254, out a2_2255, out a3_2256, out a4_514, out a5_2257, out a7_2258, out s2_1004, out s3_1005, out s4_1006, out s5_2259, out s6_2260, out s7_1009, out s8_2261, out s9_2262, out s10_1002, out s11_2263)
	branch a0_510 < 0<32> l2308EE96
l2308F0F2:
	branch a0_510 >=u s0_100 l2308EE96
l2308F0F6:
	s0_100 = s0_100 - a0_510
	s1_1017 = s1_519 + a0_510
	word32 a3_1518 = 0x230C6DBC<32>
	word32 a1_539 = 0<32>
l2308F110:
	word32 a4_545 = a4_514 + a1_539
	branch a4_545 <u s0_100 l2308F128
l2308F128:
	s0_100 = s0_100 - a4_545
	word32 a4_548 = 0<32>
l2308F12C:
	word32 a0_551 = s1_1017 + a4_548
	branch a4_548 != a1_539 l2308F514
l2308F514:
	Mem558[a0_551:byte] = SLICE(CONVERT(Mem555[a3_1518 + a4_548:byte], byte, word32), byte, 0)
	a4_548 = a4_548 + 1<32>
l2308F134:
	a4_514 = 0<32>
l2308F136:
	word32 a5_562 = Mem561[a3_1518 + 4<i32>:word32]
	s1_1017 = a0_551 + a4_514
	branch a4_514 <u a3_1518 l2308F524
l2308F524:
	a3_1518 = CONVERT(Mem561[a3_1518 + a4_514:byte], byte, word32)
	Mem570[s1_1017:byte] = SLICE(a3_1518, byte, 0)
	a4_514 = a4_514 + 1<32>
l2308F140:
	a1_539 = 2<32>
	a3_1518 = 0x230BE808<32>
	branch Mem561[a5_562 + 12<i32>:word32] != 0<32> l2308F110
l2308F148:
	Mem577[s1_1017:byte] = 0<8>
l2308F14C:
	branch Mem582[s2_1004 + 248<i32>:int32] << 0xF<u32> >= 0<32> l2308F2D0
l2308F158:
	word32 a0_606
	word32 s1_615
	word32 s8_2272
	word32 s9_2273
	word32 s11_2274
	word32 s6_2271
	word32 s5_2270
	word32 a7_2269
	word32 a5_2268
	word32 a1_2264
	word32 a2_2265
	word32 a3_2266
	word32 a4_2267
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C83EC<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_615, out a0_606, out a1_2264, out a2_2265, out a3_2266, out a4_2267, out a5_2268, out a7_2269, out s2_1004, out s3_1005, out s4_1006, out s5_2270, out s6_2271, out s7_1009, out s8_2272, out s9_2273, out s10_1002, out s11_2274)
	branch a0_606 < 0<32> l2308EE96
l2308F16E:
	branch a0_606 >=u s0_100 l2308EE96
l2308F172:
	word32 s5_629 = CONVERT(Mem582[s2_1004 + 280<i32>:byte], byte, word32)
	s0_100 = s0_100 - a0_606
	s1_1017 = s1_615 + a0_606
	branch CONVERT(SLICE(s5_629, byte, 0), byte, int32) >= 0<32> l2308F1B0
l2308F18C:
	word32 a0_640
	word32 s1_649
	word32 s11_2284
	word32 s6_2281
	word32 s8_2282
	word32 s9_2283
	word32 a7_2280
	word32 a5_2279
	word32 a1_2275
	word32 a2_2276
	word32 a3_2277
	word32 a4_2278
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8408<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_649, out a0_640, out a1_2275, out a2_2276, out a3_2277, out a4_2278, out a5_2279, out a7_2280, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2281, out s7_1009, out s8_2282, out s9_2283, out s10_1002, out s11_2284)
	branch a0_640 < 0<32> l2308EE96
l2308F1A0:
	branch a0_640 >=u s0_100 l2308EE96
l2308F1A4:
	s0_100 = s0_100 - a0_640
	s1_1017 = s1_649 + a0_640
l2308F1B0:
	branch (s5_629 & 64<i32>) == 0<32> l2308F1DA
l2308F1B6:
	word32 a0_678
	word32 s1_687
	word32 a2_2286
	word32 a3_2287
	word32 s6_2291
	word32 s8_2292
	word32 s9_2293
	word32 s11_2294
	word32 a5_2289
	word32 a7_2290
	word32 a4_2288
	word32 a1_2285
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8418<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_687, out a0_678, out a1_2285, out a2_2286, out a3_2287, out a4_2288, out a5_2289, out a7_2290, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2291, out s7_1009, out s8_2292, out s9_2293, out s10_1002, out s11_2294)
	branch a0_678 < 0<32> l2308EE96
l2308F1CA:
	branch a0_678 >=u s0_100 l2308EE96
l2308F1CE:
	s0_100 = s0_100 - a0_678
	s1_1017 = s1_687 + a0_678
l2308F1DA:
	branch (s5_629 & 32<i32>) == 0<32> l2308F204
l2308F1E0:
	word32 a0_716
	word32 s1_725
	word32 s11_2325
	word32 s9_2324
	word32 a4_2319
	word32 a5_2320
	word32 a7_2321
	word32 s6_2322
	word32 s8_2323
	word32 a2_2317
	word32 a3_2318
	word32 a1_2316
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8428<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_725, out a0_716, out a1_2316, out a2_2317, out a3_2318, out a4_2319, out a5_2320, out a7_2321, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2322, out s7_1009, out s8_2323, out s9_2324, out s10_1002, out s11_2325)
	branch a0_716 < 0<32> l2308EE96
l2308F1F4:
	branch a0_716 >=u s0_100 l2308EE96
l2308F1F8:
	s0_100 = s0_100 - a0_716
	s1_1017 = s1_725 + a0_716
l2308F204:
	branch (s5_629 & 16<i32>) == 0<32> l2308F22E
l2308F20A:
	word32 a0_754
	word32 s1_763
	word32 s11_2345
	word32 s9_2344
	word32 s8_2343
	word32 s6_2342
	word32 a7_2341
	word32 a5_2340
	word32 a2_2337
	word32 a3_2338
	word32 a4_2339
	word32 a1_2336
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8430<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_763, out a0_754, out a1_2336, out a2_2337, out a3_2338, out a4_2339, out a5_2340, out a7_2341, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2342, out s7_1009, out s8_2343, out s9_2344, out s10_1002, out s11_2345)
	branch a0_754 < 0<32> l2308EE96
l2308F21E:
	branch a0_754 >=u s0_100 l2308EE96
l2308F222:
	s0_100 = s0_100 - a0_754
	s1_1017 = s1_763 + a0_754
l2308F22E:
	branch (s5_629 & 8<i32>) == 0<32> l2308F258
l2308F234:
	word32 a0_792
	word32 s1_801
	word32 s11_2365
	word32 s9_2364
	word32 s8_2363
	word32 s6_2362
	word32 a7_2361
	word32 a5_2360
	word32 a4_2359
	word32 a3_2358
	word32 a2_2357
	word32 a1_2356
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8444<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_801, out a0_792, out a1_2356, out a2_2357, out a3_2358, out a4_2359, out a5_2360, out a7_2361, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2362, out s7_1009, out s8_2363, out s9_2364, out s10_1002, out s11_2365)
	branch a0_792 < 0<32> l2308EE96
l2308F248:
	branch a0_792 >=u s0_100 l2308EE96
l2308F24C:
	s0_100 = s0_100 - a0_792
	s1_1017 = s1_801 + a0_792
l2308F258:
	branch (s5_629 & 4<i32>) == 0<32> l2308F282
l2308F25E:
	word32 a0_830
	word32 s1_839
	word32 s11_2385
	word32 s9_2384
	word32 s8_2383
	word32 s6_2382
	word32 a7_2381
	word32 a5_2380
	word32 a4_2379
	word32 a3_2378
	word32 a2_2377
	word32 a1_2376
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8450<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_839, out a0_830, out a1_2376, out a2_2377, out a3_2378, out a4_2379, out a5_2380, out a7_2381, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2382, out s7_1009, out s8_2383, out s9_2384, out s10_1002, out s11_2385)
	branch a0_830 < 0<32> l2308EE96
l2308F272:
	branch a0_830 >=u s0_100 l2308EE96
l2308F276:
	s0_100 = s0_100 - a0_830
	s1_1017 = s1_839 + a0_830
l2308F282:
	branch (s5_629 & 2<i32>) == 0<32> l2308F2AC
l2308F288:
	word32 a0_868
	word32 s1_877
	word32 s11_2405
	word32 s9_2404
	word32 s8_2403
	word32 s6_2402
	word32 a7_2401
	word32 a5_2400
	word32 a4_2399
	word32 a3_2398
	word32 a2_2397
	word32 a1_2396
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C845C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_877, out a0_868, out a1_2396, out a2_2397, out a3_2398, out a4_2399, out a5_2400, out a7_2401, out s2_1004, out s3_1005, out s4_1006, out s5_629, out s6_2402, out s7_1009, out s8_2403, out s9_2404, out s10_1002, out s11_2405)
	branch a0_868 < 0<32> l2308EE96
l2308F29C:
	branch a0_868 >=u s0_100 l2308EE96
l2308F2A0:
	s0_100 = s0_100 - a0_868
	s1_1017 = s1_877 + a0_868
l2308F2AC:
	branch (s5_629 & 1<i32>) == 0<32> l2308F2D0
l2308F2B4:
	word32 a0_906
	word32 s1_915
	word32 s11_2466
	word32 s9_2465
	word32 s8_2464
	word32 s6_2463
	word32 s5_2462
	word32 a7_2461
	word32 a5_2460
	word32 a4_2459
	word32 a3_2458
	word32 a2_2457
	word32 a1_2456
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8468<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_915, out a0_906, out a1_2456, out a2_2457, out a3_2458, out a4_2459, out a5_2460, out a7_2461, out s2_1004, out s3_1005, out s4_1006, out s5_2462, out s6_2463, out s7_1009, out s8_2464, out s9_2465, out s10_1002, out s11_2466)
	branch a0_906 < 0<32> l2308EE96
l2308F2C8:
	branch a0_906 >=u s0_100 l2308EE96
l2308F2CC:
	s0_100 = s0_100 - a0_906
	s1_1017 = s1_915 + a0_906
l2308F2D0:
	branch (Mem582[s2_1004 + 248<i32>:int32] & 4<32>) == 0<32> l2308F478
l2308F2DA:
	word32 a0_959
	word32 s1_968
	word32 a7_2300
	word32 s5_2301
	word32 s6_2302
	word32 s8_2303
	word32 s9_2304
	word32 s11_2305
	word32 a5_2299
	word32 a4_2298
	word32 a3_2297
	word32 a2_2296
	word32 a1_2295
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C847C<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_968, out a0_959, out a1_2295, out a2_2296, out a3_2297, out a4_2298, out a5_2299, out a7_2300, out s2_1004, out s3_1005, out s4_1006, out s5_2301, out s6_2302, out s7_1009, out s8_2303, out s9_2304, out s10_1002, out s11_2305)
	branch a0_959 < 0<32> l2308EE96
l2308F2F0:
	branch a0_959 >=u s0_100 l2308EE96
l2308F2F4:
	word32 s5_1007 = Mem582[s2_1004 + 260<i32>:int32]
	s0_100 = s0_100 - a0_959
	s1_1017 = s1_968 + a0_959
	branch (s5_1007 & 128<i32>) == 0<32> l2308F32E
l2308F30A:
	word32 a0_992
	word32 s1_1001
	word32 s9_2314
	word32 s11_2315
	word32 s8_2313
	word32 s6_2312
	word32 a4_2309
	word32 a5_2310
	word32 a7_2311
	word32 a3_2308
	word32 a2_2307
	word32 a1_2306
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8498<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1001, out a0_992, out a1_2306, out a2_2307, out a3_2308, out a4_2309, out a5_2310, out a7_2311, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2312, out s7_1009, out s8_2313, out s9_2314, out s10_1002, out s11_2315)
	branch a0_992 < 0<32> l2308EE96
l2308F31E:
	branch a0_992 >=u s0_100 l2308EE96
l2308F322:
	s0_100 = s0_100 - a0_992
	s1_1017 = s1_1001 + a0_992
l2308F32E:
	branch (s5_1007 & 64<i32>) == 0<32> l2308F358
l2308F334:
	word32 a0_1030
	word32 s1_1039
	word32 s11_2335
	word32 a3_2328
	word32 a4_2329
	word32 a5_2330
	word32 a7_2331
	word32 s6_2332
	word32 s8_2333
	word32 s9_2334
	word32 a2_2327
	word32 a1_2326
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C84AC<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1039, out a0_1030, out a1_2326, out a2_2327, out a3_2328, out a4_2329, out a5_2330, out a7_2331, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2332, out s7_1009, out s8_2333, out s9_2334, out s10_1002, out s11_2335)
	branch a0_1030 < 0<32> l2308EE96
l2308F348:
	branch a0_1030 >=u s0_100 l2308EE96
l2308F34C:
	s0_100 = s0_100 - a0_1030
	s1_1017 = s1_1039 + a0_1030
l2308F358:
	branch (s5_1007 & 32<i32>) == 0<32> l2308F382
l2308F35E:
	word32 a0_1068
	word32 s1_1077
	word32 s11_2355
	word32 s9_2354
	word32 s8_2353
	word32 s6_2352
	word32 a7_2351
	word32 a5_2350
	word32 a4_2349
	word32 a3_2348
	word32 a2_2347
	word32 a1_2346
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C84C0<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1077, out a0_1068, out a1_2346, out a2_2347, out a3_2348, out a4_2349, out a5_2350, out a7_2351, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2352, out s7_1009, out s8_2353, out s9_2354, out s10_1002, out s11_2355)
	branch a0_1068 < 0<32> l2308EE96
l2308F372:
	branch a0_1068 >=u s0_100 l2308EE96
l2308F376:
	s0_100 = s0_100 - a0_1068
	s1_1017 = s1_1077 + a0_1068
l2308F382:
	branch (s5_1007 & 16<i32>) == 0<32> l2308F3AC
l2308F388:
	word32 a0_1106
	word32 s1_1115
	word32 s11_2375
	word32 s9_2374
	word32 s8_2373
	word32 s6_2372
	word32 a7_2371
	word32 a5_2370
	word32 a4_2369
	word32 a3_2368
	word32 a2_2367
	word32 a1_2366
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C84D4<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1115, out a0_1106, out a1_2366, out a2_2367, out a3_2368, out a4_2369, out a5_2370, out a7_2371, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2372, out s7_1009, out s8_2373, out s9_2374, out s10_1002, out s11_2375)
	branch a0_1106 < 0<32> l2308EE96
l2308F39C:
	branch a0_1106 >=u s0_100 l2308EE96
l2308F3A0:
	s0_100 = s0_100 - a0_1106
	s1_1017 = s1_1115 + a0_1106
l2308F3AC:
	branch (s5_1007 & 8<i32>) == 0<32> l2308F3D6
l2308F3B2:
	word32 a0_1144
	word32 s1_1153
	word32 s11_2395
	word32 s9_2394
	word32 s8_2393
	word32 s6_2392
	word32 a7_2391
	word32 a5_2390
	word32 a4_2389
	word32 a3_2388
	word32 a2_2387
	word32 a1_2386
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C84E8<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1153, out a0_1144, out a1_2386, out a2_2387, out a3_2388, out a4_2389, out a5_2390, out a7_2391, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2392, out s7_1009, out s8_2393, out s9_2394, out s10_1002, out s11_2395)
	branch a0_1144 < 0<32> l2308EE96
l2308F3C6:
	branch a0_1144 >=u s0_100 l2308EE96
l2308F3CA:
	s0_100 = s0_100 - a0_1144
	s1_1017 = s1_1153 + a0_1144
l2308F3D6:
	branch (s5_1007 & 4<i32>) == 0<32> l2308F400
l2308F3DC:
	word32 a0_1182
	word32 s1_1191
	word32 s11_2445
	word32 s9_2444
	word32 s8_2443
	word32 s6_2442
	word32 a7_2441
	word32 a5_2440
	word32 a4_2439
	word32 a3_2438
	word32 a2_2437
	word32 a1_2436
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C84F8<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1191, out a0_1182, out a1_2436, out a2_2437, out a3_2438, out a4_2439, out a5_2440, out a7_2441, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2442, out s7_1009, out s8_2443, out s9_2444, out s10_1002, out s11_2445)
	branch a0_1182 < 0<32> l2308EE96
l2308F3F0:
	branch a0_1182 >=u s0_100 l2308EE96
l2308F3F4:
	s0_100 = s0_100 - a0_1182
	s1_1017 = s1_1191 + a0_1182
l2308F400:
	branch (s5_1007 & 2<i32>) == 0<32> l2308F42A
l2308F406:
	word32 a0_1220
	word32 s1_1229
	word32 s11_2455
	word32 s9_2454
	word32 s8_2453
	word32 s6_2452
	word32 a7_2451
	word32 a5_2450
	word32 a4_2449
	word32 a3_2448
	word32 a2_2447
	word32 a1_2446
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8508<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1229, out a0_1220, out a1_2446, out a2_2447, out a3_2448, out a4_2449, out a5_2450, out a7_2451, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2452, out s7_1009, out s8_2453, out s9_2454, out s10_1002, out s11_2455)
	branch a0_1220 < 0<32> l2308EE96
l2308F41A:
	branch a0_1220 >=u s0_100 l2308EE96
l2308F41E:
	s0_100 = s0_100 - a0_1220
	s1_1017 = s1_1229 + a0_1220
l2308F42A:
	branch (s5_1007 & 1<i32>) == 0<32> l2308F454
l2308F430:
	word32 a7_2472
	word32 a4_2470
	word32 a3_2469
	word32 s9_2475
	word32 s11_2476
	word32 s8_2474
	word32 s6_2473
	word32 a0_1258
	word32 s1_1267
	word32 a5_2471
	word32 a2_2468
	word32 a1_2467
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8514<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1267, out a0_1258, out a1_2467, out a2_2468, out a3_2469, out a4_2470, out a5_2471, out a7_2472, out s2_1004, out s3_1005, out s4_1006, out s5_1007, out s6_2473, out s7_1009, out s8_2474, out s9_2475, out s10_1002, out s11_2476)
	branch a0_1258 < 0<32> l2308EE96
l2308F444:
	branch a0_1258 >=u s0_100 l2308EE96
l2308F448:
	s0_100 = s0_100 - a0_1258
	s1_1017 = s1_1267 + a0_1258
l2308F454:
	branch s5_1007 << 0x10<u32> >= 0<32> l2308F478
l2308F45C:
	word32 a3_2479
	word32 a2_2478
	word32 a4_2480
	word32 s6_2484
	word32 a1_2477
	word32 s5_2483
	word32 s11_2487
	word32 a7_2482
	word32 a5_2481
	word32 s9_2486
	word32 s8_2485
	word32 a0_1296
	word32 s1_1305
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8524<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1305, out a0_1296, out a1_2477, out a2_2478, out a3_2479, out a4_2480, out a5_2481, out a7_2482, out s2_1004, out s3_1005, out s4_1006, out s5_2483, out s6_2484, out s7_1009, out s8_2485, out s9_2486, out s10_1002, out s11_2487)
	branch a0_1296 < 0<32> l2308EE96
l2308F470:
	branch a0_1296 >=u s0_100 l2308EE96
l2308F474:
	s0_100 = s0_100 - a0_1296
	s1_1017 = s1_1305 + a0_1296
l2308F478:
	branch Mem582[s2_1004 + 248<i32>:int32] << 0x14<u32> >= 0<32> l2308F4F6
l2308F484:
	word32 a0_1351
	word32 s11_2427
	word32 s9_2426
	word32 s8_2425
	word32 s6_2424
	word32 s5_2423
	word32 a7_2422
	word32 a4_2421
	word32 a3_2420
	word32 a1_2419
	word32 s1_2418
	word32 a5_1356
	word32 a2_1353
	ra_1027 = snprintf(ra_1027, s1_1017, s0_100, 0x230C8534<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_2418, out a0_1351, out a1_2419, out a2_1353, out a3_2420, out a4_2421, out a5_1356, out a7_2422, out s2_1004, out s3_1005, out s4_1006, out s5_2423, out s6_2424, out s7_1009, out s8_2425, out s9_2426, out s10_1002, out s11_2427)
	branch a0_1351 < 0<32> l2308EE96
l2308F49A:
	branch a0_1351 >=u s0_100 l2308EE96
l2308F49E:
	word32 s2_1379 = s2_1004 + 264<i32>
	word32 s6_1382 = 0x230C0000<32>
l2308F4C2:
	word32 a0_1392
	word32 s1_1398 = mbedtls_oid_get_extended_key_usage(s2_1379, fp + -56<i32>, a2_1353, a5_1356, dwLoc28, out a0_1392)
	branch a0_1392 == 0<32> l2308F4D2
l2308F4D0:
l2308F4D2:
	word32 a0_1415
	word32 s1_1424
	word32 s11_2435
	word32 s9_2434
	word32 s8_2433
	word32 s5_2432
	word32 a7_2431
	word32 a4_2430
	word32 a3_2429
	word32 a1_2428
	ra_1027 = snprintf(ra_1027, s1_1398, dwArg0174, s6_1382 + -1708<i32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_1424, out a0_1415, out a1_2428, out a2_1353, out a3_2429, out a4_2430, out a5_1356, out a7_2431, out s2_1004, out s3_1005, out s4_1006, out s5_2432, out s6_1382, out s7_1009, out s8_2433, out s9_2434, out s10_1002, out s11_2435)
	branch a0_1415 < 0<32> l2308EE96
l2308F4E4:
	branch a0_1415 >=u s0_100 l2308EE96
l2308F4E8:
	s2_1379 = Mem1405[s2_1004 + 12<i32>:int32]
	s0_100 = s0_100 - a0_1415
	s1_1017 = s1_1424 + a0_1415
	branch s2_1379 != 0<32> l2308F4C2
l2308F4F6:
	word32 a0_1451
	word32 s11_2417
	word32 s9_2416
	word32 s8_2415
	word32 s6_2414
	word32 s5_2413
	word32 a7_2412
	word32 a5_2411
	word32 a4_2410
	word32 a3_2409
	word32 a2_2408
	word32 a1_2407
	word32 s1_2406
	snprintf(ra_1027, s1_1017, s0_100, 0x230C6900<32>, dwLoc48, dwLoc28, dwArg04, a5_254, dwArg24, s1, dwArg6C, out s0_100, out s1_2406, out a0_1451, out a1_2407, out a2_2408, out a3_2409, out a4_2410, out a5_2411, out a7_2412, out s2_1004, out s3_1005, out s4_1006, out s5_2413, out s6_2414, out s7_1009, out s8_2415, out s9_2416, out s10_1002, out s11_2417)
	branch a0_1451 < 0<32> l2308EE96
l2308F50A:
	branch a0_1451 >=u s0_100 l2308EE96
l2308F50E:
l2308F118:
	Mem1477[s1_1017:byte] = 0<8>
l2308EE86:
	word32 a0_1480
	word32 a2_2144
	word32 a1_2143
	word32 s5_2149
	word32 a4_2146
	word32 a3_2145
	word32 s1_2142
	word32 a7_2148
	word32 a5_2147
	word32 s8_2151
	word32 s9_2152
	word32 s6_2150
	word32 s11_2153
	snprintf(ra, a0, a1, 0x230C8270<32>, dwLoc48, dwLoc28, dwArg04, dwArg20, dwArg24, s1, dwArg6C, out s0_100, out s1_2142, out a0_1480, out a1_2143, out a2_2144, out a3_2145, out a4_2146, out a5_2147, out a7_2148, out s2_1004, out s3_1005, out s4_1006, out s5_2149, out s6_2150, out s7_1009, out s8_2151, out s9_2152, out s10_1002, out s11_2153)
	branch a0_1480 >= 0<32> l2308EE9E
l2308EE9E:
	branch a0_1480 >=u s4_1006 l2308EE96
l2308EE96:
l2308EEA2:
	s0Out = s0_100
	s1Out = dwArg28
	s2Out = s2_1004
	s3Out = s3_1005
	s4Out = s4_1006
	s5Out = s4
	s7Out = s7_1009
	s10Out = s10_1002
	return dwArg68
mbedtls_x509_crt_info_exit:


word32 mbedtls_x509_crt_check_key_usage(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_check_cert_usage
//      x509_crt_check_parent
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
mbedtls_x509_crt_check_key_usage_entry:
l2308F534:
	word32 a5_5 = Mem0[a0 + 248<i32>:int32]
	word32 a5_18 = a5_5 & 4<32>
	branch (a5_5 & 4<32>) == 0<32> l2308F566
l2308F53C:
	a4 = Mem0[a0 + 260<i32>:int32]
	a3 = a1 & 0xF7FFFFFE<32> & a4
	branch (a1 & 0xF7FFFFFE<32>) != a3 l2308F560
l2308F54E:
	a3 = a1 & 0x8000001<32>
	a5_18 = 0<32>
	branch (a1 & 0x8000001<32>) == ((a1 | a4) & 0x8000001<32>) l2308F566
l2308F560:
	a5_18 = 0xFDFFF800<32>
l2308F566:
	a3Out = a3
	a4Out = a4
	a5Out = a5_18
	return a5_18
mbedtls_x509_crt_check_key_usage_exit:


word32 x509_crt_check_parent(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_top.isra.7
//      x509_crt_verify_child
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t1 t3 tp
// Preserved: sp
x509_crt_check_parent_entry:
l2308F56A:
	word32 s0_44
	word32 a0_26
	word32 a1_27
	word32 a6_32
	word32 a7_33
	word32 s2_36
	word32 s4_38
	word32 s8_39
	word32 a2_175
	word32 a5_132
	word32 a4_128
	word32 a3_124
	word32 s3_148
	word32 s1_142 = x509_name_cmp(a0 + 76<i32>, a1 + 108<i32>, a2, a4, a5, out a0_26, out a1_27, out a2_175, out a3_124, out a4_128, out a5_132, out a6_32, out a7_33, out s2_36, out s3_148, out s4_38, out s8_39)
	branch a0_26 == 0<32> l2308F5A2
l2308F5A2:
	branch a2 != 0<32> l2308F5BC
l2308F5BC:
	s0_44 = a0_26
	s3_148 = Mem23[s1_142 + 24<i32>:int32]
	branch a3_124 != 0<32> l2308F5CC
l2308F5CC:
	word32 a2_46 = Mem23[s2_36 + 4<i32>:int32]
	s1_142 = Mem23[a5_132 + 4<i32>:word32]
	branch a2_46 != a5_132 l2308F5C4
l2308F5D6:
	s1_142 = Mem23[a1_27 + 8<i32>:word32]
	word32 a1_176
	word32 a2_177
	branch memcmp(Mem23[s2_36 + 8<i32>:int32], a1_27, a2_46, out a1_176, out a2_177, out a3_124, out a4_128, out a5_132) != 0<32> l2308F5C4
l2308F5E2:
l2308F5C4:
	a5_132 = 2<32>
	branch s3_148 <= 2<32> l2308F592
l2308F5CA:
l2308F5A4:
	a5_132 = Mem23[s1_142 + 252<i32>:int32]
	branch a5_132 == 0<32> l2308F590
l2308F5AA:
	s0_44 = 0<32> - CONVERT(mbedtls_x509_crt_check_key_usage(s1_142, 4<32>, out a3_124, out a4_128, out a5_132) != 0<32>, bool, word32)
l2308F590:
	s0_44 = 0xFFFFFFFF<32>
l2308F592:
	0<32> = dwArg0128
	s1Out = s1_142
	a0Out = s0_44
	a2Out = dwArg0100
	a3Out = a3_124
	a4Out = a4_128
	a5Out = a5_132
	a6Out = a6_32
	a7Out = a7_33
	s2Out = s2_36
	s3Out = s3_148
	s4Out = s4_38
	s8Out = s8_39
	return dwArgE4
x509_crt_check_parent_exit:


word32 x509_crt_verify_top.isra.7(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 s10, word32 s11, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg64, word32 dwArgA8, word32 dwArgB8, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_child
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
x509_crt_verify_top.isra.7_entry:
l2308F5E4:
	word32 s0_106 = a0
	word32 s2_129 = a1
	word32 s6_226 = a2
	word32 s4_151 = a3
	word32 s8_152 = a4
	word32 s5_225 = a6
	word32 s7_227 = a7
	branch mbedtls_x509_time_is_past() == 0<32> l2308F624
l2308F61C:
	Mem51[a5 | 1<i32>:word32] = Mem47[a5:word32]
	a5 = a5 | 1<i32>
l2308F624:
	branch mbedtls_x509_time_is_future() == 0<32> l2308F636
l2308F62E:
	Mem59[a5 | 512<i32>:word32] = Mem56[a5:word32]
l2308F636:
	word32 a5_69 = 1<32> << CONVERT(Mem61[a0 + 296<i32>:byte], byte, word32) + -1<i32> & Mem61[a2:int32]
	branch a5_69 != 0<32> l2308F654
l2308F64C:
	Mem73[a5_69 | 0x4000000<32>:word32] = Mem61[a5_69:word32]
l2308F654:
	word32 a4_136 = Mem75[a2 + 4<i32>:int32]
	word32 a5_82 = 1<32> << CONVERT(Mem75[a0 + 297<i32>:byte], byte, word32) + -1<i32> & a4_136
	branch a5_82 != 0<32> l2308F672
l2308F66A:
	Mem86[a5_82 | 0x8000000<32>:word32] = Mem75[a5_82:word32]
	a4_136 = 0x8000000<32>
	a5_82 = a5_82 | 0x8000000<32>
l2308F672:
	word32 a0_441
	word32 s1_148 = Mem88[a5_82:word32]
	Mem91[a5_82 | 8<i32>:word32] = s1_148
	word32 a5_118
	word32 a0_94 = mbedtls_md_info_from_type(CONVERT(Mem91[a0 + 296<i32>:byte], byte, word32), out a5_118)
	word32 s9_451 = a0_94
	branch a0_94 == 0<32> l2308F6A2
l2308F686:
	s0_106 = Mem91[a1 + 20<i32>:word32]
	s3 = 0<32>
	word32 a1_1160
	ra = mbedtls_md(ra, a0_94, a1, a2, fp + -96<i32>, out a1_1160, out a5_118)
	s10 = CONVERT(a3 <u 1<i32>, bool, word32)
	s11 = a3 + 1<i32>
l2308F69A:
	branch s2_129 != 0<32> l2308F6A8
l2308F6A8:
	word32 a2_141
	word32 a3_142
	word32 a0_156
	s0_106 = x509_crt_check_parent(s0_106, s2_129, 1<32>, a4_136, a5_118, dwArgA8, out s1_148, out a0_156, out a2_141, out a3_142, out a4_136, out a5_118, out a6, out a7, out s2_129, out s3, out s4_151, out s8_152)
	branch a0_156 != 0<32> l2308F72C
l2308F6B6:
	s0_106 = Mem139[a3_142 + 68<i32>:word32]
	word32 a5_160 = s11
	branch a3_142 != Mem139[s2_129 + 68<i32>:int32] l2308F6D6
l2308F6C2:
	s0_106 = Mem139[a0_156 + 72<i32>:word32]
	word32 a1_1161
	word32 a2_1162
	word32 a3_1163
	word32 a4_1164
	branch memcmp(a0_156, Mem139[s2_129 + 72<i32>:int32], a2_141, out a1_1161, out a2_1162, out a3_1163, out a4_1164, out a5_160) != 0<32> l2308F6D6
l2308F6D4:
	a5_160 = s4_151
l2308F6D6:
	a4_136 = Mem174[s2_129 + 256<i32>:int32]
	branch a4_136 <= 0<32> l2308F6E6
l2308F6DE:
	a5_118 = a5_160 - s8_152
	branch a4_136 < a5_118 l2308F72C
l2308F6E6:
	word32 a0_215
	ra = mbedtls_pk_verify_ext(ra, CONVERT(Mem174[s0_106 + 297<i32>:byte], byte, word32), Mem174[s0_106 + 300<i32>:int32], s2_129 + 188<i32>, CONVERT(Mem174[s0_106 + 296<i32>:byte], byte, word32), mbedtls_md_get_size(a0_94), Mem193[s0_106 + 292<i32>:int32], Mem193[s0_106 + 288<i32>:int32], s10, s11, mstatus, dwLoc80, dwLoc3C, s11, dwArg44, dwArgB8, dwArg0118, out s0_106, out s1_148, out a0_215, out a4_136, out a5_118, out a6, out a7, out s2_129, out s3, out s4_151, out s5_225, out s6_226, out s7_227, out s8_152, out s10, out s11, out mstatus)
	branch a0_215 != 0<32> l2308F72C
l2308F71C:
	branch mbedtls_x509_time_is_past() == 0<32> l2308F732
l2308F732:
	branch mbedtls_x509_time_is_future() != 0<32> l2308F726
l2308F73C:
	s3 = s2_129
l2308F726:
	branch s3 != 0<32> l2308F72C
l2308F72A:
	s3 = s2_129
l2308F72C:
	s2_129 = Mem252[s2_129 + 304<i32>:int32]
l2308F69E:
	branch s3 != 0<32> l2308F73E
l2308F73E:
	s1_148 = Mem259[a5_118:word32]
	Mem271[a5_118 & 0xFFFFFFF7<32>:word32] = s1_148
	word32 a2_275
	word32 a5_277
	word32 a0_274 = x509_profile_check_key(CONVERT(Mem271[s0_106 + 297<i32>:byte], byte, word32), s3 + 188<i32>, out a2_275, out a4_136, out a5_277)
	branch a0_274 == 0<32> l2308F75C
l2308F754:
	s1_148 = Mem271[a5_277:word32]
	Mem283[a5_277 | 0x10000000<32>:word32] = s1_148
	a4_136 = 0x10000000<32>
l2308F75C:
	s0_106 = Mem285[a4_136 + 68<i32>:word32]
	a5_118 = Mem285[s3 + 68<i32>:int32]
	branch a4_136 != a5_118 l2308F774
l2308F766:
	s0_106 = Mem285[a0_274 + 72<i32>:word32]
	word32 a2_1166
	word32 a3_1167
	word32 a1_1165
	branch memcmp(a0_274, Mem285[s3 + 72<i32>:int32], a2_275, out a1_1165, out a2_1166, out a3_1167, out a4_136, out a5_118) == 0<32> l2308F6A2
l2308F774:
	branch mbedtls_x509_time_is_past() == 0<32> l2308F786
l2308F77E:
	a5_118 = a5_118 | 1<i32>
l2308F786:
	branch mbedtls_x509_time_is_future() == 0<32> l2308F798
l2308F790:
	a5_118 = a5_118 | 512<i32>
l2308F798:
	branch s5_225 != 0<32> l2308F7C4
l2308F7C4:
	word32 tp_461
	word32 t1_465
	word32 t5_467
	word32 t6_468
	call s5_225 (retsize: 0;)
		uses: a0:s7_351,a1:s3_261,a2:s4_339 + 1<i32>,a3:fp + -100<i32>,a4:a4_411,a5:a5_412,a6:a6_417,a7:a7_430,mstatus:mstatus_466,ra:ra_393,s0:s0_363,s1:s1_367,s10:s10_403,s11:s11_408,s2:s2_372,s3:s3_261,s4:s4_339,s5:s5_324,s6:s6_263,s7:s7_351,s8:s8_381,s9:a0_94,Stack +0000:dwLoc80,Stack +0044:dwLoc3C,Stack +0064:dwLoc1C,Stack +00C0:dwArg40,Stack +00C4:dwArg44,Stack +00E4:dwArg64,Stack +0128:dwArgA8,Stack +0138:dwArgB8,Stack +0198:dwArg0118,t1:t1_465,t5:t5_467,t6:t6_468,tp:tp_461
		defs: a0:a0_441,a4:a4_457,a5:a5_458,a6:a6_459,a7:a7_460,mstatus:mstatus_466,ra:ra_449,s0:s0_440,s1:s1_442,s10:s10_452,s11:s11_453,s2:s2_443,s3:s3_450,s4:s4_444,s5:s5_445,s6:s6_446,s7:s7_447,s8:s8_448,s9:s9_451,t1:t1_465,t5:t5_467,t6:t6_468,tp:tp_461
	branch a0_441 != 0<32> l2308F7A6
l2308F6A2:
	branch s5_225 != 0<32> l2308F7D2
l2308F7D2:
	word32 tp_552
	word32 t1_556
	word32 t5_558
	word32 t6_559
	call s5_225 (retsize: 0;)
		uses: a0:s7_483,a1:s0_480,a2:s4_477,a3:s1_470,a4:a4_519,a5:a5_522,a6:a6_524,a7:a7_526,mstatus:mstatus_557,ra:ra_497,s0:s0_480,s1:s1_470,s10:s10_507,s11:s11_513,s2:s2_487,s3:s3_499,s4:s4_477,s5:s5_486,s6:s6_493,s7:s7_483,s8:s8_495,s9:s9_505,Stack +0040:dwArg40,Stack +0044:dwArg44,Stack +0064:dwArg64,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +0118:dwArg0118,Stack +FFFFFF80:dwLoc80,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFE4:dwLoc1C,t1:t1_556,t5:t5_558,t6:t6_559,tp:tp_552
		defs: a0:a0_532,a4:a4_548,a5:a5_549,a6:a6_550,mstatus:mstatus_557,s0:s0_531,s10:s10_543,s11:s11_544,s2:s2_534,s3:s3_541,s4:s4_535,s6:s6_537,s7:s7_538,s8:s8_539,t1:t1_556,t5:t5_558,t6:t6_559,tp:tp_552
	branch a0_441 == 0<32> l2308F79C
l2308F7DE:
l2308F6A6:
l2308F79C:
	a5_118 = a5_118 | a4_136
	Mem571[a5_118:word32] = Mem561[a5_118:word32]
	a0_441 = 0<32>
l2308F7A6:
	s0Out = s0_106
	s1Out = dwArg0118
	a0Out = a0_441
	a4Out = a4_136
	a5Out = a5_118
	a6Out = a6
	a7Out = dwLoc34
	s2Out = s2_129
	s3Out = s3
	s4Out = s4_151
	s5Out = s8
	s6Out = s6_226
	s7Out = s7_227
	s8Out = s8_152
	s9Out = dwLoc74
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return dwArg0158
x509_crt_verify_top.isra.7_exit:


word32 x509_crt_verify_child(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s2, word32 s5, word32 s7, word32 s8, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg58, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x509_crt_verify_child
//      mbedtls_x509_crt_verify_with_profile
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s5:[0..31] s7:[0..31] s8:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0058:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
x509_crt_verify_child_entry:
l2308F7E0:
	word32 s0_375
	word32 a5_393
	word32 a6_394
	word32 a2_125
	word32 sp_3 = fp + -144<i32>
	word32 s1_32 = a0
	word32 s3_146 = a1
	word32 s10_235 = a3
	word32 s4_222 = a6
	word32 s2_220 = dwArg58
	word32 s6_224 = dwLoc84
	a2_125 = a2
	branch a5 == 0<32> l2308F856
l2308F814:
	word32 a0_49
	word32 a3_905
	word32 a4_906
	word32 a5_907
	word32 a7_908
	s1_32 = x509_name_cmp(a0 + 76<i32>, a0 + 108<i32>, a2, a4, a5, out a0_49, out a1, out a2_125, out a3_905, out a4_906, out a5_907, out a6_394, out a7_908, out s2_220, out s3_146, out s4_222, out s8)
	branch a0_49 != 0<32> l2308F824
l2308F822:
	s4_222 = s4_222 + 1<32>
l2308F824:
	a5 = 8<32>
	branch s2_220 != 8<32> l2308F856
l2308F856:
	branch mbedtls_x509_time_is_past() == 0<32> l2308F868
l2308F860:
	a5 = a5 | 1<i32>
	Mem77[a5:word32] = Mem30[a5:word32]
l2308F868:
	branch mbedtls_x509_time_is_future() == 0<32> l2308F87A
l2308F872:
	Mem85[a5 | 512<i32>:word32] = Mem82[a5:word32]
l2308F87A:
	word32 a5_97 = 1<32> << CONVERT(Mem87[s1_32 + 296<i32>:byte], byte, word32) + -1<i32> & Mem87[dwLoc84:int32]
	branch a5_97 != 0<32> l2308F898
l2308F890:
	Mem101[a5_97 | 0x4000000<32>:word32] = Mem87[a5_97:word32]
l2308F898:
	word32 a4_109 = Mem103[dwLoc84 + 4<i32>:int32]
	word32 a5_110 = 1<32> << CONVERT(Mem103[s1_32 + 297<i32>:byte], byte, word32) + -1<i32> & a4_109
	branch a5_110 != 0<32> l2308F8B6
l2308F8AE:
	Mem114[a5_110 | 0x8000000<32>:word32] = Mem103[a5_110:word32]
	a4_109 = 0x8000000<32>
l2308F8B6:
	word32 ra_232
	word32 a5_119
	word32 a0_118 = mbedtls_md_info_from_type(CONVERT(Mem116[s1_32 + 296<i32>:byte], byte, word32), out a5_119)
	ra_232 = ra
	branch a0_118 != 0<32> l2308F8CC
l2308F8CC:
	word32 s1_134 = Mem116[a1 + 20<i32>:word32]
	word32 a5_910
	word32 a1_909
	word32 ra_160 = mbedtls_md(ra, a0_118, a1, a2_125, fp + -96<i32>, out a1_909, out a5_910)
	word32 s5_148 = s3_146 + 188<i32>
	word32 a5_168
	word32 a2_911
	word32 a4_912
	branch x509_profile_check_key(CONVERT(Mem116[s1_134 + 297<i32>:byte], byte, word32), s5_148, out a2_911, out a4_912, out a5_168) == 0<32> l2308F8F0
l2308F8E8:
	Mem174[a5_168 | 0x10000000<32>:word32] = Mem116[a5_168:word32]
l2308F8F0:
	word32 a1_178 = Mem176[s1_134 + 300<i32>:int32]
	dwLoc84 = a1_178
	word32 a0_213
	word32 s1_914
	word32 a6_915
	word32 a7_916
	word32 s5_917
	word32 s11_918
	word32 s0_913
	ra_232 = mbedtls_pk_verify_ext(ra_160, CONVERT(Mem176[s1_134 + 297<i32>:byte], byte, word32), a1_178, s5_148, CONVERT(Mem176[s1_134 + 296<i32>:byte], byte, word32), mbedtls_md_get_size(a0_118), Mem185[s1_134 + 292<i32>:int32], Mem185[s1_134 + 288<i32>:int32], a3, a0_118, mstatus, dwLoc90, s0, dwArg14, ra, dwArgA8, dwArg0108, out s0_913, out s1_914, out a0_213, out a4_109, out a5_119, out a6_915, out a7_916, out s2_220, out s3_146, out s4_222, out s5_917, out s6_224, out s7, out s8, out s10_235, out s11_918, out mstatus)
	branch a0_213 != 0<32> l2308F8C2
l2308F8C2:
	a5_119 = a5_119 | 8<i32>
	Mem245[a5_119:word32] = Mem242[a5_119:word32]
l2308F924:
	word32 s5_255 = a2
	word32 s11_263 = CONVERT(s2_220 <u 1<i32>, bool, word32)
l2308F92A:
	word32 a4_392
	word32 a7_395
	word32 s5_386
	word32 ra_385
	word32 s9_383
	word32 s1_376
	word32 a0_388
	word32 a7_292
	word32 a4_296
	word32 a3_297
	word32 a1_300
	branch s5_255 != 0<32> l2308F940
l2308F940:
	word32 a0_291
	word32 a2_920
	word32 a3_921
	word32 a6_922
	word32 a7_923
	word32 s1_919
	x509_crt_check_parent(s3_146, s5_255, 0<32>, a4_109, a5_119, dwArg98, out s1_919, out a0_291, out a2_920, out a3_921, out a4_109, out a5_119, out a6_922, out a7_923, out s2_220, out s3_146, out s4_222, out s8)
	branch a0_291 == 0<32> l2308F9CE
l2308F9CE:
	a7_292 = s8
	a4_296 = s4_222
	a3_297 = s2_220 + 1<i32>
	a1_300 = s5_255
l2308F94E:
	s5_255 = Mem575[s5_255 + 304<i32>:int32]
l2308F92E:
	word32 s5_304 = Mem575[s3_146 + 304<i32>:int32]
	word32 a4_305 = CONVERT(s2_220 <u 1<i32>, bool, word32)
	s11_263 = s2_220 + 2<i32> - s4_222
l2308F964:
	branch s5_304 != 0<32> l2308F954
l2308F954:
	word32 a5_318 = Mem317[s5_304 + 256<i32>:int32]
	branch a5_318 <= 0<32> l2308F980
l2308F95C:
	branch a5_318 >= s11_263 l2308F980
l2308F980:
	word32 a0_349
	word32 a5_927
	word32 a6_928
	word32 a7_929
	word32 s4_930
	word32 s1_924
	word32 a2_925
	word32 a3_926
	word32 s0_340 = x509_crt_check_parent(s3_146, s5_304, 0<32>, a4_305, a5_318, dwArg98, out s1_924, out a0_349, out a2_925, out a3_926, out a4_305, out a5_927, out a6_928, out a7_929, out s2_220, out s3_146, out s4_930, out s8)
	s4_222 = ra
	branch a0_349 != 0<32> l2308F960
l2308F992:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg20 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg88 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg264 = <invalid>
	dwLoc90 = s7
	ra_385 = x509_crt_verify_child(ra_232, s0_340, s3_146, s5_304, a2, s10_235, s6_224, s2_220 + 1<i32>, ra, s2_220, s5_304, s7, s8, mstatus, stackArg20, stackArg24, stackArg88, stackArg136, stackArg152, dwArg18, stackArg264, out s0_375, out s1_376, out a0_388, out a4_392, out a5_393, out a6_394, out a7_395, out s2_220, out s3_146, out s4_222, out s5_386, out s6_224, out s7, out s8, out s9_383, out s10_235, out s11, out mstatus)
l2308F960:
	s5_304 = Mem405[s5_304 + 304<i32>:int32]
l2308F968:
	a7_292 = s8
	a4_296 = s4_222
	a3_297 = s2_220 + 1<i32>
	a1_300 = a2
l2308F978:
	ra_385 = x509_crt_verify_top.isra.7(ra_232, s3_146, a1_300, s6_224, a3_297, a4_296, fp + -100<i32>, s7, a7_292, s3_146, s10_235, s11_263, mstatus, s2, s0, dwLoc2C, dwArg18, s5, dwArg88, out s0_375, out s1_376, out a0_388, out a4_392, out a5_393, out a6_394, out a7_395, out s2_220, out s3_146, out s4_222, out s5_386, out s6_224, out s7, out s8, out s9_383, out s10_235, out s11, out mstatus)
l2308F9AC:
	sp_3 = fp + -144<i32>
	branch a0_388 != 0<32> l2308F838
l2308F9B0:
	branch s7 != 0<32> l2308F9C0
l2308F9C0:
	word32 a0_520
	word32 tp_533
	word32 t5_534
	word32 t6_535
	call s7 (retsize: 0;)
		uses: a0:s8_490,a1:s1_488,a2:s2_486,a3:s0_484,a4:a4_503,a5:a5_502,a6:a6_500,a7:a7_501,mstatus:mstatus_504,ra:ra_497,s0:s0_484,s1:s1_488,s10:s10_496,s11:s11_499,s2:s2_486,s3:s3_492,s4:s4_493,s5:s5_498,s6:s6_494,s7:s7_483,s8:s8_490,s9:s9_495,Stack +0000:dwLoc90_805,Stack +000C:dwLoc84_781,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +0058:dwArg58,Stack +0064:dwLoc2C,Stack +0088:dwArg88,Stack +00A4:dwArg14,Stack +00A8:dwArgA8,Stack +00E8:dwArg58,Stack +0108:dwArg0108,Stack +0118:dwArg88,Stack +0128:dwArg98,Stack +0138:dwArgA8,Stack +0198:dwArg0108,Stack +FFFFFF70:dwLoc90_805,Stack +FFFFFF7C:dwLoc84_781,Stack +FFFFFFD4:dwLoc2C,t5:t5_534,t6:t6_535,tp:tp_533
		defs: a0:a0_520,a4:a4_524,a5:a5_525,a6:a6_526,mstatus:mstatus_532,s0:s0_507,s10:s10_516,s11:s11_519,s2:s2_509,s3:s3_510,s4:s4_511,s6:s6_512,s7:s7_513,s8:s8_514,sp:sp_506,t5:t5_534,t6:t6_535,tp:tp_533
	branch a0_520 == 0<32> l2308F9B4
l2308F9CC:
l2308F9B4:
	s0_375 = Mem538[a5_393:word32]
	a5_393 = a5_393 | a4_392
	Mem545[a5_393:word32] = s0_375
l2308F82A:
	s0_375 = Mem30[8<32>:word32]
	Mem550[8<32>:word32] = s0_375
	a5_393 = 8<32>
l2308F838:
	word32 sp_556 = Mem552[sp_3 + 72<i32>:word32]
	word32 a4_553 = Mem552[sp_3 + 32<i32>:word32]
	word32 a0_554 = Mem552[sp_3 + 4<i32>:word32]
	word32 s9_558 = Mem552[sp_556 + 408<i32>:word32]
	word32 s5_559 = Mem552[sp_556 + 440<i32>:word32]
	word32 a7_560 = Mem552[sp_556 + 472<i32>:word32]
	word32 s1_562 = Mem552[sp_556 + 284<i32>:word32]
	word32 ra_564 = Mem552[sp_556 + 348<i32>:word32]
	s0Out = s0_375
	s1Out = s1_562
	a0Out = a0_554
	a4Out = a4_553
	a5Out = a5_393
	a6Out = a6_394
	a7Out = a7_560
	s2Out = s2_220
	s3Out = s3_146
	s4Out = s4_222
	s5Out = s5_559
	s6Out = s6_224
	s7Out = s7
	s8Out = s8
	s9Out = s9_558
	s10Out = s10_235
	s11Out = s11
	mstatusOut = mstatus
	return ra_564
x509_crt_verify_child_exit:


word32 mbedtls_x509_crt_check_extended_key_usage(word32 a0, word32 a1, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_check_cert_usage
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a5 s0 s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
mbedtls_x509_crt_check_extended_key_usage_entry:
l2308F9E0:
	word32 a5_151 = Mem0[a0 + 248<i32>:int32]
	branch a5_151 << 0x14<u32> >= 0<32> l2308FA4C
l2308FA4C:
	s1Out = s1
	a0Out = 0<32>
	a5Out = a5_151
	s3Out = s3
	return s0
l2308F9EC:
	a1_41 = a1
l2308FA08:
	word32 a0_132
	word32 a1_41
	branch a5_151 == a2 l2308FA3C
l2308FA3C:
	word32 a3_176
	word32 a2_175
	word32 a4_177
	a0 = memcmp(a0, a1, a2, out a1_41, out a2_175, out a3_176, out a4_177, out a5_151)
	branch a0 != 0<32> l2308FA0E
l2308FA0E:
	word32 s0_45 = Mem20[a5_151 + 4<i32>:word32]
	branch a5_151 != 4<32> l2308FA22
l2308FA14:
	s0_45 = Mem20[a1_41 + 8<i32>:word32]
	word32 a2_178
	word32 a3_179
	word32 a4_180
	a0 = memcmp(0x230C8268<32>, a1_41, 4<32>, out a1_41, out a2_178, out a3_179, out a4_180, out a5_151)
	branch a0 == 0<32> l2308FA48
l2308FA48:
	a0_132 = 0<32>
l2308FA22:
	branch Mem20[s0_45 + 12<i32>:word32] != 0<32> l2308FA08
l2308FA26:
	a0_132 = 0xFDFFF800<32>
l2308FA2C:
	s1Out = a2
	a0Out = a0_132
	a5Out = a5_151
	s3Out = 0x230C8000<32>
	return s1
mbedtls_x509_crt_check_extended_key_usage_exit:


word32 mbedtls_x509_crt_verify_with_profile(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s3, word32 s7, word32 s9, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg58, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s7:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0058:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a4 a5 ra s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_x509_crt_verify_with_profile_entry:
l2308FA50:
	branch a3 == 0<32> l2308FBDE
l2308FBDE:
	a0Out = 0xFDFFF800<32>
	a4Out = a4
	a5Out = a5
	s5Out = s5
	return ra
l2308FA54:
	word32 s10_113
	Mem36[a5:word32] = 0<32>
	word32 s0_102 = a5
	word32 s2_273 = a3
	word32 s4_275 = a1
	word32 s1_258 = a0
	s10_113 = s10
	branch a4 == 0<32> l2308FB0A
l2308FA86:
	word32 a4_1003
	word32 a3_1002
	word32 a1_1000
	word32 a2_1001
	word32 a5_1004
	word32 a0_50 = strlen(a4, out a1_1000, out a2_1001, out a3_1002, out a4_1003, out a5_1004)
	word32 a5_56 = Mem36[a0 + 248<i32>:int32]
	s7 = a0_50
	a5 = a5_56 & 32<i32>
	branch (a5_56 & 32<i32>) != 0<32> l2308FABA
l2308FABA:
	word32 s9_110 = a0 + 232<i32>
	s10_113 = 2<32>
	s11 = 0x230C8000<32>
l2308FAC4:
	word32 s8_64 = Mem36[s9_110 + 4<i32>:int32]
	branch s8_64 != a0_50 l2308FADA
l2308FACC:
	word32 a3_1015
	word32 a7_1017
	word32 a4_1016
	branch x509_memcasecmp(a4, Mem36[s9_110 + 8<i32>:int32], a0_50, out a3_1015, out a4_1016, out a5, out a7_1017) == 0<32> l2308FB0A
l2308FADA:
	branch s8_64 >u 2<32> l2308FAF0
l2308FAF0:
	word32 a4_1021
	word32 a1_1018
	word32 a2_1019
	word32 a3_1020
	branch memcmp(Mem36[s9_110 + 8<i32>:int32], 0x230C85A8<32>, 2<32>, out a1_1018, out a2_1019, out a3_1020, out a4_1021, out a5) != 0<32> l2308FADE
l2308FB00:
	word32 a0_96
	word32 s8_1022
	s0_102 = x509_check_wildcard(a4, out a0_96, out a5, out s8_1022)
	branch a0_96 != 0<32> l2308FADE
l2308FADE:
	s9_110 = Mem36[s9_110 + 12<i32>:int32]
	branch s9_110 != 0<32> l2308FAC4
l2308FA98:
	word32 s8_111 = a0 + 108<i32>
	s10_113 = 2<32>
	s11 = 0x230C8000<32>
l2308FAA6:
	a5 = 3<32>
	branch Mem116[s8_111 + 4<i32>:int32] == 3<32> l2308FB50
l2308FB50:
	word32 a2_1006
	word32 a1_1005
	word32 a3_1007
	word32 a4_1008
	branch memcmp(0x230C85AC<32>, Mem116[s8_111 + 8<i32>:int32], 3<32>, out a1_1005, out a2_1006, out a3_1007, out a4_1008, out a5) != 0<32> l2308FAB0
l2308FB60:
	word32 a4_129 = Mem116[s8_111 + 16<i32>:int32]
	branch a4_129 != a0_50 l2308FB7A
l2308FB68:
	word32 a7_1010
	word32 a3_1009
	branch x509_memcasecmp(Mem116[s8_111 + 20<i32>:int32], a4, a0_50, out a3_1009, out a4_129, out a5, out a7_1010) == 0<32> l2308FB0A
l2308FB7A:
	branch a4_129 <=u 2<32> l2308FAB0
l2308FB7E:
	word32 a1_1011
	word32 a2_1012
	word32 a3_1013
	word32 a4_1014
	branch memcmp(Mem149[s8_111 + 20<i32>:int32], 0x230C85A8<32>, 2<32>, out a1_1011, out a2_1012, out a3_1013, out a4_1014, out a5) != 0<32> l2308FAB0
l2308FB8E:
	word32 a0_164
	s0_102 = x509_check_wildcard(a4, out a0_164, out a5, out s8_111)
	branch a0_164 != 0<32> l2308FAB0
l2308FB9C:
l2308FAB0:
	s8_111 = Mem177[s8_111 + 24<i32>:int32]
	branch s8_111 != 0<32> l2308FAA6
l2308FAB8:
l2308FAE6:
	s0_102 = Mem185[a5:word32]
	a5 = a5 | 4<i32>
	Mem188[a5:word32] = s0_102
	s11 = 0x230C8000<32>
	s10_113 = 2<32>
l2308FB0A:
	word32 a0_208 = mbedtls_pk_get_type(a0 + 188<i32>, a5)
	word32 a5_223 = 1<32> << a0_208 + -1<i32> & Mem206[a3 + 4<i32>:int32]
	branch a5_223 != 0<32> l2308FB34
l2308FB2C:
	s0_102 = Mem206[a5_223:word32]
	Mem227[a5_223 | 0x8000000<32>:word32] = s0_102
l2308FB34:
	word32 a2_1023
	word32 a4_234
	word32 a5_235
	branch x509_profile_check_key(a0_208, a0 + 188<i32>, out a2_1023, out a4_234, out a5_235) == 0<32> l2308FB44
l2308FB3C:
	s0_102 = Mem238[a5_235:word32]
	Mem242[a5_235 | 0x10000000<32>:word32] = s0_102
	a4_234 = 0x10000000<32>
	a5_235 = a5_235 | 0x10000000<32>
l2308FB44:
	word32 s3_253 = a1
l2308FB46:
	word32 a4_338
	word32 a0_334
	word32 a5_339
	word32 a5_285
	word32 a2_288
	word32 a1_289
	word32 s3_274
	branch s3_253 != 0<32> l2308FB9E
l2308FB9E:
	word32 a0_280
	word32 a2_1024
	word32 a3_1025
	word32 a6_1026
	word32 a7_1027
	word32 s8_1028
	s0_102 = x509_crt_check_parent(s1_258, s3_253, 0<32>, a4_234, a5_235, dwArgC8, out s1_258, out a0_280, out a2_1024, out a3_1025, out a4_234, out a5_235, out a6_1026, out a7_1027, out s2_273, out s3_274, out s4_275, out s8_1028)
	branch a0_280 == 0<32> l2308FC2A
l2308FC2A:
	a5_285 = s0_102
	a2_288 = s2_273
	a1_289 = s3_274
l2308FBAC:
	s3_253 = Mem509[s3_274 + 304<i32>:int32]
l2308FB4A:
	s3_274 = Mem509[s1_258 + 304<i32>:int32]
l2308FBC4:
	branch s3_274 != 0<32> l2308FBB2
l2308FBB2:
	word32 a3_304
	word32 s3_312
	word32 a0_318
	word32 a6_1030
	word32 a7_1031
	word32 s8_1032
	word32 a2_1029
	s0_102 = x509_crt_check_parent(s1_258, s3_274, 0<32>, a4_234, a5_235, dwArgC8, out s1_258, out a0_318, out a2_1029, out a3_304, out a4_234, out a5_235, out a6_1030, out a7_1031, out s2_273, out s3_312, out s4_275, out s8_1032)
	branch a0_318 == 0<32> l2308FBE6
l2308FBE6:
	word32 s0_1033
	word32 a7_1036
	word32 s2_1037
	word32 s3_1038
	word32 s4_1039
	word32 s5_1040
	word32 s6_1041
	word32 s7_1042
	word32 s8_1043
	word32 s9_1044
	word32 s10_1045
	word32 mstatus_1047
	word32 s11_1046
	word32 s1_1034
	word32 a6_1035
	x509_crt_verify_child(ra, s0_102, s1_258, s3_312, s4_275, a3_304, s2_273, 0<32>, 0<32>, s2_273, a6, s7, s3, mstatus, dwLoc4C, s10, dwLoc08, dwArg28, s9, s1, dwArgA8, out s0_1033, out s1_1034, out a0_334, out a4_338, out a5_339, out a6_1035, out a7_1036, out s2_1037, out s3_1038, out s4_1039, out s5_1040, out s6_1041, out s7_1042, out s8_1043, out s9_1044, out s10_1045, out s11_1046, out mstatus_1047)
l2308FBC0:
	s3_274 = Mem509[s3_312 + 304<i32>:int32]
l2308FBC8:
	a5_285 = s0_102
	a2_288 = s2_273
	a1_289 = s4_275
l2308FBD6:
	word32 a7_1051
	word32 s2_1052
	word32 s3_1053
	word32 s4_1054
	word32 s5_1055
	word32 s6_1056
	word32 s7_1057
	word32 s8_1058
	word32 s9_1059
	word32 s10_1060
	word32 mstatus_1062
	word32 s11_1061
	word32 s0_1048
	word32 s1_1049
	word32 a6_1050
	x509_crt_verify_top.isra.7(ra, s1_258, a1_289, a2_288, 0<32>, 0<32>, a5_285, a6, a7, s3_274, s10_113, s11, mstatus, dwLoc20, dwLoc1C, dwArg04, s1, dwArg58, dwArgB8, out s0_1048, out s1_1049, out a0_334, out a4_338, out a5_339, out a6_1050, out a7_1051, out s2_1052, out s3_1053, out s4_1054, out s5_1055, out s6_1056, out s7_1057, out s8_1058, out s9_1059, out s10_1060, out s11_1061, out mstatus_1062)
l2308FBFE:
	branch a0_334 != 0<32> l2308FC0C
l2308FC00:
	a0_334 = 0<32>
	branch a5_339 == 0<32> l2308FC0C
l2308FC06:
	a0_334 = 0xFDFFF900<32>
l2308FC0C:
	a0Out = a0_334
	a4Out = a4_338
	a5Out = a5_339
	s5Out = s4
	return dwArg68
mbedtls_x509_crt_verify_with_profile_exit:


word32 mbedtls_x509_crt_init(word32 ra, word32 a0, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_create_config_client_common
//      altcp_tls_create_config_client_2wayauth
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_parse_der
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra t0 t1
// Preserved: sp
mbedtls_x509_crt_init_entry:
l2308FC3A:
l2308FC40_thunk_memset:
	word32 a0_7
	word32 a1_8
	word32 a3_10
	word32 a4_11
	word32 a5_12
	word32 t1_21
	word32 a2_22
	word32 ra_13 = memset(ra, a0, 0<32>, 308<i32>, out t1_21, out a0_7, out a1_8, out a2_22, out a3_10, out a4_11, out a5_12)
	a0Out = a0_7
	a1Out = a1_8
	a3Out = a3_10
	a4Out = a4_11
	a5Out = a5_12
	return ra_13
mbedtls_x509_crt_init_exit:


word32 mbedtls_x509_crt_free(word32 ra, word32 a0, word32 a1, word32 a5, word32 mstatus, word32 dwArg0138, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_tls_free_config
//      mbedtls_ssl_session_free
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_parse_der
// MayUse:  a0:[0..31] a1:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a5 ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
mbedtls_x509_crt_free_entry:
l2308FC44:
	branch a0 == 0<32> l2308FD20
l2308FD20:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s8Out = s8
	return ra
l2308FC48:
	word32 s1_124 = a0
	word32 s0_102 = a0
l2308FC58:
	word32 a0_126
	word32 a2_118
	ra = mbedtls_pk_free(ra, s0_102 + 188<i32>, a5, out a0_126, out a2_118, out a5)
	word32 s2_26 = Mem14[s0_102 + 100<i32>:int32]
l2308FC64:
	branch s2_26 != 0<32> l2308FCC4
l2308FCC4:
	s3 = Mem14[s2_26 + 24<i32>:int32]
	word32 a1_362
	mbedtls_zeroize(s2_26, 32<i32>, out a1_362)
	word32 a3_363
	word32 a4_364
	word32 a6_365
	word32 s4_366
	word32 t3_367
	vPortFree(s2_26, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_102, out s1_124, out a0_126, out a1, out a2_118, out a3_363, out a4_364, out a5, out a6_365, out s4_366, out t3_367)
	s2_26 = s3
l2308FC68:
	word32 s2_53 = Mem14[s0_102 + 132<i32>:int32]
l2308FC6C:
	branch s2_53 != 0<32> l2308FCDC
l2308FCDC:
	s3 = Mem14[s2_53 + 24<i32>:int32]
	word32 a1_368
	mbedtls_zeroize(s2_53, 32<i32>, out a1_368)
	word32 a3_369
	word32 a4_370
	word32 a6_371
	word32 s4_372
	word32 t3_373
	vPortFree(s2_53, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_102, out s1_124, out a0_126, out a1, out a2_118, out a3_369, out a4_370, out a5, out a6_371, out s4_372, out t3_373)
	s2_53 = s3
l2308FC70:
	word32 s2_105 = Mem14[s0_102 + 276<i32>:int32]
l2308FC74:
	branch s2_105 != 0<32> l2308FCF4
l2308FCF4:
	s3 = Mem14[s2_105 + 12<i32>:int32]
	word32 a1_374
	mbedtls_zeroize(s2_105, 0x10<32>, out a1_374)
	word32 a3_375
	word32 a4_376
	word32 a6_377
	word32 s4_378
	word32 t3_379
	vPortFree(s2_105, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_102, out s1_124, out a0_126, out a1, out a2_118, out a3_375, out a4_376, out a5, out a6_377, out s4_378, out t3_379)
	s2_105 = s3
l2308FC78:
	word32 s2_107 = Mem14[s0_102 + 244<i32>:int32]
l2308FC7C:
	branch s2_107 != 0<32> l2308FD0A
l2308FD0A:
	s3 = Mem14[s2_107 + 12<i32>:int32]
	word32 a1_380
	mbedtls_zeroize(s2_107, 0x10<32>, out a1_380)
	word32 s0_381
	word32 a3_382
	word32 a4_383
	word32 a6_384
	word32 s4_385
	word32 t3_386
	vPortFree(s2_107, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_381, out s1_124, out a0_126, out a1, out a2_118, out a3_382, out a4_383, out a5, out a6_384, out s4_385, out t3_386)
	s2_107 = s3
l2308FC80:
	word32 s0_137 = Mem14[a0_126 + 8<i32>:word32]
	branch a0_126 == 0<32> l2308FC90
l2308FC84:
	word32 a1_387
	word32 a0_388
	word32 a3_389
	word32 a4_390
	word32 a6_391
	word32 s4_392
	word32 t3_393
	vPortFree(mbedtls_zeroize(a0_126, a1, out a1_387), a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_137, out s1_124, out a0_388, out a1, out a2_118, out a3_389, out a4_390, out a5, out a6_391, out s4_392, out t3_393)
l2308FC90:
	s0_102 = Mem14[s0_137 + 304<i32>:int32]
	branch s0_102 != 0<32> l2308FC58
l2308FC96:
	word32 s0_168 = s1_124
l2308FC98:
	word32 s2_173 = Mem14[s0_168 + 304<i32>:int32]
	word32 a1_175
	word32 a0_174 = mbedtls_zeroize(s0_168, 308<i32>, out a1_175)
	branch s1_124 == s0_168 l2308FCB0
l2308FCAA:
	word32 s0_394
	word32 a3_395
	word32 a4_396
	word32 a6_397
	word32 s4_398
	word32 t3_399
	vPortFree(s0_168, a2_118, a5, mstatus, dwArg0138, dwArg0178, out s0_394, out s1_124, out a0_174, out a1_175, out a2_118, out a3_395, out a4_396, out a5, out a6_397, out s4_398, out t3_399)
l2308FCB0:
	s0_168 = s2_173
	branch s2_173 != 0<32> l2308FC98
l2308FCB6:
	s0Out = s2_173
	s1Out = s1_124
	a0Out = a0_174
	a1Out = a1_175
	a2Out = dwArg48
	a5Out = a5
	s2Out = s2_173
	s3Out = s3
	s4Out = dwArg04
	s8Out = dwLoc1C
	return ra
mbedtls_x509_crt_free_exit:


word32 mbedtls_x509_crt_parse_der(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s5, word32 s6, word32 s7, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg14, word32 dwArg18, word32 dwArg38, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC4, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0144, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_parse
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0144:[0..31]
// LiveOut: a0 a1 a2 a4 a5 mstatus ra s0 s10 s11 s2 s3 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mbedtls_x509_crt_parse_der_entry:
l2308FD22:
	word32 s0_1018
	branch a0 == 0<32> l23090370
l2308FD3E:
	branch a1 == 0<32> l23090370
l23090370:
	s0_1018 = 0xFDFFF800<32>
l2308FD42:
	word32 s0_124 = a2
	s2 = a1
	word32 s4_1114 = a0
	s3 = 0<32>
l2308FD4C:
	word32 ra_76
	word32 s1_1012 = Mem25[a5 + 24<i32>:word32]
	ra_76 = ra
	branch a5 == 0<32> l2308FD7E
l2308FD50:
	a5 = Mem25[s1_1012 + 304<i32>:int32]
	s3 = s1_1012
	branch a5 != 0<32> l2308FD70
l2308FD70:
l2308FD58:
	word32 s1_60
	word32 a3_2286
	word32 a4_2287
	ra = mycalloc(ra, s1_1012, 1<32>, 308<i32>, a3, a4, a5, mstatus, dwLoc70, dwLoc6C, dwArg88, dwArgC8, out s0_124, out s1_60, out a1, out a2, out a3_2286, out a4_2287, out a5, out s2, out s3, out s4_1114, out s8)
	Mem69[s1_60 + 304<i32>:word32] = 1<32>
	branch true l2308FD74
l2308FD74:
	word32 a4_2291
	word32 a0_2288
	word32 a3_2290
	word32 a1_2289
	word32 a5_2292
	ra_76 = mbedtls_x509_crt_init(ra, 1<32>, out a0_2288, out a1_2289, out a3_2290, out a4_2291, out a5_2292)
	s3 = s1_60
	s1_1012 = Mem69[s1_60 + 304<i32>:int32]
l2308FD7E:
	word32 a0_2269
	word32 a1_2270
	word32 a2_2271
	word32 a1_2277
	word32 a3_2272
	word32 a4_2273
	word32 a5_2274
	word32 a2_2278
	word32 t1_2275
	word32 a0_2276
	word32 t1_2268
	word32 a3_2279
	word32 a4_2285
	word32 a0_2283
	word32 a5_2281
	word32 a4_2280
	word32 t1_2282
	word32 a3_2284
	ra = memset(memset(memset(ra_76, fp + -108<i32>, 0<32>, 0xC<32>, out t1_2268, out a0_2269, out a1_2270, out a2_2271, out a3_2272, out a4_2273, out a5_2274), fp + -96<i32>, 0<32>, 0xC<32>, out t1_2275, out a0_2276, out a1_2277, out a2_2278, out a3_2279, out a4_2280, out a5_2281), fp + -84<i32>, 0<32>, 0xC<32>, out t1_2282, out a0_2283, out a1, out a2, out a3_2284, out a4_2285, out a5)
	branch s1_1012 == 0<32> l2309035E
l2309035E:
	s0_1018 = 0xFDFFF800<32>
	branch s3 != 0<32> l2308FDC6
l2308FDA0:
	word32 s0_129 = s0_124 + s2
	word32 a3_139
	word32 a4_140
	word32 a2_2293
	branch mbedtls_asn1_get_tag(s0_129, fp + -132<i32>, 48<i32>, a5, out a1, out a2_2293, out a3_139, out a4_140, out a5) == 0<32> l2308FDD0
l2308FDD0:
	branch s0_129 - a1 >=u a5 l2308FDE8
l2308FDE8:
	word32 a1_146 = a1 + a5 - s2
	Mem147[a1_146 + 4<i32>:word32] = s1_1012
	word32 s0_2303
	word32 a4_2305
	word32 a3_2304
	ra = mycalloc(ra, s1_1012, 1<32>, a1_146, a3_139, a4_140, a5, mstatus, dwLoc70, dwLoc6C, dwArg88, dwArgC8, out s0_2303, out s1_1012, out a1, out a2, out a3_2304, out a4_2305, out a5, out s2, out s3, out s4_1114, out s8)
	Mem168[9<32>:word32] = s1_1012
	branch true l2308FE02
l2308FE02:
	word32 a4_171
	word32 a5_172
	word32 a1_2308
	word32 a2_2309
	word32 a3_2310
	word32 a6_2311
	word32 a7_2312
	memcpy(1<32>, s2, a2, out a1_2308, out a2_2309, out a3_2310, out a4_171, out a5_172, out a6_2311, out a7_2312)
	s1_1012 = Mem168[a4_171 + 4<i32>:word32]
	word32 a5_189 = a4_171 - a5_172 + s2
	Mem191[a5_189 + 20<i32>:word32] = s1_1012
	word32 dwLoc88_1369 = a5_189
	word32 a4_2315
	word32 a2_2313
	word32 a3_2314
	word32 a1_1169
	branch mbedtls_asn1_get_tag(s2 + a4_171, fp + -132<i32>, 48<i32>, a5_189, out a1_1169, out a2_2313, out a3_2314, out a4_2315, out a5) == 0<32> l2308FE5A
l2308FE5A:
	word32 s5_210 = s5 + a5
	s1_1012 = Mem195[a5 + 20<i32>:word32]
	word32 a5_214 = s5_210 - a5
	Mem215[a5_214 + 16<i32>:word32] = s1_1012
	word32 a5_222
	word32 a2_2316
	word32 a3_2317
	word32 a4_2318
	word32 a0_216 = mbedtls_asn1_get_tag(s5_210, fp + -60<i32>, 160<i32>, a5_214, out a1, out a2_2316, out a3_2317, out a4_2318, out a5_222)
	branch a0_216 == 0<32> l2308FEC4
l2308FEC4:
	s5_210 = dwArg54
	word32 a0_230
	word32 a3_2320
	word32 a4_2321
	word32 s0_237 = mbedtls_asn1_get_int(a0_216 + a5_222, s1_1012 + 24<i32>, a5_222, out s1_1012, out a0_230, out a1, out a3_2320, out a4_2321, out a5)
	branch a0_230 == 0<32> l2308FEEA
l2308FEEA:
	branch s0_237 == a5 l2308FE86
l2308FEF0:
l2308FED8:
	branch a0_230 == 0xFDFFFE00<32> l2308FE86
l2308FE7A:
	a5 = -98<i32>
	branch a0_216 != -98<i32> l2308FEE2
l2308FE82:
	Mem249[s1_1012 + 24<i32>:word32] = 0<32>
l2308FE86:
	word32 a0_257
	s1_1012 = mbedtls_x509_get_serial(s5_210, s1_1012 + 28<i32>, a5, out a0_257, out a1, out a5)
	branch a0_257 != 0<32> l2308FEE2
l2308FE96:
	s6 = s1_1012 + 40<i32>
	word32 a0_273
	word32 a2_2323
	word32 s2_2324
	word32 s3_2325
	s1_1012 = mbedtls_x509_get_alg(s5_210, s1_1012 + 40<i32>, fp + -108<i32>, a5, dwArg14, dwArg88, out a0_273, out a1, out a2_2323, out a5, out s2_2324, out s3_2325)
	branch a0_273 != 0<32> l2308FEE2
l2308FEAA:
	word32 s1_289 = Mem272[a5 + 24<i32>:word32]
	Mem292[a5 + 0x19<32>:word32] = s1_289
	branch a5 <= 0xFFFFFFFE<32> l2308FEF8
l2308FEF8:
	word32 a0_298
	s1_1012 = mbedtls_x509_get_sig_alg(s1_1012 + 40<i32>, s1_289 + 296<i32>, s1_289 + 297<i32>, a5 + 1<32>, out a0_298, out a1, out a5)
	branch a0_298 != 0<32> l2308FEE2
l2308FF10:
	Mem310[a5 + 60<i32>:word32] = s1_1012
	word32 a2_2328
	word32 a3_2329
	word32 a4_2330
	branch mbedtls_asn1_get_tag(s5_210, fp + -132<i32>, 48<i32>, a5, out a1_1169, out a2_2328, out a3_2329, out a4_2330, out a5) != 0<32> l2308FE2E
l2308FF28:
	word32 a0_328
	word32 a4_332
	word32 s5_340
	word32 s2_337
	ra = mbedtls_x509_get_name(ra, fp + -128<i32>, a1_1169 + a5, s1_1012 + 76<i32>, a5, mstatus, dwArg48, dwArg88, dwArg0108, out s1_1012, out a0_328, out a1, out a4_332, out a5, out s2_337, out s5_340, out s6, out s7)
	branch a0_328 != 0<32> l2308FEE2
l2308FF3C:
	s1_1012 = Mem310[a4_332 + 60<i32>:word32]
	word32 a5_354 = a5 - a4_332
	Mem355[a5_354 + 56<i32>:word32] = s1_1012
	word32 a4_363
	word32 a5_364
	word32 a3_2332
	word32 a2_2331
	word32 a0_358 = mbedtls_asn1_get_tag(s5_340, fp + -60<i32>, 48<i32>, a5_354, out a1, out a2_2331, out a3_2332, out a4_363, out a5_364)
	branch a0_358 == 0<32> l2309000C
l2309000C:
	a5 = a5_364 + a4_363
	s5_340 = ra
	dwLoc88_1369 = a5
l2308FF56:
	a5 = -98<i32>
	branch a0_358 != -98<i32> l2308FEE2
l2308FF5E:
	Mem378[a5 + 72<i32>:word32] = s1_1012
	word32 a3_2334
	word32 a2_2333
	word32 a4_387
	branch mbedtls_asn1_get_tag(s5_340, fp + -132<i32>, 48<i32>, a5, out a1_1169, out a2_2333, out a3_2334, out a4_387, out a5) != 0<32> l2308FE2E
l2308FF76:
	branch a5 == 0<32> l2308FF8C
l2308FF7A:
	word32 a0_397
	ra = mbedtls_x509_get_name(ra, fp + -128<i32>, a1_1169 + a5, s1_1012 + 108<i32>, a5, mstatus, dwArg48, dwArg88, dwArg0108, out s1_1012, out a0_397, out a1, out a4_387, out a5, out s2_337, out s5_340, out s6, out s7)
	branch a0_397 != 0<32> l2308FEE2
l2308FF8C:
	word32 s1_421 = Mem378[a4_387 + 72<i32>:word32]
	word32 a5_428 = a5 - a4_387
	Mem429[a5_428 + 68<i32>:word32] = s1_421
	word32 a0_466
	word32 s2_458
	word32 s5_1308
	ra = mbedtls_pk_parse_subpubkey(ra, s1_421, fp + -128<i32>, s5_340, a5_428, s2_337, s7, s10, s11, mstatus, dwLoc88_1369, dwLoc6C, dwLoc68, s6, s0, dwLoc48, dwLoc2C, dwLoc28, dwLoc18, dwLoc08, dwArg04, dwArg08, dwArg18, s7, s5, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArg0108, out s1_1012, out a0_466, out a1, out a5, out s2_458, out s5_1308, out s6, out s7, out s10, out s11, out mstatus)
	branch a0_466 != 0<32> l2308FEE2
l2308FFA4:
	s1_1012 = Mem429[a5 + 24<i32>:word32]
	word32 a4_480 = 1<32>
	word32 a5_481 = a5 + 0xFFFFFFFE<32>
	branch a5 >u 0xFFFFFFFD<32> l2308FFBA
l2308FFAE:
	branch s5_1308 != a5 + 0xFFFFFFFE<32> l23090016
l23090016:
	word32 a5_483 = CONVERT(Mem429[a5 + 0xFFFFFFFE<32>:byte], byte, word32)
	Mem486[s1_1012 + 196<i32>:word32] = a5_483
	word32 a5_495
	word32 a2_2335
	word32 a3_2336
	word32 a4_2337
	word32 a0_489 = mbedtls_asn1_get_tag(s5_1308, s1_1012 + 200<i32>, 161<i32>, a5_483, out a1, out a2_2335, out a3_2336, out a4_2337, out a5_495)
	branch a0_489 == 0<32> l23090046
l23090046:
	word32 a4_498 = Mem486[s1_1012 + 200<i32>:int32]
	Mem499[s1_1012 + 204<i32>:word32] = a5_495
	a5 = a5_495 + a4_498
l23090032:
	a5 = -98<i32>
	branch a0_489 != -98<i32> l2308FEE2
l2309003A:
	s1_1012 = Mem504[a5 + 24<i32>:word32]
	a4_480 = 1<32>
	a5_481 = a5 + 0xFFFFFFFE<32>
	branch a5_481 <=u 1<32> l2308FFB4
l23090044:
l2308FFB4:
	a4_480 = 1<32>
	branch s5_1308 != a5_481 l23090056
l23090056:
	word32 a5_515 = CONVERT(Mem510[a5_481:byte], byte, word32)
	Mem519[s1_1012 + 208<i32>:word32] = a5_515
	word32 a5_528
	word32 a2_2338
	word32 a3_2339
	word32 a0_522 = mbedtls_asn1_get_tag(s5_1308, s1_1012 + 212<i32>, 162<i32>, a5_515, out a1, out a2_2338, out a3_2339, out a4_480, out a5_528)
	branch a0_522 == 0<32> l2309007C
l2309007C:
	a4_480 = Mem519[s1_1012 + 212<i32>:int32]
	Mem532[s1_1012 + 216<i32>:word32] = a5_528
l23090072:
	a5 = -98<i32>
	branch a0_522 != -98<i32> l2308FEE2
l2309007A:
l2308FFBA:
	s1_1012 = Mem538[a4_480 + 24<i32>:word32]
	a5 = 3<32>
	branch a4_480 != 3<32> l23090094
l2308FFC2:
	word32 a0_547
	s1_1012 = mbedtls_x509_get_ext(s5_1308, s1_1012 + 220<i32>, 3<32>, 3<32>, out a0_547, out a1, out a5)
	branch a0_547 != 0<32> l2309008C
l2309008C:
	a5 = -98<i32>
	branch a0_547 != -98<i32> l2308FEE2
l2308FFD4:
	s6 = 0xFDFFFB00<32>
l2308FFDA:
	branch a5 <u s5_1308 l2309009C
l2309009C:
	dwArg14 = 0<32>
	word32 a2_2340
	word32 a3_2341
	word32 a4_2342
	word32 a0_577 = mbedtls_asn1_get_tag(s5_1308, fp + -124<i32>, 48<i32>, a5, out a1, out a2_2340, out a3_2341, out a4_2342, out a5)
	branch a0_577 == 0<32> l230900C2
l230900C2:
	word32 a5_590 = CONVERT(Mem576[a5:byte], byte, word32)
	s7 = s7 + a5
	word32 a4_599
	word32 a2_2350
	word32 a3_2351
	a0_577 = mbedtls_asn1_get_tag(s5_1308, fp + -68<i32>, 6<32>, a5_590, out a1, out a2_2350, out a3_2351, out a4_599, out a5)
	branch a0_577 != 0<32> l230900B6
l230900DC:
	a5 = s5_1308 - (a5 + a4_599)
	branch a5 <= 0<32> l23090380
l230900EE:
	word32 s0_617 = mbedtls_asn1_get_bool(s7, fp + -120<i32>, a5, out s1_1012, out a0_577, out a1, out a5)
	branch a0_577 == 0<32> l23090102
l230900FA:
	a5 = -98<i32>
	branch a0_577 != -98<i32> l230900B6
l23090102:
	word32 a2_633
	word32 a4_2353
	word32 a3_2352
	a0_577 = mbedtls_asn1_get_tag(s7, fp + -124<i32>, 4<32>, a5, out a1, out a2_633, out a3_2352, out a4_2353, out a5)
	branch a0_577 != 0<32> l230900B6
l23090110:
	word32 s0_1321 = s0_617 + a5
	branch s7 != s0_1321 l230902B8
l2309011A:
	word32 a0_644
	s1_1012 = mbedtls_oid_get_x509_ext_type(fp + -72<i32>, fp + -116<i32>, a2_633, a5, s6, out a0_644, out a1, out a5, out s2_458)
	branch a0_644 == 0<32> l23090134
l23090134:
	word32 a4_653 = Mem605[s1_1012 + 248<i32>:int32]
	branch (a4_653 & a5) != 0<32> l23090388
l23090142:
	word32 a0_665
	Mem657[s1_1012 + 248<i32>:word32] = a4_653 | a5
	branch a5 == 256<i32> l230901A0
l230901A0:
	Mem659[s1_1012 + 252<i32>:word32] = 0<32>
	Mem660[s1_1012 + 256<i32>:word32] = 0<32>
	word32 a2_2354
	word32 a4_2356
	word32 a3_2355
	a0_665 = mbedtls_asn1_get_tag(s7, fp + -60<i32>, 48<i32>, a5, out a1, out a2_2354, out a3_2355, out a4_2356, out a5)
	branch a0_665 == 0<32> l230901C2
l230901C2:
	branch s0_1321 == a5 l2308FFDA
l230901C8:
	s7 = s1_1012 + 252<i32>
	word32 s0_684 = mbedtls_asn1_get_bool(s0_1321, s1_1012 + 252<i32>, a5, out s1_1012, out a0_665, out a1, out a5)
	branch a0_665 == 0<32> l230901F8
l230901D8:
	a5 = -98<i32>
	branch a0_665 != -98<i32> l230901B8
l230901E0:
	word32 a4_2367
	word32 a3_2366
	s0_684 = mbedtls_asn1_get_int(s0_684, s1_1012 + 252<i32>, -98<i32>, out s1_1012, out a0_665, out a1, out a3_2366, out a4_2367, out a5)
	branch a0_665 != 0<32> l230901B8
l230901EC:
	a5 = Mem660[s1_1012 + 252<i32>:int32]
	branch a5 == 0<32> l230901F8
l230901F2:
	Mem707[s1_1012 + 252<i32>:word32] = 1<32>
	a5 = 1<32>
l230901F8:
	branch s0_684 == a5 l2308FFDA
l230901FE:
	word32 a4_2369
	word32 a3_2368
	word32 s0_724 = mbedtls_asn1_get_int(s0_684, s1_1012 + 256<i32>, a5, out s1_1012, out a0_665, out a1, out a3_2368, out a4_2369, out a5)
	branch a0_665 != 0<32> l230901B8
l2309020C:
	branch s0_724 != a5 l230902B8
l23090212:
	word32 a5_730 = Mem709[s1_1012 + 256<i32>:int32]
	Mem732[s1_1012 + 256<i32>:word32] = a5_730 + 1<32>
	a5 = a5_730 + 1<32>
l23090150:
	branch a5 > 256<i32> l2309016A
l2309016A:
	branch a5 == 0xFFFFF800<32> l2309026E
l2309026E:
	ra = mbedtls_asn1_get_sequence_of(ra, s7, s1_1012 + 264<i32>, 6<32>, a5, mstatus, dwArg58, dwArg98, out s1_1012, out a0_665, out a1, out a5, out s2_458, out s5_1308)
	branch a0_665 != 0<32> l230901B8
l2309027E:
	a5 = Mem657[s1_1012 + 272<i32>:int32]
	branch a5 != 0<32> l2308FFDA
l23090286:
l23090172:
	branch a5 != 0x10000000<32> l23090162
l23090178:
	word32 a4_773
	word32 a2_2360
	s1_1012 = mbedtls_asn1_get_bitstring(s7, fp + -60<i32>, a5, s6, out a0_665, out a1, out a2_2360, out a4_773, out a5, out s2_458)
	branch a0_665 != 0<32> l230901B8
l2309018C:
	s5_1308 = ra
	a5 = 1<32>
	branch a4_773 != 1<32> l23090236
l23090194:
	a5 = CONVERT(Mem768[1<32>:byte], byte, word32)
	Mem783[s1_1012 + 280<i32>:byte] = SLICE(a5, byte, 0)
l23090154:
	branch a5 == 4<32> l2309021E
l2309021E:
	word32 a2_793
	word32 a4_2357
	s1_1012 = mbedtls_asn1_get_bitstring(s7, fp + -60<i32>, a5, s6, out a0_665, out a1, out a2_793, out a4_2357, out a5, out s2_458)
	branch a0_665 != 0<32> l230901B8
l23090232:
	s5_1308 = s0_124
	branch a2_793 != 0<32> l2309023E
l2309023E:
	Mem802[s1_1012 + 260<i32>:word32] = 0<32>
	a5 = 0<32>
	a1 = 4<32>
l23090248:
	Mem817[s1_1012 + 260<i32>:word32] = Mem809[s1_1012 + 260<i32>:int32] | CONVERT(Mem809[a0_665 + a5:byte], byte, word32) << (a5 << 3<u32>)
	a5 = a5 + 1<32>
	branch a2_793 == a5 l2308FFDA
l23090268:
	branch a5 != 4<32> l23090248
l2309026C:
l23090236:
l2309015A:
	branch a5 == 32<i32> l23090288
l23090288:
	word32 a4_832
	word32 a3_2359
	word32 a2_2358
	a0_665 = mbedtls_asn1_get_tag(s7, fp + -112<i32>, 48<i32>, a5, out a1, out a2_2358, out a3_2359, out a4_832, out a5)
	branch a0_665 != 0<32> l230901B8
l23090298:
	0<32> = dwArg0144
	a5 = a5 + a4_832
	branch s0_1321 != a5 l230902B8
l230902A2:
	s7 = s1_1012 + 232<i32>
	word32 s8_1326 = 130<i32>
l230902AA:
	branch a5 <u s0_1321 l230902C0
l230902C0:
	branch s0_1321 - a5 <= 0<32> l23090380
l23090380:
l230902C8:
	word32 s9_846 = CONVERT(Mem839[a5:byte], byte, word32)
	word32 a3_853
	word32 a2_2361
	word32 a4_856
	a0_665 = mbedtls_asn1_get_len(s0_1321, fp + -60<i32>, a5 + 1<32>, out a1, out a2_2361, out a3_853, out a4_856, out a5)
	branch a0_665 != 0<32> l230901B8
l230901B8:
	branch a0_665 == 0xFDFFFB00<32> l2308FFDA
l230901C0:
l230902DE:
	a5 = CONVERT(SLICE(s9_846, byte, 0), byte, int32)
	branch a5 >= 0<32> l2309012C
l230902E8:
	branch s9_846 == s8_1326 l230902F6
l230902F6:
	a5 = Mem851[s7 + 8<i32>:int32]
	branch a5 == 0<32> l23090310
l230902FC:
	a5 = Mem851[s7 + 12<i32>:int32]
	branch a5 != 0<32> l23090388
l23090388:
l23090302:
	word32 a3_2363
	word32 s3_2364
	word32 s4_2365
	word32 a2_2362
	ra = mycalloc(ra, s1_1012, 1<32>, 0x10<32>, a3_853, a4_856, a5, mstatus, dwLoc70, a5_590, dwArg88, dwArgC8, out s0_1321, out s1_1012, out a1, out a2_2362, out a3_2363, out a4_856, out a5, out s2_458, out s3_2364, out s4_2365, out s8_1326)
	Mem896[s7 + 12<i32>:word32] = 1<32>
	branch false l23090378
l23090378:
l2309030E:
	s7 = 1<32>
l23090310:
	Mem902[s7:word32] = s8_1326
	Mem906[s7 + 8<i32>:word32] = a5
	Mem909[s7 + 4<i32>:word32] = a4_856
l230902EC:
l230902F0:
	s5_1308 = ra
	a5 = a5 + a4_856
l230902B0:
	Mem917[s7 + 12<i32>:word32] = 0<32>
	branch s0_1321 == a5 l2308FFDA
l23090162:
l23090124:
	branch a5 == 0<32> l2308FFDA
l2309012C:
l230900B6:
	branch a0_577 == 0xFDFFFB00<32> l23090094
l23090094:
	branch s5_1308 == a5 l2308FFE4
l2309009A:
l230900C0:
l2308FFE0:
	branch s5_1308 != a5 l230902B8
l230902B8:
l2308FFE4:
	word32 a0_961
	word32 a2_963
	word32 s2_970
	s1_1012 = mbedtls_x509_get_alg(s2_458, fp + -84<i32>, fp + -96<i32>, a5, dwArg14, dwArg88, out a0_961, out a1, out a2_963, out a5, out s2_970, out s3)
	branch a0_961 != 0<32> l2308FEE2
l2308FFF6:
	word32 s1_1119 = Mem960[a2_963 + 44<i32>:word32]
	ra = dwArg54
	branch a2_963 == a5 l23090322
l23090322:
	s1_1119 = Mem960[a0_961 + 48<i32>:word32]
	word32 a2_986
	word32 a4_2344
	word32 a3_2343
	word32 a0_981 = memcmp(a0_961, a1, a2_963, out a1, out a2_986, out a3_2343, out a4_2344, out a5)
	branch a0_981 != 0<32> l2308FFFE
l2309032E:
	branch a2_986 != a5 l2308FFFE
l23090336:
	branch a2_986 == 0<32> l23090344
l23090338:
	word32 a4_2349
	word32 a3_2348
	word32 a2_2347
	branch memcmp(a0_981, a1, dwArgC4, out a1, out a2_2347, out a3_2348, out a4_2349, out a5) != 0<32> l2308FFFE
l23090344:
	word32 a0_1004
	s1_1012 = mbedtls_x509_get_sig(s2_970, a5, out a0_1004, out a1, out a2, out a5, out s2, out s8)
	s0_1018 = a0_1004
	branch a0_1004 != 0<32> l2308FEE2
l2308FEE2:
	word32 a0_2322
	ra = mbedtls_x509_crt_free(ra, s1_1012, a1, a5, mstatus, dwArgA8, dwArgE8, out s0_1018, out s1_1012, out a0_2322, out a1, out a2, out a5, out s2, out s3, out s4_1114, out s8)
l23090356:
	branch s2 == a5 l2308FE3E
l2309035C:
l2308FFFE:
	word32 s0_2345
	word32 a0_2346
	ra = mbedtls_x509_crt_free(dwArg54, s1_1119, a1, a5, mstatus, dwArgA8, dwArgE8, out s0_2345, out s1_1012, out a0_2346, out a1, out a2, out a5, out s2, out s3, out s4_1114, out s8)
	s0_1018 = 0xFDFFF980<32>
l2308FEB6:
	word32 a0_2327
	word32 s0_2326
	ra = mbedtls_x509_crt_free(ra, s1_289, a1, a5 + 1<32>, mstatus, dwArgA8, dwArgE8, out s0_2326, out s1_1012, out a0_2327, out a1, out a2, out a5, out s2, out s3, out s4_1114, out s8)
	s0_1018 = 0xFDFFFA80<32>
l2308FE2E:
	word32 s0_1180
	word32 a0_2319
	ra = mbedtls_x509_crt_free(ra, s1_1012, a1_1169, a5, mstatus, dwArgA8, dwArgE8, out s0_1180, out s1_1012, out a0_2319, out a1, out a2, out a5, out s2, out s3, out s4_1114, out s8)
	s0_1018 = s0_1180 + 0xFDFFFE80<32>
	branch s0_1180 != 0xFDFFFE80<32> l2308FDC2
l2308FDFA:
	s0_1018 = 0xFD000780<32>
l2308FDDA:
	word32 s0_2306
	word32 a0_2307
	ra = mbedtls_x509_crt_free(ra, s1_1012, a1, a5, mstatus, dwArgA8, dwArgE8, out s0_2306, out s1_1012, out a0_2307, out a1, out a2, out a5, out s2, out s3, out s4_1114, out s8)
	s0_1018 = 0xFDFFFE1A<32>
l2308FDB6:
	word32 a0_2295
	word32 s0_2294
	ra = mbedtls_x509_crt_free(ra, s1_1012, a1, a5, mstatus, dwArgA8, dwArgE8, out s0_2294, out s1_1012, out a0_2295, out a1, out a2, out a5, out s2, out s3, out s4_1114, out s8)
	s0_1018 = 0xFDFFFE80<32>
l2308FDC2:
	branch s3 == 0<32> l2308FDCA
l2308FDC6:
	Mem1245[s3 + 304<i32>:word32] = 0<32>
l2308FDCA:
	branch s4_1114 != s1_1012 l23090368
l23090368:
	word32 a3_2298
	word32 a0_2297
	word32 a4_2299
	word32 t3_2302
	word32 s4_2301
	word32 a6_2300
	word32 s1_2296
	vPortFree(s1_1012, a2, a5, mstatus, dwArgC8, dwArg0108, out s0_1018, out s1_2296, out a0_2297, out a1, out a2, out a3_2298, out a4_2299, out a5, out a6_2300, out s4_2301, out t3_2302)
l2308FDCE:
l2308FD68:
	s0_1018 = 0xFD000780<32>
l2308FE3E:
	word32 s9_1299 = Mem1292[dwLoc48 + 408<i32>:word32]
	word32 s5_1300 = Mem1292[dwLoc48 + 440<i32>:word32]
	s0Out = s0_1018
	a0Out = dwLoc8C
	a1Out = a1
	a2Out = a2
	a4Out = dwLoc70
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s5Out = s5_1300
	s6Out = s6
	s7Out = s7
	s8Out = s8
	s9Out = s9_1299
	s10Out = s10
	s11Out = s11
	mstatusOut = mstatus
	return ra
mbedtls_x509_crt_parse_der_exit:


