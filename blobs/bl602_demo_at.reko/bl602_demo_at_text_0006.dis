word32 ef_get_env(word32 ra, word32 a0, word32 s3, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg48, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArgAC, word32 dwArgB8, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_key_value_get
//      at_server_init
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0048:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 ra s1 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
ef_get_env_entry:
l230603F2:
	word32 a0_121
	word32 a0_16
	word32 s0_25
	word32 s9_199
	word32 s11_201
	word32 s10_200
	word32 s5_198
	word32 s2_197
	word32 s1_139
	word32 s3_151
	word32 s4_154
	word32 ra_137 = ef_get_env_blob(ra, a0, 0x420175A8<32>, 0<32>, s3, mstatus, dwLoc08, dwArg04, dwArg48, dwArg78, dwArgB8, dwArgF8, out s0_25, out s1_139, out a0_16, out s2_197, out s3_151, out s4_154, out s5_198, out s9_199, out s10_200, out s11_201)
	branch a0_16 == 0<32> l2306044A
l2306040E:
	word32 a4_45 = 0<32>
l2306041C:
	word32 a3_52 = CONVERT(Mem12[a4_45 + (s0_25 + 1448<i32>):byte], byte, word32)
	branch a3_52 >u 0xFFFFFF82<32> l23060440
l23060440:
	word32 s11_214
	word32 s10_213
	word32 s9_212
	word32 s7_211
	word32 s6_210
	word32 s5_209
	word32 s2_208
	word32 a5_207
	word32 a2_204
	word32 a4_206
	word32 a3_205
	word32 a1_203
	word32 a0_202
	ra_137 = ef_log_info(ra_137, 0x230C0388<32>, a3_52 + 0xFFFFFFE0<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_139, out a0_202, out a1_203, out a2_204, out a3_205, out a4_206, out a5_207, out s2_208, out s3_151, out s4_154, out s5_209, out s6_210, out s7_211, out s9_212, out s10_213, out s11_214)
l2306044A:
	a0_121 = 0<32>
l2306042A:
	a4_45 = a4_45 + 1<32>
	branch a0_16 != a4_45 l2306041C
l23060430:
	Mem85[s0_25 + 1448<i32> + a0_16:byte] = 0<8>
	a0_121 = s0_25 + 1448<i32>
l23060438:
	s1Out = s1_139
	a0Out = a0_121
	s3Out = s3_151
	s4Out = s4_154
	return ra_137
ef_get_env_exit:


void ef_del_env(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg84, word32 dwArg9C, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      psm_test_cmd
//      psm_unset_cmd
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +009C:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_del_env_entry:
l2306044E:
	branch CONVERT(Mem0[0x4200F50A<32>:byte], byte, word32) != 0<32> l23060472
l23060472:
	branch a0 != 0<32> l23060486
l23060486:
	word32 a3_14
	word32 a4_15
	word32 a2_18
	word32 a1_263
	word32 a5_264
	branch strlen(a0, out a1_263, out a2_18, out a3_14, out a4_15, out a5_264) >u 64<i32> l23060476
l23060492:
	word32 s3_31
	word32 a4_42
	word32 s1_284
	word32 a0_285
	word32 a1_286
	word32 a3_287
	word32 a4_288
	word32 s2_289
	word32 s4_290
	word32 s0_291
	word32 s1_292
	word32 a0_293
	word32 a3_294
	word32 s2_295
	word32 s3_296
	word32 s4_297
	del_env(ra, ef_port_env_lock(a2_18, a3_14, a4_15, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_284, out a0_285, out a1_286, out a3_287, out a4_288, out s2_289, out s3_31, out s4_290), 0<32>, 1<32>, s3_31, dwLoc18, s0, dwArg38, out s0_291, out s1_292, out a0_293, out a3_294, out a4_42, out s2_295, out s3_296, out s4_297)
	word32 s1_298
	word32 a3_299
	word32 a4_300
	word32 s2_301
	word32 s3_302
	word32 s4_303
	word32 s5_304
	ef_port_env_unlock(a4_42, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_298, out a3_299, out a4_300, out s2_301, out s3_302, out s4_303, out s5_304)
l23060476:
	branch Mem10[0x4200F560<32>:int32] != 0<32> l230604A6
l230604A6:
	word32 a5_265
	xTaskGetTickCountFromISR(out a5_265)
l23060480:
	word32 a5_266
	xTaskGetTickCount(out a5_266)
l230604AA:
	word32 s1_267
	word32 a0_268
	word32 a1_269
	word32 a2_270
	word32 a3_271
	word32 a4_272
	word32 a5_273
	word32 s2_274
	word32 s3_275
	word32 s4_276
	word32 s5_277
	word32 s6_278
	word32 s7_279
	word32 s8_280
	word32 s9_281
	word32 s10_282
	word32 s11_283
	bl_printk(ra, 0x230C0300<32>, 0x230C03C8<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_267, out a0_268, out a1_269, out a2_270, out a3_271, out a4_272, out a5_273, out s2_274, out s3_275, out s4_276, out s5_277, out s6_278, out s7_279, out s8_280, out s9_281, out s10_282, out s11_283)
l2306045E:
	word32 s3_255
	word32 s4_256
	word32 a5_253
	word32 s2_254
	word32 a3_251
	word32 a4_252
	word32 a1_249
	word32 a2_250
	word32 s1_247
	word32 a0_248
	word32 s5_257
	word32 s6_258
	word32 s7_259
	word32 s9_260
	word32 s10_261
	word32 s11_262
	ef_log_info(ra, 0x230C02DC<32>, a3, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_247, out a0_248, out a1_249, out a2_250, out a3_251, out a4_252, out a5_253, out s2_254, out s3_255, out s4_256, out s5_257, out s6_258, out s7_259, out s9_260, out s10_261, out s11_262)
l2306046A:
	return
ef_del_env_exit:


word32 ef_set_env_blob(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_set_env
//      psm_test_cmd
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_set_env_blob_entry:
l230604D2:
	word32 ra_105
	word32 s1_279
	word32 s2_280
	word32 s3_281
	branch CONVERT(Mem0[0x4200F50A<32>:byte], byte, word32) != 0<32> l23060510
l23060510:
	word32 a0_311
	branch a0 == 0<32> l23060518
l23060516:
	branch a1 != 0<32> l23060556
l23060556:
	word32 a3_30
	word32 a4_31
	word32 a2_34
	word32 a5_701
	word32 a1_700
	branch strlen(a0, out a1_700, out a2_34, out a3_30, out a4_31, out a5_701) <=u 64<i32> l230605A6
l230605A6:
	branch a2 <=u 0xFFFF8C<32> l230605EC
l230605EC:
	word32 s1_47
	word32 a4_714
	word32 s4_717
	word32 s3_716
	word32 s2_715
	word32 a1_712
	word32 a3_713
	word32 a0_711
	ef_port_env_lock(a2_34, a3_30, a4_31, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, out s1_47, out a0_711, out a1_712, out a3_713, out a4_714, out s2_715, out s3_716, out s4_717)
	word32 a2_719
	word32 a5_722
	word32 a4_721
	word32 a3_720
	word32 a1_718
	strlen(s1_47, out a1_718, out a2_719, out a3_720, out a4_721, out a5_722)
	word32 a0_65
	word32 s1_74
	word32 s6_729
	word32 a3_724
	word32 s4_727
	word32 s5_728
	word32 s3_726
	word32 s2_725
	word32 a1_723
	word32 a4_131
	ra_105 = new_env(ra, 0x42017570<32>, dwLoc18, dwArg00, dwArg04, dwArg28, dwArg30, dwArg34, dwArg4C, s5, dwArg7C, dwArgB8, dwArgE8, out s1_74, out a0_65, out a1_723, out a3_724, out a4_131, out s2_725, out s3_726, out s4_727, out s5_728, out s6_729)
	branch a0_65 == 0xFFFFFFFF<32> l23060664
l2306060E:
	word32 a0_97
	word32 s10_734
	word32 s11_735
	word32 a5_732
	word32 s9_733
	word32 s0_730
	word32 a4_731
	word32 s3_111
	word32 s1_107
	word32 s2_110
	ra_105 = find_env(ra_105, s1_74, 0x42017498<32>, s0, dwLoc08, dwArg38, dwArgB8, out s0_730, out s1_107, out a0_97, out a4_731, out a5_732, out s2_110, out s3_111, out s9_733, out s10_734, out s11_735)
	branch a0_97 != 0<32> l23060646
l23060646:
	word32 a0_154
	word32 s4_754
	word32 s0_752
	word32 a3_753
	ra_105 = del_env(ra_105, s1_107, s2_110 + 1176<i32>, 0<32>, s3_111, s6, s4, dwArg28, out s0_752, out s1_107, out a0_154, out a3_753, out a4_131, out s2_110, out s3_111, out s4_754)
	branch a0_154 == 0<32> l23060620
l23060620:
	word32 s1_178
	word32 s2_181
	word32 s3_182
	word32 s6_185
	word32 a0_196
	word32 a3_737
	word32 a1_736
	ra_105 = create_env_blob(ra_105, s1_107, s1_107, s3_111, s2_110, s4, s2, s0, dwLoc18, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg18, dwArg3C, dwArg4C, dwArg78, dwArgA8, out s1_178, out a0_196, out a1_736, out a3_737, out a4_131, out s2_181, out s3_182, out s6_185)
	branch s6_185 == 0<32> l23060656
l23060634:
	branch a0_196 != 0<32> l23060656
l23060636:
	word32 s3_743
	word32 s4_744
	word32 a0_740
	word32 a3_741
	word32 s2_742
	word32 s0_738
	word32 s1_739
	ra_105 = del_env(ra_105, s1_178, s2_181 + 1176<i32>, 1<32>, s3_182, s6, s4, dwArg28, out s0_738, out s1_739, out a0_740, out a3_741, out a4_131, out s2_742, out s3_743, out s4_744)
l23060656:
	branch CONVERT(Mem22[0x4200F508<32>:byte], byte, word32) == 0<32> l23060664
l23060660:
	word32 s2_746
	word32 s4_747
	word32 s1_745
	ra_105 = gc_collect(ra_105, dwArg10, dwArg14, dwArg38, s3, dwArgC8, out s1_745, out a4_131, out s2_746, out s4_747)
l23060664:
	word32 s4_750
	word32 s5_751
	word32 a3_748
	word32 a4_749
	ef_port_env_unlock(a4_131, mstatus, s6, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_279, out a3_748, out a4_749, out s2_280, out s3_281, out s4_750, out s5_751)
l230605B0:
	branch Mem22[0x4200F560<32>:int32] == 0<32> l230605E6
l230605E6:
	word32 a5_710
	xTaskGetTickCount(out a5_710)
l230605BA:
	word32 a5_709
	xTaskGetTickCountFromISR(out a5_709)
l230605BE:
	a0_311 = 0x230C04CC<32>
l23060564:
	branch Mem22[0x4200F560<32>:int32] == 0<32> l230605A0
l230605A0:
	word32 a5_708
	xTaskGetTickCount(out a5_708)
l2306056E:
	word32 a5_702
	xTaskGetTickCountFromISR(out a5_702)
l23060572:
	word32 a2_704
	word32 a5_707
	word32 a4_706
	word32 a3_705
	word32 a1_703
	strlen(a0, out a1_703, out a2_704, out a3_705, out a4_706, out a5_707)
	a0_311 = 0x230C0414<32>
l23060518:
	branch Mem22[0x4200F560<32>:int32] == 0<32> l23060550
l23060550:
	word32 a5_699
	xTaskGetTickCount(out a5_699)
l23060522:
	word32 a5_684
	xTaskGetTickCountFromISR(out a5_684)
l23060526:
	a0_311 = 0x230C03E4<32>
l23060548:
	word32 a5_690
	word32 s7_694
	word32 s10_697
	word32 s11_698
	word32 s9_696
	word32 s8_695
	word32 s4_691
	word32 s5_692
	word32 s6_693
	word32 a0_685
	word32 a3_688
	word32 a4_689
	word32 a2_687
	word32 a1_686
	ra_105 = bl_printk(ra, a0_311, 0x230C03C8<32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_279, out a0_685, out a1_686, out a2_687, out a3_688, out a4_689, out a5_690, out s2_280, out s3_281, out s4_691, out s5_692, out s6_693, out s7_694, out s8_695, out s9_696, out s10_697, out s11_698)
l230604EE:
	word32 s9_681
	word32 s10_682
	word32 s11_683
	word32 a0_671
	word32 s7_680
	word32 a3_674
	word32 a1_672
	word32 a2_673
	word32 s5_678
	word32 a5_676
	word32 s4_677
	word32 s6_679
	word32 a4_675
	ra_105 = ef_log_info(ra, 0x230C043C<32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_279, out a0_671, out a1_672, out a2_673, out a3_674, out a4_675, out a5_676, out s2_280, out s3_281, out s4_677, out s5_678, out s6_679, out s7_680, out s9_681, out s10_682, out s11_683)
l230604FA:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_279
	s2Out = s2_280
	s3Out = s3_281
	s4Out = dwArg78
	s8Out = s5
	return ra_105
ef_set_env_blob_exit:


word32 ef_set_env(word32 ra, word32 a0, word32 a1, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg38, word32 dwArg3C, word32 dwArg40, word32 dwArg44, word32 dwArg4C, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg8C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      psm_set_cmd
//      at_key_value_set
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +008C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: ra s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_set_env_entry:
l23060668:
	word32 a3_14
	word32 a1_17
	word32 a2_91
	word32 a4_92
	word32 a5_93
	strlen(a1, out a1_17, out a2_91, out a3_14, out a4_92, out a5_93)
l23060684_thunk_ef_set_env_blob:
	word32 s0_39
	word32 s1_40
	word32 s4_45
	word32 s2_94
	word32 s3_95
	word32 s8_96
	word32 ra_38 = ef_set_env_blob(ra, a0, a0, a1_17, dwArg44, a3_14, s2, s3, s4, s5, s6, mstatus, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, dwArg28, dwArg30, dwArg34, dwArg38, dwArg3C, dwArg40, dwArg44, dwArg4C, dwArg68, dwArg74, dwArg78, dwArg7C, dwArg8C, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArg0128, dwArg0168, out s0_39, out s1_40, out s2_94, out s3_95, out s4_45, out s8_96)
	s0Out = s0_39
	s1Out = s1_40
	s4Out = s4_45
	return ra_38
ef_set_env_exit:


void ef_save_env()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      psm_unset_cmd
//      psm_set_cmd
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
ef_save_env_entry:
l23060688:
	return
ef_save_env_exit:


word32 ef_env_set_default(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s4, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg2C, word32 dwArg3C, word32 dwArg58, word32 dwArg6C, word32 dwArg88, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_load_env
//      psm_erase_cmd
//      restory
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s4:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a2 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_env_set_default_entry:
l2306068C:
	branch Mem5[0x4200F4FC<32>:int32] != 0<32> l230606CE
l230606CE:
	branch Mem19[0x4200F500<32>:int32] != 0<32> l23060704
l23060704:
	word32 s4_424
	word32 s3_423
	word32 s1_422
	word32 s2_142
	word32 a4_133
	word32 a3_108
	word32 a0_100
	word32 a1_106
	ef_port_env_lock(a2, a3, a4, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, out s1_422, out a0_100, out a1_106, out a3_108, out a4_133, out s2_142, out s3_423, out s4_424)
	word32 s1_43 = Mem19[0x4200F504<32>:int32]
	word32 s3_45 = 0x4200F504<32>
	word32 s4_46 = 0x8000000<32>
	ra_128 = ra
l2306071A:
	word32 ra_128
	branch s1_43 <u Mem19[s3_45:int32] + s4_46 l2306074C
l2306074C:
	word32 s1_64
	word32 s5_75
	ra_128 = format_sector.constprop.16(ra_128, s1_43, s2_142, s4, dwLoc20, dwLoc1C, dwLoc10, dwLoc0C, dwArg08, dwArg18, dwArg2C, dwArg3C, out s1_64, out a0_100, out a1_106, out a3_108, out a4_133, out s2_142, out s3_45, out s4_46, out s5_75)
	branch a0_100 != 0<32> l23060734
l23060754:
	s1_43 = s1_64 + s5_75
l23060724:
	word32 s1_139 = 0<32>
l2306072A:
	branch s1_139 <u Mem91[s2_142:int32] l23060758
l23060758:
	branch a3_108 != 0<32> l2306076C
l23060764:
	word32 a5_446
	word32 a4_445
	word32 a3_444
	word32 a2_443
	a3_108 = strlen(a0_100, out a1_106, out a2_443, out a3_444, out a4_445, out a5_446)
l2306076C:
	word32 s3_441
	word32 s6_442
	ra_128 = create_env_blob(ra_128, s1_139 + 1<32>, a1_106, a3_108, s2_142, dwLoc44, dwLoc40, dwLoc3C, dwLoc38, s2, s0, dwLoc20, dwLoc1C, dwLoc18, dwLoc14, dwLoc08, dwArg1C, dwArg2C, dwArg58, dwArg88, out s1_139, out a0_100, out a1_106, out a3_108, out a4_133, out s2_142, out s3_441, out s6_442)
l23060732:
l23060734:
	word32 a4_171
	word32 s3_438
	word32 s4_439
	word32 s5_440
	word32 s2_437
	word32 a3_436
	word32 s1_435
	ef_port_env_unlock(a4_133, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1_435, out a3_436, out a4_171, out s2_437, out s3_438, out s4_439, out s5_440)
	a2Out = dwLoc0C
	a3Out = s2
	a4Out = a4_171
	return dwLoc08
ef_env_set_default_exit:
l230606DC:
	word32 s1_425
	word32 a0_426
	word32 a1_427
	word32 a3_428
	word32 s5_433
	word32 s6_434
	word32 a4_429
	word32 s2_430
	word32 s4_432
	word32 s3_431
	ef_log_debug(ra, 0x230C0664<32>, 0x230C0370<32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_425, out a0_426, out a1_427, out a3_428, out a4_429, out s2_430, out s3_431, out s4_432, out s5_433, out s6_434)
l23060702:
l230606A6:
	word32 s6_421
	word32 s5_420
	word32 s3_418
	word32 a4_416
	word32 a1_414
	word32 s1_412
	word32 s4_419
	word32 s2_417
	word32 a3_415
	word32 a0_413
	ef_log_debug(ra, 0x230C0664<32>, 0x230C0360<32>, dwLoc48, dwLoc28, dwArg20, dwArg24, s5, dwArg6C, out s1_412, out a0_413, out a1_414, out a3_415, out a4_416, out s2_417, out s3_418, out s4_419, out s5_420, out s6_421)
l230606CC:


void ef_print_env(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg34, word32 dwArg4C, word32 dwArg68, word32 dwArgA8, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      psm_dump_cmd
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_print_env_entry:
l23060780:
	branch CONVERT(Mem0[0x4200F50A<32>:byte], byte, word32) != 0<32> l230607A0
l230607A0:
	word32 s2_23
	word32 s4_25
	word32 s1_231
	word32 a0_232
	word32 a1_233
	word32 a3_234
	word32 a4_235
	word32 s3_236
	ef_port_env_lock(a2, a3, a4, mstatus, dwLoc68, dwLoc4C, dwArg34, dwArgA8, dwArgE8, out s1_231, out a0_232, out a1_233, out a3_234, out a4_235, out s2_23, out s3_236, out s4_25)
	word32 a3_36
	word32 a3_67
	word32 a4_95
	word32 s0_237
	word32 a4_238
	word32 a5_239
	word32 s2_240
	word32 s3_241
	word32 s5_242
	word32 s10_243
	word32 s11_244
	word32 s1_245
	word32 a0_246
	word32 a1_247
	word32 a4_248
	word32 a5_249
	word32 s2_250
	word32 s3_251
	word32 s4_252
	word32 s6_253
	word32 s7_254
	word32 s1_255
	word32 a0_256
	word32 a1_257
	word32 a3_258
	word32 a5_259
	word32 s2_260
	word32 s3_261
	word32 s4_262
	word32 s6_263
	word32 s7_264
	ef_print(ef_print(env_iterator(ra, fp + -104<i32>, s2_23, s4_25, dwLoc54, dwArg28, dwArg68, dwArgE8, out s0_237, out a3_36, out a4_238, out a5_239, out s2_240, out s3_241, out s5_242, out s10_243, out s11_244), 0x230C0498<32>, a3_36, dwLoc68, dwLoc48, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_245, out a0_246, out a1_247, out a3_67, out a4_248, out a5_249, out s2_250, out s3_251, out s4_252, out s6_253, out s7_254), 0x230C04B4<32>, a3_67, dwLoc68, dwLoc48, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_255, out a0_256, out a1_257, out a3_258, out a4_95, out a5_259, out s2_260, out s3_261, out s4_262, out s6_263, out s7_264)
	word32 s1_265
	word32 a3_266
	word32 a4_267
	word32 s2_268
	word32 s3_269
	word32 s4_270
	word32 s5_271
	ef_port_env_unlock(a4_95, mstatus, dwLoc68, dwLoc4C, dwArg34, dwArgA8, dwArgE8, dwArg0128, out s1_265, out a3_266, out a4_267, out s2_268, out s3_269, out s4_270, out s5_271)
l23060790:
	word32 s1_215
	word32 a0_216
	word32 a1_217
	word32 a2_218
	word32 a3_219
	word32 a4_220
	word32 a5_221
	word32 s2_222
	word32 s3_223
	word32 s4_224
	word32 s5_225
	word32 s6_226
	word32 s7_227
	word32 s9_228
	word32 s10_229
	word32 s11_230
	ef_log_info(ra, 0x230C043C<32>, a3, dwLoc68, dwLoc48, dwArg00, dwArg04, dwArg28, dwArg4C, out s1_215, out a0_216, out a1_217, out a2_218, out a3_219, out a4_220, out a5_221, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_227, out s9_228, out s10_229, out s11_230)
l2306079A:
	return
ef_print_env_exit:


word32 ef_load_env(word32 ra, word32 s0, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg2C, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArg0108, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_env_init
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +002C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a3 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_load_env_entry:
l230607D4:
	Mem9[0x4200F509<32>:byte] = 1<8>
	word32 s0_32
	word32 s5_343
	word32 s3_341
	word32 a5_339
	word32 a0_337
	word32 s6_344
	word32 s4_342
	word32 s2_340
	word32 a1_338
	word32 s1_336
	word32 a4_108
	word32 a3_109
	word32 ra_135 = sector_iterator(ra, fp + -128<i32>, dwArg98, out s0_32, out s1_336, out a0_337, out a1_338, out a3_109, out a4_108, out a5_339, out s2_340, out s3_341, out s4_342, out s5_343, out s6_344)
	word32 a2_110 = ra
	branch a4_108 != 8<32> l2306081A
l2306080C:
	word32 a2_58
	word32 a3_59
	word32 a4_60
	word32 s2_67
	word32 s4_69
	word32 s5_70
	word32 a5_367
	word32 a1_366
	word32 a0_365
	word32 s1_364
	word32 s3_368
	word32 s6_369
	word32 s7_370
	word32 s9_371
	word32 s10_372
	word32 s11_373
	ra_135 = ef_env_set_default(ef_log_info(ra_135, 0x230C0458<32>, a3_109, dwLoc88, dwLoc68, dwLoc20, dwLoc1C, dwArg08, dwArg2C, out s1_364, out a0_365, out a1_366, out a2_58, out a3_59, out a4_60, out a5_367, out s2_67, out s3_368, out s4_69, out s5_70, out s6_369, out s7_370, out s9_371, out s10_372, out s11_373), s0_32 + 1289<i32>, a2_58, a3_59, a4_60, s2_67, s4_69, s5_70, mstatus, dwLoc88, dwLoc78, dwLoc74, dwLoc70, dwLoc6C, dwLoc64, dwLoc54, dwLoc38, dwLoc24, dwLoc08, dwArg38, dwArg78, dwArgB8, out a2_110, out a3_109, out a4_108)
l2306081A:
	word32 s3_351
	word32 s2_350
	word32 a4_349
	word32 a1_347
	word32 s1_345
	word32 s4_352
	word32 a3_348
	word32 a0_346
	ef_port_env_lock(a2_110, a3_109, a4_108, mstatus, dwLoc88, dwLoc6C, dwArg14, dwArg88, dwArgC8, out s1_345, out a0_346, out a1_347, out a3_348, out a4_349, out s2_350, out s3_351, out s4_352)
	word32 s6_363
	word32 s5_362
	word32 s3_361
	word32 a5_359
	word32 a3_357
	word32 a0_355
	word32 s1_354
	word32 s0_353
	word32 s2_360
	word32 a4_358
	word32 a1_356
	word32 s4_151
	word32 ra_144 = sector_iterator(ra_135, fp + -128<i32>, dwArg98, out s0_353, out s1_354, out a0_355, out a1_356, out a3_357, out a4_358, out a5_359, out s2_360, out s3_361, out s4_151, out s5_362, out s6_363)
	word32 s2_165 = 0x4200F000<32>
l2306083A:
	word32 a4_179
	word32 s0_182
	word32 s2_184
	word32 a3_382
	word32 a5_383
	word32 s3_384
	word32 s5_385
	word32 s10_386
	word32 s11_387
	word32 ra_193 = env_iterator(ra_144, fp + -104<i32>, s2_165, s4_151, dwLoc74, dwArg08, dwArg48, dwArgC8, out s0_182, out a3_382, out a4_179, out a5_383, out s2_184, out s3_384, out s5_385, out s10_386, out s11_387)
	branch CONVERT(Mem22[s2_184 + 1288<i32>:byte], byte, word32) == 0<32> l23060854
l23060854:
	Mem205[s0_182:byte] = 0<8>
	word32 a3_210
	word32 s1_374
	word32 a4_375
	word32 s2_376
	word32 s3_377
	word32 s4_378
	word32 s5_379
	s0Out = ef_port_env_unlock(a4_179, mstatus, dwLoc88, dwLoc6C, dwArg14, dwArg88, dwArgC8, dwArg0108, out s1_374, out a3_210, out a4_375, out s2_376, out s3_377, out s4_378, out s5_379)
	a0Out = 0<32>
	a3Out = a3_210
	return ra_193
ef_load_env_exit:
l2306084E:
	word32 s1_380
	word32 a4_381
	ra_144 = gc_collect(ra_193, s2, s0, dwLoc28, dwLoc04, dwArg68, out s1_380, out a4_381, out s2_165, out s4_151)


word32 ef_env_init(word32 ra, word32 a0, word32 a1, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgF8, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      easyflash_init
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
ef_env_init_entry:
l23060868:
	branch a0 != 0<32> l23060898
l23060898:
	word32 a3_11 = a0
	word32 a0_13 = 0<32>
	branch CONVERT(Mem7[0x4200F50A<32>:byte], byte, word32) != 0<32> l23060910
l230608AA:
	Mem17[0xFFFFFFFF<32>:word32] = 0x42017588<32>
	Mem18[7<32>:word32] = 0x42017588<32>
	Mem19[0xF<32>:word32] = 0x42017588<32>
	Mem20[0x17<32>:word32] = 0x42017588<32>
	word32 a5_22 = 0x420174F0<32>
l230608CA:
	Mem27[3<32>:word32] = a5_22
	a5_22 = a5_22 + 8<32>
	branch a5_22 != 0x42017570<32> l230608CA
l230608D2:
	Mem31[0x4200F504<32>:word32] = 0<32>
	Mem34[0x4200F4FC<32>:word32] = a0
	Mem40[0x4200F500<32>:word32] = a1
	word32 s2_59
	word32 s0_82
	word32 s1_236
	word32 a0_237
	word32 a1_238
	word32 a3_239
	word32 a4_240
	word32 s3_241
	word32 s4_242
	word32 s5_243
	word32 s6_244
	ra = ef_load_env(ef_log_debug(ra, 0x230C032C<32>, 0<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_236, out a0_237, out a1_238, out a3_239, out a4_240, out s2_59, out s3_241, out s4_242, out s5_243, out s6_244), 0x4200F50A<32>, s2_59, mstatus, dwLoc08, dwArg04, dwArg1C, dwArg28, dwArg38, dwArg58, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgF8, out s0_82, out a0_13, out a3_11)
	branch a0_13 != 0<32> l23060910
l2306090A:
	Mem102[s0_82:byte] = 1<8>
l23060910:
	a0Out = a0_13
	a3Out = a3_11
	return ra
ef_env_init_exit:
l23060870:
	word32 s1_226
	word32 a0_227
	word32 a1_228
	word32 a3_229
	word32 a4_230
	word32 s2_231
	word32 s3_232
	word32 s4_233
	word32 s5_234
	word32 s6_235
	ef_log_debug(ra, 0x230C0664<32>, 0x230C0320<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_226, out a0_227, out a1_228, out a3_229, out a4_230, out s2_231, out s3_232, out s4_233, out s5_234, out s6_235)
l23060896:


word32 ef_port_read(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      read_env
//      print_env_cb
//      get_next_env_addr
//      read_sector_meta_data
//      find_env
//      del_env
//      move_env
//      ef_get_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra
// Preserved: sp
ef_port_read_entry:
l23060918:
	word32 a0_14
	word32 a1_15
	word32 a3_17
	word32 a4_18
	word32 ra_20 = bl_mtd_read(ra, Mem0[0x4200F510<32>:int32], a0, a2, a1, out a0_14, out a1_15, out a3_17, out a4_18)
	a0Out = CONVERT(a0_14 < 0<i32>, bool, word32) << 1<i32>
	a1Out = a1_15
	a3Out = a3_17
	a4Out = a4_18
	return ra_20
ef_port_read_exit:


word32 ef_port_write(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg4C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      write_status
//      format_sector.constprop.16
//      move_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +004C:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6
// Preserved: sp
ef_port_write_entry:
l23060938:
	word32 a0_43
	word32 a0_16
	word32 a1_17
	word32 a3_19
	word32 a4_20
	word32 a5_21
	word32 s0_24
	word32 s1_25
	word32 s2_26
	word32 s5_27
	word32 s3_33
	word32 s4_34
	word32 s6_35
	word32 s7_36
	word32 ra_23 = bl_mtd_write(ra, s1, a0, a2, a1, s2, dwArg00, dwArg04, dwArg28, dwArg4C, out s0_24, out s1_25, out a0_16, out a1_17, out a3_19, out a4_20, out a5_21, out s2_26, out s3_33, out s4_34, out s5_27, out s6_35, out s7_36)
	branch a0_16 >= 0<32> l23060958
l23060958:
	a0_43 = 0<32>
l23060950:
	a0_43 = 3<32>
l23060952:
	s0Out = s0_24
	s1Out = s1_25
	a0Out = a0_43
	a1Out = a1_17
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_21
	s2Out = s2_26
	s3Out = s3_33
	s4Out = s4_34
	s5Out = s5_27
	s6Out = s6_35
	s7Out = s7_36
	s10Out = s10_31
	s11Out = s11_32
	return ra_23
ef_port_write_exit:


word32 ef_port_env_lock(word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_get_env_blob
//      ef_del_env
//      ef_set_env
//      ef_env_set_default
//      ef_load_env
//      psm_dump_cmd
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
ef_port_env_lock_entry:
l2306095C:
	word32 a0_5 = Mem0[0x4200F50C<32>:int32]
l23060966_thunk_xQueueSemaphoreTake:
	word32 a0_11
	word32 a1_12
	word32 a3_14
	word32 a4_15
	word32 s1_19
	word32 s2_20
	word32 s3_21
	word32 s4_22
	word32 a2_39
	word32 a5_40
	word32 s8_41
	word32 s0_18 = xQueueSemaphoreTake(a0_5, 0xFFFFFFFF<32>, a2, a3, a4, 0x4200F000<32>, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, out s1_19, out a0_11, out a1_12, out a2_39, out a3_14, out a4_15, out a5_40, out s2_20, out s3_21, out s4_22, out s8_41)
	s1Out = s1_19
	a0Out = a0_11
	a1Out = a1_12
	a3Out = a3_14
	a4Out = a4_15
	s2Out = s2_20
	s3Out = s3_21
	s4Out = s4_22
	return s0_18
ef_port_env_lock_exit:


word32 ef_port_env_unlock(word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ef_get_env_blob
//      ef_del_env
//      ef_set_env
//      ef_env_set_default
//      ef_load_env
//      psm_dump_cmd
// MayUse:  a4:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a3 a4 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ef_port_env_unlock_entry:
l2306096A:
	word32 a0_5 = Mem0[0x4200F50C<32>:int32]
l23060978_thunk_xQueueGenericSend:
	word32 a3_14
	word32 a4_15
	word32 s1_20
	word32 s2_21
	word32 s3_22
	word32 s4_23
	word32 s5_24
	word32 a0_47
	word32 a1_48
	word32 a2_49
	word32 a5_50
	word32 a7_51
	word32 s6_52
	word32 s8_53
	word32 s0_19 = xQueueGenericSend(a0_5, 0<32>, 0<32>, a4, 0x4200F000<32>, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_20, out a0_47, out a1_48, out a2_49, out a3_14, out a4_15, out a5_50, out a7_51, out s2_21, out s3_22, out s4_23, out s5_24, out s6_52, out s8_53)
	s1Out = s1_20
	a3Out = a3_14
	a4Out = a4_15
	s2Out = s2_21
	s3Out = s3_22
	s4Out = s4_23
	s5Out = s5_24
	return s0_19
ef_port_env_unlock_exit:


word32 ef_log_debug(word32 ra, word32 a2, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      write_status
//      read_env
//      format_sector.constprop.16
//      read_sector_meta_data
//      alloc_env
//      gc_collect
//      new_env
//      del_env
//      move_env
//      check_and_recovery_env_cb
//      do_gc
//      create_env_blob
//      ef_env_set_default
//      ef_env_init
//      ef_port_erase
// MayUse:  a2:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a3 a4 ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ef_log_debug_entry:
l2306097C:
	word32 a0_21
	word32 a1_22
	word32 a3_24
	word32 a4_25
	word32 s1_28
	word32 s2_31
	word32 s3_32
	word32 s4_33
	word32 s5_34
	word32 s6_35
	word32 a2_68
	word32 a5_69
	word32 a7_70
	word32 s7_71
	word32 s8_72
	word32 s9_73
	word32 s10_74
	word32 s11_75
	word32 t4_76
	word32 ra_27 = vprint(ra, a2, fp + -20<i32>, dwArg08, dwArg28, a3, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_28, out a0_21, out a1_22, out a2_68, out a3_24, out a4_25, out a5_69, out a7_70, out s2_31, out s3_32, out s4_33, out s5_34, out s6_35, out s7_71, out s8_72, out s9_73, out s10_74, out s11_75, out t4_76)
	s1Out = s1_28
	a0Out = a0_21
	a1Out = a1_22
	a3Out = a3_24
	a4Out = a4_25
	s2Out = s2_31
	s3Out = s3_32
	s4Out = s4_33
	s5Out = s5_34
	s6Out = s6_35
	return ra_27
ef_log_debug_exit:


word32 ef_port_erase(word32 ra, word32 a0, word32 a1, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      format_sector.constprop.16
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a0 a1 a4 ra
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: sp
ef_port_erase_entry:
l2306099A:
	branch a0 << 0x14<u32> == 0<32> l230609CE
l230609CE:
	word32 a0_13
	word32 a1_14
	word32 a4_16
	word32 ra_18 = bl_mtd_erase(ra, Mem5[0x4200F510<32>:int32], a0, a1, out a0_13, out a1_14, out a4_16)
	a0Out = a0_13 >>u 31<i32>
	a1Out = a1_14
	a4Out = a4_16
	return ra_18
ef_port_erase_exit:
l230609A4:
	word32 s1_64
	word32 a0_65
	word32 a1_66
	word32 a3_67
	word32 a4_68
	word32 s2_69
	word32 s3_70
	word32 s4_71
	word32 s5_72
	word32 s6_73
	ef_log_debug(ra, 0x230C0664<32>, 0x230C06FC<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_64, out a0_65, out a1_66, out a3_67, out a4_68, out s2_69, out s3_70, out s4_71, out s5_72, out s6_73)
l230609CC:


word32 ef_log_info(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out, ptr32 & s11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      easyflash_init
//      check_sec_hdr_cb
//      read_sector_meta_data
//      check_and_recovery_env_cb
//      create_env_blob
//      ef_get_env_blob
//      ef_get_env
//      ef_del_env
//      ef_set_env
//      ef_load_env
//      ef_port_init
//      psm_dump_cmd
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ef_log_info_entry:
l230609E6:
	word32 a5_23
	word32 a0_24
	word32 a1_25
	word32 a2_26
	word32 a3_27
	word32 a4_28
	word32 s1_31
	word32 s10_32
	word32 s11_33
	word32 s2_34
	word32 s3_35
	word32 s4_36
	word32 s5_37
	word32 s6_38
	word32 s7_39
	word32 s9_41
	word32 a7_79
	word32 s8_80
	word32 t4_81
	word32 ra_30 = vprint(ra, a0, fp + -28<i32>, dwArg08, dwArg28, a3, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_31, out a0_24, out a1_25, out a2_26, out a3_27, out a4_28, out a5_23, out a7_79, out s2_34, out s3_35, out s4_36, out s5_37, out s6_38, out s7_39, out s8_80, out s9_41, out s10_32, out s11_33, out t4_81)
	s1Out = s1_31
	a0Out = a0_24
	a1Out = a1_25
	a2Out = a2_26
	a3Out = a3_27
	a4Out = a4_28
	a5Out = a5_23
	s2Out = s2_34
	s3Out = s3_35
	s4Out = s4_36
	s5Out = s5_37
	s6Out = s6_38
	s7Out = s7_39
	s9Out = s9_41
	s10Out = s10_32
	s11Out = s11_33
	return ra_30
ef_log_info_exit:


word32 ef_port_init(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg40, word32 dwArg44, word32 dwArg5C, word32 dwArg68, word32 dwArg84, word32 dwArg8C, word32 dwArg98, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      easyflash_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0084:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
ef_port_init_entry:
l23060A06:
	word32 a0_27
	word32 a3_30
	word32 s0_34
	word32 s2_36
	word32 s5_227
	word32 s6_228
	word32 ra_43 = bl_mtd_open(ra, 0x230C0768<32>, a3, a4, a5, s3, mstatus, s2, s0, dwArg10, dwArg14, dwArg38, dwArg5C, dwArg84, dwArg98, dwArgD8, dwArgF8, dwArg0118, out s0_34, out a0_27, out a3_30, out s2_36, out s5_227, out s6_228)
	branch a0_27 >= 0<32> l23060A4E
l23060A4E:
	word32 a3_60
	word32 t1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a4_233
	word32 a5_234
	word32 ra_63 = memset(ra_43, fp + -44<i32>, 0<32>, 0x1C<32>, out t1_229, out a0_230, out a1_231, out a2_232, out a3_60, out a4_233, out a5_234)
	bl_mtd_info(Mem21[s2_36:int32], fp + -44<i32>)
	word32 a3_82
	word32 s1_87
	word32 a0_235
	word32 a1_236
	word32 a2_237
	word32 a4_238
	word32 a5_239
	word32 s2_240
	word32 s3_241
	word32 s4_242
	word32 s5_243
	word32 s6_244
	word32 s7_245
	word32 s9_246
	word32 s10_247
	word32 s11_248
	word32 ra_86 = ef_log_info(ra_63, 0x230C07E4<32>, a3_60, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_87, out a0_235, out a1_236, out a2_237, out a3_82, out a4_238, out a5_239, out s2_240, out s3_241, out s4_242, out s5_243, out s6_244, out s7_245, out s9_246, out s10_247, out s11_248)
	Mem103[0x230C06F0<32>:word32] = s1_87
	Mem106[1<32>:word32] = s0_34
	word32 a5_110
	word32 a3_114
	word32 a4_115
	word32 s1_249
	word32 a0_250
	word32 a1_251
	word32 a2_252
	word32 a7_253
	word32 s2_254
	word32 s3_255
	word32 s4_256
	word32 s5_257
	word32 s6_258
	word32 s7_259
	word32 s8_260
	word32 s9_261
	word32 s10_262
	word32 s11_263
	word32 t4_264
	word32 ra_117 = printf(ra_86, 0x230C0828<32>, a3_82, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_249, out a0_250, out a1_251, out a2_252, out a3_114, out a4_115, out a5_110, out a7_253, out s2_254, out s3_255, out s4_256, out s5_257, out s6_258, out s7_259, out s8_260, out s9_261, out s10_262, out s11_263, out t4_264)
	word32 a1_132
	word32 a3_134
	word32 a0_145
	word32 a4_265
	word32 a5_266
	word32 s2_267
	word32 s3_268
	xQueueCreateMutex(ra_117, a3_114, a4_115, a5_110, mstatus, s2, s0, ra, dwArgD8, dwArg0118, dwArg0158, out a0_145, out a1_132, out a3_134, out a4_265, out a5_266, out s2_267, out s3_268)
	Mem157[0x4200F50C<32>:word32] = a0_145
	0<32> = dwArg0128
	a0Out = 0<32>
	a1Out = a1_132
	a3Out = a3_134
	return ra_117
ef_port_init_exit:
l23060A32:
	word32 s1_269
	word32 a0_270
	word32 a1_271
	word32 a2_272
	word32 a3_273
	word32 a4_274
	word32 a5_275
	word32 s2_276
	word32 s3_277
	word32 s4_278
	word32 s5_279
	word32 s6_280
	word32 s7_281
	word32 s9_282
	word32 s10_283
	word32 s11_284
	ef_log_info(ra_43, 0x230C076C<32>, a3_30, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_269, out a0_270, out a1_271, out a2_272, out a3_273, out a4_274, out a5_275, out s2_276, out s3_277, out s4_278, out s5_279, out s6_280, out s7_281, out s9_282, out s10_283, out s11_284)
	word32 a0_285
	word32 a1_286
	word32 a2_287
	word32 a4_288
	word32 a5_289
	word32 s4_290
	word32 s8_291
	puts(0x230C07A0<32>, out a0_285, out a1_286, out a2_287, out a4_288, out a5_289, out s4_290, out s8_291)
l23060A4C:


word32 ef_print(word32 ra, word32 a0, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg70, word32 dwArg74, word32 dwArg98, word32 dwArgBC, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      print_env_cb
//      psm_dump_cmd
// MayUse:  a0:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s1 s2 s3 s4 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
ef_print_entry:
l23060AAA:
	word32 a5_23
	word32 a0_24
	word32 a1_25
	word32 a3_27
	word32 a4_28
	word32 s1_31
	word32 s2_34
	word32 s3_35
	word32 s4_36
	word32 s6_38
	word32 s7_39
	word32 a2_74
	word32 a7_75
	word32 s5_76
	word32 s8_77
	word32 s9_78
	word32 s10_79
	word32 s11_80
	word32 t4_81
	word32 ra_30 = vprint(ra, a0, fp + -28<i32>, dwArg08, dwArg28, a3, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_31, out a0_24, out a1_25, out a2_74, out a3_27, out a4_28, out a5_23, out a7_75, out s2_34, out s3_35, out s4_36, out s5_76, out s6_38, out s7_39, out s8_77, out s9_78, out s10_79, out s11_80, out t4_81)
	s1Out = s1_31
	a0Out = a0_24
	a1Out = a1_25
	a3Out = a3_27
	a4Out = a4_28
	a5Out = a5_23
	s2Out = s2_34
	s3Out = s3_35
	s4Out = s4_36
	s6Out = s6_38
	s7Out = s7_39
	return ra_30
ef_print_exit:


word32 ef_calc_crc32(word32 a0, word32 a1, word32 a2, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      update_env_cache
//      read_env
//      find_env
//      create_env_blob
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
ef_calc_crc32_entry:
l23060ACA:
	word32 a0_15 = ~a0
	word32 a2_8 = a2 + a1
l23060AD8:
	branch a1 != a2_8 l23060AE2
l23060AE2:
	a1 = a1 + 1<32>
	a5 = Mem0[(((CONVERT(Mem0[a1 + -1<i32>:byte], byte, word32) ^ a0_15) & 255<i32>) << 2<i32>) + 0x230C0854<32>:word32]
	a0_15 = a0_15 >>u 8<i32> ^ a5
l23060ADC:
	a2Out = a2_8
	a4Out = 0x230C0854<32>
	a5Out = a5
	return ~a0_15
ef_calc_crc32_exit:


void psm_get_cmd()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
psm_get_cmd_entry:
l23060AFA:
	return
psm_get_cmd_exit:


void psm_test_cmd(word32 ra, word32 s1, word32 s2, word32 s7, word32 s9, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg58, word32 dwArg5C, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
psm_test_cmd_entry:
l23060AFC:
	word32 a6_1145
	word32 a1_1143
	word32 a7_1146
	word32 a2_1144
	word32 a5_36
	word32 a3_367
	word32 a4_35
	memcpy(fp + -88<i32>, 0x230C0C54<32>, 0x18<32>, out a1_1143, out a2_1144, out a3_367, out a4_35, out a5_36, out a6_1145, out a7_1146)
	word32 s0_34 = fp + -88<i32>
	word32 s5_142 = 0x230C1000<32>
	s1_247 = s1
l23060B3E:
	word32 a2_242
	word32 a5_238
	word32 s2_250
	word32 s1_247
	word32 s6_55 = Mem54[s0_34:int32]
	word32 a0_66
	word32 a3_69
	word32 a4_70
	word32 a5_71
	word32 s3_76
	word32 s1_1184
	word32 a1_1185
	word32 a2_1186
	word32 s2_1188
	word32 s8_1190
	word32 s4_1189
	word32 a6_1187
	pvPortMalloc(ra, s1_247, s6_55 + 1<i32>, a3_367, a4_35, a5_36, mstatus, dwLoc20, dwLoc1C, dwArg2C, dwArgD8, dwArg0118, out s1_1184, out a0_66, out a1_1185, out a2_1186, out a3_69, out a4_70, out a5_71, out a6_1187, out s2_1188, out s3_76, out s4_1189, out s8_1190)
	word32 a0_83
	word32 s1_91
	word32 s3_93
	word32 s4_94
	word32 s8_95
	word32 a4_1194
	word32 a5_1195
	word32 a6_1196
	word32 s2_1197
	word32 a2_1192
	word32 a3_1193
	word32 a1_1191
	word32 s0_407 = pvPortMalloc(ra, a0_66, s3_76, a3_69, a4_70, a5_71, mstatus, dwLoc20, dwLoc1C, dwArg2C, dwArgD8, dwArg0118, out s1_91, out a0_83, out a1_1191, out a2_1192, out a3_1193, out a4_1194, out a5_1195, out a6_1196, out s2_1197, out s3_93, out s4_94, out s8_95)
	branch s1_91 == 0<32> l23060B5C
l23060B5A:
	branch a0_83 != 0<32> l23060BCA
l23060BCA:
	word32 a5_1159
	word32 a0_1155
	word32 a3_1151
	word32 t1_1147
	word32 a1_1156
	word32 a2_1157
	word32 a4_1158
	word32 a4_1152
	word32 a5_1153
	word32 t1_1154
	word32 a0_1148
	word32 a1_1149
	word32 a2_1150
	word32 a3_117
	word32 ra_120 = memset(memset(ra, s1_91, 0<32>, s3_93, out t1_1147, out a0_1148, out a1_1149, out a2_1150, out a3_1151, out a4_1152, out a5_1153), a0_83, 0<32>, s3_93, out t1_1154, out a0_1155, out a1_1156, out a2_1157, out a3_117, out a4_1158, out a5_1159)
	word32 s10_123 = 0<32>
l23060BE4:
	branch s10_123 != s6_55 l23060C3E
l23060C3E:
	a3_117 = s1_91 + s10_123
	Mem130[a3_117:byte] = 0x76<8>
	s10_123 = s10_123 + 1<32>
l23060BE8:
	word32 a0_276
	word32 s2_160
	word32 s3_161
	word32 s8_166
	word32 a0_180
	word32 s1_190
	word32 s10_191
	word32 s11_192
	word32 s2_193
	word32 s4_195
	word32 s5_196
	word32 s9_200
	word32 s1_1199
	word32 s0_1201
	word32 s3_1202
	word32 s4_1200
	word32 s0_1198
	word32 ra_188 = ef_get_env_blob(ef_set_env_blob(ra_120, s0_407, s8_95 + -820<i32>, s1_91, s10_123, a3_117, a0_83, s3_93, s4_94, s5_142, s6_55, mstatus, dwLoc60, dwLoc5C, dwLoc58, dwLoc54, dwLoc50, dwLoc4C, s10, s2, dwLoc30, dwLoc2C, dwLoc28, dwLoc24, dwLoc20, dwLoc1C, dwLoc14, dwArg08, dwArg14, dwArg18, dwArg1C, dwArg2C, s1, dwArg58, dwArg68, dwArg88, dwArgC8, dwArg0108, out s0_1198, out s1_1199, out s2_160, out s3_161, out s4_1200, out s8_166), s8_166 + -820<i32>, s2_160, fp + -92<i32>, s3_161, mstatus, dwLoc58, dwLoc4C, dwLoc08, dwArg28, dwArg68, dwArgA8, out s0_1201, out s1_190, out a0_180, out s2_193, out s3_1202, out s4_195, out s5_196, out s9_200, out s10_191, out s11_192)
	branch s9_200 != 0<32> l23060C0E
l23060C0A:
	branch s10_191 == a0_180 l23060C50
l23060C50:
	word32 a3_1205
	word32 a4_1206
	word32 a5_1207
	word32 a1_1203
	word32 a2_1204
	word32 a0_212 = memcmp(s2_193, s1_190, a0_180, out a1_1203, out a2_1204, out a3_1205, out a4_1206, out a5_1207)
	word32 a5_218 = Mem146[s4_195 + 1376<i32>:int32]
	branch a0_212 == 0<32> l23060C8E
l23060C8E:
	branch a5_218 == 0<32> l23060CB0
l23060CB0:
	word32 a5_1224
	xTaskGetTickCount(out a5_1224)
l23060C90:
	word32 a5_1225
	xTaskGetTickCountFromISR(out a5_1225)
l23060C94:
	word32 a4_1229
	word32 s3_1230
	word32 s4_1231
	word32 s6_1232
	word32 s8_1234
	word32 s10_1236
	word32 s11_1237
	word32 s9_1235
	word32 s7_1233
	word32 a1_1227
	word32 a3_1228
	word32 a0_1226
	ra = bl_printk(ra_188, s11_192 + -592<i32>, s5_196 + -884<i32>, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_247, out a0_1226, out a1_1227, out a2_242, out a3_1228, out a4_1229, out a5_238, out s2_250, out s3_1230, out s4_1231, out s5_142, out s6_1232, out s7_1233, out s8_1234, out s9_1235, out s10_1236, out s11_1237)
l23060C60:
	branch a5_218 == 0<32> l23060C88
l23060C88:
	word32 a5_1210
	xTaskGetTickCount(out a5_1210)
l23060C62:
	word32 a5_1211
	xTaskGetTickCountFromISR(out a5_1211)
l23060C66:
	a0_276 = 0x230C0D5C<32>
l23060C0E:
	branch Mem146[s4_195 + 1376<i32>:int32] == 0<32> l23060C4A
l23060C4A:
	word32 a5_1208
	xTaskGetTickCount(out a5_1208)
l23060C14:
	word32 a5_1209
	xTaskGetTickCountFromISR(out a5_1209)
l23060C18:
	a0_276 = 0x230C0D10<32>
l23060C38:
	word32 s3_1216
	word32 s4_1217
	word32 s6_1218
	word32 s7_1219
	word32 s8_1220
	word32 s9_1221
	word32 s11_1223
	word32 s10_1222
	word32 a3_1214
	word32 a4_1215
	word32 a0_1212
	word32 a1_1213
	ra = bl_printk(ra_188, a0_276, s5_196 + -884<i32>, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_247, out a0_1212, out a1_1213, out a2_242, out a3_1214, out a4_1215, out a5_238, out s2_250, out s3_1216, out s4_1217, out s5_142, out s6_1218, out s7_1219, out s8_1220, out s9_1221, out s10_1222, out s11_1223)
l23060B5C:
	branch Mem57[s4_94 + 1376<i32>:int32] == 0<32> l23060BC4
l23060BC4:
	word32 a5_1160
	xTaskGetTickCount(out a5_1160)
l23060B62:
	word32 a5_1161
	xTaskGetTickCountFromISR(out a5_1161)
l23060B66:
	word32 s4_1170
	word32 s6_1171
	word32 s7_1172
	word32 s8_1173
	word32 s10_1175
	word32 s11_1176
	word32 s9_1174
	word32 a1_1168
	word32 s3_1169
	word32 a0_1167
	ra = bl_printk(ra, 0x230C0C9C<32>, s5_142 + -884<i32>, dwLoc58, s2, dwArg10, dwArg14, s9, dwArg5C, out s1_247, out a0_1167, out a1_1168, out a2_242, out a3_367, out a4_35, out a5_238, out s2_250, out s3_1169, out s4_1170, out s5_142, out s6_1171, out s7_1172, out s8_1173, out s9_1174, out s10_1175, out s11_1176)
	branch s1_247 == 0<32> l23060B88
l23060B82:
	word32 a0_1162
	word32 a6_1164
	word32 t3_1166
	word32 s4_1165
	word32 a1_1163
	vPortFree(s1_247, a2_242, a5_238, mstatus, dwArgF8, dwArg0138, out s0_407, out s1_247, out a0_1162, out a1_1163, out a2_242, out a3_367, out a4_35, out a5_238, out a6_1164, out s4_1165, out t3_1166)
l23060B88:
	branch s2_250 == 0<32> l23060B92
l23060B8C:
	word32 a6_1181
	word32 s4_1182
	word32 t3_1183
	word32 a2_1179
	word32 a5_1180
	word32 a0_1177
	word32 a1_1178
	vPortFree(s2_250, a2_242, a5_238, mstatus, dwArgF8, dwArg0138, out s0_407, out s1_247, out a0_1177, out a1_1178, out a2_1179, out a3_367, out a4_35, out a5_1180, out a6_1181, out s4_1182, out t3_1183)
l23060B92:
	s0_34 = s0_407 + 4<32>
	a5_36 = fp + -64<i32>
	branch s0_34 != fp + -64<i32> l23060B3E
l23060B9A:
	ef_del_env(ra, s0_34, 0x230C0CCC<32>, a3_367, mstatus, dwLoc5C, dwLoc58, dwLoc28, dwLoc10, dwLoc0C, dwArg18, dwArg24, s7, dwArg98, dwArgD8, dwArg0118)
	return
psm_test_cmd_exit:


void psm_erase_cmd(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 s2, word32 s4, word32 s5, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg2C, word32 dwArg3C, word32 dwArg58, word32 dwArg6C, word32 dwArg88, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s4:[0..31] s5:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +002C:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
psm_erase_cmd_entry:
l23060CB6:
l23060CB6_thunk_ef_env_set_default:
	word32 a2_54
	word32 a3_55
	word32 a4_56
	ef_env_set_default(ra, s0, a2, a3, a4, s2, s4, s5, mstatus, dwArg08, dwArg18, dwArg1C, dwArg20, dwArg24, dwArg2C, dwArg3C, dwArg58, dwArg6C, dwArg88, dwArgC8, dwArg0108, dwArg0148, out a2_54, out a3_55, out a4_56)
	return
psm_erase_cmd_exit:


void psm_dump_cmd(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg34, word32 dwArg4C, word32 dwArg68, word32 dwArgA8, word32 dwArgE8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
psm_dump_cmd_entry:
l23060CBA:
l23060CBA_thunk_ef_print_env:
	ef_print_env(ra, a2, a3, a4, mstatus, dwArg00, dwArg04, dwArg28, dwArg34, dwArg4C, dwArg68, dwArgA8, dwArgE8, dwArg0128)
	return
psm_dump_cmd_exit:


void psm_unset_cmd(word32 ra, word32 s0, word32 a0, word32 a2, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg8C, word32 dwArg98, word32 dwArgBC, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
psm_unset_cmd_entry:
l23060CBE:
	branch a2 == 2<32> l23060CD0
l23060CD0:
	ef_del_env(ra, s0, a0, Mem0[a0 + 4<i32>:word32], mstatus, dwLoc0C, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg68, ra, dwArg8C, dwArgE8, dwArg0128, dwArg0168)
l23060CDE_thunk_ef_save_env:
	ef_save_env()
	return
l23060CC4:
l23060CCC_thunk_printf:
	word32 s1_120
	word32 a0_121
	word32 a1_122
	word32 a2_123
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 a7_127
	word32 s2_128
	word32 s3_129
	word32 s4_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s8_134
	word32 s9_135
	word32 s10_136
	word32 s11_137
	word32 t4_138
	printf(ra, 0x230C0E00<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out a7_127, out s2_128, out s3_129, out s4_130, out s5_131, out s6_132, out s7_133, out s8_134, out s9_135, out s10_136, out s11_137, out t4_138)
	return
psm_unset_cmd_exit:


void psm_set_cmd(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 s2, word32 s3, word32 s4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg3C, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg7C, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgBC, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +003C:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +007C:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
psm_set_cmd_entry:
l23060CE2:
	branch a2 == 3<32> l23060CF4
l23060CF4:
	word32 s0_141
	word32 s1_142
	word32 s4_143
	ef_set_env(ra, a0, a1, s2, s3, s4, s5, s6, mstatus, dwLoc10, dwLoc0C, dwLoc08, dwLoc04, dwArg00, dwArg04, dwArg08, dwArg18, dwArg20, dwArg24, dwArg28, dwArg2C, dwArg30, dwArg34, dwArg3C, dwArg58, dwArg64, dwArg68, dwArg6C, dwArg7C, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArg0118, dwArg0158, out s0_141, out s1_142, out s4_143)
l23060D04_thunk_ef_save_env:
	ef_save_env()
	return
l23060CE8:
l23060CF0_thunk_printf:
	word32 s1_144
	word32 a0_145
	word32 a1_146
	word32 a2_147
	word32 a3_148
	word32 a4_149
	word32 a5_150
	word32 a7_151
	word32 s2_152
	word32 s3_153
	word32 s4_154
	word32 s5_155
	word32 s6_156
	word32 s7_157
	word32 s8_158
	word32 s9_159
	word32 s10_160
	word32 s11_161
	word32 t4_162
	printf(ra, 0x230C0C6C<32>, a3, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_144, out a0_145, out a1_146, out a2_147, out a3_148, out a4_149, out a5_150, out a7_151, out s2_152, out s3_153, out s4_154, out s5_155, out s6_156, out s7_157, out s8_158, out s9_159, out s10_160, out s11_161, out t4_162)
	return
psm_set_cmd_exit:


void easyflash_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
easyflash_cli_init_entry:
l23060D08:
	return
easyflash_cli_init_exit:


word32 xEventGroupCreateStatic(word32 a0, word32 a4, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_mgr_queue
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a4 a5 s0
// Trashed: a2 a4 a5 s0 s8 t3
// Preserved: a0 sp
xEventGroupCreateStatic_entry:
l23060D0C:
	word32 a5_14
	branch a0 == 0<32> l23060D42
l23060D42:
	word32 a5_56
	user_vAssertCalled(a4, mstatus, out a5_56)
	a5_14 = 32<i32>
	branch a4 == 32<i32> l23060D32
l23060D52:
	user_vAssertCalled(a4, mstatus, out a5_14)
l23060D16:
	branch a4 != 32<i32> l23060D3C
l23060D3C:
	word32 a5_57
	user_vAssertCalled(a4, mstatus, out a5_57)
l23060D22:
	Mem25[a0:word32] = 0<32>
	a4 = vListInitialise(a0 + 4<i32>)
	Mem30[a0 + 28<i32>:byte] = 1<8>
	a5_14 = 1<32>
l23060D32:
	a4Out = a4
	a5Out = a5_14
	return a0
xEventGroupCreateStatic_exit:


word32 xEventGroupWaitBits(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg0128, word32 dwArg0168, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_mgr_queue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
xEventGroupWaitBits_entry:
l23060D58:
	word32 s3_146 = a4
	branch a0 == 0<32> l23060E2C
l23060E2C:
	word32 a5_467
	user_vAssertCalled(a4, mstatus, out a5_467)
l23060D74:
	word32 a3_165
	word32 a5_167
	word32 a4_160
	word32 s0_201
	word32 s0_229
	word32 a4_114
	word32 a5_203
	branch (a1 & 0xFF000000<32>) != 0<32> l23060DBC
l23060D7C:
	branch a1 == 0<32> l23060DBC
l23060DBC:
	word32 a5_468
	user_vAssertCalled(a4, mstatus, out a5_468)
	word32 a5_469
	branch xTaskGetSchedulerState(out a5_469) != 0<32> l23060D84
l23060DC6:
l23060D7E:
	word32 a5_470
	branch xTaskGetSchedulerState(out a5_470) == 0<32> l23060E04
l23060E04:
	branch a4 == 0<32> l23060D84
l23060E08:
	word32 a5_490
	user_vAssertCalled(a4, mstatus, out a5_490)
	word32 a5_491
	a4_114 = vTaskSuspendAll(a4, out a5_491)
	s0_229 = Mem17[a0:int32]
	a5_203 = a1 & s0_229
	branch a3 != 0<32> l23060DC8
l23060E1C:
l23060D84:
	word32 a5_471
	a4_114 = vTaskSuspendAll(a4, out a5_471)
	s0_229 = Mem17[a0:int32]
	a5_203 = a1 & s0_229
	branch a3 != 0<32> l23060DC8
l23060DC8:
	branch a1 == a5_203 l23060D96
l23060D94:
	branch a5_203 == 0<32> l23060DCC
l23060DCC:
	branch a4 == 0<32> l23060E1E
l23060DD0:
	word32 a1_89 = CONVERT(a2 != 0<32>, bool, word32)
	word32 a1_90 = a1_89 << 24<i32>
	branch a3 != 0<32> l23060E24
l23060E24:
	a1_90 = a1_89 << 24<i32> | 0x4000000<32>
l23060DDA:
	word32 a5_141
	word32 s2_145
	word32 s1_155
	word32 s4_156
	word32 a3_159
	word32 s0_484
	word32 a5_486
	word32 a2_485
	word32 a6_487
	word32 t3_488
	word32 a0_150
	xTaskResumeAll(a3, vTaskPlaceOnUnorderedEventList(a0 + 4<i32>, a1_90 | a1, a4, a3, a4_114, mstatus, dwLoc0C, dwArg18, out a5_141, out s2_145, out s3_146), a5_141, mstatus, dwArg0128, dwArg0168, out s0_484, out s1_155, out a0_150, out a2_485, out a3_159, out a4_160, out a5_486, out a6_487, out s4_156, out t3_488)
	branch a0_150 != 0<32> l23060DF0
l23060DEC:
	__syscall()
l23060DF0:
	a3_165 = uxTaskResetEventItemValue(a3_159, a4_160)
	a5_167 = a0_150 << 6<u32>
	branch a0_150 << 6<u32> >= 0<32> l23060E32
l23060E32:
	word32 a5_489
	vTaskEnterCritical(a4_160, mstatus, out a5_489)
	a0_150 = Mem17[s2_145:int32]
	word32 a5_175 = s1_155 & a0_150
	branch s4_156 != 0<32> l23060E5C
l23060E5C:
	branch s1_155 != a5_175 l23060E52
l23060E60:
l23060E42:
	branch a5_175 == 0<32> l23060E52
l23060E44:
	branch a2 == 0<32> l23060E52
l23060E48:
	Mem185[s2_145:word32] = ~s1_155 & a0_150
l23060E52:
	a3_165 = vTaskExitCritical(a3_165, mstatus, out a4_160, out a5_167)
l23060DFC:
	s0_201 = CONVERT(SLICE(a0_150, word24, 0), word24, word32)
l23060D96:
	branch a2 == 0<32> l23060E1E
l23060E1E:
	word32 s1_472
	word32 a0_473
	word32 s4_476
	word32 a2_474
	word32 t3_477
	word32 a6_475
	xTaskResumeAll(a3, a4_114, a5_203, mstatus, dwArg0128, dwArg0168, out s0_201, out s1_472, out a0_473, out a2_474, out a3_165, out a4_160, out a5_167, out a6_475, out s4_476, out t3_477)
l23060D9A:
	Mem234[a0:word32] = ~a1 & s0_229
	word32 s1_478
	word32 t3_483
	word32 a0_479
	word32 s4_482
	word32 a2_480
	word32 a6_481
	xTaskResumeAll(a3, a4_114, a5_203, mstatus, dwArg0128, dwArg0168, out s0_201, out s1_478, out a0_479, out a2_480, out a3_165, out a4_160, out a5_167, out a6_481, out s4_482, out t3_483)
l23060DA8:
	0<32> = dwArg0128
	a2Out = dwArg0100
	a3Out = a3_165
	a4Out = a4_160
	a5Out = a5_167
	s3Out = s3_146
	return s0_201
xEventGroupWaitBits_exit:


word32 xEventGroupSetBits(word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_complete.isra.1
//      cmd_mgr_drain
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
xEventGroupSetBits_entry:
l23060E62:
	word32 s2_156 = a1
	branch a0 == 0<32> l23060F0A
l23060F0A:
	word32 a5_270
	user_vAssertCalled(a4, mstatus, out a5_270)
l23060E78:
	branch (a1 & 0xFF000000<32>) != 0<32> l23060F04
l23060F04:
	word32 a5_271
	user_vAssertCalled(a4, mstatus, out a5_271)
l23060E82:
	word32 s1_101
	word32 a5_119
	word32 a4_126 = vTaskSuspendAll(a4, out a5_119)
	word32 s1_44 = Mem17[s0 + 16<i32>:word32]
	word32 a3_110 = a1 | a3
	Mem48[a3_110:word32] = s1_44
	s1_101 = s1_44
	branch s1_44 + 12<i32> == s0 l23060EE0
l23060E98:
	word32 s5_106 = 0<32>
	s2_156 = 0xFFFFFF<32>
	word32 s4_155 = 0x2000000<32>
	s1_101 = s1_44
l23060EA4:
	word32 a2_61 = a4_126 & s2_156
	word32 a1_59 = a3_110 | s4_155
	a5_119 = a4_126 << 5<u32>
	word32 a6_63 = a2_61 & a3_110
	word32 s0_105 = Mem48[Mem48[a4_126:word32] + 4<i32>:word32]
	branch a5_119 < 0<32> l23060EFA
l23060EFA:
	branch a2_61 == a6_63 l23060EC2
l23060EFE:
	branch s1_44 + 12<i32> != s0_105 l23060EA4
l23060F02:
l23060EBE:
	branch a6_63 == 0<32> l23060ED4
l23060EC2:
	branch a4_126 << 7<u32> >= 0<32> l23060ECE
l23060ECA:
	s5_106 = s5_106 | a2_61
l23060ECE:
	word32 s1_278
	word32 a0_279
	word32 a2_280
	s0_105 = vTaskRemoveFromUnorderedEventList(s0_105, a1_59, a2_61, a3_110, a4_126, mstatus, dwArg04, dwArg24, out s1_278, out a0_279, out a2_280, out a3_110, out a4_126, out a5_119, out s2_156, out s4_155)
	s1_101 = Mem48[a3_110:word32]
l23060ED4:
	branch s1_44 + 12<i32> != s0_105 l23060EA4
l23060ED8:
	a3_110 = a3_110 & ~s5_106
l23060EE0:
	Mem118[a3_110:word32] = s1_101
	word32 a0_134
	word32 a5_136
	word32 a3_143
	word32 a4_144
	word32 s4_276
	word32 t3_277
	word32 s0_272
	word32 s1_273
	word32 a2_274
	word32 a6_275
	xTaskResumeAll(a3_110, a4_126, a5_119, mstatus, dwArg0138, dwArg0178, out s0_272, out s1_273, out a0_134, out a2_274, out a3_143, out a4_144, out a5_136, out a6_275, out s4_276, out t3_277)
	s1Out = Mem118[a0_134:word32]
	a0Out = a0_134
	a3Out = a3_143
	a4Out = a4_144
	a5Out = a5_136
	s2Out = s2_156
	s3Out = s1_44 + 12<i32>
	s4Out = dwArg04
	return s1
xEventGroupSetBits_exit:


void vEventGroupDelete(word32 a0, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArg0148, word32 dwArg0158, word32 dwArg0188, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_mgr_queue
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
vEventGroupDelete_entry:
l23060F10:
	word32 a5_14
	word32 a4_13 = vTaskSuspendAll(a4, out a5_14)
	word32 s0_15 = Mem11[a5_14 + 4<i32>:word32]
	word32 s1_16 = s0_15 + 12<i32>
	branch a5_14 != 0<32> l23060F34
l23060F34:
	word32 s0_19 = Mem11[a0 + 16<i32>:word32]
	branch a0 != s1_16 l23060F28
l23060F28:
	word32 a5_32
	word32 s4_160
	word32 s2_159
	vTaskRemoveFromUnorderedEventList(s0_19, 0x2000000<32>, a2, a3, a4_13, mstatus, dwArg14, dwArg34, out s1_16, out a0, out a2, out a3, out a4_13, out a5_32, out s2_159, out s4_160)
	s0_15 = Mem11[a5_32 + 4<i32>:word32]
	branch a5_32 == 0<32> l23060F4C
l23060F3A:
	word32 a5_50
	word32 a5_161
	word32 s2_162
	word32 s4_163
	vTaskRemoveFromUnorderedEventList(Mem11[a0 + 16<i32>:word32], 0x2000000<32>, user_vAssertCalled(a4_13, mstatus, out a5_161), a3, a4_13, mstatus, dwArg14, dwArg34, out s1_16, out a0, out a2, out a3, out a4_13, out a5_50, out s2_162, out s4_163)
	s0_15 = Mem11[a5_50 + 4<i32>:word32]
	branch a5_50 != 0<32> l23060F34
l23060F26:
l23060F4C:
	word32 a5_61 = CONVERT(Mem11[s0_15 + 28<i32>:byte], byte, word32)
	branch a5_61 == 0<32> l23060F5E
l23060F5E:
	word32 a3_69
	word32 a4_70
	word32 a5_71
	word32 s0_164
	word32 s1_165
	word32 a0_166
	word32 a1_167
	word32 a2_168
	word32 a6_169
	word32 s4_170
	word32 t3_171
	vPortFree(s0_15, a2, a5_61, mstatus, dwArg0148, dwArg0188, out s0_164, out s1_165, out a0_166, out a1_167, out a2_168, out a3_69, out a4_70, out a5_71, out a6_169, out s4_170, out t3_171)
l23060F6C_thunk_xTaskResumeAll:
	word32 s0_182
	word32 s1_183
	word32 a0_184
	word32 a2_185
	word32 a3_186
	word32 a4_187
	word32 a5_188
	word32 a6_189
	word32 s4_190
	word32 t3_191
	xTaskResumeAll(a3_69, a4_70, a5_71, mstatus, dwArg0158, dwArg0198, out s0_182, out s1_183, out a0_184, out a2_185, out a3_186, out a4_187, out a5_188, out a6_189, out s4_190, out t3_191)
	return
l23060F52:
l23060F5A_thunk_xTaskResumeAll:
	word32 s0_172
	word32 s1_173
	word32 a0_174
	word32 a2_175
	word32 a3_176
	word32 a4_177
	word32 a5_178
	word32 a6_179
	word32 s4_180
	word32 t3_181
	xTaskResumeAll(a3, a4_13, a5_61, mstatus, dwArg0158, dwArg0198, out s0_172, out s1_173, out a0_174, out a2_175, out a3_176, out a4_177, out a5_178, out a6_179, out s4_180, out t3_181)
	return
vEventGroupDelete_exit:


word32 vListInitialise(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupCreateStatic
//      xQueueGenericReset
//      prvAddNewTaskToReadyList
//      prvCheckForValidListAndQueue
// MayUse:  a0:[0..31]
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
vListInitialise_entry:
l23060F70:
	Mem6[a0 + 12<i32>:word32] = a0
	Mem7[7<32>:word32] = a0
	Mem8[a0 + 20<i32>:word32] = a0
	Mem9[a0 + 24<i32>:word32] = a0
	Mem10[a0:word32] = 0<32>
	return 0xFFFFFFFF<32>
vListInitialise_exit:


void vListInitialiseItem(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvInitialiseNewTask.isra.2
//      xTimerCreate
//      xTimerCreateStatic
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
vListInitialiseItem_entry:
l23060F84:
	Mem4[a0 + 16<i32>:word32] = 0<32>
	return
vListInitialiseItem_exit:


word32 vListInsertEnd(word32 a1, word32 a4, word32 a5, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvAddNewTaskToReadyList
//      vTaskDelete
//      xTaskIncrementTick
//      xTaskResumeAll
//      vTaskPlaceOnEventList
//      vTaskPlaceOnUnorderedEventList
//      vTaskPlaceOnEventListRestricted
//      xTaskRemoveFromEventList
//      vTaskRemoveFromUnorderedEventList
//      xTaskPriorityInherit
//      xTaskPriorityDisinherit
//      vTaskPriorityDisinheritAfterTimeout
//      xTaskGenericNotify
//      xTaskGenericNotifyFromISR
//      vTaskNotifyGiveFromISR
// MayUse:  a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
vListInsertEnd_entry:
l23060F8A:
	word32 a0_5 = Mem0[a5 + 4<i32>:word32]
	Mem7[a5 + 4<i32>:word32] = a1
	word32 a5_9 = Mem7[a4 + 8<i32>:word32]
	Mem10[a4 + 8<i32>:word32] = a1
	Mem11[a1 + 4<i32>:word32] = a4
	Mem12[a1 + 8<i32>:word32] = a5_9
	Mem13[a0_5 + 16<i32>:word32] = a1
	word32 a0_14 = Mem13[a5_9:word32]
	Mem16[a5_9 + 1<32>:word32] = a0_14
	a5Out = a5_9 + 1<32>
	return a0_14
vListInsertEnd_exit:


word32 vListInsert(word32 a0, word32 a2, word32 a3, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskPlaceOnEventList
//      prvInsertTimerInActiveList
//      prvSwitchTimerLists
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
vListInsert_entry:
l23060FA0:
	word32 a4_11
	word32 a1_5 = Mem0[a2:word32]
	word32 a5_13 = 0xFFFFFFFF<32>
	branch a2 != 0xFFFFFFFF<32> l23060FB0
l23060FB0:
	a4_11 = Mem0[a5_13 + 4<i32>:word32]
	a5_13 = Mem0[a3:word32]
	branch a2 >=u a3 l23060FAE
l23060FAE:
l23060FAC:
l23060FCA:
	a0 = Mem0[a0 + 24<i32>:word32]
	a4_11 = Mem0[3<32>:word32]
l23060FB8:
	Mem21[a5_13 + 4<i32>:word32] = a1_5
	Mem22[a1_5 + 8<i32>:word32] = a5_13
	Mem24[a4_11 + 8<i32>:word32] = a1_5
	Mem25[a1_5 + 4<i32>:word32] = a4_11
	Mem28[a0 + 16<i32>:word32] = a1_5
	word32 a0_29 = Mem28[a5_13:word32]
	word32 a5_30 = a5_13 + 1<32>
	Mem31[a5_30:word32] = a0_29
	a4Out = a4_11
	a5Out = a5_30
	return a0_29
vListInsert_exit:


word32 uxListRemove(word32 a3, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvIdleTask
//      vTaskDelete
//      xTaskIncrementTick
//      xTaskResumeAll
//      vTaskPlaceOnEventList
//      xTaskRemoveFromEventList
//      vTaskRemoveFromUnorderedEventList
//      xTaskPriorityInherit
//      xTaskPriorityDisinherit
//      vTaskPriorityDisinheritAfterTimeout
//      xTaskGenericNotify
//      xTaskGenericNotifyFromISR
//      vTaskNotifyGiveFromISR
//      prvSwitchTimerLists
//      prvTimerTask
// MayUse:  a3:[0..31] a4:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
uxListRemove_entry:
l23060FD0:
	Mem10[a4 + 8<i32>:word32] = a3
	word32 a0_11 = Mem10[a3 + 4<i32>:word32]
	Mem12[a3 + 4<i32>:word32] = a4
	word32 a5_13 = Mem12[a4 + 4<i32>:word32]
	branch a4 == a0_11 l23060FF0
l23060FF0:
	word32 a0_14 = Mem12[a4 + 8<i32>:word32]
	Mem15[a4 + 4<i32>:word32] = a5_13
	Mem16[a0_14 + 16<i32>:word32] = 0<32>
	Mem19[a4 + 0xFFFFFFFF<32>:word32] = Mem16[a4:word32]
	word32 a5_20 = Mem19[a0_14:word32]
	a4Out = <invalid>
	a5Out = a5_20
	return a0_14
l23060FE2:
	Mem21[a0_11 + 16<i32>:word32] = 0<32>
	Mem24[a4 + 0xFFFFFFFF<32>:word32] = Mem21[a4:word32]
	word32 a5_25 = Mem24[a0_11:word32]
	a4Out = <invalid>
	a5Out = a5_25
	return a0_11
uxListRemove_exit:


word32 prvCopyDataToQueue(word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueGenericSendFromISR
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
prvCopyDataToQueue_entry:
l23061002:
	word32 a0_126
	word32 a0_14 = Mem11[s1 + 56<i32>:word32]
	word32 s0_102 = a0_14
	branch a5 != 0<32> l2306102A
l2306102A:
	s2 = a2
	branch a2 != 0<32> l2306105A
l2306105A:
	word32 a4_21
	word32 a5_22
	word32 a6_186
	word32 a2_185
	memcpy(Mem11[a0_14 + 12<i32>:word32], a1, a5, out a1, out a2_185, out a3, out a4_21, out a5_22, out a6_186, out a7)
	a4 = 0<32> - a4_21
	s0_102 = Mem11[a3:word32]
	word32 a5_38 = a5_22 + a4
	Mem39[a5_38 + 12<i32>:word32] = s0_102
	branch a5_38 >=u a3 l2306107A
l23061074:
	s0_102 = Mem39[a5_38 + 8<i32>:word32]
	a4 = a4 + a5_38
	Mem42[a4 + 12<i32>:word32] = s0_102
l2306107A:
	a5 = 2<32>
	branch a2 == 2<32> l2306109E
l2306109E:
	a0_126 = 0<32>
	branch s1 != 0<32> l2306101C
l230610A2:
	s1 = 1<32>
l23061080:
	Mem50[s1 + 0x39<32>:word32] = s0_102
	0<32> = dwArg38
	a0Out = 0<32>
	a1Out = a1
	a2Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = 2<32>
	a7Out = a7
	s2Out = a2
	return s1 + 1<32>
l2306102E:
	word32 a5_61
	word32 a2_187
	word32 a6_188
	memcpy(Mem11[a0_14 + 4<i32>:word32], a1, a5, out a1, out a2_187, out a3, out a4, out a5_61, out a6_188, out a7)
	s0_102 = Mem11[a4 + 8<i32>:word32]
	a5 = a5_61 + a3
	Mem78[a5 + 4<i32>:word32] = s0_102
	s1 = s1 + 1<32>
	a0_126 = 0<32>
	branch a5 <u a4 l2306101C
l23061048:
	word32 s0_79 = Mem78[a5:word32]
	Mem80[s1 + 0x39<32>:word32] = s0_79
	Mem81[a5 + 4<i32>:word32] = s0_79
	0<32> = dwArg38
	a0Out = 0<32>
	a1Out = a1
	a2Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = a2
	return s1 + 1<32>
l23061014:
	s1 = s1 + 1<32>
	a0_126 = 0<32>
	branch a5 == 0<32> l23061092
l23061092:
	s0_102 = Mem11[8<32>:word32]
	s1 = xTaskPriorityDisinherit(0<32>, a1, a3, a4, mstatus, out a0_126, out a1, out a4, out a5)
	Mem101[s0_102 + 8<i32>:word32] = 0<32>
l2306101C:
	Mem104[s1 + 56<i32>:word32] = s0_102
	0<32> = dwArg38
	a0Out = a0_126
	a1Out = a1
	a2Out = <invalid>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	return s1
prvCopyDataToQueue_exit:


word32 prvCopyDataFromQueue(word32 a1, word32 a2, word32 a4, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueReceive
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31]
// LiveOut: a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
prvCopyDataFromQueue_entry:
l230610A6:
	branch a2 == 0<32> l230610C2
l230610C2:
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a1
	return a1
l230610AC:
	word32 a1_11 = a1 + a2
	Mem12[a1_11 + 12<i32>:word32] = Mem0[a4 + 8<i32>:word32]
	branch a1_11 <u a4 l230610BC
l230610B8:
	Mem14[a1_11 + 12<i32>:word32] = Mem12[a1_11:word32]
l230610BC:
l230610BE_thunk_memcpy:
	word32 a4_19
	word32 a5_20
	word32 a1_22
	word32 a2_23
	word32 a3_24
	word32 a6_61
	word32 a7_62
	memcpy(a1, a1_11, a2, out a1_22, out a2_23, out a3_24, out a4_19, out a5_20, out a6_61, out a7_62)
	a2Out = a2_23
	a3Out = a3_24
	a4Out = a4_19
	a5Out = a5_20
	return a1_22
prvCopyDataFromQueue_exit:


word32 prvUnlockQueue(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg38, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      vQueueWaitForMessageRestricted
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a2 a3 a4 a5 s1 tp
// Preserved: a0 a1 s0 s2 sp
prvUnlockQueue_entry:
l230610C4:
	word32 a5_16
	word32 a4_123 = vTaskEnterCritical(a4, mstatus, out a5_16)
	word32 s1_100 = a0
	word32 s0_122 = CONVERT(SLICE(CONVERT(Mem13[a0 + 69<i32>:byte], byte, word32), byte, 0), byte, int32)
	branch s0_122 <= 0<32> l23061116
l230610E0:
	s1_100 = Mem13[a5_16 + 36<i32>:word32]
	branch a5_16 == 0<32> l23061116
l230610E4:
l230610FC:
	word32 a0_31
	word32 a5_176
	s1_100 = xTaskRemoveFromEventList(s0_122, a1, a2, a3, a4_123, mstatus, out a0_31, out a1, out a2, out a3, out a4_123, out a5_176)
	branch a0_31 == 0<32> l230610EA
l230610EA:
	word32 s0_39 = s0_122 + 0xFFFFFFFF<32>
	s0_122 = CONVERT(SLICE(s0_39 & 255<i32>, byte, 0), byte, int32)
	branch (s0_39 & 255<i32>) == 0<32> l23061116
l23061104:
	word32 s0_43 = s0_122 + 0xFFFFFFFF<32>
	a4_123 = vTaskMissedYield()
	s0_122 = CONVERT(SLICE(s0_43 & 255<i32>, byte, 0), byte, int32)
	branch (s0_43 & 255<i32>) != 0<32> l230610F8
l230610F8:
	word32 a5_49 = s0_122 + 0xFFFFFFFF<32> & 255<i32>
	s1_100 = Mem13[a5_49 + 36<i32>:word32]
	branch a5_49 == 0<32> l23061116
l23061116:
	Mem55[s1_100 + 69<i32>:byte] = 0xFF<8>
	word32 a4_63
	word32 a5_175
	word32 a3_114 = vTaskExitCritical(a3, mstatus, out a4_63, out a5_175)
	word32 a5_64
	word32 a4_130 = vTaskEnterCritical(a4_63, mstatus, out a5_64)
	word32 s0_129 = CONVERT(SLICE(CONVERT(Mem55[s1_100 + 68<i32>:byte], byte, word32), byte, 0), byte, int32)
	branch s0_129 <= 0<32> l23061166
l23061130:
	s1_100 = Mem55[a5_64 + 16<i32>:word32]
	branch a5_64 == 0<32> l23061166
l23061134:
l2306114C:
	word32 a0_79
	word32 a5_177
	s1_100 = xTaskRemoveFromEventList(s0_129, a1, a2, a3_114, a4_130, mstatus, out a0_79, out a1, out a2, out a3_114, out a4_130, out a5_177)
	branch a0_79 == 0<32> l2306113A
l2306113A:
	word32 s0_87 = s0_129 + 0xFFFFFFFF<32>
	s0_129 = CONVERT(SLICE(s0_87 & 255<i32>, byte, 0), byte, int32)
	branch (s0_87 & 255<i32>) == 0<32> l23061166
l23061154:
	word32 s0_91 = s0_129 + 0xFFFFFFFF<32>
	a4_130 = vTaskMissedYield()
	s0_129 = CONVERT(SLICE(s0_91 & 255<i32>, byte, 0), byte, int32)
	branch (s0_91 & 255<i32>) != 0<32> l23061148
l23061148:
	word32 a5_97 = s0_129 + 0xFFFFFFFF<32> & 255<i32>
	s1_100 = Mem55[a5_97 + 16<i32>:word32]
	branch a5_97 == 0<32> l23061166
l23061166:
	Mem103[s1_100 + 68<i32>:byte] = 0xFF<8>
	0<32> = dwArg38
l23061176_thunk_vTaskExitCritical:
	word32 a5_118
	word32 a4_120
	word32 a3_119 = vTaskExitCritical(a3_114, mstatus, out a4_120, out a5_118)
	a4Out = a4_120
	a5Out = a5_118
	return a3_119
prvUnlockQueue_exit:


word32 xQueueGenericReset(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericCreateStatic
//      xQueueGenericCreate
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a1 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
xQueueGenericReset_entry:
l2306117A:
	word32 s1_106 = a1
	branch a0 == 0<32> l23061206
l23061206:
	word32 a5_113
	user_vAssertCalled(a4, mstatus, out a5_113)
l23061188:
	word32 a5_20
	word32 a4_21 = vTaskEnterCritical(a4, mstatus, out a5_20)
	word32 s0_27 = Mem9[a4_21:word32]
	Mem28[s0_27 + 56<i32>:word32] = 0<32>
	Mem31[s0_27 + 68<i32>:byte] = 0xFF<8>
	Mem32[a4_21 + 4<i32>:word32] = s0_27
	Mem33[s0_27 + 69<i32>:byte] = 0xFF<8>
	word32 a5_29 = a3 + a5_20
	word32 a3_34 = a5_29 - a3
	word32 a5_35 = a5_29 + a4_21
	Mem37[a5_35 + 8<i32>:word32] = s0_27
	word32 a4_36 = a4_21 + a3_34
	Mem38[a4_36 + 12<i32>:word32] = s0_27
	branch a1 != 0<32> l230611E6
l230611E6:
	vListInitialise(s0_27 + 16<i32>)
	vListInitialise(s0_27 + 36<i32>)
	word32 a5_46
	word32 a4_48
	word32 a3_47 = vTaskExitCritical(a3_34, mstatus, out a4_48, out a5_46)
	a1Out = a1
	a3Out = a3_47
	a4Out = a4_48
	a5Out = a5_46
	return a1
l230611B4:
	word32 s0_55 = Mem38[a5_35 + 16<i32>:word32]
	branch a5_35 != 0<32> l230611C8
l230611C8:
	word32 a0_58
	word32 a2_114
	word32 a4_115
	word32 a5_116
	s1_106 = xTaskRemoveFromEventList(s0_55, a1, 0xFFFFFFFF<32>, a3_34, a4_36, mstatus, out a0_58, out a1, out a2_114, out a3_34, out a4_115, out a5_116)
	branch a0_58 == 0<32> l230611B8
l230611D2:
	__syscall()
	word32 a5_66
	word32 a4_68
	word32 a3_67 = vTaskExitCritical(a3_34, mstatus, out a4_68, out a5_66)
	a1Out = a1
	a3Out = a3_67
	a4Out = a4_68
	a5Out = a5_66
	return s1_106
l230611B8:
	word32 a5_76
	word32 a4_78
	word32 a3_77 = vTaskExitCritical(a3_34, mstatus, out a4_78, out a5_76)
	a1Out = a1
	a3Out = a3_77
	a4Out = a4_78
	a5Out = a5_76
	return s1_106
xQueueGenericReset_exit:


word32 xQueueGenericCreateStatic(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __bl_ble_sync_task
//      pro_trans_init
//      xQueueCreateMutexStatic
//      prvCheckForValidListAndQueue
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xQueueGenericCreateStatic_entry:
l2306120C:
	word32 s1_100 = a1
	word32 s2_198 = a2
	branch a0 == 0<32> l23061276
l23061276:
	word32 a5_210
	user_vAssertCalled(a4, mstatus, out a5_210)
	branch a3 != 0<32> l23061228
l2306127C:
l23061226:
	branch a3 == 0<32> l23061286
l23061286:
	word32 a5_211
	user_vAssertCalled(a4, mstatus, out a5_211)
l23061228:
	branch a2 == 0<32> l2306127E
l2306127E:
	branch a1 == 0<32> l2306122E
l2306122C:
	branch a1 == 0<32> l23061280
l23061280:
	word32 a5_212
	user_vAssertCalled(a4, mstatus, out a5_212)
l2306122E:
	word32 a5_195 = 80<i32>
	branch a4 == 80<i32> l2306123E
l2306123A:
	user_vAssertCalled(a4, mstatus, out a5_195)
l2306123E:
	word32 a3_193
	word32 a4_194
	a4_194 = a4
	a3_193 = a3
	branch a3 == 0<32> l23061260
l23061242:
	Mem63[a3 + 70<i32>:byte] = 1<8>
	branch a1 == 0<32> l23061272
l23061272:
	s2_198 = a3
l2306124A:
	Mem73[a3:word32] = s2_198
	Mem80[a3 + 60<i32>:word32] = a0
	Mem82[a1 + 64<i32>:word32] = a3
	word32 a1_213
	s1_100 = xQueueGenericReset(a3, 1<32>, a3, a4, mstatus, out a1_213, out a3_193, out a4_194, out a5_195)
	Mem109[a3 + 76<i32>:byte] = SLICE(a4, byte, 0)
l23061260:
	0<32> = dwArg0128
	s1Out = s1_100
	a0Out = a3
	a2Out = dwArg0100
	a3Out = a3_193
	a4Out = a4_194
	a5Out = a5_195
	s2Out = s2_198
	s3Out = a0
	s4Out = a4
	return dwArgE4
xQueueGenericCreateStatic_exit:


word32 xQueueGenericCreate(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_all_ap_scan
//      ble_controller_init
//      k_queue_init
//      xQueueCreateCountingSemaphore
//      xQueueCreateMutex
//      sys_mbox_new
//      sys_sem_new
//      at_server_init
//      http_url_req
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xQueueGenericCreate_entry:
l2306128C:
	branch a0 == 0<32> l230612F4
l230612F4:
	user_vAssertCalled(a4, mstatus, out a5)
l230612A0:
	word32 a1_149
	word32 a3_152
	word32 a4_154
	word32 a5_156
	word32 s1_160
	word32 s2_162
	word32 s3_103
	word32 s0_51
	branch a1 == 0<32> l230612C0
l230612C0:
	word32 a0_36
	word32 a2_181
	word32 a6_182
	word32 s4_183
	word32 s8_184
	pvPortMalloc(ra, a0, 80<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_160, out a0_36, out a1_149, out a2_181, out a3_152, out a4_154, out a5_156, out a6_182, out s2_162, out s3_103, out s4_183, out s8_184)
	s0_51 = a0_36
	branch a0_36 == 0<32> l230612FA
l230612CC:
	Mem52[a0_36 + 70<i32>:byte] = 0<8>
	Mem53[a0_36:word32] = a0_36
l230612A4:
	word32 a0_56
	word32 a2_185
	word32 a6_186
	word32 s4_187
	word32 s8_188
	pvPortMalloc(ra, a0, a0 + a1 + 80<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_160, out a0_56, out a1_149, out a2_185, out a3_152, out a4_154, out a5_156, out a6_186, out s2_162, out s3_103, out s4_187, out s8_188)
	s0_51 = a0_56
	branch a0_56 == 0<32> l230612FA
l230612FA:
	s1Out = s1_160
	a0Out = 0<32>
	a1Out = a1_149
	a2Out = <invalid>
	a3Out = a3_152
	a4Out = a4_154
	a5Out = a5_156
	s2Out = s2_162
	s3Out = s3_103
	s4Out = <invalid>
	return 0<32>
l230612B4:
	Mem83[a0_56 + 70<i32>:byte] = 0<8>
	Mem84[a0_56 + 80<i32>:word32] = a0_56
l230612D2:
	Mem87[s1_160 + 60<i32>:word32] = s0_51
	Mem89[s0_51 + 64<i32>:word32] = s2_162
	word32 a3_97
	word32 a4_98
	word32 a5_99
	word32 a1_102
	word32 s1_100 = xQueueGenericReset(s0_51, 1<32>, a3_152, a4_154, mstatus, out a1_102, out a3_97, out a4_98, out a5_99)
	Mem104[s0_51 + 76<i32>:byte] = SLICE(s3_103, byte, 0)
	s1Out = s1_100
	a0Out = s0_51
	a1Out = a1_102
	a2Out = <invalid>
	a3Out = a3_97
	a4Out = a4_98
	a5Out = a5_99
	s2Out = s2_162
	s3Out = s3_103
	s4Out = <invalid>
	return s0_51
xQueueGenericCreate_exit:


word32 xQueueCreateCountingSemaphore(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_sem_init
//      aos_sem_new
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xQueueCreateCountingSemaphore_entry:
l2306130C:
	branch a0 == 0<32> l2306132E
l2306132E:
	user_vAssertCalled(a4, mstatus, out a5)
	branch a0 >=u a1 l2306131A
l23061316:
	branch a0 <u a1 l2306133A
l2306133A:
	user_vAssertCalled(a4, mstatus, out a5)
l2306131A:
	word32 a0_39
	word32 a1_40
	word32 a3_42
	word32 a4_43
	word32 s1_47
	word32 s2_48
	word32 s3_49
	word32 s4_50
	word32 a2_105
	word32 a5_106
	word32 s0_46 = xQueueGenericCreate(ra, a0, 0<32>, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArgF8, dwArg0138, out s1_47, out a0_39, out a1_40, out a2_105, out a3_42, out a4_43, out a5_106, out s2_48, out s3_49, out s4_50)
	branch a0_39 == 0<32> l23061326
l23061324:
	Mem54[s0_46 + 56<i32>:word32] = a0_39
l23061326:
	s1Out = s1_47
	a0Out = a0_39
	a1Out = a1_40
	a3Out = a3_42
	a4Out = a4_43
	s2Out = s2_48
	s3Out = s3_49
	s4Out = s4_50
	s8Out = dwLoc1C
	return s0_46
xQueueCreateCountingSemaphore_exit:


word32 xQueueGenericSend(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cb_scan_complete
//      cmd_mgr_print
//      cmd_mgr_msgind
//      cmd_mgr_llind
//      cmd_mgr_queue
//      cmd_mgr_drain
//      rw_main_task_post
//      k_queue_prepend
//      k_sem_give
//      wifi_state_get_cb
//      write_data
//      pro_trans_ack
//      ef_port_env_unlock
//      xQueueCreateMutexStatic
//      xQueueGiveMutexRecursive
//      xQueueCreateMutex
//      xTimerGenericCommand
//      sys_mbox_post
//      sys_mbox_trypost
//      sys_sem_new
//      sys_mutex_unlock
//      aos_open
//      aos_close
//      aos_stat
//      aos_opendir
//      aos_closedir
//      aos_register_driver
//      aos_register_fs
//      aos_mutex_unlock
//      aos_sem_signal
//      at_server_notify_with_ctx
//      cb_httpc_result
//      tcp_connected_callback
//      tcp_receive_callback
//      tcp_err_callback
//      tcp_accept_callback
//      bl_cipstart
//      bl_cipclose
//      bl_cipsslcconf_path
//      bl_cipsslcsni
//      bl_cipsslcalpn
//      bl_sha_mutex_give
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xQueueGenericSend_entry:
l23061344:
	word32 s2_137 = a3
	branch a0 == 0<32> l23061490
l23061490:
	user_vAssertCalled(a4, mstatus, out a5)
l23061362:
	branch a1 == 0<32> l2306146E
l2306146E:
	branch a5 == 0<32> l23061366
l23061474:
	word32 a5_675
	user_vAssertCalled(a4, mstatus, out a5_675)
l23061366:
	branch a3 == 2<32> l23061460
l23061460:
	branch a4 == 1<32> l2306136C
l23061468:
	word32 a5_674
	user_vAssertCalled(a4, mstatus, out a5_674)
l2306136C:
	word32 a5_52
	branch xTaskGetSchedulerState(out a5_52) != 0<32> l23061378
l23061372:
	branch a5_52 != 0<32> l23061496
l23061496:
	word32 a5_644
	user_vAssertCalled(a4, mstatus, out a5_644)
l23061378:
	word32 a1_124
	word32 a5_151
	word32 a4_159
	word32 a3_158
	word32 a0_160
	word32 a5_228
	word32 a4_229 = vTaskEnterCritical(a4, mstatus, out a5_228)
	word32 s0_233 = Mem21[a5_228 + 60<i32>:word32]
	word32 s6_326 = 0<32>
	word32 s3_179 = 2<32>
	word32 s1_105 = 0xFFFFFFFF<32>
	a1_124 = a1
	branch a4_229 <u a5_228 l230613FE
l2306138E:
	branch s2_137 == s3_179 l230613FE
l23061392:
	branch a5_228 == 0<32> l2306147A
l2306147A:
	a3_158 = vTaskExitCritical(a3, mstatus, out a4_159, out a5_151)
	a0_160 = 0<32>
l23061398:
	branch s6_326 == 0<32> l23061448
l23061448:
	vTaskInternalSetTimeOutState(fp + -40<i32>)
l2306139C:
	word32 a4_93
	word32 a5_645
	word32 a3_92 = vTaskExitCritical(a3, mstatus, out a4_93, out a5_645)
	word32 a5_646
	word32 a5_647
	vTaskEnterCritical(vTaskSuspendAll(a4_93, out a5_646), mstatus, out a5_647)
	branch CONVERT(SLICE(CONVERT(Mem76[s0_233 + 68<i32>:byte], byte, word32), byte, 0), byte, int32) != s1_105 l230613B8
l230613B4:
	Mem106[s0_233 + 68<i32>:byte] = 0<8>
l230613B8:
	branch CONVERT(SLICE(CONVERT(Mem108[s0_233 + 69<i32>:byte], byte, word32), byte, 0), byte, int32) != s1_105 l230613C8
l230613C4:
	Mem113[s0_233 + 69<i32>:byte] = 0<8>
l230613C8:
	word32 a5_118
	word32 a4_120
	vTaskExitCritical(a3_92, mstatus, out a4_120, out a5_118)
	a1_124 = fp + -52<i32>
	word32 a0_129
	word32 a2_130
	word32 a3_131
	word32 a4_132
	word32 s4_138
	word32 s1_648
	word32 a5_649
	word32 s0_135 = xTaskCheckForTimeOut(fp + -40<i32>, fp + -52<i32>, dwArgA4, a4_120, a5_118, mstatus, out s1_648, out a0_129, out a2_130, out a3_131, out a4_132, out a5_649, out s2_137, out s4_138)
	branch a0_129 != 0<32> l23061482
l23061482:
	word32 a4_145
	word32 a5_146
	word32 a2_652
	word32 a6_653
	word32 s0_650
	word32 a0_651
	word32 s4_654
	word32 t3_655
	xTaskResumeAll(prvUnlockQueue(s0_135, fp + -52<i32>, a2_130, a3_131, a4_132, mstatus, dwLoc08, out a4_145, out a5_146), a4_145, a5_146, mstatus, dwArg0118, dwArg0158, out s0_650, out s1_105, out a0_651, out a2_652, out a3_158, out a4_159, out a5_151, out a6_653, out s4_654, out t3_655)
	a0_160 = 0<32>
l230613D6:
	word32 a4_200
	word32 a1_171
	word32 a5_161
	word32 a4_162 = vTaskEnterCritical(a4_132, mstatus, out a5_161)
	word32 s0_164 = Mem142[a5_161 + 60<i32>:word32]
	branch a4_162 == a5_161 l23061428
l23061428:
	word32 a4_167
	word32 a5_656
	word32 a3_166 = vTaskExitCritical(a3_131, mstatus, out a4_167, out a5_656)
	word32 a2_172
	word32 a4_173
	word32 a4_186
	word32 a5_187
	word32 a0_190
	word32 a6_660
	word32 s4_661
	word32 s0_657
	word32 a2_658
	word32 a5_659
	word32 t3_662
	xTaskResumeAll(prvUnlockQueue(vTaskPlaceOnEventList(s4_138, fp + -52<i32>, dwArg24, a3_166, a4_167, mstatus, dwLoc1C, dwArg08, out a1_171, out a2_172, out a4_173, out s2_137, out s3_179), a1_171, a2_172, a3_166, a4_173, mstatus, dwLoc08, out a4_186, out a5_187), a4_186, a5_187, mstatus, dwArg0118, dwArg0158, out s0_657, out s1_105, out a0_190, out a2_658, out a3, out a4_200, out a5_659, out a6_660, out s4_661, out t3_662)
	a1_124 = a1_171
	branch a0_190 != 0<32> l230613F0
l23061440:
	__syscall()
	a1_124 = a1_171
l230613E2:
	word32 a4_204
	word32 a4_208
	word32 a5_209
	word32 a5_663
	word32 s0_664
	word32 a0_665
	word32 a5_667
	word32 a2_666
	word32 s4_669
	word32 t3_670
	word32 a6_668
	xTaskResumeAll(prvUnlockQueue(s0_164, fp + -52<i32>, a2_130, vTaskExitCritical(a3_131, mstatus, out a4_204, out a5_663), a4_204, mstatus, dwLoc08, out a4_208, out a5_209), a4_208, a5_209, mstatus, dwArg0118, dwArg0158, out s0_664, out s1_105, out a0_665, out a2_666, out a3, out a4_200, out a5_667, out a6_668, out s4_669, out t3_670)
l230613F0:
l230613F2:
	a4_229 = vTaskEnterCritical(a4_200, mstatus, out a5_228)
	s6_326 = 1<32>
	s0_233 = Mem142[a5_228 + 60<i32>:word32]
	branch a4_229 >=u a5_228 l2306138E
l230613FE:
	word32 a0_272
	word32 a2_274
	word32 a4_276
	word32 a5_277
	word32 a3_275
	s1_105 = prvCopyDataToQueue(s1_105, a1, s2_137, a3, a4_229, a5_228, mstatus, dwLoc08, out a0_272, out a1_124, out a2_274, out a3_275, out a4_276, out a5_277, out a7, out s2_137)
	word32 s0_289 = Mem271[a5_277 + 36<i32>:word32]
	branch a5_277 != 0<32> l23061450
l23061450:
	word32 a0_291
	word32 a4_672
	word32 a5_673
	word32 a2_671
	s1_105 = xTaskRemoveFromEventList(s0_289, a1_124, a2_274, a3_275, a4_276, mstatus, out a0_291, out a1_124, out a2_671, out a3_275, out a4_672, out a5_673)
	branch a0_291 == 0<32> l2306140E
l2306140C:
	branch a0_272 != 0<32> l2306145A
l2306145A:
	__syscall()
l2306140E:
	a3_158 = vTaskExitCritical(a3_275, mstatus, out a4_159, out a5_151)
	a0_160 = 1<32>
l23061414:
	0<32> = dwArg0198
	s1Out = s1_105
	a0Out = a0_160
	a1Out = a1_124
	a2Out = dwArg0138
	a3Out = a3_158
	a4Out = a4_159
	a5Out = a5_151
	a7Out = a7
	s2Out = s2_137
	s3Out = s3_179
	s4Out = dwArgF4
	s5Out = a1
	s6Out = s6_326
	s8Out = dwArgD4
	return dwArg0158
xQueueGenericSend_exit:


word32 xQueueCreateMutexStatic(word32 a0, word32 a1, word32 mstatus, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_init
//      vfs_init
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
xQueueCreateMutexStatic_entry:
l2306149C:
	word32 a0_16
	word32 a5_18
	word32 a2_112
	word32 s2_113
	word32 s3_114
	word32 s4_115
	word32 a3_28
	word32 a4_29
	word32 s1_20
	xQueueGenericCreateStatic(1<32>, 0<32>, 0<32>, a1, a0, mstatus, dwArg0118, out s1_20, out a0_16, out a2_112, out a3_28, out a4_29, out a5_18, out s2_113, out s3_114, out s4_115)
	word32 s0_30 = a0_16
	branch a0_16 == 0<32> l230614CA
l230614B4:
	Mem31[a0_16 + 8<i32>:word32] = 0<32>
	Mem32[a0_16:word32] = 0<32>
	Mem33[a0_16 + 12<i32>:word32] = 0<32>
	word32 a0_116
	word32 a1_117
	word32 a2_118
	word32 a5_119
	word32 a7_120
	word32 s2_121
	word32 s3_122
	word32 s4_123
	word32 s5_124
	word32 s6_125
	word32 s8_126
	s0_30 = xQueueGenericSend(a0_16, 0<32>, 0<32>, a4_29, a5_18, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_20, out a0_116, out a1_117, out a2_118, out a3_28, out a4_29, out a5_119, out a7_120, out s2_121, out s3_122, out s4_123, out s5_124, out s6_125, out s8_126)
l230614CA:
	a0Out = s0_30
	a2Out = dwArg10
	a3Out = a3_28
	a4Out = a4_29
	return s1_20
xQueueCreateMutexStatic_exit:


word32 xQueueGiveMutexRecursive(word32 a0, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg38, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_serial_unlock
//      at_data_output
//      at_dump_noend
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
xQueueGiveMutexRecursive_entry:
l230614D4:
	branch a0 == 0<32> l23061516
l23061516:
	word32 a5_149
	user_vAssertCalled(a4, mstatus, out a5_149)
l230614E2:
	word32 s2_105 = Mem11[a0 + 8<i32>:int32]
	word32 s1_23 = 0<32>
	word32 a5_22
	branch s2_105 == xTaskGetCurrentTaskHandle(out a5_22) l230614FE
l230614FE:
	word32 s0_24 = Mem11[a5_22 + 12<i32>:word32]
	Mem27[a5_22 + 0xB<32>:word32] = s0_24
	s1_23 = 1<32>
	a5_22 = a5_22 + 0xFFFFFFFF<32>
	branch a5_22 != 0xFFFFFFFF<32> l230614F0
l23061508:
	word32 a0_150
	word32 a1_151
	word32 a2_152
	word32 a7_153
	word32 s8_154
	xQueueGenericSend(s0_24, 0<32>, 0<32>, a4, a5_22 + 0xFFFFFFFF<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_23, out a0_150, out a1_151, out a2_152, out a3, out a4, out a5_22, out a7_153, out s2_105, out s3, out s4, out s5, out s6, out s8_154)
l230614F0:
	0<32> = dwArg38
	a0Out = s1_23
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4
	a5Out = a5_22
	s2Out = s2_105
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return s1_23
xQueueGiveMutexRecursive_exit:


word32 xQueueCreateMutex(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_cmd_mgr_init
//      ef_port_init
//      mem_init
//      aos_mutex_new
//      at_server_init
//      at_cmd_impl_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
xQueueCreateMutex_entry:
l2306151C:
	word32 a0_16
	word32 a2_114
	word32 s4_115
	word32 a3_19
	word32 a1_17
	word32 a4_20
	word32 a5_21
	word32 s1_24
	word32 s2_25
	word32 s3_26
	xQueueGenericCreate(ra, 1<32>, 0<32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s1_24, out a0_16, out a1_17, out a2_114, out a3_19, out a4_20, out a5_21, out s2_25, out s3_26, out s4_115)
	word32 s0_31 = a0_16
	branch a0_16 == 0<32> l23061546
l23061530:
	Mem32[a0_16 + 8<i32>:word32] = 0<32>
	Mem33[a0_16:word32] = 0<32>
	Mem34[a0_16 + 12<i32>:word32] = 0<32>
	word32 a0_116
	word32 a2_117
	word32 a7_118
	word32 s4_119
	word32 s5_120
	word32 s6_121
	word32 s8_122
	s0_31 = xQueueGenericSend(a0_16, 0<32>, 0<32>, a4_20, a5_21, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_24, out a0_116, out a1_17, out a2_117, out a3_19, out a4_20, out a5_21, out a7_118, out s2_25, out s3_26, out s4_119, out s5_120, out s6_121, out s8_122)
l23061546:
	a0Out = s0_31
	a1Out = a1_17
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_21
	s2Out = s2_25
	s3Out = s3_26
	return s1_24
xQueueCreateMutex_exit:


word32 xQueueGenericSendFromISR(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rw_main_task_post_from_fw
//      xTimerGenericCommand
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xQueueGenericSendFromISR_entry:
l23061550:
	branch a0 == 0<32> l230615E8
l230615E8:
	user_vAssertCalled(a4, mstatus, out a5)
l23061564:
	branch a1 == 0<32> l230615C6
l230615C6:
	branch a5 == 0<32> l23061566
l230615CA:
	user_vAssertCalled(a4, mstatus, out a5)
l23061566:
	word32 s0_55
	word32 a4_39 = 2<32>
	branch a3 == 2<32> l23061584
l23061584:
	a4_39 = 1<32>
	branch a5 == 1<32> l23061592
l2306158A:
	user_vAssertCalled(1<32>, mstatus, out a5)
l23061592:
	s0_55 = Mem54[a5 + 56<i32>:word32]
l2306156E:
	s0_55 = Mem41[0x3A<32>:word32]
	branch a5 >u 2<32> l23061594
l23061594:
	word32 a2_79
	word32 s2_85
	word32 a5_273
	word32 a7_274
	word32 a0_271
	word32 a4_272
	word32 a3_102
	word32 a1_100
	word32 s1_105 = prvCopyDataToQueue(CONVERT(Mem58[s0_55 + 69<i32>:byte], byte, word32), a1, a3, a3, a4_39, a5, mstatus, dwArg08, out a0_271, out a1_100, out a2_79, out a3_102, out a4_272, out a5_273, out a7_274, out s2_85)
	word32 a4_103 = CONVERT(SLICE(s1_105, byte, 0), byte, int32)
	word32 a5_104 = 0xFFFFFFFF<32>
	branch a4_103 == 0xFFFFFFFF<32> l230615D4
l230615D4:
	word32 s0_97 = Mem58[0x23<32>:word32]
	branch true l230615F2
l230615F2:
	word32 a0_99
	word32 a2_275
	s1_105 = xTaskRemoveFromEventList(s0_97, a1_100, a2_79, a3_102, a4_103, mstatus, out a0_99, out a1_100, out a2_275, out a3_102, out a4_103, out a5_104)
	branch a0_99 == 0<32> l230615D8
l230615FC:
	branch a2 == 0<32> l230615D8
l23061600:
	Mem112[a2:word32] = 1<32>
	a5_104 = 1<32>
l230615D8:
l230615DA:
	0<32> = dwArg0128
	s1Out = s1_105
	a0Out = 1<32>
	a1Out = a1_100
	a3Out = a3_102
	a4Out = a4_103
	a5Out = a5_104
	s2Out = s2_85
	s3Out = <invalid>
	return <invalid>
l230615AC:
	word32 s1_125 = s1_105 + 1<32> << 24<i32>
	Mem127[s0_55 + 69<i32>:byte] = SLICE(s1_125 >> 24<i32>, byte, 0)
	0<32> = dwArg0128
	s1Out = s1_125 >> 24<i32>
	a0Out = 1<32>
	a1Out = a1_100
	a3Out = a3_102
	a4Out = a4_103
	a5Out = 0xFFFFFFFF<32>
	s2Out = s2_85
	s3Out = <invalid>
	return <invalid>
l23061574:
	0<32> = dwArg0128
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a3Out = a3
	a4Out = 2<32>
	a5Out = a5
	s2Out = a3
	s3Out = <invalid>
	return <invalid>
xQueueGenericSendFromISR_exit:


word32 xQueueGiveFromISR(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_sem_signal
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
xQueueGiveFromISR_entry:
l2306160A:
	branch a0 == 0<32> l23061666
l23061666:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l23061618:
	branch a5 != 0<32> l23061654
l23061654:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
	branch a5 != 0<32> l23061620
l2306161C:
	branch a5 == 0<32> l2306165C
l2306165C:
	branch a5 == 0<32> l23061620
l23061660:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l23061620:
	word32 s0_39 = Mem9[a4 + 60<i32>:word32]
	branch a5 >=u a4 l2306164A
l2306162A:
	word32 a4_41 = CONVERT(Mem9[s0_39 + 69<i32>:byte], byte, word32)
	Mem43[a5 + 0x39<32>:word32] = s0_39
	a3 = CONVERT(SLICE(a4_41, byte, 0), byte, int32)
	a5 = 0xFFFFFFFF<32>
	branch a3 == 0xFFFFFFFF<32> l2306166C
l2306166C:
	word32 s0_47 = Mem43[0x23<32>:word32]
	branch false l23061648
l23061670:
	word32 a4_125
	word32 a0_57
	word32 a2_124
	word32 a1_123
	word32 s1_63 = xTaskRemoveFromEventList(s0_47, a1, a2, a3, a4_41, mstatus, out a0_57, out a1_123, out a2_124, out a3, out a4_125, out a5)
	branch a0_57 == 0<32> l23061648
l2306167A:
	branch s1_63 == 0<32> l23061648
l2306167C:
	Mem66[1<32>:word32] = s1_63
	a5 = 1<32>
l2306163E:
	Mem71[s0_39 + 69<i32>:byte] = SLICE(CONVERT(SLICE(a4_41 + 1<32>, byte, 0), byte, int32), byte, 0)
l23061648:
l2306164A:
	a5Out = a5
	return a3
xQueueGiveFromISR_exit:


word32 xQueueReceive(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blecontroller_main
//      ble_controller_deinit
//      k_queue_get
//      __bl_ble_sync_task
//      prvTimerTask
//      sys_arch_mbox_fetch
//      sys_arch_mbox_tryfetch
//      at_async_event
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xQueueReceive_entry:
l23061684:
	word32 s0_132 = a0
	word32 s3_153 = a1
	branch a0 == 0<32> l230617BA
l230617BA:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l2306169C:
	branch a1 == 0<32> l230617AE
l230617AE:
	s0_132 = Mem17[a5 + 64<i32>:word32]
	branch a5 == 0<32> l230616A0
l230617B4:
	word32 a5_575
	a2 = user_vAssertCalled(a4, mstatus, out a5_575)
l230616A0:
	word32 a5_36
	branch xTaskGetSchedulerState(out a5_36) == 0<32> l230617A2
l230617A2:
	a2 = dwArgA4
	branch a5_36 == 0<32> l230616A8
l230617A8:
	word32 a5_574
	a2 = user_vAssertCalled(a4, mstatus, out a5_574)
l230616A8:
	word32 a5_47
	word32 a4_178 = vTaskEnterCritical(a4, mstatus, out a5_47)
	word32 s2_107 = Mem17[s0_132 + 56<i32>:int32]
	branch s2_107 != 0<32> l2306175C
l230616B4:
	branch a5_47 == 0<32> l23061724
l230616B8:
	vTaskInternalSetTimeOutState(fp + -40<i32>)
	s1 = 0xFFFFFFFF<32>
l230616C4:
	word32 a4_65
	word32 a5_570
	word32 a3_64 = vTaskExitCritical(a3, mstatus, out a4_65, out a5_570)
	word32 a5_572
	word32 a5_571
	vTaskEnterCritical(vTaskSuspendAll(a4_65, out a5_571), mstatus, out a5_572)
	branch CONVERT(SLICE(CONVERT(Mem71[s0_132 + 68<i32>:byte], byte, word32), byte, 0), byte, int32) != s1 l230616E0
l230616DC:
	Mem76[s0_132 + 68<i32>:byte] = 0<8>
l230616E0:
	branch CONVERT(SLICE(CONVERT(Mem78[s0_132 + 69<i32>:byte], byte, word32), byte, 0), byte, int32) != s1 l230616F0
l230616EC:
	Mem83[s0_132 + 69<i32>:byte] = 0<8>
l230616F0:
	word32 a5_177
	word32 a4_135
	word32 a1_145
	word32 a5_88
	word32 a4_90
	vTaskExitCritical(a3_64, mstatus, out a4_90, out a5_88)
	a1 = fp + -52<i32>
	word32 a0_99
	word32 a2_100
	word32 a3_101
	word32 a4_102
	word32 s4_108
	word32 s1_547
	word32 a5_548
	word32 s0_105 = xTaskCheckForTimeOut(fp + -40<i32>, fp + -52<i32>, dwArgA4, a4_90, a5_88, mstatus, out s1_547, out a0_99, out a2_100, out a3_101, out a4_102, out a5_548, out s2_107, out s4_108)
	branch a0_99 != 0<32> l2306173A
l2306173A:
	word32 s4_556
	word32 s0_552
	word32 a6_555
	word32 a5_554
	word32 t3_557
	word32 a0_553
	word32 a4_115
	word32 a5_116
	word32 a4_129
	xTaskResumeAll(prvUnlockQueue(s0_105, fp + -52<i32>, a2_100, a3_101, a4_102, mstatus, dwLoc08, out a4_115, out a5_116), a4_115, a5_116, mstatus, dwArg0118, dwArg0158, out s0_552, out s1, out a0_553, out a2, out a3, out a4_129, out a5_554, out a6_555, out s4_556, out t3_557)
	word32 a5_130
	vTaskEnterCritical(a4_129, mstatus, out a5_130)
	s0_132 = Mem112[a5_130 + 56<i32>:word32]
	branch a5_130 == 0<32> l23061724
l2306174C:
	word32 a5_573
	a3 = vTaskExitCritical(a3, mstatus, out a4_135, out a5_573)
l230616FE:
	word32 a5_136
	vTaskEnterCritical(a4_102, mstatus, out a5_136)
	word32 s0_138 = Mem112[a5_136 + 56<i32>:word32]
	branch a5_136 == 0<32> l23061784
l23061784:
	word32 a5_558
	word32 a4_141
	word32 a3_140 = vTaskExitCritical(a3_101, mstatus, out a4_141, out a5_558)
	word32 s2_559
	word32 t3_563
	word32 a2_146
	word32 a4_147
	word32 a4_160
	word32 a5_161
	word32 a0_164
	word32 s4_562
	word32 a5_560
	word32 a6_561
	xTaskResumeAll(prvUnlockQueue(vTaskPlaceOnEventList(s4_108, fp + -52<i32>, dwArg24, a3_140, a4_141, mstatus, dwLoc1C, dwArg08, out a1_145, out a2_146, out a4_147, out s2_559, out s3_153), a1_145, a2_146, a3_140, a4_147, mstatus, dwLoc08, out a4_160, out a5_161), a4_160, a5_161, mstatus, dwArg0118, dwArg0158, out s0_132, out s1, out a0_164, out a2, out a3, out a4_135, out a5_560, out a6_561, out s4_562, out t3_563)
	a1 = a1_145
	branch a0_164 != 0<32> l23061750
l2306179C:
	__syscall()
	a1 = a1_145
l23061750:
	a4_178 = vTaskEnterCritical(a4_135, mstatus, out a5_177)
	s2_107 = Mem112[s0_132 + 56<i32>:int32]
	branch s2_107 == 0<32> l23061720
l23061706:
	word32 a0_565
	word32 a4_184
	word32 a4_188
	word32 a5_189
	word32 a4_202
	word32 a5_564
	word32 a6_567
	word32 s4_568
	word32 a5_566
	word32 t3_569
	xTaskResumeAll(prvUnlockQueue(s0_138, fp + -52<i32>, a2_100, vTaskExitCritical(a3_101, mstatus, out a4_184, out a5_564), a4_184, mstatus, dwLoc08, out a4_188, out a5_189), a4_188, a5_189, mstatus, dwArg0118, dwArg0158, out s0_132, out s1, out a0_565, out a2, out a3, out a4_202, out a5_566, out a6_567, out s4_568, out t3_569)
	a4_178 = vTaskEnterCritical(a4_202, mstatus, out a5_177)
	s2_107 = Mem112[s0_132 + 56<i32>:int32]
	branch s2_107 != 0<32> l2306175C
l2306175C:
	word32 s2_217 = s2_107 + 0xFFFFFFFF<32>
	word32 a5_225
	word32 a2_227
	word32 a4_229
	word32 a3_228
	word32 a1_226 = prvCopyDataFromQueue(s3_153, a2, a4_178, out a2_227, out a3_228, out a4_229, out a5_225)
	Mem238[s0_132 + 56<i32>:word32] = s2_217
	word32 s0_239 = Mem238[a5_225 + 16<i32>:word32]
	branch a5_225 != 0<32> l230617C0
l230617C0:
	word32 a4_550
	word32 a5_551
	word32 a2_549
	word32 a0_242
	s1 = xTaskRemoveFromEventList(s0_239, a1_226, a2_227, a3_228, a4_229, mstatus, out a0_242, out a1_226, out a2_549, out a3_228, out a4_550, out a5_551)
	branch a0_242 == 0<32> l2306176E
l230617CA:
	__syscall()
l2306176E:
	word32 a5_252
	word32 a4_254
	word32 a3_253 = vTaskExitCritical(a3_228, mstatus, out a4_254, out a5_252)
	s1Out = s1
	a0Out = 1<32>
	a1Out = a1_226
	a2Out = <invalid>
	a3Out = a3_253
	a4Out = a4_254
	a5Out = a5_252
	s2Out = s2_217
	s3Out = s3_153
	s4Out = <invalid>
	s8Out = <invalid>
	return <invalid>
l23061720:
	branch a5_177 != 0<32> l230616C4
l23061724:
	word32 a5_280
	word32 a4_282
	word32 a3_281 = vTaskExitCritical(a3, mstatus, out a4_282, out a5_280)
	s1Out = s1
	a0Out = 0<32>
	a1Out = a1
	a2Out = <invalid>
	a3Out = a3_281
	a4Out = a4_282
	a5Out = a5_280
	s2Out = s2_107
	s3Out = s3_153
	s4Out = <invalid>
	s8Out = <invalid>
	return <invalid>
xQueueReceive_exit:


word32 xQueueSemaphoreTake(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_all_ap_scan
//      cmd_mgr_print
//      cmd_mgr_msgind
//      cmd_mgr_llind
//      cmd_mgr_queue
//      cmd_mgr_drain
//      k_sem_take
//      __protocol_send
//      ef_port_env_lock
//      xQueueTakeMutexRecursive
//      sys_sem_new
//      sys_mutex_lock
//      aos_open
//      aos_close
//      aos_stat
//      aos_opendir
//      aos_closedir
//      aos_register_driver
//      aos_register_fs
//      aos_mutex_lock
//      aos_sem_wait
//      http_url_req
//      tcp_connected_callback
//      tcp_receive_callback
//      tcp_err_callback
//      tcp_accept_callback
//      bl_cipstart
//      bl_cipclose
//      bl_cipsslcconf_path
//      bl_cipsslcsni
//      bl_cipsslcalpn
//      bl_sha_mutex_take
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xQueueSemaphoreTake_entry:
l230617D0:
	branch a0 == 0<32> l23061914
l23061914:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l230617E6:
	branch a5 != 0<32> l230618EE
l230618EE:
	word32 a5_584
	a2 = user_vAssertCalled(a4, mstatus, out a5_584)
l230617EC:
	word32 a5_33
	word32 a0_132 = xTaskGetSchedulerState(out a5_33)
	branch a0_132 == 0<32> l230618E2
l230618E2:
	a2 = dwArgA4
	branch a5_33 == 0<32> l230617F4
l230618E8:
	word32 a5_614
	a2 = user_vAssertCalled(a4, mstatus, out a5_614)
l230617F4:
	word32 a4_148
	word32 a3_147
	word32 a5_146
	word32 a5_280
	word32 a4_281 = vTaskEnterCritical(a4, mstatus, out a5_280)
	word32 s0_284 = Mem17[a5_280 + 56<i32>:word32]
	word32 s3_162 = 0<32>
	word32 s2_120 = 0<32>
	word32 s1_137 = 0xFFFFFFFF<32>
	branch a5_280 != 0<32> l2306186A
l23061806:
	branch a5_280 == 0<32> l2306192C
l2306192C:
	branch s3_162 != 0<32> l2306194A
l2306194A:
	word32 a5_590
	user_vAssertCalled(a4_281, mstatus, out a5_590)
l23061930:
	a3_147 = vTaskExitCritical(a3, mstatus, out a4_148, out a5_146)
	s3_162 = 0<32>
l2306180C:
	branch s2_120 == 0<32> l2306189C
l2306189C:
	vTaskInternalSetTimeOutState(fp + -40<i32>)
l23061810:
	word32 a4_76
	word32 a5_585
	word32 a3_75 = vTaskExitCritical(a3, mstatus, out a4_76, out a5_585)
	word32 a5_586
	word32 a5_587
	vTaskEnterCritical(vTaskSuspendAll(a4_76, out a5_586), mstatus, out a5_587)
	branch CONVERT(SLICE(CONVERT(Mem53[s0_284 + 68<i32>:byte], byte, word32), byte, 0), byte, int32) != s1_137 l2306182C
l23061828:
	Mem89[s0_284 + 68<i32>:byte] = 0<8>
l2306182C:
	branch CONVERT(SLICE(CONVERT(Mem91[s0_284 + 69<i32>:byte], byte, word32), byte, 0), byte, int32) != s1_137 l2306183C
l23061838:
	Mem96[s0_284 + 69<i32>:byte] = 0<8>
l2306183C:
	word32 a4_184
	word32 a1_223
	word32 a5_101
	word32 a4_103
	vTaskExitCritical(a3_75, mstatus, out a4_103, out a5_101)
	a1 = fp + -52<i32>
	word32 a0_112
	word32 a2_113
	word32 a3_114
	word32 a4_115
	word32 a5_589
	word32 s1_588
	word32 s4_121
	word32 s0_118 = xTaskCheckForTimeOut(fp + -40<i32>, fp + -52<i32>, dwArgA4, a4_103, a5_101, mstatus, out s1_588, out a0_112, out a2_113, out a3_114, out a4_115, out a5_589, out s2_120, out s4_121)
	branch a0_112 != 0<32> l23061882
l23061882:
	word32 a4_128
	word32 a5_129
	word32 a3_141
	word32 a4_142
	word32 a5_592
	word32 a6_593
	word32 s4_594
	word32 t3_595
	word32 s0_591
	xTaskResumeAll(prvUnlockQueue(s0_118, fp + -52<i32>, a2_113, a3_114, a4_115, mstatus, dwLoc08, out a4_128, out a5_129), a4_128, a5_129, mstatus, dwArg0118, dwArg0158, out s0_591, out s1_137, out a0_132, out a2, out a3_141, out a4_142, out a5_592, out a6_593, out s4_594, out t3_595)
	word32 a5_143
	vTaskEnterCritical(a4_142, mstatus, out a5_143)
	branch a5_143 == 0<32> l230618C8
l230618C8:
	a3_147 = vTaskExitCritical(a3_141, mstatus, out a4_148, out a5_146)
	branch s3_162 != 0<32> l230618F4
l230618F4:
	word32 a5_152
	word32 a4_153 = vTaskEnterCritical(a4_148, mstatus, out a5_152)
	branch fp == 0xFFFFFFCC<32> l23061906
l230618FC:
	a5_152 = Mem125[a5_152:word32]
	a1 = 32<i32> - a5_152
l23061906:
	word32 a3_177
	s1_137 = vTaskPriorityDisinheritAfterTimeout(a0_132, a1, a2, a3_147, a4_153, a5_152, mstatus, dwLoc08, out a1, out a3_177, out s2_120)
	s3_162 = 0<32>
	a3_147 = vTaskExitCritical(a3_177, mstatus, out a4_148, out a5_146)
l23061894:
	word32 a5_605
	a3 = vTaskExitCritical(a3_141, mstatus, out a4_184, out a5_605)
l2306184A:
	word32 a5_186
	vTaskEnterCritical(a4_115, mstatus, out a5_186)
	word32 s0_188 = Mem125[a5_186 + 56<i32>:word32]
	branch a5_186 == 0<32> l230618A4
l230618A4:
	word32 a5_189
	word32 a4_191
	word32 a3_190 = vTaskExitCritical(a3_114, mstatus, out a4_191, out a5_189)
	branch a5_189 == 0<32> l2306191A
l2306191A:
	word32 a5_606
	a1 = xTaskPriorityInherit(a0_112, a2_113, a3_190, vTaskEnterCritical(a4_191, mstatus, out a5_606), out s4_121)
	word32 a5_607
	a3_190 = vTaskExitCritical(a3_190, mstatus, out a4_191, out a5_607)
l230618AC:
	word32 a2_224
	word32 a4_225
	word32 a4_238
	word32 a5_239
	word32 s0_609
	word32 a6_611
	word32 s4_612
	word32 t3_613
	word32 a5_610
	word32 s2_608
	xTaskResumeAll(prvUnlockQueue(vTaskPlaceOnEventList(s4_121, a1, dwArg24, a3_190, a4_191, mstatus, dwLoc1C, dwArg08, out a1_223, out a2_224, out a4_225, out s2_608, out s3_162), a1_223, a2_224, a3_190, a4_225, mstatus, dwLoc08, out a4_238, out a5_239), a4_238, a5_239, mstatus, dwArg0118, dwArg0158, out s0_609, out s1_137, out a0_132, out a2, out a3, out a4_184, out a5_610, out a6_611, out s4_612, out t3_613)
	a1 = a1_223
	branch a0_132 != 0<32> l23061860
l230618C0:
	__syscall()
	a1 = a1_223
l23061852:
	word32 a4_256
	word32 a4_260
	word32 a5_261
	word32 t3_601
	word32 s4_600
	word32 a6_599
	word32 a5_596
	word32 s0_597
	word32 a5_598
	xTaskResumeAll(prvUnlockQueue(s0_188, fp + -52<i32>, a2_113, vTaskExitCritical(a3_114, mstatus, out a4_256, out a5_596), a4_256, mstatus, dwLoc08, out a4_260, out a5_261), a4_260, a5_261, mstatus, dwArg0118, dwArg0158, out s0_597, out s1_137, out a0_132, out a2, out a3, out a4_184, out a5_598, out a6_599, out s4_600, out t3_601)
l23061860:
l23061862:
	a4_281 = vTaskEnterCritical(a4_184, mstatus, out a5_280)
	s2_120 = 1<32>
	s0_284 = Mem125[a5_280 + 56<i32>:word32]
	branch a5_280 == 0<32> l23061806
l2306186A:
	word32 s0_287 = Mem286[a4_281:word32]
	word32 a5_289 = a5_280 + 0xFFFFFFFF<32>
	Mem290[a5_289 + 56<i32>:word32] = s0_287
	branch a4_281 == 0<32> l23061950
l23061950:
	a3 = pvTaskIncrementMutexHeldCount(a0_132, a4_281, out a4_281, out a5_289)
	Mem298[a0_132 + 8<i32>:word32] = s0_287
l23061874:
	word32 s0_301 = Mem300[a5_289 + 16<i32>:word32]
	branch a5_289 != 0<32> l23061938
l23061938:
	word32 a0_329
	word32 a2_602
	word32 a4_603
	word32 a5_604
	s1_137 = xTaskRemoveFromEventList(s0_301, a1, a2, a3, a4_281, mstatus, out a0_329, out a1, out a2_602, out a3, out a4_603, out a5_604)
	branch a0_329 == 0<32> l2306187A
l23061944:
	__syscall()
l2306187A:
	a3_147 = vTaskExitCritical(a3, mstatus, out a4_148, out a5_146)
	s3_162 = 1<32>
l230618D0:
	s1Out = s1_137
	a0Out = s3_162
	a1Out = a1
	a2Out = dwArg0138
	a3Out = a3_147
	a4Out = a4_148
	a5Out = a5_146
	s2Out = s2_120
	s3Out = s3_162
	s4Out = dwArgF4
	s8Out = dwArgD4
	return dwArg0158
xQueueSemaphoreTake_exit:


word32 xQueueTakeMutexRecursive(word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg38, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      at_serial_lock
//      at_data_output
//      at_dump_noend
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
xQueueTakeMutexRecursive_entry:
l23061958:
	branch a0 == 0<32> l230619A2
l230619A2:
	word32 a5_135
	a2 = user_vAssertCalled(a4, mstatus, out a5_135)
l23061968:
	word32 s0_22 = Mem11[s1 + 8<i32>:word32]
	word32 a5_24
	branch s1 == xTaskGetCurrentTaskHandle(out a5_24) l2306198E
l2306198E:
	Mem28[a5_24 + 0xD<32>:word32] = Mem11[a5_24 + 12<i32>:word32]
	0<32> = dwArg38
	a0Out = 1<32>
	a2Out = <invalid>
	a3Out = a3
	a4Out = a4
	s2Out = a1
	s3Out = s3
	return s1
l23061972:
	word32 a0_43
	word32 a3_46
	word32 a4_47
	word32 a5_48
	word32 s1_51
	word32 s2_52
	word32 s3_53
	word32 s8_139
	word32 s4_138
	word32 a2_137
	word32 a1_136
	xQueueSemaphoreTake(s0_22, a1, a2, a3, a4, a5_24, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_51, out a0_43, out a1_136, out a2_137, out a3_46, out a4_47, out a5_48, out s2_52, out s3_53, out s4_138, out s8_139)
	branch a0_43 == 0<32> l23061982
l2306197C:
	Mem60[a5_48 + 0xD<32>:word32] = Mem11[a5_48 + 12<i32>:word32]
l23061982:
	0<32> = dwArg38
	a0Out = a0_43
	a2Out = <invalid>
	a3Out = a3_46
	a4Out = a4_47
	s2Out = s2_52
	s3Out = s3_53
	return s1_51
xQueueTakeMutexRecursive_exit:


word32 uxQueueMessagesWaiting(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_queue_is_empty
//      k_queue_get_cnt
//      k_sem_count_get
//      sys_mbox_free
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
uxQueueMessagesWaiting_entry:
l230619A8:
	branch a0 == 0<32> l230619C6
l230619C6:
	word32 a5_40
	user_vAssertCalled(a4, mstatus, out a5_40)
l230619B2:
	word32 a5_41
	vTaskEnterCritical(a4, mstatus, out a5_41)
	word32 s0_20 = Mem7[a0 + 56<i32>:word32]
	word32 a5_23
	word32 a4_25
	word32 a3_24 = vTaskExitCritical(a3, mstatus, out a4_25, out a5_23)
	a2Out = dwArg10
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_23
	return s0_20
uxQueueMessagesWaiting_exit:


word32 vQueueDelete(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_all_ap_scan
//      ble_controller_deinit
//      k_queue_free
//      k_sem_delete
//      sys_mbox_free
//      sys_sem_free
//      aos_mutex_free
//      aos_sem_free
//      at_server_init
//      http_url_req
//      at_cmd_impl_init
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
vQueueDelete_entry:
l230619CC:
	branch a0 == 0<32> l23061A06
l23061A06:
	word32 a5_166
	user_vAssertCalled(a4, mstatus, out a5_166)
	word32 a4_121 = 0<32>
l23061A22:
	branch a0 == a3 l23061A44
l23061A44:
	word32 a4_24 = a4_121 << 3<i32>
	Mem27[a4_24 + 0x42026674<32>:word32] = 0<32>
	Mem28[a4_24 + 0x42026678<32>:word32] = 0<32>
	a4_121 = a4_24 + 0x42026674<32>
l23061A2A:
	a4_121 = a4_121 + 1<32>
	branch a4_121 != 8<32> l23061A22
l23061A30:
	word32 a5_33 = CONVERT(Mem32[a0 + 70<i32>:byte], byte, word32)
	branch a5_33 == 0<32> l23061A3C
l23061A3C:
l23061A40_thunk_vPortFree:
	word32 a2_41
	word32 a3_42
	word32 a4_43
	word32 a5_44
	word32 s1_45
	word32 a0_47
	word32 a1_48
	word32 s0_50
	word32 s4_51
	word32 t3_168
	word32 a6_167
	vPortFree(a0, 8<32>, a5_33, mstatus, dwArg0158, dwArg0198, out s0_50, out s1_45, out a0_47, out a1_48, out a2_41, out a3_42, out a4_43, out a5_44, out a6_167, out s4_51, out t3_168)
	s1Out = s1_45
	a0Out = a0_47
	a1Out = a1_48
	a2Out = a2_41
	a3Out = a3_42
	a4Out = a4_43
	a5Out = a5_44
	s4Out = s4_51
	return s0_50
l23061A36:
	s1Out = s1
	a0Out = a0
	a1Out = 0x42026674<32>
	a2Out = 8<32>
	a3Out = a3
	a4Out = a4_121
	a5Out = a5_33
	s4Out = s4
	return s0
l230619CE:
	word32 a4_120 = 0<32>
l230619DE:
	branch a0 == a3 l230619F8
l230619F8:
	word32 a4_66 = a4_120 << 3<i32>
	Mem69[a4_66 + 0x42026674<32>:word32] = 0<32>
	Mem70[a4_66 + 0x42026678<32>:word32] = 0<32>
	a4_120 = a4_66 + 0x42026674<32>
l230619E6:
	a4_120 = a4_120 + 1<32>
	branch a4_120 != 8<32> l230619DE
l230619EC:
	word32 a5_75 = CONVERT(Mem74[a0 + 70<i32>:byte], byte, word32)
	branch a5_75 == 0<32> l230619F4
l230619F4:
l230619F4_thunk_vPortFree:
	word32 a2_81
	word32 a3_82
	word32 a4_83
	word32 a5_84
	word32 s1_85
	word32 a0_87
	word32 a1_88
	word32 s0_90
	word32 s4_91
	word32 t3_170
	word32 a6_169
	vPortFree(a0, 8<32>, a5_75, mstatus, dwArg0158, dwArg0198, out s0_90, out s1_85, out a0_87, out a1_88, out a2_81, out a3_82, out a4_83, out a5_84, out a6_169, out s4_91, out t3_170)
	s1Out = s1_85
	a0Out = a0_87
	a1Out = a1_88
	a2Out = a2_81
	a3Out = a3_82
	a4Out = a4_83
	a5Out = a5_84
	s4Out = s4_91
	return s0_90
l230619F2:
	s1Out = s1
	a0Out = a0
	a1Out = 0x42026674<32>
	a2Out = 8<32>
	a3Out = a3
	a4Out = a4_120
	a5Out = a5_75
	s4Out = s4
	return s0
vQueueDelete_exit:


word32 vQueueAddToRegistry(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvCheckForValidListAndQueue
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut: a6
// Trashed: a2 a4 a5 a6
// Preserved: sp
vQueueAddToRegistry_entry:
l23061A52:
	word32 a4_12 = 0<32>
l23061A62:
	branch a3 == 0<32> l23061A70
l23061A70:
	word32 a4_13 = a4_12 << 3<i32>
	Mem17[a1:word32] = a4_13 + 0x42026674<32>
	Mem19[a0 + 4<i32>:word32] = a4_13 + 0x42026674<32>
	return
l23061A68:
	a4_12 = a4_12 + 1<32>
	branch a4_12 != 8<32> l23061A62
l23061A6E:
	return
vQueueAddToRegistry_exit:


word32 vQueueWaitForMessageRestricted(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg38, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvTimerTask
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31]
// LiveOut: a3 a4 a5 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
vQueueWaitForMessageRestricted_entry:
l23061A7A:
	word32 a5_139
	vTaskEnterCritical(a4, mstatus, out a5_139)
	branch CONVERT(SLICE(CONVERT(Mem13[a0 + 68<i32>:byte], byte, word32), byte, 0), byte, int32) != 0xFFFFFFFF<32> l23061AA0
l23061A9C:
	Mem26[a0 + 68<i32>:byte] = 0<8>
l23061AA0:
	branch CONVERT(SLICE(CONVERT(Mem28[a0 + 69<i32>:byte], byte, word32), byte, 0), byte, int32) != 0xFFFFFFFF<32> l23061AB2
l23061AAE:
	Mem33[a0 + 69<i32>:byte] = 0<8>
l23061AB2:
	word32 a5_39
	word32 a4_41
	word32 a3_40 = vTaskExitCritical(a3, mstatus, out a4_41, out a5_39)
	word32 s0_43 = Mem42[a5_39 + 56<i32>:word32]
	branch a5_39 == 0<32> l23061ACA
l23061ACA:
	word32 a1_54
	word32 a4_56
	word32 s3_62
	word32 s0_59 = vTaskPlaceOnEventListRestricted(s0_43 + 36<i32>, a1, a2, a3_40, a4_41, mstatus, dwArg14, dwArg38, out a1_54, out a4_56, out s3_62)
	0<32> = dwArg38
l23061AE2_thunk_prvUnlockQueue:
	word32 a4_73
	word32 a5_74
	word32 a3_72 = prvUnlockQueue(s0_59, a1_54, dwArg10, a3_40, a4_56, mstatus, dwArg38, out a4_73, out a5_74)
	a4Out = a4_73
	a5Out = a5_74
	s3Out = s3_62
	return a3_72
l23061ABA:
	0<32> = dwArg38
l23061AC6_thunk_prvUnlockQueue:
	word32 a4_86
	word32 a5_87
	word32 a3_85 = prvUnlockQueue(s0_43, a1, dwArg10, a3_40, a4_41, mstatus, dwArg38, out a4_86, out a5_87)
	a4Out = a4_86
	a5Out = a5_87
	s3Out = s3
	return a3_85
vQueueWaitForMessageRestricted_exit:


word32 prvInitialiseNewStreamBuffer(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferGenericCreate
//      xStreamBufferGenericCreateStatic
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..7] mstatus:[0..31] ra:[0..31]
// LiveOut: a3 a4 a5 ra s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3
// Preserved: sp
prvInitialiseNewStreamBuffer_entry:
l23061AE6:
	word32 a0_28
	word32 a4_32
	word32 t1_93
	word32 a1_94
	word32 a2_95
	word32 a3_96
	word32 a5_97
	word32 ra_34 = memset(ra, a1, 85<i32>, a2, out t1_93, out a0_28, out a1_94, out a2_95, out a3_96, out a4_32, out a5_97)
	branch a1 == a0_28 l23061B10
l23061B0C:
	word32 a5_102
	user_vAssertCalled(a4_32, mstatus, out a5_102)
l23061B10:
	word32 a3_48
	word32 a4_49
	word32 a5_50
	word32 t1_98
	word32 a0_99
	word32 a1_100
	word32 a2_101
	word32 ra_51 = memset(ra_34, a0, 0<32>, 36<i32>, out t1_98, out a0_99, out a1_100, out a2_101, out a3_48, out a4_49, out a5_50)
	Mem55[a1 + 24<i32>:word32] = a0
	Mem57[a0 + 8<i32>:word32] = a2
	Mem59[a0 + 12<i32>:word32] = a3
	Mem61[a0 + 28<i32>:byte] = SLICE(a4, byte, 0)
	s0Out = s1
	s1Out = a1
	a3Out = a3_48
	a4Out = a4_49
	a5Out = a5_50
	s2Out = a4
	s4Out = dwArg04
	return ra_51
prvInitialiseNewStreamBuffer_exit:


word32 prvWriteBytesToBuffer(word32 s0, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg0128, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferSendFromISR
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvWriteBytesToBuffer_entry:
l23061B3A:
	word32 a3_104
	word32 a1_102
	word32 a5_100
	word32 a4_114
	word32 s0_132
	word32 s1_129
	branch a2 == 0<32> l23061BBA
l23061BBA:
	word32 a5_25
	user_vAssertCalled(a4, mstatus, out a5_25)
	branch a5_25 <u s0 l23061BB2
l23061BB2:
	s3 = 0<32>
l23061BC6:
	word32 a2_251
	word32 a6_252
	word32 a7_253
	memcpy(a0 + s0, a1, 0<32>, out a1_102, out a2_251, out a3_104, out a4_114, out a5_100, out a6_252, out a7_253)
	s1_129 = Mem15[a5_100 + 8<i32>:word32]
	s0_132 = s0 + a2
	branch s0_132 <u a5_100 l23061B92
l23061BDA:
l23061B50:
	a0 = Mem15[a5 + 8<i32>:word32]
	s3 = a5 - s0
	branch a2 <u s3 l23061BA6
l23061BA6:
	s3 = a2
	a4 = s0 + a2
	branch a5 >=u a4 l23061B64
l23061BB0:
l23061B5C:
	a4 = s0 + s3
	branch a5 <u a4 l23061BB4
l23061BB4:
	word32 a5_240
	user_vAssertCalled(a4, mstatus, out a5_240)
l23061B64:
	word32 a0_72 = a0 + s0
	word32 a2_241
	word32 a6_242
	word32 a7_243
	memcpy(a0_72, a1, s3, out a1_102, out a2_241, out a3_104, out a4_114, out a5_100, out a6_242, out a7_243)
	branch s3 >=u a2 l23061B88
l23061B74:
	word32 a2_89 = a2 - s3
	branch a5_100 <u a2_89 l23061BDC
l23061BDC:
	word32 a5_244
	user_vAssertCalled(a4_114, mstatus, out a5_244)
	word32 a2_245
	word32 a6_246
	word32 a7_247
	memcpy(a0_72, a1 + s3, a2_89, out a1_102, out a2_245, out a3_104, out a4_114, out a5_100, out a6_246, out a7_247)
l23061B7E:
	word32 a2_248
	word32 a6_249
	word32 a7_250
	memcpy(a0_72, a1 + s3, a2_89, out a1_102, out a2_248, out a3_104, out a4_114, out a5_100, out a6_249, out a7_250)
l23061B88:
	s1_129 = Mem128[a5_100 + 8<i32>:word32]
	s0_132 = s0 + a2
	branch s0_132 <u a5_100 l23061B92
l23061B90:
	s0_132 = s0_132 - a5_100
l23061B92:
	Mem139[s0_132 + 4<i32>:word32] = s1_129
	0<32> = dwArg0128
	a0Out = a2
	a1Out = a1_102
	a2Out = dwArg0100
	a3Out = a3_104
	a4Out = a4_114
	a5Out = a5_100
	s2Out = a2
	s3Out = s3
	return dwArgE4
prvWriteBytesToBuffer_exit:


word32 prvReadBytesFromBuffer(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferReceive
//      xStreamBufferReceiveFromISR
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvReadBytesFromBuffer_entry:
l23061BF0:
	word32 s0_19 = a3
	branch a3 <u a2 l23061C08
l23061C06:
	s0_19 = a2
l23061C08:
	word32 s1_129
	s1_129 = s1
	branch s0_19 == 0<32> l23061C5C
l23061C0A:
	word32 a4_53
	word32 s3_26 = Mem17[a0:int32]
	word32 s4_30 = a5 - s3_26
	branch s0_19 <u s4_30 l23061C70
l23061C70:
	s4_30 = s0_19
	branch a2 >=u s0_19 l23061C22
l23061C18:
	branch a2 <u s4_30 l23061C7C
l23061C7C:
	word32 a5_48
	user_vAssertCalled(a4, mstatus, out a5_48)
	a4_53 = s3_26 + s4_30
	branch a5_48 >=u a4_53 l23061C2A
l23061C22:
	a4_53 = s3_26 + s4_30
	branch a5 <u a4_53 l23061C8A
l23061C8A:
	word32 a5_299
	user_vAssertCalled(a4_53, mstatus, out a5_299)
l23061C2A:
	word32 a2_300
	word32 a6_301
	word32 a7_302
	memcpy(a1, a1 + s3_26, s4_30, out a1, out a2_300, out a3, out a4, out a5, out a6_301, out a7_302)
	s2 = a2
	s5 = a1
	branch s4_30 >=u s0_19 l23061C4C
l23061C3A:
	branch a2 <u s0_19 l23061C90
l23061C90:
	word32 a5_303
	user_vAssertCalled(a4, mstatus, out a5_303)
l23061C3E:
	word32 a7_306
	word32 a2_304
	word32 a6_305
	memcpy(a1 + s4_30, a1, s0_19 - s4_30, out a1, out a2_304, out a3, out a4, out a5, out a6_305, out a7_306)
l23061C4C:
	s1_129 = Mem17[a5 + 8<i32>:word32]
	s3 = s3_26 + s0_19
	branch s3 <u a5 l23061C58
l23061C54:
	s3 = s3 - a5
l23061C58:
	Mem137[s1_129:word32] = s3
l23061C5C:
	s1Out = s1_129
	a0Out = s0_19
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	return s1
prvReadBytesFromBuffer_exit:


word32 xStreamBufferGenericCreate(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg0118, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 a5 ra s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
xStreamBufferGenericCreate_entry:
l23061C96:
	word32 a5_14 = 1<32>
	word32 s1_18 = a1
	branch a2 == 1<32> l23061CFA
l23061CFA:
	a5_14 = 4<32>
	branch a0 >u 4<32> l23061CB0
l23061D02:
	user_vAssertCalled(a4, mstatus, out a5_14)
	branch a0 >=u a1 l23061CB4
l23061D0A:
l23061CAC:
	branch a0 == 0<32> l23061CEE
l23061CEE:
	user_vAssertCalled(a4, mstatus, out a5_14)
	branch a0 >=u a1 l23061CB4
l23061CF8:
l23061CB0:
	branch a0 <u a1 l23061CE6
l23061CE6:
	user_vAssertCalled(a4, mstatus, out a5_14)
	branch a1 != 0<32> l23061CB6
l23061CEC:
l23061CB4:
	branch a1 == 0<32> l23061CE2
l23061CE2:
	s1_18 = 1<32>
l23061CB6:
	word32 s8_229
	word32 a0_78
	word32 s3_88
	word32 s4_228
	word32 a1_224
	word32 a2_225
	word32 a6_226
	word32 s2_227
	word32 s1_107
	word32 a3_101
	word32 a4_102
	word32 a5_103
	word32 s0_106 = pvPortMalloc(ra, s1_18, a0 + 37<i32>, a3, a4, a5_14, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_107, out a0_78, out a1_224, out a2_225, out a3_101, out a4_102, out a5_103, out a6_226, out s2_227, out s3_88, out s4_228, out s8_229)
	word32 s2_108 = a0_78
	branch a0_78 == 0<32> l23061CD2
l23061CC2:
	word32 s4_230
	ra = prvInitialiseNewStreamBuffer(ra, a0_78, a0_78 + 36<i32>, s0_106 + 1<i32>, s1_107, s3_88, mstatus, out s0_106, out s1_107, out a3_101, out a4_102, out a5_103, out s2_108, out s4_230)
l23061CD2:
	s0Out = s0_106
	s1Out = s1_107
	a0Out = s2_108
	a3Out = a3_101
	a4Out = a4_102
	a5Out = a5_103
	s2Out = s2_108
	return ra
xStreamBufferGenericCreate_exit:


word32 xStreamBufferGenericCreateStatic(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg0128, ptr32 & s0Out, ptr32 & a0Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a0 ra s0 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
xStreamBufferGenericCreateStatic_entry:
l23061D0C:
	word32 s1_114
	word32 s4_161 = a0
	word32 s2_120 = a1
	word32 s0_102 = a4
	branch a3 == 0<32> l23061DB8
l23061DB8:
	word32 a5_377
	user_vAssertCalled(a4, mstatus, out a5_377)
	branch a4 != 0<32> l23061D28
l23061DBE:
l23061D26:
	branch a4 == 0<32> l23061DAE
l23061DAE:
	word32 a5_378
	user_vAssertCalled(a4, mstatus, out a5_378)
	branch a0 >=u a1 l23061D2C
l23061DB6:
l23061D28:
	branch a0 <u a1 l23061DA4
l23061DA4:
	word32 a5_379
	user_vAssertCalled(a4, mstatus, out a5_379)
	branch a1 != 0<32> l23061D30
l23061DAC:
l23061D2C:
	branch a1 == 0<32> l23061D7A
l23061D7A:
	s2_120 = 1<32>
	s1_114 = CONVERT(a2 != 0<32>, bool, word32) + 2<32>
	branch a0 >u 4<32> l23061D3C
l23061D30:
	s1_114 = CONVERT(a2 != 0<32>, bool, word32) + 2<32>
	branch a0 <=u 4<32> l23061D88
l23061D88:
	word32 a5_380
	user_vAssertCalled(a4, mstatus, out a5_380)
	branch a4 == 36<i32> l23061D48
l23061D3C:
	branch a4 != 36<i32> l23061D98
l23061D98:
	word32 a5_381
	user_vAssertCalled(a4, mstatus, out a5_381)
	branch a3 != 0<32> l23061D4C
l23061D48:
	branch a3 == 0<32> l23061DA0
l23061DA0:
	s0_102 = 0<32>
l23061D4C:
	branch a4 == 0<32> l23061D68
l23061D4E:
	word32 a3_383
	word32 s2_386
	word32 a5_385
	word32 a4_384
	word32 s1_382
	ra = prvInitialiseNewStreamBuffer(ra, a4, a3, a0, s2_120, s1_114, mstatus, out s0_102, out s1_382, out a3_383, out a4_384, out a5_385, out s2_386, out s4_161)
	Mem171[s0_102 + 28<i32>:byte] = SLICE(CONVERT(Mem166[s0_102 + 28<i32>:byte], byte, word32) | 2<i32>, byte, 0)
l23061D68:
	0<32> = dwArg0128
	s0Out = dwArgE4
	a0Out = s0_102
	s4Out = s4_161
	return ra
xStreamBufferGenericCreateStatic_exit:


word32 vStreamBufferDelete(word32 ra, word32 a0, word32 a2, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0024:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a4 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s4 t0 t1 t3 tp
// Preserved: sp
vStreamBufferDelete_entry:
l23061DC0:
	branch a0 == 0<32> l23061DD8
l23061DD8:
	word32 a5_103
	user_vAssertCalled(a4, mstatus, out a5_103)
	word32 a5_13 = CONVERT(Mem7[a0 + 28<i32>:byte], byte, word32)
	branch (a5_13 & 2<32>) != 0<32> l23061DF4
l23061DF4:
l23061DFE_thunk_memset:
	word32 a0_19
	word32 a2_21
	word32 a4_23
	word32 t1_118
	word32 a1_119
	word32 a3_120
	word32 a5_121
	word32 ra_25 = memset(ra, a0, 0<32>, 36<i32>, out t1_118, out a0_19, out a1_119, out a2_21, out a3_120, out a4_23, out a5_121)
	s1Out = s1
	a0Out = a0_19
	a2Out = a2_21
	a4Out = a4_23
	return ra_25
l23061DEC:
l23061DF0_thunk_vPortFree:
	word32 a2_30
	word32 a4_32
	word32 s1_34
	word32 a0_36
	word32 s0_111
	word32 a1_112
	word32 a3_113
	word32 a5_114
	word32 a6_115
	word32 s4_116
	word32 t3_117
	vPortFree(a0, dwArg24, a5_13 & 2<32>, mstatus, dwArg0158, dwArg0198, out s0_111, out s1_34, out a0_36, out a1_112, out a2_30, out a3_113, out a4_32, out a5_114, out a6_115, out s4_116, out t3_117)
	s1Out = s1_34
	a0Out = a0_36
	a2Out = a2_30
	a4Out = a4_32
	return ra
l23061DC2:
	word32 a5_43 = CONVERT(Mem0[a0 + 28<i32>:byte], byte, word32)
	branch (a5_43 & 2<32>) != 0<32> l23061DCE
l23061DCE:
l23061DD4_thunk_memset:
	word32 a0_47
	word32 a2_49
	word32 a4_51
	word32 t1_122
	word32 a1_123
	word32 a3_124
	word32 a5_125
	word32 ra_53 = memset(ra, a0, 0<32>, 36<i32>, out t1_122, out a0_47, out a1_123, out a2_49, out a3_124, out a4_51, out a5_125)
	s1Out = s1
	a0Out = a0_47
	a2Out = a2_49
	a4Out = a4_51
	return ra_53
l23061DCA:
l23061DCA_thunk_vPortFree:
	word32 a2_57
	word32 a4_59
	word32 s1_61
	word32 a0_63
	word32 s0_104
	word32 a1_105
	word32 a3_106
	word32 a5_107
	word32 a6_108
	word32 s4_109
	word32 t3_110
	vPortFree(a0, a2, a5_43 & 2<32>, mstatus, dwArg0158, dwArg0198, out s0_104, out s1_61, out a0_63, out a1_105, out a2_57, out a3_106, out a4_59, out a5_107, out a6_108, out s4_109, out t3_110)
	s1Out = s1_61
	a0Out = a0_63
	a2Out = a2_57
	a4Out = a4_59
	return ra
vStreamBufferDelete_exit:


word32 xStreamBufferSpacesAvailable(word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferSendFromISR
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a5 t3
// Preserved: sp
xStreamBufferSpacesAvailable_entry:
l23061E02:
	branch a0 == 0<32> l23061E1C
l23061E1C:
	word32 a5_11
	user_vAssertCalled(a4, mstatus, out a5_11)
	word32 a0_19 = a4 + a5_11 + 0xFFFFFFFF<32> - a3
	branch a0_19 <u a4 l23061E3C
l23061E3A:
	a0_19 = a0_19 - a4
l23061E3C:
	a5Out = a5_11
	return a0_19
l23061E04:
	word32 a0_32 = a4 + a5 + 0xFFFFFFFF<32> - a3
	branch a0_32 <u a4 l23061E1A
l23061E1A:
	a5Out = a5
	return a0_32
l23061E16:
	a5Out = a5
	return a0_32 - a4
xStreamBufferSpacesAvailable_exit:


word32 xStreamBufferSend(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArgA4, word32 dwArgC0, word32 dwArgC4, word32 dwArgE8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_event_notify
//      vfs_uart_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +00A4:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xStreamBufferSend_entry:
l23061E42:
	word32 s4_135 = a1
	word32 s0_132 = a0
	word32 s3_116 = a2
	branch a1 == 0<32> l23061F4A
l23061F4A:
	word32 a5_714
	user_vAssertCalled(a4, mstatus, out a5_714)
	branch a0 != 0<32> l23061E60
l23061E5C:
	branch a0 == 0<32> l23061F52
l23061F52:
	word32 a5_715
	user_vAssertCalled(a4, mstatus, out a5_715)
l23061E60:
	word32 a3_128
	word32 s1_180
	word32 s1_133
	word32 a5_36 = CONVERT(Mem17[a0 + 28<i32>:byte], byte, word32)
	word32 s2_134 = a2
	word32 a5_130 = a5_36 & 1<32>
	branch (a5_36 & 1<32>) == 0<32> l23061E72
l23061E6A:
	s2_134 = a2 + 4<i32>
	branch a2 >=u a2 + 4<i32> l23061F58
l23061F58:
	user_vAssertCalled(a4, mstatus, out a5_130)
	branch a5_130 != 0<32> l23061E76
l23061F62:
	a3_128 = a3
l23061E72:
	a3_128 = a3
	branch (a5_36 & 1<32>) == 0<32> l23061F18
l23061E76:
	a3_128 = vTaskSetTimeOutState(fp + -40<i32>, a4, a5_130, mstatus, out a4)
l23061EAE:
	word32 a5_68
	word32 a4_69 = vTaskEnterCritical(a4, mstatus, out a5_68)
	word32 a5_75
	word32 a0_73 = xStreamBufferSpacesAvailable(s0_132, a3_128, a4_69, a5_68, mstatus, out a5_75)
	s1_133 = a0_73
	branch a0_73 <u s2_134 l23061E7E
l23061E7E:
	word32 a4_81
	word32 a5_82
	word32 a3_89 = xTaskNotifyStateClear(0<32>, a3_128, a4_69, a5_75, mstatus, out a4_81, out a5_82)
	word32 s0_91 = Mem90[a5_82 + 20<i32>:word32]
	branch a5_82 == 0<32> l23061E8A
l23061E86:
	word32 a5_723
	user_vAssertCalled(a4_81, mstatus, out a5_723)
l23061E8A:
	word32 a5_717
	Mem97[xTaskGetCurrentTaskHandle(out a5_717) + 20<i32>:word32] = s0_91
	word32 a4_102
	word32 a2_110
	word32 a4_111
	word32 a5_112
	word32 s2_720
	word32 a5_718
	word32 s1_719
	word32 s4_721
	Mem124[xTaskNotifyWait(0<32>, 0<32>, 0<32>, vTaskExitCritical(a3_89, mstatus, out a4_102, out a5_718), a4_102, mstatus, s2, dwArgE8, out s1_719, out a2_110, out a4_111, out a5_112, out s2_720, out s3_116, out s4_721, out s5) + 20<i32>:word32] = 0<32>
	a1 = fp + -52<i32>
	word32 a0_126
	word32 a2_722
	s0_132 = xTaskCheckForTimeOut(fp + -40<i32>, fp + -52<i32>, a2_110, a4_111, a5_112, mstatus, out s1_133, out a0_126, out a2_722, out a3_128, out a4, out a5_130, out s2_134, out s4_135)
	branch a0_126 != 0<32> l23061EC4
l23061EC0:
	a3_128 = vTaskExitCritical(a3_128, mstatus, out a4, out a5_130)
l23061EC4:
	branch s1_133 == 0<32> l23061F18
l23061F18:
	word32 a5_716
	word32 a0_157 = xStreamBufferSpacesAvailable(s0_132, a3_128, a4, a5_130, mstatus, out a5_716)
	s1_133 = a0_157
	branch a0_157 != 0<32> l23061EC8
l23061EC6:
l23061EC8:
	word32 a2_189
	word32 a5_173 = CONVERT(Mem172[s0_132 + 28<i32>:byte], byte, word32)
	word32 a5_174 = a5_173 & 1<32>
	branch (a5_173 & 1<32>) != 0<32> l23061F38
l23061F38:
	branch s1_133 <u s2_134 l23061F24
l23061F24:
	s1_180 = 0<32>
l23061F3C:
	word32 a1_736
	word32 a3_737
	word32 s2_738
	word32 a0_735
	word32 s3_739
	s0_132 = prvWriteBytesToBuffer(s0_132, s0_132, fp + -44<i32>, 4<32>, a4, a5_173 & 1<32>, mstatus, dwArgE8, out a0_735, out a1_736, out a2_189, out a3_737, out a4, out a5_174, out s2_738, out s3_739)
	s4_135 = a3
l23061ED0:
	a2_189 = s3_116
	branch s1_133 <u s3_116 l23061F64
l23061F64:
	a2_189 = s1_133
l23061ED6:
l23061ED8:
	word32 a0_238
	word32 a5_243
	word32 a2_740
	prvWriteBytesToBuffer(s0_132, s0_132, s4_135, a2_189, a4, a5_174, mstatus, dwArgE8, out a0_238, out a1, out a2_740, out a3_128, out a4, out a5_243, out s2_134, out s3_116)
	s1_180 = a0_238
	branch a0_238 == 0<32> l23061F26
l23061EE4:
	word32 a5_264 = a5_243 + a4 - a3_128
	branch a5_264 <u a4 l23061EF4
l23061EF2:
	a5_264 = a5_264 - a4
l23061EF4:
	branch a5_264 <u a4 l23061F26
l23061EFA:
	word32 a5_271
	word32 a4_270 = vTaskSuspendAll(a4, out a5_271)
	branch a5_271 == 0<32> l23061F12
l23061F02:
	word32 s0_297
	word32 s1_731
	word32 a2_733
	word32 a0_732
	word32 s4_734
	ra = xTaskGenericNotify(ra, a0_238, 0<32>, 0<32>, 0<32>, a4_270, mstatus, s4, dwLoc08, dwArg18, dwArgA4, dwArgC0, dwArgC4, dwArgE8, out s0_297, out s1_731, out a0_732, out a1, out a2_733, out a3_128, out a4_270, out a5_271, out s2_134, out s3_116, out s4_734, out mstatus)
	Mem308[s0_297 + 16<i32>:word32] = 0<32>
l23061F12:
	word32 s0_724
	word32 s4_729
	word32 t3_730
	word32 a5_727
	word32 a0_725
	word32 a6_728
	word32 a2_726
	xTaskResumeAll(a3_128, a4_270, a5_271, mstatus, dwArg0118, dwArg0158, out s0_724, out s1_180, out a0_725, out a2_726, out a3_128, out a4, out a5_727, out a6_728, out s4_729, out t3_730)
l23061F26:
	s1Out = s1_180
	a0Out = s1_180
	a1Out = a1
	a3Out = a3_128
	a4Out = a4
	s2Out = s2_134
	s3Out = s3_116
	s4Out = dwArgF4
	s5Out = s5
	mstatusOut = mstatus
	return ra
xStreamBufferSend_exit:


word32 xStreamBufferSendFromISR(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArgF8, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_rx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xStreamBufferSendFromISR_entry:
l23061F68:
	word32 s2_17 = a1
	word32 s0_100 = a0
	branch a1 == 0<32> l2306200A
l2306200A:
	word32 a5_371
	user_vAssertCalled(a4, mstatus, out a5_371)
	branch a0 != 0<32> l23061F82
l23061F80:
	branch a0 == 0<32> l23062010
l23062010:
	word32 a5_372
	user_vAssertCalled(a4, mstatus, out a5_372)
l23061F82:
	word32 a5_36 = CONVERT(Mem15[a0 + 28<i32>:byte], byte, word32)
	word32 s4_39 = a2
	branch (a5_36 & 1<32>) == 0<32> l23061F90
l23061F8C:
	s4_39 = a2 + 4<i32>
l23061F90:
	word32 s1_133
	word32 a5_108
	word32 a0_52 = xStreamBufferSpacesAvailable(a0, a3, a4, a5_36 & 1<32>, mstatus, out a5_108)
	word32 dwArg54_197 = a2
	branch a0_52 != 0<32> l23061FAE
l23061FAE:
	word32 a2_103
	word32 a5_61 = CONVERT(Mem60[a0 + 28<i32>:byte], byte, word32)
	a5_108 = a5_61 & 1<32>
	branch (a5_61 & 1<32>) != 0<32> l23061FF8
l23061FF8:
	branch a0_52 <u s4_39 l23061F9A
l23061FFC:
	word32 s3_377
	word32 a0_373
	word32 a3_376
	word32 a2_375
	word32 a1_374
	s0_100 = prvWriteBytesToBuffer(a0, a0, fp + -36<i32>, 4<32>, a4, a5_61 & 1<32>, mstatus, dwArgF8, out a0_373, out a1_374, out a2_375, out a3_376, out a4, out a5_108, out s2_17, out s3_377)
	a2_103 = a2
l23061FB6:
	a2_103 = a2
	branch a0_52 <u a2 l23062016
l23062016:
	a2_103 = a0_52
l23061FBC:
	dwArg54_197 = a2_103
l23061FBE:
	word32 a2_379
	word32 a1_378
	word32 s2_380
	word32 a0_112
	word32 s3_123
	prvWriteBytesToBuffer(s0_100, s0_100, s2_17, a2_103, a4, a5_108, mstatus, dwArgF8, out a0_112, out a1_378, out a2_379, out a3, out a4, out a5_108, out s2_380, out s3_123)
	s1_133 = a0_112
	branch a0_112 == 0<32> l23061F9C
l23061FCA:
	a5_108 = a5_108 + a4 - a3
	branch a5_108 <u a4 l23061FDA
l23061FD8:
	a5_108 = a5_108 - a4
l23061FDA:
	branch a5_108 <u a4 l23061F9C
l23061FE0:
	branch a5_108 == 0<32> l23061F9C
l23061FE4:
	word32 s0_167
	ra = xTaskGenericNotifyFromISR(ra, a0_112, 0<32>, 0<32>, 0<32>, s3_123, a5_108, mstatus, dwLoc30, dwLoc2C, dwLoc08, dwArg14, dwArg54_197, out s0_167, out s1_133, out a3, out a4, out a5_108, out mstatus)
	Mem176[s0_167 + 16<i32>:word32] = 0<32>
l23061F9A:
	s1_133 = 0<32>
l23061F9C:
	0<32> = dwArg0128
	a0Out = s1_133
	a3Out = a3
	a4Out = a4
	a5Out = a5_108
	mstatusOut = mstatus
	return ra
xStreamBufferSendFromISR_exit:


word32 xStreamBufferReceive(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArgB4, word32 dwArgD0, word32 dwArgD4, word32 dwArgF8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
//      vfs_uart_read
//      uart_ioctl_cmd_waimode
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +00B4:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a2 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xStreamBufferReceive_entry:
l2306201A:
	word32 s3_104 = a1
	word32 s4_105 = a2
	word32 s5_106 = a3
	branch a1 == 0<32> l230620BC
l230620BC:
	user_vAssertCalled(a4, mstatus, out a5)
	branch a0 != 0<32> l23062036
l23062034:
	branch a0 == 0<32> l230620C2
l230620C2:
	user_vAssertCalled(a4, mstatus, out a5)
l23062036:
	word32 s1_123
	word32 s0_269
	word32 s0_125
	word32 s0_101
	word32 s2_103 = (CONVERT(Mem17[a0 + 28<i32>:byte], byte, word32) & 1<i32>) << 2<i32>
	s0_101 = s0
	branch a3 != 0<32> l2306206E
l2306206E:
	word32 a5_45
	word32 a4_46 = vTaskEnterCritical(a4, mstatus, out a5_45)
	s1_123 = Mem17[a4_46:word32]
	s0_125 = s0 + a5_45 - a4_46
	branch s0_125 <u a5_45 l23062082
l23062080:
	s0_125 = s0_125 - a5_45
l23062082:
	branch s2_103 >=u s0_125 l230620EA
l230620EA:
	word32 a4_65
	word32 a5_66
	word32 a3_73 = xTaskNotifyStateClear(0<32>, a3, a4_46, a5_45, mstatus, out a4_65, out a5_66)
	word32 s1_75 = Mem17[a5_66 + 16<i32>:word32]
	branch a5_66 == 0<32> l230620F8
l230620F4:
	word32 a5_589
	user_vAssertCalled(a4_65, mstatus, out a5_589)
l230620F8:
	word32 a5_586
	Mem81[xTaskGetCurrentTaskHandle(out a5_586) + 16<i32>:word32] = s1_75
	word32 a4_86
	word32 a5_587
	vTaskExitCritical(a3_73, mstatus, out a4_86, out a5_587)
	word32 s1_102
	word32 a2_588
	s0_101 = xTaskNotifyWait(0<32>, 0<32>, 0<32>, a3, a4_86, mstatus, dwLoc18, dwArgF8, out s1_102, out a2_588, out a4, out a5, out s2_103, out s3_104, out s4_105, out s5_106)
	Mem111[s1_102 + 16<i32>:word32] = 0<32>
	a1 = 0<32>
l23062086:
	vTaskExitCritical(a3, mstatus, out a4, out a5)
l23062044:
	s1_123 = Mem116[a4:word32]
	s0_125 = s0_101 + a5 - a4
	branch s0_125 <u a5 l23062054
l23062052:
	s0_125 = s0_125 - a5
l23062054:
	branch s2_103 <u s0_125 l2306208A
l2306208A:
	branch s2_103 != 0<32> l230620C8
l230620C8:
	word32 s4_156
	word32 s2_166
	word32 s5_168
	word32 a0_572
	word32 a1_573
	word32 a3_574
	s0_125 = prvReadBytesFromBuffer(s1_123, fp + -36<i32>, s2_103, s0_125, a4, a5, mstatus, out s1_123, out a0_572, out a1_573, out a3_574, out a4, out a5, out s2_166, out s3_104, out s4_156, out s5_168) - s2_166
	branch s4_156 >=u a5 l23062114
l23062114:
	s4_105 = a5
l230620E2:
	Mem177[s1_123:word32] = s5_168
	s4_105 = 0<32>
l2306208E:
	word32 a0_202
	word32 s4_575
	word32 a3_211
	prvReadBytesFromBuffer(s1_123, s3_104, s4_105, s0_125, a4, a5, mstatus, out s1_123, out a0_202, out a1, out a3_211, out a4, out a5, out s2_103, out s3_104, out s4_575, out s5_106)
	branch a0_202 == 0<32> l23062058
l2306209E:
	word32 a5_226
	word32 a4_225 = vTaskSuspendAll(a4, out a5_226)
	branch a5_226 == 0<32> l230620B6
l230620A6:
	word32 s1_248
	word32 a0_583
	word32 a2_584
	word32 s4_585
	word32 s0_582
	ra = xTaskGenericNotify(ra, a0_202, 0<32>, 0<32>, 0<32>, a4_225, mstatus, s0, dwArg08, dwArg28, dwArgB4, dwArgD0, dwArgD4, dwArgF8, out s0_582, out s1_248, out a0_583, out a1, out a2_584, out a3_211, out a4_225, out a5_226, out s2_103, out s3_104, out s4_585, out mstatus)
	Mem258[s1_248 + 20<i32>:word32] = 0<32>
l230620B6:
	word32 a6_579
	word32 a0_576
	word32 a2_577
	word32 s4_580
	word32 a3_578
	word32 t3_581
	xTaskResumeAll(a3_211, a4_225, a5_226, mstatus, dwArg0128, dwArg0168, out s0_269, out s1_123, out a0_576, out a2_577, out a3_578, out a4, out a5, out a6_579, out s4_580, out t3_581)
l23062058:
	s0_269 = 0<32>
l2306205A:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_123
	a0Out = s0_269
	a1Out = a1
	a2Out = dwArg0100
	a4Out = a4
	a5Out = a5
	s2Out = s2_103
	s3Out = s3_104
	s4Out = dwArg78
	s5Out = s5_106
	s8Out = s5
	mstatusOut = mstatus
	return ra
xStreamBufferReceive_exit:


word32 xStreamBufferReceiveFromISR(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArg54, word32 dwArg0128, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_tx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0014:[0..31] Stack +0054:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xStreamBufferReceiveFromISR_entry:
l23062118:
	word32 s3_102 = a1
	word32 s4_25 = a2
	branch a1 == 0<32> l23062198
l23062198:
	user_vAssertCalled(a4, mstatus, out a5)
	branch a0 != 0<32> l23062136
l23062134:
	branch a0 == 0<32> l2306219E
l2306219E:
	user_vAssertCalled(a4, mstatus, out a5)
l23062136:
	word32 s1_107 = Mem19[a4:word32]
	word32 s0_49 = s0 + a5 - a4
	word32 s2_50 = (CONVERT(Mem19[Mem19[a5 + 8<i32>:word32] + 28<i32>:byte], byte, word32) & 1<i32>) << 2<i32>
	branch s0_49 <u a5 l23062150
l2306214E:
	s0_49 = s0_49 - a5
l23062150:
	word32 s0_134
	branch s2_50 <u s0_49 l2306216C
l2306216C:
	branch s2_50 != 0<32> l230621A4
l230621A4:
	word32 s6_63 = Mem19[s1_107:int32]
	word32 s5_350
	word32 a3_349
	word32 s4_72
	word32 s2_82
	word32 a0_347
	word32 a1_348
	s0_49 = prvReadBytesFromBuffer(s1_107, fp + -36<i32>, s2_50, s0_49, a4, a5, mstatus, out s1_107, out a0_347, out a1_348, out a3_349, out a4, out a5, out s2_82, out s3_102, out s4_72, out s5_350) - s2_82
	branch s4_72 >=u a5 l230621C6
l230621C6:
	s4_25 = a5
l230621BE:
	Mem93[s1_107:word32] = s6_63
	s4_25 = 0<32>
l23062170:
	word32 s2_353
	word32 a0_112
	word32 s5_128
	word32 s1_351
	word32 a1_352
	word32 s3_354
	word32 s4_355
	prvReadBytesFromBuffer(s1_107, s3_102, s4_25, s0_49, a4, a5, mstatus, out s1_351, out a0_112, out a1_352, out a3, out a4, out a5, out s2_353, out s3_354, out s4_355, out s5_128)
	s0_134 = a0_112
	branch a0_112 == 0<32> l23062154
l23062180:
	branch a5 == 0<32> l23062156
l23062184:
	word32 s1_155
	xTaskGenericNotifyFromISR(ra, a0_112, 0<32>, 0<32>, 0<32>, s5_128, a5, mstatus, dwLoc30, dwLoc2C, dwLoc08, dwArg14, dwArg54, out s0_134, out s1_155, out a3, out a4, out a5, out mstatus)
	Mem163[s1_155 + 20<i32>:word32] = 0<32>
l23062154:
	s0_134 = 0<32>
l23062156:
	0<32> = dwArg0128
	a0Out = s0_134
	a3Out = a3
	a4Out = a4
	a5Out = a5
	mstatusOut = mstatus
	return dwArgE4
xStreamBufferReceiveFromISR_exit:


word32 xStreamBufferIsEmpty(word32 a0, word32 a4, word32 a5, word32 mstatus, ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_poll
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a2
// Trashed: a0 a2 a5 t3
// Preserved: sp
xStreamBufferIsEmpty_entry:
l230621CA:
	branch a0 == 0<32> l230621D8
l230621D8:
	word32 a5_11
	user_vAssertCalled(a4, mstatus, out a5_11)
	word32 a0_18 = CONVERT(Mem7[Mem7[a5_11:word32] + 4<i32>:word32] - a5_11 <u 1<i32>, bool, word32)
	a2Out = dwArg24
	return a0_18
l230621CC:
	word32 a0_24 = CONVERT(Mem0[Mem0[a5:word32] + 4<i32>:word32] - a5 <u 1<i32>, bool, word32)
	a2Out = a2
	return a0_24
xStreamBufferIsEmpty_exit:


word32 prvResetNextTaskUnblockTime.part.0(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskDelete
//      xTaskIncrementTick
//      xTaskResumeAll
// MayUse: 
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
prvResetNextTaskUnblockTime.part.0_entry:
l230621F4:
	word32 a4_9 = Mem0[Mem0[Mem0[Mem0[0x4200F518<32>:int32] + 12<i32>:word32] + 12<i32>:word32] + 4<i32>:word32]
	Mem10[0x4200F538<32>:word32] = a4_9
	a5Out = 0x4200F000<32>
	return a4_9
prvResetNextTaskUnblockTime.part.0_exit:


word32 prvInitialiseNewTask.isra.2(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 mstatus, word32 dwArg0128, ptr32 & t0Out, ptr32 & s0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskCreateStatic
//      xTaskCreate
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a4 a5 ra s0 s6 s7 t0
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
prvInitialiseNewTask.isra.2_entry:
l2306220C:
	word32 a2_230
	word32 a1_229
	word32 a0_228
	word32 t1_227
	word32 a5_233
	word32 a3_231
	word32 a4_232
	word32 ra_45 = memset(ra, Mem5[a6 + 48<i32>:int32], 165<i32>, a2 << 2<u32>, out t1_227, out a0_228, out a1_229, out a2_230, out a3_231, out a4_232, out a5_233)
	word32 s7_49 = (a2 << 2<u32>) + 0xFFFFFFFC<32>
	word32 s2_36 = a4
	word32 s3_50 = Mem32[a6 + 48<i32>:int32] + s7_49
	branch a1 == 0<32> l230622D4
l230622D4:
	Mem52[a6 + 52<i32>:byte] = 0<8>
l2306224C:
	word32 a1_53 = a1
	word32 a5_54 = a6 + 52<i32>
l23062256:
	word32 a3_58 = CONVERT(Mem57[a1_53:byte], byte, word32)
	a5_54 = a5_54 + 1<32>
	Mem62[a5_54 + 4095<i32>:byte] = SLICE(a3_58, byte, 0)
	a1_53 = a1_53 + 1<32>
	branch a3_58 == 0<32> l23062268
l23062264:
	branch a1_53 != a1 + 16<i32> l23062256
l23062268:
	Mem66[a6 + 67<i32>:byte] = 0<8>
l2306226C:
	branch a4 <=u 0x1F<32> l23062274
l23062272:
	s2_36 = 0x1F<32>
l23062274:
	Mem76[a6 + 44<i32>:word32] = s2_36
	Mem77[a6 + 80<i32>:word32] = s2_36
	Mem78[a6 + 84<i32>:word32] = 0<32>
	vListInitialiseItem(a6 + 4<i32>)
	vListInitialiseItem(a6 + 24<i32>)
	Mem82[a6 + 88<i32>:word32] = 0<32>
	Mem83[a6 + 16<i32>:word32] = a6
	Mem84[32<i32> - s2_36 + 24<i32>:word32] = a6
	Mem85[a6 + 36<i32>:word32] = a6
	Mem86[a6 + 68<i32>:word32] = 0<32>
	Mem87[a6 + 92<i32>:byte] = 0<8>
	word32 a0_108
	word32 t0_109 = fn23064700(s3_50 & -8<i32>, a0, a3, mstatus, out a0_108)
	Mem111[a0_108:word32] = a6
	branch a5 == 0<32> l230622BE
l230622BA:
	Mem116[a5:word32] = a6
l230622BE:
	0<32> = dwArg0128
	t0Out = t0_109
	s0Out = dwArgE4
	a2Out = dwArgB8
	a4Out = 32<i32>
	a5Out = 0x1F<32>
	s6Out = a3
	s7Out = s7_49
	return ra_45
prvInitialiseNewTask.isra.2_exit:


word32 prvDeleteTCB(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg0148, word32 dwArg0158, word32 dwArg0188, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvIdleTask
//      vTaskDelete
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0010:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
prvDeleteTCB_entry:
l230622DA:
	word32 a4_5 = CONVERT(Mem0[a0 + 93<i32>:byte], byte, word32)
	branch a4_5 == 0<32> l230622F2
l230622F2:
	word32 a5_19
	word32 s0_25
	word32 s1_94
	word32 a0_95
	word32 a1_96
	word32 a2_97
	word32 a3_98
	word32 a4_99
	word32 a6_100
	word32 s4_101
	word32 t3_102
	vPortFree(Mem10[a0 + 48<i32>:word32], a2, a5, mstatus, dwArg0148, dwArg0188, out s0_25, out s1_94, out a0_95, out a1_96, out a2_97, out a3_98, out a4_99, out a5_19, out a6_100, out s4_101, out t3_102)
l23062308_thunk_vPortFree:
	word32 a2_32
	word32 a3_33
	word32 a4_34
	word32 a5_35
	word32 s1_36
	word32 a0_38
	word32 s0_41
	word32 s4_42
	word32 a1_103
	word32 a6_104
	word32 t3_105
	vPortFree(s0_25, dwArg10, a5_19, mstatus, dwArg0158, dwArg0198, out s0_41, out s1_36, out a0_38, out a1_103, out a2_32, out a3_33, out a4_34, out a5_35, out a6_104, out s4_42, out t3_105)
	s1Out = s1_36
	a0Out = a0_38
	a2Out = a2_32
	a3Out = a3_33
	a4Out = a4_34
	a5Out = a5_35
	s4Out = s4_42
	return s0_41
l230622E0:
	branch a4_5 == 1<32> l2306230C
l2306230C:
l2306230C_thunk_vPortFree:
	word32 a2_45
	word32 a3_46
	word32 a4_47
	word32 a5_48
	word32 s1_49
	word32 a0_51
	word32 s0_54
	word32 s4_55
	word32 a1_106
	word32 a6_107
	word32 t3_108
	vPortFree(a0, a2, 1<32>, mstatus, dwArg0158, dwArg0198, out s0_54, out s1_49, out a0_51, out a1_106, out a2_45, out a3_46, out a4_47, out a5_48, out a6_107, out s4_55, out t3_108)
	s1Out = s1_49
	a0Out = a0_51
	a2Out = a2_45
	a3Out = a3_46
	a4Out = a4_47
	a5Out = a5_48
	s4Out = s4_55
	return s0_54
l230622E6:
	branch a4_5 != 2<32> l230622EE
l230622EE:
l230622EE_thunk_user_vAssertCalled:
	word32 a5_59
	word32 a2_58 = user_vAssertCalled(a4_5, mstatus, out a5_59)
	s1Out = s1
	a0Out = a0
	a2Out = a2_58
	a3Out = a3
	a4Out = a4_5
	a5Out = a5_59
	s4Out = s4
	return s0
l230622EC:
	s1Out = s1
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4_5
	a5Out = 2<32>
	s4Out = s4
	return s0
prvDeleteTCB_exit:


word32 prvAddCurrentTaskToDelayedList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg48, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskDelay
//      vTaskPlaceOnEventList
//      vTaskPlaceOnUnorderedEventList
//      vTaskPlaceOnEventListRestricted
//      ulTaskNotifyTake
//      xTaskNotifyWait
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +0048:[0..31]
// LiveOut: a0 a1 a2 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
prvAddCurrentTaskToDelayedList_entry:
l23062310:
	word32 s2_10 = Mem9[0x4200F544<32>:int32]
	word32 a5_161
	word32 a4_26
	branch uxListRemove(a3, a4, out a4_26, out a5_161) != 0<32> l23062358
l2306233C:
	a4_26 = Mem20[a3:word32]
	Mem37[~(1<32> << a2) & a3:word32] = a4_26
l23062358:
	branch a0 == 0xFFFFFFFF<32> l230623B2
l230623B2:
	branch a1 == 0<32> l2306235E
l230623B6:
	word32 s0_43 = Mem42[a1:word32]
l230623CE_thunk_vListInsertEnd:
	word32 a5_56
	word32 a0_55 = vListInsertEnd(a1 + 4<32>, a4_26, 0xFFFFFFFF<32>, out a5_56)
	s1Out = a0
	a0Out = a0_55
	a1Out = a1 + 4<32>
	a2Out = <invalid>
	a4Out = a4_26
	a5Out = a5_56
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_43
l2306235E:
	word32 s1_63 = a0 + s2_10
	Mem64[s1_63 + 4<i32>:word32] = 0xFFFFFFFF<32>
	branch s1_63 <u s2_10 l23062396
l23062396:
	word32 a0_66 = Mem64[0x4200F51C<32>:int32]
	word32 s0_68 = Mem64[a1:word32]
l230623AE_thunk_vListInsert:
	word32 a4_81
	word32 a5_82
	word32 a0_79 = vListInsert(a0_66, dwArg48, a3, out a4_81, out a5_82)
	s1Out = s1_63
	a0Out = a0_79
	a1Out = a1_80
	a2Out = <invalid>
	a4Out = a4_81
	a5Out = a5_82
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_68
l23062368:
	word32 s0_85 = Mem64[a1:word32]
	word32 a4_91
	word32 a5_162
	word32 a0_89 = vListInsert(Mem64[0x4200F518<32>:int32], a2, a3, out a4_91, out a5_162)
	word32 a5_94 = Mem64[a4_91:word32]
	branch s1_63 >=u a4_91 l23062388
l23062386:
	Mem95[s1_63:word32] = a5_94
l23062388:
	s1Out = s1_63
	a0Out = a0_89
	a1Out = a1_90
	a2Out = <invalid>
	a4Out = a4_91
	a5Out = a5_94
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_85
prvAddCurrentTaskToDelayedList_exit:


word32 vTaskEnterCritical.part.7(word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvAddNewTaskToReadyList
//      prvIdleTask
//      vTaskDelete
//      eTaskGetState
//      xTaskResumeAll
//      vTaskSetTimeOutState
//      xTaskCheckForTimeOut
//      vTaskEnterCritical
//      ulTaskNotifyTake
//      xTaskNotifyWait
//      xTaskGenericNotify
//      xTaskNotifyStateClear
// MayUse:  a4:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
vTaskEnterCritical.part.7_entry:
l230623D2:
	word32 a5_7 = Mem0[Mem0[a4:word32]:word32]
	word32 a4_8 = Mem0[a5_7 + 68<i32>:word32]
	Mem10[a5_7 + 0x45<32>:word32] = a4_8
	a5Out = a5_7 + 1<32>
	return a4_8
vTaskEnterCritical.part.7_exit:


word32 vTaskExitCritical.part.8(word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvAddNewTaskToReadyList
//      prvIdleTask
//      vTaskDelete
//      eTaskGetState
//      xTaskResumeAll
//      vTaskSetTimeOutState
//      xTaskCheckForTimeOut
//      vTaskExitCritical
//      ulTaskNotifyTake
//      xTaskNotifyWait
//      xTaskGenericNotify
//      xTaskNotifyStateClear
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
vTaskExitCritical.part.8_entry:
l230623E6:
	word32 a5_8 = Mem0[a3:word32]
	word32 a4_9 = Mem0[a5_8 + 68<i32>:word32]
	Mem11[a5_8 + 0x43<32>:word32] = a4_9
	word32 a3_12 = Mem11[a5_8 + 0x43<32>:word32]
	branch a5_8 != 0xFFFFFFFF<32> l23062400
l230623FC:
	__csrrs(mstatus, 8<32>)
l23062400:
	a4Out = a4_9
	a5Out = a5_8 + 0xFFFFFFFF<32>
	return a3_12
vTaskExitCritical.part.8_exit:


word32 prvAddNewTaskToReadyList(word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskCreateStatic
//      xTaskCreate
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
prvAddNewTaskToReadyList_entry:
l23062402:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l23062428
l23062424:
	word32 a5_234
	a4 = vTaskEnterCritical.part.7(a4, out a5_234)
l23062428:
	word32 a1_76
	word32 a5_30 = Mem17[a4:word32]
	word32 a4_32 = a4 + 1<32>
	Mem33[a4_32:word32] = a5_30
	word32 s1_120 = Mem33[a4_32:word32]
	branch a4_32 == 0<32> l230624D2
l230624D2:
	Mem36[s1_120:word32] = a0
	branch a4_32 == 1<32> l230624EC
l230624EC:
	word32 s4_42 = 0x42018538<32>
l230624FC:
	vListInitialise(s4_42)
	s4_42 = s4_42 + 0x14<32>
	branch s4_42 != 0x420187B8<32> l230624FC
l23062508:
	vListInitialise(0x420187B8<32>)
	vListInitialise(0x420187CC<32>)
	vListInitialise(0x420187E0<32>)
	vListInitialise(0x42018808<32>)
	vListInitialise(0x420187F4<32>)
	Mem73[0x4200F518<32>:word32] = 0x420187B8<32>
	Mem74[0x4200F51C<32>:word32] = 0x420187CC<32>
	a1_76 = Mem74[a0 + 44<i32>:int32]
l230624DE:
	a1_76 = Mem36[a0 + 44<i32>:int32]
l23062442:
	a1_76 = Mem33[a0 + 44<i32>:int32]
	branch a5_30 == 0<32> l230624BE
l230624BE:
	s1_120 = Mem33[a5_30:word32]
	branch a1_76 <u Mem33[a5_30 + 44<i32>:word32] l2306244A
l230624C6:
	Mem84[s1_120:word32] = a0
l2306244A:
l23062452:
	word32 a3_126 = Mem94[a2:word32]
	word32 a5_107 = 1<32> << a1_76 | Mem94[0x4200F534<32>:int32]
	Mem110[a0 + 72<i32>:word32] = a2 + 1<32>
	Mem115[a5_107:word32] = 0x4200F534<32>
	Mem116[a2 + 1<32>:word32] = a3_126
	word32 a5_118
	vListInsertEnd(a0 + 4<i32>, 0x4200F534<32>, a5_107, out a5_118)
	word32 a4_127 = 0x4200F534<32>
	branch a5_118 == 0<32> l23062498
l23062492:
	s1_120 = Mem116[a5_118:word32]
	a5_118 = Mem116[a5_118 + 68<i32>:word32]
	branch a5_118 != 0<32> l230624CC
l230624CC:
	a3_126 = vTaskExitCritical.part.8(a3_126, mstatus, out a4_127, out a5_118)
l23062498:
	branch a5_118 == 0<32> l230624AC
l2306249C:
	s1_120 = Mem116[a4_127:word32]
	a5_118 = Mem116[a0 + 44<i32>:int32]
	a4_127 = Mem116[a4_127 + 44<i32>:word32]
	branch a4_127 >=u a5_118 l230624AC
l230624A8:
	__syscall()
l230624AC:
	s0Out = s1
	s1Out = s1_120
	a3Out = a3_126
	a4Out = a4_127
	a5Out = a5_118
	s2Out = a0
	s3Out = 0x42018538<32>
	return dwArg88
prvAddNewTaskToReadyList_exit:


void prvIdleTask(word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] s2:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
prvIdleTask_exit:
prvIdleTask_entry:
l23062562:
	word32 s4_33 = 0x42018538<32>
l230625EE:
	branch a5 != 0<32> l230625AA
l230625AA:
	__csrrc(mstatus, 8<32>)
	branch Mem36[0x4200F540<32>:int32] == 0<32> l230625B8
l230625B4:
	word32 a5_162
	a4 = vTaskEnterCritical.part.7(a4, out a5_162)
l230625B8:
	word32 a4_160
	word32 a5_161
	uxListRemove(a3, a4, out a4_160, out a5_161)
	word32 a5_60 = Mem36[0x4200F520<32>:int32]
	Mem62[0x4200F520<32>:word32] = a5_60 + 0xFFFFFFFF<32>
	Mem65[a5_60 + 0xFFFFFFFE<32>:word32] = Mem62[a5_60 + 0xFFFFFFFF<32>:word32]
	word32 a5_67 = Mem65[0x4200F540<32>:int32]
	branch a5_67 == 0<32> l230625E8
l230625DC:
	a5_67 = Mem65[Mem65[0x4200F514<32>:int32] + 68<i32>:word32]
	branch a5_67 == 0<32> l230625E8
l230625E4:
	word32 a4_164
	vTaskExitCritical.part.8(a3, mstatus, out a4_164, out a5_67)
l230625E8:
	word32 a0_163
	prvDeleteTCB(s1, a2, a5_67, mstatus, s2, dwArg0118, dwArg0128, dwArg0158, dwArg0168, out s1, out a0_163, out a2, out a3, out a4, out a5, out s4_33)
l230625F2:
	a5 = Mem36[s4_33:int32]
	branch a5 <=u 1<32> l230625FE
l230625FA:
	__syscall()
l230625FE:
	vApplicationIdleHook()


word32 xTaskCreateStatic(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArgE8, word32 dwArg01B4, ptr32 & tpOut, ptr32 & t0Out, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
//      bl_ble_sync_start
//      vTaskStartScheduler
//      xTimerCreateTimerTask
//      hal_wifi_start_firmware_task
//      looprt_start
//      aos_task_new
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +00E8:[0..31] Stack +01B4:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s0 s1 s2 s3 s6 s7 t0 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
xTaskCreateStatic_entry:
l23062604:
	word32 s1_11 = a5
	branch a5 == 0<32> l23062666
l23062666:
	word32 a5_306
	user_vAssertCalled(a4, mstatus, out a5_306)
	a6 = dwArg24
	a2 = dwArg04
	branch a6 != 0<32> l23062614
l23062612:
	branch a6 == 0<32> l23062680
l23062680:
	word32 a5_307
	word32 a2_201 = user_vAssertCalled(a4, mstatus, out a5_307)
	branch a4 == 96<i32> l23062694
l23062690:
	word32 a5_309
	a2_201 = user_vAssertCalled(a4, mstatus, out a5_309)
l23062694:
	tpOut = tp
	t0Out = t0
	s0Out = dwArg01B4
	s1Out = a5
	a0Out = 0<32>
	a2Out = a2_201
	a3Out = a3
	a4Out = a4
	a5Out = 0<32>
	s2Out = s2
	s3Out = s3
	s6Out = s6
	s7Out = s7
	return ra
l23062614:
	branch a6 != 96<i32> l2306264A
l2306264A:
	word32 a5_308
	user_vAssertCalled(a4, mstatus, out a5_308)
	a2 = dwArg04
l23062620:
l23062622:
	word32 s0_123 = dwArg01B4
	word32 a5_121 = 0<32>
	branch a5 == 0<32> l2306263E
l23062626:
	Mem84[dwArg01B4 + 93<i32>:byte] = 2<8>
	Mem85[a5 + 48<i32>:word32] = dwArg01B4
	word32 a2_96
	word32 a4_98
	word32 a5_99
	word32 s0_102
	ra = prvInitialiseNewTask.isra.2(ra, a0, a1, a2, a3, a4, fp + -20<i32>, dwArg01B4, mstatus, dwArgE8, out t0, out s0_102, out a2_96, out a4_98, out a5_99, out s6, out s7)
	tp = prvAddNewTaskToReadyList(s0_102, a2_96, a4_98, a5_99, mstatus, out s0_123, out s1_11, out a3, out a4, out a5_121, out s2, out s3)
	a2 = dwArg01B4
l2306263E:
	tpOut = tp
	t0Out = t0
	s0Out = s0_123
	s1Out = s1_11
	a0Out = a5_121
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5_121
	s2Out = s2
	s3Out = s3
	s6Out = s6
	s7Out = s7
	return ra
xTaskCreateStatic_exit:


word32 xTaskCreate(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0168, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start_background
//      ble_controller_init
//      k_work_q_start
//      ble_tp_ccc_cfg_changed
//      cmd_looprt_test
//      tcpip_init
//      at_server_init
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a2 a3 a4 a5 ra s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
xTaskCreate_entry:
l230626A4:
	word32 a0_131
	word32 a0_36
	word32 a1_199
	word32 a2_200
	word32 a6_201
	word32 s4_202
	word32 s8_203
	word32 s3_125
	word32 s2_124
	word32 s1_123
	word32 a5_120
	word32 a4_119
	word32 a3_118
	pvPortMalloc(ra, s1, a2 << 2<u32>, a3, a4, a5, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_123, out a0_36, out a1_199, out a2_200, out a3_118, out a4_119, out a5_120, out a6_201, out s2_124, out s3_125, out s4_202, out s8_203)
	branch a0_36 == 0<32> l23062712
l23062712:
	a0_131 = 0xFFFFFFFF<32>
l230626CE:
	word32 a0_54
	word32 a2_56
	word32 a5_59
	word32 s1_62
	word32 s4_65
	word32 a1_204
	word32 a3_205
	word32 a4_206
	word32 a6_207
	word32 s8_208
	pvPortMalloc(ra, a0_36, 96<i32>, a3_118, a4_119, a5_120, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_62, out a0_54, out a1_204, out a2_56, out a3_205, out a4_206, out a5_59, out a6_207, out s2_124, out s3_125, out s4_65, out s8_208)
	branch a0_54 == 0<32> l23062716
l23062716:
	word32 s0_209
	word32 a0_210
	word32 a1_211
	word32 a2_212
	word32 a6_213
	word32 s4_214
	word32 t3_215
	vPortFree(s1_62, a2_56, a5_59, mstatus, dwArg0128, dwArg0168, out s0_209, out s1_123, out a0_210, out a1_211, out a2_212, out a3_118, out a4_119, out a5_120, out a6_213, out s4_214, out t3_215)
	a0_131 = 0xFFFFFFFF<32>
l230626DC:
	Mem90[s1_62 + 48<i32>:word32] = a0_54
	Mem91[a0_54 + 93<i32>:byte] = 0<8>
	word32 a2_95
	word32 a4_97
	word32 a5_98
	word32 s0_101
	word32 t0_216
	word32 s6_217
	word32 s7_218
	ra = prvInitialiseNewTask.isra.2(ra, s3_125, s4_65, s2_124, a3, a4, a5, a0_54, mstatus, dwArgF8, out t0_216, out s0_101, out a2_95, out a4_97, out a5_98, out s6_217, out s7_218)
	word32 s0_219
	prvAddNewTaskToReadyList(s0_101, a2_95, a4_97, a5_98, mstatus, out s0_219, out s1_123, out a3_118, out a4_119, out a5_120, out s2_124, out s3_125)
	a0_131 = 1<32>
l230626FC:
	0<32> = dwArg0128
	s1Out = s1_123
	a0Out = a0_131
	a2Out = dwArgB8
	a3Out = a3_118
	a4Out = a4_119
	a5Out = a5_120
	s2Out = s2_124
	s3Out = s3_125
	return ra
xTaskCreate_exit:


word32 vTaskDelete(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg0128, word32 dwArg0138, word32 dwArg0168, word32 dwArg0178, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
//      ble_controller_deinit
//      k_thread_delete
//      ble_tp_ccc_cfg_changed
//      __bl_ble_sync_task
//      bl_ble_sync_stop
//      iperf_client_udp
//      dfl_entry
//      aos_task_exit
//      at_server_init
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0168:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp tp
vTaskDelete_entry:
l23062720:
	__csrrc(mstatus, 8<32>)
	word32 s0_15 = a0
	branch a5 == 0<32> l23062742
l2306273E:
	word32 a5_297
	a4 = vTaskEnterCritical.part.7(a4, out a5_297)
l23062742:
	branch a0 == 0<32> l23062826
l23062826:
	s0_15 = Mem13[0x4200F514<32>:int32]
l2306274C:
	word32 s3_29 = s0_15 + 4<i32>
	word32 a5_38
	word32 a4_37
	branch uxListRemove(a3, a4, out a4_37, out a5_38) != 0<32> l23062772
l23062758:
	a4_37 = a3 * 0x14<32>
	a5_38 = Mem13[a3 * 0x14<32> + 0x42018538<32>:word32]
	branch a5_38 == 0<32> l230627EE
l230627EE:
	a4_37 = Mem13[a2:word32]
	a5_38 = ~(1<32> << a3) & a2
	Mem57[a5_38:word32] = a4_37
l23062772:
	word32 s0_111 = Mem59[a5_38 + 40<i32>:word32]
	branch a5_38 == 0<32> l2306277E
l23062776:
	word32 a5_298
	uxListRemove(a3, a4_37, out a4_37, out a5_298)
l2306277E:
	word32 a5_119
	word32 a4_120
	word32 a5_70 = Mem59[a4_37:word32]
	word32 a3_107 = Mem59[0x4200F514<32>:int32]
	word32 a4_75 = a4_37 + 1<32>
	Mem76[a4_75:word32] = a5_70
	branch a3_107 == s0_111 l23062808
l23062808:
	word32 a5_299
	vListInsertEnd(s3_29, a4_75, a5_70, out a5_299)
	a5_119 = Mem76[a4_75:word32]
	Mem88[a4_75 + 1<32>:word32] = a5_119
	a4_120 = a4_75 + 1<32>
l23062794:
	word32 a5_90 = Mem76[a4_75:word32]
	Mem93[a4_75 + 0xFFFFFFFF<32>:word32] = a5_90
	word32 a2_301
	word32 a5_303
	word32 s4_304
	word32 a0_104
	word32 s1_300
	word32 a4_302
	s0_111 = prvDeleteTCB(s0_111, a2, a5_90, mstatus, dwLoc10, dwArg0128, dwArg0138, dwArg0168, dwArg0178, out s1_300, out a0_104, out a2_301, out a3_107, out a4_302, out a5_303, out s4_304)
	branch Mem93[Mem93[0x4200F518<32>:int32]:word32] == 0<32> l230627E2
l230627E2:
	Mem121[0x4200F538<32>:word32] = 0xFFFFFFFF<32>
	a5_119 = 0x4200F000<32>
	a4_120 = 0xFFFFFFFF<32>
l230627B4:
	a4_120 = prvResetNextTaskUnblockTime.part.0(out a5_119)
l230627B8:
	branch a5_119 == 0<32> l230627C8
l230627BC:
	a5_119 = Mem125[Mem125[0x4200F514<32>:int32] + 68<i32>:word32]
	branch a5_119 == 0<32> l230627C8
l230627C4:
	vTaskExitCritical.part.8(a3_107, mstatus, out a4_120, out a5_119)
l230627C8:
	branch a5_119 == 0<32> l230627D4
l230627CC:
	a5_119 = Mem125[0x4200F514<32>:int32]
	branch a5_119 == s0_111 l2306282C
l2306282C:
	word32 a5_143 = Mem125[0x4200F52C<32>:int32]
	branch a5_143 != 0<32> l23062848
l23062848:
	user_vAssertCalled(a4_120, mstatus, out a5_143)
	__syscall()
l23062836:
	__syscall()
l2306283A:
	a0Out = <invalid>
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = a5_143
	s2Out = <invalid>
	return <invalid>
l230627D4:
	a0Out = <invalid>
	a3Out = <invalid>
	a4Out = <invalid>
	a5Out = a5_119
	s2Out = <invalid>
	return <invalid>
vTaskDelete_exit:


word32 eTaskGetState(word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskGetInfo
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
eTaskGetState_entry:
l23062852:
	branch a0 == 0<32> l230628FE
l230628FE:
	user_vAssertCalled(a4, mstatus, out a5)
l23062864:
	word32 s1_166 = Mem15[a4:word32]
	word32 a0_146 = 0<32>
	branch a4 == a0 l230628CE
l23062874:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l23062888
l23062884:
	word32 a5_190
	vTaskEnterCritical.part.7(a4, out a5_190)
l23062888:
	word32 a5_160 = 0x4200F000<32>
	a4 = 0x4200F000<32>
	s3 = Mem15[0x4200F518<32>:int32]
	word32 s4_39 = Mem15[0x4200F51C<32>:int32]
	word32 s0_42 = Mem15[a0 + 20<i32>:int32]
	branch true l230628DE
l230628DE:
	s1_166 = Mem15[0x4200F000<32>:word32]
	a5_160 = Mem15[0x4200F044<32>:word32]
	branch a5_160 == 0<32> l230628A0
l230628E4:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_160)
	branch s0_42 != s3 l230628A4
l230628A0:
	branch s0_42 == s3 l230628EC
l230628A4:
	branch s0_42 == s4_39 l230628EC
l230628EC:
	a0Out = 2<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5_160
	s2Out = <invalid>
	s3Out = s3
	s4Out = <invalid>
	return s1_166
l230628A8:
	a5 = 0x420187F4<32>
	branch s0_42 == 0x420187F4<32> l23062904
l23062904:
	a4 = Mem15[a0 + 40<i32>:int32]
	a0_146 = 2<32>
	branch a4 != 0<32> l230628CE
l2306290C:
	a5 = CONVERT(CONVERT(Mem15[a0 + 92<i32>:byte], byte, word32) != 0xFFFFFFFF<32>, bool, word32)
	a0_146 = a5 + 2<i32>
l230628B4:
	a5 = 0x42018808<32>
	branch s0_42 == 0x42018808<32> l2306291C
l2306291C:
	a0_146 = 4<32>
l230628C0:
	a5 = 0<32> - CONVERT(s0_42 <u 1<i32>, bool, word32)
	a0_146 = (a5 & 3<i32>) + 1<32>
l230628CE:
	a0Out = a0_146
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = <invalid>
	s3Out = s3
	s4Out = <invalid>
	return s1_166
eTaskGetState_exit:


void vTaskStartScheduler(word32 ra, word32 gp, word32 a6, word32 fcsr, word32 mstatus, word32 mie, word32 mtvec, word32 dwArg04, word32 dwArg44, word32 dwArg64, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0174, word32 dwArg0194)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a6:[0..31] fcsr:[0..31] gp:[0..31] mie:[0..31] mstatus:[0..31] mtvec:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0044:[0..31] Stack +0064:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0174:[0..31] Stack +0194:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
vTaskStartScheduler_entry:
l23062920:
	word32 a0_23
	word32 a3_33
	word32 a4_34
	word32 tp_174
	word32 t0_175
	word32 s0_176
	word32 s1_177
	word32 a2_178
	word32 a5_179
	word32 s2_180
	word32 s3_181
	word32 s6_182
	word32 s7_183
	word32 ra_36 = xTaskCreateStatic(ra, 0x23062562<32>, 0x230AE134<32>, dwArg64, 0<32>, 0<32>, vApplicationGetIdleTaskMemory(fp + 0xFFFFFFE4<32>, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>), a6, mstatus, 0<32>, dwArg04, dwArgC8, dwArg0194, out tp_174, out t0_175, out s0_176, out s1_177, out a0_23, out a2_178, out a3_33, out a4_34, out a5_179, out s2_180, out s3_181, out s6_182, out s7_183)
	branch a0_23 == 0<32> l2306297E
l23062952:
	word32 a0_45
	word32 a4_49
	word32 t0_65
	word32 tp_58 = xTimerCreateTimerTask(ra_36, a3_33, a4_34, mstatus, 0<32>, dwLoc08, dwArg44, dwArgA8, dwArgD8, dwArg0174, out t0_65, out a0_45, out a4_49)
	branch a0_45 != 1<32> l23062984
l23062984:
	branch a0_45 != 0xFFFFFFFF<32> l2306297E
l2306298A:
	word32 a5_184
	user_vAssertCalled(a4_49, mstatus, out a5_184)
	return
l2306295C:
	__csrrc(mstatus, 8<32>)
	Mem75[0x4200F538<32>:word32] = 0xFFFFFFFF<32>
	Mem78[0x4200F540<32>:word32] = a0_45
	Mem79[0x4200F544<32>:word32] = 0<32>
	xPortStartScheduler(gp, tp_58, t0_65, 0x4200F000<32>, fcsr, mstatus, mie, mtvec)
l2306297E:
	return
vTaskStartScheduler_exit:


word32 vTaskSuspendAll(word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
//      xEventGroupSetBits
//      vEventGroupDelete
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xStreamBufferSend
//      xStreamBufferReceive
//      prvTimerTask
//      pvPortMalloc
//      vPortFree
// MayUse:  a4:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
vTaskSuspendAll_entry:
l23062994:
	word32 a5_6 = Mem0[a4:word32]
	Mem8[a4 + 1<32>:word32] = a5_6
	a5Out = a5_6
	return a4 + 1<32>
vTaskSuspendAll_exit:


word32 xTaskGetTickCount(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dts_addr.part.2
//      mm_cfg_element_keepalive_timestamp_update
//      rxl_cntrl_evt
//      apm_sta_connect_timeout_ind_handler
//      bl_main_cfg_task_req
//      tcpip_stack_input
//      stateConnectedIPNoEnter
//      stateGlobalGuard_scan_beacon
//      stateDisconnect_enter
//      wifi_mgmr_start
//      cmd_wifi_coex_pta_force_on
//      sniffer_cb
//      wifi_mgmr_cli_scanlist
//      wifi_mgmr_scan_ap_all
//      bl_irq_bottomhalf
//      wifi_tx
//      k_now_ms
//      k_timer_start
//      tc_blfdtdump
//      tc_fdt_wifi_module
//      __bl_ble_sync_task
//      __recv_event
//      write_data
//      __ble_bytes_send
//      read_data
//      bl_ble_sync_start
//      __malloc
//      __free
//      pro_trans_read
//      bl_sys_time_update
//      bl_sys_time_get
//      bl_sys_time_sync_state
//      ef_get_env_blob
//      ef_del_env
//      ef_set_env
//      psm_test_cmd
//      prvTimerTask
//      bl_dma_IRQHandler
//      bl_dma_irq_register
//      bl_dma_init
//      _irq_num_check.part.0
//      bl_irq_register
//      bl_irq_unregister
//      wait_trng4feed
//      sec_trng_IRQHandler
//      cmd_gpio_get
//      cmd_gpio_set
//      cmd_gpio_func
//      cmd_wdt_init
//      dev_uart_init
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_boot2_init
//      hal_board_cfg
//      bl_tsen_adc_get
//      bl_flash_config_update
//      _cb_led_trigger
//      _led_bloop_msg
//      _led_bloop_evt
//      loopset_led_trigger
//      sys_arch_mbox_fetch
//      sys_mutex_lock
//      sys_now
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      file_info
//      dirent_file
//      romfs_opendir
//      romfs_stat
//      romfs_open
//      romfs_register
//      sntp_recv
//      sntp_get_time
//      log_buf_out
//      at_parse
//      bl_mtd_write
//      bloop_timer_configure
//      bloop_timer_repeat_reconfigure
//      bloop_run
//      bloop_status_dump
//      bl_sha_mutex_take
//      bl_sha_mutex_give
//      hal_hbn_init
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetTickCount_entry:
l230629A4:
	word32 a0_5 = Mem0[0x4200F544<32>:int32]
	a5Out = 0x4200F000<32>
	return a0_5
xTaskGetTickCount_exit:


word32 xTaskGetTickCount2(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_now_ms
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
xTaskGetTickCount2_entry:
l230629AE:
	word32 a5_7 = Mem0[0x4200F53C<32>:int32]
	Mem9[Mem0[0x4200F544<32>:int32]:word32] = a0
	Mem12[a5_7:word32] = a1
	return 1<32>
xTaskGetTickCount2_exit:


word32 xTaskGetTickCountFromISR(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dts_addr.part.2
//      bl_main_cfg_task_req
//      tc_blfdtdump
//      tc_fdt_wifi_module
//      __bl_ble_sync_task
//      __recv_event
//      write_data
//      __ble_bytes_send
//      read_data
//      bl_ble_sync_start
//      __malloc
//      __free
//      pro_trans_read
//      ef_get_env_blob
//      ef_del_env
//      ef_set_env
//      psm_test_cmd
//      bl_dma_IRQHandler
//      bl_dma_irq_register
//      bl_dma_init
//      _irq_num_check.part.0
//      bl_irq_register
//      bl_irq_unregister
//      wait_trng4feed
//      sec_trng_IRQHandler
//      cmd_gpio_get
//      cmd_gpio_set
//      cmd_gpio_func
//      cmd_wdt_init
//      dev_uart_init
//      vfs_uart_init
//      hal_gpio_init_from_dts
//      hal_boot2_init
//      hal_board_cfg
//      bl_tsen_adc_get
//      bl_flash_config_update
//      _cb_led_trigger
//      _led_bloop_msg
//      _led_bloop_evt
//      loopset_led_trigger
//      file_info
//      dirent_file
//      romfs_opendir
//      romfs_stat
//      romfs_open
//      romfs_register
//      log_buf_out
//      bl_mtd_write
//      bloop_run
//      bl_sha_mutex_take
//      bl_sha_mutex_give
//      hal_hbn_init
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetTickCountFromISR_entry:
l230629C6:
	word32 a0_5 = Mem0[0x4200F544<32>:int32]
	a5Out = 0x4200F000<32>
	return a0_5
xTaskGetTickCountFromISR_exit:


word32 xTaskIncrementTick(word32 s0, word32 a4, word32 mstatus, word32 dwArg0198, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskResumeAll
//      int_timer_cb
// MayUse:  a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s9 t3 tp
// Preserved: s8 sp
xTaskIncrementTick_entry:
l230629D0:
	word32 a2_32
	word32 a4_114
	word32 s2_37
	word32 a3_162
	word32 a0_29 = bl_sys_time_sync_state(fp + -52<i32>, a4, mstatus, dwLoc08, out a2_32, out a3_162, out a4_114, out s2_37)
	word32 s1_150 = a0_29
	branch a0_29 == 0<32> l23062A18
l230629F2:
	branch Mem26[0x4200F52C<32>:int32] == 0<32> l23062A34
l23062A34:
	word32 s3_45 = Mem26[0x4200F544<32>:int32]
	Mem47[0x4200F544<32>:word32] = s3_45 + 1<32>
	s3 = s3_45 + 1<32>
	branch s3_45 != 1<32> l23062A9A
l23062A4A:
	s2_37 = 0x4200F518<32>
	branch Mem47[Mem47[0x4200F518<32>:int32]:word32] != 0<32> l23062B6A
l23062B6A:
	word32 a5_410
	a2_32 = user_vAssertCalled(a4_114, mstatus, out a5_410)
l23062A5C:
	a3_162 = Mem47[0x4200F518<32>:int32]
	word32 a4_59 = Mem47[a2_32:word32]
	Mem61[0x4200F518<32>:word32] = a2_32
	Mem62[a3_162:word32] = a4_59
	Mem65[a4_59 + 1<32>:word32] = Mem62[a4_59:word32]
	a4_114 = a4_59 + 1<32>
	branch Mem65[Mem65[0x4200F518<32>:int32]:word32] != 0<32> l23062A96
l23062A96:
	word32 a5_411
	a4_114 = prvResetNextTaskUnblockTime.part.0(out a5_411)
l23062A9A:
l23062A86:
	Mem75[0x4200F538<32>:word32] = 0xFFFFFFFF<32>
l23062AA2:
	branch s3_45 + 1<32> <u Mem77[0x4200F538<32>:int32] l23062B34
l23062B34:
	s1_150 = 0<32>
l23062AAA:
	s1_150 = 0<32>
	s2_37 = 0x4200F518<32>
l23062ACA:
	branch Mem98[Mem98[0x4200F518<32>:int32]:word32] == 0<32> l23062B2C
l23062AD2:
	word32 a5_106 = Mem102[s0 + 12<i32>:word32]
	word32 s0_107 = Mem102[a5_106 + 4<i32>:word32]
	branch s3_45 + 1<32> <u a5_106 l23062B64
l23062B64:
	Mem112[0x4200F538<32>:word32] = a5_106
l23062AE6:
	word32 a4_116
	word32 a5_117
	uxListRemove(a3_162, a4_114, out a4_116, out a5_117)
	branch a5_117 == 0<32> l23062AF6
l23062AF2:
	word32 a4_413
	uxListRemove(a3_162, a4_116, out a4_413, out a5_117)
l23062AF6:
	a4_114 = Mem102[a3_162:word32]
	word32 a5_134 = 1<32> << a5_117 | a3_162
	Mem140[a5_134:word32] = a4_114
	word32 a5_412
	vListInsertEnd(s0_107 + 4<i32>, a4_114, a5_134, out a5_412)
	s0 = Mem140[a4_114 + 44<i32>:word32]
	branch a4_114 <u Mem140[Mem140[0x4200F514<32>:int32] + 44<i32>:word32] l23062ACA
l23062B22:
	s1_150 = 1<32>
	branch Mem140[Mem140[0x4200F518<32>:int32]:word32] != 0<32> l23062AD2
l23062B2C:
	Mem156[0x4200F538<32>:word32] = 0xFFFFFFFF<32>
l23062B46:
	a3_162 = 1<32>
	branch Mem160[a4_114 * 0x14<32> + 0x42018538<32>:int32] <=u 1<32> l23062A0C
l23062B60:
	s1_150 = 1<32>
l230629FC:
	Mem182[a4_114 + 1<32>:word32] = Mem26[a4_114:word32]
	s1_150 = 0<32>
	a4_114 = a4_114 + 1<32>
l23062A0C:
	branch Mem184[0x4200F548<32>:int32] == 0<32> l23062A18
l23062A16:
	s1_150 = 1<32>
l23062A18:
	0<32> = dwArg0198
	s1Out = s1_150
	a0Out = s1_150
	a3Out = a3_162
	a4Out = a4_114
	s2Out = s2_37
	s3Out = s3
	s4Out = dwLoc14
	return dwArg0158
xTaskIncrementTick_exit:


word32 xTaskResumeAll(word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s4Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
//      xEventGroupSetBits
//      vEventGroupDelete
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xStreamBufferSend
//      xStreamBufferReceive
//      vTaskDelay
//      vTaskGetInfo
//      uxTaskGetSystemState
//      prvTimerTask
//      pvPortMalloc
//      vPortFree
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: a1 s2 s3 s5 s6 s7 s8 s9 sp
xTaskResumeAll_entry:
l23062B70:
	branch a5 == 0<32> l23062CB0
l23062CB0:
	user_vAssertCalled(a4, mstatus, out a5)
l23062B94:
	__csrrc(mstatus, 8<32>)
	word32 s0_113 = Mem24[a5:word32]
	branch a5 == 0<32> l23062BA8
l23062BA4:
	a4 = vTaskEnterCritical.part.7(a4, out a5)
l23062BA8:
	word32 a0_148
	word32 a5_147 = a5 + 0xFFFFFFFF<32>
	Mem43[a5_147:word32] = Mem24[a5:word32]
	word32 s1_111 = Mem43[a5_147:word32]
	branch a5_147 != 0<32> l23062C7E
l23062BB2:
	a5_147 = Mem43[0x4200F520<32>:int32]
	branch a5_147 == 0<32> l23062C7E
l23062BBC:
	word32 s6_50 = 0<32>
	word32 s3_131 = 0x4200F548<32>
l23062BE0:
	branch Mem58[0x420187E0<32>:int32] == 0<32> l23062C3C
l23062BE6:
	s6_50 = Mem61[Mem61[0x420187EC<32>:int32] + 12<i32>:int32]
	word32 a4_68
	word32 a5_456
	uxListRemove(a3, a4, out a4_68, out a5_456)
	word32 a4_457
	word32 a5_458
	uxListRemove(a3, a4_68, out a4_457, out a5_458)
	word32 a4_76 = Mem61[a3:word32]
	word32 a5_82 = 1<32> << Mem61[s6_50 + 44<i32>:int32] | a3
	Mem86[a5_82:word32] = a4_76
	word32 a5_459
	vListInsertEnd(s6_50 + 4<i32>, a4_76, a5_82, out a5_459)
	a4 = Mem86[s6_50 + 44<i32>:int32]
	branch a4 <u Mem86[Mem86[0x4200F514<32>:word32] + 44<i32>:word32] l23062BE0
l23062C32:
	Mem95[0x4200F548<32>:word32] = 1<32>
	branch Mem95[0x420187E0<32>:int32] != 0<32> l23062BE6
l23062C3C:
	branch s6_50 == 0<32> l23062C56
l23062C40:
	branch Mem100[Mem100[0x4200F518<32>:int32]:word32] != 0<32> l23062CBE
l23062CBE:
	word32 a5_460
	a4 = prvResetNextTaskUnblockTime.part.0(out a5_460)
l23062C4C:
	Mem107[0x4200F538<32>:word32] = 0xFFFFFFFF<32>
	a4 = 0xFFFFFFFF<32>
l23062C56:
	s1_111 = Mem110[0x4200F528<32>:int32]
	branch s1_111 == 0<32> l23062C78
l23062C64:
l23062C66:
	word32 s1_125
	word32 s2_126
	word32 s4_127
	word32 a0_130
	s0_113 = xTaskIncrementTick(s0_113, a4, mstatus, dwArg0158, out s1_125, out a0_130, out a3, out a4, out s2_126, out s3_131, out s4_127)
	s1_111 = s1_125 + 0xFFFFFFFF<32>
	branch a0_130 == 0<32> l23062C72
l23062C6E:
	Mem137[s3_131:word32] = s4_127
l23062C72:
	branch s1_125 != 0xFFFFFFFF<32> l23062C66
l23062C74:
	Mem140[s2_126:word32] = 0<32>
l23062C78:
	a5_147 = Mem146[s3_131:int32]
	branch a5_147 != 0<32> l23062CB6
l23062CB6:
	__syscall()
	a0_148 = 1<32>
l23062C7E:
	a0_148 = 0<32>
l23062C80:
	branch a5_147 == 0<32> l23062C98
l23062C84:
	a5_147 = Mem152[Mem152[0x4200F514<32>:int32] + 68<i32>:word32]
	branch a5_147 == 0<32> l23062C98
l23062C90:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_147)
l23062C98:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_111
	a0Out = a0_148
	a2Out = dwArg0138
	a3Out = a3
	a4Out = a4
	a5Out = a5_147
	a6Out = dwArg0118
	s4Out = dwArgF4
	t3Out = dwArgA8
	return dwArg0178
xTaskResumeAll_exit:


word32 vTaskDelay(word32 a0, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg24, word32 dwArg28, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      txl_frame_get
//      scanu_start
//      bl_main_rtthread_start
//      wifi_mgmr_event_notify
//      cmd_wifi_coex_pta_force_on
//      wifi_disconnect_cmd
//      node_reset
//      k_sleep
//      bl_ble_sync_stop
//      proc_entry_looprt
//      iperf_server_udp
//      iperf_client_udp
//      iperf_client_tcp
//      cwqap
//      deep_sleep
//      scan
//      reset
//      __wifimode_set
//      disconnect_handler
//      help_handler
//      bloop_wait_startup
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
vTaskDelay_entry:
l23062CC4:
	branch a0 != 0<32> l23062CCC
l23062CCC:
	branch a5 != 0<32> l23062CFC
l23062CFC:
	user_vAssertCalled(a4, mstatus, out a5)
	a2 = dwArg24
l23062CDE:
	Mem22[a5 + 1<32>:word32] = Mem19[a5:word32]
	word32 s1_125
	word32 a1_32
	word32 a4_34
	word32 a5_35
	word32 s2_39
	word32 s3_40
	word32 a0_126
	word32 a2_127
	word32 s4_128
	prvAddCurrentTaskToDelayedList(a0, 0<32>, a2, a3, a4, dwArg28, out s1_125, out a0_126, out a1_32, out a2_127, out a4_34, out a5_35, out s2_39, out s3_40, out s4_128)
	word32 a0_45
	word32 a2_46
	word32 a5_47
	word32 s0_49
	word32 s1_50
	word32 s4_51
	word32 a3_54
	word32 a4_55
	word32 a6_129
	word32 t3_130
	xTaskResumeAll(a3, a4_34, a5_35, mstatus, dwArg0138, dwArg0178, out s0_49, out s1_50, out a0_45, out a2_46, out a3_54, out a4_55, out a5_47, out a6_129, out s4_51, out t3_130)
	branch a0_45 != 0<32> l23062CF4
l23062CF0:
	__syscall()
l23062CF4:
	s1Out = s1_50
	a0Out = a0_45
	a1Out = a1_32
	a2Out = a2_46
	a3Out = a3_54
	a4Out = a4_55
	a5Out = a5_47
	s2Out = s2_39
	s3Out = s3_40
	s4Out = s4_51
	return s0_49
l23062CC6:
	__syscall()
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return s0
vTaskDelay_exit:


word32 vTaskSwitchContext(word32 a3, word32 mstatus, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_handler
//      rw_main_task_post_from_fw
//      int_timer_cb
//      __uart_rx_irq
//      __uart_tx_irq
//      aos_sem_signal
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a0 a4 a5 s0
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskSwitchContext_entry:
l23062D06:
	branch Mem0[0x4200F52C<32>:int32] == 0<32> l23062D1C
l23062D1C:
	Mem11[0x4200F548<32>:word32] = 0<32>
	branch a3 != 0xA5A5A5A5<32> l23062D52
l23062D4C:
	branch a3 == 0xA5A5A5A5<32> l23062DB6
l23062DB6:
	branch a3 != 0xA5A5A5A5<32> l23062D52
l23062DBC:
	branch a3 != 0xA5A5A5A5<32> l23062D52
l23062DC2:
l23062D62:
	word32 a5_131
	word32 a4_40
	word32 a0_39 = __clzsi2(Mem21[0x4200F534<32>:int32], out a4_40, out a5_131)
	word32 s3_42 = 0x1F<32> - a0_39
	word32 a5_48 = Mem21[s3_42 * 0x14<32> + 0x42018538<32>:word32]
	branch a5_48 == 0<32> l23062DC4
l23062DC4:
	user_vAssertCalled(a4_40, mstatus, out a5_48)
l23062D8C:
	word32 s0_59 = s3_42 * 0x14<32> + 8<32>
	word32 a4_58 = Mem21[a5_48 + 4<i32>:word32]
	word32 a5_62 = Mem21[a5_48 + 4<i32>:word32]
	Mem63[a5_62 + 4<i32>:word32] = a4_58
	branch a5_62 == s0_59 + 0x42018538<32> l23062DCA
l23062DCA:
	a5_62 = Mem63[a5_62 + 4<i32>:word32]
	Mem65[a5_62 + 4<i32>:word32] = a4_58
l23062DA2:
	word32 a5_68 = Mem67[a5_62 + 12<i32>:word32]
	Mem75[0x4200F514<32>:word32] = a5_68
	a0Out = a0_39
	a4Out = a4_58
	a5Out = a5_68
	return s0_59 + 0x42018538<32>
l23062D52:
	vApplicationStackOverflowHook()
l23062D10:
	Mem82[0x4200F548<32>:word32] = 1<32>
	a0Out = a0
	a4Out = 1<32>
	a5Out = 0x4200F000<32>
	return s0
vTaskSwitchContext_exit:


word32 vTaskPlaceOnEventList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg48, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0048:[0..31]
// LiveOut: a1 a2 a4 s0 s2 s3
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskPlaceOnEventList_entry:
l23062DD0:
	branch a0 == 0<32> l23062DF6
l23062DF6:
	word32 a5_65
	user_vAssertCalled(a4, mstatus, out a5_65)
	a2 = dwArg24
l23062DDA:
	word32 a4_28
	word32 a5_66
	vListInsert(a0, a2, a3, out a4_28, out a5_66)
l23062DF2_thunk_prvAddCurrentTaskToDelayedList:
	word32 a1_38
	word32 a2_39
	word32 a4_40
	word32 s2_45
	word32 s3_46
	word32 s1_67
	word32 a0_68
	word32 a5_69
	word32 s4_70
	word32 s0_43 = prvAddCurrentTaskToDelayedList(a1, 1<32>, a2, a3, a4_28, dwArg48, out s1_67, out a0_68, out a1_38, out a2_39, out a4_40, out a5_69, out s2_45, out s3_46, out s4_70)
	a1Out = a1_38
	a2Out = a2_39
	a4Out = a4_40
	s2Out = s2_45
	s3Out = s3_46
	return s0_43
vTaskPlaceOnEventList_exit:


word32 vTaskPlaceOnUnorderedEventList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg48, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0048:[0..31]
// LiveOut: a4 a5 s2 s3
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskPlaceOnUnorderedEventList_entry:
l23062E00:
	word32 a2_20
	a2_20 = a2
	branch a0 == 0<32> l23062E4C
l23062E4C:
	word32 a5_96
	user_vAssertCalled(a4, mstatus, out a5_96)
	a2_20 = dwArg24
l23062E0E:
	branch Mem22[0x4200F52C<32>:int32] == 0<32> l23062E42
l23062E42:
	word32 a5_97
	user_vAssertCalled(a4, mstatus, out a5_97)
	a2_20 = dwArg24
l23062E18:
	Mem44[(a1 | 0x80000000<32>) + 24<i32>:word32] = a4
	word32 a5_98
	vListInsertEnd(a1 + 0x18<32>, a4, a1 | 0x80000000<32>, out a5_98)
l23062E3E_thunk_prvAddCurrentTaskToDelayedList:
	word32 s1_99
	word32 a0_100
	word32 a1_101
	word32 a4_64
	word32 a5_65
	word32 s2_69
	word32 s3_70
	word32 a2_102
	word32 s4_103
	prvAddCurrentTaskToDelayedList(a2, 1<32>, a2_20, a3, a4, dwArg48, out s1_99, out a0_100, out a1_101, out a2_102, out a4_64, out a5_65, out s2_69, out s3_70, out s4_103)
	a5Out = a5_65
	s2Out = s2_69
	s3Out = s3_70
	return a4_64
vTaskPlaceOnUnorderedEventList_exit:


word32 vTaskPlaceOnEventListRestricted(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg48, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vQueueWaitForMessageRestricted
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0024:[0..31] Stack +0048:[0..31]
// LiveOut: a1 a4 s0 s3
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
vTaskPlaceOnEventListRestricted_entry:
l23062E56:
	word32 a2_20
	word32 s1_11 = a1
	a2_20 = a2
	branch a0 == 0<32> l23062E86
l23062E86:
	word32 a5_81
	user_vAssertCalled(a4, mstatus, out a5_81)
	a2_20 = dwArg24
l23062E64:
	word32 a5_82
	vListInsertEnd(Mem22[0x4200F514<32>:int32] + 0x18<32>, a4, 0x4200F000<32>, out a5_82)
	branch a2 == 0<32> l23062E76
l23062E74:
	s1_11 = 0xFFFFFFFF<32>
l23062E76:
l23062E82_thunk_prvAddCurrentTaskToDelayedList:
	word32 s1_83
	word32 a2_85
	word32 a0_84
	word32 a1_49
	word32 a4_51
	word32 s3_57
	word32 a5_86
	word32 s2_87
	word32 s4_88
	word32 s0_54 = prvAddCurrentTaskToDelayedList(s1_11, a2, a2_20, a3, a4, dwArg48, out s1_83, out a0_84, out a1_49, out a2_85, out a4_51, out a5_86, out s2_87, out s3_57, out s4_88)
	a1Out = a1_49
	a4Out = a4_51
	s3Out = s3_57
	return s0_54
vTaskPlaceOnEventListRestricted_exit:


word32 xTaskRemoveFromEventList(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvUnlockQueue
//      xQueueGenericReset
//      xQueueGenericSend
//      xQueueGenericSendFromISR
//      xQueueGiveFromISR
//      xQueueReceive
//      xQueueSemaphoreTake
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
xTaskRemoveFromEventList_entry:
l23062E90:
	branch s0 == 0<32> l23062F22
l23062F22:
	word32 a5_107
	a2 = user_vAssertCalled(a4, mstatus, out a5_107)
l23062E9E:
	word32 a1_50
	word32 a5_108
	word32 a4_24
	uxListRemove(a3, a4, out a4_24, out a5_108)
	word32 s1_100 = s0 + 24<i32>
	word32 a5_28 = Mem9[0x4200F52C<32>:int32]
	branch a5_28 == 0<32> l23062EE8
l23062EE8:
	word32 a4_109
	word32 a5_110
	uxListRemove(a3, a4_24, out a4_109, out a5_110)
	a3 = Mem9[a1:word32]
	word32 a5_48 = 1<32> << a2 | a1
	Mem51[a5_48:word32] = a3
	word32 a4_42 = a2 * 5<32>
	word32 a5_111
	vListInsertEnd(s0 + 4<i32>, a4_42 << 2<i32>, a5_48, out a5_111)
	s1_100 = s0 + 4<i32>
	a4_24 = a4_42 << 2<i32>
	a1_50 = s0 + 4<i32>
l23062EB2:
	word32 a5_112
	vListInsertEnd(s0 + 24<i32>, a4_24, a5_28, out a5_112)
	a1_50 = s0 + 24<i32>
l23062EC0:
	word32 a0_64 = 0<32>
	word32 a5_65 = Mem60[Mem60[0x4200F514<32>:int32] + 44<i32>:word32]
	branch a5_65 >=u a4_24 l23062EDE
l23062ED2:
	Mem68[0x4200F548<32>:word32] = 1<32>
	a5_65 = 0x4200F000<32>
	a4_24 = 1<32>
	a0_64 = 1<32>
l23062EDE:
	a0Out = a0_64
	a1Out = a1_50
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_24
	a5Out = a5_65
	return s1_100
xTaskRemoveFromEventList_exit:


word32 vTaskRemoveFromUnorderedEventList(word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg24, word32 dwArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupSetBits
//      vEventGroupDelete
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0024:[0..31] Stack +0044:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
vTaskRemoveFromUnorderedEventList_entry:
l23062F28:
	branch Mem0[0x4200F52C<32>:int32] == 0<32> l23062FA8
l23062FA8:
	word32 a5_129
	user_vAssertCalled(a4, mstatus, out a5_129)
	Mem28[a1 | 0x80000000<32>:word32] = Mem18[dwArg24 + 12<i32>:word32]
	s0 = dwArg24
	a2 = dwArg44
	branch dwArg24 != 0<32> l23062F48
l23062F3C:
	Mem32[a1 | 0x80000000<32>:word32] = Mem14[s0 + 12<i32>:word32]
	branch s0 == 0<32> l23062FC0
l23062FC0:
	word32 a5_130
	a2 = user_vAssertCalled(a4, mstatus, out a5_130)
	s0 = dwArg24
l23062F48:
	word32 a4_46
	word32 a5_131
	uxListRemove(a3, a4, out a4_46, out a5_131)
	word32 a5_53
	word32 a4_132
	uxListRemove(a3, a4_46, out a4_132, out a5_53)
	word32 a3_59 = Mem54[a2:word32]
	word32 a5_67 = 1<32> << a5_53 | a2
	Mem70[a5_67:word32] = a3_59
	word32 s1_49 = s0 + 4<i32>
	word32 a5_133
	word32 a0_71 = vListInsertEnd(s1_49, a5_53 * 0x14<32>, a5_67, out a5_133)
	word32 s0_75 = Mem70[a5_53 * 0x14<32> + 44<i32>:word32]
	word32 a5_117 = Mem70[Mem70[0x4200F514<32>:int32] + 44<i32>:word32]
	branch a5_117 >=u a5_53 * 0x14<32> l23062F9C
l23062F94:
	Mem78[0x4200F548<32>:word32] = 1<32>
	a5_117 = 0x4200F000<32>
l23062F9C:
	s1Out = s1_49
	a0Out = a0_71
	a2Out = a2
	a3Out = a3_59
	a4Out = a5_53 * 0x14<32>
	a5Out = a5_117
	s2Out = 1<32>
	s4Out = dwArg04
	return s0_75
vTaskRemoveFromUnorderedEventList_exit:


word32 vTaskSetTimeOutState(word32 a0, word32 a4, word32 a5, word32 mstatus, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a4
// Trashed: a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
vTaskSetTimeOutState_entry:
l23062FCA:
	branch a0 == 0<32> l23063024
l23063024:
	user_vAssertCalled(a4, mstatus, out a5)
l23062FD6:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l23062FEA
l23062FE6:
	word32 a5_81
	vTaskEnterCritical.part.7(a4, out a5_81)
l23062FEA:
	word32 a3_28 = Mem9[0x4200F53C<32>:int32]
	word32 a4_29 = Mem9[0x4200F544<32>:int32]
	Mem33[a3_28:word32] = a0
	Mem34[a4_29 + 4<i32>:word32] = a0
	branch false l2306301A
l23063002:
	branch Mem34[Mem34[0x4200F514<32>:int32] + 68<i32>:word32] == 0<32> l2306301A
l2306301A:
	a4Out = a4_29
	return a3_28
l2306300E:
l23063016_thunk_vTaskExitCritical.part.8:
	word32 a5_82
	word32 a4_52
	word32 a3_51 = vTaskExitCritical.part.8(a3_28, mstatus, out a4_52, out a5_82)
	a4Out = a4_52
	return a3_51
vTaskSetTimeOutState_exit:


void vTaskInternalSetTimeOutState(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a4 a5
// Preserved: sp
vTaskInternalSetTimeOutState_entry:
l2306302A:
	word32 a5_7 = Mem0[0x4200F544<32>:int32]
	Mem9[Mem0[0x4200F53C<32>:int32]:word32] = a0
	Mem10[a5_7 + 4<i32>:word32] = a0
	return
vTaskInternalSetTimeOutState_exit:


word32 xTaskCheckForTimeOut(word32 a0, word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xStreamBufferSend
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s2 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s4 s8 t3
// Preserved: sp
xTaskCheckForTimeOut_entry:
l23063040:
	word32 s1_13 = a0
	branch a0 == 0<32> l230630E4
l230630E4:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
	branch a1 != 0<32> l23063054
l23063050:
	branch a1 == 0<32> l230630EC
l230630EC:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
l23063054:
	__csrrc(mstatus, 8<32>)
	branch a5 != 0<32> l230630D2
l230630D2:
	word32 a5_179
	vTaskEnterCritical.part.7(a4, out a5_179)
l23063064:
	word32 s0_163
	word32 a4_100 = Mem11[a1:int32]
	word32 a5_101 = Mem11[a2:word32]
	word32 a3_158 = 0xFFFFFFFF<32>
	word32 a0_154 = 0<32>
	branch a4_100 == 0xFFFFFFFF<32> l230630AE
l2306307A:
	a3_158 = Mem11[0<32>:word32]
	s1_13 = Mem11[a1 + 4<i32>:word32]
	branch Mem11[a0:int32] == 0<32> l23063094
l2306308E:
	a0_154 = 1<32>
	branch a2 >=u a1 l230630AE
l23063094:
	branch a2 - a1 >=u a4_100 l230630D8
l230630D8:
	s0_163 = Mem11[a5_101:word32]
	Mem65[a1:word32] = 0<32>
	a0_154 = 1<32>
	branch a5_101 == 0<32> l230630C6
l230630E2:
l2306309C:
	a3_158 = Mem11[a3_158:word32]
	a5_101 = Mem11[a5_101:word32]
	a4_100 = a4_100 - a2 + a1
	Mem72[a1:word32] = a4_100
	Mem74[a3_158:word32] = s1_13
	Mem75[a5_101 + 4<i32>:word32] = s1_13
	a0_154 = 0<32>
l230630AE:
	s0_163 = Mem78[a5_101:word32]
	branch a5_101 == 0<32> l230630C6
l230630B2:
	a5_101 = Mem81[Mem81[0x4200F514<32>:int32] + 68<i32>:word32]
	branch a5_101 == 0<32> l230630C6
l230630BE:
	a3_158 = vTaskExitCritical.part.8(a3_158, mstatus, out a4_100, out a5_101)
	a2 = dwArg24
l230630C6:
	s1Out = s1_13
	a0Out = a0_154
	a2Out = a2
	a3Out = a3_158
	a4Out = a4_100
	a5Out = a5_101
	s2Out = a1
	s4Out = dwArg04
	return s0_163
xTaskCheckForTimeOut_exit:


word32 vTaskMissedYield()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvUnlockQueue
// MayUse: 
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
vTaskMissedYield_entry:
l230630F2:
	Mem5[0x4200F548<32>:word32] = 1<32>
	return 1<32>
vTaskMissedYield_exit:


word32 vTaskGetInfo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvListTasksWithinSingleList.part.11
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp tp
vTaskGetInfo_entry:
l230630FE:
	word32 s0_11 = a0
	branch a0 == 0<32> l23063182
l23063182:
	s0_11 = Mem7[0x4200F514<32>:int32]
l23063108:
	word32 a5_164
	Mem16[s0_11 + 56<i32>:word32] = a1
	Mem17[s0_11:word32] = a1
	Mem22[a4 + 16<i32>:word32] = a1
	Mem24[a4 + 28<i32>:word32] = a1
	Mem26[a4 + 8<i32>:word32] = a1
	word32 s0_174 = Mem26[a4 + 80<i32>:word32]
	Mem28[a1 + 24<i32>:word32] = 0<32>
	Mem29[a4 + 20<i32>:word32] = a1
	branch a3 == 5<32> l23063192
l23063192:
	word32 a0_40
	word32 s2_46
	word32 s4_47
	word32 s3_52
	eTaskGetState(s0_174, a3, a4, 5<32>, mstatus, out a0_40, out a3, out a4, out a5_164, out s2_46, out s3_52, out s4_47)
	Mem55[a1 + 12<i32>:byte] = SLICE(a0_40, byte, 0)
	s0_174 = dwArg44
l2306312A:
	a5_164 = Mem29[0x4200F514<32>:int32]
	branch a5_164 == s0_174 l2306318C
l2306318C:
	Mem58[a1 + 12<i32>:byte] = 0<8>
l23063136:
	Mem59[a1 + 12<i32>:byte] = SLICE(a3, byte, 0)
	a5_164 = 3<32>
	branch a3 == 3<32> l230631A6
l230631A6:
	word32 a5_62 = Mem59[a4:word32]
	Mem64[a4 + 1<32>:word32] = a5_62
	branch a5_62 == 0<32> l230631BE
l230631B8:
	Mem67[a1 + 12<i32>:byte] = 2<8>
	a5_62 = 2<32>
l230631BE:
	word32 s1_82
	word32 s4_83
	word32 a0_218
	word32 a2_219
	word32 a6_220
	word32 t3_221
	word32 s0_217
	xTaskResumeAll(a3, a4 + 1<32>, a5_62, mstatus, dwArg0138, dwArg0178, out s0_217, out s1_82, out a0_218, out a2_219, out a3, out a4, out a5_164, out a6_220, out s4_83, out t3_221)
	s0_174 = dwArg44
l23063140:
	branch a2 == 0<32> l23063176
l23063176:
	Mem92[a1 + 32<i32>:word16] = 0<16>
	s1Out = <invalid>
	a3Out = <invalid>
	a4Out = a4
	a5Out = a5_164
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_174
l23063142:
	word32 a5_102
	word32 s0_99 = Mem98[a3 + 48<i32>:word32]
	word32 a4_101 = CONVERT(Mem98[a3:byte], byte, word32)
	branch a4_101 != 165<i32> l230631CC
l230631CC:
	Mem103[a1 + 32<i32>:word16] = 0<16>
	a5_102 = 0<32>
l23063150:
	word32 a5_104 = 0<32>
l23063156:
	a5_104 = a5_104 + 1<32>
	a4_101 = CONVERT(Mem98[a3 + a5_104:byte], byte, word32)
	branch a4_101 == 165<i32> l23063156
l23063164:
	word32 a5_114 = a5_104 >>u 2<i32> << 16<i32>
	Mem117[a1 + 32<i32>:word16] = SLICE(a5_114 >>u 16<i32>, word16, 0)
	a5_102 = a5_114 >>u 16<i32>
l2306316E:
	s1Out = <invalid>
	a3Out = <invalid>
	a4Out = a4_101
	a5Out = a5_102
	s2Out = <invalid>
	s3Out = <invalid>
	s4Out = <invalid>
	return s0_99
vTaskGetInfo_exit:


word32 prvListTasksWithinSingleList.part.11(word32 s1, word32 a0, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArgA8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uxTaskGetSystemState
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s1:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
prvListTasksWithinSingleList.part.11_entry:
l230631D4:
	word32 a1_21 = Mem19[a5 + 4<i32>:word32]
	word32 a5_24 = Mem19[a5 + 4<i32>:word32]
	Mem27[a5_24 + 4<i32>:word32] = a1_21
	word32 s4_110 = a1_21 + 8<i32>
	word32 s2_182 = a1_21
	branch a5_24 == a1_21 + 8<i32> l23063258
l23063258:
	Mem29[a5_24 + 4<i32>:word32] = Mem27[a5_24 + 12<i32>:word32]
l230631F8:
	word32 s5_32 = Mem31[a5_24 + 12<i32>:int32]
	word32 s0_105 = a0
	s1_112 = s1
l23063218:
	word32 a3_178
	word32 a5_180
	word32 s3_65
	word32 s1_112
	word32 a5_39 = Mem38[a5_24 + 4<i32>:word32]
	Mem45[s2_182 + 4<i32>:word32] = a5_39
	branch s4_110 != a5_39 l23063202
l23063202:
	s0_105 = vTaskGetInfo(s1_112, s0_105, 1<32>, a2, a4, mstatus, dwArg0118, dwArg0158, out s1_112, out a3_178, out a4, out a5_180, out s2_182, out s3_65, out s4_110)
	branch s5_32 == s1_112 l23063242
l23063228:
	Mem74[s2_182 + 4<i32>:word32] = Mem45[s4_110 + 4<i32>:int32]
	s0_105 = vTaskGetInfo(s1_112, s0_105, 1<32>, a2, a4, mstatus, dwArg0118, dwArg0158, out s1_112, out a3_178, out a4, out a5_180, out s2_182, out s3_65, out s4_110)
	branch s5_32 != s1_112 l23063214
l23063214:
	a5_24 = Mem91[s2_182 + 4<i32>:int32]
l23063242:
	0<32> = dwArgA8
	s1Out = s1_112
	a0Out = s3_65
	a1Out = s0_105
	a3Out = a3_178
	a4Out = a4
	a5Out = a5_180
	s2Out = s2_182
	s3Out = s3_65
	s4Out = dwArg04
	return s1
prvListTasksWithinSingleList.part.11_exit:


word32 uxTaskGetSystemState(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg88, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskList
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0088:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a5 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
uxTaskGetSystemState_entry:
l2306325E:
	Mem22[a4 + 1<32>:word32] = Mem18[a4:word32]
	word32 a4_181 = a4 + 1<32>
	word32 a5_112 = Mem22[0x4200F520<32>:int32]
	word32 s2_108 = 0<32>
	branch a1 <u a5_112 l2306335A
l2306328A:
	word32 s4_259 = a0
	word32 s0_130 = a2
	word32 s1_120 = 32<i32>
	s2_108 = 0<32>
	word32 a4_258 = 0<32>
l230632A2:
	s1_120 = s1_120 + 0xFFFFFFFF<32>
	a5_112 = (a4_258 + s2_108 << 2<i32>) + s4_259
	branch a3 == 0<32> l230632D2
l230632C0:
	s2_108 = s2_66 + a0_57
	word32 a0_57
	word32 s2_66
	word32 a1_378
	word32 a4_379
	word32 a5_380
	word32 s3_381
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 1<32>, a4_258, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_57, out a1_378, out a3, out a4_379, out a5_380, out s2_66, out s3_381, out s4_259)
	a4_258 = s2_108 << 3<u32>
	a5_112 = s2_108 * 0x24<32> + s4_259
l230632D2:
	branch s1_120 != 0<32> l230632A2
l230632D6:
	branch false l230632F6
l230632E2:
	s2_108 = s2_100 + a0_91
	word32 a0_91
	word32 s2_100
	word32 s4_102
	word32 a5_384
	word32 s3_385
	word32 a1_382
	word32 a4_383
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 2<32>, 0x4200F000<32>, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_91, out a1_382, out a3, out a4_383, out a5_384, out s2_100, out s3_385, out s4_102)
	a5_112 = s2_108 * 0x24<32> + s4_102
l230632F6:
	branch false l23063316
l23063302:
	s2_108 = s2_132 + a0_123
	word32 a0_123
	word32 s2_132
	word32 s4_134
	word32 a1_386
	word32 a4_387
	word32 a5_388
	word32 s3_389
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 2<32>, 0x4200F000<32>, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_123, out a1_386, out a3, out a4_387, out a5_388, out s2_132, out s3_389, out s4_134)
	a5_112 = s2_108 * 0x24<32> + s4_134
l23063316:
	word32 a4_148 = Mem22[0x42018808<32>:word32]
	branch a4_148 == 0<32> l2306333A
l23063322:
	s2_108 = s2_165 + a0_156
	word32 a0_156
	word32 s2_165
	word32 s4_167
	word32 a4_391
	word32 a5_392
	word32 s3_393
	word32 a1_390
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 4<32>, a4_148, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_120, out a0_156, out a1_390, out a3, out a4_391, out a5_392, out s2_165, out s3_393, out s4_167)
	a5_112 = s2_108 * 0x24<32> + s4_167
l2306333A:
	a1 = 0x42018000<32>
	a4_181 = Mem22[0x420187F4<32>:word32]
	branch a4_181 == 0<32> l23063354
l23063346:
	word32 a0_189
	word32 s2_198
	word32 s1_394
	word32 s3_395
	word32 s4_396
	s0_130 = prvListTasksWithinSingleList.part.11(s1_120, a5_112, 3<32>, a4_181, a5_112, mstatus, dwArg88, dwArgF8, dwArg0138, out s1_394, out a0_189, out a1, out a3, out a4_181, out a5_112, out s2_198, out s3_395, out s4_396)
	s2_108 = s2_198 + a0_189
l23063354:
	branch s0_130 == 0<32> l2306335A
l23063356:
	Mem213[s0_130:word32] = 0<32>
l2306335A:
	word32 a5_234
	word32 t3_377
	word32 s1_370
	word32 a0_371
	word32 a2_372
	word32 a3_373
	word32 a4_374
	word32 a6_375
	word32 s4_376
	word32 s0_369
	xTaskResumeAll(a3, a4_181, a5_112, mstatus, dwArg0138, dwArg0178, out s0_369, out s1_370, out a0_371, out a2_372, out a3_373, out a4_374, out a5_234, out a6_375, out s4_376, out t3_377)
	a0Out = s2_108
	a1Out = a1
	a5Out = a5_234
	s8Out = s4
	return s1
uxTaskGetSystemState_exit:


word32 xTaskGetCurrentTaskHandle(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipc_emb_init
//      bl_output
//      bl_ble_sync_stop
//      xQueueGiveMutexRecursive
//      xQueueTakeMutexRecursive
//      xStreamBufferSend
//      xStreamBufferReceive
//      aos_task_key_create
//      aos_task_setspecific
//      aos_task_getspecific
//      bloop_run
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetCurrentTaskHandle_entry:
l23063372:
	word32 a0_5 = Mem0[0x4200F514<32>:int32]
	a5Out = 0x4200F000<32>
	return a0_5
xTaskGetCurrentTaskHandle_exit:


word32 xTaskGetSchedulerState(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      xTimerGenericCommand
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
xTaskGetSchedulerState_entry:
l2306337C:
	word32 a5_12 = Mem0[0x4200F540<32>:int32]
	word32 a0_10 = 1<32>
	branch a5_12 == 0<32> l23063396
l23063388:
	a5_12 = 0x4200F000<32>
	a0_10 = CONVERT(Mem0[0x4200F52C<32>:int32] <u 1<i32>, bool, word32) << 1<i32>
l23063396:
	a5Out = a5_12
	return a0_10
xTaskGetSchedulerState_exit:


word32 xTaskPriorityInherit(word32 a0, word32 a2, word32 a3, word32 a4, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a1 s4
// Trashed: a0 a1 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
xTaskPriorityInherit_entry:
l23063398:
	branch a0 == 0<32> l23063412
l23063412:
	s4Out = s4
	return a1
l2306339A:
	word32 a4_21 = Mem18[a4 + 44<i32>:word32]
	branch a3 >=u a4_21 l230633FA
l230633FA:
l230633BA:
	word32 a0_28 = Mem18[a4_21 + 24<i32>:word32]
	branch a4_21 < 0<32> l230633CC
l230633C0:
	Mem34[32<i32> - a2 + 24<i32>:word32] = a0_28
l230633CC:
	word32 s0_40 = Mem39[a3 + 20<i32>:word32]
	word32 a4_43 = a3 * 0x14<32> + 0x42018538<32>
	branch a3 == a4_43 l23063416
l23063416:
	word32 s0_51
	word32 a4_165
	word32 a5_166
	branch uxListRemove(a3, a4_43, out a4_165, out a5_166) != 0<32> l2306344C
l2306344C:
	s0_51 = s0_40
l23063422:
	s0_51 = Mem39[a3 + 44<i32>:word32]
	branch Mem39[a3 * 0x14<32> + 0x42018538<32>:word32] != 0<32> l23063454
l2306343A:
	Mem65[~(1<32> << a3) & a2:word32] = Mem39[a2:word32]
l23063454:
	word32 a4_70 = Mem67[a2:word32]
	Mem84[a3 + 44<i32>:word32] = s0_51
	word32 a5_80 = 1<32> << a3 | a2
	Mem85[a5_80:word32] = a4_70
	word32 a5_167
	vListInsertEnd(s0_40 + 4<i32>, a4_70, a5_80, out a5_167)
	a1 = s0_40 + 4<i32>
l23063404:
	s4Out = dwArg04
	return a1
l230633E4:
	Mem102[Mem39[a4_43 + 44<i32>:word32] + 44<i32>:word32] = s0_40
	s4Out = dwArg04
	return a1
xTaskPriorityInherit_exit:


word32 xTaskPriorityDisinherit(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvCopyDataToQueue
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a1 a4 a5 s1
// Trashed: a0 a1 a2 a4 a5 a6 s1 tp
// Preserved: s0 sp
xTaskPriorityDisinherit_entry:
l2306347A:
	branch a0 == 0<32> l230634C8
l230634C8:
	a0Out = 0<32>
	a1Out = a1
	a4Out = a4
	a5Out = a5
	return s1
l2306347C:
	word32 a5_19 = Mem0[0x4200F514<32>:int32]
	branch a5_19 == a0 l23063496
l23063492:
	user_vAssertCalled(a4, mstatus, out a5_19)
l23063496:
	word32 a5_134
	word32 s0_31
	branch a5_19 == 0<32> l230634B4
l230634B4:
	word32 a5_26
	user_vAssertCalled(a4, mstatus, out a5_26)
	s0_31 = Mem14[a4 + 80<i32>:word32]
	Mem33[a5_26 + 0x53<32>:word32] = s0_31
	a5_134 = a5_26 + 0xFFFFFFFF<32>
	branch a3 != a4 l230634A6
l230634C6:
l2306349A:
	s0_31 = Mem14[a4 + 80<i32>:word32]
	a5_134 = a5_19 + 0xFFFFFFFF<32>
	Mem37[a5_134 + 84<i32>:word32] = s0_31
	branch a3 == a4 l230634A8
l230634A6:
	branch a5_134 == 0<32> l230634CC
l230634CC:
	word32 s1_40 = s0_31 + 4<i32>
	word32 a4_45
	word32 a5_152
	branch uxListRemove(a3, a4, out a4_45, out a5_152) == 0<32> l23063520
l23063520:
	branch Mem47[a4_45 * 0x14<32> + 0x42018538<32>:word32] != 0<32> l230634E8
l23063540:
	Mem63[~(1<32> << a4_45) & a3:word32] = Mem47[a3:word32]
l230634D8:
l230634E8:
	word32 s0_70 = Mem69[a3 + 80<i32>:word32]
	word32 a2_75 = Mem69[a1:word32]
	Mem84[a3 + 44<i32>:word32] = s0_70
	Mem85[s0_70 + 24<i32>:word32] = 32<i32> - a3
	word32 a5_83 = 1<32> << a3 | a1
	Mem90[a5_83:word32] = a2_75
	word32 a5_92
	vListInsertEnd(s1_40, a3 * 0x14<32>, a5_83, out a5_92)
	a0Out = 1<32>
	a1Out = s1_40
	a4Out = a3 * 0x14<32>
	a5Out = a5_92
	return s1_40
l230634A8:
	a0Out = 0<32>
	a1Out = a1
	a4Out = a4
	a5Out = a5_134
	return s1
xTaskPriorityDisinherit_exit:


word32 vTaskPriorityDisinheritAfterTimeout(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a1Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut: a1 a3 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
vTaskPriorityDisinheritAfterTimeout_entry:
l23063552:
	branch a0 == 0<32> l230635A0
l230635A0:
	a1Out = a1
	a3Out = a3
	s2Out = s2
	return s1
l23063554:
	word32 s2_198
	word32 a0_14 = Mem12[a5 + 84<i32>:word32]
	word32 s1_16 = a1
	branch a5 == 0<32> l23063592
l23063592:
	a2 = user_vAssertCalled(a4, mstatus, out a5)
	s2_198 = Mem12[a0_14 + 80<i32>:int32]
	branch s2_198 >=u a1 l2306356E
l2306359E:
l23063566:
	s2_198 = Mem12[a0_14 + 80<i32>:int32]
	branch s2_198 <u a1 l23063588
l23063588:
	s2_198 = a1
	branch a5 != a1 l23063574
l23063590:
l2306356E:
	branch a5 == s2_198 l2306357C
l23063574:
	word32 s0_38 = Mem12[a3 + 84<i32>:word32]
	branch a3 == 1<32> l230635A2
l230635A2:
	word32 a4_41 = Mem12[0x4200F514<32>:int32]
	branch a4_41 == s0_38 l2306361A
l2306361A:
	a2 = user_vAssertCalled(a4_41, mstatus, out a5)
l230635AE:
	word32 s0_50 = Mem12[a4_41 + 24<i32>:word32]
	Mem53[s0_50 + 44<i32>:word32] = s2_198
	branch a4_41 < 0<32> l230635C4
l230635B8:
	s2_198 = 32<i32> - s2_198
	Mem56[s0_50 + 24<i32>:word32] = s2_198
l230635C4:
	word32 a4_60 = a5 << 2<u32>
	word32 s0_64 = Mem63[a4_60 + 20<i32>:word32]
	s1_16 = 0x42018538<32>
	branch a4_60 != (a5 + a4_60 << 2<i32>) + 0x42018538<32> l2306357C
l230635DC:
	word32 a3_114
	word32 a4_206
	word32 a5_207
	word32 a0_72 = uxListRemove(a3, a4_60, out a4_206, out a5_207)
	branch a0_72 == 0<32> l23063622
l23063622:
	a3_114 = 1<32> << a0_72
	branch Mem63[a0_72 * 0x14<32> + 0x42018538<32>:word32] == 0<32> l23063644
l23063644:
	a2 = ~a3_114 & a1
	Mem92[a2:word32] = Mem63[a1:word32]
l2306363A:
l230635E8:
	a3_114 = 1<32> << a0_72
l230635FC:
	word32 a4_109 = Mem108[a2:word32]
	word32 a3_115 = a3_114 | a2
	Mem116[a3_115:word32] = a4_109
	0<32> = dwArg38
l23063616_thunk_vListInsertEnd:
	word32 a5_208
	vListInsertEnd(s0_64 + 4<i32>, a4_109, a0_72 * 5<32>, out a5_208)
	a1Out = s0_64 + 4<i32>
	a3Out = a3_115
	s2Out = s0_64 + 4<i32>
	return 0x42018538<32>
l2306357C:
	0<32> = dwArg38
	a1Out = a1
	a3Out = a3
	s2Out = s2_198
	return s1_16
vTaskPriorityDisinheritAfterTimeout_exit:


word32 vTaskEnterCritical(word32 a4, word32 mstatus, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_hwdesc_init
//      txl_frame_get
//      rxu_swdesc_upload_evt
//      bl_tx_resend
//      bl_tx_try_flush
//      bl_output
//      my_pbuf_free_custom
//      stateConnectedIPNoEnter
//      cmd_wifi_dump
//      wifi_mgmr_sta_ip_set
//      wifi_mgmr_scan_filter_hidden_ssid
//      irq_lock
//      bl_sys_time_sync_state
//      xEventGroupWaitBits
//      prvUnlockQueue
//      xQueueGenericReset
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      uxQueueMessagesWaiting
//      vQueueWaitForMessageRestricted
//      xStreamBufferSend
//      xStreamBufferReceive
//      prvCheckForValidListAndQueue
//      pvTimerGetTimerID
//      loopset_led_trigger
//      sys_arch_protect
//      sntp_recv
//      sntp_get_time
//      vfs_uart_poll
//      tcp_sent_callback
//      udp_send_data
//      udp_receive_callback
//      tcp_send_data
//      bloop_evt_set_async
//      bloop_run
// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
vTaskEnterCritical_entry:
l23063658:
	__csrrc(mstatus, 8<32>)
	word32 a5_6 = Mem0[0x4200F540<32>:int32]
	branch a5_6 == 0<32> l2306366A
l2306366A:
	a5Out = a5_6
	return a4
l23063666:
l23063666_thunk_vTaskEnterCritical.part.7:
	word32 a5_9
	word32 a4_8 = vTaskEnterCritical.part.7(a4, out a5_9)
	a5Out = a5_9
	return a4_8
vTaskEnterCritical_exit:


word32 vTaskExitCritical(word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rxl_hwdesc_init
//      txl_frame_get
//      rxu_swdesc_upload_evt
//      bl_tx_resend
//      bl_tx_try_flush
//      bl_output
//      my_pbuf_free_custom
//      stateConnectedIPNoEnter
//      cmd_wifi_dump
//      wifi_mgmr_sta_ip_set
//      wifi_mgmr_scan_filter_hidden_ssid
//      irq_unlock
//      bl_sys_time_sync_state
//      xEventGroupWaitBits
//      prvUnlockQueue
//      xQueueGenericReset
//      xQueueGenericSend
//      xQueueReceive
//      xQueueSemaphoreTake
//      uxQueueMessagesWaiting
//      vQueueWaitForMessageRestricted
//      xStreamBufferSend
//      xStreamBufferReceive
//      prvCheckForValidListAndQueue
//      pvTimerGetTimerID
//      loopset_led_trigger
//      sys_arch_unprotect
//      sntp_recv
//      sntp_get_time
//      vfs_uart_poll
//      tcp_sent_callback
//      udp_send_data
//      udp_receive_callback
//      tcp_send_data
//      bloop_evt_set_async
//      bloop_run
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
vTaskExitCritical_entry:
l2306366C:
	word32 a5_20 = Mem0[0x4200F540<32>:int32]
	branch a5_20 == 0<32> l23063686
l23063676:
	a5_20 = Mem0[Mem0[0x4200F514<32>:int32] + 68<i32>:word32]
	branch a5_20 == 0<32> l23063686
l23063686:
	a4Out = a4
	a5Out = a5_20
	return a3
l23063682:
l23063682_thunk_vTaskExitCritical.part.8:
	word32 a4_12
	word32 a5_13
	word32 a3_11 = vTaskExitCritical.part.8(a3, mstatus, out a4_12, out a5_13)
	a4Out = a4_12
	a5Out = a5_13
	return a3_11
vTaskExitCritical_exit:


word32 vTaskList(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 s3, word32 s5, word32 s7, word32 s9, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg34, word32 dwArg78, word32 dwArg9C, word32 dwArgB8, word32 dwArgC8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ps_cmd
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s5:[0..31] s7:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: a7 ra s10 s11 s7 s9 sp t0 t4
vTaskList_entry:
l23063688:
	word32 a5_28 = Mem26[Mem26[s1:word32]:word32]
	Mem31[a0:byte] = 0<8>
	word32 a0_38
	word32 a3_41
	word32 a4_42
	word32 s1_46
	word32 s3_396
	word32 s4_397
	word32 s8_398
	word32 a1_391
	word32 a2_392
	word32 s2_395
	word32 a5_393
	word32 a6_394
	pvPortMalloc(ra, s1, a5_28 * 0x24<32>, a3, a4, a5_28, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_46, out a0_38, out a1_391, out a2_392, out a3_41, out a4_42, out a5_393, out a6_394, out s2_395, out s3_396, out s4_397, out s8_398)
	branch a0_38 == 0<32> l2306376C
l2306376C:
	0<32> = dwArg0128
	return s1_46
l230636C0:
	word32 a0_67
	word32 s8_77
	word32 a1_104
	word32 a5_189
	word32 s0_108 = uxTaskGetSystemState(a0_38, s1_46, 0<32>, a3_41, a4_42, mstatus, s5, dwArgC8, dwArg0108, dwArg0148, out a0_67, out a1_104, out a5_189, out s8_77)
	branch a0_67 == 0<32> l2306374E
l230636CC:
	word32 s1_192 = s8_77
	word32 s6_150 = 0x230C1000<32>
	word32 s5_177 = 4<32>
	word32 s4_121 = 0xE<32>
	word32 s3_175 = 32<i32>
l230636EC:
	branch s5_177 <u CONVERT(Mem96[s1_192 + 12<i32>:byte], byte, word32) l230636FC
l230636F6:
l230636FC:
	word32 a5_400
	word32 a4_399
	strcpy(s0_108, a1_104, out a4_399, out a5_400)
	word32 a1_401
	word32 a2_402
	word32 a5_405
	word32 a3_403
	word32 a4_404
	word32 a0_114 = strlen(s0_108, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405)
	branch s4_121 <u a0_114 l23063720
l2306370E:
	word32 a0_122 = a0_114 + s0_108
	word32 a5_123 = s0_108 + 15<i32>
l23063714:
	Mem126[a0_122:byte] = SLICE(s3_175, byte, 0)
	a0_122 = a0_122 + 1<32>
	branch a5_123 != a0_122 l23063714
l2306371E:
	a0_114 = 0xF<32>
l23063720:
	word32 s0_133 = s0_108 + a0_114
	Mem134[s0_133:byte] = 0<8>
	word32 s0_170
	word32 s1_171
	word32 s2_174
	word32 s7_411
	word32 s8_412
	word32 s11_415
	word32 s9_413
	word32 s10_414
	word32 a0_406
	word32 a1_407
	word32 a5_410
	word32 a2_408
	word32 a4_409
	ra = sprintf(ra, s0_133, s6_150 + -328<i32>, dwLoc18, dwArg08, dwArg34, s9, s7, dwArg78, dwArg9C, out s0_170, out s1_171, out a0_406, out a1_407, out a2_408, out a4_409, out a5_410, out s2_174, out s3_175, out s4_121, out s5_177, out s6_150, out s7_411, out s8_412, out s9_413, out s10_414, out s11_415)
	s1_192 = s1_171 + 36<i32>
	word32 a2_416
	word32 a4_418
	word32 a3_417
	s0_108 = s0_170 + strlen(s0_170, out a1_104, out a2_416, out a3_417, out a4_418, out a5_189)
	branch s1_171 + 36<i32> != s2_174 l230636EC
l2306374E:
	0<32> = dwArg0128
l23063768_thunk_vPortFree:
	word32 s1_218
	word32 t3_428
	word32 a5_425
	word32 s4_427
	word32 a6_426
	word32 a2_422
	word32 a4_424
	word32 a3_423
	word32 s0_419
	word32 a1_421
	word32 a0_420
	vPortFree(s5, dwArgB8, a5_189, mstatus, dwArg0158, dwArg0198, out s0_419, out s1_218, out a0_420, out a1_421, out a2_422, out a3_423, out a4_424, out a5_425, out a6_426, out s4_427, out t3_428)
	return s1_218
vTaskList_exit:


word32 uxTaskResetEventItemValue(word32 a3, word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xEventGroupWaitBits
// MayUse:  a3:[0..31] a4:[0..31]
// LiveOut: a3
// Trashed: a2 a3 a5
// Preserved: sp
uxTaskResetEventItemValue_entry:
l23063786:
	word32 a3_12 = Mem0[a3 + 44<i32>:word32]
	Mem16[32<i32> - a3_12 + 24<i32>:word32] = a4
	return a3_12
uxTaskResetEventItemValue_exit:


word32 pvTaskIncrementMutexHeldCount(word32 a0, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSemaphoreTake
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
pvTaskIncrementMutexHeldCount_entry:
l230637A2:
	branch a4 == 0<32> l230637B6
l230637AE:
	a3 = Mem0[a4 + 84<i32>:word32]
	Mem11[a4 + 0x55<32>:word32] = a3
	a4 = a4 + 1<32>
l230637B6:
	word32 a5_15 = Mem14[a0:word32]
	a4Out = a4
	a5Out = a5_15
	return a3
pvTaskIncrementMutexHeldCount_exit:


word32 ulTaskNotifyTake(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg0128, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ipc_emb_wait
//      bloop_run
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a3 a4 s1 s2 s3
// Trashed: a2 a3 a4 a5 s0 s1 s2 s3 t3 tp
// Preserved: a0 a1 a6 s4 s8 sp
ulTaskNotifyTake_entry:
l230637BA:
	__csrrc(mstatus, 8<32>)
	word32 s2_15 = a0
	word32 s3_17 = a1
	branch a5 == 0<32> l230637DE
l230637DA:
	a4 = vTaskEnterCritical.part.7(a4, out a5)
l230637DE:
	word32 a5_29 = Mem13[a5 + 88<i32>:word32]
	branch a5_29 != 0<32> l230637F8
l230637EC:
	Mem32[a5_29 + 92<i32>:byte] = 1<8>
	a4 = 1<32>
	branch a1 != 0<32> l23063852
l23063852:
	word32 a2_216
	word32 a1_215
	word32 s1_214
	word32 s4_217
	prvAddCurrentTaskToDelayedList(a1, 1<32>, a2, a3, 1<32>, dwArg18, out s1_214, out a0, out a1_215, out a2_216, out a4, out a5_29, out s2_15, out s3_17, out s4_217)
	__syscall()
l230637F8:
	branch a5_29 == 0<32> l23063802
l230637FC:
	a5_29 = Mem55[a5_29 + 68<i32>:word32]
	branch a5_29 != 0<32> l2306384C
l2306384C:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_29)
l23063802:
	__csrrc(mstatus, 8<32>)
	branch a5_29 == 0<32> l2306380E
l2306380A:
	word32 a5_218
	a4 = vTaskEnterCritical.part.7(a4, out a5_218)
l2306380E:
	word32 a5_81 = Mem55[a0 + 88<i32>:word32]
	branch a0 == 0<32> l2306381E
l23063814:
	branch s2_15 == 0<32> l23063844
l23063844:
	a4 = a0 + -1<i32>
	Mem88[a4 + 88<i32>:word32] = a5_81
l2306381A:
	Mem89[a5_81 + 88<i32>:word32] = 0<32>
l2306381E:
	Mem93[a5_81 + 92<i32>:byte] = 0<8>
	word32 s1_94 = Mem93[a5_81:word32]
	branch a5_81 == 0<32> l23063836
l23063828:
	branch Mem93[a5_81 + 68<i32>:word32] == 0<32> l23063836
l2306382E:
	word32 a5_219
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_219)
l23063836:
	0<32> = dwArg0128
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	s2Out = s2_15
	s3Out = s3_17
	return s1_94
ulTaskNotifyTake_exit:


word32 xTaskNotifyWait(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg18, word32 dwArg0128, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferReceive
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0018:[0..31] Stack +0128:[0..31]
// LiveOut: a2 a4 a5 s0 s1 s2 s3 s4 s5
// Trashed: a0 a2 a3 a4 a5 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: a1 a6 sp
xTaskNotifyWait_entry:
l23063860:
	__csrrc(mstatus, 8<32>)
	word32 s1_19 = a0
	word32 s2_107 = a1
	word32 s4_23 = a2
	word32 s3_28 = 0x4200F540<32>
	word32 a5_29 = Mem17[0x4200F540<32>:int32]
	branch a5_29 == 0<32> l2306388E
l2306388A:
	vTaskEnterCritical.part.7(a4, out a5_29)
l2306388E:
	word32 a4_37 = 2<32>
	branch CONVERT(Mem17[a5_29 + 92<i32>:byte], byte, word32) == 2<32> l230638BA
l230638A2:
	word32 a5_44 = Mem17[a0 + 88<i32>:word32]
	s1_19 = ~a0 & a0
	Mem46[s1_19 + 88<i32>:word32] = a5_44
	Mem48[a5_44 + 92<i32>:byte] = 1<8>
	a4_37 = 1<32>
	branch a3 != 0<32> l23063932
l23063932:
	word32 a1_267
	word32 a2_268
	word32 a5_269
	word32 a0_266
	prvAddCurrentTaskToDelayedList(a3, 1<32>, a2, a3, 1<32>, dwArg18, out s1_19, out a0_266, out a1_267, out a2_268, out a4_37, out a5_269, out s2_107, out s3_28, out s4_23)
	__syscall()
l230638BA:
	word32 a3_134
	word32 a5_71 = Mem70[s3_28:int32]
	a3_134 = a3
	branch a5_71 == 0<32> l230638C6
l230638C0:
	a3_134 = a3
	branch Mem70[a5_71 + 68<i32>:word32] != 0<32> l2306392C
l2306392C:
	word32 a5_270
	a3_134 = vTaskExitCritical.part.8(a3, mstatus, out a4_37, out a5_270)
l230638C6:
	__csrrc(mstatus, 8<32>)
	word32 a5_83 = Mem70[s3_28:int32]
	branch a5_83 == 0<32> l230638D4
l230638D0:
	vTaskEnterCritical.part.7(a4_37, out a5_83)
l230638D4:
	branch s4_23 == 0<32> l230638E0
l230638D8:
	a5_83 = Mem70[a5_83 + 88<i32>:word32]
	Mem96[s4_23:word32] = a5_83
l230638E0:
	word32 a4_100 = 2<32>
	word32 a5_102 = CONVERT(Mem98[a5_83 + 92<i32>:byte], byte, word32)
	branch a5_102 != 2<32> l23063900
l230638EE:
	word32 s2_109 = ~s2_107
	a5_102 = Mem98[0x5A<32>:word32]
	Mem113[a5_102 + 88<i32>:word32] = s2_109 & 2<32>
	s2_107 = s2_109 & 2<32>
l23063900:
	Mem117[a5_102 + 92<i32>:byte] = 0<8>
	word32 a5_121 = Mem117[s3_28:int32]
	branch a5_121 == 0<32> l2306391A
l2306390C:
	a5_121 = Mem117[a5_121 + 68<i32>:word32]
	branch a5_121 == 0<32> l2306391A
l23063912:
	vTaskExitCritical.part.8(a3_134, mstatus, out a4_100, out a5_121)
l2306391A:
	0<32> = dwArg0128
	s1Out = s1_19
	a2Out = dwArg0100
	a4Out = a4_100
	a5Out = a5_121
	s2Out = s2_107
	s3Out = s3_28
	s4Out = dwArg78
	s5Out = a3
	return dwArgE4
xTaskNotifyWait_exit:


word32 xTaskGenericNotify(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg14, word32 dwArg38, word32 dwArg58, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_handler
//      bl_tx_notify
//      xStreamBufferSend
//      xStreamBufferReceive
//      bloop_evt_set_async
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
xTaskGenericNotify_entry:
l23063940:
	word32 a2_26
	word32 s0_17 = a0
	word32 s1_21 = a2
	a2_26 = a2
	branch a0 == 0<32> l23063A68
l23063A68:
	word32 a5_290
	a2_26 = user_vAssertCalled(a4, mstatus, out a5_290)
l2306395A:
	__csrrc(mstatus, 8<32>)
	word32 a5_32 = Mem15[0x4200F540<32>:int32]
	branch a5_32 != 0<32> l230639D8
l230639D8:
	a4 = vTaskEnterCritical.part.7(a4, out a5_32)
l2306396C:
	branch a3 == 0<32> l23063976
l23063970:
	s0_17 = Mem15[a5_32 + 88<i32>:word32]
	Mem41[a3:word32] = a5_32
l23063976:
	word32 s2_46 = CONVERT(Mem45[s0_17 + 92<i32>:byte], byte, word32)
	Mem48[s0_17 + 92<i32>:byte] = 2<8>
	word32 s2_264 = s2_46 & 255<i32>
	branch a2 >u 4<32> l2306399A
l2306399A:
	word32 s0_56 = Mem48[a4 + 88<i32>:word32]
	branch a4 == 0xFFFFFFFF<32> l230639A6
l230639A2:
	word32 a5_291
	a2_26 = user_vAssertCalled(a4, mstatus, out a5_291)
l230639A6:
	word32 a1_238
	a1_238 = a1
	branch (s2_46 & 255<i32>) == 1<32> l230639DE
l230639DE:
	word32 a4_292
	word32 a5_293
	uxListRemove(a3, a4, out a4_292, out a5_293)
	a4 = Mem48[a2_26:word32]
	s2_264 = (s2_46 & 255<i32>) << a3 | a2_26
	Mem92[a4:word32] = s2_264
	word32 a5_94
	vListInsertEnd(s0_56 + 4<i32>, a4, a3 * 0x14<32>, out a5_94)
	s1_21 = s0_56 + 4<i32>
	a1_238 = s0_56 + 4<i32>
	branch a5_94 == 0<32> l23063A20
l23063A1C:
	word32 a5_294
	user_vAssertCalled(a4, mstatus, out a5_294)
l23063A20:
	branch Mem92[Mem92[0x4200F514<32>:int32] + 44<i32>:word32] >=u a4 l230639AC
l23063A30:
	__syscall()
l230639AC:
	word32 a5_112 = Mem111[0x4200F540<32>:int32]
	branch a5_112 == 0<32> l230639C8
l230639B4:
	a5_112 = Mem111[Mem111[0x4200F514<32>:int32] + 68<i32>:word32]
	branch a5_112 == 0<32> l230639C8
l230639C0:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4, out a5_112)
l230639C8:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_21
	a0Out = 1<32>
	a1Out = a1_238
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5_112
	s2Out = s2_264
	s3Out = 0x4200F540<32>
	s4Out = a1
	mstatusOut = mstatus
	return ra
l2306398A:
	word32 s0_156
	word32 s1_157
	word32 s2_158
	word32 s4_159
	word32 ra_160
	word32 s3_161
	word32 a0_162
	word32 a1_163
	word32 a2_164
	word32 a3_165
	word32 mstatus_166
	word32 a5_167
	word32 a4_168
	call 4<32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:0x230C0E90<32>,a3:a3,a4:a4_55,mstatus:mstatus,ra:ra,s0:s0_42,s1:Mem48[4<32>:word32],s2:s2_46 & 255<i32>,s3:0x4200F540<32>,s4:a1,Stack +0044:dwArg14,Stack +0068:dwArg38,Stack +0088:dwArg58,Stack +0114:dwArgE4,Stack +0130:dwArg0100,Stack +0134:dwArg0104,Stack +0158:dwArg0128
		defs: a0:a0_162,a1:a1_163,a2:a2_164,a3:a3_165,a4:a4_168,a5:a5_167,mstatus:mstatus_166,ra:ra_160,s0:s0_156,s1:s1_157,s2:s2_158,s3:s3_161,s4:s4_159
	s0Out = s0_156
	s1Out = s1_157
	a0Out = a0_162
	a1Out = a1_163
	a2Out = a2_164
	a3Out = a3_165
	a4Out = a4_168
	a5Out = a5_167
	s2Out = s2_158
	s3Out = s3_161
	s4Out = s4_159
	mstatusOut = mstatus_166
	return ra_160
xTaskGenericNotify_exit:


word32 xTaskGenericNotifyFromISR(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg44, word32 dwArg84, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSendFromISR
//      xStreamBufferReceiveFromISR
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0084:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s4 s8 t3 tp
// Preserved: sp
xTaskGenericNotifyFromISR_entry:
l23063A6E:
	word32 s0_13 = a0
	branch a0 == 0<32> l23063B22
l23063B22:
	user_vAssertCalled(a4, mstatus, out a5)
	dwLoc1C = a2
	a2 = dwArg84
	s0_13 = a3
l23063A7E:
	branch a3 == 0<32> l23063A84
l23063A80:
	s0_13 = Mem31[a5 + 88<i32>:word32]
	Mem33[a5:word32] = a3
l23063A84:
	word32 s1_37 = CONVERT(Mem36[s0_13 + 92<i32>:byte], byte, word32)
	Mem39[s0_13 + 92<i32>:byte] = 2<8>
	word32 s1_234 = s1_37 & 255<i32>
	branch a2 >u 4<32> l23063AA8
l23063AA8:
	word32 s0_104 = Mem39[a4 + 88<i32>:word32]
	branch a4 == 0xFFFFFFFF<32> l23063AB4
l23063AB0:
	word32 a5_261
	a2 = user_vAssertCalled(a4, mstatus, out a5_261)
l23063AB4:
	word32 a5_105 = 1<32>
	branch (s1_37 & 255<i32>) == 1<32> l23063AC8
l23063AC8:
	word32 s0_55 = Mem39[0x29<32>:word32]
	branch false l23063AD0
l23063ACC:
	word32 a5_262
	a2 = user_vAssertCalled(a4, mstatus, out a5_262)
l23063AD0:
	word32 a5_62 = Mem39[0x4200F52C<32>:int32]
	branch a5_62 == 0<32> l23063B34
l23063B34:
	word32 a5_264
	word32 a4_263
	uxListRemove(a3, a4, out a4_263, out a5_264)
	a3 = Mem39[a1:word32]
	word32 a5_89 = 1<32> << a2 | a1
	Mem92[a5_89:word32] = a3
	word32 a4_83 = a2 * 5<32>
	word32 a5_265
	vListInsertEnd(s0_55 + 4<i32>, a4_83 << 2<i32>, a5_89, out a5_265)
	s1_234 = s0_55 + 4<i32>
	a4 = a4_83 << 2<i32>
l23063ADA:
	word32 a5_266
	vListInsertEnd(s0_55 + 24<i32>, a4, a5_62, out a5_266)
l23063AEA:
	s0_104 = Mem101[a4 + 44<i32>:word32]
	a5_105 = Mem101[Mem101[0x4200F514<32>:int32] + 44<i32>:word32]
	branch a5_105 >=u a4 l23063ABA
l23063AFA:
	branch a4 == 0<32> l23063B04
l23063AFE:
	Mem112[a4:word32] = 1<32>
l23063B04:
	Mem115[0x4200F548<32>:word32] = 1<32>
	a5_105 = 0x4200F000<32>
	a4 = 1<32>
l23063ABA:
	s0Out = s0_104
	s1Out = s1_234
	a3Out = a3
	a4Out = a4
	a5Out = a5_105
	mstatusOut = mstatus
	return ra
l23063A98:
	word32 s0_139
	word32 ra_141
	word32 s1_142
	word32 a4_144
	word32 a3_145
	word32 a5_146
	word32 tp_149
	word32 mstatus_154
	call 0x230C0EA4<32> (retsize: 0;)
		uses: a0:a0,a1:a1,a2:Mem39[0x230C0EA4<32>:word32],a3:a3,a4:a4,a5:0x230C0EA4<32>,mstatus:mstatus,ra:ra,s0:s0_34,s1:s1_37 & 255<i32>,s2:a4,Stack +0004:dwLoc1C_175,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0048:dwArg28,Stack +0064:dwArg44,Stack +00A4:dwArg84,tp:tp_149
		defs: a3:a3_145,a4:a4_144,a5:a5_146,mstatus:mstatus_154,ra:ra_141,s0:s0_139,s1:s1_142,tp:tp_149
	s0Out = s0_139
	s1Out = s1_142
	a3Out = a3_145
	a4Out = a4_144
	a5Out = a5_146
	mstatusOut = mstatus_154
	return ra_141
xTaskGenericNotifyFromISR_exit:


void vTaskNotifyGiveFromISR(word32 a0, word32 a1, word32 a2, word32 a4, word32 mstatus, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_handler
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
vTaskNotifyGiveFromISR_entry:
l23063B8A:
	branch a0 == 0<32> l23063C44
l23063C44:
	word32 a5_156
	a2 = user_vAssertCalled(a4, mstatus, out a5_156)
l23063B9A:
	word32 a4_23 = CONVERT(Mem11[a0 + 92<i32>:byte], byte, word32)
	Mem24[a0 + 92<i32>:byte] = 2<8>
	Mem28[0x5B<32>:word32] = Mem24[0x5A<32>:word32]
	branch a4_23 == 1<32> l23063BBC
l23063BBC:
	word32 s0_29 = Mem28[0x2B<32>:word32]
	branch false l23063BC4
l23063BC0:
	word32 a5_157
	a2 = user_vAssertCalled(a4_23, mstatus, out a5_157)
l23063BC4:
	word32 a5_35 = Mem28[0x4200F52C<32>:int32]
	branch a5_35 == 0<32> l23063C0A
l23063C0A:
	word32 a5_159
	word32 a4_158
	uxListRemove(1<32>, a4_23, out a4_158, out a5_159)
	word32 a5_59 = 1<32> << a2 | a1
	Mem62[a5_59:word32] = Mem28[a1:word32]
	word32 a4_53 = a2 * 5<32>
	word32 a5_160
	vListInsertEnd(s0_29 + 4<i32>, a4_53 << 2<i32>, a5_59, out a5_160)
	a4_23 = a4_53 << 2<i32>
l23063BCE:
	word32 a5_161
	vListInsertEnd(s0_29 + 24<i32>, a4_23, a5_35, out a5_161)
l23063BDE:
	branch Mem71[Mem71[0x4200F514<32>:int32] + 44<i32>:word32] >=u a4_23 l23063BB0
l23063BEE:
	branch a1 == 0<32> l23063BF4
l23063BF0:
	Mem80[1<32>:word32] = a1
l23063BF4:
	Mem90[0x4200F548<32>:word32] = 1<32>
	0<32> = dwArg38
	return
l23063BB0:
	0<32> = dwArg38
	return
vTaskNotifyGiveFromISR_exit:


word32 xTaskNotifyStateClear(word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xStreamBufferSend
//      xStreamBufferReceive
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a2 a3 a4 a5 s0 s1 s4 s8 t3
// Preserved: sp
xTaskNotifyStateClear_entry:
l23063C4A:
	word32 s1_11 = a0
	branch a0 == 0<32> l23063C9E
l23063C9E:
	a5 = 0x4200F000<32>
	s1_11 = Mem9[0x4200F514<32>:int32]
l23063C56:
	__csrrc(mstatus, 8<32>)
	branch a5 == 0<32> l23063C6A
l23063C66:
	word32 a5_98
	vTaskEnterCritical.part.7(a4, out a5_98)
l23063C6A:
	word32 a5_28 = CONVERT(Mem9[s1_11 + 92<i32>:byte], byte, word32)
	word32 a4_29 = 2<32>
	branch a5_28 != 2<32> l23063C7C
l23063C76:
	Mem31[s1_11 + 92<i32>:byte] = 0<8>
l23063C7C:
	branch a5_28 == 0<32> l23063C94
l23063C80:
	a5_28 = Mem34[Mem34[0x4200F514<32>:int32] + 68<i32>:word32]
	branch a5_28 == 0<32> l23063C94
l23063C8C:
	a3 = vTaskExitCritical.part.8(a3, mstatus, out a4_29, out a5_28)
l23063C94:
	a4Out = a4_29
	a5Out = a5_28
	return a3
xTaskNotifyStateClear_exit:


word32 prvCheckForValidListAndQueue(word32 a3, word32 a4, word32 mstatus, word32 dwArg38, word32 dwArg0118, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTimerCreateTimerTask
//      xTimerCreate
//      xTimerCreateStatic
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0038:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 a5 a6 s1 s2 s3 s4 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
prvCheckForValidListAndQueue_entry:
l23063CA8:
	word32 a5_16
	vTaskEnterCritical(a4, mstatus, out a5_16)
	branch a5_16 == 0<32> l23063CD0
l23063CD0:
	vListInitialise(0x4201885C<32>)
	vListInitialise(0x42018870<32>)
	Mem32[0x4200F54C<32>:word32] = 0x4201885C<32>
	Mem39[0x4200F550<32>:word32] = 0x42018870<32>
	word32 a0_40
	word32 a2_109
	word32 a4_110
	word32 a5_111
	Mem54[a0_40:word32] = xQueueGenericCreateStatic(4<32>, 0x10<32>, 0x4201881C<32>, 0x42018884<32>, 0<32>, mstatus, dwArg0118, out s1, out a0_40, out a2_109, out a3, out a4_110, out a5_111, out s2, out s3, out s4)
	branch a0_40 == 0<32> l23063CC2
l23063D1E:
	a6 = vQueueAddToRegistry(a0_40, 0x230C0EF4<32>, a3)
l23063CC2:
	0<32> = dwArg38
l23063CCC_thunk_vTaskExitCritical:
	word32 a5_70
	word32 a4_72
	word32 a3_71 = vTaskExitCritical(a3, mstatus, out a4_72, out a5_70)
	s1Out = s1
	a3Out = a3_71
	a4Out = a4_72
	a5Out = a5_70
	a6Out = a6
	s2Out = s2
	s3Out = s3
	s4Out = s4
	return dwArg14
prvCheckForValidListAndQueue_exit:


word32 prvInsertTimerInActiveList(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvTimerTask
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
prvInsertTimerInActiveList_entry:
l23063D2C:
	Mem8[a1 + 4<i32>:word32] = a0
	Mem9[a0 + 16<i32>:word32] = a0
	branch a2 <u a1 l23063D4A
l23063D4A:
	branch a2 >=u a3 l23063D54
l23063D4E:
	branch a1 >=u a3 l23063D44
l23063D54:
	word32 a4_63
	word32 a5_24
	vListInsert(Mem9[0x4200F54C<32>:int32], a2, a3, out a4_63, out a5_24)
	a5Out = a5_24
	return 0<32>
l23063D3A:
	word32 a2_31 = a2 - a3
	branch a2_31 <u a4 l23063D6C
l23063D6C:
	word32 a5_39
	word32 a4_62
	vListInsert(Mem9[0x4200F550<32>:int32], a2_31, a3, out a4_62, out a5_39)
	a5Out = a5_39
	return 0<32>
l23063D44:
	a5Out = a0
	return 1<32>
prvInsertTimerInActiveList_exit:


word32 xTimerCreateTimerTask(word32 ra, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg64, word32 dwArgC8, word32 dwArgF8, word32 dwArg0194, ptr32 & t0Out, ptr32 & a0Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskStartScheduler
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0064:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0194:[0..31]
// LiveOut: a0 a4 t0 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
xTimerCreateTimerTask_entry:
l23063D84:
	word32 a6_15
	word32 s1_139
	word32 a3_140
	word32 a5_141
	word32 s2_142
	word32 s3_143
	word32 s4_144
	word32 a4_13
	word32 tp_135 = prvCheckForValidListAndQueue(a3, a4, mstatus, dwArg18, dwArgF8, out s1_139, out a3_140, out a4_13, out a5_141, out a6_15, out s2_142, out s3_143, out s4_144)
	branch Mem5[0x4200F558<32>:int32] == 0<32> l23063DD4
l23063D96:
	word32 a0_40
	word32 s0_146
	word32 s1_147
	word32 a2_148
	word32 a3_149
	word32 a5_150
	word32 s2_151
	word32 s3_152
	word32 s6_153
	word32 s7_154
	xTaskCreateStatic(ra, 0x23063FF0<32>, 0x230C0EFC<32>, dwArg64, 0<32>, 0x1F<32>, vApplicationGetTimerTaskMemory(fp + 0xFFFFFFE4<32>, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>), a6_15, mstatus, 0<32>, dwArg04, dwArgC8, dwArg0194, out tp_135, out t0, out s0_146, out s1_147, out a0_40, out a2_148, out a3_149, out a4_13, out a5_150, out s2_151, out s3_152, out s6_153, out s7_154)
	Mem63[0x4200F55C<32>:word32] = a0_40
	branch a0_40 == 0<32> l23063DD4
l23063DD4:
	word32 a5_145
	user_vAssertCalled(a4_13, mstatus, out a5_145)
	t0Out = t0
	a0Out = 0<32>
	a4Out = a4_13
	return tp_135
l23063DCC:
	t0Out = t0
	a0Out = 1<32>
	a4Out = a4_13
	return tp_135
xTimerCreateTimerTask_exit:


word32 xTimerCreate(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg18, word32 dwArg20, word32 dwArg24, word32 dwArgF8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      k_timer_init
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
xTimerCreate_entry:
l23063DE0:
	word32 a0_31
	word32 a2_141
	word32 a1_140
	word32 a6_142
	word32 s4_143
	word32 s8_144
	word32 s3_131
	word32 s1_129
	word32 s2_130
	word32 a4_127
	word32 a5_128
	word32 a3_126
	pvPortMalloc(ra, a1, 44<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_129, out a0_31, out a1_140, out a2_141, out a3_126, out a4_127, out a5_128, out a6_142, out s2_130, out s3_131, out s4_143, out s8_144)
	branch a0_31 == 0<32> l23063E36
l23063E06:
	Mem47[a0_31 + 40<i32>:byte] = 0<8>
	branch s1_129 == 0<32> l23063E4A
l23063E4A:
	word32 a5_145
	user_vAssertCalled(a4_127, mstatus, out a5_145)
l23063E0C:
	word32 s4_65
	word32 a6_146
	prvCheckForValidListAndQueue(a3_126, a4_127, mstatus, dwArg18, dwArgF8, out s1_129, out a3_126, out a4_127, out a5_128, out a6_146, out s2_130, out s3_131, out s4_65)
	Mem72[a0_31:word32] = a0
	Mem73[s1_129 + 24<i32>:word32] = a0_31
	Mem74[a0_31 + 28<i32>:word32] = s4_65
	Mem75[a0_31 + 32<i32>:word32] = s3_131
	vListInitialiseItem(a0_31 + 4<i32>)
	branch s2_130 == 0<32> l23063E36
l23063E2A:
	word32 a5_76 = CONVERT(Mem75[a0_31 + 40<i32>:byte], byte, word32)
	Mem78[a0_31 + 40<i32>:byte] = SLICE(a5_76 | 4<i32>, byte, 0)
	a5_128 = a5_76 | 4<i32>
l23063E36:
	s1Out = s1_129
	a3Out = a3_126
	a4Out = a4_127
	a5Out = a5_128
	s2Out = s2_130
	s3Out = s3_131
	s4Out = dwArg04
	return s1
xTimerCreate_exit:


word32 xTimerCreateStatic(word32 a1, word32 a3, word32 a4, word32 a5, word32 a7, word32 mstatus, word32 dwArg08, word32 dwArgE8, word32 dwArg0128, ptr32 & s1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      stateDisconnect_enter
//      wifi_mgmr_start
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a7:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31]
// LiveOut: a3 s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
xTimerCreateStatic_entry:
l23063E50:
	word32 s1_142 = a1
	branch a7 == 44<i32> l23063E7C
l23063E78:
	word32 a5_150
	user_vAssertCalled(a4, mstatus, out a5_150)
l23063E7C:
	branch a5 == 0<32> l23063ECC
l23063ECC:
	word32 a5_151
	user_vAssertCalled(a4, mstatus, out a5_151)
l23063E80:
	Mem45[a5 + 40<i32>:byte] = 2<8>
	branch a1 == 0<32> l23063EC6
l23063EC6:
	word32 a5_152
	user_vAssertCalled(a4, mstatus, out a5_152)
l23063E88:
	word32 s2_63
	word32 s3_64
	word32 s4_65
	word32 a6_155
	word32 a4_153
	word32 a5_154
	prvCheckForValidListAndQueue(a3, a4, mstatus, dwArg08, dwArgE8, out s1_142, out a3, out a4_153, out a5_154, out a6_155, out s2_63, out s3_64, out s4_65)
	Mem71[a5:word32] = s2_63
	Mem72[s1_142 + 24<i32>:word32] = a5
	Mem73[a5 + 28<i32>:word32] = s4_65
	Mem76[a5 + 32<i32>:word32] = a4
	vListInitialiseItem(a5 + 4<i32>)
	branch s3_64 == 0<32> l23063EB2
l23063EA6:
	Mem79[a5 + 40<i32>:byte] = SLICE(CONVERT(Mem76[a5 + 40<i32>:byte], byte, word32) | 4<i32>, byte, 0)
l23063EB2:
	0<32> = dwArg0128
	s1Out = s1_142
	a3Out = a3
	return dwArgE4
xTimerCreateStatic_exit:


word32 xTimerGenericCommand(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg64, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoExit
//      stateConnectedIPNoEnter
//      stateDisconnect_exit
//      stateDisconnect_enter
//      wifi_mgmr_start
//      k_timer_stop
//      k_timer_delete
//      k_timer_start
//      prvSwitchTimerLists
//      prvTimerTask
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0064:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
xTimerGenericCommand_entry:
l23063ED2:
	word32 s1_125 = a0
	word32 s2_126 = a3
	word32 s3_127 = a4
	branch a0 == 0<32> l23063F3E
l23063F3E:
	user_vAssertCalled(a4, mstatus, out a5)
l23063EE6:
	word32 s0_124 = Mem32[a5:word32]
	word32 a0_116 = 0<32>
	branch a5 == 0<32> l23063F16
l23063EF4:
	branch a1 > 5<32> l23063F24
l23063F24:
	word32 a0_50
	word32 a1_51
	word32 a3_53
	word32 a4_54
	word32 a5_55
	word32 s1_59
	word32 s2_60
	word32 s3_61
	word32 s0_58 = xQueueGenericSendFromISR(a5, fp + -48<i32>, a3, 0<32>, a4, a5, mstatus, a1, dwArgE8, out s1_59, out a0_50, out a1_51, out a3_53, out a4_54, out a5_55, out s2_60, out s3_61)
	s1Out = s1_59
	a0Out = a0_50
	a1Out = a1_51
	a3Out = a3_53
	a4Out = a4_54
	a5Out = a5_55
	s2Out = s2_60
	s3Out = s3_61
	s4Out = <invalid>
	s5Out = s5
	s6Out = s6
	s8Out = <invalid>
	return s0_58
l23063F00:
	word32 a5_256
	word32 a0_75 = xTaskGetSchedulerState(out a5_256)
	branch a0_75 == 2<32> l23063F4C
l23063F4C:
	word32 a0_83
	word32 a1_84
	word32 a3_86
	word32 a4_87
	word32 a5_88
	word32 s1_92
	word32 s2_93
	word32 s3_94
	word32 s5_96
	word32 s6_97
	word32 a2_257
	word32 a7_258
	word32 s4_259
	word32 s8_260
	word32 s0_91 = xQueueGenericSend(a0_75, fp + -48<i32>, 0<32>, a4, 2<32>, mstatus, a1, dwLoc1C, dwArg64, dwArgD8, dwArg0118, dwArg0158, out s1_92, out a0_83, out a1_84, out a2_257, out a3_86, out a4_87, out a5_88, out a7_258, out s2_93, out s3_94, out s4_259, out s5_96, out s6_97, out s8_260)
	s1Out = s1_92
	a0Out = a0_83
	a1Out = a1_84
	a3Out = a3_86
	a4Out = a4_87
	a5Out = a5_88
	s2Out = s2_93
	s3Out = s3_94
	s4Out = <invalid>
	s5Out = s5_96
	s6Out = s6_97
	s8Out = <invalid>
	return s0_91
l23063F0A:
	word32 a2_261
	word32 a7_262
	word32 s4_263
	word32 s8_264
	s0_124 = xQueueGenericSend(a0_75, fp + -48<i32>, 0<32>, a4, 2<32>, mstatus, a1, dwLoc1C, dwArg64, dwArgD8, dwArg0118, dwArg0158, out s1_125, out a0_116, out a1, out a2_261, out a3, out a4, out a5, out a7_262, out s2_126, out s3_127, out s4_263, out s5, out s6, out s8_264)
l23063F16:
	s1Out = s1_125
	a0Out = a0_116
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2_126
	s3Out = s3_127
	s4Out = <invalid>
	s5Out = s5
	s6Out = s6
	s8Out = <invalid>
	return s0_124
xTimerGenericCommand_exit:


word32 prvSwitchTimerLists(word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg44, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvTimerTask
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0044:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvSwitchTimerLists_entry:
l23063F66:
	word32 s2_15 = 0x4200F54C<32>
l23063F9C:
	word32 a5_20 = Mem17[a4:word32]
	branch a4 != 0<32> l23063F7C
l23063F7C:
	s3 = Mem17[Mem17[s0 + 12<i32>:word32]:int32]
	word32 a4_29
	word32 a5_30
	uxListRemove(a3, a4, out a4_29, out a5_30)
	call a5_30 (retsize: 0;)
		uses: a3:a3_27,a4:a4_29
		defs: a0:a0_33,a4:a4_34
	s0 = Mem17[a5_30 + 32<i32>:word32]
	s1 = s0 + 4<i32>
	word32 a5_36 = CONVERT(Mem17[s0 + 40<i32>:byte], byte, word32)
	branch (a5_36 & 4<32>) != 0<32> l23063FC2
l23063FC2:
	s0 = Mem17[(a5_36 & 4<32>) + 24<i32>:word32]
	a3 = 0<32>
	word32 a5_41 = (a5_36 & 4<32>) + s3
	branch s3 >=u a5_41 l23063FE4
l23063FE4:
	word32 a1_153
	word32 a5_154
	word32 s4_155
	word32 s8_156
	s0 = xTimerGenericCommand(s0, 0<32>, 0<32>, 0<32>, a5_41, mstatus, dwArg44, dwArgB8, dwArgC8, dwArgF8, dwArg0138, out s1, out a0, out a1_153, out a3, out a4, out a5_154, out s2_15, out s3, out s4_155, out s5, out s6, out s8_156)
	branch a0 != 0<32> l23063F9C
l23063FEA:
	word32 a5_158
	user_vAssertCalled(a4, mstatus, out a5_158)
l23063FD4:
	word32 a0_72 = Mem17[s2_15:int32]
	Mem73[a5_41 + 4<i32>:word32] = s0
	Mem74[s0 + 16<i32>:word32] = s0
	word32 a5_157
	a0 = vListInsert(a0_72, s3, 0<32>, out a4, out a5_157)
l23063FA4:
	word32 a4_81 = Mem17[a3:word32]
	Mem82[a5_20:word32] = a4_81
	Mem85[s2_15:word32] = a3
	s1Out = s1
	a0Out = a0
	a3Out = a3
	a4Out = a4_81
	a5Out = a5_20
	s2Out = s2_15
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = dwLoc1C
	return s0
prvSwitchTimerLists_exit:


void prvTimerTask(word32 ra, word32 a2, word32 a3, word32 a4, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
prvTimerTask_entry:
l23063FF0:
	word32 sp_186 = fp + -80<i32>
	word32 s4_271 = 0x4200F54C<32>
	word32 s3_148 = 0x4200F558<32>
	word32 s6_163 = 0x230C0ECC<32>
	word32 s7_191 = 0x4200F550<32>
	word32 s5_162 = 9<32>
l23064030:
	word32 a5_197
	word32 a4_221
	word32 a2_105
	word32 s0_217
	word32 mstatus_205
	word32 a3_203
	word32 a4_202
	word32 a5_37 = Mem36[s4_271:int32]
	word32 s2_147 = Mem36[a5_37:int32]
	branch s2_147 == 0<32> l23064142
l23064142:
	word32 a5_443
	a4_221 = vTaskSuspendAll(a4, out a5_443)
	word32 a5_43
	word32 a0_42 = xTaskGetTickCount(out a5_43)
	word32 s1_44 = Mem36[a5_43:word32]
	s0_217 = a0_42
	branch a0_42 <u a5_43 l23064160
l23064152:
	Mem48[a0_42:word32] = s1_44
	a2_105 = CONVERT(a2 <u 1<i32>, bool, word32)
l2306403C:
	s2_147 = Mem36[Mem36[a5_37 + 12<i32>:word32]:int32]
	word32 a5_444
	a4_221 = vTaskSuspendAll(a4, out a5_444)
	word32 a5_57
	word32 a0_56 = xTaskGetTickCount(out a5_57)
	word32 s1_58 = Mem36[a5_57:word32]
	s0_217 = a0_56
	branch a0_56 <u a5_57 l23064160
l23064160:
	word32 a3_72
	word32 a4_73
	word32 a5_74
	word32 s1_78
	word32 s8_448
	word32 s4_447
	word32 s2_446
	word32 a0_445
	Mem92[prvSwitchTimerLists(s0_217, a3, a4_221, mstatus, Mem36[sp_186 + 68<i32>:word32], Mem36[sp_186 + 184<i32>:word32], Mem36[sp_186 + 200<i32>:word32], Mem36[sp_186 + 248<i32>:word32], Mem36[sp_186 + 312<i32>:word32], out s1_78, out a0_445, out a3_72, out a4_73, out a5_74, out s2_446, out s3_148, out s4_447, out s5_162, out s6_163, out s8_448):word32] = s1_78
	word32 s4_454
	word32 t3_455
	word32 a6_453
	word32 a0_451
	word32 a2_452
	word32 s0_449
	word32 s1_450
	xTaskResumeAll(a3_72, a4_73, a5_74, mstatus, Mem92[sp_186 + 344<i32>:word32], Mem92[sp_186 + 408<i32>:word32], out s0_449, out s1_450, out a0_451, out a2_452, out a3, out a4, out a5_197, out a6_453, out s4_454, out t3_455)
l23064052:
	Mem104[a0_56:word32] = s1_58
	a2_105 = 0<32>
	branch a0_56 >=u s2_147 l23064176
l23064176:
	word32 a3_115
	word32 a4_116
	word32 t3_460
	word32 a5_458
	word32 a6_459
	word32 a2_457
	word32 a0_456
	word32 s1_111
	word32 s4_112
	word32 s0_110
	xTaskResumeAll(a3, a4_221, a5_57, mstatus, Mem104[sp_186 + 344<i32>:word32], Mem104[sp_186 + 408<i32>:word32], out s0_110, out s1_111, out a0_456, out a2_457, out a3_115, out a4_116, out a5_458, out a6_459, out s4_112, out t3_460)
	word32 s8_119 = Mem104[Mem104[Mem104[s4_112:int32] + 12<i32>:word32] + 12<i32>:int32]
	word32 a5_462
	word32 a4_461
	uxListRemove(a3_115, a4_116, out a4_461, out a5_462)
	word32 a5_124 = CONVERT(Mem104[s8_119 + 40<i32>:byte], byte, word32)
	branch (a5_124 & 4<i32>) != 0<32> l230641BA
l230641BA:
	word32 a5_135
	branch prvInsertTimerInActiveList(s8_119, Mem104[s8_119 + 24<i32>:int32] + s2_147, s0_110, s2_147, a5_124 & 4<i32>, out a5_135) == 0<32> l2306419C
l230641CC:
	word32 a1_472
	word32 a0_141
	word32 a4_154
	word32 a3_473
	word32 a5_474
	s0_110 = xTimerGenericCommand(s8_119, 0<32>, 0<32>, 0<32>, a5_135, mstatus, Mem104[sp_186 + 100<i32>:word32], Mem104[sp_186 + 216<i32>:word32], Mem104[sp_186 + 232<i32>:word32], Mem104[sp_186 + 280<i32>:word32], Mem104[sp_186 + 344<i32>:word32], out s1_111, out a0_141, out a1_472, out a3_473, out a4_154, out a5_474, out s2_147, out s3_148, out s4_112, out s5_162, out s6_163, out s8_119)
	branch a0_141 != 0<32> l2306419C
l230641DC:
	word32 a5_475
	user_vAssertCalled(a4_154, mstatus, out a5_475)
l23064196:
	Mem167[s8_119 + 40<i32>:byte] = SLICE(a5_124 & 0xFFFFFFFE<32>, byte, 0)
l2306419C:
	word32 a2_199
	call Mem169[s8_119 + 32<i32>:int32] (retsize: 0;)
		uses: a0:s8_168,a2:a2_199,a3:a3_203,a4:a4_202,mstatus:mstatus_205,ra:ra_182,s0:s0_183,s1:s1_172,s2:s2_184,s3:s3_173,s4:s4_175,s5:s5_179,s6:s6_176,s7:s7_46,s8:s8_168
		defs: a2:a2_199,a3:a3_203,a4:a4_202,a5:a5_197,mstatus:mstatus_205,ra:ra_193,s3:s3_188,s5:s5_192,s6:s6_190,s7:s7_191,sp:sp_186
	mstatus = mstatus_205
	a4 = a4_202
	a3 = a3_203
l2306405A:
	word32 t3_468
	word32 s4_467
	word32 a6_466
	word32 a2_465
	word32 s1_464
	word32 s0_463
	word32 a4_228
	word32 a5_229
	word32 a0_238
	xTaskResumeAll(vQueueWaitForMessageRestricted(Mem214[s3_148:int32], s2_147 - s0_217, a2_105, a3, a4_221, mstatus, Mem214[sp_186 + 16<i32>:word32], Mem214[sp_186 + 20<i32>:word32], Mem214[sp_186 + 56<i32>:word32], out a4_228, out a5_229, out s3_148), a4_228, a5_229, mstatus, Mem214[sp_186 + 344<i32>:word32], Mem214[sp_186 + 408<i32>:word32], out s0_463, out s1_464, out a0_238, out a2_465, out a3, out a4, out a5_197, out a6_466, out s4_467, out t3_468)
	branch a0_238 != 0<32> l23064070
l2306406C:
	__syscall()
l23064070:
	word32 s8_470
	word32 s1_469
	word32 a0_259
	word32 a1_260
	word32 s2_269
	word32 s0_267 = xQueueReceive(Mem250[s3_148:int32], sp_186 + 16<i32>, 0<32>, a3, a4, a5_197, mstatus, Mem250[sp_186 + 8<i32>:word32], Mem250[sp_186 + 36<i32>:word32], Mem250[sp_186 + 164<i32>:word32], Mem250[sp_186 + 280<i32>:word32], Mem250[sp_186 + 344<i32>:word32], out s1_469, out a0_259, out a1_260, out a2, out a3, out a4, out a5_197, out s2_269, out s3_148, out s4_271, out s8_470)
	branch a0_259 == 0<32> l23064030
l2306407E:
	word32 s8_281 = Mem250[sp_186 + 4<i32>:word32]
	branch a5_197 < 0<32> l23064130
l23064130:
	call a5_197 (retsize: 0;)
		uses: a0:s0_267,a1:a1_260,a2:a2_261,a3:a3_262,a4:a4_263,a5:a5_264,mstatus:mstatus_255,Stack +0008:Mem250[sp_253 + 8<i32>:word32],Stack +0024:Mem250[sp_253 + 36<i32>:word32],Stack +00A4:Mem250[sp_253 + 164<i32>:word32],Stack +0118:Mem250[sp_253 + 280<i32>:word32],Stack +0158:Mem250[sp_253 + 344<i32>:word32]
		defs: a3:a3_288,a4:a4_289,a5:a5_290,s2:s2_295,s3:s3_296,s4:s4_297
	branch a5_197 < 0<32> l23064070
l2306413E:
	s8_281 = Mem250[sp_186 + 4<i32>:word32]
l23064086:
	word32 s0_310 = Mem250[a5_197 + 20<i32>:word32]
	branch a5_197 == 0<32> l23064092
l2306408A:
	word32 a5_471
	uxListRemove(a3, a4, out a4, out a5_471)
l23064092:
	word32 a0_317 = xTaskGetTickCount(out a5_197)
	word32 s1_320 = Mem250[a5_197:word32]
	branch a0_317 <u a5_197 l2306416C
l2306416C:
	Mem323[sp_186 + 132<i32>:word32] = a0_317
	s0_310 = prvSwitchTimerLists(s0_310, a3, a4, mstatus, Mem323[sp_186 + 68<i32>:word32], Mem323[sp_186 + 184<i32>:word32], Mem323[sp_186 + 200<i32>:word32], Mem323[sp_186 + 248<i32>:word32], Mem323[sp_186 + 312<i32>:word32], out s1_320, out a0_317, out a3, out a4, out a5_197, out s2_269, out s3_148, out s4_271, out s5_162, out s6_163, out s8_281)
l2306409C:
	Mem358[a0_317:word32] = s1_320
	branch s5_162 <u a5_197 l23064070
l230640A4:
	word32 a5_371 = Mem358[(a5_197 << 2<i32>) + s6_163:word32]
	word32 a2_410
	word32 a4_413
	word32 a3_414
	word32 mstatus_416
	call a5_371 (retsize: 0;)
		uses: a2:a2_410,a3:a3_414,a4:a4_413,a5:a5_371,mstatus:mstatus_416,ra:ra_387,s0:s0_390,s1:s1_356,s2:s2_391,s3:s3_372,s4:s4_375,s5:s5_359,s6:s6_365,s7:s7_381,s8:s8_394
		defs: a2:a2_410,a3:a3_414,a4:a4_413,mstatus:mstatus_416
	return
prvTimerTask_exit:


word32 pvTimerGetTimerID(word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip_obtaining_timeout
//      __reload_tsen
//      disconnect_retry
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a2 a3 a4 a5
// Preserved: s0 sp
pvTimerGetTimerID_entry:
l230641E2:
	branch a0 == 0<32> l23064200
l23064200:
	word32 a5_37
	user_vAssertCalled(a4, mstatus, out a5_37)
l230641EC:
	word32 a5_38
	vTaskEnterCritical(a4, mstatus, out a5_38)
	word32 s0_20 = Mem7[a0 + 28<i32>:word32]
	word32 a4_39
	word32 a5_40
	a3Out = vTaskExitCritical(a3, mstatus, out a4_39, out a5_40)
	return s0_20
pvTimerGetTimerID_exit:


void vPortSetupTimerInterrupt()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xPortStartScheduler
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: sp
vPortSetupTimerInterrupt_entry:
l23064206:
l2306420A:
	word32 a2_7 = Mem0[0x200BFF8<32>:int32]
	word32 a4_8 = Mem0[0x200BFFC<32>:int32]
	branch a4_8 != Mem0[0x200BFFC<32>:int32] l2306420A
l2306421A:
	Mem17[a2_7 + 0x2000710<32>:word32] = 0x2004000<32>
	Mem20[CONVERT(a2_7 + 0x2000710<32> <u a2_7, bool, word32) + a4_8 + 4<i32>:word32] = 0x2004000<32>
	Mem25[a2_7 + 0x4FFFE20<32>:word32] = 0x4200F568<32>
	Mem26[a4_8 + CONVERT(a2_7 + 0x4FFFE20<32> <u a2_7, bool, word32) + 4<i32>:word32] = 0x4200F568<32>
	return
vPortSetupTimerInterrupt_exit:


void xPortStartScheduler(word32 gp, word32 tp, word32 t0, word32 a4, word32 fcsr, word32 mstatus, word32 mie, word32 mtvec)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskStartScheduler
// MayUse:  a4:[0..31] fcsr:[0..31] gp:[0..31] mie:[0..31] mstatus:[0..31] mtvec:[0..31] t0:[0..31] tp:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s4 s5 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
xPortStartScheduler_entry:
l23064250:
	__csrrs(mtvec, t0)
	branch false l2306428A
l2306428A:
	word32 a5_64
	user_vAssertCalled(a4, mstatus, out a5_64)
l23064268:
	vPortSetupTimerInterrupt()
	__csrrs(mie, tp)
	Mem32[0x2800407<32>:byte] = 1<8>
	fn23064600(gp, fcsr, mstatus, mtvec)
	return
xPortStartScheduler_exit:


void fn23064600(word32 gp, word32 fcsr, word32 mstatus, word32 mtvec)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xPortStartScheduler
// MayUse:  fcsr:[0..31] gp:[0..31] mstatus:[0..31] mtvec:[0..31]
// LiveOut:
// Trashed: a2 a3 a6 a7 ra s0 s1 s4 s5 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
fn23064600_entry:
l23064600:
	__csrrw(mtvec, 0x23064302<p32>)
	word32 sp_9 = Mem0[0x4200F514<p32>:int32]
	0<32> = Mem0[sp_9 + 64<i32>:word32]
	0<32> = Mem0[sp_9 + 32<i32>:word32]
	0<32> = Mem0[sp_9 + 992<i32>:word64]
	word32 sp_40 = Mem0[sp_9 + 472<i32>:word64]
	__csrrw(fcsr, gp)
	__csrrw(mstatus, 0<32>)
	0<32> = Mem0[sp_40 + 508<i32>:word32]
	return
fn23064600_exit:


word32 fn23064700(word32 a0, word32 a1, word32 a2, word32 mstatus, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvInitialiseNewTask.isra.2
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31]
// LiveOut: a0 t0
// Trashed: a0 t0 t1
// Preserved: sp
fn23064700_entry:
l23064700:
	Mem11[a0 + 0xFFFFFFFC<32>:word32] = (__csrrs(mstatus, 0<32>) | 0x1880<32>) & -9<i32>
	Mem14[a2:word32] = a0 + 0xFFFFFFA4<32>
	Mem16[a0 + 0xFFFFFF8C<32>:word32] = 0<32>
	word32 a0_15 = a0 + 0xFFFFFF8C<32> + 0xFFFFFFFC<32>
	word32 t0_17 = 34<i32>
l2306472A:
	branch t0_17 == 0<32> l23064738
l23064738:
	word32 a0_20 = a0_15 + 0<32>
	Mem22[a1:word32] = a0_20
	a0Out = a0_20
	return t0_17
fn23064700_exit:
l2306472E:
	a0_15 = a0_15 + 0xFFFFFFFC<32>
	Mem24[a0_15:word32] = 0<32>
	t0_17 = t0_17 + 0xFFFFFFFF<32>


word32 prvInsertBlockIntoFreeList(word32 a0, word32 a2, word32 a3, word32 a5, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pvPortMalloc
//      vPortFree
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31]
// LiveOut: a1 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
prvInsertBlockIntoFreeList_entry:
l23064838:
l23064844:
	branch a5 <u a0 l23064842
l23064842:
l2306484A:
	word32 a4_12 = Mem0[a2 + 4<i32>:word32]
	word32 a0_15 = Mem0[a3 + 4<i32>:word32]
	word32 a1_16 = a4_12 + a2
	branch a0_15 == a1_16 l23064882
l23064882:
	a3 = a3 + a2
	Mem18[a3 + 4<i32>:word32] = a4_12
	a0_15 = a4_12
l23064856:
	branch a5 == a0_15 + a3 l23064868
l23064868:
	branch a5 == Mem25[0x4200F570<32>:int32] l2306485E
l23064874:
	word32 a5_27 = Mem25[a5 + 4<i32>:word32]
	a3 = a3 + a5_27
	Mem29[a3 + 4<i32>:word32] = a0_15
	a4_12 = Mem29[a5_27:word32]
	a5 = Mem29[a5_27:word32]
	Mem32[a5:word32] = a0_15
l2306485E:
	Mem35[a5:word32] = a0_15
l23064860:
	branch a0_15 == a4_12 l23064866
l23064864:
	Mem40[a0_15:word32] = a4_12
l23064866:
	a3Out = a3
	a4Out = a4_12
	a5Out = a5
	return a1_16
prvInsertBlockIntoFreeList_exit:


word32 pvPortMalloc(word32 ra, word32 s1, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg40, word32 dwArg44, word32 dwArg8C, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      blsync_ble_start
//      Encrypt_keyData
//      cm_AllocResources
//      cm_InitConnection
//      bl_send_msg
//      bl_msg_zalloc.constprop.3
//      bl_ipc_init
//      wifi_mgmr_all_ap_scan
//      k_malloc
//      ota_tcp_cmd
//      __malloc
//      ps_cmd
//      ls_cmd
//      dns_server_init
//      psm_test_cmd
//      xQueueGenericCreate
//      xStreamBufferGenericCreate
//      xTaskCreate
//      vTaskList
//      xTimerCreate
//      bl_dma_irq_register
//      bl_dma_init
//      dev_uart_init
//      cmd_looprt_test_schedule_evt2
//      loopset_led_trigger
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      ipus_test_cmd
//      ipu_test_cmd
//      ipc_test_cmd
//      ips_test_cmd
//      inode_reserve
//      aos_loop_init
//      aos_poll_read_fd
//      aos_post_delayed_action
//      aos_task_new
//      aos_malloc
//      malloc
//      at_dump_noend
//      http_url_req
//      client_ssl_config_path
//      client_ssl_set_alpn
//      bl_cipsslcsni
//      bl_mtd_open
//      hal_hbn_init
//      mycalloc
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +008C:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
pvPortMalloc_entry:
l2306488A:
	branch a5 == 0<32> l2306496C
l2306496C:
	word32 a5_286
	user_vAssertCalled(a4, mstatus, out a5_286)
l230648A6:
	word32 a3_122
	word32 a5_287
	word32 a4_126 = vTaskSuspendAll(a4, out a5_287)
	word32 s2_30 = Mem16[0x4200F574<32>:int32]
	word32 a5_124 = s2_30 & a0
	branch a5_124 != 0<32> l230648BA
l230648B8:
	branch a0 != 0<32> l230648D6
l230648D6:
	a5_124 = a0 + 8<i32>
	a4_126 = a0 + 8<i32> & 7<i32>
	branch a4_126 != 0<32> l23064956
l23064956:
	a5_124 = (a0 + 8<i32> & 0xFFFFFFF8<32>) + 8<32>
l230648E0:
	branch a5_124 == 0<32> l230648BA
l230648E2:
	word32 s4_41 = Mem16[0x4200F578<32>:int32]
	branch s4_41 <u a5_124 l230648BA
l230648F2:
	a3 = 0x4200F580<32>
l23064908:
	word32 s0_47 = Mem16[a4_126 + 4<i32>:word32]
	branch a4_126 <u a5_124 l23064900
l23064900:
	s0_47 = Mem16[a4_126:word32]
	branch a4_126 == 0<32> l2306490E
l23064904:
	a3 = s0_47
l2306490E:
	word32 s1_54 = Mem16[a4_126:word32]
	branch a4_126 == s0_47 l230648BA
l23064914:
	Mem59[a4_126:word32] = Mem16[s1_54:word32]
	word32 s0_60 = Mem59[a4_126 + 4<i32>:word32]
	word32 a3_63 = a4_126 - a5_124
	branch a3_63 >u 0x10<32> l2306495C
l2306495C:
	word32 a0_64 = s0_60 + a5_124
	Mem65[a3_63 + 4<i32>:word32] = a0_64
	Mem66[a5_124 + 4<i32>:word32] = s0_60
	word32 a5_297
	a1 = prvInsertBlockIntoFreeList(a0_64, 0x10<32>, a3_63, a5_124, out a3_63, out a4_126, out a5_297)
	s0_60 = Mem66[a4_126 + 4<i32>:word32]
l23064928:
	word32 a5_77 = Mem76[a3_63:word32]
	word32 s4_82 = s4_41 - a4_126
	Mem86[0x4200F578<32>:word32] = s4_82
	branch s4_82 >=u a3_63 l23064942
l2306493E:
	Mem87[a5_77:word32] = s4_82
l23064942:
	word32 s2_94 = s2_30 | a4_126
	Mem97[s0_60 + 4<i32>:word32] = s2_94
	Mem98[s0_60:word32] = 0<32>
	word32 a5_115
	word32 s1_118
	word32 a4_123
	word32 s0_298
	word32 a6_301
	word32 s4_302
	word32 t3_303
	word32 a0_299
	word32 a2_300
	xTaskResumeAll(a3_63, a4_126, a5_77, mstatus, dwArg0138, dwArg0178, out s0_298, out s1_118, out a0_299, out a2_300, out a3_122, out a4_123, out a5_115, out a6_301, out s4_302, out t3_303)
	branch s1_118 != 0<32> l230648C4
l230648C4:
	s1Out = s1_118
	a0Out = s1_118
	a1Out = a1
	a2Out = dwArg48
	a3Out = a3_122
	a4Out = a4_123
	a5Out = a5_115
	a6Out = dwArg28
	s2Out = s2_94
	s3Out = 0x4200F578<32>
	s4Out = dwArg04
	s8Out = s4
	return s1
pvPortMalloc_exit:
l23064954:
l230648BA:
	word32 a0_290
	word32 a5_293
	word32 t3_296
	word32 a6_294
	word32 s4_295
	word32 a2_291
	word32 a4_292
	word32 s0_288
	word32 s1_289
	xTaskResumeAll(a3, a4_126, a5_124, mstatus, dwArg0138, dwArg0178, out s0_288, out s1_289, out a0_290, out a2_291, out a3_122, out a4_292, out a5_293, out a6_294, out s4_295, out t3_296)
l230648BE:
	vApplicationMallocFailedHook(ra, a3_122, dwLoc08, dwArg40, dwArg44, s1, dwArg8C)


word32 vPortFree(word32 a0, word32 a2, word32 a5, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & s4Out, ptr32 & t3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      app_delayed_action_bleadvstop
//      GeneratePWKMsg3
//      GenerateApEapolMsg
//      Encrypt_keyData
//      cm_InitConnection
//      cm_DeleteConnection
//      bl_send_msg
//      wifi_mgmr_all_ap_scan
//      cmd_complete.isra.1
//      cmd_mgr_llind
//      cmd_mgr_queue
//      k_free
//      ota_tcp_cmd
//      __free
//      ps_cmd
//      ls_cmd
//      psm_test_cmd
//      vEventGroupDelete
//      vQueueDelete
//      vStreamBufferDelete
//      prvDeleteTCB
//      xTaskCreate
//      vTaskList
//      iperf_server_udp
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      aos_register_driver
//      aos_register_fs
//      aos_poll_read_fd
//      aos_loop_run
//      dfl_entry
//      aos_task_new
//      aos_free
//      at_dump_noend
//      http_url_req
//      scan
//      client_ssl_config_path
//      client_ssl_set_alpn
//      tcp_send_data
//      bl_cipsslcconf_path
//      bl_cipsslcsni
//      bl_cipsslcalpn
//      bl_mtd_close
//      bloop_run
//      rsa_free_wrap
//      eckey_free_wrap
//      mbedtls_rsa_pkcs1_sign
//      ssl_flight_free
//      mbedtls_ssl_handshake_free
//      ssl_handshake_wrapup_free_hs_transform
//      mbedtls_ssl_session_free
//      mbedtls_ssl_handshake_wrapup
//      mbedtls_ssl_setup
//      mbedtls_ssl_free
//      mbedtls_ssl_config_free
//      mbedtls_ssl_write_record
//      mbedtls_ssl_prepare_handshake_record
//      mbedtls_ssl_parse_certificate
//      mbedtls_x509_crt_free
//      mbedtls_x509_crt_parse_der
//      mbedtls_mpi_free
//      mbedtls_mpi_grow
//      mbedtls_mpi_shrink
//      gcm_ctx_free
//      aes_ctx_free
//      ecp_normalize_jac_many
//      mbedtls_ecp_group_free
//      mbedtls_ecp_mul
//      mbedtls_md_free
//      md5_ctx_free
//      sha1_ctx_free
//      sha224_ctx_free
//      mbedtls_pem_read_buffer
//      mbedtls_pem_free
// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
vPortFree_entry:
l23064972:
	branch a0 == 0<32> l23064A02
l23064A02:
	s0Out = s0
	s1Out = s1
	a0Out = a0
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a6Out = a6
	s4Out = s4
	t3Out = t3
	return tp
l23064974:
	word32 s1_124
	word32 a3_111
	word32 a4_114 = Mem11[a0 + -4<i32>:int32]
	branch (a4_114 & a5) == 0<32> l230649B8
l230649B8:
	word32 a5_147
	a2 = user_vAssertCalled(a4_114, mstatus, out a5_147)
	a5 = Mem11[a0 + -8<i32>:int32]
	branch a5 != 0<32> l23064998
l230649C2:
	a4_114 = Mem11[a0 + -4<i32>:int32]
	s1_124 = Mem11[a5:word32]
	a3_111 = a4_114 & a5
	branch a3_111 == 0<32> l230649AE
l23064992:
	a3_111 = Mem11[a0 + -8<i32>:int32]
	branch a3_111 == 0<32> l230649CE
l23064998:
	a2 = user_vAssertCalled(a4_114, mstatus, out a5)
	a4_114 = Mem11[a0 + -4<i32>:int32]
	s1_124 = Mem11[a5:word32]
	a3_111 = a4_114 & a5
	branch a3_111 == 0<32> l230649AE
l230649A8:
	a3_111 = Mem11[a0 + -8<i32>:int32]
	branch a3_111 == 0<32> l230649CE
l230649CE:
	Mem40[a0 + 4092<i32>:word32] = ~a5 & a4_114
	word32 a5_148
	vTaskSuspendAll(a4_114, out a5_148)
	word32 a5_45 = Mem40[a3_111:word32]
	Mem49[Mem40[a0 + -4<i32>:int32] + a3_111:word32] = a5_45
	word32 a3_55
	word32 a4_56
	word32 a5_57
	word32 a1_53 = prvInsertBlockIntoFreeList(a0 + -8<i32>, a2, a3_111, a5_45, out a3_55, out a4_56, out a5_57)
l230649FE_thunk_xTaskResumeAll:
	word32 a0_65
	word32 a2_66
	word32 a5_67
	word32 a6_68
	word32 s0_69
	word32 s1_70
	word32 s4_71
	word32 t3_72
	word32 a3_74
	word32 a4_75
	word32 tp_73 = xTaskResumeAll(a3_55, a4_56, a5_57, mstatus, dwArg0158, dwArg0198, out s0_69, out s1_70, out a0_65, out a2_66, out a3_74, out a4_75, out a5_67, out a6_68, out s4_71, out t3_72)
	s0Out = s0_69
	s1Out = s1_70
	a0Out = a0_65
	a1Out = a1_53
	a2Out = a2_66
	a3Out = a3_74
	a4Out = a4_75
	a5Out = a5_67
	a6Out = a6_68
	s4Out = s4_71
	t3Out = t3_72
	return tp_73
l230649AE:
	s0Out = s0
	s1Out = s1_124
	a0Out = a0
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3_111
	a4Out = a4_114
	a5Out = a5
	a6Out = a6
	s4Out = s4
	t3Out = t3
	return dwArg14
vPortFree_exit:


void xPortGetFreeHeapSize()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_free_mem
//      vApplicationMallocFailedHook
//      version_cmd
// MayUse: 
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
xPortGetFreeHeapSize_entry:
l23064A04:
	return
xPortGetFreeHeapSize_exit:


void vPortDefineHeapRegions(word32 s0, word32 a0, word32 a4, word32 mstatus, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: sp
vPortDefineHeapRegions_entry:
l23064A0E:
	word32 a5_159 = Mem5[0x4200F570<32>:int32]
	word32 s3_106 = a0
	branch a5_159 == 0<32> l23064AF8
l23064AF8:
	branch s0 != 0<32> l23064A40
l23064A32:
	word32 a5_293
	user_vAssertCalled(a4, mstatus, out a5_293)
	s0 = Mem24[a0 + 4<i32>:int32]
	branch s0 == 0<32> l23064AFC
l23064AFC:
	Mem34[0x4200F57C<32>:word32] = 0<32>
	Mem36[0x4200F578<32>:word32] = 0<32>
l23064A3C:
	a5_159 = Mem24[0x4200F570<32>:int32]
l23064A40:
	word32 s4_119 = 0<32>
	word32 s5_112 = 0<32>
l23064A4C:
	word32 s1_44 = Mem43[s3_106:int32]
	word32 a4_45 = s1_44 & 7<i32>
	word32 s2_46 = s1_44
	branch (s1_44 & 7<i32>) == 0<32> l23064A66
l23064A58:
	a4_45 = s1_44 + 7<i32> & 0xFFFFFFF8<32>
	s0 = s0 + s1_44 - a4_45
	s1_44 = a4_45
	s2_46 = a4_45
l23064A66:
	branch s4_119 != 0<32> l23064ADC
l23064ADC:
	branch a5_159 == 0<32> l23064AEE
l23064AEE:
	word32 a5_294
	user_vAssertCalled(a4_45, mstatus, out a5_294)
	a5_159 = Mem43[0x4200F570<32>:int32]
l23064ADE:
	a4 = a5_159
	branch a5_159 <u s2_46 l23064A74
l23064AE4:
	word32 a5_295
	user_vAssertCalled(a5_159, mstatus, out a5_295)
	a4 = Mem43[0x4200F570<32>:int32]
l23064A6A:
	Mem80[0x4200F580<32>:word32] = s1_44
	Mem81[0x4200F584<32>:word32] = 0<32>
	a4 = a5_159
l23064A74:
	a5_159 = s0 + s2_46 + 0xFFFFFFF8<32> & -8<i32>
	Mem90[a5_159 + 4<i32>:word32] = 0<32>
	Mem91[a5_159:word32] = 0<32>
	Mem94[0x4200F570<32>:word32] = a5_159
	word32 s2_101 = a5_159 - s2_46
	Mem97[s1_44 + 4<i32>:word32] = s2_101
	Mem98[a5_159:word32] = s1_44
	branch a4 == 0<32> l23064A9A
l23064A94:
	Mem100[s1_44:word32] = a4
	s2_101 = Mem100[s1_44 + 4<i32>:int32]
l23064A9A:
	s3_106 = s3_106 + 8<32>
	s0 = Mem107[s3_106 + 4<i32>:int32]
	s5_112 = s5_112 + s2_101
	s4_119 = s4_119 + 1<32>
	branch s0 != 0<32> l23064A4C
l23064AA6:
	Mem121[0x4200F57C<32>:word32] = s5_112
	Mem123[0x4200F578<32>:word32] = s5_112
	branch s5_112 == 0<32> l23064B0C
l23064B0C:
	word32 a5_296
	user_vAssertCalled(a4, mstatus, out a5_296)
l23064ABA:
	Mem148[0x4200F574<32>:word32] = 0x80000000<32>
	0<32> = dwArg0128
	return
vPortDefineHeapRegions_exit:


void uart_generic_notify_handler(word32 ra, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      UART0_IRQHandler
//      UART1_IRQHandler
// MayUse:  a0:[0..31] ra:[0..31]
// LiveOut:
// Trashed: a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a0 ra sp
uart_generic_notify_handler_entry:
l23064B12:
	word32 s3_106 = Mem10[(a0 << 2<u32>) + 0x230CBAC8<32>:int32]
	word32 s1_110 = Mem19[s3_106 + 32<i32>:int32]
	word32 s0_109 = Mem19[s3_106 + 36<i32>:int32]
	word32 s2_107 = a0
	branch (s1_110 & 1<i32>) == 0<32> l23064B4C
l23064B40:
	branch (s0_109 & 1<i32>) != 0<32> l23064B4C
l23064B46:
	Mem26[s3_106 + 40<i32>:word32] = 1<32>
l23064B4C:
	branch (s1_110 & 2<i32>) == 0<32> l23064B74
l23064B52:
	branch (s0_109 & 2<i32>) != 0<32> l23064B74
l23064B58:
	Mem35[s3_106 + 40<i32>:word32] = 2<32>
	branch false l23064B74
l23064B70:
	call 0x420188D4<32> (retsize: 0;)
		uses: a0:a0,a5:Mem35[a0 + 4<i32>:word32],ra:ra,s0:s0_21,s1:s1_20,s2:a0,s3:s3_11
		defs: a0:a0_45,ra:ra_49,s0:s0_50,s1:s1_51,s2:s2_48,s3:s3_47
l23064B74:
	branch (s1_110 & 4<i32>) == 0<32> l23064B96
l23064B7A:
	branch (s0_109 & 4<i32>) != 0<32> l23064B96
l23064B80:
	branch false l23064B96
l23064B92:
	call 0x420188D4<32> (retsize: 0;)
		uses: a0:a0_68,a5:Mem65[a0_68 + 12<i32>:word32],ra:ra_71,s0:s0_59,s1:s1_57,s2:s2_63,s3:s3_70
		defs: a0:a0_75,ra:ra_79,s0:s0_80,s1:s1_81,s2:s2_78,s3:s3_77
l23064B96:
	branch (s1_110 & 8<i32>) == 0<32> l23064BB8
l23064B9C:
	branch (s0_109 & 8<i32>) != 0<32> l23064BB8
l23064BA2:
	branch false l23064BB8
l23064BB4:
	call 0x420188D4<32> (retsize: 0;)
		uses: a0:a0_97,a5:Mem65[a0_97 + 4<i32>:word32],ra:ra_100,s0:s0_89,s1:s1_87,s2:s2_93,s3:s3_99
		defs: ra:ra_108,s0:s0_109,s1:s1_110,s2:s2_107,s3:s3_106
l23064BB8:
	branch (s1_110 & 16<i32>) == 0<32> l23064BE2
l23064BBE:
	branch (s0_109 & 16<i32>) != 0<32> l23064BE2
l23064BC4:
	Mem122[s3_106 + 40<i32>:word32] = 0x10<32>
	word32 s2_126 = s2_107 << 4<i32>
	word32 a5_128 = Mem122[s2_126 + 0x420188D4<32>:int32]
	branch a5_128 == 0<32> l23064BE2
l23064BDC:
	call a5_128 (retsize: 0;)
		uses: a0:Mem122[s2_126 + 0x420188D8<32>:int32],ra:ra_130,s0:s0_118,s1:s1_116,s2:s2_126 + 0x420188D4<32>,s3:s3_121
		defs: s0:s0_139,s1:s1_140,s3:s3_136
l23064BE2:
	branch (s1_110 & 32<i32>) == 0<32> l23064BF6
l23064BE8:
	branch (s0_109 & 32<i32>) != 0<32> l23064BF6
l23064BEE:
	Mem152[s3_106 + 40<i32>:word32] = 32<i32>
l23064BF6:
	return
uart_generic_notify_handler_exit:


void UART0_IRQHandler(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
UART0_IRQHandler_entry:
l23064C04:
l23064C06_thunk_uart_generic_notify_handler:
	uart_generic_notify_handler(ra, 0<32>)
	return
UART0_IRQHandler_exit:


void UART1_IRQHandler(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
UART1_IRQHandler_entry:
l23064C0A:
l23064C0C_thunk_uart_generic_notify_handler:
	uart_generic_notify_handler(ra, 1<32>)
	return
UART1_IRQHandler_exit:


word32 bl_uart_init(word32 a0, word32 a1, word32 a2, word32 a5, ptr32 & s1Out, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
//      vfs_uart_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a5:[0..31]
// LiveOut: a1 ra s1 s2 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_uart_init_entry:
l23064C10:
	word32 a7_248
	word32 a5_246
	word32 a6_247
	word32 a3_244
	word32 a4_245
	word32 a1_31
	word32 a2_32
	memcpy(fp + -48<i32>, 0x230C0F04<32>, 0x10<32>, out a1_31, out a2_32, out a3_244, out a4_245, out a5_246, out a6_247, out a7_248)
	word32 a5_46 = CONVERT(Mem45[0x4200F588<32>:byte], byte, word32)
	branch a5_46 != 0<32> l23064C5E
l23064C4E:
	Mem57[GLB_Set_UART_CLK(1<32>, 1<32>, 3<32>, a5_46, out a2_32):byte] = 1<8>
	a1_31 = 1<32>
l23064C5E:
	word32 s1_124
	word32 a1_125
	word32 sp_74
	word32 s3_75
	word32 a1_76
	word32 s0_77
	word32 s2_78
	word32 a2_80
	word32 s1_81
	word32 s4_82
	word32 a5_84
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:fp + -56<i32>,a1:a1_70,a2:a2_72,a5:257<i32>,ra:0x4200CC78<p32>,s0:a0,s1:2<32>,s2:a2,s3:a1,s4:a5,Stack +0008:SLICE(a2, byte, 0),Stack +0009:7<8>,Stack +000A:2<16>,Stack +000C:0x101<16>
		defs: a1:a1_76,a2:a2_80,a5:a5_84,s0:s0_77,s1:s1_81,s2:s2_78,s3:s3_75,s4:s4_82,sp:sp_74
	Mem98[sp_74 + 8<i32>:byte] = SLICE(s3_75, byte, 0)
	Mem99[sp_74 + 10<i32>:word16] = SLICE(s1_81, word16, 0)
	word32 s3_102
	word32 s0_104
	word32 s2_105
	word32 ra_110
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:sp_74 + 8<i32>,a1:a1_76,a2:a2_80,a5:a5_84,ra:0x4200CC8A<p32>,s0:s0_77,s1:s1_81,s2:s2_78,s3:s3_75,s4:s4_82
		defs: ra:ra_110,s0:s0_104,s2:s2_105,s3:s3_102
	branch s0_104 == 0<32> l23064CFA
l23064CFA:
	s1_124 = 3<32>
	a1_125 = 2<32>
l23064C94:
	s1_124 = 7<32>
	a1_125 = 6<32>
l23064C98:
	GLB_UART_Fun_Sel(s3_102 & 7<i32>, a1_125)
	UART_IntMask(8<32>, 1<32>, GLB_UART_Fun_Sel(s2_105 & 7<i32>, s1_124))
	UART_FifoConfig(fp - 60<i32>, UART_TxFreeRun(1<32>, UART_Init(s0_104, 1<32>, UART_Disable(2<32>))))
	word32 a4_249
	word32 a5_250
	word32 a1_189 = UART_Enable(s0_104, 2<32>, out a4_249, out a5_250)
	s1Out = s1_124
	a1Out = a1_189
	s2Out = s2_105
	s8Out = dwArgD4
	return ra_110
bl_uart_init_exit:


word32 bl_uart_data_send(word32 s1, word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_send
//      vprint
//      bl_putchar
//      puts
// MayUse:  a0:[0..31] a1:[0..7] s1:[0..31]
// LiveOut: a0 a4 a5 s0 s4 s8
// Trashed: a0 a2 a4 a5 s0 s4 s8 t3
// Preserved: sp
bl_uart_data_send_entry:
l23064D00:
l23064D1A:
	word32 a5_22
	branch UART_GetTxFifoCount(a0, out a5_22) == 0<32> l23064D1A
l23064D26:
	Mem25[s1 + 136<i32>:byte] = SLICE(a1, byte, 0)
	a0Out = 0<32>
	a4Out = a0 << 2<u32>
	a5Out = a5_22
	s4Out = dwArg04
	s8Out = dwLoc1C
	return a0
bl_uart_data_send_exit:


word32 bl_uart_data_recv(word32 s0, word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_recv_II
// MayUse:  a0:[0..31] s0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a2 a4 a5
// Preserved: s0 sp
bl_uart_data_recv_entry:
l23064D36:
	word32 a0_15
	word32 a5_14
	branch UART_GetRxFifoCount(a0, out a5_14) == 0<32> l23064D62
l23064D62:
	a0_15 = 0xFFFFFFFF<32>
l23064D52:
	a0_15 = CONVERT(Mem11[s0 + 140<i32>:byte], byte, word32) & 255<i32>
l23064D5A:
	a4Out = a0 << 2<u32>
	a5Out = a5_14
	return a0_15
bl_uart_data_recv_exit:


word32 bl_uart_int_rx_enable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_enable
// MayUse:  a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: s0 sp
bl_uart_int_rx_enable_entry:
l23064D66:
	return UART_IntMask(4<32>, 0<32>, UART_IntMask(1<32>, 0<32>, UART_IntMask(3<32>, 0<32>, UART_SetRxTimeoutValue(0x18<32>, a4))))
bl_uart_int_rx_enable_exit:


word32 bl_uart_int_rx_disable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
// MayUse:  a4:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: s0 sp
bl_uart_int_rx_disable_entry:
l23064D9C:
	return UART_IntMask(4<32>, 1<32>, UART_IntMask(1<32>, 1<32>, UART_IntMask(3<32>, 1<32>, a4)))
bl_uart_int_rx_disable_exit:


void bl_uart_int_tx_enable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_enable
//      hal_uart_send_trigger
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
bl_uart_int_tx_enable_entry:
l23064DCA:
	UART_IntMask(2<32>, 0<32>, a4)
	return
bl_uart_int_tx_enable_exit:


void bl_uart_int_tx_disable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
//      hal_uart_send_trigger_off
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
bl_uart_int_tx_disable_entry:
l23064DDE:
	UART_IntMask(2<32>, 1<32>, a4)
	return
bl_uart_int_tx_disable_exit:


word32 bl_uart_flush(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
//      hal_uart_send_flush
// MayUse:  a0:[0..31]
// LiveOut: a5 s1
// Trashed: a0 a2 a5 s1 tp
// Preserved: s0 sp
bl_uart_flush_entry:
l23064DF2:
l23064E00:
	word32 a5_16
	branch UART_GetTxFifoCount(a0, out a5_16) != 32<i32> l23064E00
l23064E0A:
	a5Out = a5_16
	return a0
bl_uart_flush_exit:


void bl_uart_getdefconfig(word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
bl_uart_getdefconfig_entry:
l23064E16:
	branch a1 == 0<32> l23064E1C
l23064E18:
	Mem4[a1:byte] = 0<8>
l23064E1C:
	return
bl_uart_getdefconfig_exit:


void bl_uart_setconfig(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_setbaud
//      hal_uart_setconfig
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_uart_setconfig_entry:
l23064E1E:
	word32 a2_26
	word32 a1_79
	word32 a3_80
	word32 a4_81
	word32 a5_82
	word32 a6_83
	word32 a7_84
	memcpy(fp + 0xFFFFFFE0<32>, 0x230C0F14<32>, 0x10<32>, out a1_79, out a2_26, out a3_80, out a4_81, out a5_82, out a6_83, out a7_84)
	UART_TxFreeRun(1<32>, UART_Init(a0, a2_26, UART_Disable(2<32>)))
	word32 a4_85
	word32 a5_86
	UART_Enable(a0, 2<32>, out a4_85, out a5_86)
	return
bl_uart_setconfig_exit:


void bl_uart_setbaud(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_setbaud
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_uart_setbaud_entry:
l23064E70:
l23064E72_thunk_bl_uart_setconfig:
	bl_uart_setconfig(a0)
	return
bl_uart_setbaud_exit:


void bl_uart_int_enable(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_uart_int_enable_entry:
l23064E76:
	word32 a0_50
	branch a0 == 0<32> l23064E8A
l23064E8A:
	bl_uart_int_tx_enable(bl_uart_int_rx_enable(a4))
	word32 s0_183
	word32 s1_184
	word32 a3_185
	word32 s2_186
	word32 s3_187
	bl_irq_register(ra, s1, 45<i32>, 0x23064C04<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_183, out s1_184, out a3_185, out s2_186, out s3_187)
	a0_50 = 45<i32>
l23064E7C:
	branch a0 == 1<32> l23064EB0
l23064EB0:
	bl_uart_int_tx_enable(bl_uart_int_rx_enable(1<32>))
	word32 s0_188
	word32 s1_189
	word32 a3_190
	word32 s2_191
	word32 s3_192
	bl_irq_register(ra, s1, 46<i32>, 0x23064C0A<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_188, out s1_189, out a3_190, out s2_191, out s3_192)
	a0_50 = 46<i32>
l23064EA8:
	bl_irq_enable(a0_50)
l23064E82:
l23064E84:
	return
bl_uart_int_enable_exit:


void bl_uart_int_disable(word32 ra, word32 s1, word32 a0, word32 a4, word32 s2, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg7C, word32 dwArg8C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +008C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_uart_int_disable_entry:
l23064ED0:
	word32 a0_50
	branch a0 == 0<32> l23064EE4
l23064EE4:
	bl_uart_int_tx_disable(bl_uart_int_rx_disable(a4))
	bl_irq_unregister(ra, s1, 45<i32>, 0x23064C04<32>, s2, dwLoc08, dwArg30, dwArg34, dwArg40, dwArg44, dwArg68, dwArg7C, dwArg8C)
	a0_50 = 45<i32>
l23064ED6:
	branch a0 == 1<32> l23064F08
l23064F08:
	bl_uart_int_tx_disable(bl_uart_int_rx_disable(1<32>))
	bl_irq_unregister(ra, s1, 46<i32>, 0x23064C0A<32>, s2, dwLoc08, dwArg30, dwArg34, dwArg40, dwArg44, dwArg68, dwArg7C, dwArg8C)
	a0_50 = 46<i32>
l23064F02:
	bl_irq_disable(a0_50)
l23064EDC:
l23064EDE:
	return
bl_uart_int_disable_exit:


void bl_uart_int_rx_notify_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_notify_register
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_uart_int_rx_notify_register_entry:
l23064F28:
	branch a0 >u 1<32> l23064F44
l23064F44:
	return
l23064F2E:
	word32 a0_9 = (a0 << 4<u32>) + 0x420188D4<32>
	Mem11[a1:word32] = a0_9
	Mem13[a2 + 4<i32>:word32] = a0_9
	return
bl_uart_int_rx_notify_register_exit:


void bl_uart_int_tx_notify_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_uart_notify_register
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_uart_int_tx_notify_register_entry:
l23064F48:
	branch a0 >u 1<32> l23064F64
l23064F64:
	return
l23064F4E:
	word32 a0_9 = (a0 << 4<u32>) + 0x420188D4<32>
	Mem11[a1 + 8<i32>:word32] = a0_9
	Mem13[a2 + 12<i32>:word32] = a0_9
	return
bl_uart_int_tx_notify_register_exit:


word32 bl_chip_info(word32 ra, word32 s1, word32 a0, word32 misa)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a0:[0..31] misa:[0..31] ra:[0..31] s1:[0..31]
// LiveOut: s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_chip_info_entry:
l23064F68:
	word32 a0_35
	__csrrs(misa, ra)
	word32 s0_11 = a0
	branch s1 >>u 0x1E<u32> == 2<32> l23064FA8
l23064FA8:
	word32 a7_165
	word32 a5_163
	word32 a6_164
	word32 a3_161
	word32 a4_162
	word32 a1_159
	word32 a2_160
	memcpy(a0, 0x230C11E8<32>, 4<32>, out a1_159, out a2_160, out a3_161, out a4_162, out a5_163, out a6_164, out a7_165)
	a0_35 = a0 + 4<i32>
l23064F86:
	branch s1 >>u 0x1E<u32> == 3<32> l23064FF4
l23064FF4:
	word32 a4_169
	word32 a7_172
	word32 a6_171
	word32 a2_167
	word32 a3_168
	word32 a5_170
	word32 a1_166
	memcpy(a0, 0x230C11F0<32>, 5<32>, out a1_166, out a2_167, out a3_168, out a4_169, out a5_170, out a6_171, out a7_172)
	a0_35 = a0 + 5<i32>
l23064F8C:
	word32 a1_58
	s0_11 = a0 + 4<i32>
	branch s1 >>u 0x1E<u32> != 1<32> l23065008
l23065008:
	a1_58 = 0x230C11F8<32>
l23064F98:
	a1_58 = 0x230C11E0<32>
l23064FA0:
	word32 a1_173
	word32 a2_174
	word32 a3_175
	word32 a4_176
	word32 a5_177
	word32 a6_178
	word32 a7_179
	memcpy(a0, a1_58, 4<32>, out a1_173, out a2_174, out a3_175, out a4_176, out a5_177, out a6_178, out a7_179)
	a0_35 = a0 + 4<i32>
l23064FBA:
	Mem81[a0_35:byte] = 0x2D<8>
	word32 a4_82 = a0_35 + 1<i32>
	word32 a5_83 = 0<32>
l23064FCC:
	branch (1<32> << a5_83 & s1) == 0<32> l23064FDE
l23064FD4:
	Mem93[a4_82:byte] = SLICE(a5_83 + 65<i32>, byte, 0)
	a4_82 = a4_82 + 1<32>
l23064FDE:
	a5_83 = a5_83 + 1<32>
	branch a5_83 != 0x1A<32> l23064FCC
l23064FE4:
	Mem100[a4_82:byte] = 0<8>
	return s0_11
bl_chip_info_exit:


word32 bl_chip_banner(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bl_chip_banner_entry:
l23065012:
	Mem6[0x230C0F24<32>:word32] = a0
	return 0<32>
bl_chip_banner_exit:


word32 bl_chip_memory_ram(word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      version_cmd
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +0038:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a4 a5 s1 s2 tp
// Preserved: s0 sp
bl_chip_memory_ram_entry:
l23065020:
	word32 a0_5 = Mem0[a4:word32]
	branch a4 <= 2<32> l230650B6
l230650B6:
	return 0xFFFFFFFF<32>
l23065028:
	Mem18[3<32>:word32] = a0_5
	Mem22[0x23000000<32>:word32] = a1
	Mem28[0x400000<32>:word32] = a2
	word32 a4_84
	word32 a5_85
	strcpy(a3, 0x230C1200<32>, out a4_84, out a5_85)
	Mem39[a1 + 4<i32>:word32] = 0x4200C000<32>
	Mem43[0x34004<32>:word32] = a2
	word32 a4_86
	word32 a5_87
	strcpy(a3 + 6<i32>, 0x230C1208<32>, out a4_86, out a5_87)
	Mem51[a1 + 8<i32>:word32] = 0x42040000<32>
	Mem55[0xA000008<32>:word32] = a2
	word32 a4_88
	word32 a5_89
	strcpy(a3 + 12<i32>, 0x230BE868<32>, out a4_88, out a5_89)
	0<32> = dwArg38
	return 0<32>
bl_chip_memory_ram_exit:


void bl_sys_reset_por(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_reboot
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
bl_sys_reset_por_exit:
bl_sys_reset_por_entry:
l230650BA:
	__csrrc(mstatus, 8<32>)
	call 0x4200C5A6<p32> (retsize: 0;)
		uses: mstatus:mstatus,ra:0x4200C0C2<p32>
l230650CA:


void bl_sys_reset_system(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_sys_reset
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
bl_sys_reset_system_exit:
bl_sys_reset_system_entry:
l230650CC:
	__csrrc(mstatus, 8<32>)
	call 0x4200C592<p32> (retsize: 0;)
		uses: mstatus:mstatus,ra:0x4200C0D4<p32>
l230650DC:


word32 bl_sys_isxipaddr(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_mtd_write
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
bl_sys_isxipaddr_entry:
l230650DE:
	return CONVERT(((a0 & 0xFF000000<32>) + 0xDD000000<32> & 0xDF000000<32>) <u 1<i32>, bool, word32)
bl_sys_isxipaddr_exit:


void bl_sys_em_config()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sys_init
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
bl_sys_em_config_entry:
l230650F6:
	word32 a0_11
	branch true l23065110
l23065110:
	a0_11 = 3<32>
l23065106:
	branch true l23065116
l2306510C:
	a0_11 = 0xF<32>
l23065112:
	GLB_Set_EM_Sel(a0_11, 0x2000000<32>)
l23065116:
	return
bl_sys_em_config_exit:


void bl_sys_early_init(word32 t0, word32 a5, word32 mtvec)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a5:[0..31] mtvec:[0..31] t0:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
bl_sys_early_init_entry:
l2306511E:
	HBN_Aon_Pad_IeSmt_Cfg(1<32>, a5)
	__csrrw(mtvec, t0)
	return
bl_sys_early_init_exit:


void bl_sys_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse: 
// LiveOut:
// Trashed: a0 a2 a4 a5
// Preserved: sp
bl_sys_init_entry:
l2306513C:
	bl_sys_em_config()
	return
bl_sys_init_exit:


void bl_dma_int_process(word32 ra, word32 s0, word32 s1, word32 dwArg10, word32 dwArg14, word32 dwArg38, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] s0:[0..31] s1:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 a6 ra s0 s1 s2 s3 s4 s5 s6 s7 t3 tp
// Preserved: s8 sp
bl_dma_int_process_entry:
l2306514C:
	word32 s7_110 = Mem23[Mem23[s0 + 4<i32>:word32] + 12<i32>:int32]
	bl_irq_ctx_get(ra, 0x1F<32>, fp + -52<i32>, dwLoc38, dwArg10, dwArg14, dwArg38, ra)
	word32 s2_103 = 0<32>
	word32 s8_106 = 1<32>
	word32 s3_104 = 0x4000C000<32>
	word32 s6_105 = 4<32>
l2306517C:
	word32 a5_36 = s8_106 << s2_103
	word32 s5_109 = a5_36 & s0
	word32 s4_102 = a5_36 & s7_110
	branch s5_109 != 0<32> l230651C6
l230651C6:
	s0 = Mem42[s3_104 + 8<i32>:int32] | a5_36
	Mem45[s3_104 + 8<i32>:word32] = s0
	branch s4_102 == 0<32> l2306519A
l230651D4:
l2306518C:
	branch s4_102 == 0<32> l230651A8
l23065190:
	s0 = Mem47[s3_104 + 16<i32>:int32] | a5_36
	Mem51[s3_104 + 16<i32>:word32] = s0
l2306519A:
	word32 a5_123 = Mem55[s1 + 4<i32>:word32]
l230651A0:
	a5_123 = Mem55[a5_123:word32]
	branch s1 != a5_123 l230651D6
l230651D6:
	word32 s1_101 = Mem55[a5_123 + 8<i32>:word32]
	branch a5_123 != s2_103 l230651F0
l230651DC:
	word32 s1_71 = Mem55[a5_123 + 12<i32>:word32]
	branch a5_123 == 0<32> l230651E6
l230651E0:
	branch s5_109 == 0<32> l230651E6
l230651E4:
	call a5_123 (retsize: 0;)
		uses: ra:ra_76,s0:s0_77,s1:s1_71,s2:s2_70,s3:s3_73,s4:s4_78,s5:s5_72,s6:s6_74,s7:s7_79,s8:s8_75,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0038:dwArg38,Stack +FFFFFFC8:dwLoc38
		defs: a5:a5_91,ra:ra_85,s0:s0_86,s2:s2_81,s3:s3_82,s4:s4_88,s5:s5_89,s6:s6_83,s7:s7_90,s8:s8_84
l230651E6:
	s1_101 = Mem55[a5_123 + 16<i32>:word32]
	branch a5_123 == 0<32> l230651F0
l230651EA:
	branch s4_102 == 0<32> l230651F0
l230651EE:
	call a5_123 (retsize: 0;)
		uses: ra:ra_107,s0:s0_108,s1:s1_101,s2:s2_103,s3:s3_104,s4:s4_102,s5:s5_109,s6:s6_105,s7:s7_110,s8:s8_106,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0038:dwArg38,Stack +FFFFFFC8:dwLoc38
		defs: a5:a5_123,ra:ra_117,s0:s0_118,s1:s1_119,s2:s2_113,s3:s3_114,s4:s4_120,s5:s5_121,s6:s6_115,s7:s7_122,s8:s8_116
l230651F0:
	s1 = Mem55[s1_101 + 4<i32>:word32]
l230651A8:
	s2_103 = s2_103 + 1<32>
	branch s2_103 != s6_105 l2306517C
l230651AE:
	0<32> = dwArg0198
	return
bl_dma_int_process_exit:


word32 bl_dma_int_clear(word32 a0, word32 a4, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_IRQHandler
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
bl_dma_int_clear_entry:
l230651F4:
	word32 a0_8 = 1<32> << a0
	word32 a5_12 = 1<32>
	branch (a4 & a0_8 & 255<i32>) == 0<32> l2306520E
l23065208:
	Mem13[(a0_8 | 1<32>) + 8<i32>:word32] = Mem0[9<32>:word32]
	a5_12 = a0_8 | 1<32>
l2306520E:
	word32 a5_18 = a5_12 & a0_8
	word32 a4_16 = Mem15[a5_12 + 12<i32>:word32]
	branch (a5_18 & 255<i32>) == 0<32> l23065222
l2306521C:
	a4_16 = Mem15[(a5_18 & 255<i32>) + 16<i32>:word32]
	Mem22[(a0_8 | a5_18 & 255<i32>) + 16<i32>:word32] = a4_16
l23065222:
	a5Out = a5_18 & 255<i32>
	return a4_16
bl_dma_int_clear_exit:


void bl_dma_IRQHandler(word32 ra, word32 a4, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 t1
// Preserved: s0 sp
bl_dma_IRQHandler_entry:
l23065226:
	word32 a5_14
	word32 a4_13 = bl_dma_int_clear(0<32>, a4, out a5_14)
	word32 a5_17
	branch utils_list_pop_front(a4_13, a5_14, out a5_17) != 0<32> l23065292
l23065292:
	branch a5_17 == 0<32> l2306529A
l23065296:
	call a5_17 (retsize: 0;)
		uses: a4:a4_13,a5:a5_17
l2306529A:
	branch Mem8[0x4200F58C<32>:int32] == 0<32> l230652B4
l230652B4:
	return
l230652A0:
	DMA_LLI_Update(0<32>)
l230652B0_thunk_DMA_Channel_Enable:
	DMA_Channel_Enable()
	return
bl_dma_IRQHandler_exit:
l23065240:
	branch CONVERT(Mem8[0x420266B4<32>:byte], byte, word32) >u 2<32> l2306528A
l2306524E:
	branch CONVERT(Mem8[0x420266B5<32>:byte], byte, word32) >u 2<32> l2306528A
l2306525A:
	branch Mem8[0x4200F560<32>:int32] == 0<32> l2306528C
l2306528C:
	word32 a5_118
	xTaskGetTickCount(out a5_118)
l23065264:
	word32 a5_119
	xTaskGetTickCountFromISR(out a5_119)
l23065268:
	word32 a1_122
	word32 s1_120
	word32 a0_121
	word32 a2_123
	word32 a3_124
	word32 a4_125
	word32 a5_126
	word32 s2_127
	word32 s3_128
	word32 s4_129
	word32 s5_130
	word32 s6_131
	word32 s7_132
	word32 s8_133
	word32 s9_134
	word32 s10_135
	word32 s11_136
	bl_printk(ra, 0x230C125C<32>, 0x230C120C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_120, out a0_121, out a1_122, out a2_123, out a3_124, out a4_125, out a5_126, out s2_127, out s3_128, out s4_129, out s5_130, out s6_131, out s7_132, out s8_133, out s9_134, out s10_135, out s11_136)
l2306528A:


word32 bl_dma_irq_register(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s3, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg6C, word32 dwArg8C, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & s0Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: ra s0 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_dma_irq_register_entry:
l230652BC:
	branch a0 >u 4<32> l230652D4
l230652D0:
	branch a1 != 0<32> l23065336
l23065336:
	word32 a4_27 = bl_irq_ctx_get(ra, 0x1F<32>, fp + -36<i32>, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C)
	word32 a5_31 = Mem15[s0 + 4<i32>:word32]
l23065348:
	branch a5_31 != s0 l230653BE
l230653BE:
	word32 s0_36 = Mem15[a4_27 + 8<i32>:word32]
	branch a0 != a4_27 l23065418
l23065418:
	s0 = Mem15[s0_36 + 4<i32>:word32]
l230653C4:
	branch CONVERT(Mem15[0x420266B4<32>:byte], byte, word32) >u 3<32> l2306531E
l230653D2:
	branch CONVERT(Mem15[0x420266B5<32>:byte], byte, word32) >u 3<32> l2306531E
l230653DE:
	branch Mem15[0x4200F560<32>:int32] == 0<32> l23065412
l23065412:
	word32 a5_441
	xTaskGetTickCount(out a5_441)
l230653E8:
	word32 a5_442
	xTaskGetTickCountFromISR(out a5_442)
l230653EC:
	word32 a2_446
	word32 a4_448
	word32 a3_447
	word32 s2_450
	word32 a5_449
	word32 s1_443
	word32 a1_445
	word32 a0_444
	word32 s3_451
	word32 s4_452
	word32 s5_453
	word32 s7_454
	word32 s8_455
	word32 s9_456
	word32 s10_457
	word32 s11_458
	ra = bl_printk(ra, 0x230C131C<32>, 0x230C120C<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_443, out a0_444, out a1_445, out a2_446, out a3_447, out a4_448, out a5_449, out s2_450, out s3_451, out s4_452, out s5_453, out s6, out s7_454, out s8_455, out s9_456, out s10_457, out s11_458)
l2306534C:
	word32 a0_92
	word32 a1_433
	word32 a2_434
	word32 a3_435
	word32 a5_436
	word32 a6_437
	word32 s8_438
	word32 s1_100
	word32 s2_101
	word32 s4_103
	word32 s3_102
	word32 a4_109
	pvPortMalloc(ra, a0, 0x18<32>, a3, a4_27, a5_31, mstatus, dwArg10, dwArg14, s3, dwArg0108, dwArg0148, out s1_100, out a0_92, out a1_433, out a2_434, out a3_435, out a4_109, out a5_436, out a6_437, out s2_101, out s3_102, out s4_103, out s8_438)
	branch a0_92 != 0<32> l230653A0
l23065356:
	a4_109 = CONVERT(Mem15[0x420266B4<32>:byte], byte, word32)
	branch a4_109 >u 4<32> l230653A0
l23065364:
	a4_109 = CONVERT(Mem15[0x420266B5<32>:byte], byte, word32)
	branch a4_109 >u 4<32> l230653A0
l23065370:
	branch Mem15[0x4200F560<32>:int32] == 0<32> l2306541C
l2306541C:
	word32 a5_439
	xTaskGetTickCount(out a5_439)
l2306537A:
	word32 a5_440
	xTaskGetTickCountFromISR(out a5_440)
l2306537E:
	word32 a0_459
	word32 a1_460
	word32 a2_461
	word32 a3_462
	word32 a5_463
	word32 s5_464
	word32 s7_465
	word32 s8_466
	word32 s9_467
	word32 s10_468
	word32 s11_469
	ra = bl_printk(ra, 0x230C1350<32>, 0x230C120C<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_100, out a0_459, out a1_460, out a2_461, out a3_462, out a4_109, out a5_463, out s2_101, out s3_102, out s4_103, out s5_464, out s6, out s7_465, out s8_466, out s9_467, out s10_468, out s11_469)
l230653A0:
	Mem159[s1_100 + 8<i32>:word32] = a0_92
	Mem161[a0_92 + 12<i32>:word32] = s2_101
	Mem163[a0_92 + 16<i32>:word32] = s4_103
	Mem165[a0_92 + 20<i32>:word32] = s3_102
	word32 a5_169 = Mem165[a4_109 + 4<i32>:word32]
	Mem170[a5_169:word32] = a0_92
	Mem171[a4_109 + 4<i32>:word32] = a0_92
	Mem172[a0_92 + 4<i32>:word32] = a5_169
	Mem173[a0_92:word32] = a4_109
l230652D4:
	branch CONVERT(Mem15[0x420266B4<32>:byte], byte, word32) >u 4<32> l2306531E
l230652E2:
	branch CONVERT(Mem15[0x420266B5<32>:byte], byte, word32) >u 4<32> l2306531E
l230652EE:
	branch Mem15[0x4200F560<32>:int32] == 0<32> l23065330
l23065330:
	word32 a5_415
	xTaskGetTickCount(out a5_415)
l230652F8:
	word32 a5_416
	xTaskGetTickCountFromISR(out a5_416)
l230652FC:
	word32 s1_417
	word32 a0_418
	word32 a1_419
	word32 a2_420
	word32 a3_421
	word32 a4_422
	word32 a5_423
	word32 s2_424
	word32 s3_425
	word32 s4_426
	word32 s5_427
	word32 s7_428
	word32 s8_429
	word32 s9_430
	word32 s10_431
	word32 s11_432
	ra = bl_printk(ra, 0x230C12F4<32>, 0x230C120C<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_417, out a0_418, out a1_419, out a2_420, out a3_421, out a4_422, out a5_423, out s2_424, out s3_425, out s4_426, out s5_427, out s6, out s7_428, out s8_429, out s9_430, out s10_431, out s11_432)
l2306531E:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s6Out = s6
	return ra
bl_dma_irq_register_exit:


word32 bl_dma_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg30, word32 dwArg34, word32 dwArg48, word32 dwArg4C, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg7C, word32 dwArg9C, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: ra s0 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_dma_init_entry:
l23065422:
	word32 a0_161
	utils_list_init(0x4200F58C<32>)
	word32 a0_18
	word32 a3_21
	word32 a4_22
	word32 a5_23
	word32 s1_26
	word32 a1_318
	word32 a2_319
	word32 s2_321
	word32 a6_320
	word32 s3_322
	word32 s4_323
	word32 s8_324
	word32 s0_118 = pvPortMalloc(ra, s1, 4<32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_26, out a0_18, out a1_318, out a2_319, out a3_21, out a4_22, out a5_23, out a6_320, out s2_321, out s3_322, out s4_323, out s8_324)
	branch a0_18 != 0<32> l2306549C
l2306549C:
	word32 a0_35
	word32 a5_40
	word32 s1_43
	word32 s2_44
	word32 a1_325
	word32 a2_326
	word32 a3_327
	word32 a4_328
	word32 a6_329
	word32 s3_330
	word32 s4_331
	word32 s8_332
	s0_118 = pvPortMalloc(ra, s1_26, 8<32>, a3_21, a4_22, a5_23, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_43, out a0_35, out a1_325, out a2_326, out a3_327, out a4_328, out a5_40, out a6_329, out s2_44, out s3_330, out s4_331, out s8_332)
	Mem50[a0_35:word32] = s0_118
	branch a0_35 != 0<32> l230654F6
l230654F6:
	Mem51[a0_35 + 4<i32>:word32] = a0_35
	Mem52[a0_35:word32] = a0_35
	DMA_Enable(a5_40)
	DMA_IntMask(2<32>, 1<32>)
	DMA_IntMask(0<32>, 0<32>)
	DMA_IntMask(1<32>, 0<32>)
	DMA_LLI_Init(fp + 0xFFFFFFEC<32>)
	word32 s0_88
	word32 s3_91
	word32 s1_335
	word32 a3_336
	word32 s2_337
	ra = bl_dma_irq_register(bl_irq_register_with_ctx(ra, s1_43, 0x1F<32>, 0x2306514C<32>, s0_118, s2_44, dwLoc18, dwArg08, dwArg20, dwArg24, dwArg30, dwArg34, dwArg50, dwArg54, dwArg58, ra, dwArg78, dwArg7C, dwArg9C, out s0_88, out s1_335, out a3_336, out s2_337, out s3_91), s0_88, 0<32>, 0x23065226<32>, 0<32>, s3_91, mstatus, dwLoc10, dwLoc0C, dwArg00, dwArg04, dwArg20, dwArg24, dwArg28, dwArg48, dwArg4C, ra, dwArgE8, dwArg0108, dwArg0128, out s0_118, out s6)
	bl_irq_enable(0x1F<32>)
l230654A8:
	branch CONVERT(Mem50[0x420266B4<32>:byte], byte, word32) >u 4<32> l2306548E
l230654B6:
	branch CONVERT(Mem50[0x420266B5<32>:byte], byte, word32) >u 4<32> l2306548E
l230654C2:
	branch Mem50[0x4200F560<32>:int32] == 0<32> l230654F0
l230654F0:
	word32 a5_338
	xTaskGetTickCount(out a5_338)
l230654CC:
	word32 a5_339
	xTaskGetTickCountFromISR(out a5_339)
l230654D0:
	a0_161 = 0x230C12C0<32>
l23065444:
	branch CONVERT(Mem11[0x420266B4<32>:byte], byte, word32) >u 4<32> l2306548E
l23065452:
	branch CONVERT(Mem11[0x420266B5<32>:byte], byte, word32) >u 4<32> l2306548E
l2306545E:
	branch Mem11[0x4200F560<32>:int32] == 0<32> l23065496
l23065496:
	word32 a5_333
	xTaskGetTickCount(out a5_333)
l23065468:
	word32 a5_334
	xTaskGetTickCountFromISR(out a5_334)
l2306546C:
	a0_161 = 0x230C1294<32>
l2306548A:
	word32 s1_340
	word32 a0_341
	word32 a1_342
	word32 a2_343
	word32 a3_344
	word32 a4_345
	word32 a5_346
	word32 s2_347
	word32 s3_348
	word32 s4_349
	word32 s5_350
	word32 s7_351
	word32 s8_352
	word32 s9_353
	word32 s10_354
	word32 s11_355
	ra = bl_printk(ra, a0_161, 0x230C120C<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_340, out a0_341, out a1_342, out a2_343, out a3_344, out a4_345, out a5_346, out s2_347, out s3_348, out s4_349, out s5_350, out s6, out s7_351, out s8_352, out s9_353, out s10_354, out s11_355)
l2306548E:
	s0Out = s0_118
	s6Out = s6
	return ra
bl_dma_init_exit:


void _irq_num_check.part.0(word32 ra, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_irq_ctx_get
//      bl_irq_register
//      bl_irq_unregister
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
_irq_num_check.part.0_exit:
_irq_num_check.part.0_entry:
l2306554A:
	branch CONVERT(Mem0[0x420266B4<32>:byte], byte, word32) >u 4<32> l230655A6
l23065558:
	branch CONVERT(Mem0[0x420266B6<32>:byte], byte, word32) >u 4<32> l230655A6
l230655A6:
l23065564:
	branch Mem0[0x4200F560<32>:int32] == 0<32> l230655A0
l230655A0:
	word32 a5_72
	xTaskGetTickCount(out a5_72)
l23065576:
	word32 a5_73
	xTaskGetTickCountFromISR(out a5_73)
l2306557A:
	word32 a2_77
	word32 a1_76
	word32 a0_75
	word32 s1_74
	word32 a3_78
	word32 a4_79
	word32 a5_80
	word32 s2_81
	word32 s3_82
	word32 s4_83
	word32 s5_84
	word32 s6_85
	word32 s7_86
	word32 s8_87
	word32 s9_88
	word32 s10_89
	word32 s11_90
	bl_printk(ra, 0x230C13E4<32>, 0x230C13D8<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_74, out a0_75, out a1_76, out a2_77, out a3_78, out a4_79, out a5_80, out s2_81, out s3_82, out s4_83, out s5_84, out s6_85, out s7_86, out s8_87, out s9_88, out s10_89, out s11_90)
l2306559E:


void bl_irq_enable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_init
//      bl_uart_int_enable
//      bl_dma_init
//      bl_sec_init
//      bl_wifi_enable_irq
//      bl_timer_tick_enable
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_irq_enable_entry:
l230655A8:
	Mem8[a0 + 0x2800400<32>:byte] = 1<8>
	return
bl_irq_enable_exit:


word32 bl_irq_disable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_deinit
//      bl_uart_int_disable
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
bl_irq_disable_entry:
l230655BA:
	Mem7[a0 + 0x2800400<32>:byte] = 0<8>
	return 0x2800400<32>
bl_irq_disable_exit:


void bl_irq_pending_clear(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
bl_irq_pending_clear_entry:
l230655CA:
	Mem6[a0 + 0x2800000<32>:byte] = 0<8>
	return
bl_irq_pending_clear_exit:


word32 bl_irq_register_with_ctx(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgBC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_init
//      bl_irq_register
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00BC:[0..31]
// LiveOut: a3 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_register_with_ctx_entry:
l230655D6:
	branch a0 <=u 79<i32> l230655F0
l230655F0:
	word32 s1_20 = a0 << 2<u32>
	word32 a5_22 = Mem15[(a0 << 2<u32>) + 0x420188F4<32>:word32]
	word32 s4_25 = a1
	word32 s3_27 = a2
	word32 s2_28 = 0x420188F4<32>
	branch a5_22 == 0<32> l23065664
l2306560C:
	branch a5_22 == a1 l230656D6
l23065610:
	branch CONVERT(Mem15[0x420266B4<32>:byte], byte, word32) >u 3<32> l23065664
l2306561E:
	branch CONVERT(Mem15[0x420266B6<32>:byte], byte, word32) >u 3<32> l230656D4
l230656D4:
	branch a1 == 0<32> l23065676
l2306562A:
	branch Mem15[0x4200F560<32>:int32] == 0<32> l230656C2
l230656C2:
	word32 a5_381
	xTaskGetTickCount(out a5_381)
l23065634:
	word32 a5_353
	xTaskGetTickCountFromISR(out a5_353)
l23065638:
	word32 a0_354
	word32 a1_355
	word32 a2_356
	word32 a4_357
	word32 a5_358
	word32 s5_359
	word32 s6_360
	word32 s7_361
	word32 s8_362
	word32 s9_363
	word32 s10_364
	word32 s11_365
	ra = bl_printk(ra, 0x230C1440<32>, 0x230C13D8<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_20, out a0_354, out a1_355, out a2_356, out a3, out a4_357, out a5_358, out s2_28, out s3_27, out s4_25, out s5_359, out s6_360, out s7_361, out s8_362, out s9_363, out s10_364, out s11_365)
l23065664:
	branch s4_25 != 0<32> l230656D6
l230656D6:
	s1_20 = s1_20 + s2_28
	Mem91[s1_20:word32] = s4_25
	word32 s0_92 = (a0 + 80<i32> << 2<i32>) + s2_28
	branch s3_27 != 0<32> l230656CE
l230656CE:
	Mem95[s0_92:word32] = s3_27
l230656E8:
	Mem96[s0_92:word32] = 0<32>
l23065668:
	branch CONVERT(Mem15[0x420266B4<32>:byte], byte, word32) >u 4<32> l230656EC
l23065676:
	branch CONVERT(Mem15[0x420266B6<32>:byte], byte, word32) >u 4<32> l230656EC
l230656EC:
	s0Out = <invalid>
	s1Out = s1_20
	a3Out = a3
	s2Out = s2_28
	s3Out = s3_27
	return ra
l23065684:
	branch Mem15[0x4200F560<32>:int32] == 0<32> l230656C8
l230656C8:
	word32 a5_380
	xTaskGetTickCount(out a5_380)
l2306568E:
	word32 a5_366
	xTaskGetTickCountFromISR(out a5_366)
l23065692:
l230656BE_thunk_bl_printk:
	word32 a3_149
	word32 s1_153
	word32 s2_156
	word32 s3_157
	word32 a0_367
	word32 a1_368
	word32 a2_369
	word32 a4_370
	word32 a5_371
	word32 s4_372
	word32 s5_373
	word32 s6_374
	word32 s7_375
	word32 s8_376
	word32 s9_377
	word32 s10_378
	word32 s11_379
	word32 ra_152 = bl_printk(ra, 0x230C1478<32>, 0x230C13D8<32>, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_153, out a0_367, out a1_368, out a2_369, out a3_149, out a4_370, out a5_371, out s2_156, out s3_157, out s4_372, out s5_373, out s6_374, out s7_375, out s8_376, out s9_377, out s10_378, out s11_379)
	s0Out = <invalid>
	s1Out = s1_153
	a3Out = a3_149
	s2Out = s2_156
	s3Out = s3_157
	return ra_152
bl_irq_register_with_ctx_exit:
l230655EC:
	_irq_num_check.part.0(ra, dwLoc08, dwArg40, dwArg44, s1, dwArg8C)


word32 bl_irq_ctx_get(word32 ra, word32 a0, word32 a1, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_dma_int_process
//      bl_dma_irq_register
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: a4
// Trashed: a4 a5
// Preserved: sp
bl_irq_ctx_get_entry:
l230656FC:
	branch a0 <=u 79<i32> l2306570C
l2306570C:
	Mem16[Mem0[(a0 + 80<i32> << 2<i32>) + 0x420188F4<32>:word32]:word32] = a1
	return 0x420188F4<32>
bl_irq_ctx_get_exit:
l23065704:
	_irq_num_check.part.0(ra, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C)


word32 bl_irq_register(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgBC, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ble_controller_init
//      bl_uart_int_enable
//      bl_sec_init
//      bl_wifi_enable_irq
//      bl_timer_tick_enable
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00BC:[0..31]
// LiveOut: a3 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_register_entry:
l23065722:
l23065724_thunk_bl_irq_register_with_ctx:
	word32 s0_13
	word32 s1_14
	word32 s2_15
	word32 s3_16
	word32 a3_23
	word32 ra_25 = bl_irq_register_with_ctx(ra, s1, a0, a1, 0<32>, s2, dwArg08, dwArg28, dwArg40, dwArg44, dwArg50, dwArg54, dwArg70, dwArg74, dwArg78, dwArg8C, dwArg98, dwArg9C, dwArgBC, out s0_13, out s1_14, out a3_23, out s2_15, out s3_16)
	s0Out = s0_13
	s1Out = s1_14
	a3Out = a3_23
	s2Out = s2_15
	s3Out = s3_16
	return ra_25
bl_irq_register_exit:


void bl_irq_unregister(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 dwArg08, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg8C, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_uart_int_disable
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
bl_irq_unregister_entry:
l23065728:
	branch a0 <=u 79<i32> l23065740
l23065740:
	word32 s3_18 = a0 << 2<u32>
	word32 s2_23 = a1
	branch Mem13[(a0 << 2<u32>) + 0x420188F4<32>:word32] == a1 l230657B2
l2306575C:
	branch CONVERT(Mem13[0x420266B4<32>:byte], byte, word32) >u 3<32> l230657B2
l2306576A:
	branch CONVERT(Mem13[0x420266B6<32>:byte], byte, word32) >u 3<32> l230657B2
l23065776:
	branch Mem13[0x4200F560<32>:int32] == 0<32> l230657C6
l230657C6:
	word32 a5_152
	xTaskGetTickCount(out a5_152)
l23065780:
	word32 a5_153
	xTaskGetTickCountFromISR(out a5_153)
l23065784:
	word32 s1_154
	word32 a0_155
	word32 a1_156
	word32 a2_157
	word32 a3_158
	word32 a4_159
	word32 a5_160
	word32 s4_161
	word32 s5_162
	word32 s6_163
	word32 s7_164
	word32 s8_165
	word32 s9_166
	word32 s10_167
	word32 s11_168
	bl_printk(ra, 0x230C14A8<32>, 0x230C13D8<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_154, out a0_155, out a1_156, out a2_157, out a3_158, out a4_159, out a5_160, out s2_23, out s3_18, out s4_161, out s5_162, out s6_163, out s7_164, out s8_165, out s9_166, out s10_167, out s11_168)
l230657B2:
	Mem82[s3_18 + 0x420188F4<32>:word32] = s2_23
	return
bl_irq_unregister_exit:
l2306573C:
	_irq_num_check.part.0(ra, dwLoc08, dwArg40, dwArg44, s1, dwArg8C)


void interrupt_entry(word32 ra, word32 a0, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
interrupt_entry_exit:
interrupt_entry_entry:
l230657CC:
	word32 a2_5 = CONVERT(SLICE(a0, word27, 0), word27, word32)
	branch a2_5 >u 79<i32> l23065800
l230657DA:
	branch Mem0[(a2_5 << 2<u32>) + 0x420188F4<32>:int32] == 0<32> l23065800
l23065800:
	word32 a4_67
	word32 a3_66
	word32 a2_65
	word32 a1_64
	word32 a0_63
	word32 s1_62
	word32 a5_68
	word32 a7_69
	word32 s2_70
	word32 s3_71
	word32 s4_72
	word32 s5_73
	word32 s6_74
	word32 s7_75
	word32 s8_76
	word32 s9_77
	word32 s10_78
	word32 s11_79
	word32 t4_80
	printf(ra, 0x230C1750<32>, a2_5 + -16<i32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_62, out a0_63, out a1_64, out a2_65, out a3_66, out a4_67, out a5_68, out a7_69, out s2_70, out s3_71, out s4_72, out s5_73, out s6_74, out s7_75, out s8_76, out s9_77, out s10_78, out s11_79, out t4_80)
l23065818:
l230657F0:
	branch a0 == 0<32> l230657FE
l230657FE:
	switch (CONVERT(SLICE(a0, word27, 0), word27, word32)) { }
l230657FC:
	switch (CONVERT(SLICE(a0, word27, 0), word27, word32)) { }


void exception_entry(word32 ra, word32 gp, word32 a0, word32 a1, word32 a3, word32 a5, word32 s2, word32 fs0, word32 fs1, word32 fa0, word32 fa1, word32 fa2, word32 fa3, word32 fa4, word32 fa5, word32 mstatus, word32 mcause, word32 mtval, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg84, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a5:[0..31] fa0:[0..31] fa1:[0..31] fa2:[0..31] fa3:[0..31] fa4:[0..31] fa5:[0..31] fs0:[0..31] fs1:[0..31] gp:[0..31] mcause:[0..31] mstatus:[0..31] mtval:[0..31] ra:[0..31] s2:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa1 fa2 fa3 fa4 fa5 fs0 fs1 gp mcause mstatus mtval ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
exception_entry_entry:
l2306581A:
	branch (a0 & 1023<i32>) != 4<32> l23065844
l23065844:
	branch (a0 & 1023<i32>) != 6<32> l2306585C
l2306585C:
	word32 a0_283
	word32 a1_284
	word32 a2_285
	word32 a4_286
	word32 a5_287
	word32 s4_288
	word32 s8_289
	puts(0x230C14E4<32>, out a0_283, out a1_284, out a2_285, out a4_286, out a5_287, out s4_288, out s8_289)
	word32 a3_46
	word32 a0_68
	word32 a1_71
	word32 a2_72
	word32 a3_73
	word32 s1_77
	word32 s2_80
	word32 s1_290
	word32 a0_291
	word32 a1_292
	word32 a2_293
	word32 a4_294
	word32 a5_295
	word32 a7_296
	word32 s2_297
	word32 s3_298
	word32 s4_299
	word32 s5_300
	word32 s6_301
	word32 s7_302
	word32 s8_303
	word32 s9_304
	word32 s10_305
	word32 s11_306
	word32 t4_307
	word32 a4_308
	word32 a5_309
	word32 a7_310
	word32 s3_311
	word32 s4_312
	word32 s5_313
	word32 s6_314
	word32 s7_315
	word32 s8_316
	word32 s9_317
	word32 s10_318
	word32 s11_319
	word32 t4_320
	word32 ra_76 = printf(printf(ra, 0x230C14FC<32>, 6<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_290, out a0_291, out a1_292, out a2_293, out a3_46, out a4_294, out a5_295, out a7_296, out s2_297, out s3_298, out s4_299, out s5_300, out s6_301, out s7_302, out s8_303, out s9_304, out s10_305, out s11_306, out t4_307), 0x230C1524<32>, a3_46, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_77, out a0_68, out a1_71, out a2_72, out a3_73, out a4_308, out a5_309, out a7_310, out s2_80, out s3_311, out s4_312, out s5_313, out s6_314, out s7_315, out s8_316, out s9_317, out s10_318, out s11_319, out t4_320)
	branch CONVERT(SLICE(a0, word16, 0), word16, word32) >u 0xF<32> l23065950
l23065950:
l230658B0:
	word32 a0_321
	word32 a1_322
	word32 a2_323
	word32 a4_324
	word32 a5_325
	word32 s4_326
	word32 s8_327
	puts(0x230C172C<32>, out a0_321, out a1_322, out a2_323, out a4_324, out a5_325, out s4_326, out s8_327)
	backtrace_riscv()
l230658C2:
l23065898:
	word32 tp_126
	word32 s10_128
	word32 s11_129
	word32 s3_130
	word32 s5_131
	word32 s6_132
	word32 s7_133
	word32 s9_134
	word32 t5_225
	word32 t6_226
	call 0x230C1398<32> (retsize: 0;)
		uses: a0:a0_68,a1:a1_71,a2:a2_72,a3:a3_73,a5:0x230C1398<32>,fa0:fa0,fa1:fa1,fa2:fa2,fa3:fa3,fa4:fa4,fa5:fa5,fs0:fs0,fs1:fs1,gp:gp,mcause:mcause,mstatus:mstatus,mtval:mtval,ra:ra_76,s0:Mem25[0x230C1398<32>:word32],s1:s1_77,s10:s10_128,s11:s11_129,s2:s2_80,s3:s3_130,s5:s5_131,s6:s6_132,s7:s7_133,s9:s9_134,Stack +0004:dwLoc1C,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0028:dwArg08,Stack +0048:dwArg28,Stack +0070:dwArg50,Stack +0074:dwArg54,Stack +0098:dwArg78,Stack +00A4:dwArg84,Stack +00BC:dwArg9C,t5:t5_225,t6:t6_226,tp:tp_126
		defs: s10:s10_128,s11:s11_129,s3:s3_130,s5:s5_131,s6:s6_132,s7:s7_133,s9:s9_134,t5:t5_225,t6:t6_226,tp:tp_126
	return
l2306584A:
l23065858_thunk_misaligned_store_trap:
	misaligned_store_trap(gp, a3, a1, a5, fs0, fs1, fa0, fa1, fa2, fa3, fa4, fa5, mstatus, mcause, mtval)
	return
l23065832:
l23065840_thunk_misaligned_load_trap:
	misaligned_load_trap(gp, a3, a1, a5, mstatus, mcause, mtval)
	return
exception_entry_exit:


void bl_irq_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
bl_irq_init_entry:
l2306595A:
	word32 s8_59
	word32 a5_57
	word32 s4_58
	word32 a2_55
	word32 a4_56
	word32 a0_53
	word32 a1_54
	puts(0x230C140C<32>, out a0_53, out a1_54, out a2_55, out a4_56, out a5_57, out s4_58, out s8_59)
	word32 a4_19 = 0x2800400<32>
l23065976:
	Mem22[a4_19:byte] = 0<8>
	a4_19 = a4_19 + 1<32>
	branch a4_19 != 0x2800480<32> l23065976
l23065980:
	word32 a5_25 = 0x2800000<32>
l23065988:
	Mem28[a5_25:byte] = 0<8>
	a5_25 = a5_25 + 1<32>
	branch a5_25 != 0x2800080<32> l23065988
l23065992:
	return
bl_irq_init_exit:


word32 _trng_trigger(word32 a2, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sec_get_random_word
//      bl_rand_stream
//      bl_sec_init
// MayUse:  a2:[0..31]
// LiveOut: a3 a4
// Trashed: a3 a4 a5
// Preserved: sp
_trng_trigger_entry:
l23065998:
	word32 a4_10 = Mem0[0x40004200<32>:int32]
	word32 a3_12 = a4_10 & 1<i32>
	branch (a4_10 & 1<i32>) != 0<32> l230659C2
l230659A6:
	word32 a3_9 = Mem0[a2:word32]
	Mem11[0x4000422C<32>:word32] = a2
	a3_12 = Mem11[a3_9 + 4<i32>:word32]
	Mem13[0x40004230<32>:word32] = a3_12
	Mem14[0x40004200<32>:word32] = a4_10 | 1542<i32>
	a4_10 = a4_10 | 1542<i32>
l230659C2:
	a4Out = a4_10
	return a3_12
_trng_trigger_exit:


word32 wait_trng4feed(word32 ra, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rand_stream
//      bl_sec_init
// MayUse:  ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a2 a3 a4 a5 ra s1 s10 s2 s3 s4 s5 s6 s7 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
wait_trng4feed_entry:
l230659C4:
	word32 a5_11 = Mem7[0x40004200<32>:int32]
	word32 a3_10 = 0x40004000<32>
l230659D6:
	branch (a5_11 & 1<i32>) != 0<32> l23065A7A
l23065A7A:
	a5_11 = Mem7[0x40004200<32>:int32]
l230659DC:
	Mem19[0x40004200<32>:word32] = a5_11 & 0xFFFFFFFD<32> | 512<i32>
	word32 s0_24 = 0x42018BC4<32>
	branch CONVERT(Mem19[0x420266B4<32>:byte], byte, word32) >u 1<32> l23065A3E
l23065A00:
	branch CONVERT(Mem19[0x420266B7<32>:byte], byte, word32) >u 1<32> l23065A3E
l23065A0C:
	word32 a5_30
	branch Mem19[0x4200F560<32>:int32] == 0<32> l23065A80
l23065A80:
	xTaskGetTickCount(out a5_30)
l23065A16:
	xTaskGetTickCountFromISR(out a5_30)
l23065A1A:
	s0_24 = Mem19[a5_30:word32]
	word32 a0_187
	word32 a1_188
	word32 a2_189
	word32 a4_190
	word32 a5_191
	word32 s8_192
	word32 s11_193
	ra = bl_printk(ra, 0x230C18A0<32>, 0x230C188C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1, out a0_187, out a1_188, out a2_189, out a3_10, out a4_190, out a5_191, out s2, out s3, out s4, out s5, out s6, out s7, out s8_192, out s9, out s10, out s11_193)
l23065A3E:
	Mem77[Mem19[0x40004208<32>:int32]:word32] = s0_24
	Mem79[Mem77[0x4000420C<32>:int32] + 4<i32>:word32] = s0_24
	Mem81[Mem79[0x40004210<32>:int32] + 8<i32>:word32] = s0_24
	Mem83[Mem81[0x40004214<32>:int32] + 12<i32>:word32] = s0_24
	Mem85[Mem83[0x40004218<32>:int32] + 16<i32>:word32] = s0_24
	Mem87[Mem85[0x4000421C<32>:int32] + 20<i32>:word32] = s0_24
	word32 a4_88 = Mem87[0x40004220<32>:int32]
	Mem89[a4_88 + 24<i32>:word32] = s0_24
	word32 a5_90 = Mem89[0x40004224<32>:int32]
	Mem91[a5_90 + 28<i32>:word32] = s0_24
	s1Out = s1
	a2Out = dwArg10
	a3Out = a3_10
	a4Out = a4_88
	a5Out = a5_90
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s9Out = s9
	s10Out = s10
	return ra
wait_trng4feed_exit:


void sec_trng_IRQHandler(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp tp
sec_trng_IRQHandler_entry:
l23065A86:
	word32 a0_9
	word32 a1_10
	word32 a5_216
	word32 a2_214
	word32 a4_215
	aos_now_ms(a3, out a0_9, out a1_10, out a2_214, out a4_215, out a5_216)
	branch a1_10 > 0<32> l23065AAA
l23065A94:
	branch a1_10 != 0<32> l23065A9E
l23065A96:
	branch a0_9 >u 1999<i32> l23065AAA
l23065A9E:
	word32 s4_222
	word32 s8_223
	word32 a4_220
	word32 a5_221
	word32 a1_218
	word32 a2_219
	word32 a0_217
	puts(0x230C1834<32>, out a0_217, out a1_218, out a2_219, out a4_220, out a5_221, out s4_222, out s8_223)
l23065AAA:
	Mem37[0x40004200<32>:word32] = Mem7[0x40004200<32>:int32] & 0xFFFFFFFD<32> | 512<i32>
	word32 s0_34 = 0x42018BC4<32>
	branch CONVERT(Mem37[0x420266B4<32>:byte], byte, word32) >u 1<32> l23065B10
l23065AD2:
	branch CONVERT(Mem37[0x420266B7<32>:byte], byte, word32) >u 1<32> l23065B10
l23065ADE:
	word32 a5_46
	branch Mem37[0x4200F560<32>:int32] == 0<32> l23065B4C
l23065B4C:
	xTaskGetTickCount(out a5_46)
l23065AE8:
	xTaskGetTickCountFromISR(out a5_46)
l23065AEC:
	s0_34 = Mem37[a5_46:word32]
	word32 s4_233
	word32 s3_232
	word32 a5_230
	word32 s6_235
	word32 s5_234
	word32 s7_236
	word32 s8_237
	word32 s10_239
	word32 s9_238
	word32 s2_231
	word32 a3_228
	word32 a4_229
	word32 a1_226
	word32 a2_227
	word32 s1_224
	word32 a0_225
	word32 s11_240
	bl_printk(ra, 0x230C1850<32>, 0x230C188C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_224, out a0_225, out a1_226, out a2_227, out a3_228, out a4_229, out a5_230, out s2_231, out s3_232, out s4_233, out s5_234, out s6_235, out s7_236, out s8_237, out s9_238, out s10_239, out s11_240)
l23065B10:
	Mem95[Mem37[0x40004208<32>:int32]:word32] = s0_34
	Mem97[Mem95[0x4000420C<32>:int32] + 4<i32>:word32] = s0_34
	Mem99[Mem97[0x40004210<32>:int32] + 8<i32>:word32] = s0_34
	Mem101[Mem99[0x40004214<32>:int32] + 12<i32>:word32] = s0_34
	Mem103[Mem101[0x40004218<32>:int32] + 16<i32>:word32] = s0_34
	Mem105[Mem103[0x4000421C<32>:int32] + 20<i32>:word32] = s0_34
	Mem107[Mem105[0x40004220<32>:int32] + 24<i32>:word32] = s0_34
	Mem109[Mem107[0x40004224<32>:int32] + 28<i32>:word32] = s0_34
	return
sec_trng_IRQHandler_exit:


word32 bl_sec_get_random_word(word32 s0, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rand
// MayUse:  a2:[0..31] s0:[0..31]
// LiveOut: a2 a3 a4 a5
// Trashed: a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
bl_sec_get_random_word_entry:
l23065B52:
	word32 a4_11 = Mem10[s0:word32]
	Mem14[s0 & 7<32>:word32] = a4_11
	branch (s0 & 7<32>) != 0<32> l23065B72
l23065B6E:
	a3 = _trng_trigger(a2, out a4_11)
l23065B72:
	Mem22[(s0 & 7<32>) + 1<i32>:word32] = 0x4200F598<32>
	a3Out = a3
	a4Out = a4_11
	a5Out = 0x42018BC4<32>
	return dwArg10
bl_sec_get_random_word_exit:


word32 bl_rand_stream(word32 ra, word32 a0, word32 a1, word32 a2, word32 s5, word32 dwArg30, word32 dwArg34, word32 dwArg7C, word32 dwArg0128, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      supplicantGenerateRand
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] s5:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +007C:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 ra s0 s10 s2 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_rand_stream_entry:
l23065B90:
	word32 a5_112 = Mem5[0x4200F598<32>:int32]
	word32 s4_100 = a0
	word32 s1_126 = a1
	word32 s0_159 = 0x4200F598<32>
	branch a5_112 == 0<32> l23065BC2
l23065BB6:
	word32 a4_270
	_trng_trigger(a2, out a4_270)
	word32 s3_274
	word32 s9_278
	word32 s10_279
	word32 s7_277
	word32 s5_275
	word32 s6_276
	word32 s2_273
	word32 a3_271
	word32 a4_272
	ra = wait_trng4feed(ra, dwLoc18, dwArg30, dwArg34, s5, dwArg7C, out s1_126, out a2, out a3_271, out a4_272, out a5_112, out s2_273, out s3_274, out s4_100, out s5_275, out s6_276, out s7_277, out s9_278, out s10_279)
	Mem55[0x4200F598<32>:word32] = 0<32>
l23065BC2:
	word32 s3_102 = 0<32>
	word32 s5_57 = 32<i32>
	word32 s6_108 = 0x42019000<32>
	word32 s7_128 = 0x1F<32>
l23065BCE:
	branch s1_126 > 0<32> l23065BF4
l23065BF4:
	s0_159 = Mem62[a5_112:word32]
	branch a5_112 == 0<32> l23065C04
l23065BF8:
	word32 a4_289
	_trng_trigger(a2, out a4_289)
	word32 s2_294
	word32 s9_295
	word32 s10_296
	word32 a2_290
	word32 a5_293
	word32 a3_291
	word32 a4_292
	ra = wait_trng4feed(ra, dwLoc18, dwArg30, dwArg34, s5, dwArg7C, out s1_126, out a2_290, out a3_291, out a4_292, out a5_293, out s2_294, out s3_102, out s4_100, out s5_57, out s6_108, out s7_128, out s9_295, out s10_296)
	Mem92[s0_159:word32] = 0<32>
l23065C04:
	word32 s2_105 = s1_126
	branch s5_57 >= s1_126 l23065C0E
l23065C0A:
	s2_105 = 32<i32>
l23065C0E:
	word32 a3_298
	word32 a7_301
	word32 a4_299
	word32 a6_300
	word32 a1_297
	memcpy(s4_100 + s3_102, s6_108 + -1084<i32>, s2_105, out a1_297, out a2, out a3_298, out a4_299, out a5_112, out a6_300, out a7_301)
	Mem132[s0_159:word32] = s7_128
	s3_102 = s3_102 + s2_105
	s1_126 = s1_126 - s2_105
l23065BD2:
	word32 a4_280
	_trng_trigger(a2, out a4_280)
	word32 a3_137
	word32 a4_138
	word32 s10_145
	word32 s2_147
	word32 s9_154
	word32 s5_286
	word32 s6_287
	word32 s7_288
	word32 a2_282
	word32 s4_285
	word32 a5_283
	word32 s3_284
	word32 s1_281
	word32 ra_143 = wait_trng4feed(ra, dwLoc18, dwArg30, dwArg34, s5, dwArg7C, out s1_281, out a2_282, out a3_137, out a4_138, out a5_283, out s2_147, out s3_284, out s4_285, out s5_286, out s6_287, out s7_288, out s9_154, out s10_145)
	Mem161[s0_159:word32] = 0<32>
	0<32> = dwArg0128
	s0Out = dwArgE4
	a3Out = a3_137
	a4Out = a4_138
	s2Out = s2_147
	s9Out = s9_154
	s10Out = s10_145
	return ra_143
bl_rand_stream_exit:


word32 bl_rand(word32 a0, word32 a2, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ecc_gen_new_secret_key
//      lld_con_start
//      llm_init
//      llc_task_random_gen_request
//      hci_le_rand_cmd_handler
//      k_get_random_byte_array
//      bl_sec_test
//      dhcp_create_msg
//      igmp_delaying_member
//      igmp_joingroup_netif
//      tcp_init
//      udp_init
//      sntp_init
//      mbedtls_platform_entropy_poll
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 s1 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
bl_rand_entry:
l23065C28:
	word32 s0_10 = 0x13<32>
l23065C32:
	word32 a3_18
	word32 a4_14
	word32 a5_15
	a2 = bl_sec_get_random_word(s0_10, a2, out a3_18, out a4_14, out a5_15)
	s0_10 = s0_10 + 0xFFFFFFFF<32>
	word32 s1_21 = a0
	branch s0_10 != 0<32> l23065C56
l23065C56:
	branch a0 == 0<32> l23065C32
l23065C58:
l23065C3C:
	word32 a0_80
	word32 a2_81
	s1_21 = puts(0x230C17A0<32>, out a0_80, out a1, out a2_81, out a4_14, out a5_15, out s4, out s8)
l23065C48:
	a0Out = s1_21 >>u 1<u32>
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3_18
	a4Out = a4_14
	a5Out = a5_15
	s4Out = s4
	s8Out = s8
	return s1_21
bl_rand_exit:


word32 bl_sec_init(word32 ra, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg7C, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg9C, word32 dwArgAC, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0178, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_sec_init_entry:
l23065C5A:
	word32 a2_11
	word32 a0_22
	word32 a3_144
	word32 a4_145
	xQueueCreateMutexStatic(1<32>, 0x42018B74<32>, mstatus, dwArg04, dwArg84, dwArgF8, dwArg0108, dwArg0138, dwArg0178, out a0_22, out a2_11, out a3_144, out a4_145)
	Mem33[0x4200F594<32>:word32] = a0_22
	word32 a4_146
	_trng_trigger(a2_11, out a4_146)
	word32 a2_37
	word32 s1_147
	word32 a3_148
	word32 a4_149
	word32 a5_150
	word32 s2_151
	word32 s3_152
	word32 s4_153
	word32 s5_154
	word32 s6_155
	word32 s7_156
	word32 s9_157
	word32 s10_158
	word32 ra_44 = wait_trng4feed(ra, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_147, out a2_37, out a3_148, out a4_149, out a5_150, out s2_151, out s3_152, out s4_153, out s5_154, out s6_155, out s7_156, out s9_157, out s10_158)
	word32 a4_159
	_trng_trigger(a2_37, out a4_159)
	word32 s1_70
	word32 s2_73
	word32 a3_90
	word32 a2_160
	word32 a3_161
	word32 a4_162
	word32 a5_163
	word32 s3_164
	word32 s4_165
	word32 s5_166
	word32 s6_167
	word32 s7_168
	word32 s9_169
	word32 s10_170
	word32 s0_171
	word32 s1_172
	word32 s2_173
	word32 s3_174
	word32 ra_95 = bl_irq_register(wait_trng4feed(ra_44, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_70, out a2_160, out a3_161, out a4_162, out a5_163, out s2_73, out s3_164, out s4_165, out s5_166, out s6_167, out s7_168, out s9_169, out s10_170), s1_70, 0x1C<32>, 0x23065A86<32>, s2_73, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_171, out s1_172, out a3_90, out s2_173, out s3_174)
	bl_irq_enable(0x1C<32>)
	a3Out = a3_90
	return ra_95
bl_sec_init_exit:


word32 bl_sec_test(word32 ra, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a0 a1 a2 a3 a4 a5 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
bl_sec_test_entry:
l23065CA0:
	word32 a0_13
	word32 a2_15
	word32 s1_145
	word32 a1_146
	word32 a3_147
	word32 a4_148
	word32 a5_149
	word32 s2_150
	word32 s3_151
	word32 s4_152
	word32 s5_153
	word32 s6_154
	word32 s7_155
	word32 s8_156
	word32 s9_157
	word32 s10_158
	word32 s11_159
	word32 ra_19 = bl_printk(ra, 0x230C17C4<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_145, out a0_13, out a1_146, out a2_15, out a3_147, out a4_148, out a5_149, out s2_150, out s3_151, out s4_152, out s5_153, out s6_154, out s7_155, out s8_156, out s9_157, out s10_158, out s11_159)
	word32 a3_35
	word32 a0_160
	word32 a1_161
	word32 a2_162
	word32 a4_163
	word32 a5_164
	word32 s4_165
	word32 s8_166
	bl_rand(a0_13, a2_15, out a0_160, out a1_161, out a2_162, out a3_35, out a4_163, out a5_164, out s4_165, out s8_166)
	word32 a0_49
	word32 a2_51
	word32 s1_167
	word32 a1_168
	word32 a3_169
	word32 a4_170
	word32 a5_171
	word32 s2_172
	word32 s3_173
	word32 s4_174
	word32 s5_175
	word32 s6_176
	word32 s7_177
	word32 s8_178
	word32 s9_179
	word32 s10_180
	word32 s11_181
	word32 ra_55 = bl_printk(ra_19, 0x230C1804<32>, a3_35, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_167, out a0_49, out a1_168, out a2_51, out a3_169, out a4_170, out a5_171, out s2_172, out s3_173, out s4_174, out s5_175, out s6_176, out s7_177, out s8_178, out s9_179, out s10_180, out s11_181)
	word32 a3_71
	word32 a0_182
	word32 a1_183
	word32 a2_184
	word32 a4_185
	word32 a5_186
	word32 s4_187
	word32 s8_188
	bl_rand(a0_49, a2_51, out a0_182, out a1_183, out a2_184, out a3_71, out a4_185, out a5_186, out s4_187, out s8_188)
	word32 a3_87
	word32 a5_106
	word32 a3_111
	word32 a4_112
	word32 s1_115
	word32 s1_189
	word32 a0_190
	word32 a1_191
	word32 a2_192
	word32 a4_193
	word32 a5_194
	word32 s2_195
	word32 s3_196
	word32 s4_197
	word32 s5_198
	word32 s6_199
	word32 s7_200
	word32 s8_201
	word32 s9_202
	word32 s10_203
	word32 s11_204
	word32 a0_205
	word32 a1_206
	word32 a2_207
	word32 s2_208
	word32 s3_209
	word32 s4_210
	word32 s5_211
	word32 s6_212
	word32 s7_213
	word32 s8_214
	word32 s9_215
	word32 s10_216
	word32 s11_217
	word32 ra_114 = bl_printk(bl_printk(ra_55, 0x230C1804<32>, a3_71, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_189, out a0_190, out a1_191, out a2_192, out a3_87, out a4_193, out a5_194, out s2_195, out s3_196, out s4_197, out s5_198, out s6_199, out s7_200, out s8_201, out s9_202, out s10_203, out s11_204), 0x230B4414<32>, a3_87, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_115, out a0_205, out a1_206, out a2_207, out a3_111, out a4_112, out a5_106, out s2_208, out s3_209, out s4_210, out s5_211, out s6_212, out s7_213, out s8_214, out s9_215, out s10_216, out s11_217)
	s1Out = s1_115
	a3Out = a3_111
	a4Out = a4_112
	a5Out = a5_106
	return ra_114
bl_sec_test_exit:


void cmd_gpio_get(word32 ra, word32 s0, word32 a0, word32 a2, word32 s2, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s0:[24..31] s2:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cmd_gpio_get_entry:
l23065CE8:
	byte bLoc11_173 = SLICE(s0, byte, 24)
	branch a2 == 2<32> l23065D56
l23065D56:
	word32 a4_276
	word32 a5_277
	word32 a3_275
	word32 a1_273
	word32 a2_274
	word32 a0_19 = atoi(a0, out a1_273, out a2_274, out a3_275, out a4_276, out a5_277)
	branch a0_19 >= 0<32> l23065D72
l23065D72:
	word32 a0_37 = bl_gpio_input_get(a0_19 & 255<i32>, fp + 0xFFFFFFEF<32>)
	branch a2 <u CONVERT(Mem11[0x420266B4<32>:byte], byte, word32) l23065D44
l23065D8C:
	branch a2 <u CONVERT(Mem11[0x420266B8<32>:byte], byte, word32) l23065D44
l23065D98:
	branch Mem11[0x4200F560<32>:int32] == 0<32> l23065DDE
l23065DDE:
	word32 a5_287
	xTaskGetTickCount(out a5_287)
l23065DA2:
	word32 a5_288
	xTaskGetTickCountFromISR(out a5_288)
l23065DA6:
	branch a0_37 != 0<32> l23065DE4
l23065DE4:
l23065DAA:
	branch CONVERT(bLoc11_173, byte, word32) != 0<32> l23065DEE
l23065DEE:
l23065DB0:
l23065DB8:
	word32 s1_306
	word32 a0_307
	word32 a1_308
	word32 a2_309
	word32 a3_310
	word32 a4_311
	word32 a5_312
	word32 s2_313
	word32 s3_314
	word32 s4_315
	word32 s5_316
	word32 s6_317
	word32 s7_318
	word32 s8_319
	word32 s9_320
	word32 s10_321
	word32 s11_322
	bl_printk(ra, 0x230C19E4<32>, 0x230C198C<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_306, out a0_307, out a1_308, out a2_309, out a3_310, out a4_311, out a5_312, out s2_313, out s3_314, out s4_315, out s5_316, out s6_317, out s7_318, out s8_319, out s9_320, out s10_321, out s11_322)
l23065D64:
	word32 s8_286
	word32 s4_285
	word32 a5_284
	word32 a2_282
	word32 a4_283
	word32 a1_281
	word32 a0_280
	puts(0x230C19D4<32>, out a0_280, out a1_281, out a2_282, out a4_283, out a5_284, out s4_285, out s8_286)
l23065CFA:
	branch CONVERT(Mem11[0x420266B4<32>:byte], byte, word32) >u 2<32> l23065D44
l23065D06:
	branch CONVERT(Mem11[0x420266B8<32>:byte], byte, word32) >u 2<32> l23065D44
l23065D12:
	branch Mem11[0x4200F560<32>:int32] == 0<32> l23065D50
l23065D50:
	word32 a5_278
	xTaskGetTickCount(out a5_278)
l23065D1C:
	word32 a5_279
	xTaskGetTickCountFromISR(out a5_279)
l23065D20:
	word32 s1_289
	word32 a0_290
	word32 a1_291
	word32 a2_292
	word32 a3_293
	word32 a4_294
	word32 a5_295
	word32 s2_296
	word32 s3_297
	word32 s4_298
	word32 s5_299
	word32 s6_300
	word32 s7_301
	word32 s8_302
	word32 s9_303
	word32 s10_304
	word32 s11_305
	bl_printk(ra, 0x230C199C<32>, 0x230C198C<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_289, out a0_290, out a1_291, out a2_292, out a3_293, out a4_294, out a5_295, out s2_296, out s3_297, out s4_298, out s5_299, out s6_300, out s7_301, out s8_302, out s9_303, out s10_304, out s11_305)
l23065D44:
	return
cmd_gpio_get_exit:


void cmd_gpio_set(word32 ra, word32 s1, word32 a0, word32 a2, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArg98, word32 dwArgAC, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s1:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00AC:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
cmd_gpio_set_entry:
l23065DF8:
	branch a2 == 3<32> l23065E66
l23065E66:
	word32 a4_446
	word32 a5_447
	word32 a1_443
	word32 a2_444
	word32 a3_445
	word32 a0_19 = atoi(a0, out a1_443, out a2_444, out a3_445, out a4_446, out a5_447)
	word32 a2_449
	word32 a4_450
	word32 a5_451
	word32 a1_448
	word32 a3_118
	word32 a0_36 = atoi(a0_19, out a1_448, out a2_449, out a3_118, out a4_450, out a5_451)
	word32 s1_114 = a0_36
	word32 a4_52 = CONVERT(Mem11[0x420266B4<32>:byte], byte, word32)
	branch a0_19 < 0<32> l23065E82
l23065E7E:
	branch a0_36 >= 0<32> l23065ED4
l23065ED4:
	branch a4_52 >u 2<32> l23065F22
l23065EDA:
	branch CONVERT(Mem11[0x420266B8<32>:byte], byte, word32) >u 2<32> l23065F22
l23065EE6:
	branch Mem11[0x4200F560<32>:int32] == 0<32> l23065F38
l23065F38:
	word32 a5_490
	xTaskGetTickCount(out a5_490)
l23065EF0:
	word32 a5_491
	xTaskGetTickCountFromISR(out a5_491)
l23065EF4:
	branch a0_36 != 0<32> l23065F3E
l23065F3E:
l23065EF6:
l23065EFE:
	word32 a0_492
	word32 a1_493
	word32 a2_494
	word32 a4_495
	word32 a5_496
	word32 s2_497
	word32 s3_498
	word32 s4_499
	word32 s5_500
	word32 s6_501
	word32 s7_502
	word32 s8_503
	word32 s9_504
	word32 s10_505
	word32 s11_506
	bl_printk(ra, 0x230C1A78<32>, 0x230C198C<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_114, out a0_492, out a1_493, out a2_494, out a3_118, out a4_495, out a5_496, out s2_497, out s3_498, out s4_499, out s5_500, out s6_501, out s7_502, out s8_503, out s9_504, out s10_505, out s11_506)
l23065F22:
	0<32> = dwArg38
	word32 a1_115 = CONVERT(s1_114 != 0<32>, bool, word32)
l23065F34_thunk_bl_gpio_output_set:
	bl_gpio_output_set(a0_19 & 255<i32>, a1_115, a3_118)
	return
l23065E82:
	branch a4_52 >u 4<32> l23065F48
l23065E88:
	branch CONVERT(Mem11[0x420266B8<32>:byte], byte, word32) >u 4<32> l23065F48
l23065E94:
	branch Mem11[0x4200F560<32>:int32] == 0<32> l23065ECE
l23065ECE:
	word32 a5_471
	xTaskGetTickCount(out a5_471)
l23065E9E:
	word32 a5_472
	xTaskGetTickCountFromISR(out a5_472)
l23065EA2:
	0<32> = dwArg38
l23065ECA_thunk_bl_printk:
	word32 s9_487
	word32 s8_486
	word32 s6_484
	word32 s7_485
	word32 s5_483
	word32 s4_482
	word32 s2_480
	word32 s10_488
	word32 s11_489
	word32 s3_481
	word32 a4_478
	word32 a5_479
	word32 a2_476
	word32 a3_477
	word32 a0_474
	word32 a1_475
	word32 s1_473
	bl_printk(ra, 0x230C1A54<32>, 0x230C198C<32>, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_473, out a0_474, out a1_475, out a2_476, out a3_477, out a4_478, out a5_479, out s2_480, out s3_481, out s4_482, out s5_483, out s6_484, out s7_485, out s8_486, out s9_487, out s10_488, out s11_489)
	return
l23065E0E:
	branch CONVERT(Mem11[0x420266B4<32>:byte], byte, word32) >u 2<32> l23065F48
l23065E18:
	branch CONVERT(Mem11[0x420266B8<32>:byte], byte, word32) >u 2<32> l23065F48
l23065F48:
	0<32> = dwArg38
	return
l23065E24:
	branch Mem11[0x4200F560<32>:int32] == 0<32> l23065E60
l23065E60:
	word32 a5_452
	xTaskGetTickCount(out a5_452)
l23065E2E:
	word32 a5_453
	xTaskGetTickCountFromISR(out a5_453)
l23065E32:
	0<32> = dwArg38
l23065E5C_thunk_bl_printk:
	word32 s11_470
	word32 s10_469
	word32 s9_468
	word32 s7_466
	word32 s8_467
	word32 s4_463
	word32 s5_464
	word32 s6_465
	word32 s3_462
	word32 a5_460
	word32 s2_461
	word32 a2_457
	word32 a3_458
	word32 a4_459
	word32 a1_456
	word32 a0_455
	word32 s1_454
	bl_printk(ra, 0x230C1A10<32>, 0x230C198C<32>, dwArg08, dwArg28, s1, ra, dwArg98, dwArgBC, out s1_454, out a0_455, out a1_456, out a2_457, out a3_458, out a4_459, out a5_460, out s2_461, out s3_462, out s4_463, out s5_464, out s6_465, out s7_466, out s8_467, out s9_468, out s10_469, out s11_470)
	return
cmd_gpio_set_exit:


void cmd_gpio_func(word32 ra, word32 a0, word32 a2, word32 a3, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg8C, word32 dwArg98, word32 dwArgBC, word32 dwArg0100, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +00BC:[0..31] Stack +0100:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
cmd_gpio_func_entry:
l23065F54:
	branch a2 == 5<32> l23065FCC
l23065FCC:
	word32 a1_570
	word32 a2_571
	word32 a3_572
	word32 a4_573
	word32 a5_574
	word32 a0_23 = atoi(a0, out a1_570, out a2_571, out a3_572, out a4_573, out a5_574)
	word32 a4_578
	word32 a5_579
	word32 a3_577
	word32 a1_575
	word32 a2_576
	word32 a0_40 = atoi(Mem15[a3 + 8<i32>:int32], out a1_575, out a2_576, out a3_577, out a4_578, out a5_579)
	word32 a4_583
	word32 a5_584
	word32 a1_580
	word32 a2_581
	word32 a3_582
	word32 a0_57 = atoi(Mem15[a3 + 12<i32>:int32], out a1_580, out a2_581, out a3_582, out a4_583, out a5_584)
	word32 s3_158 = a0_40
	word32 s1_154 = a0_57
	word32 a3_587
	word32 a4_588
	word32 a5_589
	word32 a2_586
	word32 a1_585
	word32 a0_74 = atoi(Mem15[a3 + 16<i32>:int32], out a1_585, out a2_586, out a3_587, out a4_588, out a5_589)
	branch a0_23 < 0<32> l23066002
l23065FF6:
	branch a0_40 < 0<32> l23066002
l23065FFA:
	branch a0_57 < 0<32> l23066002
l23065FFE:
	branch a0_74 >= 0<32> l2306605C
l2306605C:
	branch CONVERT(Mem15[0x420266B4<32>:byte], byte, word32) >u 2<32> l230660C8
l23066066:
	branch CONVERT(Mem15[0x420266B8<32>:byte], byte, word32) >u 2<32> l230660C8
l23066072:
	branch Mem15[0x4200F560<32>:int32] == 0<32> l230660EA
l230660EA:
	word32 a5_628
	xTaskGetTickCount(out a5_628)
l2306607C:
	word32 a5_629
	xTaskGetTickCountFromISR(out a5_629)
l23066080:
	branch a0_40 != 0<32> l230660F0
l230660F0:
l23066084:
l2306608C:
	branch a0_57 != 0<32> l230660FA
l230660FA:
l2306608E:
l23066096:
	branch a0_74 != 0<32> l23066104
l23066104:
l2306609A:
l230660A2:
	word32 a0_630
	word32 a1_631
	word32 a2_632
	word32 a3_633
	word32 a4_634
	word32 a5_635
	word32 s2_636
	word32 s4_637
	word32 s5_638
	word32 s6_639
	word32 s7_640
	word32 s8_641
	word32 s9_642
	word32 s10_643
	word32 s11_644
	bl_printk(ra, 0x230C1938<32>, 0x230C198C<32>, dwLoc28, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_154, out a0_630, out a1_631, out a2_632, out a3_633, out a4_634, out a5_635, out s2_636, out s3_158, out s4_637, out s5_638, out s6_639, out s7_640, out s8_641, out s9_642, out s10_643, out s11_644)
l230660C8:
	word32 a1_170 = CONVERT(s1_154 != 0<32>, bool, word32)
	branch s3_158 == 0<32> l2306610E
l2306610E:
	0<32> = dwArg0128
l2306611C_thunk_bl_gpio_enable_output:
	bl_gpio_enable_output(a1_170, dwArg0100)
	return
l230660D8:
	0<32> = dwArg0128
l230660E6_thunk_bl_gpio_enable_input:
	bl_gpio_enable_input(a1_170, dwArg0100)
	return
l23066002:
	branch CONVERT(Mem15[0x420266B4<32>:byte], byte, word32) >u 4<32> l23066120
l2306600C:
	branch CONVERT(Mem15[0x420266B8<32>:byte], byte, word32) >u 4<32> l23066120
l23066018:
	branch Mem15[0x4200F560<32>:int32] == 0<32> l23066056
l23066056:
	word32 a5_609
	xTaskGetTickCount(out a5_609)
l23066022:
	word32 a5_610
	xTaskGetTickCountFromISR(out a5_610)
l23066026:
	0<32> = dwArg0128
l23066052_thunk_bl_printk:
	word32 s1_611
	word32 a1_613
	word32 a0_612
	word32 a4_616
	word32 a2_614
	word32 s2_618
	word32 a3_615
	word32 a5_617
	word32 s3_619
	word32 s4_620
	word32 s5_621
	word32 s7_623
	word32 s6_622
	word32 s8_624
	word32 s9_625
	word32 s10_626
	word32 s11_627
	bl_printk(ra, 0x230C1A54<32>, 0x230C198C<32>, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_611, out a0_612, out a1_613, out a2_614, out a3_615, out a4_616, out a5_617, out s2_618, out s3_619, out s4_620, out s5_621, out s6_622, out s7_623, out s8_624, out s9_625, out s10_626, out s11_627)
	return
l23065F6E:
	branch CONVERT(Mem15[0x420266B4<32>:byte], byte, word32) >u 2<32> l23066120
l23065F78:
	branch CONVERT(Mem15[0x420266B8<32>:byte], byte, word32) >u 2<32> l23066120
l23066120:
	0<32> = dwArg0128
	return
l23065F84:
	branch Mem15[0x4200F560<32>:int32] == 0<32> l23065FC6
l23065FC6:
	word32 a5_590
	xTaskGetTickCount(out a5_590)
l23065F8E:
	word32 a5_591
	xTaskGetTickCountFromISR(out a5_591)
l23065F92:
	0<32> = dwArg0128
l23065FC2_thunk_bl_printk:
	word32 s7_604
	word32 s8_605
	word32 s6_603
	word32 s3_600
	word32 a4_597
	word32 s5_602
	word32 a3_596
	word32 a2_595
	word32 s4_601
	word32 s2_599
	word32 a5_598
	word32 s9_606
	word32 s10_607
	word32 s11_608
	word32 a1_594
	word32 s1_592
	word32 a0_593
	bl_printk(ra, 0x230C18EC<32>, 0x230C198C<32>, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_592, out a0_593, out a1_594, out a2_595, out a3_596, out a4_597, out a5_598, out s2_599, out s3_600, out s4_601, out s5_602, out s6_603, out s7_604, out s8_605, out s9_606, out s10_607, out s11_608)
	return
cmd_gpio_func_exit:


void bl_gpio_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
bl_gpio_cli_init_entry:
l23066130:
	return
bl_gpio_cli_init_exit:


word32 bl_efuse_read_mac(word32 ra, word32 s0, word32 s1, word32 a0, word32 s2, word32 s3, word32 s4, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_ap_mac_get
//      hal_board_cfg
// MayUse:  a0:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31]
// LiveOut: ra s0 s1 s2 s3 s4
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
bl_efuse_read_mac_entry:
l23066134:
	word32 s0_19
	word32 s1_20
	word32 s2_21
	word32 s3_22
	word32 s4_23
	word32 ra_18 = EF_Ctrl_Read_MAC_Address(ra, s0, s1, a0, s2, s3, s4, out s0_19, out s1_20, out s2_21, out s3_22, out s4_23)
	s0Out = s0_19
	s1Out = s1_20
	s2Out = s2_21
	s3Out = s3_22
	s4Out = s4_23
	return ra_18
bl_efuse_read_mac_exit:


word32 bl_efuse_read_mac_factory(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg68, word32 dwArg78, word32 dwArg8C, word32 dwArg9C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +008C:[0..31] Stack +009C:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_efuse_read_mac_factory_entry:
l23066144:
	word32 a0_16
	word32 a3_19
	word32 s0_25
	word32 s1_26
	word32 s10_27
	word32 s11_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s7_34
	word32 mstatus_40
	word32 ra_24 = mfg_media_read_macaddr(ra, s0, s1, a0, 1<32>, a3, a4, s2, s3, s4, mstatus, dwLoc08, dwArg08, dwArg28, dwArg40, dwArg44, dwArg50, dwArg54, dwArg68, dwArg78, dwArg8C, dwArg9C, out s0_25, out s1_26, out a0_16, out a3_19, out s2_29, out s3_30, out s4_31, out s5_32, out s6_33, out s7_34, out s10_27, out s11_28, out mstatus_40)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = 0<32> - CONVERT(a0_16 != 0<32>, bool, word32)
	a3Out = a3_19
	s2Out = s2_29
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s7Out = s7_34
	s10Out = s10_27
	s11Out = s11_28
	mstatusOut = mstatus_40
	return ra_24
bl_efuse_read_mac_factory_exit:


word32 bl_efuse_read_capcode(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s10Out, ptr32 & s11Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_efuse_read_capcode_entry:
l2306615C:
	word32 a0_16
	word32 a3_19
	word32 s0_25
	word32 s1_26
	word32 s10_27
	word32 s11_28
	word32 s2_29
	word32 s3_30
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s7_34
	word32 s8_35
	word32 mstatus_40
	word32 ra_24 = mfg_media_read_xtal_capcode(ra, s0, s1, a0, 1<32>, a3, a4, s2, s3, s4, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg68, dwArg8C, out s0_25, out s1_26, out a0_16, out a3_19, out s2_29, out s3_30, out s4_31, out s5_32, out s6_33, out s7_34, out s8_35, out s10_27, out s11_28, out mstatus_40)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = 0<32> - CONVERT(a0_16 != 0<32>, bool, word32)
	a3Out = a3_19
	s2Out = s2_29
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s7Out = s7_34
	s8Out = s8_35
	s10Out = s10_27
	s11Out = s11_28
	mstatusOut = mstatus_40
	return ra_24
bl_efuse_read_capcode_exit:


word32 bl_efuse_read_pwroft(word32 ra, word32 s0, word32 s1, word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg28, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0028:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
bl_efuse_read_pwroft_entry:
l23066174:
	word32 a0_16
	word32 a3_19
	word32 s0_25
	word32 s1_26
	word32 s2_29
	word32 s4_31
	word32 s5_32
	word32 s6_33
	word32 s7_34
	word32 s8_35
	word32 s9_36
	word32 mstatus_42
	word32 ra_24 = mfg_media_read_poweroffset(ra, s0, s1, a0, 1<32>, a3, a4, s2, s3, s4, mstatus, dwLoc08, dwArg28, dwArg40, dwArg44, dwArg68, dwArg8C, dwArg0118, out s0_25, out s1_26, out a0_16, out a3_19, out s2_29, out s4_31, out s5_32, out s6_33, out s7_34, out s8_35, out s9_36, out mstatus_42)
	s0Out = s0_25
	s1Out = s1_26
	a0Out = 0<32> - CONVERT(a0_16 != 0<32>, bool, word32)
	a3Out = a3_19
	s2Out = s2_29
	s4Out = s4_31
	s5Out = s5_32
	s6Out = s6_33
	s7Out = s7_34
	s8Out = s8_35
	s9Out = s9_36
	mstatusOut = mstatus_42
	return ra_24
bl_efuse_read_pwroft_exit:


void bl_wifi_clock_enable(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl606a0_wifi_init
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: sp
bl_wifi_clock_enable_entry:
l2306618C:
	word32 a5_6 = Mem0[a4:word32]
	branch a4 != 0<32> l2306619C
l23066198:
	Mem8[1<32>:word32] = a5_6
l2306619C:
	return
bl_wifi_clock_enable_exit:


word32 bl_wifi_enable_irq(word32 ra, word32 s1, word32 s2, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_main_rtthread_start
// MayUse:  ra:[0..31] s1:[0..31] s2:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31]
// LiveOut: a3 a4 a5 ra s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_wifi_enable_irq_entry:
l230661A0:
	word32 s1_21
	word32 s2_24
	word32 a3_41
	word32 s3_52
	word32 s0_102
	word32 a3_103
	word32 s3_104
	word32 s0_105
	word32 s1_106
	word32 s2_107
	word32 ra_46 = bl_irq_register(bl_irq_register(ra, s1, 70<i32>, 0x2300715A<32>, s2, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_102, out s1_21, out a3_103, out s2_24, out s3_104), s1_21, 79<i32>, 0x230071AA<32>, s2_24, dwLoc08, dwArg18, dwArg30, dwArg34, dwArg40, dwArg44, dwArg60, dwArg64, dwArg68, dwArg7C, dwArg88, dwArg8C, dwArgAC, out s0_105, out s1_106, out a3_41, out s2_107, out s3_52)
	bl_irq_enable(70<i32>)
	bl_irq_enable(79<i32>)
	word32 a5_72
	word32 a4_75
	word32 a0_108
	word32 a1_109
	word32 a2_110
	word32 s4_111
	word32 s8_112
	puts(0x230C1B44<32>, out a0_108, out a1_109, out a2_110, out a4_75, out a5_72, out s4_111, out s8_112)
	a3Out = a3_41
	a4Out = a4_75
	a5Out = a5_72
	s3Out = s3_52
	return ra_46
bl_wifi_enable_irq_exit:


void bl_wifi_sta_mac_addr_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_sta_mac_addr_set_entry:
l230661E8:
	word32 a1_29
	word32 a2_30
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 a6_34
	word32 a7_35
	memcpy(0x420266BC<32>, a0, 6<32>, out a1_29, out a2_30, out a3_31, out a4_32, out a5_33, out a6_34, out a7_35)
	return
bl_wifi_sta_mac_addr_set_exit:


void bl_wifi_ap_mac_addr_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_ap_mac_addr_set_entry:
l23066204:
	word32 a1_29
	word32 a2_30
	word32 a3_31
	word32 a4_32
	word32 a5_33
	word32 a6_34
	word32 a7_35
	memcpy(0x420266C8<32>, a0, 6<32>, out a1_29, out a2_30, out a3_31, out a4_32, out a5_33, out a6_34, out a7_35)
	return
bl_wifi_ap_mac_addr_set_exit:


void bl_wifi_mac_addr_get(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wifi_ap_start
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
//      bl606a0_wifi_init
//      bdaddr_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
bl_wifi_mac_addr_get_entry:
l23066220:
	word32 a1_28
	word32 a2_29
	word32 a3_30
	word32 a4_31
	word32 a5_32
	word32 a6_33
	word32 a7_34
	memcpy(a0, 0x420266BC<32>, 6<32>, out a1_28, out a2_29, out a3_30, out a4_31, out a5_32, out a6_33, out a7_34)
	return
bl_wifi_mac_addr_get_exit:


word32 bl_wifi_country_code_set(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..7]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
bl_wifi_country_code_set_entry:
l2306623A:
	Mem5[0x420266D4<32>:byte] = SLICE(a0, byte, 0)
	return 0x42026000<32>
bl_wifi_country_code_set_exit:


word32 bl_wifi_ap_info_set(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg0128, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_wifi_ap_info_set_entry:
l23066246:
	word32 t1_99
	word32 a0_100
	word32 a1_101
	word32 a2_102
	word32 a3_103
	word32 a4_104
	word32 a5_105
	word32 ra_34 = memset(ra, 0x420266D5<32>, 0<32>, 99<i32>, out t1_99, out a0_100, out a1_101, out a2_102, out a3_103, out a4_104, out a5_105)
	word32 a3_45
	word32 a1_106
	word32 a2_107
	word32 a4_108
	word32 a5_109
	word32 a6_110
	word32 a7_111
	memcpy(0x420266D5<32>, a0, a1, out a1_106, out a2_107, out a3_45, out a4_108, out a5_109, out a6_110, out a7_111)
	word32 a4_58
	word32 a1_112
	word32 a2_113
	word32 a3_114
	word32 a5_115
	word32 a6_116
	word32 a7_117
	memcpy(0x420266F6<32>, a2, a3_45, out a1_112, out a2_113, out a3_114, out a4_58, out a5_115, out a6_116, out a7_117)
	Mem74[0x42026737<32>:byte] = SLICE(a4_58, byte, 0)
	Mem76[0x42026738<32>:byte] = 1<8>
	0<32> = dwArg0128
	s1Out = a2
	s2Out = a0
	return ra_34
bl_wifi_ap_info_set_exit:


word32 bl_wifi_sta_info_set(word32 ra, word32 a0, word32 a1, word32 a2, word32 dwArg0128, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31] Stack +0128:[0..31]
// LiveOut: ra s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_wifi_sta_info_set_entry:
l230662B0:
	word32 t1_96
	word32 a0_97
	word32 a1_98
	word32 a2_99
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 ra_34 = memset(ra, 0x42026739<32>, 0<32>, 99<i32>, out t1_96, out a0_97, out a1_98, out a2_99, out a3_100, out a4_101, out a5_102)
	word32 a3_45
	word32 a1_103
	word32 a2_104
	word32 a4_105
	word32 a5_106
	word32 a6_107
	word32 a7_108
	memcpy(0x42026739<32>, a0, a1, out a1_103, out a2_104, out a3_45, out a4_105, out a5_106, out a6_107, out a7_108)
	word32 a4_58
	word32 a1_109
	word32 a2_110
	word32 a3_111
	word32 a5_112
	word32 a6_113
	word32 a7_114
	memcpy(0x4202675A<32>, a2, a3_45, out a1_109, out a2_110, out a3_111, out a4_58, out a5_112, out a6_113, out a7_114)
	Mem75[0x4202679C<32>:byte] = SLICE(a4_58, byte, 0)
	0<32> = dwArg0128
	s1Out = a2
	s2Out = a0
	return ra_34
bl_wifi_sta_info_set_exit:


void cmd_timer_start(word32 ra, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg8C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
cmd_timer_start_entry:
l23066310:
l23066310_thunk_bl_timer_tick_enable:
	bl_timer_tick_enable(ra, dwArg08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg40, dwArg44, dwArg48, dwArg5C, dwArg68, dwArg6C, dwArg8C)
	return
cmd_timer_start_exit:


void cmd_wdt_disable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
cmd_wdt_disable_entry:
l23066314:
l23066314_thunk_bl_wdt_disable:
	bl_wdt_disable()
	return
cmd_wdt_disable_exit:


void cmd_wdt_feed()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
cmd_wdt_feed_entry:
l23066318:
l23066318_thunk_bl_wdt_feed:
	bl_wdt_feed()
	return
cmd_wdt_feed_exit:


void cmd_wdt_init(word32 ra, word32 a0, word32 a2, word32 s2, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg98, word32 dwArg9C, word32 dwArgBC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00BC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
cmd_wdt_init_entry:
l2306631C:
	branch a2 == 2<32> l23066374
l23066374:
	word32 a5_232
	word32 a4_231
	word32 a3_230
	word32 a2_229
	word32 a1_228
	word32 a0_23 = atoi(a0, out a1_228, out a2_229, out a3_230, out a4_231, out a5_232)
	branch Mem13[0x4200F560<32>:int32] == 0<32> l230663B8
l230663B8:
	word32 a5_252
	xTaskGetTickCount(out a5_252)
l23066382:
	word32 a5_253
	xTaskGetTickCountFromISR(out a5_253)
l23066386:
	word32 s1_254
	word32 a0_255
	word32 a1_256
	word32 a2_257
	word32 a3_258
	word32 a4_259
	word32 a5_260
	word32 s2_261
	word32 s3_262
	word32 s4_263
	word32 s5_264
	word32 s6_265
	word32 s7_266
	word32 s8_267
	word32 s9_268
	word32 s10_269
	word32 s11_270
	bl_printk(ra, 0x230C1B8C<32>, 0x230C1B58<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_254, out a0_255, out a1_256, out a2_257, out a3_258, out a4_259, out a5_260, out s2_261, out s3_262, out s4_263, out s5_264, out s6_265, out s7_266, out s8_267, out s9_268, out s10_269, out s11_270)
	branch a0_23 <= 0<32> l230663BE
l230663BE:
	return
l230663A6:
l230663B4_thunk_bl_wdt_init:
	bl_wdt_init(a0_23)
	return
l2306633C:
	branch Mem13[0x4200F560<32>:int32] == 0<32> l2306636E
l2306636E:
	word32 a5_233
	xTaskGetTickCount(out a5_233)
l23066342:
	word32 a5_234
	xTaskGetTickCountFromISR(out a5_234)
l23066346:
l2306636A_thunk_bl_printk:
	word32 s1_235
	word32 a0_236
	word32 a1_237
	word32 a2_238
	word32 a3_239
	word32 a4_240
	word32 a5_241
	word32 s2_242
	word32 s3_243
	word32 s4_244
	word32 s5_245
	word32 s6_246
	word32 s7_247
	word32 s8_248
	word32 s9_249
	word32 s10_250
	word32 s11_251
	bl_printk(ra, 0x230C1B68<32>, 0x230C1B58<32>, dwArg08, dwArg28, dwArg70, dwArg74, dwArg98, dwArgBC, out s1_235, out a0_236, out a1_237, out a2_238, out a3_239, out a4_240, out a5_241, out s2_242, out s3_243, out s4_244, out s5_245, out s6_246, out s7_247, out s8_248, out s9_249, out s10_250, out s11_251)
	return
cmd_wdt_init_exit:


void bl_wdt_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
bl_wdt_cli_init_entry:
l230663CC:
	return
bl_wdt_cli_init_exit:


word32 fdt32_to_cpu(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_to_cpu_entry:
l230663D0:
	return (a0 >>u 16<i32> & 255<i32>) << 8<i32> | ((a0 << 0x18<u32> | a0 >>u 0x18<u32>) | (a0 >>u 8<u32> & 255<i32>) << 16<i32>)
fdt32_to_cpu_exit:


word32 dev_uart_init(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg50, word32 dwArg54, word32 dwArg74, word32 dwArg78, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgE8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_init
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a5 ra s0 s1 s2 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dev_uart_init_entry:
l230663F2:
	word32 a5_247
	word32 s1_109
	word32 a0_278
	branch a0 >u 2<32> l2306640E
l2306640A:
	branch a1 != 0<32> l2306645C
l2306645C:
	word32 a5_30
	s1_109 = a0
	branch a0 == 0<32> l2306650C
l2306650C:
	a5_30 = Mem19[0x4200F5A0<32>:int32]
l23066464:
	branch a0 != 1<32> l230664A6
l230664A6:
	a5_247 = 4<32>
	branch CONVERT(Mem19[0x420266B4<32>:byte], byte, word32) >u 4<32> l230664F0
l230664B4:
	branch CONVERT(Mem19[0x4202679E<32>:byte], byte, word32) >u 4<32> l230664F0
l230664C0:
	branch Mem19[0x4200F560<32>:int32] == 0<32> l23066506
l23066506:
	word32 a5_757
	xTaskGetTickCount(out a5_757)
l230664CA:
	word32 a5_758
	xTaskGetTickCountFromISR(out a5_758)
l230664CE:
	a0_278 = 0x230C1C60<32>
l2306646A:
	a5_30 = Mem19[0x4200F5A4<32>:int32]
l23066476:
	branch a5_30 == 0<32> l23066520
l23066520:
	word32 a0_67
	word32 a1_733
	word32 s4_740
	word32 a2_734
	word32 a3_735
	word32 a5_737
	word32 a4_736
	word32 s3_739
	word32 s8_741
	word32 a6_738
	Mem82[a0_67:word32] = pvPortMalloc(ra, a0, 60<i32>, a3, a4, a5_30, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_109, out a0_67, out a1_733, out a2_734, out a3_735, out a4_736, out a5_737, out a6_738, out s2, out s3_739, out s4_740, out s8_741)
	branch a0_67 != 0<32> l2306657A
l2306657A:
	word32 a3_88
	word32 a4_89
	word32 a5_90
	word32 t1_744
	word32 a1_746
	word32 a0_745
	word32 a2_747
	ra = memset(ra, a0_67, 0<32>, 60<i32>, out t1_744, out a0_745, out a1_746, out a2_747, out a3_88, out a4_89, out a5_90)
	Mem97[a5_90 + 52<i32>:byte] = 2<8>
	word32 s0_98 = Mem97[a5_90:word32]
	Mem99[a5_90 + 56<i32>:word32] = 0<32>
	word32 s6_100 = Mem99[s0_98:int32]
	word32 a0_101
	word32 s4_112
	word32 a3_750
	word32 a1_748
	word32 a2_749
	word32 a6_753
	word32 a4_751
	word32 a5_752
	word32 s8_754
	word32 s3_111
	pvPortMalloc(ra, s1_109, 4<32>, a3_88, a4_89, a5_90, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_109, out a0_101, out a1_748, out a2_749, out a3_750, out a4_751, out a5_752, out a6_753, out s2, out s3_111, out s4_112, out s8_754)
	Mem116[s6_100 + 56<i32>:word32] = a0_101
	branch a0_101 != 0<32> l230665DA
l230665DA:
	word32 a5_141
	word32 a4_144
	word32 a4_125
	word32 a5_126
	word32 t1_759
	word32 a1_761
	word32 a0_760
	word32 a2_762
	word32 a3_124
	word32 ra_127 = memset(ra, a0_101, 0<32>, 4<32>, out t1_759, out a0_760, out a1_761, out a2_762, out a3_124, out a4_125, out a5_126)
	Mem132[a5_126 + 24<i32>:word32] = a2
	Mem134[a5_126 + 28<i32>:word32] = s4_112
	branch a5_126 != 0<32> l23066664
l23066664:
	Mem136[a5_126:byte] = SLICE(s1_109, byte, 0)
	Mem138[a5_126 + 52<i32>:byte] = SLICE(s2, byte, 0)
	Mem142[0x1C000204<32>:word32] = a4_125
	Mem145[0x1C000208<32>:byte] = 3<8>
	Mem147[0x1C000209<32>:byte] = 0<8>
	Mem149[0x1C00020A<32>:byte] = 0<8>
	Mem151[0x1C00020B<32>:byte] = 0<8>
	Mem153[0x1C00020C<32>:byte] = SLICE(s2, byte, 0)
	a5_141 = 0x1C000200<32>
	a4_144 = 3<32>
l230665F2:
	a4_144 = CONVERT(Mem134[0x420266B4<32>:byte], byte, word32)
	a5_141 = 4<32>
	branch a4_144 >u 4<32> l2306663C
l23066600:
	a4_144 = CONVERT(Mem134[0x4202679E<32>:byte], byte, word32)
	branch a4_144 >u 4<32> l2306663C
l2306660C:
	branch Mem134[0x4200F560<32>:int32] == 0<32> l2306665E
l2306665E:
	word32 a5_765
	xTaskGetTickCount(out a5_765)
l23066616:
	word32 a5_766
	xTaskGetTickCountFromISR(out a5_766)
l2306661A:
	word32 s4_772
	word32 s10_777
	word32 s11_778
	word32 s8_776
	word32 s5_773
	word32 s7_775
	word32 s6_774
	word32 a0_768
	word32 a2_770
	word32 s2_771
	word32 a1_769
	word32 s1_767
	ra_127 = bl_printk(ra_127, 0x230C1C7C<32>, 0x230C1C34<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_767, out a0_768, out a1_769, out a2_770, out a3_124, out a4_144, out a5_141, out s2_771, out s3_111, out s4_772, out s5_773, out s6_774, out s7_775, out s8_776, out s9, out s10_777, out s11_778)
l2306663C:
	0<32> = dwArgA8
l2306665A_thunk_aos_register_driver:
	word32 a0_221
	word32 a5_226
	word32 s0_228
	word32 s1_229
	word32 s2_230
	word32 s4_232
	word32 s6_779
	word32 ra_244 = aos_register_driver(ra_127, s3_111, dwArg48, a3_124, a4_144, a5_141, mstatus, dwArg74, dwArgB4, dwArgE8, dwArg0128, dwArg0168, out s0_228, out s1_229, out a0_221, out a5_226, out s2_230, out s4_232, out s6_779)
	s0Out = s0_228
	s1Out = s1_229
	a0Out = a0_221
	a5Out = a5_226
	s2Out = s2_230
	s4Out = s4_232
	s9Out = s9
	return ra_244
l230665A6:
	a5_247 = 4<32>
	branch CONVERT(Mem116[0x420266B4<32>:byte], byte, word32) >u 4<32> l230664F0
l230665B4:
	branch CONVERT(Mem116[0x4202679E<32>:byte], byte, word32) >u 4<32> l230664F0
l230665C0:
	branch Mem116[0x4200F560<32>:int32] == 0<32> l230665D4
l230665D4:
	word32 a5_763
	xTaskGetTickCount(out a5_763)
l230665CA:
	word32 a5_764
	xTaskGetTickCountFromISR(out a5_764)
l230665CE:
l2306652C:
	a5_247 = 4<32>
	branch CONVERT(Mem82[0x420266B4<32>:byte], byte, word32) >u 4<32> l230664F0
l2306653A:
	branch CONVERT(Mem82[0x4202679E<32>:byte], byte, word32) >u 4<32> l230664F0
l23066546:
	branch Mem82[0x4200F560<32>:int32] == 0<32> l23066574
l23066574:
	word32 a5_755
	xTaskGetTickCount(out a5_755)
l23066550:
	word32 a5_756
	xTaskGetTickCountFromISR(out a5_756)
l23066554:
l23066558:
	a0_278 = 0x230C1C7C<32>
l23066478:
	a5_247 = 4<32>
	branch CONVERT(Mem19[0x420266B4<32>:byte], byte, word32) >u 4<32> l230664F0
l23066486:
	branch CONVERT(Mem19[0x4202679E<32>:byte], byte, word32) >u 4<32> l230664F0
l23066492:
	branch Mem19[0x4200F560<32>:int32] == 0<32> l2306651A
l2306651A:
	word32 a5_742
	xTaskGetTickCount(out a5_742)
l2306649C:
	word32 a5_743
	xTaskGetTickCountFromISR(out a5_743)
l230664A0:
l2306640E:
	a5_247 = 4<32>
	s1_109 = s1
	branch CONVERT(Mem19[0x420266B4<32>:byte], byte, word32) >u 4<32> l230664F0
l2306641C:
	s1_109 = s1
	branch CONVERT(Mem19[0x4202679E<32>:byte], byte, word32) >u 4<32> l230664F0
l23066428:
	branch Mem19[0x4200F560<32>:int32] == 0<32> l23066456
l23066456:
	word32 a5_718
	xTaskGetTickCount(out a5_718)
l23066432:
	word32 a5_719
	xTaskGetTickCountFromISR(out a5_719)
l23066436:
l2306643A:
	a0_278 = 0x230C1C40<32>
l230664EC:
	word32 a0_720
	word32 s7_729
	word32 s3_725
	word32 a1_721
	word32 s4_726
	word32 s8_730
	word32 a4_724
	word32 s5_727
	word32 s6_728
	word32 s10_731
	word32 a3_723
	word32 s11_732
	word32 a2_722
	ra = bl_printk(ra, a0_278, 0x230C1C34<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_109, out a0_720, out a1_721, out a2_722, out a3_723, out a4_724, out a5_247, out s2, out s3_725, out s4_726, out s5_727, out s6_728, out s7_729, out s8_730, out s9, out s10_731, out s11_732)
l230664F0:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_109
	a0Out = 0xFFFFFFFF<32>
	a5Out = a5_247
	s2Out = s2
	s4Out = dwArg04
	s9Out = s9
	return ra
dev_uart_init_exit:


void hal_uart_send_trigger(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_write
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_uart_send_trigger_entry:
l2306669A:
	bl_uart_int_tx_enable(a4)
	return
hal_uart_send_trigger_exit:


void hal_uart_send_trigger_off(word32 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_tx_irq
// MayUse:  a4:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_uart_send_trigger_off_entry:
l230666AE:
	bl_uart_int_tx_disable(a4)
	return
hal_uart_send_trigger_off_exit:


void hal_uart_init(word32 ra, word32 s0, word32 s1, word32 a0, word32 a4, word32 s2, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg5C, word32 dwArg8C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a4:[0..31] ra:[0..31] s0:[24..31] s1:[0..31] s2:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +008C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
hal_uart_init_entry:
l230666C2:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 a0_12 = Mem9[a0 + 56<i32>:word32]
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg132 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg312 = <invalid>
	word32 stackArg376 = <invalid>
	word32 a0_162
	word32 a3_163
	word32 a4_164
	aos_mutex_new(ra, a0, a3, a4, a5, mstatus, stackArg0, stackArg4, stackArg132, stackArg248, stackArg312, stackArg376, out a0_162, out a3_163, out a4_164)
	byte bLoc11_74 = SLICE(s0, byte, 24)
	branch a0_12 != 0<32> l230666F6
l230666D6:
	bl_uart_getdefconfig(fp + 0xFFFFFFEF<32>)
	word32 a5_17 = CONVERT(bLoc11_74, byte, word32)
	branch a5_17 != 0<32> l23066702
l23066702:
	a4 = 1<32>
	branch a5_17 != 1<32> l2306670E
l2306670E:
	a5_17 = 2<32>
l23066708:
	Mem22[a0 + 9<i32>:byte] = SLICE(a5_17, byte, 0)
l230666EA:
	Mem23[a0 + 9<i32>:byte] = 0<8>
l230666EE:
	bl_uart_int_enable(ra, a0_12, CONVERT(Mem25[a0:byte], byte, word32), a4, s2, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg40, dwArg44, dwArg48, dwArg5C, s1, ra, dwArg8C)
l230666F6:
	return
hal_uart_init_exit:


word32 hal_uart_recv_II(word32 a0, word32 a1, word32 a2, word32 a3, word32 dwArg84, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cli_getchar
//      __uart_rx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] Stack +0084:[0..31]
// LiveOut: a0 a2 a4 a5 s0 s4 s8
// Trashed: a0 a2 a4 a5 s0 s1 s4 s8 t3 tp
// Preserved: sp
hal_uart_recv_II_entry:
l23066712:
	word32 s0_12 = 0<32>
l2306671E:
	branch s0_12 == a2 l2306673A
l23066722:
	dwLoc1C = a2
	word32 a0_24 = bl_uart_data_recv(s0_12, CONVERT(Mem16[a0:byte], byte, word32), out a4, out a5)
	s0_12 = a3
	a2 = dwArg84
	branch a0_24 >= 0<32> l23066748
l23066748:
	a5 = a1 + a3
	Mem32[a5:byte] = SLICE(a0_24, byte, 0)
	s0_12 = a3 + 1<32>
l2306673A:
	Mem36[s0_12:word32] = a3
	a0Out = 0<32>
	a2Out = a2
	a4Out = a4
	a5Out = a5
	s4Out = dwArg04
	s8Out = dwLoc1C
	return s0_12
hal_uart_recv_II_exit:


void hal_uart_send(word32 a0, word32 a1, word32 a2, word32 dwArg38)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uart_tx_irq
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s2 s4 s8 t3 tp
// Preserved: s0 sp
hal_uart_send_entry:
l23066754:
	word32 s0_15 = a1
	word32 s1_17 = a1 + a2
l23066766:
	branch s0_15 != s1_17 l23066778
l23066778:
	word32 a0_61
	word32 a4_62
	word32 a5_63
	word32 s4_64
	word32 s8_65
	s0_15 = bl_uart_data_send(s1_17, CONVERT(Mem11[a0:byte], byte, word32), CONVERT(Mem11[s0_15:byte], byte, word32), out a0_61, out a4_62, out a5_63, out s4_64, out s8_65)
l2306676A:
	0<32> = dwArg38
	return
hal_uart_send_exit:


void hal_uart_finalize(word32 ra, word32 s0, word32 s1, word32 a4, word32 s2, word32 dwArg20, word32 dwArg24, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg6C, word32 dwArg7C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_close
// MayUse:  a4:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +006C:[0..31] Stack +007C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
hal_uart_finalize_entry:
l23066788:
	bl_uart_int_disable(ra, s1, CONVERT(Mem7[Mem7[s0 + 56<i32>:word32]:byte], byte, word32), a4, s2, dwArg20, dwArg24, dwArg30, dwArg34, dwArg58, dwArg6C, dwArg7C)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg344 = <invalid>
	word32 stackArg408 = <invalid>
	word32 a0_57
	word32 a2_58
	word32 a4_59
	word32 a5_60
	aos_mutex_free(a0, a3, a4, mstatus, stackArg344, stackArg408, out a0_57, out a2_58, out a4_59, out a5_60)
	return
hal_uart_finalize_exit:


word32 hal_uart_notify_register(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_open
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
hal_uart_notify_register_entry:
l230667A8:
	branch a1 != 0<32> l230667C6
l230667C6:
	branch a1 != 1<32> l230667BE
l230667CE:
	bl_uart_int_rx_notify_register(CONVERT(Mem7[a0:byte], byte, word32), a2, a0)
l230667B2:
	bl_uart_int_tx_notify_register(CONVERT(Mem7[a0:byte], byte, word32), a2, a0)
l230667BC:
l230667BE:
	return a1
hal_uart_notify_register_exit:


word32 vfs_uart_init(word32 ra, word32 s1, word32 a0, word32 a1, word32 s2, word32 s4, word32 s6, word32 s10, word32 mstatus, word32 dwArg28, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg98, word32 dwArgA8, word32 dwArg0118, word32 dwArg0134, ptr32 & s2Out, ptr32 & s6Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s10:[0..31] s2:[0..7] s4:[0..31] s6:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0134:[0..31]
// LiveOut: ra s10 s2 s6 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
vfs_uart_init_entry:
l230667DA:
	byte bLoc68_2953 = SLICE(s2, byte, 0)
	branch CONVERT(Mem0[0x4200F5A8<32>:int8], int8, int32) == 1<32> l2306693E
l2306680A:
	word32 a6_3251
	word32 a5_3250
	word32 a1_3246
	word32 a4_3249
	word32 a2_3247
	word32 a3_3248
	word32 a7_3252
	memcpy(fp + -112<i32>, 0x230C1C04<32>, 48<i32>, out a1_3246, out a2_3247, out a3_3248, out a4_3249, out a5_3250, out a6_3251, out a7_3252)
	word32 s4_119 = a0
	word32 a5_1522 = fp + -120<i32>
	word32 s2_1525 = 0<32>
l23066844:
	word32 a5_1217
	word32 a0_1383
	word32 a3_1380
	word32 s6_76 = Mem70[a5_1522:int32]
	word32 a0_81
	word32 s1_91
	word32 a5_3282
	word32 s5_3284
	word32 s6_3285
	word32 s3_3283
	word32 s0_1457
	word32 s2_117
	ra = fdt_subnode_offset(ra, 0x42026000<32>, s4_119, s6_76, s2_1525, s6_76, dwLocB8, dwLoc88, dwArg28, out s0_1457, out s1_91, out a0_81, out a5_3282, out s2_117, out s3_3283, out s4_119, out s5_3284, out s6_3285)
	branch a0_81 > 0<32> l230668A8
l230668A8:
	word32 a0_106
	word32 s0_115
	word32 s1_116
	word32 s3_3253
	word32 s5_3254
	word32 s6_3255
	word32 s8_3256
	ra = fdt_stringlist_count(ra, s4_119, 0x230C1D04<32>, s2_117, dwLocB8, 0x230C1CBC<32>, dwLoc08, dwArg28, out s0_115, out s1_116, out a0_106, out s2_117, out s3_3253, out s4_119, out s5_3254, out s6_3255, out s8_3256)
	branch a0_106 == 1<32> l2306690A
l2306690A:
	word32 a0_133
	word32 a4_137
	word32 s0_142
	word32 s1_143
	word32 s8_3279
	word32 s6_3278
	word32 a1_3272
	word32 s3_3276
	word32 a2_3273
	word32 a3_3274
	word32 a5_3275
	word32 s5_3277
	ra = fdt_stringlist_get(ra, s4_119, 0x230C1D04<32>, dwLocAC, dwLoc18, s1, dwArg68, out s0_142, out s1_143, out a0_133, out a1_3272, out a2_3273, out a3_3274, out a4_137, out a5_3275, out s2_117, out s3_3276, out s4_119, out s5_3277, out s6_3278, out s8_3279)
	branch a4_137 == 4<32> l2306695E
l2306695E:
	word32 a2_3287
	word32 a3_3288
	word32 a5_3290
	word32 a4_3289
	word32 a1_3286
	branch memcmp(0x230C1D48<32>, a0_133, 4<32>, out a1_3286, out a2_3287, out a3_3288, out a4_3289, out a5_3290) != 0<32> l23066924
l23066970:
	word32 a0_170
	word32 s0_179
	word32 s1_180
	word32 s6_185
	word32 s8_186
	word32 s5_3292
	word32 s3_3291
	ra = fdt_stringlist_count(ra, s4_119, 0x230C1D7C<32>, s2_117, dwLocB8, 0x230C1CBC<32>, dwLoc08, dwArg28, out s0_179, out s1_180, out a0_170, out s2_117, out s3_3291, out s4_119, out s5_3292, out s6_185, out s8_186)
	branch a0_170 == s6_185 l23066A08
l23066A08:
	word32 a0_196
	word32 a4_200
	word32 s0_205
	word32 s1_206
	word32 s3_3298
	word32 a5_3296
	word32 s2_3297
	word32 s5_3299
	word32 s8_3301
	word32 s6_3300
	word32 a3_3295
	word32 a2_3294
	word32 a1_3293
	word32 s4_209
	word32 ra_204 = fdt_stringlist_get(ra, s4_119, s8_186 + -644<i32>, dwLocAC, dwLoc18, s1, dwArg68, out s0_205, out s1_206, out a0_196, out a1_3293, out a2_3294, out a3_3295, out a4_200, out a5_3296, out s2_3297, out s3_3298, out s4_209, out s5_3299, out s6_3300, out s8_3301)
	dwLoc28 = a0_196
	branch a4_200 <=u 32<i32> l23066A66
l23066A24:
	branch CONVERT(Mem217[s1_206 + 1716<i32>:byte], byte, word32) >u 2<32> l23066A66
l23066A2E:
	branch CONVERT(Mem217[0x4202679E<32>:byte], byte, word32) >u 2<32> l23066A66
l23066A3A:
	branch Mem217[0x4200F560<32>:int32] == 0<32> l23066ABC
l23066ABC:
	word32 a5_3314
	xTaskGetTickCount(out a5_3314)
l23066A44:
	word32 a5_3315
	xTaskGetTickCountFromISR(out a5_3315)
l23066A48:
	word32 a5_3322
	word32 s11_3330
	word32 s10_3329
	word32 s7_3327
	word32 s8_3328
	word32 s2_3323
	word32 s6_3326
	word32 s5_3325
	word32 s3_3324
	word32 a2_3319
	word32 a4_3321
	word32 a3_3320
	word32 s1_3316
	word32 a1_3318
	word32 a0_3317
	ra_204 = bl_printk(ra_204, 0x230C1DC0<32>, s0_205 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3316, out a0_3317, out a1_3318, out a2_3319, out a3_3320, out a4_3321, out a5_3322, out s2_3323, out s3_3324, out s4_209, out s5_3325, out s6_3326, out s7_3327, out s8_3328, out s9, out s10_3329, out s11_3330)
l23066A66:
	word32 a0_1306
	word32 a3_1303
	word32 a0_276
	word32 s0_285
	word32 s1_286
	word32 s8_3313
	word32 s6_3312
	word32 s5_3311
	word32 a5_3309
	word32 s3_3310
	word32 a4_3308
	word32 a3_3307
	word32 a1_3306
	ra = fdt_getprop(ra_204, s4_209, 0x230C1DF0<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_285, out s1_286, out a0_276, out a1_3306, out a3_3307, out a4_3308, out a5_3309, out s2_117, out s3_3310, out s4_119, out s5_3311, out s6_3312, out s8_3313)
	branch a0_276 != 0<32> l23066AC8
l23066AC8:
	word32 s7_297 = Mem217[a0_276:int32]
	word32 a0_302
	word32 s0_311
	word32 s1_312
	word32 a1_3331
	word32 a3_3332
	word32 s6_3337
	word32 s8_3338
	word32 a5_3334
	word32 s5_3336
	word32 s3_3335
	word32 a4_3333
	ra = fdt_getprop(ra, s4_119, 0x230C1E2C<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_311, out s1_312, out a0_302, out a1_3331, out a3_3332, out a4_3333, out a5_3334, out s2_117, out s3_3335, out s4_119, out s5_3336, out s6_3337, out s8_3338)
	branch a0_302 != 0<32> l23066B24
l23066B24:
	word32 s9_1041
	word32 a0_327
	word32 a5_3341
	word32 s5_3343
	word32 s3_3342
	word32 s1_1562
	word32 s6_1563
	ra = fdt_subnode_offset(ra, s1_312, s4_119, 0x230C1E58<32>, s2_117, Mem217[a0_302:int32], dwLocB8, dwLoc88, dwArg28, out s0_1457, out s1_1562, out a0_327, out a5_3341, out s2_117, out s3_3342, out s4_119, out s5_3343, out s6_1563)
	s9 = a0_327
	branch a0_327 > 0<32> l23066B8E
l23066B8E:
	word32 a0_353
	word32 s1_363
	word32 s8_3366
	word32 s6_3365
	word32 s3_3363
	word32 s5_3364
	word32 a1_3359
	word32 a5_3362
	word32 a4_3361
	word32 a3_3360
	ra = fdt_getprop(ra, s4_119, 0x230C1EA4<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_1457, out s1_363, out a0_353, out a1_3359, out a3_3360, out a4_3361, out a5_3362, out s2_117, out s3_3363, out s4_119, out s5_3364, out s6_3365, out s8_3366)
	branch a0_353 != 0<32> l23066BD8
l23066BD8:
	word32 s10_374 = Mem217[a0_353:int32]
	word32 a0_379
	word32 a3_3370
	word32 a5_3372
	word32 s3_3373
	word32 s8_3375
	word32 a1_3369
	word32 s5_3374
	word32 a4_3371
	ra = fdt_getprop(ra, s4_119, 0x230C1EAC<32>, dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_1457, out s1_1562, out a0_379, out a1_3369, out a3_3370, out a4_3371, out a5_3372, out s2_117, out s3_3373, out s4_119, out s5_3374, out s6_1563, out s8_3375)
	s9 = a0_379
	branch a0_379 != 0<32> l23066C28
l23066C28:
	fdt32_to_cpu(s10_374)
	s9_1041 = fdt32_to_cpu(Mem217[a0_379:int32])
l23066BF2:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_1562 + 1716<i32>:byte], byte, word32) >u 2<32> l2306692E
l23066BFC:
	branch CONVERT(Mem217[0x4202679E<32>:byte], byte, word32) >u 2<32> l2306692E
l23066C08:
	branch Mem217[0x4200F560<32>:int32] == 0<32> l23066C22
l23066C22:
	word32 a5_3390
	xTaskGetTickCount(out a5_3390)
l23066C12:
	word32 a5_3391
	xTaskGetTickCountFromISR(out a5_3391)
l23066C16:
l23066BA2:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_363 + 1716<i32>:byte], byte, word32) >u 2<32> l2306692E
l23066BAC:
	branch CONVERT(Mem217[0x4202679E<32>:byte], byte, word32) >u 2<32> l2306692E
l23066BB8:
	branch Mem217[0x4200F560<32>:int32] == 0<32> l23066BD2
l23066BD2:
	word32 a5_3376
	xTaskGetTickCount(out a5_3376)
l23066BC2:
	word32 a5_3377
	xTaskGetTickCountFromISR(out a5_3377)
l23066BC6:
l23066B3E:
	branch CONVERT(Mem217[s1_1562 + 1716<i32>:byte], byte, word32) >u 2<32> l23066B7E
l23066B48:
	branch CONVERT(Mem217[0x4202679E<32>:byte], byte, word32) >u 2<32> l23066B7E
l23066B54:
	branch Mem217[0x4200F560<32>:int32] == 0<32> l23066B88
l23066B88:
	word32 a5_3367
	xTaskGetTickCount(out a5_3367)
l23066B5E:
	word32 a5_3368
	xTaskGetTickCountFromISR(out a5_3368)
l23066B62:
	word32 a2_3380
	word32 a5_3383
	word32 s5_3385
	word32 s9_3387
	word32 s11_3389
	word32 s10_3388
	word32 s8_3386
	word32 s3_3384
	word32 a4_3382
	word32 a3_3381
	word32 a1_3379
	word32 a0_3378
	ra = bl_printk(ra, 0x230C1E64<32>, s0_1457 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3378, out a1_3379, out a2_3380, out a3_3381, out a4_3382, out a5_3383, out s2_117, out s3_3384, out s4_119, out s5_3385, out s6_1563, out s7_297, out s8_3386, out s9_3387, out s10_3388, out s11_3389)
l23066B7E:
	s9_1041 = 512<i32>
l23066C3A:
	branch CONVERT(Mem217[s1_1562 + 1716<i32>:byte], byte, word32) >u 2<32> l23066C7E
l23066C44:
	branch CONVERT(Mem217[0x4202679E<32>:byte], byte, word32) >u 2<32> l23066C7E
l23066C50:
	branch Mem217[0x4200F560<32>:int32] == 0<32> l23066CF0
l23066CF0:
	word32 a5_3392
	xTaskGetTickCount(out a5_3392)
l23066C5A:
	word32 a5_3393
	xTaskGetTickCountFromISR(out a5_3393)
l23066C5E:
	word32 s3_3400
	word32 s10_3403
	word32 s8_3402
	word32 s5_3401
	word32 s11_3404
	word32 a5_3399
	word32 a4_3398
	word32 a2_3396
	word32 a3_3397
	word32 a1_3395
	word32 a0_3394
	ra = bl_printk(ra, 0x230C1EB4<32>, s0_1457 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3394, out a1_3395, out a2_3396, out a3_3397, out a4_3398, out a5_3399, out s2_117, out s3_3400, out s4_119, out s5_3401, out s6_1563, out s7_297, out s8_3402, out s9_1041, out s10_3403, out s11_3404)
l23066C7E:
	fdt32_to_cpu(s7_297)
	word32 a0_567 = fdt32_to_cpu(s6_1563)
	dwLocAC = a0_567
	word32 s7_571 = fp + -112<i32>
	word32 s11_1564 = 0x42026000<32>
	word32 s10_1565 = 0x4200F000<32>
l23066C9A:
	byte bLoc98_1813 = SLICE(dwLoc98, byte, 0)
	word32 a0_586
	word32 s0_595
	word32 a5_3410
	word32 s5_3412
	word32 s3_3411
	ra = fdt_subnode_offset(ra, s1_1562, s4_119, 0x230C1EF4<32>, s2_117, s6_1563, dwLocB8, dwLoc88, dwArg28, out s0_595, out s1_1562, out a0_586, out a5_3410, out s2_117, out s3_3411, out s4_119, out s5_3412, out s6_1563)
	branch a0_586 > 0<32> l23066CFC
l23066CFC:
	word32 a0_612
	word32 s0_621
	word32 s3_3405
	word32 s5_3406
	word32 s8_3407
	ra = fdt_stringlist_count(ra, s4_119, Mem585[s7_571:int32], s2_117, dwLocB8, 0x230C1CBC<32>, dwLoc08, dwArg28, out s0_621, out s1_1562, out a0_612, out s2_117, out s3_3405, out s4_119, out s5_3406, out s6_1563, out s8_3407)
	branch a0_612 == 1<32> l23066D5A
l23066D5A:
	word32 a1_640
	word32 a4_643
	word32 s0_648
	word32 a2_3480
	word32 a0_3479
	word32 a3_3481
	word32 s3_3483
	word32 s5_3484
	word32 s8_3485
	word32 a5_3482
	ra = fdt_stringlist_get(ra, s4_119, s6_1563, a0_567, dwLoc18, s1, dwArg68, out s0_648, out s1_1562, out a0_3479, out a1_640, out a2_3480, out a3_3481, out a4_643, out a5_3482, out s2_117, out s3_3483, out s4_119, out s5_3484, out s6_1563, out s8_3485)
	branch a4_643 == 4<32> l23066DB6
l23066DB6:
	word32 a1_3488
	word32 a2_3489
	word32 a4_3491
	word32 a5_3492
	word32 a3_3490
	branch memcmp(0x230C1D48<32>, a1_640, 4<32>, out a1_3488, out a2_3489, out a3_3490, out a4_3491, out a5_3492) != 0<32> l23066D72
l23066DC8:
	word32 a0_676
	word32 s0_685
	word32 s1_686
	word32 s4_689
	word32 a5_3513
	word32 s2_3514
	word32 s5_3516
	word32 s6_3517
	word32 s3_3515
	word32 ra_684 = fdt_subnode_offset(ra, s1_1562, s4_119, 0x230C1F98<32>, s2_117, s6_1563, dwLocB8, dwLoc88, dwArg28, out s0_685, out s1_686, out a0_676, out a5_3513, out s2_3514, out s3_3515, out s4_689, out s5_3516, out s6_3517)
	branch a0_676 > 0<32> l23066F24
l23066F24:
	word32 a0_702
	word32 s0_711
	word32 a3_3519
	word32 a5_3521
	word32 a4_3520
	word32 s3_3522
	word32 s8_3524
	word32 s5_3523
	word32 a1_3518
	ra = fdt_getprop(ra_684, s4_689, Mem660[s7_571 + 4<i32>:int32], dwLocB8, dwLoc98, dwLoc7C, s1, dwArg48, out s0_711, out s1_1562, out a0_702, out a1_3518, out a3_3519, out a4_3520, out a5_3521, out s2_117, out s3_3522, out s4_119, out s5_3523, out s6_1563, out s8_3524)
	branch a0_702 != 0<32> l23066F78
l23066F78:
	Mem726[s7_571 + 8<i32>:byte] = SLICE(fdt32_to_cpu(Mem660[a0_702:word32]), byte, 0)
l23066F36:
	branch CONVERT(Mem660[s1_1562 + 1716<i32>:byte], byte, word32) >u 2<32> l23066CE6
l23066F40:
	branch CONVERT(Mem660[s11_1564 + 1950<i32>:byte], byte, word32) >u 2<32> l23066CE6
l23066F48:
	branch Mem660[s10_1565 + 1376<i32>:int32] == 0<32> l23066F72
l23066F72:
	word32 a5_3527
	xTaskGetTickCount(out a5_3527)
l23066F4E:
	word32 a5_3528
	xTaskGetTickCountFromISR(out a5_3528)
l23066F52:
	word32 a2_3546
	word32 a5_3549
	word32 s5_3551
	word32 s8_3552
	word32 s3_3550
	word32 a4_3548
	word32 a3_3547
	word32 a1_3545
	word32 a0_3544
	ra = bl_printk(ra, 0x230C1CDC<32>, s0_711 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3544, out a1_3545, out a2_3546, out a3_3547, out a4_3548, out a5_3549, out s2_117, out s3_3550, out s4_119, out s5_3551, out s6_1563, out s7_571, out s8_3552, out s9_1041, out s10_1565, out s11_1564)
l23066DDE:
	branch CONVERT(Mem660[s1_686 + 1716<i32>:byte], byte, word32) >u 2<32> l23066DF4
l23066DE8:
	branch CONVERT(Mem660[0x4202679E<32>:byte], byte, word32) <=u 2<32> l23066E88
l23066E88:
	branch Mem660[0x4200F560<32>:int32] == 0<32> l23066F1E
l23066F1E:
	word32 a5_3525
	xTaskGetTickCount(out a5_3525)
l23066E92:
	word32 a5_3526
	xTaskGetTickCountFromISR(out a5_3526)
l23066E96:
	word32 s2_3535
	word32 s11_3543
	word32 a0_3529
	word32 s4_3537
	word32 s3_3536
	word32 s5_3538
	word32 s7_3540
	word32 s8_3541
	word32 s10_3542
	word32 s6_3539
	word32 a1_3530
	word32 a3_3532
	word32 a4_3533
	word32 a5_3534
	word32 a2_3531
	bl_printk(ra_684, 0x230C1F9C<32>, s0_685 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3529, out a1_3530, out a2_3531, out a3_3532, out a4_3533, out a5_3534, out s2_3535, out s3_3536, out s4_3537, out s5_3538, out s6_3539, out s7_3540, out s8_3541, out s9_1041, out s10_3542, out s11_3543)
l23066D72:
	branch CONVERT(Mem660[s1_1562 + 1716<i32>:byte], byte, word32) >u 2<32> l23066CE6
l23066D7C:
	branch CONVERT(Mem660[s11_1564 + 1950<i32>:byte], byte, word32) >u 2<32> l23066CE6
l23066D84:
	branch Mem660[s10_1565 + 1376<i32>:int32] == 0<32> l23066E82
l23066E82:
	word32 a5_3493
	xTaskGetTickCount(out a5_3493)
l23066D8C:
	word32 a5_3494
	xTaskGetTickCountFromISR(out a5_3494)
l23066D90:
	word32 s5_3511
	word32 a1_3505
	word32 a0_3504
	word32 s8_3512
	word32 a2_3506
	word32 a4_3508
	word32 a5_3509
	word32 s3_3510
	word32 a3_3507
	ra = bl_printk(ra, 0x230C1F5C<32>, s0_648 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3504, out a1_3505, out a2_3506, out a3_3507, out a4_3508, out a5_3509, out s2_117, out s3_3510, out s4_119, out s5_3511, out s6_1563, out s7_571, out s8_3512, out s9_1041, out s10_1565, out s11_1564)
l23066D14:
	branch CONVERT(Mem609[s1_1562 + 1716<i32>:byte], byte, word32) >u 2<32> l23066CE6
l23066D1E:
	branch CONVERT(Mem609[s11_1564 + 1950<i32>:byte], byte, word32) >u 2<32> l23066CE6
l23066D26:
	branch Mem609[s10_1565 + 1376<i32>:int32] == 0<32> l23066D54
l23066D54:
	word32 a5_3486
	xTaskGetTickCount(out a5_3486)
l23066D2E:
	word32 a5_3487
	xTaskGetTickCountFromISR(out a5_3487)
l23066D32:
	word32 s5_3502
	word32 s8_3503
	word32 a1_3496
	word32 a0_3495
	word32 a2_3497
	word32 a4_3499
	word32 a5_3500
	word32 s3_3501
	word32 a3_3498
	ra = bl_printk(ra, 0x230C1F28<32>, s0_621 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3495, out a1_3496, out a2_3497, out a3_3498, out a4_3499, out a5_3500, out s2_117, out s3_3501, out s4_119, out s5_3502, out s6_1563, out s7_571, out s8_3503, out s9_1041, out s10_1565, out s11_1564)
l23066CAE:
	branch CONVERT(Mem585[s1_1562 + 1716<i32>:byte], byte, word32) >u 2<32> l23066CE6
l23066CB8:
	branch CONVERT(Mem585[s11_1564 + 1950<i32>:byte], byte, word32) >u 2<32> l23066CE6
l23066CC0:
	branch Mem585[s10_1565 + 1376<i32>:int32] == 0<32> l23066CF6
l23066CF6:
	word32 a5_3408
	xTaskGetTickCount(out a5_3408)
l23066CC6:
	word32 a5_3409
	xTaskGetTickCountFromISR(out a5_3409)
l23066CCA:
	word32 a0_3413
	word32 a3_3416
	word32 a5_3418
	word32 s5_3420
	word32 s8_3421
	word32 s3_3419
	word32 a4_3417
	word32 a2_3415
	word32 a1_3414
	ra = bl_printk(ra, 0x230C1EFC<32>, s0_595 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1562, out a0_3413, out a1_3414, out a2_3415, out a3_3416, out a4_3417, out a5_3418, out s2_117, out s3_3419, out s4_119, out s5_3420, out s6_1563, out s7_571, out s8_3421, out s9_1041, out s10_1565, out s11_1564)
l23066CE6:
	s7_571 = s7_571 + 0xC<32>
	branch fp + -64<i32> != s7_571 l23066C9A
l23066CEE:
l23066EB2:
	branch CONVERT(Mem980[s1_1562 + 1716<i32>:byte], byte, word32) >u 2<32> l23066DF4
l23066EBC:
	branch CONVERT(Mem980[0x4202679E<32>:byte], byte, word32) >u 2<32> l23066DF4
l23066EC8:
	branch Mem980[0x4200F560<32>:int32] == 0<32> l23066F84
l23066F84:
	word32 a5_3422
	xTaskGetTickCount(out a5_3422)
l23066ED2:
	word32 a5_3423
	xTaskGetTickCountFromISR(out a5_3423)
l23066ED6:
	word32 a5_1000 = CONVERT(bLoc44, byte, word32)
	word32 s3_3434
	word32 s7_3438
	word32 s10_3440
	word32 s5_3436
	word32 s11_3441
	word32 s4_3435
	word32 s8_3439
	word32 s6_3437
	word32 s2_3433
	word32 a5_3432
	word32 a3_3430
	word32 a4_3431
	word32 a2_3429
	word32 a1_3428
	word32 a0_3427
	word32 s1_3426
	bl_printk(dwArg0134, 0x230C1FC4<32>, dwArg0134, a5_1000, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3426, out a0_3427, out a1_3428, out a2_3429, out a3_3430, out a4_3431, out a5_3432, out s2_3433, out s3_3434, out s4_3435, out s5_3436, out s6_3437, out s7_3438, out s8_3439, out s9_1041, out s10_3440, out s11_3441)
	dwLocB8 = a5_1000
l23066DF4:
	word32 s5_1046 = CONVERT(bLoc98_1813, byte, word32)
	word32 a5_1050
	bl_uart_flush(s5_1046, out a5_1050)
	word32 s1_1069
	word32 s8_1073
	word32 s2_1070
	word32 a1_1060
	word32 ra_1067 = bl_uart_init(s5_1046, CONVERT(bLoc68_2953, byte, word32), CONVERT(bLoc5C, byte, word32), a5_1050, out s1_1069, out a1_1060, out s2_1070, out s8_1073)
	word32 a4_1081 = CONVERT(Mem1045[s1_1069 + 1716<i32>:byte], byte, word32)
	branch a4_1081 >u 2<32> l23066E2C
l23066E20:
	a4_1081 = CONVERT(Mem1045[0x4202679E<32>:byte], byte, word32)
	branch a4_1081 <=u 2<32> l23066F8A
l23066F8A:
	branch Mem1045[0x4200F560<32>:int32] == 0<32> l23066FF6
l23066FF6:
	word32 a5_3455
	xTaskGetTickCount(out a5_3455)
l23066F94:
	word32 a5_3456
	xTaskGetTickCountFromISR(out a5_3456)
l23066F98:
	word32 s1_1115
	word32 s10_1116
	word32 s7_1123
	word32 s11_3478
	word32 a0_3470
	word32 a3_3472
	word32 a2_3471
	word32 a4_3473
	word32 s3_3475
	word32 s4_3476
	word32 s6_3477
	word32 a5_3474
	ra_1067 = bl_printk(ra_1067, 0x230C2018<32>, dwArg0134 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_1115, out a0_3470, out a1_1060, out a2_3471, out a3_3472, out a4_3473, out a5_3474, out s2_1070, out s3_3475, out s4_3476, out s5_1046, out s6_3477, out s7_1123, out s8_1073, out s9_1041, out s10_1116, out s11_3478)
	a4_1081 = CONVERT(Mem1045[s1_1115 + 1716<i32>:byte], byte, word32)
	branch a4_1081 >u 2<32> l23066E2C
l23066FC4:
	a4_1081 = CONVERT(Mem1045[s7_1123 + 1950<i32>:byte], byte, word32)
	branch a4_1081 >u 2<32> l23066E2C
l23066FCC:
	branch Mem1045[s10_1116 + 1376<i32>:int32] == 0<32> l23066FFC
l23066FFC:
	word32 a5_3457
	xTaskGetTickCount(out a5_3457)
l23066FD2:
	word32 a5_3458
	xTaskGetTickCountFromISR(out a5_3458)
l23066FD6:
	word32 a3_3462
	word32 s3_3464
	word32 a5_3463
	word32 s4_3465
	word32 s7_3467
	word32 s10_3468
	word32 s11_3469
	word32 s6_3466
	word32 s1_3459
	word32 a0_3460
	word32 a2_3461
	ra_1067 = bl_printk(ra_1067, 0x230C2044<32>, dwArg0134 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3459, out a0_3460, out a1_1060, out a2_3461, out a3_3462, out a4_1081, out a5_3463, out s2_1070, out s3_3464, out s4_3465, out s5_1046, out s6_3466, out s7_3467, out s8_1073, out s9_1041, out s10_3468, out s11_3469)
l23066E2C:
	word32 a0_1214
	word32 s0_1219
	word32 s1_1228
	ra = dev_uart_init(ra_1067, s5_1046, a1_1060, s8_1073, s9_1041, a4_1081, s2_1070, mstatus, dwLocB8, dwLocA0, 0x230C1CBC<32>, s10, s6, s4, dwLoc4C, dwLoc48, a1, dwLoc18, dwLoc0C, dwArg28, dwArg58, dwArg68, dwArg98, dwArgA8, out s0_1219, out s1_1228, out a0_1214, out a5_1217, out s2_117, out s4_119, out s9)
	branch a0_1214 == 0<32> l2306692E
l23066E3C:
	a5_1217 = 4<32>
	branch CONVERT(Mem1045[s1_1228 + 1716<i32>:byte], byte, word32) >u 4<32> l2306692E
l23066E46:
	branch CONVERT(Mem1045[0x4202679E<32>:byte], byte, word32) >u 4<32> l2306692E
l23066E52:
	branch Mem1045[0x4200F560<32>:int32] == 0<32> l23067002
l23067002:
	word32 a5_3424
	xTaskGetTickCount(out a5_3424)
l23066E5E:
	word32 a5_3425
	xTaskGetTickCountFromISR(out a5_3425)
l23066E62:
	word32 a2_3445
	word32 s11_3454
	word32 a4_3447
	word32 s1_3442
	word32 a3_3446
	word32 s10_3453
	word32 s3_3448
	word32 s6_3450
	word32 s7_3451
	word32 s8_3452
	word32 s5_3449
	word32 a1_3444
	word32 a0_3443
	ra = bl_printk(ra, 0x230C207C<32>, s0_1219 + -972<i32>, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3442, out a0_3443, out a1_3444, out a2_3445, out a3_3446, out a4_3447, out a5_1217, out s2_117, out s3_3448, out s4_119, out s5_3449, out s6_3450, out s7_3451, out s8_3452, out s9, out s10_3453, out s11_3454)
l23066AE0:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_312 + 1716<i32>:byte], byte, word32) >u 2<32> l2306692E
l23066AEA:
	branch CONVERT(Mem217[0x4202679E<32>:byte], byte, word32) >u 2<32> l2306692E
l23066AF6:
	branch Mem217[0x4200F560<32>:int32] == 0<32> l23066B1E
l23066B1E:
	word32 a5_3344
	xTaskGetTickCount(out a5_3344)
l23066B00:
	word32 a5_3345
	xTaskGetTickCountFromISR(out a5_3345)
l23066B04:
	a3_1303 = s0_311 + -972<i32>
	a0_1306 = 0x230C1E30<32>
l23066A7A:
	a5_1217 = 2<32>
	branch CONVERT(Mem217[s1_286 + 1716<i32>:byte], byte, word32) >u 2<32> l2306692E
l23066A84:
	branch CONVERT(Mem217[0x4202679E<32>:byte], byte, word32) >u 2<32> l2306692E
l23066A90:
	branch Mem217[0x4200F560<32>:int32] == 0<32> l23066AC2
l23066AC2:
	word32 a5_3339
	xTaskGetTickCount(out a5_3339)
l23066A9A:
	word32 a5_3340
	xTaskGetTickCountFromISR(out a5_3340)
l23066A9E:
	a3_1303 = s0_285 + -972<i32>
	a0_1306 = 0x230C1DFC<32>
l23066AB6:
	word32 a2_3349
	word32 a3_3350
	word32 s11_3358
	word32 s7_3355
	word32 s10_3357
	word32 s8_3356
	word32 s3_3352
	word32 s6_3354
	word32 s5_3353
	word32 a4_3351
	word32 a1_3348
	word32 a0_3347
	word32 s1_3346
	ra = bl_printk(ra, a0_1306, a3_1303, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, a0_196, dwLoc04, out s1_3346, out a0_3347, out a1_3348, out a2_3349, out a3_3350, out a4_3351, out a5_1217, out s2_117, out s3_3352, out s4_119, out s5_3353, out s6_3354, out s7_3355, out s8_3356, out s9, out s10_3357, out s11_3358)
l23066986:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_180 + 1716<i32>:byte], byte, word32) >u 2<32> l2306692E
l23066990:
	branch CONVERT(Mem70[0x4202679E<32>:byte], byte, word32) >u 2<32> l2306692E
l2306699C:
	branch Mem70[0x4200F560<32>:int32] == 0<32> l23066A02
l23066A02:
	word32 a5_3302
	xTaskGetTickCount(out a5_3302)
l230669A6:
	word32 a5_3303
	xTaskGetTickCountFromISR(out a5_3303)
l230669AA:
	a3_1380 = s0_179 + -972<i32>
	a0_1383 = 0x230C1D84<32>
l23066924:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_143 + 1716<i32>:byte], byte, word32) <=u 2<32> l230669C6
l230669C6:
	branch CONVERT(Mem70[0x4202679E<32>:byte], byte, word32) >u 2<32> l2306692E
l230669D2:
	branch Mem70[0x4200F560<32>:int32] == 0<32> l230669FC
l230669FC:
	word32 a5_3304
	xTaskGetTickCount(out a5_3304)
l230669DC:
	word32 a5_3305
	xTaskGetTickCountFromISR(out a5_3305)
l230669E0:
	a3_1380 = s0_142 + -972<i32>
	a0_1383 = 0x230C1D50<32>
l230668C0:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_116 + 1716<i32>:byte], byte, word32) >u 2<32> l2306692E
l230668CA:
	branch CONVERT(Mem70[0x4202679E<32>:byte], byte, word32) >u 2<32> l2306692E
l230668D6:
	branch Mem70[0x4200F560<32>:int32] == 0<32> l23066904
l23066904:
	word32 a5_3280
	xTaskGetTickCount(out a5_3280)
l230668E0:
	word32 a5_3281
	xTaskGetTickCountFromISR(out a5_3281)
l230668E4:
	a3_1380 = s0_115 + -972<i32>
	a0_1383 = 0x230C1D0C<32>
l2306685E:
	a5_1217 = 2<32>
	branch CONVERT(Mem70[s1_91 + 1716<i32>:byte], byte, word32) >u 2<32> l2306692E
l23066868:
	branch CONVERT(Mem70[0x4202679E<32>:byte], byte, word32) >u 2<32> l2306692E
l23066874:
	branch Mem70[0x4200F560<32>:int32] == 0<32> l230668A2
l230668A2:
	word32 a5_3257
	xTaskGetTickCount(out a5_3257)
l2306687E:
	word32 a5_3258
	xTaskGetTickCountFromISR(out a5_3258)
l23066882:
l2306688A:
	a3_1380 = s0_1457 + -972<i32>
	a0_1383 = 0x230C1CDC<32>
l230668FE:
	word32 a4_3264
	word32 s7_3268
	word32 s1_3259
	word32 a1_3261
	word32 a0_3260
	word32 a2_3262
	word32 a3_3263
	word32 s3_3265
	word32 s5_3266
	word32 s6_3267
	word32 s8_3269
	word32 s10_3270
	word32 s11_3271
	ra = bl_printk(ra, a0_1383, a3_1380, dwLocB8, dwLoc98, dwLoc50, dwLoc4C, dwLoc28, dwLoc04, out s1_3259, out a0_3260, out a1_3261, out a2_3262, out a3_3263, out a4_3264, out a5_1217, out s2_117, out s3_3265, out s4_119, out s5_3266, out s6_3267, out s7_3268, out s8_3269, out s9, out s10_3270, out s11_3271)
l2306692E:
	a5_1522 = a5_1217 + 4<32>
	branch s2_117 == 0<32> l2306689E
l2306689E:
	s2_1525 = 1<32>
l23066938:
	Mem1527[a5_1522:byte] = SLICE(s2_117, byte, 0)
l2306693E:
	word32 s10_1539 = Mem1529[dwArg0118 + 12<i32>:word32]
	word32 s6_1540 = Mem1529[dwArg0118 + 44<i32>:word32]
	s2Out = Mem1529[dwArg0118 + 76<i32>:word32]
	s6Out = s6_1540
	s9Out = s9
	s10Out = s10_1539
	return ra
vfs_uart_init_exit:


word32 hal_uart_send_flush(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfs_uart_sync
// MayUse:  a0:[0..31]
// LiveOut: a5 s1
// Trashed: a0 a2 a5 s1 tp
// Preserved: sp
hal_uart_send_flush_entry:
l23067008:
	word32 a5_10
	word32 s1_11 = bl_uart_flush(CONVERT(Mem5[a0:byte], byte, word32), out a5_10)
	a5Out = a5_10
	return s1_11
hal_uart_send_flush_exit:


void hal_uart_setbaud(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_uart_setbaud_entry:
l2306701C:
	word32 a0_5 = CONVERT(Mem0[a0:byte], byte, word32)
l23067020_thunk_bl_uart_setbaud:
	bl_uart_setbaud(a0_5)
	return
hal_uart_setbaud_exit:


void hal_uart_setconfig(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      uart_ioctl_cmd_setconfig
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_uart_setconfig_entry:
l23067024:
	word32 a0_5 = CONVERT(Mem0[a0:byte], byte, word32)
l23067028_thunk_bl_uart_setconfig:
	bl_uart_setconfig(a0_5)
	return
hal_uart_setconfig_exit:


word32 hal_gpio_init_from_dts(word32 ra, word32 a0, word32 s2, word32 s9, word32 s10, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg14, word32 dwArg1C, word32 dwArg4C, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArg0174, ptr32 & s0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s10:[0..31] s2:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +001C:[0..31] Stack +004C:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +0174:[0..31]
// LiveOut: a3 a4 a5 ra s0 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: mstatus sp
hal_gpio_init_from_dts_entry:
l2306702C:
	word32 dwLoc48_959 = s2
	word32 dwArg18_1007 = 0<32>
	word32 a0_38
	word32 a5_43
	word32 s6_2509
	word32 s0_2500
	word32 a1_2502
	word32 a3_2503
	word32 s1_2501
	word32 s5_2508
	word32 s4_2507
	word32 a4_2504
	word32 s3_2506
	word32 s2_2505
	word32 s8_2510
	word32 ra_108 = fdt_getprop(ra, a0, 0x230C20A4<32>, dwLoc78, s10, dwLoc3C, dwArg58, dwArg88, out s0_2500, out s1_2501, out a0_38, out a1_2502, out a3_2503, out a4_2504, out a5_43, out s2_2505, out s3_2506, out s4_2507, out s5_2508, out s6_2509, out s8_2510)
	word32 s1_109 = 0xFFFFFFFF<32>
	branch a0_38 == 0<32> l23067082
l23067060:
	s1_109 = a5_43 << 0x18<u32> | a5_43 >>u 0x18<u32> | (a5_43 >>u 8<u32> & 255<i32>) << 16<i32> | (a5_43 >>u 16<i32> & 255<i32>) << 8<i32>
l23067082:
	word32 s0_175 = 0x42026000<32>
	word32 a4_106 = CONVERT(Mem37[0x420266B4<32>:byte], byte, word32)
	word32 a5_100 = 2<32>
	branch a4_106 >u 2<32> l230670CE
l23067090:
	a4_106 = CONVERT(Mem37[0x4202679F<32>:byte], byte, word32)
	branch a4_106 >u 2<32> l230670CE
l2306709C:
	branch Mem37[0x4200F560<32>:int32] == 0<32> l23067178
l23067178:
	word32 a5_2511
	xTaskGetTickCount(out a5_2511)
l230670A6:
	word32 a5_2512
	xTaskGetTickCountFromISR(out a5_2512)
l230670AA:
	word32 a1_2544
	word32 s3_2548
	word32 s8_2553
	word32 s9_2554
	word32 s11_2556
	word32 s10_2555
	word32 a0_2543
	word32 a3_2546
	word32 a2_2545
	word32 s4_2549
	word32 s2_2547
	word32 s5_2550
	word32 s6_2551
	word32 s7_2552
	ra_108 = bl_printk(ra_108, 0x230C20B8<32>, 0x230C20AC<32>, dwLoc78, s10, dwLoc10, dwLoc0C, 0<32>, ra, out s1_109, out a0_2543, out a1_2544, out a2_2545, out a3_2546, out a4_106, out a5_100, out s2_2547, out s3_2548, out s4_2549, out s5_2550, out s6_2551, out s7_2552, out s8_2553, out s9_2554, out s10_2555, out s11_2556)
l230670CE:
	word32 s7_122 = 0<32>
	word32 s2_125 = 0x42026000<32>
	word32 s3_126 = 0x4200F000<32>
l230670E4:
	byte bLoc46_1013 = SLICE(dwLoc48_959, byte, 16)
	byte bLoc47_1009 = SLICE(dwLoc48_959, byte, 8)
	byte bLoc45_1021 = SLICE(dwLoc48_959, byte, 24)
	branch s7_122 >= s1_109 l23067158
l230670E8:
	word32 s1_147
	word32 s10_148
	word32 s11_149
	word32 s2_150
	word32 s5_153
	word32 s6_154
	word32 s9_157
	word32 a0_166
	word32 s5_180
	word32 a4_2518
	word32 a2_2516
	word32 s8_2523
	word32 s0_2513
	word32 a1_2515
	word32 a0_2514
	word32 a3_2517
	word32 a5_2519
	word32 s3_2521
	word32 a7_2520
	word32 a5_2525
	word32 s1_2524
	word32 s4_2522
	word32 s4_2526
	word32 s6_2527
	word32 s7_155
	word32 ra_174 = fdt_subnode_offset(snprintf(ra_108, fp + -88<i32>, 0xB<32>, 0x230C20E8<32>, dwLoc68, dwLoc48_959, dwLoc1C, dwArg00, dwArg04, s9, dwArg4C, out s0_2513, out s1_147, out a0_2514, out a1_2515, out a2_2516, out a3_2517, out a4_2518, out a5_2519, out a7_2520, out s2_150, out s3_2521, out s4_2522, out s5_153, out s6_154, out s7_155, out s8_2523, out s9_157, out s10_148, out s11_149), s1_147, s5_153, fp + -88<i32>, s2_150, s6_154, dwLoc78, dwLoc48_959, dwArg68, out s0_175, out s1_2524, out a0_166, out a5_2525, out s2_125, out s3_126, out s4_2526, out s5_180, out s6_2527)
	branch a0_166 >= 0<32> l23067184
l23067184:
	word32 dwLoc48_2478
	word32 a0_507
	word32 a3_505
	word32 a0_206
	word32 s5_220
	word32 a1_2530
	word32 s8_2540
	word32 t1_2528
	word32 a3_2532
	word32 a2_2531
	word32 a0_2529
	word32 a4_2533
	word32 a5_2534
	word32 a1_2535
	word32 a5_2538
	word32 a2_2536
	word32 s6_2539
	word32 a4_2537
	word32 s4_219
	word32 a3_209
	ra_108 = fdt_stringlist_get(memset(ra_174, fp + -76<i32>, 0<32>, 0xC<32>, out t1_2528, out a0_2529, out a1_2530, out a2_2531, out a3_2532, out a4_2533, out a5_2534), s5_180, 0x230C1D04<32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_206, out a1_2535, out a2_2536, out a3_209, out a4_2537, out a5_2538, out s2_125, out s3_126, out s4_219, out s5_220, out s6_2539, out s8_2540)
	branch s9_157 == 4<32> l23067220
l23067220:
	word32 a1_2570
	word32 a2_2571
	word32 a4_2572
	word32 a5_2573
	branch memcmp(0x230C1D48<32>, a0_206, 4<32>, out a1_2570, out a2_2571, out a3_209, out a4_2572, out a5_2573) != 0<32> l230671B0
l23067232:
	word32 a0_577
	word32 a3_575
	word32 a0_243
	word32 a5_248
	word32 s5_257
	word32 a4_2575
	word32 s6_2576
	word32 s8_2577
	word32 a1_2574
	ra_108 = fdt_getprop(ra_108, s5_220, s10_148 + -104<i32>, dwLoc78, s10, dwLoc3C, dwArg58, dwArg88, out s0_175, out s1_109, out a0_243, out a1_2574, out a3_209, out a4_2575, out a5_248, out s2_125, out s3_126, out s4_219, out s5_257, out s6_2576, out s8_2577)
	branch a0_243 != 0<32> l230672C0
l230672C0:
	dwArg18_1007 = (a5_248 >>u 16<i32> & 255<i32>) << 8<i32> | ((a5_248 << 0x18<u32> | a5_248 >>u 0x18<u32>) | (a5_248 >>u 8<u32> & 255<i32>) << 16<i32>)
	word32 a0_281
	word32 a4_285
	word32 s5_295
	word32 a1_2578
	word32 s6_2581
	word32 s8_2582
	word32 a2_2579
	word32 a5_2580
	ra_108 = fdt_stringlist_get(ra_108, s5_257, s11_149 + -268<i32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_281, out a1_2578, out a2_2579, out a3_209, out a4_285, out a5_2580, out s2_125, out s3_126, out s4_219, out s5_295, out s6_2581, out s8_2582)
	branch a4_285 != 3<32> l230673D6
l230672FE:
	word32 a1_2609
	word32 a5_2612
	word32 a2_2610
	word32 a4_2611
	branch memcmp(0x230C3564<32>, a0_281, 3<32>, out a1_2609, out a2_2610, out a3_209, out a4_2611, out a5_2612) != 0<32> l230673D6
l230673D6:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem280[s0_175 + 1716<i32>:byte], byte, word32) >u 4<32> l230671BA
l230673E0:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem280[s2_125 + 1951<i32>:byte], byte, word32) >u 4<32> l230671BA
l230673E8:
	branch Mem280[s3_126 + 1376<i32>:int32] == 0<32> l23067412
l23067412:
	word32 a5_2669
	xTaskGetTickCount(out a5_2669)
l230673EE:
	word32 a5_2670
	xTaskGetTickCountFromISR(out a5_2670)
l230673F2:
l23067310:
	bLoc47_1009 = 0<8>
	word32 a0_340
	word32 a5_345
	word32 s5_354
	word32 s6_2616
	word32 s8_2617
	word32 a4_2615
	word32 a2_2614
	word32 a1_2613
	ra_108 = fdt_stringlist_get(ra_108, s5_295, 0x230C2168<32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_340, out a1_2613, out a2_2614, out a3_209, out a4_2615, out a5_345, out s2_125, out s3_126, out s4_219, out s5_354, out s6_2616, out s8_2617)
	branch a5_345 != 2<32> l23067436
l23067332:
	word32 a5_369
	word32 a4_371
	word32 a2_2619
	word32 a1_2618
	branch memcmp(0x230C21A4<32>, a0_340, 2<32>, out a1_2618, out a2_2619, out a3_209, out a4_371, out a5_369) != 0<32> l23067418
l23067418:
	branch a4_371 != a5_369 l23067436
l2306741E:
	word32 a4_2647
	word32 a5_2648
	word32 a2_2646
	word32 a1_2645
	branch memcmp(0x230C21A8<32>, a0_340, 2<32>, out a1_2645, out a2_2646, out a3_209, out a4_2647, out a5_2648) != 0<32> l23067436
l23067436:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word16, 16), 0<8>, 0<8>) (alias)
	branch CONVERT(Mem387[s0_175 + 1716<i32>:byte], byte, word32) >u 4<32> l230671BA
l23067440:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word16, 16), 0<8>, 0<8>) (alias)
	branch CONVERT(Mem387[s2_125 + 1951<i32>:byte], byte, word32) >u 4<32> l230671BA
l23067448:
	branch Mem387[s3_126 + 1376<i32>:int32] == 0<32> l2306745C
l2306745C:
	word32 a5_2654
	xTaskGetTickCount(out a5_2654)
l2306744E:
	word32 a5_2655
	xTaskGetTickCountFromISR(out a5_2655)
l23067452:
l23067430:
	bLoc46_1013 = 0<8>
l23067348:
	bLoc46_1013 = 1<8>
l2306734E:
	word32 a0_419
	word32 s5_433
	word32 a5_2651
	word32 s8_2653
	word32 s6_2652
	word32 a2_2650
	word32 a1_2649
	word32 a4_423
	ra_108 = fdt_stringlist_get(ra_108, s5_354, 0x230C54F8<32>, dwLoc6C, s9, dwArg58, dwArgA8, out s0_175, out s1_109, out a0_419, out a1_2649, out a2_2650, out a3_209, out a4_423, out a5_2651, out s2_125, out s3_126, out s4_219, out s5_433, out s6_2652, out s8_2653)
	branch a4_423 != 5<32> l23067462
l2306736C:
	word32 a1_2620
	word32 a5_2622
	word32 a2_2621
	branch memcmp(0x230C21AC<32>, a0_419, 5<32>, out a1_2620, out a2_2621, out a3_209, out a4_423, out a5_2622) != 0<32> l23067462
l23067462:
	branch a4_423 != 9<32> l23067484
l2306746A:
	word32 a2_2637
	word32 a4_2638
	word32 a5_2639
	word32 a1_2636
	branch memcmp(0x230C21B4<32>, a0_419, 9<32>, out a1_2636, out a2_2637, out a3_209, out a4_2638, out a5_2639) != 0<32> l23067484
l23067484:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem418[s0_175 + 1716<i32>:byte], byte, word32) >u 4<32> l230671BA
l2306748E:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem418[s2_125 + 1951<i32>:byte], byte, word32) >u 4<32> l230671BA
l23067496:
	branch Mem418[s3_126 + 1376<i32>:int32] == 0<32> l230674AA
l230674AA:
	word32 a5_2667
	xTaskGetTickCount(out a5_2667)
l2306749C:
	word32 a5_2668
	xTaskGetTickCountFromISR(out a5_2668)
l230674A0:
l230673FA:
	a3_505 = s4_219 + 172<i32>
	a0_507 = 0x230C2170<32>
l2306747C:
	bLoc45_1021 = 1<8>
l23067380:
	bLoc45_1021 = 0<8>
l23067384:
	word32 a0_524
	word32 a5_529
	word32 s8_2644
	word32 s6_2643
	word32 s5_2642
	word32 a1_2640
	word32 a4_2641
	ra_108 = fdt_getprop(ra_108, s5_433, 0x230BFE94<32>, dwLoc78, s10, dwLoc3C, dwArg58, dwArg88, out s0_175, out s1_109, out a0_524, out a1_2640, out a3_209, out a4_2641, out a5_529, out s2_125, out s3_126, out s4_219, out s5_2642, out s6_2643, out s8_2644)
	branch a0_524 != 0<32> l230674B6
l230674B6:
	word32 a3_549 = a5_529 >>u 8<u32> & 255<i32>
	a3_209 = a3_549 << 16<i32>
	dwArg1C = (a5_529 >>u 16<i32> & 255<i32>) << 8<i32> | ((a5_529 << 0x18<u32> | a5_529 >>u 0x18<u32>) | a3_549 << 16<i32>)
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 1<8>) (alias)
l2306739A:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem523[s0_175 + 1716<i32>:byte], byte, word32) >u 4<32> l230671BA
l230673A4:
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, 0<8>, 0<8>) (alias)
	branch CONVERT(Mem523[s2_125 + 1951<i32>:byte], byte, word32) >u 4<32> l230671BA
l230673AC:
	branch Mem523[s3_126 + 1376<i32>:int32] == 0<32> l230674B0
l230674B0:
	word32 a5_2623
	xTaskGetTickCount(out a5_2623)
l230673B4:
	word32 a5_2624
	xTaskGetTickCountFromISR(out a5_2624)
l230673B8:
	a3_575 = s4_219 + 172<i32>
	a0_577 = 0x230C21C0<32>
l23067242:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch s9_157 <u CONVERT(Mem205[s0_175 + 1716<i32>:byte], byte, word32) l230671BA
l2306724A:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch s9_157 <u CONVERT(Mem205[s2_125 + 1951<i32>:byte], byte, word32) l230671BA
l23067252:
	branch Mem205[s3_126 + 1376<i32>:int32] == 0<32> l230672BA
l230672BA:
	word32 a5_2583
	xTaskGetTickCount(out a5_2583)
l23067258:
	word32 a5_2584
	xTaskGetTickCountFromISR(out a5_2584)
l2306725C:
	a3_575 = s4_219 + 172<i32>
	a0_577 = 0x230C213C<32>
l23067278:
	word32 a5_2629
	word32 s5_2630
	word32 s10_2634
	word32 s11_2635
	word32 s9_2633
	word32 s6_2631
	word32 s8_2632
	word32 a1_2626
	word32 a4_2628
	word32 a2_2627
	word32 a0_2625
	ra_108 = bl_printk(ra_108, a0_577, a3_575, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2625, out a1_2626, out a2_2627, out a3_209, out a4_2628, out a5_2629, out s2_125, out s3_126, out s4_219, out s5_2630, out s6_2631, out s7_155, out s8_2632, out s9_2633, out s10_2634, out s11_2635)
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, bLoc47_1009, 0<8>) (alias)
l230671B0:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem205[s0_175 + 1716<i32>:byte], byte, word32) <=u 2<32> l2306727E
l2306727E:
	dwLoc48_2478 = SEQ(SLICE(dwLoc48_959, word24, 8), 0<8>) (alias)
	branch CONVERT(Mem205[s2_125 + 1951<i32>:byte], byte, word32) >u 2<32> l230671BA
l23067286:
	branch Mem205[s3_126 + 1376<i32>:int32] == 0<32> l230672B4
l230672B4:
	word32 a5_2671
	xTaskGetTickCount(out a5_2671)
l2306728C:
	word32 a5_2672
	xTaskGetTickCountFromISR(out a5_2672)
l23067290:
	a3_505 = s4_219 + 172<i32>
	a0_507 = 0x230C2114<32>
l230672AE:
	word32 a1_2657
	word32 a2_2658
	word32 s6_2662
	word32 s8_2663
	word32 s10_2665
	word32 s11_2666
	word32 s9_2664
	word32 s5_2661
	word32 a4_2659
	word32 a5_2660
	word32 a0_2656
	ra_108 = bl_printk(ra_108, a0_507, a3_505, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2656, out a1_2657, out a2_2658, out a3_209, out a4_2659, out a5_2660, out s2_125, out s3_126, out s4_219, out s5_2661, out s6_2662, out s7_155, out s8_2663, out s9_2664, out s10_2665, out s11_2666)
	dwLoc48_2478 = SEQ(bLoc45_1021, bLoc46_1013, bLoc47_1009, 0<8>) (alias)
l230671BA:
	a5_100 = CONVERT(SLICE(dwLoc48_2478, byte, 0), byte, word32)
	a4_106 = 1<32>
	branch a5_100 != 1<32> l230674E8
l230674E8:
	branch a5_100 != 0<32> l2306721C
l230674EC:
	a4_106 = CONVERT(Mem698[s0_175 + 1716<i32>:byte], byte, word32)
	a5_100 = 4<32>
	branch a4_106 >u 4<32> l2306721C
l230674F6:
	a4_106 = CONVERT(Mem698[s2_125 + 1951<i32>:byte], byte, word32)
	branch a4_106 >u 4<32> l2306721C
l230674FE:
	branch Mem698[s3_126 + 1376<i32>:int32] == 0<32> l2306752A
l2306752A:
	word32 a5_2585
	xTaskGetTickCount(out a5_2585)
l23067504:
	word32 a5_2586
	xTaskGetTickCountFromISR(out a5_2586)
l23067508:
	word32 a3_2601
	word32 s4_2602
	word32 s9_2606
	word32 s10_2607
	word32 s11_2608
	word32 s8_2605
	word32 s5_2603
	word32 s6_2604
	word32 a0_2598
	word32 a2_2600
	word32 a1_2599
	ra_108 = bl_printk(ra_108, 0x230C21C0<32>, s4_219 + 172<i32>, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2598, out a1_2599, out a2_2600, out a3_2601, out a4_106, out a5_100, out s2_125, out s3_126, out s4_2602, out s5_2603, out s6_2604, out s7_155, out s8_2605, out s9_2606, out s10_2607, out s11_2608)
l230671C4:
	word32 a4_758 = CONVERT(Mem698[s0_175 + 1716<i32>:byte], byte, word32)
	word32 a5_759 = 2<32>
	dwLoc48_1481 = dwLoc48_2478 (alias)
	branch a4_758 >u 2<32> l23067214
l230671CE:
	a4_758 = CONVERT(Mem698[s2_125 + 1951<i32>:byte], byte, word32)
	branch a4_758 >u 2<32> l23067214
l230671D6:
	word32 a5_763
	branch Mem698[s3_126 + 1376<i32>:int32] == 0<32> l230674E2
l230674E2:
	xTaskGetTickCount(out a5_763)
l230671DE:
	xTaskGetTickCountFromISR(out a5_763)
l230671E2:
	dwArg00 = a5_763
	word32 s9_2595
	word32 s10_2596
	word32 s11_2597
	word32 s5_2592
	word32 s8_2594
	word32 s6_2593
	word32 s4_2591
	word32 a1_2588
	word32 s3_2590
	word32 a2_2589
	word32 a0_2587
	ra_108 = bl_printk(ra_108, 0x230C21F0<32>, dwArg0174 + 172<i32>, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_109, out a0_2587, out a1_2588, out a2_2589, out a3_209, out a4_758, out a5_759, out s2_125, out s3_2590, out s4_2591, out s5_2592, out s6_2593, out s7_155, out s8_2594, out s9_2595, out s10_2596, out s11_2597)
l23067214:
	ra_108 = loopset_led_trigger(ra_108, s1_109, a3_209, a4_758, a5_759, s2_125, mstatus, dwLoc78, dwLoc6C, dwLoc60, dwLoc5C, dwLoc48_2478, dwLoc30, dwLoc2C, dwLoc28, dwLoc08, dwArg14, dwArg1C, dwArg64, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgD8, out s0_175, out s1_109, out a4_106, out a5_100, out s2_125, out s3_126, out mstatus)
l2306721C:
	s7_122 = s7_155 + 1<32>
	dwLoc48_959 = dwLoc48_1481
l23067110:
	a4_106 = CONVERT(Mem165[s0_175 + 1716<i32>:byte], byte, word32)
	a5_100 = 2<32>
	branch a4_106 >u 2<32> l23067158
l2306711A:
	a4_106 = CONVERT(Mem165[0x4202679F<32>:byte], byte, word32)
	branch a4_106 >u 2<32> l23067158
l23067126:
	branch Mem165[0x4200F560<32>:int32] == 0<32> l2306717E
l2306717E:
	word32 a5_2541
	xTaskGetTickCount(out a5_2541)
l23067130:
	word32 a5_2542
	xTaskGetTickCountFromISR(out a5_2542)
l23067134:
	word32 s9_2567
	word32 s11_2569
	word32 s10_2568
	word32 s8_2566
	word32 s5_2563
	word32 s7_2565
	word32 s6_2564
	word32 s4_2562
	word32 a3_2561
	word32 a1_2559
	word32 a2_2560
	word32 s1_2557
	word32 a0_2558
	bl_printk(ra_174, 0x230C20F0<32>, 0x230C20AC<32>, dwLoc78, s10, dwLoc10, dwLoc0C, dwArg18_1007, ra, out s1_2557, out a0_2558, out a1_2559, out a2_2560, out a3_2561, out a4_106, out a5_100, out s2_125, out s3_126, out s4_2562, out s5_2563, out s6_2564, out s7_2565, out s8_2566, out s9_2567, out s10_2568, out s11_2569)
l23067158:
	s0Out = s0_175
	a3Out = dwLoc14
	a4Out = a4_106
	a5Out = a5_100
	s2Out = s2_125
	s3Out = s3_126
	return dwArg0158
hal_gpio_init_from_dts_exit:


word32 _dump_partition(word32 ra, word32 a3, word32 s6, word32 dwArg1C, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_dump
//      hal_boot2_init
// MayUse:  a3:[0..31] ra:[0..31] s6:[0..31] Stack +001C:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut: ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
_dump_partition_entry:
l23067530:
	word32 a3_39
	word32 a3_64
	word32 a3_89
	word32 a3_114
	word32 a3_139
	word32 a3_164
	word32 s1_193
	word32 a5_540
	word32 a4_539
	word32 a2_538
	word32 a1_537
	word32 a0_536
	word32 s1_535
	word32 s2_541
	word32 s3_542
	word32 s4_543
	word32 s5_544
	word32 s6_545
	word32 s7_546
	word32 s8_547
	word32 s9_548
	word32 s10_549
	word32 s11_550
	word32 s1_551
	word32 a0_552
	word32 a1_553
	word32 a2_554
	word32 a4_555
	word32 a5_556
	word32 s2_557
	word32 s3_558
	word32 s4_559
	word32 s5_560
	word32 s6_561
	word32 s7_562
	word32 s8_563
	word32 s9_564
	word32 s10_565
	word32 s11_566
	word32 s1_567
	word32 a0_568
	word32 a1_569
	word32 a2_570
	word32 a4_571
	word32 a5_572
	word32 s2_573
	word32 s3_574
	word32 s4_575
	word32 s5_576
	word32 s6_577
	word32 s7_578
	word32 s8_579
	word32 s9_580
	word32 s10_581
	word32 s11_582
	word32 s1_583
	word32 a0_584
	word32 a1_585
	word32 a2_586
	word32 a4_587
	word32 a5_588
	word32 s2_589
	word32 s3_590
	word32 s4_591
	word32 s5_592
	word32 s6_593
	word32 s7_594
	word32 s8_595
	word32 s9_596
	word32 s10_597
	word32 s11_598
	word32 s1_599
	word32 a0_600
	word32 a1_601
	word32 a2_602
	word32 a4_603
	word32 a5_604
	word32 s2_605
	word32 s3_606
	word32 s4_607
	word32 s5_608
	word32 s6_609
	word32 s7_610
	word32 s8_611
	word32 s9_612
	word32 s10_613
	word32 s11_614
	word32 s1_615
	word32 a0_616
	word32 a1_617
	word32 a2_618
	word32 a4_619
	word32 a5_620
	word32 s2_621
	word32 s3_622
	word32 s4_623
	word32 s5_624
	word32 s6_625
	word32 s7_626
	word32 s8_627
	word32 s9_628
	word32 s10_629
	word32 s11_630
	word32 a0_631
	word32 a1_632
	word32 a2_633
	word32 a4_634
	word32 a5_635
	word32 s2_636
	word32 s3_637
	word32 s4_638
	word32 s5_639
	word32 s6_640
	word32 s7_641
	word32 s8_642
	word32 s9_643
	word32 s10_644
	word32 s11_645
	word32 a3_189
	word32 ra_192 = bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(ra, 0x230C2258<32>, a3, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_535, out a0_536, out a1_537, out a2_538, out a3_39, out a4_539, out a5_540, out s2_541, out s3_542, out s4_543, out s5_544, out s6_545, out s7_546, out s8_547, out s9_548, out s10_549, out s11_550), 0x230C227C<32>, a3_39, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_551, out a0_552, out a1_553, out a2_554, out a3_64, out a4_555, out a5_556, out s2_557, out s3_558, out s4_559, out s5_560, out s6_561, out s7_562, out s8_563, out s9_564, out s10_565, out s11_566), 0x230C2290<32>, a3_64, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_567, out a0_568, out a1_569, out a2_570, out a3_89, out a4_571, out a5_572, out s2_573, out s3_574, out s4_575, out s5_576, out s6_577, out s7_578, out s8_579, out s9_580, out s10_581, out s11_582), 0x230C22A4<32>, a3_89, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_583, out a0_584, out a1_585, out a2_586, out a3_114, out a4_587, out a5_588, out s2_589, out s3_590, out s4_591, out s5_592, out s6_593, out s7_594, out s8_595, out s9_596, out s10_597, out s11_598), 0x230C22B4<32>, a3_114, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_599, out a0_600, out a1_601, out a2_602, out a3_139, out a4_603, out a5_604, out s2_605, out s3_606, out s4_607, out s5_608, out s6_609, out s7_610, out s8_611, out s9_612, out s10_613, out s11_614), 0x230C22C0<32>, a3_139, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_615, out a0_616, out a1_617, out a2_618, out a3_164, out a4_619, out a5_620, out s2_621, out s3_622, out s4_623, out s5_624, out s6_625, out s7_626, out s8_627, out s9_628, out s10_629, out s11_630), 0x230C22D0<32>, a3_164, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_193, out a0_631, out a1_632, out a2_633, out a3_189, out a4_634, out a5_635, out s2_636, out s3_637, out s4_638, out s5_639, out s6_640, out s7_641, out s8_642, out s9_643, out s10_644, out s11_645)
	word32 s2_206 = 0<32>
	word32 s1_207 = s1_193 + -88<i32>
	word32 s5_208 = 0x230C2000<32>
l230675DE:
	branch s2_206 < CONVERT(Mem32[s1_207 + 10<i32>:uint16], uint16, word32) l23067606
l23067606:
	word32 a3_232
	word32 s6_243
	word32 a3_257
	word32 s7_269
	word32 a3_281
	word32 s8_294
	word32 a3_305
	word32 s9_319
	word32 a3_329
	word32 s4_338
	word32 a3_353
	word32 s4_362
	word32 a3_378
	word32 s4_387
	word32 a3_402
	word32 s4_411
	word32 a3_426
	word32 s10_431
	word32 s1_646
	word32 a0_647
	word32 a1_648
	word32 a2_649
	word32 a4_650
	word32 a5_651
	word32 s2_652
	word32 s3_653
	word32 s4_654
	word32 s5_655
	word32 s7_656
	word32 s8_657
	word32 s9_658
	word32 s10_659
	word32 s11_660
	word32 s1_661
	word32 a0_662
	word32 a1_663
	word32 a2_664
	word32 a4_665
	word32 a5_666
	word32 s2_667
	word32 s3_668
	word32 s4_669
	word32 s5_670
	word32 s6_671
	word32 s8_672
	word32 s9_673
	word32 s10_674
	word32 s11_675
	word32 s1_676
	word32 a0_677
	word32 a1_678
	word32 a2_679
	word32 a4_680
	word32 a5_681
	word32 s2_682
	word32 s3_683
	word32 s4_684
	word32 s5_685
	word32 s6_686
	word32 s7_687
	word32 s9_688
	word32 s10_689
	word32 s11_690
	word32 s1_691
	word32 a0_692
	word32 a1_693
	word32 a2_694
	word32 a4_695
	word32 a5_696
	word32 s2_697
	word32 s3_698
	word32 s4_699
	word32 s5_700
	word32 s6_701
	word32 s7_702
	word32 s8_703
	word32 s10_704
	word32 s11_705
	word32 s1_706
	word32 a0_707
	word32 a1_708
	word32 a2_709
	word32 a4_710
	word32 a5_711
	word32 s2_712
	word32 s3_713
	word32 s5_714
	word32 s6_715
	word32 s7_716
	word32 s8_717
	word32 s9_718
	word32 s10_719
	word32 s11_720
	word32 s1_721
	word32 a0_722
	word32 a1_723
	word32 a2_724
	word32 a4_725
	word32 a5_726
	word32 s2_727
	word32 s3_728
	word32 s5_729
	word32 s6_730
	word32 s7_731
	word32 s8_732
	word32 s9_733
	word32 s10_734
	word32 s11_735
	word32 s1_736
	word32 a0_737
	word32 a1_738
	word32 a2_739
	word32 a4_740
	word32 a5_741
	word32 s2_742
	word32 s3_743
	word32 s5_744
	word32 s6_745
	word32 s7_746
	word32 s8_747
	word32 s9_748
	word32 s10_749
	word32 s11_750
	word32 s1_751
	word32 a0_752
	word32 a1_753
	word32 a2_754
	word32 a4_755
	word32 a5_756
	word32 s2_757
	word32 s3_758
	word32 s5_759
	word32 s6_760
	word32 s7_761
	word32 s8_762
	word32 s9_763
	word32 s10_764
	word32 s11_765
	word32 s1_766
	word32 a0_767
	word32 a1_768
	word32 a2_769
	word32 a4_770
	word32 a5_771
	word32 s2_772
	word32 s3_773
	word32 s4_774
	word32 s5_775
	word32 s6_776
	word32 s7_777
	word32 s8_778
	word32 s9_779
	word32 s11_780
	word32 a0_781
	word32 a1_782
	word32 a2_783
	word32 a4_784
	word32 a5_785
	word32 s3_786
	word32 s4_787
	word32 s6_788
	word32 s7_789
	word32 s8_790
	word32 s9_791
	word32 s10_792
	word32 s11_793
	ra_192 = bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(bl_printk(ra_192, s5_208 + 816<i32>, a3_189, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_646, out a0_647, out a1_648, out a2_649, out a3_232, out a4_650, out a5_651, out s2_652, out s3_653, out s4_654, out s5_655, out s6_243, out s7_656, out s8_657, out s9_658, out s10_659, out s11_660), s6_243 + 824<i32>, a3_232, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_661, out a0_662, out a1_663, out a2_664, out a3_257, out a4_665, out a5_666, out s2_667, out s3_668, out s4_669, out s5_670, out s6_671, out s7_269, out s8_672, out s9_673, out s10_674, out s11_675), s7_269 + 836<i32>, a3_257, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_676, out a0_677, out a1_678, out a2_679, out a3_281, out a4_680, out a5_681, out s2_682, out s3_683, out s4_684, out s5_685, out s6_686, out s7_687, out s8_294, out s9_688, out s10_689, out s11_690), s8_294 + 832<i32>, a3_281, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_691, out a0_692, out a1_693, out a2_694, out a3_305, out a4_695, out a5_696, out s2_697, out s3_698, out s4_699, out s5_700, out s6_701, out s7_702, out s8_703, out s9_319, out s10_704, out s11_705), s9_319 + 844<i32>, a3_305, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_706, out a0_707, out a1_708, out a2_709, out a3_329, out a4_710, out a5_711, out s2_712, out s3_713, out s4_338, out s5_714, out s6_715, out s7_716, out s8_717, out s9_718, out s10_719, out s11_720), s4_338 + 856<i32>, a3_329, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_721, out a0_722, out a1_723, out a2_724, out a3_353, out a4_725, out a5_726, out s2_727, out s3_728, out s4_362, out s5_729, out s6_730, out s7_731, out s8_732, out s9_733, out s10_734, out s11_735), s4_362 + 856<i32>, a3_353, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_736, out a0_737, out a1_738, out a2_739, out a3_378, out a4_740, out a5_741, out s2_742, out s3_743, out s4_387, out s5_744, out s6_745, out s7_746, out s8_747, out s9_748, out s10_749, out s11_750), s4_387 + 856<i32>, a3_378, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_751, out a0_752, out a1_753, out a2_754, out a3_402, out a4_755, out a5_756, out s2_757, out s3_758, out s4_411, out s5_759, out s6_760, out s7_761, out s8_762, out s9_763, out s10_764, out s11_765), s4_411 + 856<i32>, a3_402, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_766, out a0_767, out a1_768, out a2_769, out a3_426, out a4_770, out a5_771, out s2_772, out s3_773, out s4_774, out s5_775, out s6_776, out s7_777, out s8_778, out s9_779, out s10_431, out s11_780), s10_431 + 864<i32>, a3_426, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_207, out a0_781, out a1_782, out a2_783, out a3_189, out a4_784, out a5_785, out s2_206, out s3_786, out s4_787, out s5_208, out s6_788, out s7_789, out s8_790, out s9_791, out s10_792, out s11_793)
l230675EA:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s2Out = s2_206
	return ra_192
_dump_partition_exit:


void hal_boot2_update_ptable(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_boot2_update_ptable_entry:
l2306767C:
	word32 a5_10 = CONVERT(CONVERT(Mem5[a0 + 2<i32>:byte], byte, word32) <u 1<i32>, bool, word32)
	Mem11[a0 + 2<i32>:byte] = SLICE(a5_10, byte, 0)
	word32 a0_12 = Mem11[a5_10 + 32<i32>:word32]
	word32 a1_13 = CONVERT(Mem11[0x4200EFA8<32>:byte], byte, word32)
	Mem16[a5_10 + 0x21<32>:word32] = a0_12
	PtTable_Update_Entry(CONVERT(a1_13 <u 1<i32>, bool, word32), 0x4200EFAC<32>, a0_12)
	return
hal_boot2_update_ptable_exit:


word32 hal_boot2_get_flash_addr(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl602_start
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
hal_boot2_get_flash_addr_entry:
l230676B2:
	word32 a5_5 = CONVERT(Mem0[0x4200EFB2<32>:uint16], uint16, word32)
	a5Out = a5_5 + 36<i32>
	return a5_5 + 0x42049C3C<32>
hal_boot2_get_flash_addr_exit:


word32 hal_boot2_partition_bus_addr(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_partition_bus_addr_active
//      hal_boot2_partition_bus_addr_inactive
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_bus_addr_entry:
l230676CE:
	branch Mem0[0x4200EFAC<32>:int32] != 0x54504642<32> l2306783E
l2306783E:
	s1Out = s1
	a0Out = 0xFFFFFFFB<32>
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s6Out = s6
	return s0
l230676E6:
	word32 s6_111 = 0x4200EFA8<32>
	word32 s4_47 = 0x4200EFBF<32>
	word32 s0_48 = 0<32>
	a4_106 = a4
	a3_105 = a3
l23067718:
	word32 a4_106
	word32 a3_105
	branch s0_48 >= CONVERT(Mem32[0x4200EFB2<32>:uint16], uint16, word32) l23067730
l23067720:
	s4_47 = s4_47 + 36<i32>
	word32 a2_402
	word32 a5_403
	word32 a1_401
	branch strcmp(s4_47 + 0<i32>, a0, out a1_401, out a2_402, out a3_105, out a4_106, out a5_403) != 0<32> l23067754
l23067754:
	s0_48 = s0_48 + 1<32>
l23067730:
	word32 a5_115 = CONVERT(Mem32[0x4200EFB2<32>:uint16], uint16, word32)
	word32 a0_116 = 0xFFFFFFFE<32>
	branch s0_48 != a5_115 l23067758
l23067758:
	word32 a2_74 = s0_48 + 36<i32>
	a4_106 = CONVERT(Mem32[a2_74 + 0x4200EFBE<32>:byte], byte, word32)
	word32 s5_79 = Mem32[a2_74 + 0x4200EFC8<32>:int32]
	word32 s4_80 = Mem32[a2_74 + 0x4200EFCC<32>:int32]
	Mem83[a5:word32] = a4_106
	Mem87[a3:word32] = a4_106
	Mem92[a4:word32] = 36<i32>
	word32 s0_112 = 0<32>
l2306778C:
	branch s0_112 >= CONVERT(Mem92[0x4200EFB2<32>:uint16], uint16, word32) l230677A6
l23067794:
	s6_111 = s6_111 + 36<i32>
	word32 a1_404
	word32 a5_406
	word32 a2_405
	branch strcmp(s6_111 + 23<i32>, 0x230BEF20<32>, out a1_404, out a2_405, out a3_105, out a4_106, out a5_406) != 0<32> l2306783A
l2306783A:
	s0_112 = s0_112 + 1<32>
l230677A6:
	a5_115 = CONVERT(Mem92[0x4200EFB2<32>:uint16], uint16, word32)
	a0_116 = -72<i32>
	branch s0_112 == a5_115 l2306773A
l230677B2:
	branch s5_79 == 0<32> l230677CE
l230677B6:
	a0_116 = 0xFFFFFFEA<32>
	a5_115 = Mem92[a4_106 + 32<i32>:word32]
	branch s5_79 <u a4_106 l2306773A
l230677C8:
	a5_115 = Mem92[a5_115 + 36<i32>:word32]
	branch s5_79 <u a5_115 l2306773A
l230677CE:
	branch s4_80 == 0<32> l230677EA
l230677D2:
	a0_116 = 0xFFFFFFEA<32>
	a5_115 = Mem92[a4_106 + 32<i32>:word32]
	branch s4_80 <u a4_106 l2306773A
l230677E4:
	a5_115 = Mem92[a5_115 + 36<i32>:word32]
	branch s4_80 <u a5_115 l2306773A
l230677EA:
	word32 a4_140 = s0_112 + 36<i32>
	a3_105 = 1<32>
	a0_116 = 0xFFFFFFF2<32>
	a4_106 = a4_140 + 0x4200EFA8<32>
	a5_115 = CONVERT(Mem92[a4_140 + 0x4200EFBE<32>:byte], byte, word32)
	branch a5_115 >u 1<32> l2306773A
l23067800:
	Mem169[a1:word32] = s5_79 + 0x22FFF000<32> - Mem92[((a5_115 + (s0_112 + 9<32>)) + 4<32> << 2<i32>) + 0x4200EFB8<32>:word32]
	a5_115 = CONVERT(Mem169[a4_140 + 0x4200EFBE<32>:byte], byte, word32)
	Mem182[a2:word32] = s4_80 + 0x22FFF000<32> - a5_115
	a3_105 = 0x22FFF000<32>
	a0_116 = 0<32>
l2306773A:
	0<32> = dwArg0128
	s1Out = 0x4200EFA8<32>
	a0Out = a0_116
	a3Out = a3_105
	a4Out = a4_106
	a5Out = a5_115
	s2Out = a2
	s3Out = a1
	s6Out = s6_111
	return s4
hal_boot2_partition_bus_addr_exit:


word32 hal_boot2_partition_bus_addr_active(word32 a0, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
//      bl_mtd_open
// MayUse:  a0:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a5 s0 s1 s2 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_bus_addr_active_entry:
l23067842:
	word32 a0_20
	word32 a3_26
	word32 a4_27
	word32 a5_28
	word32 s1_30
	word32 s2_31
	word32 s3_32
	word32 s6_35
	word32 s0_29 = hal_boot2_partition_bus_addr(a0, fp + -36<i32>, fp + -32<i32>, fp + -28<i32>, fp + -24<i32>, fp + -20<i32>, dwArgF8, out s1_30, out a0_20, out a3_26, out a4_27, out a5_28, out s2_31, out s3_32, out s6_35)
	branch a0_20 != 0<32> l2306786C
l2306785E:
	branch a5_28 == 0<32> l23067876
l23067876:
l23067862:
l23067864:
	Mem48[a4_27:word32] = s1_30
	branch a5_28 == 0<32> l2306787A
l2306787A:
l23067868:
l2306786A:
	Mem56[a5_28:word32] = s0_29
l2306786C:
	s1Out = s1_30
	a0Out = a0_20
	a3Out = a3_26
	a5Out = a5_28
	s2Out = s2_31
	s3Out = s3_32
	s6Out = s6_35
	return dwArgE4
hal_boot2_partition_bus_addr_active_exit:


word32 hal_boot2_partition_bus_addr_inactive(word32 a0, word32 dwArgF8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_mtd_open
// MayUse:  a0:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_bus_addr_inactive_entry:
l2306787E:
	word32 a0_20
	word32 a3_26
	word32 a4_27
	word32 a5_28
	word32 s1_30
	word32 s6_144
	word32 s2_142
	word32 s3_143
	word32 s0_29 = hal_boot2_partition_bus_addr(a0, fp + -36<i32>, fp + -32<i32>, fp + -28<i32>, fp + -24<i32>, fp + -20<i32>, dwArgF8, out s1_30, out a0_20, out a3_26, out a4_27, out a5_28, out s2_142, out s3_143, out s6_144)
	branch a0_20 != 0<32> l230678A8
l2306789A:
	branch a5_28 == 0<32> l230678B2
l230678B2:
l2306789E:
l230678A0:
	Mem48[a4_27:word32] = s1_30
	branch a5_28 == 0<32> l230678B6
l230678B6:
l230678A4:
l230678A6:
	Mem56[a5_28:word32] = s0_29
l230678A8:
	a0Out = a0_20
	a3Out = a3_26
	a5Out = a5_28
	return s1_30
hal_boot2_partition_bus_addr_inactive_exit:


word32 hal_boot2_partition_addr(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_partition_addr_active
//      hal_boot2_partition_addr_inactive
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_addr_entry:
l230678BA:
	word32 a0_158
	word32 s1_170 = 0x4200F000<32>
	branch Mem25[0x4200EFAC<32>:int32] != 0x54504642<32> l23067972
l23067972:
	a0_158 = 0xFFFFFFFB<32>
l230678E8:
	s2 = 0x4200EFA8<32>
	s1_170 = 0x4200EFA8<32>
	word32 s0_44 = 0<32>
l230678FE:
	branch s0_44 >= CONVERT(Mem25[0x4200EFB2<32>:uint16], uint16, word32) l23067916
l23067906:
	s1_170 = s1_170 + 36<i32>
	word32 a1_195
	word32 a2_196
	word32 a5_197
	branch strcmp(s1_170 + 23<i32>, a0, out a1_195, out a2_196, out a3, out a4, out a5_197) != 0<32> l23067938
l23067938:
	s0_44 = s0_44 + 1<32>
l23067916:
	a5 = CONVERT(Mem25[0x4200EFB2<32>:uint16], uint16, word32)
	a0_158 = 0xFFFFFFFE<32>
	branch s0_44 != a5 l2306793C
l2306793C:
	Mem78[a1:word32] = a4
	Mem82[a2:word32] = a4
	word32 a0_83 = Mem82[a4 + 40<i32>:word32]
	Mem86[a3:word32] = a4
	Mem90[a4:word32] = 36<i32>
	a5 = CONVERT(Mem90[a0_83 + 22<i32>:byte], byte, word32)
	Mem95[a5:word32] = a5
	a0_158 = 0<32>
l23067920:
	0<32> = dwArg0128
	s1Out = s1_170
	a0Out = a0_158
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	return s4
hal_boot2_partition_addr_exit:


word32 hal_boot2_partition_addr_active(word32 a0, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
//      bl_mtd_open
// MayUse:  a0:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a5 s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_addr_active_entry:
l23067976:
	word32 a0_20
	word32 s1_25
	word32 a5_30
	word32 s2_31
	word32 a3_37
	word32 a4_38
	word32 s0_24 = hal_boot2_partition_addr(a0, fp + -36<i32>, fp + -32<i32>, fp + -28<i32>, fp + -24<i32>, fp + -20<i32>, dwArgF8, out s1_25, out a0_20, out a3_37, out a4_38, out a5_30, out s2_31)
	branch a0_20 != 0<32> l230679A0
l23067992:
	branch a5_30 == 0<32> l230679AA
l230679AA:
l23067996:
l23067998:
	Mem47[a4_38:word32] = s1_25
	branch a5_30 == 0<32> l230679AE
l230679AE:
l2306799C:
l2306799E:
	Mem55[a5_30:word32] = s0_24
l230679A0:
	s1Out = s1_25
	a0Out = a0_20
	a3Out = a3_37
	a5Out = a5_30
	s2Out = s2_31
	return dwArgE4
hal_boot2_partition_addr_active_exit:


word32 hal_boot2_partition_addr_inactive(word32 a0, word32 dwArgF8, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_mtd_open
// MayUse:  a0:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t2 t3 tp
// Preserved: sp
hal_boot2_partition_addr_inactive_entry:
l230679B2:
	word32 a0_20
	word32 s1_25
	word32 a5_30
	word32 a3_37
	word32 a4_38
	word32 s2_137
	word32 s0_24 = hal_boot2_partition_addr(a0, fp + -36<i32>, fp + -32<i32>, fp + -28<i32>, fp + -24<i32>, fp + -20<i32>, dwArgF8, out s1_25, out a0_20, out a3_37, out a4_38, out a5_30, out s2_137)
	branch a0_20 != 0<32> l230679DC
l230679CE:
	branch a5_30 == 0<32> l230679E6
l230679E6:
l230679D2:
l230679D4:
	Mem47[a4_38:word32] = s1_25
	branch a5_30 == 0<32> l230679EA
l230679EA:
l230679D8:
l230679DA:
	Mem55[a5_30:word32] = s0_24
l230679DC:
	a3Out = a3_37
	a5Out = a5_30
	return a0_20
hal_boot2_partition_addr_inactive_exit:


void hal_boot2_get_active_partition()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse: 
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
hal_boot2_get_active_partition_entry:
l230679EE:
	return
hal_boot2_get_active_partition_exit:


void hal_boot2_get_active_entries(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
hal_boot2_get_active_entries_entry:
l230679F8:
	PtTable_Get_Active_Entries(0x4200EFAC<32>, a0 & 255<i32>, a1)
	return
hal_boot2_get_active_entries_exit:


void hal_boot2_dump(word32 ra, word32 a3, word32 s6, word32 dwArg0C, word32 dwArg30, word32 dwArg34, word32 dwArg58, word32 dwArg7C, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_dump_cmd
// MayUse:  a3:[0..31] ra:[0..31] s6:[0..31] Stack +000C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +007C:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
hal_boot2_dump_entry:
l23067A1C:
	word32 s2_44
	_dump_partition(ra, a3, s6, dwArg0C, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0118, out s2_44)
	return
hal_boot2_dump_exit:


word32 hal_boot2_init(word32 ra, word32 s6, word32 dwArg0C, word32 dwArg18, word32 dwArg30, word32 dwArg34, word32 dwArg40, word32 dwArg44, word32 dwArg58, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg7C, word32 dwArg88, word32 dwArg8C, word32 dwArgAC, word32 dwArg0118, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  ra:[0..31] s6:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +00AC:[0..31] Stack +0118:[0..31]
// LiveOut: ra s1 s10 s2 s4 s6 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: s0 sp
hal_boot2_init_entry:
l23067A2C:
	Mem11[0x4200FFA8<32>:byte] = SLICE(CONVERT(Mem8[0x42049C00<32>:byte], byte, word32), byte, 0)
	word32 a3_13 = CONVERT(Mem11[0x420266B4<32>:byte], byte, word32)
	branch a3_13 >u 2<32> l23067A98
l23067A50:
	branch CONVERT(Mem11[0x420267A0<32>:byte], byte, word32) >u 2<32> l23067A98
l23067A60:
	branch Mem11[0x4200F560<32>:int32] == 0<32> l23067AAA
l23067AAA:
	word32 a5_178
	xTaskGetTickCount(out a5_178)
l23067A6A:
	word32 a5_179
	xTaskGetTickCountFromISR(out a5_179)
l23067A6E:
	word32 s11_194
	word32 s9_192
	word32 s10_193
	word32 s7_190
	word32 s8_191
	word32 s4_188
	word32 s5_189
	word32 s2_186
	word32 s3_187
	word32 a4_184
	word32 a5_185
	word32 a1_182
	word32 a2_183
	word32 s1_180
	word32 a0_181
	ra = bl_printk(ra, 0x230C2374<32>, 0x230C2368<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_180, out a0_181, out a1_182, out a2_183, out a3_13, out a4_184, out a5_185, out s2_186, out s3_187, out s4_188, out s5_189, out s6, out s7_190, out s8_191, out s9_192, out s10_193, out s11_194)
l23067A98:
	word32 s2_80
	word32 s4_99
	word32 s8_100
	word32 s1_107
	word32 s10_108
	word32 s2_110
	word32 s6_112
	word32 s9_114
	word32 ra_106 = bl_flash_config_update(_dump_partition(ra, a3_13, s6, dwArg0C, dwArg30, dwArg34, dwArg58, dwArg7C, dwArg0118, out s2_80), s2_80, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_107, out s2_110, out s4_99, out s6_112, out s8_100, out s9_114, out s10_108)
	s1Out = s1_107
	s2Out = s2_110
	s4Out = s4_99
	s6Out = s6_112
	s8Out = s8_100
	s9Out = s9_114
	s10Out = s10_108
	return ra_106
hal_boot2_init_exit:


void hal_reboot(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      reboot_cmd
//      reset
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
hal_reboot_exit:
hal_reboot_entry:
l23067AB0:
l23067AB0_thunk_bl_sys_reset_por:
	bl_sys_reset_por(mstatus)


void hal_sys_reset(word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      reset_cmd
// MayUse:  mstatus:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
hal_sys_reset_exit:
hal_sys_reset_entry:
l23067AB4:
l23067AB4_thunk_bl_sys_reset_system:
	bl_sys_reset_system(mstatus)


void hal_poweroff()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      poweroff_cmd
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
hal_poweroff_entry:
l23067AB8:
	return
hal_poweroff_exit:


word32 hal_sys_capcode_update(word32 ra, word32 a0, word32 a1, word32 s2, word32 s3, word32 dwArg00, word32 dwArg04, word32 dwArg28, word32 dwArg48, ptr32 & s1Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
//      wifi_capcode_cmd
//      hal_board_cfg
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31] s2:[0..31] s3:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0048:[0..31]
// LiveOut: a3 ra s1
// Trashed: a0 a1 a2 a3 a6 ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
hal_sys_capcode_update_entry:
l23067ABA:
	word32 t1_15 = Mem14[0x2101081C<32>:int32]
	branch a0 == 255<i32> l23067B06
l23067AE6:
	s2 = a1
	branch a1 == 255<i32> l23067B06
l23067B06:
	word32 s1_42
	word32 a3_43
	word32 ra_44
	call t1_15 (retsize: 0;)
		uses: a0:CONVERT(Mem14[0x4200F5A9<32>:byte], byte, word32),a1:CONVERT(Mem14[0x4200F5AA<32>:byte], byte, word32),a2:dwArg48,a6:dwArg28,ra:ra,s0:0x4200F5A9<32>,s1:0x4200F5AA<32>,s2:s2_38,s3:s3,s4:dwArg04,s8:dwLoc1C,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0028:dwArg28,Stack +0048:dwArg48,Stack +FFFFFFE4:dwLoc1C,t3:dwArg00
		defs: a3:a3_43,ra:ra_44,s1:s1_42
	s1Out = s1_42
	a3Out = a3_43
	return ra_44
l23067AEC:
	word32 s0_57
	word32 s1_58
	word32 a3_59
	word32 ra_60
	word32 s2_61
	word32 s3_62
	call t1_15 (retsize: 0;)
		uses: a0:a0,a1:a1,ra:ra,s0:0x4200F5A9<32>,s1:0x4200F5AA<32>,s2:a1,s3:a0,Stack +0004:dwLoc1C,Stack +0020:dwArg00,Stack +0024:dwArg04,Stack +0048:dwArg28,Stack +0068:dwArg48
		defs: a3:a3_59,ra:ra_60,s0:s0_57,s1:s1_58,s2:s2_61,s3:s3_62
	Mem72[s0_57:byte] = SLICE(s3_62, byte, 0)
	Mem74[s1_58:byte] = SLICE(s2_61, byte, 0)
	s1Out = s1_58
	a3Out = a3_59
	return ra_60
hal_sys_capcode_update_exit:


void hal_sys_capcode_get()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_capcode_cmd
// MayUse: 
// LiveOut:
// Trashed: t1
// Preserved: sp
hal_sys_capcode_get_entry:
l23067B1C:
	call 0x4200CDAE<p32> (retsize: 0;)
		uses: t1:0x4200CB1C<p32>
	return
hal_sys_capcode_get_exit:


word32 fdt32_to_cpu(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_board_cfg
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: sp
fdt32_to_cpu_entry:
l23067B24:
	return (a0 >>u 16<i32> & 255<i32>) << 8<i32> | ((a0 << 0x18<u32> | a0 >>u 0x18<u32>) | (a0 >>u 8<u32> & 255<i32>) << 16<i32>)
fdt32_to_cpu_exit:


word32 hal_board_get_factory_addr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut: a0
// Trashed: a0 a5
// Preserved: sp
hal_board_get_factory_addr_entry:
l23067B46:
	return Mem0[0x4200F5AC<32>:int32]
hal_board_get_factory_addr_exit:


word32 hal_board_cfg(word32 ra, word32 s0, word32 s1, word32 s2, word32 s4, word32 s6, word32 s8, word32 s9, word32 s10, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg18, word32 dwArg28, word32 dwArg94, word32 dwArgD4, word32 dwArgF4, ptr32 & gpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s10:[0..31] s2:[0..31] s4:[0..31] s6:[0..31] s8:[0..31] s9:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0094:[0..31] Stack +00D4:[0..31] Stack +00F4:[0..31]
// LiveOut: gp ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t6 tp
// Preserved: mstatus sp t5
hal_board_cfg_entry:
	byte bLoc79_7707 = SLICE(dwLoc7C, byte, 24)
	byte bLoc7A_7754 = SLICE(dwLoc7C, byte, 16)
	word16 wLoc7C_8114 = SLICE(dwLoc7C, word16, 0)
	byte bLoc7C_12274 = SLICE(dwLoc7C, byte, 0)
	byte bLoc7B_12275 = SLICE(dwLoc7C, byte, 8)
	int8 bLocAA = SLICE(dwLocAC, int8, 16)
	word16 wLocB0_12029 = SLICE(nLocB0, word16, 0)
l23067B50:
	word32 s1_45
	word32 a5_12994
	word32 a0_12992
	word32 a3_12993
	word32 s2_115
	word32 s0_44 = hal_boot2_partition_addr_active(0x230C23D4<32>, s1, out s1_45, out a0_12992, out a3_12993, out a5_12994, out s2_115)
	word32 sp_3 = fp + -256<i32>
	word32 s3_108 = s1_45 + 1452<i32>
	branch CONVERT(Mem34[s0_44 + 1716<i32>:byte], byte, word32) >u 2<32> l23067BD8
l23067B94:
	branch CONVERT(Mem34[0x420267A1<32>:byte], byte, word32) >u 2<32> l23067BD8
l23067BA0:
	branch Mem34[0x4200F560<32>:int32] == 0<32> l23067C26
l23067C26:
	word32 a5_12995
	xTaskGetTickCount(out a5_12995)
l23067BAC:
	word32 a5_12996
	xTaskGetTickCountFromISR(out a5_12996)
l23067BB0:
	word32 a0_13004
	word32 a2_13006
	word32 a4_13008
	word32 a5_13009
	word32 s5_13011
	word32 s7_13013
	word32 s8_13014
	word32 s10_13016
	word32 s11_13017
	word32 s9_13015
	word32 s6_13012
	word32 s4_13010
	word32 a3_13007
	word32 a1_13005
	word32 s1_13003
	ra = bl_printk(ra, 0x230C23E8<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13003, out a0_13004, out a1_13005, out a2_13006, out a3_13007, out a4_13008, out a5_13009, out s2_115, out s3_108, out s4_13010, out s5_13011, out s6_13012, out s7_13013, out s8_13014, out s9_13015, out s10_13016, out s11_13017)
l23067BD8:
	branch Mem34[s3_108:int32] != 0<32> l23067C32
l23067C32:
	word32 s1_12997
	word32 a3_12999
	word32 a5_13000
	word32 a0_12998
	word32 s3_128
	word32 s2_127
	word32 s6_131
	word32 s0_125 = hal_boot2_partition_bus_addr_active(s2_115 + 980<i32>, s1, out s1_12997, out a0_12998, out a3_12999, out a5_13000, out s2_127, out s3_128, out s6_131)
	branch CONVERT(Mem34[s0_125 + 1716<i32>:byte], byte, word32) >u 2<32> l23067C8E
l23067C4C:
	branch CONVERT(Mem34[0x420267A1<32>:byte], byte, word32) >u 2<32> l23067C8E
l23067C58:
	branch Mem34[0x4200F560<32>:int32] == 0<32> l23067CDC
l23067CDC:
	word32 a5_13035
	xTaskGetTickCount(out a5_13035)
l23067C62:
	word32 a5_13036
	xTaskGetTickCountFromISR(out a5_13036)
l23067C66:
	word32 a3_13047
	word32 a5_13049
	word32 s5_13051
	word32 s11_13056
	word32 s10_13055
	word32 s7_13052
	word32 s9_13054
	word32 s8_13053
	word32 s4_13050
	word32 a4_13048
	word32 a2_13046
	word32 a0_13044
	word32 a1_13045
	word32 s1_13043
	ra = bl_printk(ra, 0x230C249C<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13043, out a0_13044, out a1_13045, out a2_13046, out a3_13047, out a4_13048, out a5_13049, out s2_127, out s3_128, out s4_13050, out s5_13051, out s6_131, out s7_13052, out s8_13053, out s9_13054, out s10_13055, out s11_13056)
l23067C8E:
	word32 s1_192 = Mem34[s3_128:int32]
	branch s1_192 != 0<32> l23067CE8
l23067CE8:
	word32 a0_202
	word32 s0_211
	word32 a5_13037
	word32 s4_13039
	word32 s5_13040
	word32 s3_13038
	word32 s1_212
	word32 s2_213
	word32 s6_217
	word32 ra_210 = fdt_subnode_offset(ra, s1_192, s1_192, 0x230BE868<32>, s2_127, s6_131, dwLocF8, dwLocC8, s9, out s0_211, out s1_212, out a0_202, out a5_13037, out s2_213, out s3_13038, out s4_13039, out s5_13040, out s6_217)
	branch a0_202 > 0<32> l23067D48
l23067D00:
	branch CONVERT(Mem198[s0_211 + 1716<i32>:byte], byte, word32) >u 4<32> l23067D48
l23067D0A:
	branch CONVERT(Mem198[0x420267A1<32>:byte], byte, word32) >u 4<32> l23067D48
l23067D16:
	branch Mem198[0x4200F560<32>:int32] == 0<32> l23067EA4
l23067EA4:
	word32 a5_13079
	xTaskGetTickCount(out a5_13079)
l23067D22:
	word32 a5_13080
	xTaskGetTickCountFromISR(out a5_13080)
l23067D26:
	word32 a0_13111
	word32 a2_13113
	word32 a3_13114
	word32 s4_13118
	word32 s5_13119
	word32 s9_13122
	word32 s10_13123
	word32 s11_13124
	word32 s8_13121
	word32 s7_13120
	word32 a5_13116
	word32 s3_13117
	word32 a4_13115
	word32 a1_13112
	ra_210 = bl_printk(ra_210, 0x230BE880<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_212, out a0_13111, out a1_13112, out a2_13113, out a3_13114, out a4_13115, out a5_13116, out s2_213, out s3_13117, out s4_13118, out s5_13119, out s6_217, out s7_13120, out s8_13121, out s9_13122, out s10_13123, out s11_13124)
l23067D48:
	word32 a0_278
	word32 s3_290
	word32 s0_13074
	word32 a5_13075
	word32 s5_13078
	word32 s4_13077
	word32 s2_13076
	word32 s1_1327
	word32 s6_1332
	word32 ra_1325 = fdt_subnode_offset(ra_210, s1_212, s1_212, 0x230BEB38<32>, s2_213, s6_217, dwLocF8, dwLocC8, s9, out s0_13074, out s1_1327, out a0_278, out a5_13075, out s2_13076, out s3_290, out s4_13077, out s5_13078, out s6_1332)
	word32 s2_1328 = a0_278
	branch a0_278 <= 0<32> l23068172
l23067D60:
	dwLocD0 = 0<32>
	word32 a0_305
	word32 s3_317
	word32 s5_13089
	word32 s8_13091
	word32 s6_13090
	word32 s2_13087
	word32 s4_13088
	word32 s0_13086
	word32 s1_315
	word32 ra_313 = fdt_stringlist_count(ra_1325, s1_1327, 0x230C254C<32>, a0_278, dwLocF8, dwLocDC, dwLoc48, s9, out s0_13086, out s1_315, out a0_305, out s2_13087, out s3_317, out s4_13088, out s5_13089, out s6_13090, out s8_13091)
	branch a0_305 != 1<32> l23067FD0
l23067D78:
	word32 a0_331
	word32 a5_13104
	word32 s5_13106
	word32 s8_13108
	word32 s6_13107
	word32 s3_13105
	word32 a4_13103
	word32 a3_13102
	word32 a1_13101
	word32 a2_333
	word32 s0_340
	word32 s2_342
	word32 s4_344
	fdt_stringlist_get(ra_313, s1_315, s3_317 + 1356<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_340, out s1_315, out a0_331, out a1_13101, out a2_333, out a3_13102, out a4_13103, out a5_13104, out s2_342, out s3_13105, out s4_344, out s5_13106, out s6_13107, out s8_13108)
	word32 s5_353 = a0_331
	branch CONVERT(Mem304[s0_340 + 1716<i32>:byte], byte, word32) >u 2<32> l23067DD4
l23067D94:
	branch CONVERT(Mem304[0x420267A1<32>:byte], byte, word32) >u 2<32> l23067DD4
l23067DA0:
	branch Mem304[0x4200F560<32>:int32] == 0<32> l23067EAA
l23067EAA:
	word32 a5_13109
	xTaskGetTickCount(out a5_13109)
l23067DAC:
	word32 a5_13110
	xTaskGetTickCountFromISR(out a5_13110)
l23067DB0:
	word32 a4_13142
	word32 s6_13145
	word32 s8_13147
	word32 s10_13149
	word32 s11_13150
	word32 s9_13148
	word32 s7_13146
	word32 s3_13144
	word32 a5_13143
	word32 a3_13141
	word32 a1_13140
	word32 a0_13139
	bl_printk(dwArgF4, 0x230C2558<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_315, out a0_13139, out a1_13140, out a2_333, out a3_13141, out a4_13142, out a5_13143, out s2_342, out s3_13144, out s4_344, out s5_353, out s6_13145, out s7_13146, out s8_13147, out s9_13148, out s10_13149, out s11_13150)
l23067DD4:
	ra_313 = dwArg94
	word32 s3_399 = 2<32>
	branch a2_333 > 2<32> l23067FD0
l23067DDC:
	word32 a7_13269
	word32 a5_13267
	word32 a6_13268
	word32 a3_13265
	word32 a4_13266
	word32 a2_13264
	word32 a1_13263
	memcpy(fp + -176<i32>, s5_353, a2_333, out a1_13263, out a2_13264, out a3_13265, out a4_13266, out a5_13267, out a6_13268, out a7_13269)
	nLocB0 = CONVERT(wLocB0_12029, word16, uint24) (alias)
	branch CONVERT(Mem304[s0_340 + 1716<i32>:byte], byte, word32) >u 2<32> l23067E2E
l23067DF0:
	branch CONVERT(Mem420[0x420267A1<32>:byte], byte, word32) >u 2<32> l23067E2E
l23067DFC:
	branch Mem420[0x4200F560<32>:int32] == 0<32> l23067EB0
l23067EB0:
	word32 a5_13274
	xTaskGetTickCount(out a5_13274)
l23067E06:
	word32 a5_13275
	xTaskGetTickCountFromISR(out a5_13275)
l23067E0A:
	word32 a0_13292
	word32 a2_13294
	word32 a4_13296
	word32 a5_13297
	word32 s8_13301
	word32 s9_13302
	word32 s11_13304
	word32 s10_13303
	word32 s6_13299
	word32 s7_13300
	word32 s5_13298
	word32 a3_13295
	word32 a1_13293
	ra_313 = bl_printk(dwArg94, 0x230C2584<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_315, out a0_13292, out a1_13293, out a2_13294, out a3_13295, out a4_13296, out a5_13297, out s2_342, out s3_399, out s4_344, out s5_13298, out s6_13299, out s7_13300, out s8_13301, out s9_13302, out s10_13303, out s11_13304)
l23067E2E:
	word32 a2_13271
	word32 a5_13273
	word32 a4_13272
	word32 a1_13270
	word32 a3_467
	word32 s10_472 = strlen(fp + -176<i32>, out a1_13270, out a2_13271, out a3_467, out a4_13272, out a5_13273)
	word32 s5_473 = 0<32>
	word32 s7_475 = 0x4200F000<32>
	word32 s11_478 = 0x230C2000<32>
l23067E4C:
	word32 s5_670
	word32 s3_679
	branch s5_473 >= s10_472 l2306833C
l23067E50:
	word32 s5_510
	word32 a0_587
	word32 a3_582
	word32 a5_485 = CONVERT(Mem484[sp_3 + 80<i32> + s5_473:byte], byte, word32)
	branch a5_485 == 70<i32> l23067EB6
l23067EB6:
	Mem494[sp_3 + 64<i32>:word32] = 0<32>
	word32 a0_496
	word32 a4_500
	word32 a1_13305
	word32 a5_13306
	word32 s3_13307
	word32 s6_511
	word32 s8_512
	ra_313 = fdt_getprop(ra_313, s1_315, 0x230BEB40<32>, Mem494[sp_3 + 8<i32>:word32], Mem494[sp_3 + 40<i32>:word32], Mem494[sp_3 + 68<i32>:word32], Mem494[sp_3 + 216<i32>:word32], Mem494[sp_3 + 264<i32>:word32], out s0_340, out s1_315, out a0_496, out a1_13305, out a3_467, out a4_500, out a5_13306, out s2_342, out s3_13307, out s4_344, out s5_510, out s6_511, out s8_512)
	sp_3 = Mem494[sp_3 + 196<i32>:word32]
	s3_399 = a0_496
	branch a4_500 != 0x14<32> l230682C8
l230682C8:
	branch CONVERT(Mem494[s0_340 + 1716<i32>:byte], byte, word32) >u 4<32> l23068334
l230682D2:
	branch CONVERT(Mem494[s6_511 + 1953<i32>:byte], byte, word32) >u 4<32> l230682FE
l230682DA:
	branch Mem494[s7_475 + 1376<i32>:int32] == 0<32> l23068350
l23068350:
	word32 a5_13347
	xTaskGetTickCount(out a5_13347)
l230682E0:
	word32 a5_13348
	xTaskGetTickCountFromISR(out a5_13348)
l230682E4:
	word32 a1_13368
	word32 a4_13370
	word32 a5_13371
	word32 s9_13372
	word32 a2_13369
	word32 a0_13367
	ra_313 = bl_printk(ra_313, s11_478 + 1508<i32>, s8_512 + 988<i32>, Mem494[sp_3 + 8<i32>:word32], Mem494[sp_3 + 40<i32>:word32], Mem494[sp_3 + 112<i32>:word32], Mem494[sp_3 + 116<i32>:word32], Mem494[sp_3 + 152<i32>:word32], Mem494[sp_3 + 188<i32>:word32], out s1_315, out a0_13367, out a1_13368, out a2_13369, out a3_467, out a4_13370, out a5_13371, out s2_342, out s3_399, out s4_344, out s5_510, out s6_511, out s7_475, out s8_512, out s9_13372, out s10_472, out s11_478)
l230682FE:
	branch CONVERT(Mem494[s0_340 + 1716<i32>:byte], byte, word32) >u 1<32> l23068334
l23068308:
	branch CONVERT(Mem494[s6_511 + 1953<i32>:byte], byte, word32) >u 1<32> l23068334
l23068310:
	branch Mem494[s7_475 + 1376<i32>:int32] == 0<32> l2306835C
l2306835C:
	word32 a5_13365
	xTaskGetTickCount(out a5_13365)
l23068316:
	word32 a5_13366
	xTaskGetTickCountFromISR(out a5_13366)
l2306831A:
	a3_582 = s8_512 + 988<i32>
	a0_587 = 0x230C2634<32>
l23067ED4:
	branch CONVERT(Mem494[s0_340 + 1716<i32>:byte], byte, word32) >u 2<32> l23067F66
l23067EDE:
	branch CONVERT(Mem494[0x420267A1<32>:byte], byte, word32) >u 2<32> l23067F66
l23067EEA:
	word32 a0_594
	branch Mem494[0x4200F560<32>:int32] == 0<32> l230682C2
l230682C2:
	word32 a5_13328
	a0_594 = xTaskGetTickCount(out a5_13328)
l23067EF6:
	word32 a5_13329
	a0_594 = xTaskGetTickCountFromISR(out a5_13329)
l23067EFA:
	Mem600[sp_3 + 144<i32>:word32] = a0_594
	fdt32_to_cpu(Mem600[a0_496:int32])
	fdt32_to_cpu(Mem600[a0_496 + 4<i32>:int32])
	fdt32_to_cpu(Mem600[a0_496 + 8<i32>:int32])
	word32 a0_618 = fdt32_to_cpu(Mem600[a0_496 + 12<i32>:int32])
	Mem629[sp_3 + 128<i32>:word32] = fdt32_to_cpu(Mem600[a0_496 + 16<i32>:int32]) & 255<i32>
	Mem633[sp_3:word32] = a0_618 & 255<i32>
	word32 s1_13330
	word32 a1_13332
	word32 a2_13333
	word32 a4_13335
	word32 s4_13337
	word32 s5_13338
	word32 s6_13339
	word32 s11_13344
	word32 s10_13343
	word32 s7_13340
	word32 s9_13342
	word32 s8_13341
	word32 a5_13336
	word32 a3_13334
	word32 a0_13331
	ra_313 = bl_printk(ra_313, 0x230C25AC<32>, 0x230C23DC<32>, Mem633[sp_3 + 8<i32>:word32], Mem633[sp_3 + 40<i32>:word32], Mem633[sp_3 + 112<i32>:word32], Mem633[sp_3 + 116<i32>:word32], Mem633[sp_3 + 152<i32>:word32], Mem633[sp_3 + 188<i32>:word32], out s1_13330, out a0_13331, out a1_13332, out a2_13333, out a3_13334, out a4_13335, out a5_13336, out s2_342, out s3_399, out s4_13337, out s5_13338, out s6_13339, out s7_13340, out s8_13341, out s9_13342, out s10_13343, out s11_13344)
l23067F66:
	s5_670 = fdt32_to_cpu(Mem665[s3_399:int32]) & 255<i32>
	s3_679 = fdt32_to_cpu(Mem665[s3_399 + 4<i32>:int32]) & 255<i32>
	branch CONVERT(Mem665[s0_340 + 1716<i32>:byte], byte, word32) >u 1<32> l23067FC6
l23067F88:
	branch CONVERT(Mem665[0x420267A1<32>:byte], byte, word32) >u 1<32> l23067FC6
l23067F94:
	branch Mem665[0x4200F560<32>:int32] == 0<32> l23068356
l23068356:
	word32 a5_13345
	xTaskGetTickCount(out a5_13345)
l23067FA0:
	word32 a5_13346
	xTaskGetTickCountFromISR(out a5_13346)
l23067FA4:
	word32 s6_13359
	word32 s8_13361
	word32 s10_13363
	word32 s11_13364
	word32 s9_13362
	word32 s7_13360
	word32 a5_13357
	word32 s4_13358
	word32 a3_13355
	word32 a4_13356
	word32 a1_13353
	word32 a2_13354
	word32 a0_13352
	word32 s1_13351
	ra_313 = bl_printk(ra_313, 0x230C2608<32>, 0x230C23DC<32>, Mem665[sp_3 + 8<i32>:word32], Mem665[sp_3 + 40<i32>:word32], Mem665[sp_3 + 112<i32>:word32], Mem665[sp_3 + 116<i32>:word32], Mem665[sp_3 + 152<i32>:word32], Mem665[sp_3 + 188<i32>:word32], out s1_13351, out a0_13352, out a1_13353, out a2_13354, out a3_13355, out a4_13356, out a5_13357, out s2_342, out s3_679, out s4_13358, out s5_670, out s6_13359, out s7_13360, out s8_13361, out s9_13362, out s10_13363, out s11_13364)
l23067E60:
	branch a5_485 == 77<i32> l23068362
l23068362:
	Mem726[sp_3 + 128<i32>:byte] = 0<8>
	word32 a0_732
	word32 s6_750
	word32 s8_752
	ra_313 = bl_efuse_read_capcode(ra_313, s0_340, s1_315, sp_3 + 128<i32>, a3_467, 77<i32>, s2_342, s3_399, s4_344, mstatus, Mem726[sp_3 + 40<i32>:word32], Mem726[sp_3 + 64<i32>:word32], Mem726[sp_3 + 68<i32>:word32], Mem726[sp_3 + 104<i32>:word32], Mem726[sp_3 + 140<i32>:word32], out s0_340, out s1_315, out a0_732, out a3_467, out s2_342, out s3_399, out s4_344, out s5_510, out s6_750, out s7_475, out s8_752, out s10_472, out s11_478, out mstatus)
	branch a0_732 != 0<32> l23068380
l23068380:
	branch CONVERT(Mem726[s0_340 + 1716<i32>:byte], byte, word32) >u 1<32> l23068334
l2306838A:
	branch CONVERT(Mem726[s6_750 + 1953<i32>:byte], byte, word32) >u 1<32> l23068334
l23068392:
	branch Mem726[s7_475 + 1376<i32>:int32] == 0<32> l230683FA
l230683FA:
	word32 a5_13388
	xTaskGetTickCount(out a5_13388)
l23068398:
	word32 a5_13389
	xTaskGetTickCountFromISR(out a5_13389)
l2306839C:
	a3_582 = s8_752 + 988<i32>
	a0_587 = 0x230C268C<32>
l23068330:
	word32 a0_13390
	word32 a4_13393
	word32 a5_13394
	word32 s9_13397
	word32 s8_13396
	word32 s6_13395
	word32 a2_13392
	word32 a1_13391
	ra_313 = bl_printk(ra_313, a0_587, a3_582, Mem785[sp_3 + 8<i32>:word32], Mem785[sp_3 + 40<i32>:word32], Mem785[sp_3 + 112<i32>:word32], Mem785[sp_3 + 116<i32>:word32], Mem785[sp_3 + 152<i32>:word32], Mem785[sp_3 + 188<i32>:word32], out s1_315, out a0_13390, out a1_13391, out a2_13392, out a3_467, out a4_13393, out a5_13394, out s2_342, out s3_399, out s4_344, out s5_510, out s6_13395, out s7_475, out s8_13396, out s9_13397, out s10_472, out s11_478)
l23068334:
	s5_473 = s5_510 + 1<32>
	branch s5_473 != 2<32> l23067E4C
l2306833C:
	branch CONVERT(Mem819[s0_340 + 1716<i32>:byte], byte, word32) <=u 2<32> l23068406
l23068406:
	branch CONVERT(Mem819[0x420267A1<32>:byte], byte, word32) >u 2<32> l23068346
l23068412:
	branch Mem819[0x4200F560<32>:int32] == 0<32> l23068444
l23068444:
	word32 a5_13398
	xTaskGetTickCount(out a5_13398)
l2306841C:
	word32 a5_13399
	xTaskGetTickCountFromISR(out a5_13399)
l23068420:
	word32 s9_13413
	word32 s11_13415
	word32 s10_13414
	word32 s1_13400
	word32 a0_13401
	word32 a1_13402
	word32 s8_13412
	word32 s7_13411
	word32 a2_13403
	word32 s6_13410
	word32 s5_13409
	word32 a3_13404
	word32 a4_13405
	word32 a5_13406
	word32 s4_13408
	word32 s3_13407
	ra_313 = bl_printk(ra_313, 0x230C26B8<32>, 0x230C23DC<32>, Mem819[sp_3 + 8<i32>:word32], Mem819[sp_3 + 40<i32>:word32], Mem819[sp_3 + 112<i32>:word32], Mem819[sp_3 + 116<i32>:word32], Mem819[sp_3 + 152<i32>:word32], Mem819[sp_3 + 188<i32>:word32], out s1_13400, out a0_13401, out a1_13402, out a2_13403, out a3_13404, out a4_13405, out a5_13406, out s2_342, out s3_13407, out s4_13408, out s5_13409, out s6_13410, out s7_13411, out s8_13412, out s9_13413, out s10_13414, out s11_13415)
l23068346:
	s3_679 = 50<i32>
	s5_670 = 50<i32>
l2306836E:
	s5_670 = CONVERT(Mem726[sp_3 + 128<i32>:byte], byte, word32)
	branch CONVERT(Mem726[s0_340 + 1716<i32>:byte], byte, word32) <=u 1<32> l230683B4
l230683B4:
	s3_679 = s5_670
	branch CONVERT(Mem726[0x420267A1<32>:byte], byte, word32) >u 1<32> l23067FC6
l230683C2:
	branch Mem726[0x4200F560<32>:int32] == 0<32> l230683F4
l230683F4:
	word32 a5_13349
	xTaskGetTickCount(out a5_13349)
l230683CC:
	word32 a5_13350
	xTaskGetTickCountFromISR(out a5_13350)
l230683D0:
	word32 a1_13375
	word32 a3_13377
	word32 a5_13379
	word32 s3_13380
	word32 s6_13382
	word32 s8_13384
	word32 s9_13385
	word32 s11_13387
	word32 s10_13386
	word32 s7_13383
	word32 s4_13381
	word32 a4_13378
	word32 a2_13376
	word32 a0_13374
	word32 s1_13373
	ra_313 = bl_printk(ra_313, 0x230C2660<32>, 0x230C23DC<32>, Mem726[sp_3 + 8<i32>:word32], Mem726[sp_3 + 40<i32>:word32], Mem726[sp_3 + 112<i32>:word32], Mem726[sp_3 + 116<i32>:word32], Mem726[sp_3 + 152<i32>:word32], Mem726[sp_3 + 188<i32>:word32], out s1_13373, out a0_13374, out a1_13375, out a2_13376, out a3_13377, out a4_13378, out a5_13379, out s2_342, out s3_13380, out s4_13381, out s5_670, out s6_13382, out s7_13383, out s8_13384, out s9_13385, out s10_13386, out s11_13387)
l2306837C:
	s3_679 = s5_670
l23067FC6:
	word32 a3_13327
	ra_313 = hal_sys_capcode_update(ra_313, s5_670, s3_679 & 255<i32>, s2_342, s3_679, Mem936[sp_3:word32], Mem936[sp_3 + 4<i32>:word32], Mem936[sp_3 + 40<i32>:word32], Mem936[sp_3 + 72<i32>:word32], out s1_315, out a3_13327)
l23067FD0:
	word32 a4_969
	word32 s0_974
	word32 s2_13095
	word32 s4_13097
	word32 s6_13099
	word32 s8_13100
	word32 s5_13098
	word32 s3_13096
	word32 a5_13094
	word32 a1_13092
	word32 a3_13093
	word32 a0_1034
	word32 s1_1019
	word32 ra_1018 = fdt_getprop(ra_313, s1_315, 0x230BEBB4<32>, Mem964[sp_3 + 8<i32>:word32], Mem964[sp_3 + 40<i32>:word32], Mem964[sp_3 + 68<i32>:word32], Mem964[sp_3 + 216<i32>:word32], Mem964[sp_3 + 264<i32>:word32], out s0_974, out s1_1019, out a0_1034, out a1_13092, out a3_13093, out a4_969, out a5_13094, out s2_13095, out s3_13096, out s4_13097, out s5_13098, out s6_13099, out s8_13100)
	word32 s6_1088 = a0_1034
	branch a4_969 != 60<i32> l23068450
l23068450:
	branch CONVERT(Mem964[s0_974 + 1716<i32>:byte], byte, word32) >u 4<32> l23068066
l2306845A:
	branch CONVERT(Mem964[0x420267A1<32>:byte], byte, word32) >u 4<32> l23068066
l23068466:
	branch Mem964[0x4200F560<32>:int32] == 0<32> l23068498
l23068498:
	word32 a5_13261
	xTaskGetTickCount(out a5_13261)
l23068470:
	word32 a5_13262
	xTaskGetTickCountFromISR(out a5_13262)
l23068474:
	word32 a1_13277
	word32 a2_13278
	word32 a4_13280
	word32 s2_13282
	word32 s7_13287
	word32 s9_13289
	word32 s11_13291
	word32 s10_13290
	word32 s8_13288
	word32 s6_13286
	word32 s3_13283
	word32 s5_13285
	word32 s4_13284
	word32 a5_13281
	word32 a3_13279
	word32 a0_13276
	ra_1018 = bl_printk(ra_1018, 0x230BEC3C<32>, 0x230C23DC<32>, Mem964[sp_3 + 8<i32>:word32], Mem964[sp_3 + 40<i32>:word32], Mem964[sp_3 + 112<i32>:word32], Mem964[sp_3 + 116<i32>:word32], Mem964[sp_3 + 152<i32>:word32], Mem964[sp_3 + 188<i32>:word32], out s1_1019, out a0_13276, out a1_13277, out a2_13278, out a3_13279, out a4_13280, out a5_13281, out s2_13282, out s3_13283, out s4_13284, out s5_13285, out s6_13286, out s7_13287, out s8_13288, out s9_13289, out s10_13290, out s11_13291)
l23067FEE:
	word32 s3_1032 = 0<32>
	word32 s5_1033 = 60<i32>
l23067FF4:
	a0_1034 = fdt32_to_cpu(a0_1034)
	Mem1044[a0_1034:word32] = sp_3 + 128<i32> + s3_1032
	s3_1032 = s3_1032 + 4<32>
	branch s3_1032 != 60<i32> l23067FF4
l2306800A:
	branch CONVERT(Mem1044[s0_974 + 1716<i32>:byte], byte, word32) >u 2<32> l23068052
l23068018:
	branch CONVERT(Mem1044[0x420267A1<32>:byte], byte, word32) >u 2<32> l23068052
l23068024:
	branch Mem1044[0x4200F560<32>:int32] == 0<32> l2306844A
l2306844A:
	word32 a5_13137
	xTaskGetTickCount(out a5_13137)
l23068030:
	word32 a5_13138
	xTaskGetTickCountFromISR(out a5_13138)
l23068034:
	word32 s8_13176
	word32 s10_13178
	word32 s11_13179
	word32 s9_13177
	word32 s4_13174
	word32 s7_13175
	word32 s1_13165
	word32 s2_13172
	word32 s3_13173
	word32 a0_13166
	word32 a4_13170
	word32 a5_13171
	word32 a1_13167
	word32 a3_13169
	word32 a2_13168
	ra_1018 = bl_printk(ra_1018, 0x230BEBFC<32>, 0x230C23DC<32>, Mem1044[sp_3 + 8<i32>:word32], Mem1044[sp_3 + 40<i32>:word32], Mem1044[sp_3 + 112<i32>:word32], Mem1044[sp_3 + 116<i32>:word32], Mem1044[sp_3 + 152<i32>:word32], Mem1044[sp_3 + 188<i32>:word32], out s1_13165, out a0_13166, out a1_13167, out a2_13168, out a3_13169, out a4_13170, out a5_13171, out s2_13172, out s3_13173, out s4_13174, out s5_1033, out s6_1088, out s7_13175, out s8_13176, out s9_13177, out s10_13178, out s11_13179)
l23068052:
	word32 a4_13127
	word32 s2_13129
	word32 s3_13130
	word32 s4_13131
	word32 s5_13132
	word32 s6_13133
	word32 s7_13134
	word32 s8_13135
	word32 s9_13136
	word32 a5_13128
	word32 a3_13126
	word32 s0_13125
	ra_1018 = log_buf_out(ra_1018, sp_3 + 128<i32>, 60<i32>, 0<32>, s5_1033, s6_1088, Mem1044[sp_3 + 20<i32>:word32], Mem1044[sp_3 + 32<i32>:word32], Mem1044[sp_3 + 36<i32>:word32], Mem1044[sp_3 + 48<i32>:word32], Mem1044[sp_3 + 88<i32>:word32], Mem1044[sp_3 + 108<i32>:word32], Mem1044[sp_3 + 124<i32>:word32], Mem1044[sp_3 + 268<i32>:word32], out s0_13125, out s1_1019, out a3_13126, out a4_13127, out a5_13128, out s2_13129, out s3_13130, out s4_13131, out s5_13132, out s6_13133, out s7_13134, out s8_13135, out s9_13136)
l23068066:
	word32 a0_1141
	word32 a4_1145
	word32 s0_1150
	word32 s5_13258
	word32 s8_13260
	word32 s6_13259
	word32 s3_13256
	word32 s4_13257
	word32 s2_13255
	word32 a1_13252
	word32 a5_13254
	word32 a3_13253
	word32 s1_1151
	word32 ra_1149 = fdt_getprop(ra_1018, s1_1019, 0x230BEC28<32>, Mem1140[sp_3 + 8<i32>:word32], Mem1140[sp_3 + 40<i32>:word32], Mem1140[sp_3 + 68<i32>:word32], Mem1140[sp_3 + 216<i32>:word32], Mem1140[sp_3 + 264<i32>:word32], out s0_1150, out s1_1151, out a0_1141, out a1_13252, out a3_13253, out a4_1145, out a5_13254, out s2_13255, out s3_13256, out s4_13257, out s5_13258, out s6_13259, out s8_13260)
	branch a4_1145 != 56<i32> l230684A4
l230684A4:
	branch CONVERT(Mem1140[s0_1150 + 1716<i32>:byte], byte, word32) >u 4<32> l230680FE
l230684AE:
	branch CONVERT(Mem1140[0x420267A1<32>:byte], byte, word32) >u 4<32> l230680FE
l230684BA:
	branch Mem1140[0x4200F560<32>:int32] == 0<32> l230684EC
l230684EC:
	word32 a5_13204
	xTaskGetTickCount(out a5_13204)
l230684C4:
	word32 a5_13205
	xTaskGetTickCountFromISR(out a5_13205)
l230684C8:
	word32 a2_13222
	word32 a4_13224
	word32 a5_13225
	word32 s2_13226
	word32 s11_13235
	word32 s3_13227
	word32 s10_13234
	word32 s9_13233
	word32 s4_13228
	word32 s5_13229
	word32 s6_13230
	word32 s8_13232
	word32 s7_13231
	word32 a3_13223
	word32 a1_13221
	word32 a0_13220
	ra_1149 = bl_printk(ra_1149, 0x230BECA4<32>, 0x230C23DC<32>, Mem1140[sp_3 + 8<i32>:word32], Mem1140[sp_3 + 40<i32>:word32], Mem1140[sp_3 + 112<i32>:word32], Mem1140[sp_3 + 116<i32>:word32], Mem1140[sp_3 + 152<i32>:word32], Mem1140[sp_3 + 188<i32>:word32], out s1_1151, out a0_13220, out a1_13221, out a2_13222, out a3_13223, out a4_13224, out a5_13225, out s2_13226, out s3_13227, out s4_13228, out s5_13229, out s6_13230, out s7_13231, out s8_13232, out s9_13233, out s10_13234, out s11_13235)
l23068082:
	word32 s5_1207 = sp_3 + 96<i32>
	word32 s3_1208 = a0_1141
	word32 s6_1210 = s5_1207
l2306808E:
	s5_1207 = s5_1207 + 2<32>
	Mem1220[s5_1207 + 4094<i32>:word16] = SLICE(fdt32_to_cpu(Mem1212[s3_1208:int32]), word16, 0)
	s3_1208 = s3_1208 + 4<32>
	branch a0_1141 + 56<i32> != s3_1208 l2306808E
l230680A2:
	branch CONVERT(Mem1220[s0_1150 + 1716<i32>:byte], byte, word32) >u 2<32> l230680EA
l230680B0:
	branch CONVERT(Mem1220[0x420267A1<32>:byte], byte, word32) >u 2<32> l230680EA
l230680BC:
	branch Mem1220[0x4200F560<32>:int32] == 0<32> l2306849E
l2306849E:
	word32 a5_13163
	xTaskGetTickCount(out a5_13163)
l230680C8:
	word32 a5_13164
	xTaskGetTickCountFromISR(out a5_13164)
l230680CC:
	word32 s4_13189
	word32 a5_13186
	word32 a1_13182
	word32 a2_13183
	word32 s7_13190
	word32 s9_13192
	word32 s11_13194
	word32 s10_13193
	word32 s8_13191
	word32 s2_13187
	word32 s3_13188
	word32 a3_13184
	word32 a4_13185
	word32 s1_13180
	word32 a0_13181
	ra_1149 = bl_printk(ra_1149, 0x230BEC6C<32>, 0x230C23DC<32>, Mem1220[sp_3 + 8<i32>:word32], Mem1220[sp_3 + 40<i32>:word32], Mem1220[sp_3 + 112<i32>:word32], Mem1220[sp_3 + 116<i32>:word32], Mem1220[sp_3 + 152<i32>:word32], Mem1220[sp_3 + 188<i32>:word32], out s1_13180, out a0_13181, out a1_13182, out a2_13183, out a3_13184, out a4_13185, out a5_13186, out s2_13187, out s3_13188, out s4_13189, out s5_1207, out s6_1210, out s7_13190, out s8_13191, out s9_13192, out s10_13193, out s11_13194)
l230680EA:
	word32 a3_13152
	word32 a5_13154
	word32 s2_13155
	word32 s3_13156
	word32 s8_13161
	word32 s9_13162
	word32 s7_13160
	word32 s4_13157
	word32 s6_13159
	word32 s5_13158
	word32 a4_13153
	word32 s0_13151
	ra_1149 = log_buf_out(ra_1149, s6_1210, 56<i32>, 0<32>, s5_1207, s6_1210, Mem1220[sp_3 + 20<i32>:word32], Mem1220[sp_3 + 32<i32>:word32], Mem1220[sp_3 + 36<i32>:word32], Mem1220[sp_3 + 48<i32>:word32], Mem1220[sp_3 + 88<i32>:word32], Mem1220[sp_3 + 108<i32>:word32], Mem1220[sp_3 + 124<i32>:word32], Mem1220[sp_3 + 268<i32>:word32], out s0_13151, out s1_1151, out a3_13152, out a4_13153, out a5_13154, out s2_13155, out s3_13156, out s4_13157, out s5_13158, out s6_13159, out s7_13160, out s8_13161, out s9_13162)
l230680FE:
	word32 a0_1317
	word32 a4_1321
	word32 s0_1326
	word32 a5_13199
	word32 s4_13201
	word32 s8_13203
	word32 s5_13202
	word32 s3_13200
	word32 a3_13198
	word32 a1_13197
	ra_1325 = fdt_getprop(ra_1149, s1_1151, 0x230BEC98<32>, Mem1316[sp_3 + 8<i32>:word32], Mem1316[sp_3 + 40<i32>:word32], Mem1316[sp_3 + 68<i32>:word32], Mem1316[sp_3 + 216<i32>:word32], Mem1316[sp_3 + 264<i32>:word32], out s0_1326, out s1_1327, out a0_1317, out a1_13197, out a3_13198, out a4_1321, out a5_13199, out s2_1328, out s3_13200, out s4_13201, out s5_13202, out s6_1332, out s8_13203)
	branch a4_1321 != 4<32> l230684F8
l230684F8:
	branch CONVERT(Mem1316[s0_1326 + 1716<i32>:byte], byte, word32) >u 4<32> l23068172
l23068500:
	branch CONVERT(Mem1316[0x420267A1<32>:byte], byte, word32) >u 4<32> l23068172
l2306850C:
	branch Mem1316[0x4200F560<32>:int32] == 0<32> l2306853E
l2306853E:
	word32 a5_13236
	xTaskGetTickCount(out a5_13236)
l23068516:
	word32 a5_13237
	xTaskGetTickCountFromISR(out a5_13237)
l2306851A:
	word32 a2_13240
	word32 a4_13242
	word32 s3_13244
	word32 s4_13245
	word32 s7_13247
	word32 s9_13249
	word32 s10_13250
	word32 s11_13251
	word32 s8_13248
	word32 s5_13246
	word32 a5_13243
	word32 a3_13241
	word32 a1_13239
	word32 a0_13238
	ra_1325 = bl_printk(ra_1325, 0x230BECF8<32>, 0x230C23DC<32>, Mem1316[sp_3 + 8<i32>:word32], Mem1316[sp_3 + 40<i32>:word32], Mem1316[sp_3 + 112<i32>:word32], Mem1316[sp_3 + 116<i32>:word32], Mem1316[sp_3 + 152<i32>:word32], Mem1316[sp_3 + 188<i32>:word32], out s1_1327, out a0_13238, out a1_13239, out a2_13240, out a3_13241, out a4_13242, out a5_13243, out s2_1328, out s3_13244, out s4_13245, out s5_13246, out s6_1332, out s7_13247, out s8_13248, out s9_13249, out s10_13250, out s11_13251)
l23068118:
	branch CONVERT(Mem1316[s0_1326 + 1716<i32>:byte], byte, word32) >u 2<32> l23068172
l23068122:
	branch CONVERT(Mem1316[0x420267A1<32>:byte], byte, word32) >u 2<32> l23068172
l2306812E:
	word32 a0_1389
	word32 s2_1388 = Mem1316[a0_1317:int32]
	branch Mem1316[0x4200F560<32>:int32] == 0<32> l230684F2
l230684F2:
	word32 a5_13195
	a0_1389 = xTaskGetTickCount(out a5_13195)
l2306813E:
	word32 a5_13196
	a0_1389 = xTaskGetTickCountFromISR(out a5_13196)
l23068142:
	Mem1395[sp_3 + 144<i32>:word32] = a0_1389
	fdt32_to_cpu(s2_1388)
	word32 a0_13206
	word32 a2_13208
	word32 a3_13209
	word32 s4_13213
	word32 s5_13214
	word32 s9_13217
	word32 s10_13218
	word32 s11_13219
	word32 s8_13216
	word32 s7_13215
	word32 a5_13211
	word32 s3_13212
	word32 a4_13210
	word32 a1_13207
	ra_1325 = bl_printk(ra_1325, 0x230C26E0<32>, 0x230C23DC<32>, Mem1395[sp_3 + 8<i32>:word32], Mem1395[sp_3 + 40<i32>:word32], Mem1395[sp_3 + 112<i32>:word32], Mem1395[sp_3 + 116<i32>:word32], Mem1395[sp_3 + 152<i32>:word32], Mem1395[sp_3 + 188<i32>:word32], out s1_1327, out a0_13206, out a1_13207, out a2_13208, out a3_13209, out a4_13210, out a5_13211, out s2_1328, out s3_13212, out s4_13213, out s5_13214, out s6_1332, out s7_13215, out s8_13216, out s9_13217, out s10_13218, out s11_13219)
l23068172:
	word32 a0_1445
	word32 a5_13082
	word32 s3_13083
	word32 s4_13084
	word32 s5_13085
	word32 s0_13081
	word32 s1_1455
	word32 s2_1456
	word32 s6_1460
	word32 ra_1453 = fdt_subnode_offset(ra_1325, s1_1327, s1_1327, 0x230BE910<32>, s2_1328, s6_1332, dwLocF8, dwLocC8, s9, out s0_13081, out s1_1455, out a0_1445, out a5_13082, out s2_1456, out s3_13083, out s4_13084, out s5_13085, out s6_1460)
	branch a0_1445 <= 0<32> l230685FE
l23068188:
	word32 a0_1471
	word32 s0_13420
	word32 s3_13421
	word32 s5_13423
	word32 s8_13424
	word32 s4_13422
	ra_1453 = fdt_stringlist_count(ra_1453, s1_1455, 0x230C54F8<32>, 0x230C5000<32>, dwLocF8, dwLocDC, dwLoc48, s9, out s0_13420, out s1_1455, out a0_1471, out s2_1456, out s3_13421, out s4_13422, out s5_13423, out s6_1460, out s8_13424)
	branch a0_1471 != 1<32> l230685FE
l230681A0:
	word32 a2_1525
	word32 s8_13447
	word32 s10_13449
	word32 s11_13450
	word32 s9_13448
	word32 s1_13425
	word32 a0_13426
	word32 s5_13445
	word32 s7_13446
	word32 a1_13427
	word32 s4_13434
	word32 s6_13436
	word32 s3_13443
	word32 s4_13444
	word32 s8_13437
	word32 a4_13441
	word32 a5_13442
	word32 a0_13438
	word32 a3_13440
	word32 a1_13439
	word32 s5_13435
	word32 s2_13432
	word32 s3_13433
	word32 a5_13431
	word32 a2_13428
	word32 a4_13430
	word32 a3_13429
	word32 s0_1506
	ra_1453 = bl_printk(fdt_stringlist_get(ra_1453, s1_1455, s2_1456 + 1272<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_1506, out s1_13425, out a0_13426, out a1_13427, out a2_13428, out a3_13429, out a4_13430, out a5_13431, out s2_13432, out s3_13433, out s4_13434, out s5_13435, out s6_13436, out s8_13437), 0x230C2708<32>, dwLoc9C, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13438, out a1_13439, out a2_1525, out a3_13440, out a4_13441, out a5_13442, out s2_1456, out s3_13443, out s4_13444, out s5_13445, out s6_1460, out s7_13446, out s8_13447, out s9_13448, out s10_13449, out s11_13450)
	branch a2_1525 > 3<32> l230685FE
l230681C8:
	word32 a3_1552
	word32 a4_13453
	word32 a5_13454
	word32 a6_13455
	word32 a7_13456
	word32 a1_13451
	word32 a2_13452
	memcpy(fp - 176<i32>, s2_1456, a2_1525, out a1_13451, out a2_13452, out a3_1552, out a4_13453, out a5_13454, out a6_13455, out a7_13456)
	word32 a0_13457
	word32 a1_13458
	word32 a3_13460
	word32 a5_13462
	word32 s8_13467
	word32 s10_13469
	word32 s11_13470
	word32 s9_13468
	word32 s7_13466
	word32 s2_13463
	word32 s6_13465
	word32 s5_13464
	word32 a4_13461
	word32 a2_13459
	word32 s4_1578
	word32 s3_1577
	ra_1453 = bl_printk(ra_1453, 0x230C2728<32>, a3_1552, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13457, out a1_13458, out a2_13459, out a3_13460, out a4_13461, out a5_13462, out s2_13463, out s3_1577, out s4_1578, out s5_13464, out s6_13465, out s7_13466, out s8_13467, out s9_13468, out s10_13469, out s11_13470)
	word32 a1_13471
	word32 a2_13472
	word32 a5_13474
	word32 a4_13473
	word32 a3_1588
	word32 s10_1593 = strlen(fp - 176<i32>, out a1_13471, out a2_13472, out a3_1588, out a4_13473, out a5_13474)
	s2_1456 = 0<32>
	word32 s5_1595 = 0x42026000<32>
	s6_1460 = 0x4200F000<32>
	word32 s7_1597 = 0x230C2000<32>
	word32 s11_1600 = 0x230BF000<32>
	word32 dwLocB0_12051 = CONVERT(nLocB0, word24, uint32)
l23068204:
	bLocAA = SLICE(dwLocAC, int8, 16) (alias)
	branch s2_1456 >= s10_1593 l230682A6
l23068208:
	word32 a0_1843
	word32 a3_1839
	word32 a0_1767
	word32 a5_1607 = CONVERT(Mem1606[fp - 176<i32> + s2_1456:byte], byte, word32)
	branch a5_1607 == 70<i32> l23068A18
l23068A18:
	word32 a0_1660
	word32 a3_1654
	word32 a0_1617
	word32 a5_1622
	word32 a4_13476
	word32 s8_13477
	word32 a1_13475
	fdt_getprop(ra_1453, s1_1455, 0x230BE914<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_1506, out s1_1455, out a0_1617, out a1_13475, out a3_1588, out a4_13476, out a5_1622, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s8_13477)
	ra_1453 = dwArgF4
	branch a5_1622 != 6<32> l23068A96
l23068A96:
	branch CONVERT(Mem1640[s0_1506 + 1716<i32>:byte], byte, word32) >u 4<32> l2306829E
l23068AA0:
	branch CONVERT(Mem1640[s5_1595 + 1953<i32>:byte], byte, word32) >u 4<32> l23068AC8
l23068AA8:
	branch Mem1640[s6_1460 + 1376<i32>:int32] == 0<32> l23068AFE
l23068AFE:
	word32 a5_13594
	xTaskGetTickCount(out a5_13594)
l23068AAE:
	word32 a5_13595
	xTaskGetTickCountFromISR(out a5_13595)
l23068AB2:
	a3_1654 = s7_1597 + 988<i32>
	a0_1660 = s11_1600 + -1712<i32>
l23068A36:
	word32 a1_13556
	word32 a3_13558
	word32 a4_13559
	word32 a6_13561
	word32 a7_13562
	word32 a5_13560
	word32 a2_13557
	memcpy(fp - 128<i32>, a0_1617, 6<32>, out a1_13556, out a2_13557, out a3_13558, out a4_13559, out a5_13560, out a6_13561, out a7_13562)
	bl_wifi_sta_mac_addr_set(fp - 128<i32>)
	word32 a0_1696
	word32 a4_1700
	word32 a5_1701
	word32 a1_13563
	word32 s8_13564
	fdt_getprop(dwArgF4, s1_1455, 0x230BE944<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_1506, out s1_1455, out a0_1696, out a1_13563, out a3_1588, out a4_1700, out a5_1701, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s8_13564)
	ra_1453 = dwArgD4
	branch a4_1700 == a5_1701 l23068B04
l23068B04:
	word32 a4_13568
	word32 a5_13569
	word32 a7_13571
	word32 a6_13570
	word32 a2_13566
	word32 a3_13567
	word32 a1_13565
	memcpy(fp - 128<i32>, a0_1696, 6<32>, out a1_13565, out a2_13566, out a3_13567, out a4_13568, out a5_13569, out a6_13570, out a7_13571)
	bl_wifi_ap_mac_addr_set(fp - 128<i32>)
	branch CONVERT(Mem1640[s0_1506 + 1716<i32>:byte], byte, word32) >u 1<32> l2306858A
l23068B1C:
	branch CONVERT(Mem1640[0x420267A1<32>:byte], byte, word32) >u 1<32> l23068594
l23068B28:
	branch Mem1640[0x4200F560<32>:int32] == 0<32> l23068B5C
l23068B5C:
	word32 a5_13592
	xTaskGetTickCount(out a5_13592)
l23068B32:
	word32 a5_13593
	xTaskGetTickCountFromISR(out a5_13593)
l23068B36:
	a0_1767 = 0x230C27C4<32>
l23068A60:
	branch CONVERT(Mem1640[s0_1506 + 1716<i32>:byte], byte, word32) >u 4<32> l2306829E
l23068A6A:
	branch CONVERT(Mem1640[s5_1595 + 1953<i32>:byte], byte, word32) >u 4<32> l23068AC8
l23068A72:
	branch Mem1640[s6_1460 + 1376<i32>:int32] == 0<32> l23068B56
l23068B56:
	word32 a5_13572
	xTaskGetTickCount(out a5_13572)
l23068A7A:
	word32 a5_13573
	xTaskGetTickCountFromISR(out a5_13573)
l23068A7E:
	a3_1654 = s7_1597 + 988<i32>
	a0_1660 = 0x230C279C<32>
l23068AC4:
	word32 a4_13577
	word32 s8_13579
	word32 s9_13580
	word32 a5_13578
	word32 a2_13576
	word32 a1_13575
	word32 a0_13574
	ra_1453 = bl_printk(ra_1453, a0_1660, a3_1654, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13574, out a1_13575, out a2_13576, out a3_1588, out a4_13577, out a5_13578, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s7_1597, out s8_13579, out s9_13580, out s10_1593, out s11_1600)
l23068AC8:
	branch CONVERT(Mem1640[s0_1506 + 1716<i32>:byte], byte, word32) >u 1<32> l2306829E
l23068AD2:
	branch CONVERT(Mem1640[s5_1595 + 1953<i32>:byte], byte, word32) >u 1<32> l2306829E
l23068ADA:
	branch Mem1640[s6_1460 + 1376<i32>:int32] == 0<32> l23068B62
l23068B62:
	word32 a5_13590
	xTaskGetTickCount(out a5_13590)
l23068AE0:
	word32 a5_13591
	xTaskGetTickCountFromISR(out a5_13591)
l23068AE4:
	a3_1839 = s7_1597 + 988<i32>
	a0_1843 = 0x230C27F0<32>
l23068218:
	branch a5_1607 == 77<i32> l23068B68
l23068B68:
	word32 a0_1850
	ra_1453 = bl_efuse_read_mac_factory(ra_1453, s0_1506, s1_1455, fp - 128<i32>, a3_1588, 77<i32>, s2_1456, s3_1577, s4_1578, mstatus, dwLocF8, dwLocD8, dwLocC0, dwLocBC, dwLocB0_12051, dwLocAC, s10, s2, dwLoc74, dwLoc64, out s0_1506, out s1_1455, out a0_1850, out a3_1588, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s7_1597, out s10_1593, out s11_1600, out mstatus)
	branch a0_1850 != 0<32> l23068BF0
l23068B70:
	word32 a0_1879 = CONVERT(bLoc80, byte, word32)
	word32 a6_1880 = CONVERT(bLoc7F, byte, word32)
	word32 a1_1881 = CONVERT(bLoc7E, byte, word32)
	word32 a2_1882 = CONVERT(bLoc7D, byte, word32)
	word32 a3_1883 = CONVERT(bLoc7C_12274, byte, word32)
	word32 a4_1886 = CONVERT(bLoc7B_12275, byte, word32)
	a3_1588 = a3_1883 | (a2_1882 | (a1_1881 | (a0_1879 | a6_1880)))
	word32 a5_1893 = a0_1879 & a6_1880 & a1_1881 & a2_1882 & a3_1883 & a4_1886
	branch (a4_1886 | a3_1588) == 0<32> l23068BF0
l23068BA2:
	branch a5_1893 == 1<32> l23068BF0
l23068BF0:
	branch CONVERT(Mem1606[s0_1506 + 1716<i32>:byte], byte, word32) >u 1<32> l2306829E
l23068BFA:
	branch CONVERT(Mem1606[s5_1595 + 1953<i32>:byte], byte, word32) >u 1<32> l2306829E
l23068C02:
	branch Mem1606[s6_1460 + 1376<i32>:int32] == 0<32> l23068C26
l23068C26:
	word32 a5_13581
	xTaskGetTickCount(out a5_13581)
l23068C08:
	word32 a5_13582
	xTaskGetTickCountFromISR(out a5_13582)
l23068C0C:
	a3_1839 = s7_1597 + 988<i32>
	a0_1843 = 0x230C2848<32>
l23068BA8:
	branch CONVERT(Mem1606[s0_1506 + 1716<i32>:byte], byte, word32) >u 1<32> l2306858A
l23068BB0:
	branch CONVERT(Mem1606[0x420267A1<32>:byte], byte, word32) >u 1<32> l23068594
l23068BBC:
	branch Mem1606[0x4200F560<32>:int32] == 0<32> l23068BEA
l23068BEA:
	word32 a5_13540
	xTaskGetTickCount(out a5_13540)
l23068BC6:
	word32 a5_13541
	xTaskGetTickCountFromISR(out a5_13541)
l23068BCA:
	a0_1767 = 0x230C281C<32>
l23068220:
	branch a5_1607 != 66<i32> l23068C2C
l23068C2C:
	branch Mem1606[0x4200F560<32>:int32] == 0<32> l23068C66
l23068C66:
	word32 a5_13507
	xTaskGetTickCount(out a5_13507)
l23068C36:
	word32 a5_13508
	xTaskGetTickCountFromISR(out a5_13508)
l23068C3A:
	word32 s10_13538
	word32 s11_13539
	word32 s8_13536
	word32 s9_13537
	word32 a1_13525
	word32 a3_13527
	word32 s6_13534
	word32 s7_13535
	word32 a4_13528
	word32 s4_13532
	word32 s5_13533
	word32 a5_13529
	word32 s3_13531
	word32 s2_13530
	word32 a2_13526
	word32 s1_13523
	word32 a0_13524
	bl_printk(ra_1453, 0x230B1CAC<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13523, out a0_13524, out a1_13525, out a2_13526, out a3_13527, out a4_13528, out a5_13529, out s2_13530, out s3_13531, out s4_13532, out s5_13533, out s6_13534, out s7_13535, out s8_13536, out s9_13537, out s10_13538, out s11_13539)
l23068C64:
l23068228:
	word32 a0_1995 = CONVERT(bLoc80, byte, word32)
	word32 a6_1996 = CONVERT(bLoc7F, byte, word32)
	word32 a1_1997 = CONVERT(bLoc7E, byte, word32)
	word32 a2_1998 = CONVERT(bLoc7D, byte, word32)
	word32 a3_1999 = CONVERT(bLoc7C_12274, byte, word32)
	word32 a4_2002 = CONVERT(bLoc7B_12275, byte, word32)
	a3_1588 = a3_1999 | (a2_1998 | (a1_1997 | (a0_1995 | a6_1996)))
	ra_1453 = bl_efuse_read_mac(ra_1453, s0_1506, s1_1455, fp - 128<i32>, s2_1456, s3_1577, s4_1578, out s0_1506, out s1_1455, out s2_1456, out s3_1577, out s4_1578)
	word32 a5_2009 = a0_1995 & a6_1996 & a1_1997 & a2_1998 & a3_1999 & a4_2002
	branch (a4_2002 | a3_1588) == 0<32> l23068266
l23068260:
	branch a5_2009 != 1<32> l23068544
l23068544:
	branch CONVERT(Mem1606[s0_1506 + 1716<i32>:byte], byte, word32) >u 1<32> l2306858A
l2306854C:
	branch CONVERT(Mem1606[0x420267A1<32>:byte], byte, word32) >u 1<32> l23068594
l23068558:
	branch Mem1606[0x4200F560<32>:int32] == 0<32> l23068A0A
l23068A0A:
	word32 a5_13487
	xTaskGetTickCount(out a5_13487)
l23068564:
	word32 a5_13488
	xTaskGetTickCountFromISR(out a5_13488)
l23068568:
	a0_1767 = 0x230C2744<32>
l23068586:
	word32 a2_13544
	word32 a3_13545
	word32 a5_13547
	word32 s4_13549
	word32 s10_13554
	word32 s11_13555
	word32 s9_13553
	word32 s5_13550
	word32 s8_13552
	word32 s7_13551
	word32 s3_13548
	word32 a4_13546
	word32 a0_13542
	word32 a1_13543
	ra_1453 = bl_printk(ra_1453, a0_1767, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13542, out a1_13543, out a2_13544, out a3_13545, out a4_13546, out a5_13547, out s2_1456, out s3_13548, out s4_13549, out s5_13550, out s6_1460, out s7_13551, out s8_13552, out s9_13553, out s10_13554, out s11_13555)
l23068266:
	branch CONVERT(Mem1606[s0_1506 + 1716<i32>:byte], byte, word32) >u 1<32> l2306829E
l23068270:
	branch CONVERT(Mem1606[s5_1595 + 1953<i32>:byte], byte, word32) >u 1<32> l2306829E
l23068278:
	branch Mem1606[s6_1460 + 1376<i32>:int32] == 0<32> l23068A10
l23068A10:
	word32 a5_13478
	xTaskGetTickCount(out a5_13478)
l23068280:
	word32 a5_13479
	xTaskGetTickCountFromISR(out a5_13479)
l23068284:
	a3_1839 = s7_1597 + 988<i32>
	a0_1843 = 0x230C2770<32>
l2306829A:
	word32 s9_13589
	word32 s8_13588
	word32 a0_13583
	word32 a1_13584
	word32 a2_13585
	word32 a5_13587
	word32 a4_13586
	ra_1453 = bl_printk(ra_1453, a0_1843, a3_1839, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13583, out a1_13584, out a2_13585, out a3_1588, out a4_13586, out a5_13587, out s2_1456, out s3_1577, out s4_1578, out s5_1595, out s6_1460, out s7_1597, out s8_13588, out s9_13589, out s10_1593, out s11_1600)
l2306829E:
	s2_1456 = s2_1456 + 1<32>
	branch s2_1456 != 3<32> l23068204
l230682A6:
	branch CONVERT(Mem2145[s0_1506 + 1716<i32>:byte], byte, word32) <=u 2<32> l23068C6C
l23068C6C:
	branch CONVERT(Mem2145[0x420267A1<32>:byte], byte, word32) >u 2<32> l230682B0
l23068C78:
	branch Mem2145[0x4200F560<32>:int32] == 0<32> l23068CAC
l23068CAC:
	word32 a5_13505
	xTaskGetTickCount(out a5_13505)
l23068C82:
	word32 a5_13506
	xTaskGetTickCountFromISR(out a5_13506)
l23068C86:
	word32 a0_13509
	word32 a2_13511
	word32 a3_13512
	word32 a5_13514
	word32 s4_13516
	word32 s5_13517
	word32 s7_13518
	word32 s11_13522
	word32 s8_13519
	word32 s10_13521
	word32 s9_13520
	word32 s3_13515
	word32 a4_13513
	word32 a1_13510
	ra_1453 = bl_printk(ra_1453, 0x230C2874<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13509, out a1_13510, out a2_13511, out a3_13512, out a4_13513, out a5_13514, out s2_1456, out s3_13515, out s4_13516, out s5_13517, out s6_1460, out s7_13518, out s8_13519, out s9_13520, out s10_13521, out s11_13522)
l230682B0:
	word32 a2_13481
	word32 a3_13482
	word32 a6_13485
	word32 a7_13486
	word32 a5_13484
	word32 a4_13483
	word32 a1_13480
	memcpy(fp - 128<i32>, 0x230CBAD0<32>, 6<32>, out a1_13480, out a2_13481, out a3_13482, out a4_13483, out a5_13484, out a6_13485, out a7_13486)
l2306858A:
	wLoc7C_8114 = SLICE(dwLoc7C, word16, 0) (alias)
	branch CONVERT(Mem2220[s0_1506 + 1716<i32>:byte], byte, word32) >u 2<32> l230685F2
l23068594:
	branch CONVERT(Mem2225[0x420267A1<32>:byte], byte, word32) >u 2<32> l230685F2
l230685A2:
	branch Mem2225[0x4200F560<32>:int32] == 0<32> l23068CB2
l23068CB2:
	word32 a5_13489
	xTaskGetTickCount(out a5_13489)
l230685AE:
	word32 a5_13490
	xTaskGetTickCountFromISR(out a5_13490)
l230685B2:
	word32 a1_13492
	word32 a2_13493
	word32 a3_13494
	word32 s11_13504
	word32 s10_13503
	word32 a4_13495
	word32 s9_13502
	word32 s8_13501
	word32 a5_13496
	word32 s3_13497
	word32 s4_13498
	word32 s7_13500
	word32 s5_13499
	word32 a0_13491
	ra_1453 = bl_printk(ra_1453, 0x230C28A4<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_1455, out a0_13491, out a1_13492, out a2_13493, out a3_13494, out a4_13495, out a5_13496, out s2_1456, out s3_13497, out s4_13498, out s5_13499, out s6_1460, out s7_13500, out s8_13501, out s9_13502, out s10_13503, out s11_13504)
l230685F2:
	bl_wifi_ap_mac_addr_set(fp - 128<i32>)
	bl_wifi_sta_mac_addr_set(fp - 128<i32>)
l230685FE:
	word32 a0_2355
	word32 s0_13416
	word32 s4_13418
	word32 s5_13419
	word32 s3_13417
	word32 s1_2365
	word32 a5_2360
	word32 s2_2366
	word32 s6_2370
	word32 ra_2363 = fdt_subnode_offset(ra_1453, s1_1455, s1_1455, 0x230BE8A0<32>, s2_1456, s6_1460, dwLocF8, dwLocC8, s9, out s0_13416, out s1_2365, out a0_2355, out a5_2360, out s2_2366, out s3_13417, out s4_13418, out s5_13419, out s6_2370)
	branch a0_2355 <= 0<32> l23068694
l23068614:
	word32 a0_2380
	word32 a4_2384
	word32 s0_2389
	word32 a3_13602
	word32 s2_13604
	word32 s3_13605
	word32 s4_13606
	word32 s5_13607
	word32 s8_13608
	word32 a5_13603
	word32 a1_13601
	ra_2363 = fdt_getprop(ra_2363, s1_2365, 0x230BE8A8<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2389, out s1_2365, out a0_2380, out a1_13601, out a3_13602, out a4_2384, out a5_13603, out s2_13604, out s3_13605, out s4_13606, out s5_13607, out s6_2370, out s8_13608)
	a5_2360 = 4<32>
	s2_2366 = a0_2380
	branch a4_2384 != 4<32> l23068CC0
l23068CC0:
	branch CONVERT(Mem2353[s0_2389 + 1716<i32>:byte], byte, word32) >u 4<32> l23068694
l23068CC8:
	branch CONVERT(Mem2353[0x420267A1<32>:byte], byte, word32) >u 4<32> l23068694
l23068CD4:
	branch Mem2353[0x4200F560<32>:int32] == 0<32> l23068D06
l23068D06:
	word32 a5_14159
	xTaskGetTickCount(out a5_14159)
l23068CDE:
	word32 a5_14160
	xTaskGetTickCountFromISR(out a5_14160)
l23068CE2:
	word32 s8_14188
	word32 s9_14189
	word32 s11_14191
	word32 s10_14190
	word32 a1_14180
	word32 a4_14183
	word32 s3_14184
	word32 s7_14187
	word32 s4_14185
	word32 s5_14186
	word32 a2_14181
	word32 a3_14182
	word32 a0_14179
	ra_2363 = bl_printk(ra_2363, 0x230BE8E8<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2365, out a0_14179, out a1_14180, out a2_14181, out a3_14182, out a4_14183, out a5_2360, out s2_2366, out s3_14184, out s4_14185, out s5_14186, out s6_2370, out s7_14187, out s8_14188, out s9_14189, out s10_14190, out s11_14191)
l2306862E:
	branch CONVERT(Mem2353[s0_2389 + 1716<i32>:byte], byte, word32) >u 2<32> l23068684
l23068638:
	branch CONVERT(Mem2353[0x420267A1<32>:byte], byte, word32) >u 2<32> l23068684
l23068644:
	branch Mem2353[0x4200F560<32>:int32] == 0<32> l23068CBA
l23068CBA:
	word32 a5_13609
	xTaskGetTickCount(out a5_13609)
l23068650:
	word32 a5_13610
	xTaskGetTickCountFromISR(out a5_13610)
l23068654:
	fdt32_to_cpu(Mem2458[a0_2380:int32])
	word32 a4_13632
	word32 a5_13633
	word32 s5_13636
	word32 s4_13635
	word32 s3_13634
	word32 s7_13637
	word32 s8_13638
	word32 s10_13640
	word32 s11_13641
	word32 s9_13639
	word32 a0_13628
	word32 a2_13630
	word32 a3_13631
	word32 a1_13629
	ra_2363 = bl_printk(ra_2363, 0x230C28E8<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2365, out a0_13628, out a1_13629, out a2_13630, out a3_13631, out a4_13632, out a5_13633, out s2_2366, out s3_13634, out s4_13635, out s5_13636, out s6_2370, out s7_13637, out s8_13638, out s9_13639, out s10_13640, out s11_13641)
l23068684:
	a5_2360 = bl_wifi_country_code_set(fdt32_to_cpu(Mem2497[s2_2366:int32]) & 255<i32>)
l23068694:
	word32 a0_2522
	word32 a5_13597
	word32 s4_13599
	word32 s5_13600
	word32 s3_13598
	word32 s0_13596
	word32 s2_2533
	word32 s6_2537
	word32 s1_2532
	word32 ra_2530 = fdt_subnode_offset(ra_2363, s1_2365, s1_2365, a5_2360 + -1224<i32>, s2_2366, s6_2370, dwLocF8, dwLocC8, s9, out s0_13596, out s1_2532, out a0_2522, out a5_13597, out s2_2533, out s3_13598, out s4_13599, out s5_13600, out s6_2537)
	branch a0_2522 <= 0<32> l23069298
l230686A8:
	word32 a4_2552
	word32 s0_2557
	word32 s6_13624
	word32 s8_13625
	word32 s4_13622
	word32 s5_13623
	word32 s2_13620
	word32 s3_13621
	word32 a1_13617
	word32 a5_13619
	word32 a3_13618
	word32 a0_2548
	word32 s1_2558
	word32 ra_2556 = fdt_getprop(ra_2530, s1_2532, 0x230C2910<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2557, out s1_2558, out a0_2548, out a1_13617, out a3_13618, out a4_2552, out a5_13619, out s2_13620, out s3_13621, out s4_13622, out s5_13623, out s6_13624, out s8_13625)
	branch a4_2552 != 0x10<32> l23068D12
l23068D12:
	branch CONVERT(Mem2507[s0_2557 + 1716<i32>:byte], byte, word32) >u 4<32> l23068742
l23068D1C:
	branch CONVERT(Mem2507[0x420267A1<32>:byte], byte, word32) >u 4<32> l23068742
l23068D28:
	branch Mem2507[0x4200F560<32>:int32] == 0<32> l23068D5C
l23068D5C:
	word32 a5_13992
	xTaskGetTickCount(out a5_13992)
l23068D32:
	word32 a5_13993
	xTaskGetTickCountFromISR(out a5_13993)
l23068D36:
	word32 a1_13995
	word32 a3_13997
	word32 a5_13999
	word32 s2_14000
	word32 s4_14002
	word32 s6_14004
	word32 s7_14005
	word32 s8_14006
	word32 s9_14007
	word32 s11_14009
	word32 s10_14008
	word32 s5_14003
	word32 s3_14001
	word32 a4_13998
	word32 a2_13996
	word32 a0_13994
	ra_2556 = bl_printk(ra_2556, 0x230C2950<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2558, out a0_13994, out a1_13995, out a2_13996, out a3_13997, out a4_13998, out a5_13999, out s2_14000, out s3_14001, out s4_14002, out s5_14003, out s6_14004, out s7_14005, out s8_14006, out s9_14007, out s10_14008, out s11_14009)
l230686C4:
	word32 s2_2616 = 0<32>
l230686C8:
	a0_2548 = fdt32_to_cpu(a0_2548)
	Mem2629[fp - 128<i32> + s2_2616:byte] = SLICE(a0_2548, byte, 0)
	s2_2616 = s2_2616 + 1<32>
	branch s2_2616 != 4<32> l230686C8
l230686E2:
	branch CONVERT(Mem2629[s0_2557 + 1716<i32>:byte], byte, word32) >u 2<32> l2306873C
l230686EC:
	branch CONVERT(Mem2629[0x420267A1<32>:byte], byte, word32) >u 2<32> l2306873C
l230686F8:
	branch Mem2629[0x4200F560<32>:int32] == 0<32> l23068D0C
l23068D0C:
	word32 a5_13626
	xTaskGetTickCount(out a5_13626)
l23068704:
	word32 a5_13627
	xTaskGetTickCountFromISR(out a5_13627)
l23068708:
	word32 a5_13647
	word32 s3_13649
	word32 s5_13651
	word32 s10_13656
	word32 s11_13657
	word32 s9_13655
	word32 s6_13652
	word32 s8_13654
	word32 s7_13653
	word32 s4_13650
	word32 s2_13648
	word32 a3_13645
	word32 a4_13646
	word32 a2_13644
	word32 a0_13642
	word32 a1_13643
	ra_2556 = bl_printk(ra_2556, 0x230C2920<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2558, out a0_13642, out a1_13643, out a2_13644, out a3_13645, out a4_13646, out a5_13647, out s2_13648, out s3_13649, out s4_13650, out s5_13651, out s6_13652, out s7_13653, out s8_13654, out s9_13655, out s10_13656, out s11_13657)
l2306873C:
	bl_tpc_update_power_rate_11b(fp - 128<i32>)
l23068742:
	word32 dwLoc7C_12983
	word32 a4_2710
	word32 s0_2715
	word32 s8_13991
	word32 s6_13990
	word32 s5_13989
	word32 s4_13988
	word32 a1_13983
	word32 a3_13984
	word32 a5_13985
	word32 s3_13987
	word32 s2_13986
	word32 a0_2706
	word32 s1_2716
	word32 ra_2714 = fdt_getprop(ra_2556, s1_2558, 0x230C2988<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2715, out s1_2716, out a0_2706, out a1_13983, out a3_13984, out a4_2710, out a5_13985, out s2_13986, out s3_13987, out s4_13988, out s5_13989, out s6_13990, out s8_13991)
	branch a4_2710 != 32<i32> l23068D68
l23068D68:
	dwLoc7C_12983 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114) (alias)
	branch CONVERT(Mem2704[s0_2715 + 1716<i32>:byte], byte, word32) >u 4<32> l230687F6
l23068D72:
	dwLoc7C_12983 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114) (alias)
	branch CONVERT(Mem2704[0x420267A1<32>:byte], byte, word32) >u 4<32> l230687F6
l23068D7E:
	branch Mem2704[0x4200F560<32>:int32] == 0<32> l23068DB2
l23068DB2:
	word32 a5_13793
	xTaskGetTickCount(out a5_13793)
l23068D88:
	word32 a5_13794
	xTaskGetTickCountFromISR(out a5_13794)
l23068D8C:
	word32 s8_13944
	word32 s10_13946
	word32 s11_13947
	word32 s9_13945
	word32 s7_13943
	word32 s6_13942
	word32 s5_13941
	word32 s4_13940
	word32 a0_13932
	word32 s3_13939
	word32 s2_13938
	word32 a1_13933
	word32 a2_13934
	word32 a3_13935
	word32 a5_13937
	word32 a4_13936
	ra_2714 = bl_printk(ra_2714, 0x230C29D4<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2716, out a0_13932, out a1_13933, out a2_13934, out a3_13935, out a4_13936, out a5_13937, out s2_13938, out s3_13939, out s4_13940, out s5_13941, out s6_13942, out s7_13943, out s8_13944, out s9_13945, out s10_13946, out s11_13947)
	dwLoc7C_12983 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114) (alias)
l23068760:
	word32 s2_2774 = 0<32>
l23068764:
	a0_2706 = fdt32_to_cpu(a0_2706)
	Mem2787[fp - 128<i32> + s2_2774:byte] = SLICE(a0_2706, byte, 0)
	s2_2774 = s2_2774 + 1<32>
	branch s2_2774 != 8<32> l23068764
l2306877E:
	word32 dwLoc7C_12988 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114)
	branch CONVERT(Mem2787[s0_2715 + 1716<i32>:byte], byte, word32) >u 2<32> l230687F0
l23068788:
	dwLoc7C_12988 = SEQ(SLICE(dwLoc7C, word16, 16), wLoc7C_8114) (alias)
	branch CONVERT(Mem2787[0x420267A1<32>:byte], byte, word32) >u 2<32> l230687F0
l23068794:
	branch Mem2787[0x4200F560<32>:int32] == 0<32> l23068D62
l23068D62:
	word32 a5_13658
	xTaskGetTickCount(out a5_13658)
l230687A0:
	word32 a5_13659
	xTaskGetTickCountFromISR(out a5_13659)
l230687A4:
	word32 a5_2803 = CONVERT(bLoc79_7707, byte, word32)
	dwLocF8 = a5_2803
	dwLoc7C_12988 = CONVERT(bLoc7A_7754, byte, word32)
	word32 a1_13663
	word32 a3_13665
	word32 a4_13666
	word32 s4_13670
	word32 s5_13671
	word32 s8_13674
	word32 s9_13675
	word32 s11_13677
	word32 s10_13676
	word32 s7_13673
	word32 s6_13672
	word32 s2_13668
	word32 s3_13669
	word32 a5_13667
	word32 a2_13664
	word32 a0_13662
	ra_2714 = bl_printk(ra_2714, 0x230C2998<32>, 0x230C23DC<32>, a5_2803, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2716, out a0_13662, out a1_13663, out a2_13664, out a3_13665, out a4_13666, out a5_13667, out s2_13668, out s3_13669, out s4_13670, out s5_13671, out s6_13672, out s7_13673, out s8_13674, out s9_13675, out s10_13676, out s11_13677)
l230687F0:
	bl_tpc_update_power_rate_11g(fp - 128<i32>)
	dwLoc7C_12983 = dwLoc7C_12988 (alias)
l230687F6:
	byte bLoc7A_7866 = SLICE(dwLoc7C_12983, byte, 16)
	byte bLoc79_7847 = SLICE(dwLoc7C_12983, byte, 24)
	word32 a4_2875
	word32 s0_2880
	word32 s3_13788
	word32 s6_13791
	word32 s8_13792
	word32 s5_13790
	word32 s4_13789
	word32 s2_13787
	word32 a5_13786
	word32 a3_13785
	word32 a1_13784
	word32 a0_2871
	word32 s1_2881
	word32 ra_2879 = fdt_getprop(ra_2714, s1_2716, 0x230C2A0C<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_2880, out s1_2881, out a0_2871, out a1_13784, out a3_13785, out a4_2875, out a5_13786, out s2_13787, out s3_13788, out s4_13789, out s5_13790, out s6_13791, out s8_13792)
	word32 dwLoc7C_7870 = dwLoc7C_12983
	branch a4_2875 != 32<i32> l23068DBE
l23068DBE:
	branch CONVERT(Mem2869[s0_2880 + 1716<i32>:byte], byte, word32) >u 4<32> l230688AA
l23068DC8:
	branch CONVERT(Mem2869[0x420267A1<32>:byte], byte, word32) >u 4<32> l230688AA
l23068DD4:
	branch Mem2869[0x4200F560<32>:int32] == 0<32> l23068E08
l23068E08:
	word32 a5_13683
	xTaskGetTickCount(out a5_13683)
l23068DDE:
	word32 a5_13684
	xTaskGetTickCountFromISR(out a5_13684)
l23068DE2:
	word32 s9_13714
	word32 s5_13710
	word32 s3_13708
	word32 a5_13706
	word32 a1_13702
	word32 a2_13703
	word32 s6_13711
	word32 s10_13715
	word32 s11_13716
	word32 s7_13712
	word32 s8_13713
	word32 s4_13709
	word32 s2_13707
	word32 a3_13704
	word32 a4_13705
	word32 a0_13701
	ra_2879 = bl_printk(ra_2879, 0x230C2A58<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2881, out a0_13701, out a1_13702, out a2_13703, out a3_13704, out a4_13705, out a5_13706, out s2_13707, out s3_13708, out s4_13709, out s5_13710, out s6_13711, out s7_13712, out s8_13713, out s9_13714, out s10_13715, out s11_13716)
l23068814:
	word32 s2_2939 = 0<32>
l23068818:
	a0_2871 = fdt32_to_cpu(a0_2871)
	Mem2952[fp - 128<i32> + s2_2939:byte] = SLICE(a0_2871, byte, 0)
	s2_2939 = s2_2939 + 1<32>
	branch s2_2939 != 8<32> l23068818
l23068832:
	branch CONVERT(Mem2952[s0_2880 + 1716<i32>:byte], byte, word32) >u 2<32> l230688A4
l2306883C:
	branch CONVERT(Mem2952[0x420267A1<32>:byte], byte, word32) >u 2<32> l230688A4
l23068848:
	branch Mem2952[0x4200F560<32>:int32] == 0<32> l23068DB8
l23068DB8:
	word32 a5_13660
	xTaskGetTickCount(out a5_13660)
l23068854:
	word32 a5_13661
	xTaskGetTickCountFromISR(out a5_13661)
l23068858:
	word32 a5_2968 = CONVERT(bLoc79_7847, byte, word32)
	dwLocF8 = a5_2968
	dwLoc7C_7870 = CONVERT(bLoc7A_7866, byte, word32)
	word32 s9_13698
	word32 s5_13694
	word32 s2_13691
	word32 a3_13688
	word32 a0_13685
	word32 s6_13695
	word32 s3_13692
	word32 a4_13689
	word32 a1_13686
	word32 s10_13699
	word32 s11_13700
	word32 s7_13696
	word32 s8_13697
	word32 s4_13693
	word32 a5_13690
	word32 a2_13687
	ra_2879 = bl_printk(ra_2879, 0x230C2A1C<32>, 0x230C23DC<32>, a5_2968, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2881, out a0_13685, out a1_13686, out a2_13687, out a3_13688, out a4_13689, out a5_13690, out s2_13691, out s3_13692, out s4_13693, out s5_13694, out s6_13695, out s7_13696, out s8_13697, out s9_13698, out s10_13699, out s11_13700)
l230688A4:
	bl_tpc_update_power_rate_11n(fp - 128<i32>)
l230688AA:
	dwLocDC = 0<32>
	word32 a0_3034
	word32 s8_13682
	word32 s3_13679
	word32 s5_13681
	word32 s4_13680
	word32 s0_13678
	ra_2530 = fdt_stringlist_count(ra_2879, s1_2881, 0x230C2A90<32>, 0x230C3000<32>, dwLocF8, 0<32>, dwLoc48, s9, out s0_13678, out s1_2532, out a0_3034, out s2_2533, out s3_13679, out s4_13680, out s5_13681, out s6_2537, out s8_13682)
	branch a0_3034 != 1<32> l23069298
l230688C4:
	word32 a0_3061
	word32 s8_13724
	word32 s3_13723
	word32 s2_13722
	word32 a5_13721
	word32 a4_13720
	word32 a3_13719
	word32 a1_13718
	word32 s1_13717
	word32 a2_3063
	word32 s0_3070
	word32 s5_3075
	word32 s4_3074
	ra_2530 = fdt_stringlist_get(ra_2530, s1_2532, s2_2533 + -1392<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_3070, out s1_13717, out a0_3061, out a1_13718, out a2_3063, out a3_13719, out a4_13720, out a5_13721, out s2_13722, out s3_13723, out s4_3074, out s5_3075, out s6_2537, out s8_13724)
	word32 s3_3083 = a0_3061
	branch CONVERT(Mem3031[s0_3070 + 1716<i32>:byte], byte, word32) >u 2<32> l23068920
l230688E0:
	branch CONVERT(Mem3031[0x420267A1<32>:byte], byte, word32) >u 2<32> l23068920
l230688EC:
	branch Mem3031[0x4200F560<32>:int32] == 0<32> l23068E0E
l23068E0E:
	word32 a5_13725
	xTaskGetTickCount(out a5_13725)
l230688F8:
	word32 a5_13726
	xTaskGetTickCountFromISR(out a5_13726)
l230688FC:
	word32 s9_13736
	word32 s11_13738
	word32 s10_13737
	word32 s8_13735
	word32 s7_13734
	word32 s2_13733
	word32 a5_13732
	word32 s1_13727
	word32 a0_13728
	word32 a1_13729
	word32 a4_13731
	word32 a3_13730
	ra_2530 = bl_printk(ra_2530, 0x230C2A9C<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13727, out a0_13728, out a1_13729, out a2_3063, out a3_13730, out a4_13731, out a5_13732, out s2_13733, out s3_3083, out s4_3074, out s5_3075, out s6_2537, out s7_13734, out s8_13735, out s9_13736, out s10_13737, out s11_13738)
l23068920:
	s1_2532 = dwLoc7C_7870
	s2_2533 = 2<32>
	branch a2_3063 > 2<32> l23069298
l23068928:
	word32 a1_13739
	word32 a3_13741
	word32 a5_13743
	word32 a6_13744
	word32 a7_13745
	word32 a4_13742
	word32 a2_13740
	memcpy(fp - 196<i32>, s3_3083, a2_3063, out a1_13739, out a2_13740, out a3_13741, out a4_13742, out a5_13743, out a6_13744, out a7_13745)
	branch CONVERT(Mem3031[s0_3070 + 1716<i32>:byte], byte, word32) >u 2<32> l2306897C
l2306893C:
	branch CONVERT(Mem3151[0x420267A1<32>:byte], byte, word32) >u 2<32> l2306897C
l23068948:
	branch Mem3151[0x4200F560<32>:int32] == 0<32> l23068E14
l23068E14:
	word32 a5_13763
	xTaskGetTickCount(out a5_13763)
l23068954:
	word32 a5_13764
	xTaskGetTickCountFromISR(out a5_13764)
l23068958:
	word32 s10_13776
	word32 s11_13777
	word32 a5_13770
	word32 s6_13772
	word32 s8_13774
	word32 s9_13775
	word32 s7_13773
	word32 s2_13771
	word32 a3_13768
	word32 a4_13769
	word32 a1_13766
	word32 a2_13767
	word32 a0_13765
	ra_2530 = bl_printk(ra_2530, 0x230C2AC4<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13765, out a1_13766, out a2_13767, out a3_13768, out a4_13769, out a5_13770, out s2_13771, out s3_3083, out s4_3074, out s5_3075, out s6_13772, out s7_13773, out s8_13774, out s9_13775, out s10_13776, out s11_13777)
l2306897C:
	word32 t1_13746
	word32 a1_13748
	word32 a2_13749
	word32 a3_13750
	word32 a3_13757
	word32 a5_13759
	word32 a4_13758
	word32 a1_13755
	word32 a2_13756
	word32 a0_13754
	word32 a4_13751
	word32 t1_13753
	word32 a5_13752
	word32 a0_13747
	word32 ra_3219 = memset(memset(ra_2530, fp - 176<i32>, 0<32>, 0xE<32>, out t1_13746, out a0_13747, out a1_13748, out a2_13749, out a3_13750, out a4_13751, out a5_13752), fp - 160<i32>, 0<32>, 0xE<32>, out t1_13753, out a0_13754, out a1_13755, out a2_13756, out a3_13757, out a4_13758, out a5_13759)
	word32 a1_13760
	word32 a2_13761
	word32 a4_13762
	word32 a5_3226
	word32 a3_3224
	strlen(fp - 196<i32>, out a1_13760, out a2_13761, out a3_3224, out a4_13762, out a5_3226)
	word32 s2_3230 = fp - 196<i32>
	word32 s9_3232 = 0<32>
	word32 s7_3233 = 0x42026000<32>
	word32 s6_3235 = 0x230C2000<32>
l230689B0:
	word32 a0_3670
	word32 a3_3668
	branch s9_3232 >= a5_3226 l230690F8
l230689B6:
	word32 s2_3271
	word32 a0_3353
	word32 a3_3347
	word32 a5_3243 = CONVERT(Mem3238[s2_3230:byte], byte, word32)
	branch a5_3243 == 70<i32> l23068E2A
l230689C2:
	word32 a4_3245
	branch a5_3243 >u 70<i32> l23068E1A
l23068E1A:
	a4_3245 = 98<i32>
	branch a5_3243 == 98<i32> l23068FCC
l23068E22:
	branch a5_3243 != 102<i32> l230689CE
l23068E2A:
	word32 a1_13778
	word32 a3_13779
	word32 a4_13780
	word32 a5_13781
	word32 s8_3276
	word32 a0_3260
	ra_3219 = fdt_getprop(ra_3219, s1_2532, 0x230C2BC4<32>, dwLocF8, dwLocD8, dwLocBC, dwLoc28, dwArg08, out s0_3070, out s1_2532, out a0_3260, out a1_13778, out a3_13779, out a4_13780, out a5_13781, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s8_3276)
	a3_3224 = 0<32>
	branch true l23069190
l23069190:
	branch CONVERT(Mem3257[s0_3070 + 1716<i32>:byte], byte, word32) >u 4<32> l230690EE
l2306919A:
	branch CONVERT(Mem3257[s7_3233 + 1953<i32>:byte], byte, word32) >u 4<32> l230691CC
l230691A2:
	branch Mem3257[s8_3276 + 1376<i32>:int32] == 0<32> l23069202
l23069202:
	word32 a5_13839
	xTaskGetTickCount(out a5_13839)
l230691A8:
	word32 a5_13840
	xTaskGetTickCountFromISR(out a5_13840)
l230691AC:
	word32 a1_13857
	word32 a2_13858
	word32 a5_13860
	word32 s11_13862
	word32 s10_13861
	word32 a4_13859
	word32 a0_13856
	ra_3219 = bl_printk(ra_3219, 0x230C2C38<32>, s6_3235 + 988<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13856, out a1_13857, out a2_13858, out a3_3224, out a4_13859, out a5_13860, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_3276, out s9_3232, out s10_13861, out s11_13862)
l230691CC:
	branch CONVERT(Mem3257[s0_3070 + 1716<i32>:byte], byte, word32) >u 1<32> l230690EE
l230691D6:
	branch CONVERT(Mem3257[s7_3233 + 1953<i32>:byte], byte, word32) >u 1<32> l230690EE
l230691DE:
	branch Mem3257[s8_3276 + 1376<i32>:int32] == 0<32> l23069532
l23069532:
	word32 a5_13876
	xTaskGetTickCount(out a5_13876)
l230691E6:
	word32 a5_13877
	xTaskGetTickCountFromISR(out a5_13877)
l230691EA:
	a3_3347 = s6_3235 + 988<i32>
	a0_3353 = 0x230C2D10<32>
l23068E4A:
	word32 s3_3354 = 0<32>
	word32 s5_3355 = 0xE<32>
l23068E4E:
	a0_3260 = fdt32_to_cpu(a0_3260)
	Mem3369[fp - 160<i32> + s3_3354:byte] = SLICE(a0_3260, byte, 0)
	s3_3354 = s3_3354 + 1<32>
	branch s3_3354 != 0xE<32> l23068E4E
l23068E6C:
	branch CONVERT(Mem3369[s0_3070 + 1716<i32>:byte], byte, word32) >u 2<32> l23068EB4
l23068E7A:
	branch CONVERT(Mem3369[0x420267A1<32>:byte], byte, word32) >u 2<32> l23068EB4
l23068E86:
	branch Mem3369[0x4200F560<32>:int32] == 0<32> l23069184
l23069184:
	word32 a5_13803
	xTaskGetTickCount(out a5_13803)
l23068E92:
	word32 a5_13804
	xTaskGetTickCountFromISR(out a5_13804)
l23068E96:
	word32 a5_13828
	word32 s2_13829
	word32 s11_13836
	word32 s10_13835
	word32 s3_13830
	word32 s4_13831
	word32 s7_13832
	word32 s9_13834
	word32 s8_13833
	word32 s1_13822
	word32 a1_13824
	word32 a3_13826
	word32 a4_13827
	word32 a2_13825
	word32 a0_13823
	ra_3219 = bl_printk(ra_3219, 0x230C2BD0<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13822, out a0_13823, out a1_13824, out a2_13825, out a3_13826, out a4_13827, out a5_13828, out s2_13829, out s3_13830, out s4_13831, out s5_3355, out s6_3235, out s7_13832, out s8_13833, out s9_13834, out s10_13835, out s11_13836)
l23068EB4:
	word32 s0_3441
	word32 s1_13795
	word32 a3_13796
	word32 a5_13798
	word32 s7_13800
	word32 s8_13801
	word32 s9_13802
	word32 s4_13799
	word32 a4_13797
	word32 s2_3445
	word32 s3_3446
	ra_3219 = log_buf_out(ra_3219, fp - 160<i32>, 0xE<32>, 0<32>, s5_3355, s6_3235, s3_290, dwLocE0, 0<32>, dwLocD0, dwLocA8, s8, s0, dwArg0C, out s0_3441, out s1_13795, out a3_13796, out a4_13797, out a5_13798, out s2_3445, out s3_3446, out s4_13799, out s5_3075, out s6_3235, out s7_13800, out s8_13801, out s9_13802)
	word32 a5_3457 = fp - 160<i32>
l23068ECC:
	a5_3457 = a5_3457 + 1<32>
	Mem3464[a5_3457 + 4095<i32>:byte] = SLICE(CONVERT(Mem3460[a5_3457:byte], byte, word32) + 0xFFFFFFF6<32>, byte, 0)
	branch fp - 146<i32> != a5_3457 l23068ECC
l23068EDC:
	branch CONVERT(Mem3464[s0_3441 + 1716<i32>:byte], byte, word32) >u 2<32> l23068F64
l23068EE6:
	s5_3075 = 0x42026000<32>
	branch CONVERT(Mem3464[0x420267A1<32>:byte], byte, word32) >u 2<32> l23068F24
l23068EF4:
	branch Mem3464[0x4200F560<32>:int32] == 0<32> l2306918A
l2306918A:
	word32 a5_13837
	xTaskGetTickCount(out a5_13837)
l23068F00:
	word32 a5_13838
	xTaskGetTickCountFromISR(out a5_13838)
l23068F04:
	word32 s8_13850
	word32 s11_13853
	word32 s10_13852
	word32 s9_13851
	word32 s7_13849
	word32 s4_13848
	word32 a5_13847
	word32 a4_13846
	word32 s1_13841
	word32 a0_13842
	word32 a1_13843
	word32 a3_13845
	word32 a2_13844
	ra_3219 = bl_printk(ra_3219, 0x230C2BFC<32>, s3_3446 + 988<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13841, out a0_13842, out a1_13843, out a2_13844, out a3_13845, out a4_13846, out a5_13847, out s2_3445, out s3_3446, out s4_13848, out s5_3075, out s6_3235, out s7_13849, out s8_13850, out s9_13851, out s10_13852, out s11_13853)
l23068F24:
	branch CONVERT(Mem3464[s0_3441 + 1716<i32>:byte], byte, word32) >u 1<32> l23068F64
l23068F2E:
	branch CONVERT(Mem3464[s5_3075 + 1953<i32>:byte], byte, word32) >u 1<32> l23068F64
l23068F36:
	branch Mem3464[0x4200F560<32>:int32] == 0<32> l23069208
l23069208:
	word32 a5_13854
	xTaskGetTickCount(out a5_13854)
l23068F42:
	word32 a5_13855
	xTaskGetTickCountFromISR(out a5_13855)
l23068F46:
	word32 s1_13863
	word32 a0_13864
	word32 s7_13871
	word32 s9_13873
	word32 s10_13874
	word32 s11_13875
	word32 s8_13872
	word32 a5_13869
	word32 s4_13870
	word32 a4_13868
	word32 a1_13865
	word32 a3_13867
	word32 a2_13866
	ra_3219 = bl_printk(ra_3219, 0x230C2C6C<32>, s3_3446 + 988<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13863, out a0_13864, out a1_13865, out a2_13866, out a3_13867, out a4_13868, out a5_13869, out s2_3445, out s3_3446, out s4_13870, out s5_3075, out s6_3235, out s7_13871, out s8_13872, out s9_13873, out s10_13874, out s11_13875)
l23068F64:
	word32 a4_3574 = CONVERT(Mem3464[s0_3441 + 1716<i32>:byte], byte, word32)
	branch CONVERT(Mem3464[s2_3445:byte], byte, word32) != 66<i32> l23069214
l23069214:
	branch a4_3574 >u 1<32> l23069254
l2306921A:
	branch CONVERT(Mem3464[0x420267A1<32>:byte], byte, word32) >u 1<32> l23069254
l23069226:
	branch Mem3464[0x4200F560<32>:int32] == 0<32> l2306952C
l2306952C:
	word32 a5_13915
	xTaskGetTickCount(out a5_13915)
l23069232:
	word32 a5_13916
	xTaskGetTickCountFromISR(out a5_13916)
l23069236:
	word32 s10_13930
	word32 s11_13931
	word32 s2_13924
	word32 s4_13926
	word32 s8_13928
	word32 s9_13929
	word32 s7_13927
	word32 s3_13925
	word32 a4_13922
	word32 a5_13923
	word32 a2_13920
	word32 a3_13921
	word32 a0_13918
	word32 a1_13919
	word32 s1_13917
	ra_3219 = bl_printk(ra_3219, 0x230C2CD0<32>, s3_3446 + 988<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13917, out a0_13918, out a1_13919, out a2_13920, out a3_13921, out a4_13922, out a5_13923, out s2_13924, out s3_13925, out s4_13926, out s5_3075, out s6_3235, out s7_13927, out s8_13928, out s9_13929, out s10_13930, out s11_13931)
l23069254:
	word32 a4_3622 = fp - 176<i32>
	word32 a5_3623 = 0<32>
l2306925A:
	a4_3622 = a4_3622 + 1<32>
	Mem3636[a4_3622 + 4095<i32>:byte] = Mem3630[fp - 160<i32> + a5_3623:byte] + Mem3630[a4_3622:byte]
	a5_3623 = a5_3623 + 1<32>
	branch a5_3623 != 0xE<32> l2306925A
l23068F74:
	word32 a5_3638 = 0<32>
l23068F78:
	Mem3648[fp - 176<i32> + a5_3638:byte] = SLICE(CONVERT(Mem3644[fp - 160<i32> + a5_3638:byte], byte, word32), byte, 0)
	a5_3638 = a5_3638 + 1<32>
	branch a5_3638 != 0xE<32> l23068F78
l23068F8E:
	branch a4_3574 >u 1<32> l23069274
l23068F94:
	branch CONVERT(Mem3648[0x420267A1<32>:byte], byte, word32) >u 1<32> l23069274
l23068FA0:
	branch Mem3648[0x4200F560<32>:int32] == 0<32> l2306920E
l2306920E:
	word32 a5_13913
	xTaskGetTickCount(out a5_13913)
l23068FAC:
	word32 a5_13914
	xTaskGetTickCountFromISR(out a5_13914)
l23068FB0:
	a3_3668 = s3_3446 + 988<i32>
	a0_3670 = 0x230C2CA0<32>
l230689C6:
	a4_3245 = 66<i32>
	branch a5_3243 == 66<i32> l23068FCC
l23068FCC:
	word32 a0_3689
	word32 s8_3709
	ra_3219 = bl_efuse_read_pwroft(ra_3219, s0_3070, s1_2532, fp - 160<i32>, a3_3224, a4_3245, s2_3230, s3_3083, s4_3074, mstatus, dwLocD8, dwLocC0, dwLocBC, s10, dwLoc74, dwArg18, out s0_3070, out s1_2532, out a0_3689, out a3_3224, out s2_3271, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_3709, out s9_3232, out mstatus)
	s3_3083 = a0_3689
	word32 a4_3717 = CONVERT(Mem3238[s0_3070 + 1716<i32>:byte], byte, word32)
	branch a0_3689 != 0<32> l2306914A
l2306914A:
	branch a4_3717 >u 1<32> l230690EE
l23069150:
	branch CONVERT(Mem3238[s7_3233 + 1953<i32>:byte], byte, word32) >u 1<32> l230690EE
l23069158:
	branch Mem3238[s8_3709 + 1376<i32>:int32] == 0<32> l2306917E
l2306917E:
	word32 a5_13981
	xTaskGetTickCount(out a5_13981)
l2306915E:
	word32 a5_13982
	xTaskGetTickCountFromISR(out a5_13982)
l23069162:
	a3_3347 = s6_3235 + 988<i32>
	a0_3353 = 0x230C2B8C<32>
l23069178:
	word32 s10_13884
	word32 s11_13885
	word32 a5_13882
	word32 s8_13883
	word32 a2_13880
	word32 a4_13881
	word32 a0_13878
	word32 a1_13879
	ra_3219 = bl_printk(ra_3219, a0_3353, a3_3347, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13878, out a1_13879, out a2_13880, out a3_3224, out a4_13881, out a5_13882, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_13883, out s9_3232, out s10_13884, out s11_13885)
l23068FDC:
	branch a4_3717 >u 2<32> l23069012
l23068FE2:
	branch CONVERT(Mem3238[s7_3233 + 1953<i32>:byte], byte, word32) >u 2<32> l23069012
l23068FEA:
	branch Mem3238[s8_3709 + 1376<i32>:int32] == 0<32> l2306908C
l2306908C:
	word32 a5_13951
	xTaskGetTickCount(out a5_13951)
l23068FF0:
	word32 a5_13952
	xTaskGetTickCountFromISR(out a5_13952)
l23068FF4:
	word32 a5_13961
	word32 s3_13963
	word32 s4_13964
	word32 s10_13968
	word32 s11_13969
	word32 s7_13965
	word32 s9_13967
	word32 s8_13966
	word32 s2_13962
	word32 a3_13959
	word32 a4_13960
	word32 a2_13958
	word32 s1_13955
	word32 a1_13957
	word32 a0_13956
	ra_3219 = bl_printk(ra_3219, 0x230C2AE8<32>, s6_3235 + 988<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13955, out a0_13956, out a1_13957, out a2_13958, out a3_13959, out a4_13960, out a5_13961, out s2_13962, out s3_13963, out s4_13964, out s5_3075, out s6_3235, out s7_13965, out s8_13966, out s9_13967, out s10_13968, out s11_13969)
l23069012:
	word32 s8_3839
	word32 a3_13948
	word32 a4_13949
	word32 a5_13950
	ra_3219 = log_buf_out(ra_3219, fp - 160<i32>, 0xE<32>, 1<32>, s5_3075, s6_3235, s3_290, dwLocE0, 0<32>, dwLocD0, dwLocA8, s8, s0, dwArg0C, out s0_3070, out s1_2532, out a3_13948, out a4_13949, out a5_13950, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_3839, out s9_3232)
	branch CONVERT(Mem3238[s2_3271:byte], byte, word32) != 66<i32> l23069098
l23069098:
	branch CONVERT(Mem3238[s0_3070 + 1716<i32>:byte], byte, word32) >u 1<32> l230690CE
l230690A2:
	branch CONVERT(Mem3238[s7_3233 + 1953<i32>:byte], byte, word32) >u 1<32> l230690CE
l230690AA:
	branch Mem3238[s8_3839 + 1376<i32>:int32] == 0<32> l23069144
l23069144:
	word32 a5_13970
	xTaskGetTickCount(out a5_13970)
l230690B0:
	word32 a5_13971
	xTaskGetTickCountFromISR(out a5_13971)
l230690B4:
	word32 s11_13980
	word32 a2_13974
	word32 a4_13976
	word32 s8_13978
	word32 s10_13979
	word32 a5_13977
	word32 a3_13975
	word32 a0_13972
	word32 a1_13973
	ra_3219 = bl_printk(ra_3219, 0x230C2B4C<32>, s6_3235 + 988<i32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_2532, out a0_13972, out a1_13973, out a2_13974, out a3_13975, out a4_13976, out a5_13977, out s2_3271, out s3_3083, out s4_3074, out s5_3075, out s6_3235, out s7_3233, out s8_13978, out s9_3232, out s10_13979, out s11_13980)
l230690CE:
	word32 a5_3890 = fp - 176<i32>
	a3_3224 = 0xE<32>
l230690D2:
	a5_3890 = a5_3890 + 1<32>
	Mem3903[a5_3890 + 4095<i32>:byte] = Mem3897[fp - 160<i32> + s3_3083:byte] + Mem3897[a5_3890:byte]
	s3_3083 = s3_3083 + 1<32>
	branch s3_3083 != 0xE<32> l230690D2
l230690EC:
l230690EE:
	s9_3232 = s9_3232 + 1<32>
	a5_3226 = 2<32>
	s2_3230 = s2_3271 + 1<32>
	branch s9_3232 != 2<32> l230689B0
l230690F8:
	branch a5_3226 != 0<32> l23069274
l230690FE:
	branch CONVERT(Mem3922[s0_3070 + 1716<i32>:byte], byte, word32) >u 2<32> l23069274
l23069108:
	branch CONVERT(Mem3922[0x420267A1<32>:byte], byte, word32) >u 2<32> l23069274
l23069114:
	branch Mem3922[0x4200F560<32>:int32] == 0<32> l23069540
l23069540:
	word32 a5_13896
	xTaskGetTickCount(out a5_13896)
l23069120:
	word32 a5_13897
	xTaskGetTickCountFromISR(out a5_13897)
l23069124:
	a3_3668 = 0x230C23DC<32>
	a0_3670 = 0x230C2D48<32>
l23069030:
l23069032:
	Mem3962[fp - 176<i32> + s3_3083:byte] = SLICE(CONVERT(Mem3958[fp - 160<i32> + s3_3083:byte], byte, word32), byte, 0)
	s3_3083 = s3_3083 + 1<32>
	branch s3_3083 != 0xE<32> l23069032
l23069048:
	branch CONVERT(Mem3962[s0_3070 + 1716<i32>:byte], byte, word32) >u 1<32> l23069274
l23069052:
	branch CONVERT(Mem3962[0x420267A1<32>:byte], byte, word32) >u 1<32> l23069274
l2306905E:
	branch Mem3962[0x4200F560<32>:int32] == 0<32> l23069092
l23069092:
	word32 a5_13953
	xTaskGetTickCount(out a5_13953)
l23069068:
	word32 a5_13954
	xTaskGetTickCountFromISR(out a5_13954)
l2306906C:
	a3_3668 = s6_3235 + 988<i32>
	a0_3670 = 0x230C2B1C<32>
l23069086:
	word32 s1_13898
	word32 a1_13900
	word32 a3_13902
	word32 a4_13903
	word32 a5_13904
	word32 s10_13911
	word32 s11_13912
	word32 s8_13909
	word32 s9_13910
	word32 s7_13908
	word32 s2_13905
	word32 s4_13907
	word32 s3_13906
	word32 a2_13901
	word32 a0_13899
	ra_3219 = bl_printk(ra_3219, a0_3670, a3_3668, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13898, out a0_13899, out a1_13900, out a2_13901, out a3_13902, out a4_13903, out a5_13904, out s2_13905, out s3_13906, out s4_13907, out s5_3075, out s6_3235, out s7_13908, out s8_13909, out s9_13910, out s10_13911, out s11_13912)
l23069274:
	word32 s3_13890
	word32 s7_13893
	word32 s9_13895
	word32 s8_13894
	word32 s5_13892
	word32 s4_13891
	word32 s0_13886
	word32 a4_13888
	word32 a5_13889
	word32 a3_13887
	ra_2530 = log_buf_out(ra_3219, fp - 176<i32>, 0xE<32>, 1<32>, s5_3075, s6_3235, s3_290, dwLocE0, 0<32>, dwLocD0, dwLocA8, s8, s0, dwArg0C, out s0_13886, out s1_2532, out a3_13887, out a4_13888, out a5_13889, out s2_2533, out s3_13890, out s4_13891, out s5_13892, out s6_2537, out s7_13893, out s8_13894, out s9_13895)
	ble_rf_set_pwr_offset(CONVERT(bLocAA, int8, int32))
	phy_powroffset_set(fp - 176<i32>)
l23069298:
	word32 a0_4109
	word32 s2_13613
	word32 s4_13615
	word32 s5_13616
	word32 s3_13614
	word32 s0_13611
	word32 a5_13612
	word32 s1_4119
	word32 s6_4124
	word32 ra_4117 = fdt_subnode_offset(ra_2530, s1_2532, s1_2532, 0x230BE998<32>, s2_2533, s6_2537, dwLocF8, dwLocC8, s9, out s0_13611, out s1_4119, out a0_4109, out a5_13612, out s2_13613, out s3_13614, out s4_13615, out s5_13616, out s6_4124)
	word32 s2_4129 = a0_4109
	branch a0_4109 <= 0<32> l23069364
l230692B0:
	word32 a0_4134
	word32 s3_4146
	word32 s0_14016
	word32 s8_14020
	word32 s4_14017
	word32 s6_14019
	word32 s5_14018
	word32 s2_4145
	word32 s1_4144
	word32 ra_4142 = fdt_stringlist_count(ra_4117, s1_4119, 0x230BE99C<32>, a0_4109, dwLocF8, dwLocDC, dwLoc48, s9, out s0_14016, out s1_4144, out a0_4134, out s2_4145, out s3_4146, out s4_14017, out s5_14018, out s6_14019, out s8_14020)
	branch a0_4134 == 1<32> l23069546
l23069546:
	word32 a0_4160
	word32 a5_4165
	word32 s0_4169
	word32 s5_14026
	word32 s8_14028
	word32 s6_14027
	word32 s3_14024
	word32 s4_14025
	word32 a3_14022
	word32 a4_14023
	word32 a1_14021
	word32 a2_4162
	ra_4142 = fdt_stringlist_get(ra_4142, s1_4144, s3_4146 + -1636<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4169, out s1_4144, out a0_4160, out a1_14021, out a2_4162, out a3_14022, out a4_14023, out a5_4165, out s2_4145, out s3_14024, out s4_14025, out s5_14026, out s6_14027, out s8_14028)
	word32 s3_4182 = a0_4160
	branch a5_4165 >u 0xFFFFFFE1<32> l230692C6
l23069562:
	branch CONVERT(Mem4104[s0_4169 + 1716<i32>:byte], byte, word32) >u 2<32> l230695AE
l2306956C:
	branch CONVERT(Mem4104[0x420267A1<32>:byte], byte, word32) >u 2<32> l230695AE
l23069578:
	branch Mem4104[0x4200F560<32>:int32] == 0<32> l230695C8
l230695C8:
	word32 a5_14072
	xTaskGetTickCount(out a5_14072)
l23069582:
	word32 a5_14073
	xTaskGetTickCountFromISR(out a5_14073)
l23069586:
	word32 s10_14106
	word32 s11_14107
	word32 a0_14095
	word32 s9_14105
	word32 s8_14104
	word32 a1_14096
	word32 s7_14103
	word32 s6_14102
	word32 a3_14097
	word32 a4_14098
	word32 a5_14099
	word32 s5_14101
	word32 s4_14100
	ra_4142 = bl_printk(ra_4142, 0x230C2D78<32>, 0x230C23DC<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4144, out a0_14095, out a1_14096, out a2_4162, out a3_14097, out a4_14098, out a5_14099, out s2_4145, out s3_4182, out s4_14100, out s5_14101, out s6_14102, out s7_14103, out s8_14104, out s9_14105, out s10_14106, out s11_14107)
l230695AE:
	word32 a3_14067
	word32 a5_14069
	word32 a6_14070
	word32 a7_14071
	word32 a4_14068
	word32 a1_14065
	word32 a2_14066
	memcpy(fp - 160<i32>, s3_4182, a2_4162, out a1_14065, out a2_14066, out a3_14067, out a4_14068, out a5_14069, out a6_14070, out a7_14071)
	Mem4255[fp - 64<i32> + s3_4182 + 4000<i32>:byte] = 0<8>
l230692C6:
l230692C8:
	word32 a0_4275
	word32 s5_4289
	word32 s8_14094
	word32 s4_14092
	word32 s2_14090
	word32 s6_14093
	word32 s3_14091
	word32 s0_14089
	word32 s1_4285
	word32 ra_4283 = fdt_stringlist_count(ra_4142, s1_4144, 0x230BE9FC<32>, s2_4145, dwLocF8, dwLocDC, dwLoc48, s9, out s0_14089, out s1_4285, out a0_4275, out s2_14090, out s3_14091, out s4_14092, out s5_4289, out s6_14093, out s8_14094)
	branch a0_4275 == 1<32> l230695CE
l230695CE:
	word32 a0_4301
	word32 a5_4306
	word32 s0_4310
	word32 s4_14034
	word32 s2_14032
	word32 s3_14033
	word32 s5_14035
	word32 s6_14036
	word32 s8_14037
	word32 a3_14030
	word32 a4_14031
	word32 a1_14029
	word32 a2_4303
	ra_4283 = fdt_stringlist_get(ra_4283, s1_4285, s5_4289 + -1540<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4310, out s1_4285, out a0_4301, out a1_14029, out a2_4303, out a3_14030, out a4_14031, out a5_4306, out s2_14032, out s3_14033, out s4_14034, out s5_14035, out s6_14036, out s8_14037)
	word32 s5_4323 = a0_4301
	branch a5_4306 >u 0xFFFFFFE1<32> l230692DE
l230695EA:
	branch CONVERT(Mem4273[s0_4310 + 1716<i32>:byte], byte, word32) >u 2<32> l23069636
l230695F4:
	branch CONVERT(Mem4273[0x420267A1<32>:byte], byte, word32) >u 2<32> l23069636
l23069600:
	branch Mem4273[0x4200F560<32>:int32] == 0<32> l23069650
l23069650:
	word32 a5_14063
	xTaskGetTickCount(out a5_14063)
l2306960A:
	word32 a5_14064
	xTaskGetTickCountFromISR(out a5_14064)
l2306960E:
	word32 a1_14109
	word32 a4_14111
	word32 s2_14113
	word32 s3_14114
	word32 s6_14116
	word32 s8_14118
	word32 s9_14119
	word32 s10_14120
	word32 s11_14121
	word32 s7_14117
	word32 s4_14115
	word32 a5_14112
	word32 a3_14110
	word32 a0_14108
	ra_4283 = bl_printk(ra_4283, 0x230C2DB8<32>, 0x230C23DC<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4285, out a0_14108, out a1_14109, out a2_4303, out a3_14110, out a4_14111, out a5_14112, out s2_14113, out s3_14114, out s4_14115, out s5_4323, out s6_14116, out s7_14117, out s8_14118, out s9_14119, out s10_14120, out s11_14121)
l23069636:
	word32 a1_14056
	word32 a3_14058
	word32 a4_14059
	word32 a5_14060
	word32 a6_14061
	word32 a7_14062
	word32 a2_14057
	memcpy(fp - 128<i32>, s5_4323, a2_4303, out a1_14056, out a2_14057, out a3_14058, out a4_14059, out a5_14060, out a6_14061, out a7_14062)
	Mem4396[fp - 64<i32> + s5_4323 + 4032<i32>:byte] = 0<8>
l230692DE:
l230692E0:
	word32 a0_4417
	word32 s0_4426
	word32 s2_14127
	word32 s5_14129
	word32 s8_14130
	word32 s4_14128
	word32 a4_14125
	word32 a5_14126
	word32 a3_14124
	word32 a1_14123
	word32 s1_14122
	word32 s3_4429
	word32 ra_4425 = fdt_getprop(ra_4283, s1_4285, 0x230BEA58<32>, dwLocF8, 0<32>, dwLocBC, dwLoc28, dwArg08, out s0_4426, out s1_14122, out a0_4417, out a1_14123, out a3_14124, out a4_14125, out a5_14126, out s2_14127, out s3_4429, out s4_14128, out s5_14129, out s6_4124, out s8_14130)
	word32 s2_4437 = a0_4417
	branch a0_4417 == 0<32> l2306965C
l2306965C:
	branch CONVERT(Mem4415[s0_4426 + 1716<i32>:byte], byte, word32) >u 4<32> l23069358
l23069668:
	branch CONVERT(Mem4415[0x420267A1<32>:byte], byte, word32) >u 4<32> l23069358
l23069676:
	branch Mem4415[0x4200F560<32>:int32] == 0<32> l230696AA
l230696AA:
	word32 a5_14054
	xTaskGetTickCount(out a5_14054)
l23069680:
	word32 a5_14055
	xTaskGetTickCountFromISR(out a5_14055)
l23069684:
	word32 s11_14088
	word32 s9_14086
	word32 s10_14087
	word32 a5_14080
	word32 s4_14082
	word32 s7_14084
	word32 s8_14085
	word32 s5_14083
	word32 s2_14081
	word32 a3_14078
	word32 a4_14079
	word32 a1_14076
	word32 a2_14077
	word32 s1_14074
	word32 a0_14075
	ra_4425 = bl_printk(ra_4425, 0x230BEAA0<32>, 0x230C23DC<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_14074, out a0_14075, out a1_14076, out a2_14077, out a3_14078, out a4_14079, out a5_14080, out s2_14081, out s3_4429, out s4_14082, out s5_14083, out s6_4124, out s7_14084, out s8_14085, out s9_14086, out s10_14087, out s11_14088)
l230692F8:
	branch CONVERT(Mem4415[s0_4426 + 1716<i32>:byte], byte, word32) >u 2<32> l2306934C
l23069302:
	branch CONVERT(Mem4415[0x420267A1<32>:byte], byte, word32) >u 2<32> l2306934C
l2306930E:
	branch Mem4415[0x4200F560<32>:int32] == 0<32> l23069656
l23069656:
	word32 a5_14038
	xTaskGetTickCount(out a5_14038)
l2306931A:
	word32 a5_14039
	xTaskGetTickCountFromISR(out a5_14039)
l2306931E:
	fdt32_to_cpu(Mem4497[a0_4417:int32])
	word32 a5_14046
	word32 s7_14049
	word32 s9_14051
	word32 s11_14053
	word32 s10_14052
	word32 s8_14050
	word32 s5_14048
	word32 s4_14047
	word32 a4_14045
	word32 a3_14044
	word32 a2_14043
	word32 a1_14042
	word32 a0_14041
	word32 s1_14040
	ra_4425 = bl_printk(ra_4425, 0x230BEA64<32>, 0x230C23DC<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_14040, out a0_14041, out a1_14042, out a2_14043, out a3_14044, out a4_14045, out a5_14046, out s2_4437, out s3_4429, out s4_14047, out s5_14048, out s6_4124, out s7_14049, out s8_14050, out s9_14051, out s10_14052, out s11_14053)
l2306934C:
	fdt32_to_cpu(Mem4536[s2_4437:int32])
l23069358:
	ra_4117 = bl_wifi_ap_info_set(ra_4425, fp - 160<i32>, s3_4429, fp - 128<i32>, dwArg28, out s1_4119, out s2_4129)
l23069364:
	word32 a0_4590
	word32 s3_14013
	word32 s5_14015
	word32 s4_14014
	word32 a5_14011
	word32 s2_14012
	word32 s0_14010
	word32 s1_4600
	word32 s6_4605
	word32 ra_4598 = fdt_subnode_offset(ra_4117, s1_4119, s1_4119, 0x230C2DF8<32>, s2_4129, s6_4124, dwLocF8, dwLocC8, s9, out s0_14010, out s1_4600, out a0_4590, out a5_14011, out s2_14012, out s3_14013, out s4_14014, out s5_14015, out s6_4605)
	word32 s2_4610 = a0_4590
	branch a0_4590 <= 0<32> l2306942E
l2306937C:
	word32 a0_4615
	word32 s3_4627
	word32 s6_14138
	word32 s8_14139
	word32 s4_14136
	word32 s5_14137
	word32 s0_14135
	word32 s2_4626
	word32 s1_4625
	word32 ra_4623 = fdt_stringlist_count(ra_4598, s1_4600, 0x230BE99C<32>, a0_4590, dwLocF8, dwLocDC, dwLoc48, s9, out s0_14135, out s1_4625, out a0_4615, out s2_4626, out s3_4627, out s4_14136, out s5_14137, out s6_14138, out s8_14139)
	branch a0_4615 == 1<32> l230696B0
l230696B0:
	word32 a0_4641
	word32 a5_4646
	word32 s0_4650
	word32 s6_14146
	word32 s8_14147
	word32 a1_14140
	word32 a4_14142
	word32 s4_14144
	word32 s5_14145
	word32 s3_14143
	word32 a3_14141
	word32 a2_4643
	ra_4623 = fdt_stringlist_get(ra_4623, s1_4625, s3_4627 + -1636<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4650, out s1_4625, out a0_4641, out a1_14140, out a2_4643, out a3_14141, out a4_14142, out a5_4646, out s2_4626, out s3_14143, out s4_14144, out s5_14145, out s6_14146, out s8_14147)
	word32 s3_4663 = a0_4641
	branch a5_4646 >u 0xFFFFFFE1<32> l23069392
l230696CC:
	branch CONVERT(Mem4584[s0_4650 + 1716<i32>:byte], byte, word32) >u 2<32> l23069718
l230696D6:
	branch CONVERT(Mem4584[0x420267A1<32>:byte], byte, word32) >u 2<32> l23069718
l230696E2:
	branch Mem4584[0x4200F560<32>:int32] == 0<32> l23069732
l23069732:
	word32 a5_14177
	xTaskGetTickCount(out a5_14177)
l230696EC:
	word32 a5_14178
	xTaskGetTickCountFromISR(out a5_14178)
l230696F0:
	word32 s10_14203
	word32 s11_14204
	word32 s8_14201
	word32 s9_14202
	word32 a1_14193
	word32 a5_14196
	word32 s4_14197
	word32 s7_14200
	word32 s5_14198
	word32 s6_14199
	word32 a3_14194
	word32 a4_14195
	word32 a0_14192
	ra_4623 = bl_printk(ra_4623, 0x230C2DFC<32>, 0x230C23DC<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4625, out a0_14192, out a1_14193, out a2_4643, out a3_14194, out a4_14195, out a5_14196, out s2_4626, out s3_4663, out s4_14197, out s5_14198, out s6_14199, out s7_14200, out s8_14201, out s9_14202, out s10_14203, out s11_14204)
l23069718:
	word32 a1_14170
	word32 a5_14174
	word32 a7_14176
	word32 a6_14175
	word32 a2_14171
	word32 a4_14173
	word32 a3_14172
	memcpy(fp - 160<i32>, s3_4663, a2_4643, out a1_14170, out a2_14171, out a3_14172, out a4_14173, out a5_14174, out a6_14175, out a7_14176)
	Mem4736[fp - 64<i32> + s3_4663 + 4000<i32>:byte] = 0<8>
l23069392:
l23069394:
	word32 a0_4756
	word32 s4_4769
	word32 s5_14208
	word32 s8_14210
	word32 s6_14209
	word32 s3_14207
	word32 s2_14206
	word32 s0_14205
	word32 s1_4766
	word32 ra_4764 = fdt_stringlist_count(ra_4623, s1_4625, 0x230BE9FC<32>, s2_4626, dwLocF8, dwLocDC, dwLoc48, s9, out s0_14205, out s1_4766, out a0_4756, out s2_14206, out s3_14207, out s4_4769, out s5_14208, out s6_14209, out s8_14210)
	branch a0_4756 == 1<32> l23069738
l23069738:
	word32 a0_4782
	word32 a5_4787
	word32 s0_4791
	word32 s8_14156
	word32 s5_14154
	word32 s3_14152
	word32 a4_14150
	word32 a1_14148
	word32 s6_14155
	word32 s4_14153
	word32 s2_14151
	word32 a3_14149
	word32 a2_4784
	ra_4764 = fdt_stringlist_get(ra_4764, s1_4766, s4_4769 + -1540<i32>, s3_290, dwLoc58, dwLoc28, dwArg28, out s0_4791, out s1_4766, out a0_4782, out a1_14148, out a2_4784, out a3_14149, out a4_14150, out a5_4787, out s2_14151, out s3_14152, out s4_14153, out s5_14154, out s6_14155, out s8_14156)
	word32 s4_4804 = a0_4782
	branch a5_4787 >u 0xFFFFFFE1<32> l230693AA
l23069754:
	branch CONVERT(Mem4754[s0_4791 + 1716<i32>:byte], byte, word32) >u 2<32> l230697A0
l2306975E:
	branch CONVERT(Mem4754[0x420267A1<32>:byte], byte, word32) >u 2<32> l230697A0
l2306976A:
	branch Mem4754[0x4200F560<32>:int32] == 0<32> l230697BA
l230697BA:
	word32 a5_14274
	xTaskGetTickCount(out a5_14274)
l23069774:
	word32 a5_14275
	xTaskGetTickCountFromISR(out a5_14275)
l23069778:
	word32 a1_14286
	word32 s2_14290
	word32 s5_14292
	word32 s6_14293
	word32 s7_14294
	word32 s9_14296
	word32 s10_14297
	word32 s11_14298
	word32 s8_14295
	word32 s3_14291
	word32 a3_14287
	word32 a5_14289
	word32 a4_14288
	word32 a0_14285
	ra_4764 = bl_printk(ra_4764, 0x230C2E44<32>, 0x230C23DC<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_4766, out a0_14285, out a1_14286, out a2_4784, out a3_14287, out a4_14288, out a5_14289, out s2_14290, out s3_14291, out s4_4804, out s5_14292, out s6_14293, out s7_14294, out s8_14295, out s9_14296, out s10_14297, out s11_14298)
l230697A0:
	word32 a1_14267
	word32 a3_14269
	word32 a4_14270
	word32 a5_14271
	word32 a7_14273
	word32 a6_14272
	word32 a2_14268
	memcpy(fp - 128<i32>, s4_4804, a2_4784, out a1_14267, out a2_14268, out a3_14269, out a4_14270, out a5_14271, out a6_14272, out a7_14273)
	Mem4877[fp - 64<i32> + s4_4804 + 4032<i32>:byte] = 0<8>
l230693AA:
l230693AC:
	word32 a0_4898
	word32 s0_4907
	word32 a5_14280
	word32 s4_14282
	word32 s8_14284
	word32 s5_14283
	word32 s2_14281
	word32 a3_14278
	word32 a4_14279
	word32 s1_14276
	word32 a1_14277
	word32 s3_4910
	word32 ra_4906 = fdt_getprop(ra_4764, s1_4766, 0x230C2E88<32>, dwLocF8, 0<32>, dwLocBC, dwLoc28, dwArg08, out s0_4907, out s1_14276, out a0_4898, out a1_14277, out a3_14278, out a4_14279, out a5_14280, out s2_14281, out s3_4910, out s4_14282, out s5_14283, out s6_4605, out s8_14284)
	word32 s2_4918 = a0_4898
	branch a0_4898 == 0<32> l23069422
l230693C4:
	branch CONVERT(Mem4896[s0_4907 + 1716<i32>:byte], byte, word32) >u 2<32> l23069418
l230693CE:
	branch CONVERT(Mem4896[0x420267A1<32>:byte], byte, word32) >u 2<32> l23069418
l230693DA:
	branch Mem4896[0x4200F560<32>:int32] == 0<32> l230697C0
l230697C0:
	word32 a5_14157
	xTaskGetTickCount(out a5_14157)
l230693E6:
	word32 a5_14158
	xTaskGetTickCountFromISR(out a5_14158)
l230693EA:
	fdt32_to_cpu(Mem4932[a0_4898:int32])
	word32 s9_14246
	word32 s11_14248
	word32 s10_14247
	word32 s1_14235
	word32 s8_14245
	word32 s7_14244
	word32 a0_14236
	word32 s5_14243
	word32 s4_14242
	word32 a1_14237
	word32 a2_14238
	word32 a3_14239
	word32 a5_14241
	word32 a4_14240
	ra_4906 = bl_printk(ra_4906, 0x230C2E9C<32>, 0x230C23DC<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_14235, out a0_14236, out a1_14237, out a2_14238, out a3_14239, out a4_14240, out a5_14241, out s2_4918, out s3_4910, out s4_14242, out s5_14243, out s6_4605, out s7_14244, out s8_14245, out s9_14246, out s10_14247, out s11_14248)
l23069418:
	fdt32_to_cpu(Mem4971[s2_4918:int32])
l23069422:
	ra_4598 = bl_wifi_sta_info_set(ra_4906, fp - 160<i32>, s3_4910, fp - 128<i32>, dwArg28, out s1_4600, out s2_4610)
l2306942E:
	word32 a0_5022
	word32 s0_5031
	word32 s5_14134
	word32 s2_14131
	word32 s4_14133
	word32 s3_14132
	word32 s1_5032
	word32 a5_5027
	word32 s6_5037
	word32 ra_5030 = fdt_subnode_offset(ra_4598, s1_4600, s1_4600, 0x230C2ECC<32>, s2_4610, s6_4605, dwLocF8, dwLocC8, s9, out s0_5031, out s1_5032, out a0_5022, out a5_5027, out s2_14131, out s3_14132, out s4_14133, out s5_14134, out s6_5037)
	word32 s2_5042 = a0_5022
	branch a0_5022 > 0<32> l2306948C
l23069444:
	a5_5027 = 4<32>
	branch CONVERT(Mem5021[s0_5031 + 1716<i32>:byte], byte, word32) >u 4<32> l2306948C
l2306944E:
	branch CONVERT(Mem5021[0x420267A1<32>:byte], byte, word32) >u 4<32> l2306948C
l2306945A:
	branch Mem5021[0x4200F560<32>:int32] == 0<32> l230697C6
l230697C6:
	word32 a5_14168
	xTaskGetTickCount(out a5_14168)
l23069466:
	word32 a5_14169
	xTaskGetTickCountFromISR(out a5_14169)
l2306946A:
	word32 s5_14218
	word32 s10_14222
	word32 s11_14223
	word32 s8_14220
	word32 s9_14221
	word32 s7_14219
	word32 a1_14212
	word32 a2_14213
	word32 a4_14215
	word32 s4_14217
	word32 s3_14216
	word32 a3_14214
	word32 a0_14211
	ra_5030 = bl_printk(ra_5030, 0x230C2ED8<32>, 0x230C23DC<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_5032, out a0_14211, out a1_14212, out a2_14213, out a3_14214, out a4_14215, out a5_5027, out s2_5042, out s3_14216, out s4_14217, out s5_14218, out s6_5037, out s7_14219, out s8_14220, out s9_14221, out s10_14222, out s11_14223)
l2306948C:
	word32 a0_5098
	word32 s1_5108
	word32 s5_14166
	word32 s6_14167
	word32 s3_14164
	word32 s4_14165
	word32 a5_14162
	word32 s2_14163
	word32 s0_14161
	word32 ra_5106 = fdt_subnode_offset(ra_5030, s1_5032, s1_5032, a5_5027 + -1224<i32>, s2_5042, s6_5037, dwLocF8, dwLocC8, s9, out s0_14161, out s1_5108, out a0_5098, out a5_14162, out s2_14163, out s3_14164, out s4_14165, out s5_14166, out s6_14167)
	branch a0_5098 <= 0<32> l2306950C
l230694A0:
	word32 a0_5123
	word32 s0_5132
	word32 a3_14226
	word32 s4_14231
	word32 s6_14233
	word32 s8_14234
	word32 s5_14232
	word32 a4_14227
	word32 s3_14230
	word32 s2_14229
	word32 a5_14228
	word32 a1_14225
	word32 s1_14224
	ra_5106 = fdt_getprop(ra_5106, s1_5108, 0x230C2EF8<32>, dwLocF8, 0<32>, dwLocBC, dwLoc28, dwArg08, out s0_5132, out s1_14224, out a0_5123, out a1_14225, out a3_14226, out a4_14227, out a5_14228, out s2_14229, out s3_14230, out s4_14231, out s5_14232, out s6_14233, out s8_14234)
	word32 s1_5143 = 0<32>
	branch a0_5123 == 0<32> l230694BC
l230694B4:
	s1_5143 = fdt32_to_cpu(Mem5021[a0_5123:word32])
l230694BC:
	branch CONVERT(Mem5021[s0_5132 + 1716<i32>:byte], byte, word32) >u 2<32> l23069506
l230694C6:
	branch CONVERT(Mem5021[0x420267A1<32>:byte], byte, word32) >u 2<32> l23069506
l230694D2:
	branch Mem5021[0x4200F560<32>:int32] == 0<32> l230697CC
l230697CC:
	word32 a5_14249
	xTaskGetTickCount(out a5_14249)
l230694DE:
	word32 a5_14250
	xTaskGetTickCountFromISR(out a5_14250)
l230694E2:
	word32 a0_14251
	word32 a2_14253
	word32 a3_14254
	word32 a5_14256
	word32 s3_14258
	word32 s4_14259
	word32 s5_14260
	word32 s10_14265
	word32 s11_14266
	word32 s9_14264
	word32 s6_14261
	word32 s8_14263
	word32 s7_14262
	word32 s2_14257
	word32 a4_14255
	word32 a1_14252
	ra_5106 = bl_printk(ra_5106, 0x230C2F08<32>, 0x230C23DC<32>, dwLocF8, 0<32>, s6, s4, dwLoc68, dwLoc44, out s1_5143, out a0_14251, out a1_14252, out a2_14253, out a3_14254, out a4_14255, out a5_14256, out s2_14257, out s3_14258, out s4_14259, out s5_14260, out s6_14261, out s7_14262, out s8_14263, out s9_14264, out s10_14265, out s11_14266)
l23069506:
	ble_controller_set_tx_pwr(s1_5143)
l2306950C:
	gpOut = dwArgD8
	return ra_5106
hal_board_cfg_exit:
l230689CE:
	branch Mem3238[0x4200F560<32>:int32] == 0<32> l23069538
l23069538:
	word32 a5_13782
	xTaskGetTickCount(out a5_13782)
l230689DA:
	word32 a5_13783
	xTaskGetTickCountFromISR(out a5_13783)
l230689DE:
	word32 s10_13820
	word32 s11_13821
	word32 a3_13809
	word32 a5_13811
	word32 s8_13818
	word32 s9_13819
	word32 s2_13812
	word32 s6_13816
	word32 s7_13817
	word32 s3_13813
	word32 s5_13815
	word32 s4_13814
	word32 a4_13810
	word32 a1_13807
	word32 a2_13808
	word32 a0_13806
	word32 s1_13805
	bl_printk(ra_3219, 0x230B1CAC<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13805, out a0_13806, out a1_13807, out a2_13808, out a3_13809, out a4_13810, out a5_13811, out s2_13812, out s3_13813, out s4_13814, out s5_13815, out s6_13816, out s7_13817, out s8_13818, out s9_13819, out s10_13820, out s11_13821)
l23068A08:
l23067E68:
	branch Mem484[0x4200F560<32>:int32] == 0<32> l23068400
l23068400:
	word32 a5_13308
	xTaskGetTickCount(out a5_13308)
l23067E74:
	word32 a5_13309
	xTaskGetTickCountFromISR(out a5_13309)
l23067E78:
	word32 s10_13325
	word32 s11_13326
	word32 s1_13310
	word32 a1_13312
	word32 a2_13313
	word32 a3_13314
	word32 s9_13324
	word32 s8_13323
	word32 a4_13315
	word32 s7_13322
	word32 s6_13321
	word32 a5_13316
	word32 s2_13317
	word32 s3_13318
	word32 s5_13320
	word32 s4_13319
	word32 a0_13311
	bl_printk(ra_313, 0x230B1CAC<32>, 0x230C23DC<32>, Mem484[sp_3 + 8<i32>:word32], Mem484[sp_3 + 40<i32>:word32], Mem484[sp_3 + 112<i32>:word32], Mem484[sp_3 + 116<i32>:word32], Mem484[sp_3 + 152<i32>:word32], Mem484[sp_3 + 188<i32>:word32], out s1_13310, out a0_13311, out a1_13312, out a2_13313, out a3_13314, out a4_13315, out a5_13316, out s2_13317, out s3_13318, out s4_13319, out s5_13320, out s6_13321, out s7_13322, out s8_13323, out s9_13324, out s10_13325, out s11_13326)
l23067EA2:
l23067C94:
	branch CONVERT(Mem34[s0_125 + 1716<i32>:byte], byte, word32) >u 4<32> l23067CDA
l23067C9E:
	branch CONVERT(Mem34[0x420267A1<32>:byte], byte, word32) >u 4<32> l23067CDA
l23067CAA:
	branch Mem34[0x4200F560<32>:int32] == 0<32> l23067CE2
l23067CE2:
	word32 a5_13041
	xTaskGetTickCount(out a5_13041)
l23067CB4:
	word32 a5_13042
	xTaskGetTickCountFromISR(out a5_13042)
l23067CB8:
	word32 a0_13058
	word32 a2_13060
	word32 a3_13061
	word32 a5_13063
	word32 s3_13065
	word32 s4_13066
	word32 s8_13070
	word32 s9_13071
	word32 s11_13073
	word32 s10_13072
	word32 s6_13068
	word32 s7_13069
	word32 s5_13067
	word32 s2_13064
	word32 a4_13062
	word32 a1_13059
	word32 s1_13057
	bl_printk(ra, 0x230C24F0<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13057, out a0_13058, out a1_13059, out a2_13060, out a3_13061, out a4_13062, out a5_13063, out s2_13064, out s3_13065, out s4_13066, out s5_13067, out s6_13068, out s7_13069, out s8_13070, out s9_13071, out s10_13072, out s11_13073)
l23067CDA:
l23067BDE:
	branch CONVERT(Mem34[s0_44 + 1716<i32>:byte], byte, word32) >u 4<32> l23067C24
l23067BE8:
	branch CONVERT(Mem34[0x420267A1<32>:byte], byte, word32) >u 4<32> l23067C24
l23067BF4:
	branch Mem34[0x4200F560<32>:int32] == 0<32> l23067C2C
l23067C2C:
	word32 a5_13001
	xTaskGetTickCount(out a5_13001)
l23067BFE:
	word32 a5_13002
	xTaskGetTickCountFromISR(out a5_13002)
l23067C02:
	word32 s11_13034
	word32 s7_13030
	word32 s8_13031
	word32 s9_13032
	word32 s10_13033
	word32 s1_13018
	word32 a0_13019
	word32 a3_13022
	word32 s4_13027
	word32 s6_13029
	word32 s5_13028
	word32 a4_13023
	word32 s3_13026
	word32 s2_13025
	word32 a5_13024
	word32 a2_13021
	word32 a1_13020
	bl_printk(ra, 0x230C243C<32>, 0x230C23DC<32>, dwLocF8, dwLocD8, s6, s4, dwLoc68, dwLoc44, out s1_13018, out a0_13019, out a1_13020, out a2_13021, out a3_13022, out a4_13023, out a5_13024, out s2_13025, out s3_13026, out s4_13027, out s5_13028, out s6_13029, out s7_13030, out s8_13031, out s9_13032, out s10_13033, out s11_13034)
l23067C24:


word32 bl_tsen_adc_get(word32 ra, word32 s0, word32 a0, word32 a1, word32 fs1, word32 fflags, word32 frm, word32 dwArg20, word32 dwArg24, word32 dwArg48, word32 dwArg6C, ptr32 & s0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & fs1Out, ptr32 & fflagsOut, ptr32 & frmOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_start
// MayUse:  a0:[0..31] a1:[0..31] fflags:[0..31] frm:[0..31] fs1:[0..31] ra:[0..31] s0:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0048:[0..31] Stack +006C:[0..31]
// LiveOut: a1 a3 fflags frm fs1 ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa0 fa4 fa5 fflags frm fs0 fs1 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
bl_tsen_adc_get_entry:
l230697D2:
	word32 a5_130 = 0xFFFFFFF<32>
	word32 s0_190 = 0x4200ECBA<32>
	branch CONVERT(Mem5[0x4200ECBA<32>:uint16], uint16, word32) != 0xFFFFFFF<32> l23069884
l230697F8:
	Mem28[0x4200ECBA<32>:word16] = 0<16>
	word32 a5_446
	word32 a6_447
	word32 a7_448
	word32 a1_442
	word32 a2_443
	word32 a4_445
	word32 a3_444
	memcpy(fp + -64<i32>, 0x230C2F50<32>, 0xE<32>, out a1_442, out a2_443, out a3_444, out a4_445, out a5_446, out a6_447, out a7_448)
	GLB_Set_ADC_CLK(1<32>, 0<32>, 7<32>)
	ADC_Disable()
	ADC_Enable()
	ADC_Reset()
	ADC_Init(fp + -64<i32>)
	word32 a1_70 = ADC_Channel_Config(0xE<32>, 0x17<32>, 0<32>)
	ADC_FIFO_Cfg(fp + -68<i32>, ADC_Tsen_Init(0<32>))
	word32 sp_86
	word32 ra_93
	word32 a0_94
	call 0x4200C9E8<p32> (retsize: 0;)
		uses: a0:0x4200ECBA<32>,a1:a1_70,fflags:fflags,frm:frm,fs1:fs1,ra:0x4200C846<p32>,s0:0x4200ECBA<32>,s1:0x4200F000<32>,s2:a0,s3:a1
		defs: a0:a0_94,ra:ra_93,s0:s0_90,sp:sp_86
	word32 a5_111 = Mem45[0x4200F560<32>:int32]
	branch a0_94 != 1<32> l230698CC
l230698CC:
	branch a5_111 == 0<32> l230698F6
l230698F6:
	word32 a5_484
	xTaskGetTickCount(out a5_484)
l230698CE:
	word32 a5_485
	xTaskGetTickCountFromISR(out a5_485)
l230698D2:
	word32 s1_486
	word32 a2_489
	word32 a1_488
	word32 a0_487
	word32 a3_490
	word32 a4_491
	word32 s2_492
	word32 s3_493
	word32 s4_494
	word32 s5_495
	word32 s6_496
	word32 s7_497
	word32 s8_498
	word32 s9_499
	word32 s10_500
	word32 s11_501
	ra = bl_printk(ra_93, 0x230C3000<32>, 0x230C2FA4<32>, Mem45[sp_86 + 8<i32>:word32], Mem45[sp_86 + 40<i32>:word32], Mem45[sp_86 + 112<i32>:word32], Mem45[sp_86 + 116<i32>:word32], Mem45[sp_86 + 152<i32>:word32], Mem45[sp_86 + 188<i32>:word32], out s1_486, out a0_487, out a1_488, out a2_489, out a3_490, out a4_491, out a5_130, out s2_492, out s3_493, out s4_494, out s5_495, out s6_496, out s7_497, out s8_498, out s9_499, out s10_500, out s11_501)
l23069860:
	branch a5_111 == 0<32> l230698C6
l230698C6:
	word32 a5_449
	xTaskGetTickCount(out a5_449)
l23069862:
	word32 a5_450
	xTaskGetTickCountFromISR(out a5_450)
l23069866:
	word32 s1_468
	word32 a2_471
	word32 a1_470
	word32 a4_473
	word32 a0_469
	word32 s2_474
	word32 a3_472
	word32 s4_476
	word32 s5_477
	word32 s3_475
	word32 s7_479
	word32 s8_480
	word32 s6_478
	word32 s10_482
	word32 s11_483
	word32 s9_481
	ra = bl_printk(ra_93, 0x230C2FD4<32>, 0x230C2FA4<32>, Mem45[sp_86 + 8<i32>:word32], Mem45[sp_86 + 40<i32>:word32], Mem45[sp_86 + 112<i32>:word32], Mem45[sp_86 + 116<i32>:word32], Mem45[sp_86 + 152<i32>:word32], Mem45[sp_86 + 188<i32>:word32], out s1_468, out a0_469, out a1_470, out a2_471, out a3_472, out a4_473, out a5_130, out s2_474, out s3_475, out s4_476, out s5_477, out s6_478, out s7_479, out s8_480, out s9_481, out s10_482, out s11_483)
l23069884:
	word32 fa0_217
	word32 fflags_220
	word32 frm_221
	word32 fs1_223
	word32 s0_225
	word32 s3_230
	word32 s2_229
	word32 a1_210
	word32 ra_224 = TSEN_Get_Temp(ra, s0_190, a5_130, fs1, fflags, frm, dwLoc0C, s0, out s0_225, out a1_210, out s2_229, out s3_230, out fs1_223, out fa0_217, out fflags_220, out frm_221)
	branch s3_230 == 0<32> l230698A8
l23069894:
	word32 a1_247
	__extendsfdf2(ra_224, fa0_217, fflags_220, frm_221, out a1_247)
	word32 s3_458
	word32 a5_456
	word32 a7_457
	word32 s9_464
	word32 s8_463
	word32 s10_465
	word32 s6_461
	word32 s7_462
	word32 t4_467
	word32 s11_466
	word32 s5_460
	word32 s4_459
	word32 s1_451
	word32 a0_452
	word32 a2_453
	word32 a4_455
	word32 a3_454
	printf(ra_224, 0x230C3024<32>, a1_247, dwLoc48, dwLoc28, dwArg20, dwArg24, dwArg48, dwArg6C, out s1_451, out a0_452, out a1_210, out a2_453, out a3_454, out a4_455, out a5_456, out a7_457, out s2_229, out s3_458, out s4_459, out s5_460, out s6_461, out s7_462, out s8_463, out s9_464, out s10_465, out s11_466, out t4_467)
l230698A8:
	branch s2_229 == 0<32> l230698B4
l230698AC:
	Mem279[s2_229:word16] = SLICE(CONVERT(fa0_217, word32, int32), word16, 0)
l230698B4:
	s0Out = s0_225
	a1Out = a1_210
	a3Out = s2
	fs1Out = fs1_223
	fflagsOut = fflags_220
	frmOut = frm_221
	return dwLoc08
bl_tsen_adc_get_exit:


word32 bl_rtc_get_counter(word32 a4, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rtc_get_timestamp_ms
// MayUse:  a4:[0..31]
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 s0 t3
// Preserved: sp
bl_rtc_get_counter_entry:
l230698FC:
	word32 a0_9 = HBN_Get_RTC_Timer_Val(fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a4)
	a1Out = fp + 0xFFFFFFEC<32>
	return a0_9
bl_rtc_get_counter_exit:


word32 bl_rtc_get_timestamp_ms(word32 a4, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_sys_time_sync_state
// MayUse:  a4:[0..31]
// LiveOut: a0 a3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 t3
// Preserved: sp
bl_rtc_get_timestamp_ms_entry:
l23069912:
	word32 a1_8
	word32 a0_7 = bl_rtc_get_counter(a4, out a1_8)
	a3Out = a1_8 >>u 5<u32>
	return (a0_7 >>u 5<u32> | a1_8 << 0x1B<u32>) - ((a1_8 << 0x14<u32> | a0_7 >>u 12<i32>) + (a0_7 >>u 0xB<u32> | a1_8 << 0x15<u32>))
bl_rtc_get_timestamp_ms_exit:


word32 hal_wifi_start_firmware_task(word32 ra, word32 mstatus, word32 dwArg14, word32 dwArgD8, word32 dwArg01A4, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s6Out, ptr32 & s7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_stack_wifi
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +00D8:[0..31] Stack +01A4:[0..31]
// LiveOut: a4 ra s1 s2 s3 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
hal_wifi_start_firmware_task_entry:
l23069962:
	word32 s1_23
	word32 a4_29
	word32 s2_32
	word32 s3_33
	word32 s6_35
	word32 s7_36
	word32 tp_55
	word32 t0_56
	word32 s0_57
	word32 a0_58
	word32 a2_59
	word32 a3_60
	word32 a5_61
	word32 ra_31 = xTaskCreateStatic(ra, 0x23001354<32>, 0x230C3050<32>, 1536<i32>, 0<32>, 0x1E<32>, 0x42018BE4<32>, 0x4201A3E4<32>, mstatus, dwLoc0C, dwArg14, dwArgD8, dwArg01A4, out tp_55, out t0_56, out s0_57, out s1_23, out a0_58, out a2_59, out a3_60, out a4_29, out a5_61, out s2_32, out s3_33, out s6_35, out s7_36)
	s1Out = s1_23
	a4Out = a4_29
	s2Out = s2_32
	s3Out = s3_33
	s6Out = s6_35
	s7Out = s7_36
	return ra_31
hal_wifi_start_firmware_task_exit:


void PtTable_Update_Entry(word32 a1, word32 a2, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_update_ptable
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6
// Preserved: sp
PtTable_Update_Entry_entry:
l2306999A:
	branch a3 == 0<32> l23069A80
l2306999E:
	branch a2 == 0<32> l23069A80
l23069A80:
	return
l230699A0:
	branch a1 == 2<32> l23069A6C
l230699BA:
	word32 s4_110 = 0xE000000<32>
	branch a1 == 0<32> l230699C0
l230699BE:
	s4_110 = 0xF000000<32>
l230699C0:
	word32 a4_27 = CONVERT(Mem18[a2 + 6<i32>:uint16], uint16, word32)
	word32 a5_32 = a2 + 16<i32>
	word32 s1_33 = 0<32>
	a3_100 = a3
	a2_101 = a2
l230699CC:
	word32 a2_101
	word32 a3_100
	branch s1_33 >=u a4_27 l230699EC
l230699D0:
	a2_101 = CONVERT(Mem18[a5_32:byte], byte, word32)
	a3_100 = CONVERT(Mem18[a3:byte], byte, word32)
	a5_32 = a5_32 + 36<i32>
	branch a2_101 != a3_100 l23069A7C
l23069A7C:
	s1_33 = s1_33 + 1<32>
l230699E2:
	word32 a4_356
	word32 a5_357
	word32 a7_359
	word32 a6_358
	word32 a1_355
	memcpy(a5_32, a3, 36<i32>, out a1_355, out a2_101, out a3_100, out a4_356, out a5_357, out a6_358, out a7_359)
l230699EC:
	word32 a5_62 = CONVERT(Mem18[a2 + 6<i32>:uint16], uint16, word32)
	branch a5_62 != s1_33 l23069A1A
l230699F4:
	branch s1_33 >u 0xF<32> l23069A6C
l230699FC:
	word32 a5_363
	word32 a4_362
	word32 a7_365
	word32 a6_364
	word32 a1_361
	memcpy(s1_33 + 36<i32> + (a2 + 16<i32>), a3, 36<i32>, out a1_361, out a2_101, out a3_100, out a4_362, out a5_363, out a6_364, out a7_365)
	word32 a5_87 = CONVERT(Mem18[a2 + 6<i32>:uint16], uint16, word32)
	Mem89[a2 + 6<i32>:word16] = SLICE(a5_87 + 1<32>, word16, 0)
	a5_62 = a5_87 + 1<32>
l23069A1A:
	word32 s0_92 = Mem91[a5_62 + 8<i32>:word32]
	word32 a5_95 = a5_62 + 1<32>
	Mem96[a5_95 + 8<i32>:word32] = s0_92
	word32 a0_116
	word32 a3_117
	word32 a2_118
	word32 s2_119
	word32 s0_121
	word32 s3_123
	word32 s4_124
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s0_92,a1:0xC<32>,a2:a2_101,a3:a3_98,a4:a4_171,a5:a5_95,a6:a6_158,a7:a7_160,ra:0x4200CA24<p32>,s0:s0_92,s1:s1_34,s2:a2 + 16<i32>,s3:a3,s4:s4_110,s8:s8_157,t0:t0_161,t1:t1_162,t3:t3_156,t4:t4_163,t5:t5_164,t6:t6_165
		defs: a0:a0_116,a2:a2_118,a3:a3_117,s0:s0_121,s2:s2_119,s3:s3_123,s4:s4_124
	word32 s1_137 = CONVERT(Mem96[s0_121 + 6<i32>:uint16], uint16, word32)
	Mem139[a0_116 + 12<i32>:word32] = s0_121
	word32 a0_145
	word32 s2_148
	word32 ra_149
	word32 s0_150
	word32 s1_151
	word32 s4_153
	word32 t3_156
	word32 s8_157
	word32 a6_158
	word32 a7_160
	word32 t0_161
	word32 t1_162
	word32 t4_163
	word32 t5_164
	word32 t6_165
	call 0x4200C9DE<p32> (retsize: 0;)
		uses: a0:s2_119,a1:s1_137 + 36<i32>,a2:a2_118,a3:a3_117,a4:a4_171,a5:36<i32>,a6:a6_158,a7:a7_160,ra:0x4200CA3E<p32>,s0:s0_121,s1:s1_137 + 36<i32>,s2:s2_119,s3:s3_123,s4:s4_124,s8:s8_157,t0:t0_161,t1:t1_162,t3:t3_156,t4:t4_163,t5:t5_164,t6:t6_165
		defs: a0:a0_145,a6:a6_158,a7:a7_160,ra:ra_149,s0:s0_150,s1:s1_151,s2:s2_148,s4:s4_153,s8:s8_157,t0:t0_161,t1:t1_162,t3:t3_156,t4:t4_163,t5:t5_164,t6:t6_165
	Mem167[s2_148 + s1_151:word32] = a0_145
	word32 a0_170
	word32 a4_171
	word32 a1_360
	word32 ra_175 = bl_flash_erase(ra_149, s4_153, s1_151 + 20<i32>, out a0_170, out a1_360, out a4_171)
	branch (a0_170 & 255<i32>) != 0<32> l23069A6A
l23069A5A:
	word32 a0_180
	word32 a1_366
	word32 a5_368
	word32 a4_367
	bl_flash_write(ra_175, s4_153, s0_150, 596<i32>, out a0_180, out a1_366, out a4_367, out a5_368)
	branch (a0_180 & 255<i32>) == 0<32> l23069A6C
l23069A6A:
l23069A6C:
	return
PtTable_Update_Entry_exit:


word32 PtTable_Get_Active_Entries(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_get_active_entries
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t3 t4 t5 t6
// Preserved: sp
PtTable_Get_Active_Entries_entry:
l23069A82:
	branch a0 == 0<32> l23069AD0
l23069AD0:
	return 5<32>
l23069A84:
	branch a2 == 0<32> l23069AD4
l23069AD4:
	return 5<32>
l23069A8A:
	word32 a0_9 = CONVERT(Mem0[a0 + 6<i32>:uint16], uint16, word32)
	word32 a3_10 = a0 + 16<i32>
	word32 a5_11 = 0x34<32>
l23069A94:
	branch a5_11 <u a0_9 l23069A9C
l23069A9C:
	a3_10 = a3_10 + 36<i32>
	branch CONVERT(Mem0[a3_10 + -36<i32>:byte], byte, word32) != a1 l23069ACC
l23069ACC:
	a5_11 = a5_11 + 1<32>
l23069AA8:
	word32 a7_94
	word32 a6_93
	word32 a5_92
	word32 a4_91
	word32 a3_90
	word32 a2_89
	word32 a1_88
	memcpy(a2, a0 + (a5_11 + 0<32>), 36<i32>, out a1_88, out a2_89, out a3_90, out a4_91, out a5_92, out a6_93, out a7_94)
	return 0<32>
l23069A98:
	return 2<32>
PtTable_Get_Active_Entries_exit:


void int_timer_cb(word32 s0, word32 a4, word32 mstatus, word32 dwArg0188)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] s0:[0..31] Stack +0188:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t3 tp
// Preserved: sp
int_timer_cb_entry:
l23069AD6:
	TIMER_ClearIntStatus(0<32>, a4)
	word32 a3_16
	word32 a0_26
	word32 s4_76
	word32 s3_75
	word32 s2_74
	word32 a4_73
	word32 s1_72
	xTaskIncrementTick(s0, a4, mstatus, dwArg0188, out s1_72, out a0_26, out a3_16, out a4_73, out s2_74, out s3_75, out s4_76)
	branch a0_26 == 0<32> l23069AF0
l23069AF0:
	return
l23069AE8:
l23069AEC_thunk_vTaskSwitchContext:
	word32 a4_78
	word32 a0_77
	word32 a5_79
	vTaskSwitchContext(a3_16, mstatus, out a0_77, out a4_78, out a5_79)
	return
int_timer_cb_exit:


word32 bl_timer_now_us(ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iperf_server_udp_recv_fn
//      bloop_run
// MayUse: 
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: sp
bl_timer_now_us_entry:
l23069AF6:
l23069AFE:
	word32 a1_9 = Mem5[0x200BFFC<32>:int32]
	word32 a0_10 = Mem5[0x200BFF8<32>:int32]
	branch a1_9 != Mem5[0x200BFFC<32>:int32] l23069AFE
l23069B0E:
	word32 a1_15
	word32 a4_16
	word32 a5_17
	word32 a3_21
	word32 a0_14 = __udivdi3(a0_10, a1_9, 0xA<32>, 0<32>, out a1_15, out a3_21, out a4_16, out a5_17)
	a1Out = a1_15
	a2Out = dwArg10
	a3Out = a3_21
	a4Out = a4_16
	a5Out = a5_17
	return a0_14
bl_timer_now_us_exit:


void bl_timer_tick_enable(word32 ra, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg40, word32 dwArg44, word32 dwArg48, word32 dwArg5C, word32 dwArg68, word32 dwArg6C, word32 dwArg8C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_timer_start
// MayUse:  ra:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +005C:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +008C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
bl_timer_tick_enable_entry:
	byte bLoc28 = SLICE(dwLoc28, byte, 0)
l23069B1C:
	word32 a1_134
	word32 a2_135
	word32 a3_136
	word32 a4_137
	word32 a5_138
	word32 a6_139
	word32 a7_140
	memcpy(fp + -40<i32>, 0x230C3054<32>, 0x18<32>, out a1_134, out a2_135, out a3_136, out a4_137, out a5_138, out a6_139, out a7_140)
	TIMER_IntMask(3<32>, 1<32>)
	TIMER_Disable(CONVERT(bLoc28, byte, word32))
	word32 a4_39
	word32 s2_42
	word32 s1_41 = TIMER_Init(fp + -40<i32>, 1<32>, dwArg08, out a4_39, out s2_42)
	TIMER_ClearIntStatus(0<32>, a4_39)
	TIMER_ClearIntStatus(1<32>, a4_39)
	TIMER_ClearIntStatus(2<32>, a4_39)
	TIMER_IntMask(0<32>, 0<32>)
	TIMER_IntMask(1<32>, 1<32>)
	TIMER_IntMask(2<32>, 1<32>)
	TIMER_Enable(CONVERT(bLoc28, byte, word32))
	bl_irq_enable(53<i32>)
	word32 s0_141
	word32 s1_142
	word32 a3_143
	word32 s2_144
	word32 s3_145
	bl_irq_register(ra, s1_41, 53<i32>, 0x23069AD6<32>, s2_42, dwLoc28, dwLoc08, dwArg10, dwArg14, dwArg20, dwArg24, dwArg40, dwArg44, dwArg48, dwArg5C, dwArg68, dwArg6C, dwArg8C, out s0_141, out s1_142, out a3_143, out s2_144, out s3_145)
	return
bl_timer_tick_enable_exit:


word32 bl_gpio_enable_output(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_gpio_func
//      loopset_led_trigger
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: ra
// Trashed: a0 a1 a2 a5 ra t3
// Preserved: sp
bl_gpio_enable_output_entry:
l23069BB2:
	branch a1 != 0<32> l23069BF0
l23069BF0:
l23069BD0:
l23069BD6:
	branch a2 == 0<32> l23069BDE
l23069BD8:
l23069BDE:
	word32 ra_31
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:fp + 0xFFFFFFE8<32>,a1:a1,a2:a2,ra:0x4200CBE0<p32>
		defs: ra:ra_31
	return ra_31
bl_gpio_enable_output_exit:


void bl_gpio_enable_input(word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_gpio_func
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a5 ra t3
// Preserved: sp
bl_gpio_enable_input_entry:
l23069BF6:
	branch a1 != 0<32> l23069C32
l23069C32:
l23069C12:
l23069C18:
	branch a2 == 0<32> l23069C20
l23069C1A:
l23069C20:
	call 0x4200C5D8<p32> (retsize: 0;)
		uses: a0:fp + 0xFFFFFFE8<32>,a1:a1,a2:a2,ra:0x4200CC22<p32>
	return
bl_gpio_enable_input_exit:


void bl_gpio_output_set(word32 a0, word32 a1, word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_gpio_set
//      _cb_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
bl_gpio_output_set_entry:
l23069C38:
	GLB_GPIO_Write(a0, CONVERT(a1 != 0<32>, bool, word32), a3)
	return
bl_gpio_output_set_exit:


word32 bl_gpio_input_get(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_gpio_get
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0
// Trashed: a0 a2 a3 a4 a5 t3
// Preserved: sp
bl_gpio_input_get_entry:
l23069C4C:
	Mem14[a1:byte] = SLICE(GLB_GPIO_Read(a0), byte, 0)
	return 0<32>
bl_gpio_input_get_exit:


word32 bl_flash_erase(word32 ra, word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      PtTable_Update_Entry
//      bl_mtd_erase
//      bl_mtd_erase_all
// MayUse:  a0:[0..31] a1:[0..31] ra:[0..31]
// LiveOut: a0 a1 a4 ra
// Trashed: a0 a1 a2 a4 a5 ra
// Preserved: sp
bl_flash_erase_entry:
l23069C64:
	word32 a4_6 = CONVERT(Mem0[0x4200F211<32>:byte], byte, word32)
	branch a4_6 == 0<32> l23069C90
l23069C90:
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	a4Out = a4_6
	return ra
l23069C72:
	word32 a4_12 = Mem10[0x21010AB0<32>:int32]
	word32 a4_20
	word32 ra_21
	word32 a1_22
	call a4_12 (retsize: 0;)
		uses: a0:0x4200F204<32>,a1:a0,a2:a1,a4:a4_12,ra:ra,Stack +0084:ra
		defs: a1:a1_22,a4:a4_20,ra:ra_21
	a0Out = 0<32>
	a1Out = a1_22
	a4Out = a4_20
	return ra_21
bl_flash_erase_exit:


word32 bl_flash_write(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      PtTable_Update_Entry
//      bl_mtd_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a0 a1 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra
// Preserved: sp
bl_flash_write_entry:
l23069C94:
	word32 a4_6 = CONVERT(Mem0[0x4200F211<32>:byte], byte, word32)
	branch a4_6 == 0<32> l23069CC2
l23069CC2:
	a0Out = 0xFFFFFFFF<32>
	a1Out = a1
	a4Out = a4_6
	a5Out = 0x4200F200<32>
	return ra
l23069CA2:
	word32 a4_12 = Mem10[0x21010AAC<32>:int32]
	word32 a5_21
	word32 a4_22
	word32 ra_23
	word32 a1_26
	call a4_12 (retsize: 0;)
		uses: a0:0x4200F204<32>,a1:a0,a2:a1,a3:a2,a4:a4_12,ra:ra,Stack +0084:ra
		defs: a1:a1_26,a4:a4_22,a5:a5_21,ra:ra_23
	a0Out = 0<32>
	a1Out = a1_26
	a4Out = a4_22
	a5Out = a5_21
	return ra_23
bl_flash_write_exit:


word32 bl_flash_read(word32 ra, word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_mtd_read
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] ra:[0..31]
// LiveOut: a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra
// Preserved: sp
bl_flash_read_entry:
l23069CC6:
	word32 a4_6 = CONVERT(Mem0[0x4200F211<32>:byte], byte, word32)
	branch a4_6 == 0<32> l23069CF4
l23069CF4:
	a1Out = a1
	a3Out = a3
	a4Out = a4_6
	return ra
l23069CD4:
	word32 a4_12 = Mem10[0x21010AA8<32>:int32]
	word32 a4_22
	word32 ra_23
	word32 a3_25
	word32 a1_26
	call a4_12 (retsize: 0;)
		uses: a0:0x4200F204<32>,a1:a0,a2:a1,a3:a2,a4:a4_12,ra:ra,Stack +0084:ra
		defs: a1:a1_26,a3:a3_25,a4:a4_22,ra:ra_23
	a1Out = a1_26
	a3Out = a3_25
	a4Out = a4_22
	return ra_23
bl_flash_read_exit:


word32 bl_flash_config_update(word32 ra, word32 s2, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & s9Out, ptr32 & s10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_boot2_init
// MayUse:  ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut: ra s1 s10 s2 s4 s6 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
bl_flash_config_update_entry:
l23069CF8:
	branch CONVERT(Mem5[0x420266B4<32>:byte], byte, word32) >u 2<32> l23069D22
l23069D16:
	branch CONVERT(Mem19[0x420267A3<32>:byte], byte, word32) <=u 2<32> l23069D36
l23069D36:
	branch Mem19[0x4200F560<32>:int32] == 0<32> l23069EDC
l23069EDC:
	word32 a5_490
	xTaskGetTickCount(out a5_490)
l23069D42:
	word32 a5_491
	xTaskGetTickCountFromISR(out a5_491)
l23069D46:
	word32 s3_58
	word32 s4_59
	word32 s11_513
	word32 s8_512
	word32 a0_504
	word32 s7_511
	word32 s5_510
	word32 a5_509
	word32 a4_508
	word32 a3_507
	word32 a2_506
	word32 a1_505
	ra = bl_printk(ra, 0x230C3078<32>, 0x230C306C<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_504, out a1_505, out a2_506, out a3_507, out a4_508, out a5_509, out s2, out s3_58, out s4_59, out s5_510, out s6, out s7_511, out s8_512, out s9, out s10, out s11_513)
	branch CONVERT(Mem19[s3_58 + 1716<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069D86:
	branch CONVERT(Mem19[s4_59 + 1955<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069D8E:
	branch Mem19[s2 + 1376<i32>:int32] == 0<32> l23069EE2
l23069EE2:
	word32 a5_492
	xTaskGetTickCount(out a5_492)
l23069D96:
	word32 a5_493
	xTaskGetTickCountFromISR(out a5_493)
l23069D9A:
	word32 s3_103
	word32 s4_104
	word32 a0_566
	word32 a1_567
	word32 a2_568
	word32 a3_569
	word32 a4_570
	word32 a5_571
	word32 s5_572
	word32 s7_573
	word32 s8_574
	word32 s11_575
	ra = bl_printk(ra, 0x230C30C4<32>, s1 + 108<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_566, out a1_567, out a2_568, out a3_569, out a4_570, out a5_571, out s2, out s3_103, out s4_104, out s5_572, out s6, out s7_573, out s8_574, out s9, out s10, out s11_575)
	branch CONVERT(Mem19[s3_103 + 1716<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069DC2:
	branch CONVERT(Mem19[s4_104 + 1955<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069DCA:
	branch Mem19[s2 + 1376<i32>:int32] == 0<32> l23069EE8
l23069EE8:
	word32 a5_494
	xTaskGetTickCount(out a5_494)
l23069DD2:
	word32 a5_495
	xTaskGetTickCountFromISR(out a5_495)
l23069DD6:
	word32 s3_147
	word32 s4_148
	word32 a0_556
	word32 a1_557
	word32 a2_558
	word32 a3_559
	word32 a4_560
	word32 a5_561
	word32 s5_562
	word32 s7_563
	word32 s8_564
	word32 s11_565
	ra = bl_printk(ra, 0x230C30E4<32>, s1 + 108<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_556, out a1_557, out a2_558, out a3_559, out a4_560, out a5_561, out s2, out s3_147, out s4_148, out s5_562, out s6, out s7_563, out s8_564, out s9, out s10, out s11_565)
	branch CONVERT(Mem19[s3_147 + 1716<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069DFE:
	branch CONVERT(Mem19[s4_148 + 1955<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069E06:
	branch Mem19[s2 + 1376<i32>:int32] == 0<32> l23069EEE
l23069EEE:
	word32 a5_496
	xTaskGetTickCount(out a5_496)
l23069E0E:
	word32 a5_497
	xTaskGetTickCountFromISR(out a5_497)
l23069E12:
	word32 a0_546
	word32 s3_191
	word32 s4_192
	word32 a1_547
	word32 a2_548
	word32 a3_549
	word32 a4_550
	word32 a5_551
	word32 s5_552
	word32 s7_553
	word32 s8_554
	word32 s11_555
	ra = bl_printk(ra, 0x230C3108<32>, s1 + 108<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_546, out a1_547, out a2_548, out a3_549, out a4_550, out a5_551, out s2, out s3_191, out s4_192, out s5_552, out s6, out s7_553, out s8_554, out s9, out s10, out s11_555)
	branch CONVERT(Mem19[s3_191 + 1716<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069E3A:
	branch CONVERT(Mem19[s4_192 + 1955<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069E42:
	branch Mem19[s2 + 1376<i32>:int32] == 0<32> l23069EF4
l23069EF4:
	word32 a5_498
	xTaskGetTickCount(out a5_498)
l23069E48:
	word32 a5_499
	xTaskGetTickCountFromISR(out a5_499)
l23069E4C:
	word32 a0_536
	word32 a1_537
	word32 a2_538
	word32 a3_539
	word32 a4_540
	word32 a5_541
	word32 s5_542
	word32 s7_543
	word32 s8_544
	word32 s11_545
	word32 s3_235
	word32 s4_236
	ra = bl_printk(ra, 0x230C3130<32>, s1 + 108<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_536, out a1_537, out a2_538, out a3_539, out a4_540, out a5_541, out s2, out s3_235, out s4_236, out s5_542, out s6, out s7_543, out s8_544, out s9, out s10, out s11_545)
	branch CONVERT(Mem19[s3_235 + 1716<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069E74:
	branch CONVERT(Mem19[s4_236 + 1955<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069E7C:
	branch Mem19[s2 + 1376<i32>:int32] == 0<32> l23069EFA
l23069EFA:
	word32 a5_500
	xTaskGetTickCount(out a5_500)
l23069E82:
	word32 a5_501
	xTaskGetTickCountFromISR(out a5_501)
l23069E86:
	word32 a0_526
	word32 a1_527
	word32 a2_528
	word32 a3_529
	word32 a4_530
	word32 a5_531
	word32 s5_532
	word32 s7_533
	word32 s8_534
	word32 s11_535
	word32 s3_279
	word32 s4_280
	ra = bl_printk(ra, 0x230C315C<32>, s1 + 108<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_526, out a1_527, out a2_528, out a3_529, out a4_530, out a5_531, out s2, out s3_279, out s4_280, out s5_532, out s6, out s7_533, out s8_534, out s9, out s10, out s11_535)
	branch CONVERT(Mem19[s3_279 + 1716<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069EAE:
	branch CONVERT(Mem19[s4_280 + 1955<i32>:byte], byte, word32) >u 2<32> l23069D22
l23069EB6:
	branch Mem19[s2 + 1376<i32>:int32] == 0<32> l23069F00
l23069F00:
	word32 a5_502
	xTaskGetTickCount(out a5_502)
l23069EBC:
	word32 a5_503
	xTaskGetTickCountFromISR(out a5_503)
l23069EC0:
	word32 s11_525
	word32 s8_524
	word32 s7_523
	word32 s5_522
	word32 s4_521
	word32 s3_520
	word32 a5_519
	word32 a4_518
	word32 a3_517
	word32 a2_516
	word32 a1_515
	word32 a0_514
	ra = bl_printk(ra, 0x230C3184<32>, s1 + 108<i32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1, out a0_514, out a1_515, out a2_516, out a3_517, out a4_518, out a5_519, out s2, out s3_520, out s4_521, out s5_522, out s6, out s7_523, out s8_524, out s9, out s10, out s11_525)
l23069D22:
	s1Out = s1
	s2Out = s2
	s4Out = dwArg04
	s6Out = s6
	s8Out = s4
	s9Out = s9
	s10Out = s10
	return ra
bl_flash_config_update_exit:


void bl_flash_get_flashCfg()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_hbn_enter
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
bl_flash_get_flashCfg_entry:
l23069F06:
	return
bl_flash_get_flashCfg_exit:


void bl_wdt_feed()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wdt_feed
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
bl_wdt_feed_entry:
l23069F10:
l23069F10_thunk_WDT_ResetCounterValue:
	WDT_ResetCounterValue()
	return
bl_wdt_feed_exit:


void bl_wdt_disable()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wdt_disable
// MayUse: 
// LiveOut:
// Trashed: a1 a2 a3 a4 a5
// Preserved: sp
bl_wdt_disable_entry:
l23069F14:
l23069F14_thunk_WDT_Disable:
	WDT_Disable()
	return
bl_wdt_disable_exit:


void bl_wdt_init(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_wdt_init
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: s0 sp
bl_wdt_init_entry:
l23069F18:
	branch a0 > 0xFFFFFE<32> l23069F5A
l23069F5A:
	return
l23069F20:
	WDT_Disable()
	WDT_Set_Clock(1<32>, 1<32>)
	WDT_SetCompValue(a0 << 0x14<32> >>u 16<i32>)
	WDT_ResetCounterValue()
	WDT_IntMask(0<32>, 1<32>)
	WDT_Enable()
	return
bl_wdt_init_exit:


void proc_entry_looprt(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 s5, word32 s6, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg28, word32 dwArg4C, word32 dwArg5C, word32 dwArgC8, word32 dwArgF8, word32 dwArg0138)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s5:[0..31] s6:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +004C:[0..31] Stack +005C:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
l23069F74:
	word32 a2_22
	word32 a5_23
	word32 a4_26
	word32 a0_65
	word32 a1_66
	word32 s4_67
	word32 s8_68
	puts(s0_43 + 508<i32>, out a0_65, out a1_66, out a2_22, out a4_26, out a5_23, out s4_67, out s8_68)
	word32 a3_39
	word32 s1_69
	word32 a0_70
	word32 a1_71
	word32 a2_72
	word32 a4_73
	word32 a5_74
	word32 s2_75
	word32 s3_76
	word32 s4_77
	word32 s0_43 = vTaskDelay(1000<i32>, a2_22, a3_39, a4_26, a5_23, mstatus, Mem0[sp + 36<i32>:word32], Mem0[sp + 40<i32>:word32], Mem0[sp + 312<i32>:word32], Mem0[sp + 376<i32>:word32], out s1_69, out a0_70, out a1_71, out a2_72, out a3_39, out a4_73, out a5_74, out s2_75, out s3_76, out s4_77)
proc_entry_looprt_exit:
proc_entry_looprt_entry:
l23069F5E:
	bloop_run(ra, s1, 0x4201A444<32>, a1, a2, a3, a4, s5, s6, mstatus, dwArg00, dwArg04, dwArg10, dwArg14, dwArg28, dwArg4C, dwArg5C, dwArgC8, dwArgF8, dwArg0138)


word32 looprt_evt_notify_async(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_evt
//      cmd_looprt_test_evt_dump
//      loopset_led_trigger
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut: a4 a5 mstatus ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
looprt_evt_notify_async_entry:
l23069F86:
l23069F92_thunk_bloop_evt_set_async:
	word32 mstatus_20
	word32 s1_23
	word32 ra_21 = bloop_evt_set_async(ra, 0x4201A444<32>, a0, a1, a3, a4, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s1_23, out mstatus_20)
	s0Out = s0_22
	s1Out = s1_23
	a4Out = a4_18
	a5Out = a5_19
	s2Out = s2_24
	s3Out = s3_25
	mstatusOut = mstatus_20
	return ra_21
looprt_evt_notify_async_exit:


void looprt_evt_status_dump()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      looprt_start
//      cmd_looprt_test
//      cmd_looprt_test_status
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
looprt_evt_status_dump_entry:
l23069F96:
l23069F9E_thunk_bloop_status_dump:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg32 = <invalid>
	word32 stackArg36 = <invalid>
	word32 stackArg108 = <invalid>
	word32 stackArg268 = <invalid>
	word32 s0_12
	word32 s1_13
	word32 a3_14
	word32 s5_15
	bloop_status_dump(ra, a3, s5, stackArg32, stackArg36, stackArg108, stackArg268, out s0_12, out s1_13, out a3_14, out s5_15)
	return
looprt_evt_status_dump_exit:


void looprt_evt_schedule(word32 ra, word32 a2, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg94, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test_schedule_evt1
//      cmd_looprt_test_schedule_evt2
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0094:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
looprt_evt_schedule_entry:
l23069FA2:
	word32 a0_25
	word32 s2_34
	word32 a1_127
	word32 s1_126
	word32 a2_128
	word32 a3_129
	word32 a4_130
	word32 a5_131
	word32 a6_132
	word32 s3_133
	word32 s4_134
	word32 s8_135
	pvPortMalloc(ra, a2, 36<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_126, out a0_25, out a1_127, out a2_128, out a3_129, out a4_130, out a5_131, out a6_132, out s2_34, out s3_133, out s4_134, out s8_135)
	branch a0_25 == 0<32> l23069FF0
l23069FF0:
	return
l23069FBE:
	word32 s0_69 = bloop_timer_configure(a0_25, bloop_timer_init(ra, a0_25, 1<32>), 0<32>, s2_34, dwArg94)
l23069FEC_thunk_bloop_timer_register:
	word32 a3_136
	word32 a4_137
	word32 a5_138
	bloop_timer_register(0x4201A444<32>, s0_69, out a3_136, out a4_137, out a5_138)
	return
looprt_evt_schedule_exit:


word32 looprt_start(word32 ra, word32 s1, word32 a2, word32 a6, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg40, word32 dwArg44, word32 dwArg8C, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, word32 dwArg0194, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse:  a2:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +008C:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0194:[0..31]
// LiveOut: a3 ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
looprt_start_entry:
l23069FFE:
	word32 s1_26
	word32 s3_127
	word32 ra_25 = bloop_init(ra, 0x4201A444<32>, dwLoc08, dwArg18, dwArg40, dwArg44, s1, dwArg8C, out s1_26, out s3_127)
	word32 a5_47 = bloop_handler_register(0x4201A444<32>, 0x4200E108<32>, 0x1F<32>)
	looprt_evt_status_dump()
	word32 a2_62
	word32 a5_63
	word32 s0_65
	word32 a3_71
	word32 a4_72
	word32 tp_128
	word32 t0_129
	word32 s1_130
	word32 a0_131
	word32 s2_132
	word32 s3_133
	word32 s6_134
	word32 s7_135
	word32 ra_74 = xTaskCreateStatic(ra_25, 0x23069F5E<32>, 0x230C31F0<32>, s1_26, 0<32>, 0x1A<32>, a5_47, a6, mstatus, a2, dwArg04, dwArgC8, dwArg0194, out tp_128, out t0_129, out s0_65, out s1_130, out a0_131, out a2_62, out a3_71, out a4_72, out a5_63, out s2_132, out s3_133, out s6_134, out s7_135)
	word32 a3_87
	word32 s2_92
	word32 s3_93
	word32 s1_91 = bloop_wait_startup(a2_62, a3_71, a4_72, a5_63, mstatus, dwLoc0C, dwLoc08, dwArg0108, dwArg0148, out a3_87, out s2_92, out s3_93)
	s0Out = s0_65
	s1Out = s1_91
	a3Out = a3_87
	s2Out = s2_92
	s3Out = s3_93
	return ra_74
looprt_start_exit:


void looprt_start_auto(word32 ra, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cmd_looprt_test
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: s0 sp
looprt_start_auto_entry:
l2306A060:
	word32 s1_18
	word32 s3_22
	word32 ra_17 = bloop_init(ra, 0x4201A444<32>, dwArg08, dwArg28, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_18, out s3_22)
	bloop_handler_register(0x4201A444<32>, 0x4200E108<32>, 0x1F<32>)
	looprt_evt_status_dump()
	word32 a2_53
	word32 a3_54
	word32 a4_55
	word32 a5_56
	word32 s1_107
	word32 a0_108
	word32 s2_109
	word32 s3_110
	xTaskCreate(ra_17, s1_18, 0x1000000<32>, 0<32>, 0x1A<32>, 0<32>, s3_22, mstatus, dwArg00, dwArg04, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158, out s1_107, out a0_108, out a2_53, out a3_54, out a4_55, out a5_56, out s2_109, out s3_110)
	word32 a3_111
	word32 s2_112
	word32 s3_113
	bloop_wait_startup(a2_53, a3_54, a4_55, a5_56, mstatus, dwArg04, dwArg08, dwArg0118, dwArg0158, out a3_111, out s2_112, out s3_113)
	return
looprt_start_auto_exit:


word32 looprt_handler_register(word32 a0, word32 a1, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      loopset_led_hook_on_looprt
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
looprt_handler_register_entry:
l2306A0B6:
	branch Mem0[0x4201A444<32>:int32] == 0<32> l2306A0CC
l2306A0CC:
	a5Out = 0x4201A000<32>
	return <invalid>
l2306A0C2:
l2306A0C8_thunk_bloop_handler_register:
	a5Out = bloop_handler_register(0x4201A444<32>, a0, a1)
	return <invalid>
looprt_handler_register_exit:


word32 looprt_timer_register(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _led_bloop_evt
// MayUse:  a0:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7
// Preserved: sp
looprt_timer_register_entry:
l2306A0D0:
	word32 a3_11
	word32 a4_12
	word32 a5_13
	bloop_timer_register(0x4201A444<32>, a0, out a3_11, out a4_12, out a5_13)
	a4Out = a4_12
	a5Out = a5_13
	return a3_11
looprt_timer_register_exit:


void cmd_looprt_test(word32 ra, word32 a3, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg50, word32 dwArg54, word32 dwArg60, word32 dwArg64, word32 dwArg78, word32 dwArg88, word32 dwArg9C, word32 dwArgAC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +009C:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 tp
// Preserved: sp
cmd_looprt_test_entry:
l2306A0EA:
	word32 a0_118
	word32 a1_119
	word32 a2_120
	word32 a4_121
	word32 a5_122
	word32 s4_123
	word32 s8_124
	puts(0x230C3220<32>, out a0_118, out a1_119, out a2_120, out a4_121, out a5_122, out s4_123, out s8_124)
	word32 a3_27
	word32 s1_125
	word32 a0_126
	word32 a1_127
	word32 a2_128
	word32 a4_129
	word32 a5_130
	word32 a7_131
	word32 s2_132
	word32 s3_133
	word32 s4_134
	word32 s5_135
	word32 s6_136
	word32 s7_137
	word32 s8_138
	word32 s9_139
	word32 s10_140
	word32 s11_141
	word32 t4_142
	word32 s1_143
	word32 a0_144
	word32 a1_145
	word32 a2_146
	word32 a3_147
	word32 a4_148
	word32 a5_149
	word32 a7_150
	word32 s2_151
	word32 s3_152
	word32 s4_153
	word32 s5_154
	word32 s6_155
	word32 s7_156
	word32 s8_157
	word32 s9_158
	word32 s10_159
	word32 s11_160
	word32 t4_161
	word32 ra_55 = printf(printf(ra, 0x230C323C<32>, a3, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_125, out a0_126, out a1_127, out a2_128, out a3_27, out a4_129, out a5_130, out a7_131, out s2_132, out s3_133, out s4_134, out s5_135, out s6_136, out s7_137, out s8_138, out s9_139, out s10_140, out s11_141, out t4_142), 0x230C325C<32>, a3_27, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_143, out a0_144, out a1_145, out a2_146, out a3_147, out a4_148, out a5_149, out a7_150, out s2_151, out s3_152, out s4_153, out s5_154, out s6_155, out s7_156, out s8_157, out s9_158, out s10_159, out s11_160, out t4_161)
l2306A11C_thunk_looprt_start_auto:
	looprt_start_auto(ra_55, mstatus, dwArg00, dwArg04, dwArg08, dwArg28, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgE8, dwArgF8, dwArg0118, dwArg0138, dwArg0158)
	return
cmd_looprt_test_exit:


void cmd_looprt_test_status()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a4 a5 s1 s4 s8 t3 tp
// Preserved: sp
cmd_looprt_test_status_entry:
l2306A120:
	word32 a0_23
	word32 a1_24
	word32 a2_25
	word32 a4_26
	word32 a5_27
	word32 s4_28
	word32 s8_29
	puts(0x230C3300<32>, out a0_23, out a1_24, out a2_25, out a4_26, out a5_27, out s4_28, out s8_29)
l2306A134_thunk_looprt_evt_status_dump:
	looprt_evt_status_dump()
	return
cmd_looprt_test_status_exit:


void cmd_looprt_test_evt(word32 ra, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
cmd_looprt_test_evt_entry:
l2306A138:
	word32 a4_13
	word32 a0_54
	word32 a1_55
	word32 a2_56
	word32 a5_57
	word32 s4_58
	word32 s8_59
	puts(0x230C3270<32>, out a0_54, out a1_55, out a2_56, out a4_13, out a5_57, out s4_58, out s8_59)
l2306A150_thunk_looprt_evt_notify_async:
	word32 s0_60
	word32 s1_61
	word32 a4_62
	word32 a5_63
	word32 s2_64
	word32 s3_65
	word32 mstatus_66
	looprt_evt_notify_async(ra, 0x1F<32>, 0<32>, a3, a4_13, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_60, out s1_61, out a4_62, out a5_63, out s2_64, out s3_65, out mstatus_66)
	return
cmd_looprt_test_evt_exit:


void cmd_looprt_test_evt_dump(word32 ra, word32 a3, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
cmd_looprt_test_evt_dump_entry:
l2306A154:
	word32 a4_13
	word32 a0_54
	word32 a1_55
	word32 a2_56
	word32 a5_57
	word32 s4_58
	word32 s8_59
	puts(0x230C328C<32>, out a0_54, out a1_55, out a2_56, out a4_13, out a5_57, out s4_58, out s8_59)
l2306A16C_thunk_looprt_evt_notify_async:
	word32 s0_60
	word32 s1_61
	word32 a4_62
	word32 a5_63
	word32 s2_64
	word32 s3_65
	word32 mstatus_66
	looprt_evt_notify_async(ra, 0x1F<32>, 1<32>, a3, a4_13, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_60, out s1_61, out a4_62, out a5_63, out s2_64, out s3_65, out mstatus_66)
	return
cmd_looprt_test_evt_dump_exit:


void cmd_looprt_test_schedule_evt1(word32 ra, word32 a3, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg94, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0094:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
cmd_looprt_test_schedule_evt1_entry:
l2306A170:
	word32 a5_10
	word32 a4_13
	word32 a0_52
	word32 a1_53
	word32 a2_54
	word32 s4_55
	word32 s8_56
	puts(0x230C32B0<32>, out a0_52, out a1_53, out a2_54, out a4_13, out a5_10, out s4_55, out s8_56)
l2306A18E_thunk_looprt_evt_schedule:
	looprt_evt_schedule(ra, 0x4FFFE20<32>, a3, a4_13, a5_10, mstatus, dwArg20, dwArg24, dwArg94, dwArg0118, dwArg0158)
	return
cmd_looprt_test_schedule_evt1_exit:


void cmd_looprt_test_schedule_evt2(word32 ra, word32 a3, word32 mstatus, word32 dwArg20, word32 dwArg24, word32 dwArg94, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0094:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
cmd_looprt_test_schedule_evt2_entry:
l2306A192:
	word32 a5_10
	word32 a4_13
	word32 a0_52
	word32 a1_53
	word32 a2_54
	word32 s4_55
	word32 s8_56
	puts(0x230C32D8<32>, out a0_52, out a1_53, out a2_54, out a4_13, out a5_10, out s4_55, out s8_56)
l2306A1B0_thunk_looprt_evt_schedule:
	looprt_evt_schedule(ra, 0x2000710<32>, a3, a4_13, a5_10, mstatus, dwArg20, dwArg24, dwArg94, dwArg0118, dwArg0158)
	return
cmd_looprt_test_schedule_evt2_exit:


void looprt_test_cli_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
looprt_test_cli_init_entry:
l2306A1B4:
	return
looprt_test_cli_init_exit:


void _cb_led_trigger(word32 ra, word32 a1, word32 a3, word32 dwArg18, word32 dwArg60, word32 dwArg64, word32 dwArg88, word32 dwArgAC)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: s0 sp
_cb_led_trigger_entry:
l2306A1B8:
	bl_gpio_output_set(CONVERT(Mem7[Mem7[a1 + 56<i32>:word32] + 48<i32>:byte], byte, word32), CONVERT(a1 != 0<32>, bool, word32), a3)
	word32 a5_21 = 1<32>
	branch CONVERT(Mem7[0x420267A4<32>:byte], byte, word32) >u 1<32> l2306A226
l2306A1DC:
	word32 a4_23 = CONVERT(Mem7[0x420267A5<32>:byte], byte, word32)
	branch a4_23 >u 1<32> l2306A226
l2306A1E8:
	branch Mem7[0x4200F560<32>:int32] == 0<32> l2306A236
l2306A236:
	word32 a5_150
	xTaskGetTickCount(out a5_150)
l2306A1F2:
	word32 a5_151
	xTaskGetTickCountFromISR(out a5_151)
l2306A1F6:
	branch a4_23 != 0<32> l2306A23C
l2306A23C:
l2306A1FC:
l2306A204:
	word32 s1_152
	word32 a0_153
	word32 a1_154
	word32 a2_155
	word32 a3_156
	word32 a4_157
	word32 s2_158
	word32 s3_159
	word32 s4_160
	word32 s5_161
	word32 s6_162
	word32 s7_163
	word32 s8_164
	word32 s9_165
	word32 s10_166
	word32 s11_167
	bl_printk(ra, 0x230C3404<32>, 0x230C33F4<32>, dwLoc08, dwArg18, dwArg60, dwArg64, dwArg88, dwArgAC, out s1_152, out a0_153, out a1_154, out a2_155, out a3_156, out a4_157, out a5_21, out s2_158, out s3_159, out s4_160, out s5_161, out s6_162, out s7_163, out s8_164, out s9_165, out s10_166, out s11_167)
l2306A226:
	Mem82[CONVERT(a5_21 <u 1<i32>, bool, word32) + 56<i32>:word32] = Mem7[a5_21 + 56<i32>:word32]
	return
_cb_led_trigger_exit:


void _led_bloop_msg(word32 ra, word32 dwArg08, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..31] Stack +0008:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4
// Preserved: sp
_led_bloop_msg_entry:
l2306A246:
	branch CONVERT(Mem0[0x420267A4<32>:byte], byte, word32) >u 1<32> l2306A2C2
l2306A254:
	branch CONVERT(Mem0[0x420267A5<32>:byte], byte, word32) >u 1<32> l2306A2C2
l2306A2C2:
	return
l2306A260:
	branch Mem0[0x4200F560<32>:int32] == 0<32> l2306A2BC
l2306A2BC:
	word32 a5_157
	xTaskGetTickCount(out a5_157)
l2306A272:
	word32 a5_158
	xTaskGetTickCountFromISR(out a5_158)
l2306A276:
	word32 s11_175
	word32 s10_174
	word32 s9_173
	word32 s8_172
	word32 s7_171
	word32 s6_170
	word32 s5_169
	word32 s4_168
	word32 s3_167
	word32 s2_166
	word32 a5_165
	word32 a4_164
	word32 a3_163
	word32 a2_162
	word32 a1_161
	word32 a0_160
	word32 s1_159
	bl_printk(ra, 0x230C34C0<32>, 0x230C33F4<32>, dwLoc18, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_159, out a0_160, out a1_161, out a2_162, out a3_163, out a4_164, out a5_165, out s2_166, out s3_167, out s4_168, out s5_169, out s6_170, out s7_171, out s8_172, out s9_173, out s10_174, out s11_175)
	return
_led_bloop_msg_exit:


void _led_bloop_evt(word32 ra, word32 s1, word32 a1, word32 s6, word32 dwArg40, word32 dwArg44, word32 dwArg68, word32 dwArg8C, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] ra:[0..31] s1:[0..31] s6:[0..31] Stack +0040:[0..31] Stack +0044:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t3 t4 tp
// Preserved: sp
_led_bloop_evt_entry:
l2306A2C6:
	word32 a3_162 = Mem25[s1:word32]
	word32 s9_153 = a1
	word32 s8_152 = a3_162
l2306A2FC:
	branch (s1 & 1<i32>) == 0<32> l2306A326
l2306A326:
	branch (s1 & 2<i32>) == 0<32> l2306A3E2
l2306A3E2:
	branch s1 == 0<32> l2306A306
l2306A3E4:
	word32 s5_525
	word32 a7_521
	word32 a0_515
	word32 s1_514
	word32 s8_528
	word32 s9_529
	word32 s10_530
	word32 s11_531
	word32 t4_532
	word32 a2_517
	word32 a1_516
	word32 a4_519
	word32 a3_518
	word32 a5_520
	word32 s4_524
	word32 s3_523
	word32 s2_522
	word32 s6_526
	word32 s7_527
	printf(ra, 0x230C3498<32>, a3_162, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1_514, out a0_515, out a1_516, out a2_517, out a3_518, out a4_519, out a5_520, out a7_521, out s2_522, out s3_523, out s4_524, out s5_525, out s6_526, out s7_527, out s8_528, out s9_529, out s10_530, out s11_531, out t4_532)
l2306A3FC:
l2306A32C:
	word32 s2_146 = Mem47[s9_153 + 12<i32>:int32]
	word32 s3_147 = 0<32>
	word32 s0_105 = Mem47[s2_146 + 12<i32>:int32]
	branch s0_105 == 0<32> l2306A33C
l2306A338:
	s3_147 = Mem47[s0_105 + 4<i32>:int32]
l2306A33C:
l2306A344:
	branch s0_105 != s2_146 + 8<i32> l2306A350
l2306A350:
	branch CONVERT(Mem81[0x420267A4<32>:byte], byte, word32) >u 2<32> l2306A3AC
l2306A35E:
	word32 a4_85 = CONVERT(Mem81[0x420267A5<32>:byte], byte, word32)
	branch a4_85 >u 2<32> l2306A3AC
l2306A36A:
	branch Mem81[0x4200F560<32>:int32] == 0<32> l2306A3DC
l2306A3DC:
	word32 a5_533
	xTaskGetTickCount(out a5_533)
l2306A374:
	word32 a5_534
	xTaskGetTickCountFromISR(out a5_534)
l2306A378:
	branch a4_85 != 0<32> l2306A382
l2306A380:
l2306A382:
	s0_105 = Mem81[a4_85 + 44<i32>:word32]
	branch a4_85 != 0<32> l2306A38A
l2306A388:
l2306A38A:
	word32 s10_545
	word32 s11_546
	word32 a0_535
	word32 a1_536
	word32 a2_537
	word32 a3_538
	word32 s7_544
	word32 a4_539
	word32 a5_540
	word32 s4_541
	word32 s5_542
	word32 s6_543
	ra = bl_printk(ra, 0x230C344C<32>, 0x230C33F4<32>, s6, dwLoc08, dwArg40, dwArg44, dwArg68, dwArg8C, out s1, out a0_535, out a1_536, out a2_537, out a3_538, out a4_539, out a5_540, out s2_146, out s3_147, out s4_541, out s5_542, out s6_543, out s7_544, out s8_152, out s9_153, out s10_545, out s11_546)
l2306A3AC:
	word32 a4_163
	word32 a5_164
	a3_162 = looprt_timer_register(s0_105 + 8<i32>, out a4_163, out a5_164)
	word32 s0_169 = Mem81[a4_163:word32]
	Mem170[a5_164 + 4<i32>:word32] = a4_163
	Mem171[a4_163:word32] = a5_164
	word32 a5_173 = Mem171[s2_146 + 4<i32>:int32]
	Mem174[s0_169:word32] = s2_146
	Mem175[a5_173 + 4<i32>:word32] = s0_169
	Mem176[s2_146 + 4<i32>:word32] = s0_169
	Mem177[s0_169:word32] = a5_173
	word32 a5_178 = 0<32>
	branch s3_147 == 0<32> l2306A3D6
l2306A3D2:
	a5_178 = Mem177[s3_147 + 4<i32>:int32]
l2306A3D6:
	s0_105 = s3_147
	s3_147 = a5_178
l2306A34C:
	s1 = s1 & 0xFFFFFFFD<32>
l2306A302:
	s1 = s1 & 0xFFFFFFFE<32>
l2306A304:
	branch s1 != 0<32> l2306A2FC
l2306A306:
	Mem206[s8_152:word32] = 0<32>
	0<32> = dwArg0128
	return
_led_bloop_evt_exit:


word32 loopset_led_hook_on_looprt(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      aos_loop_proc
// MayUse: 
// LiveOut: a4 a5
// Trashed: a0 a1 a2 a4 a5
// Preserved: sp
loopset_led_hook_on_looprt_entry:
l2306A3FE:
	Mem7[0x4201A8E8<32>:word32] = 0x4201A8E4<32>
	Mem8[0x4201A8E4<32>:word32] = 0x4201A8E4<32>
	Mem9[0x4201A8F8<32>:word32] = 0x4201A8E4<32>
	Mem10[0x4201A8F4<32>:word32] = 0x4201A8E4<32>
l2306A41C_thunk_looprt_handler_register:
	word32 a5_16
	word32 a4_15 = looprt_handler_register(0x230C34B0<32>, 1<32>, out a5_16)
	a5Out = a5_16
	return a4_15
loopset_led_hook_on_looprt_exit:


word32 loopset_led_trigger(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg38, word32 dwArg50, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg94, word32 dwArg9C, word32 dwArgE4, word32 dwArg0100, word32 dwArg0104, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hal_gpio_init_from_dts
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0038:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0094:[0..31] Stack +009C:[0..31] Stack +00E4:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a4 a5 mstatus ra s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t0 t1 t3 tp
// Preserved: sp
loopset_led_trigger_entry:
l2306A420:
	word32 a0_23
	word32 s2_32
	word32 s3_33
	word32 s1_209
	word32 a1_210
	word32 a2_211
	word32 a3_212
	word32 a4_213
	word32 a5_214
	word32 a6_215
	word32 s4_216
	word32 s8_217
	pvPortMalloc(ra, s1, 60<i32>, a3, a4, a5, mstatus, dwArg20, dwArg24, ra, dwArg0118, dwArg0158, out s1_209, out a0_23, out a1_210, out a2_211, out a3_212, out a4_213, out a5_214, out a6_215, out s2_32, out s3_33, out s4_216, out s8_217)
	branch a0_23 != 0<32> l2306A47A
l2306A47A:
	word32 t1_218
	word32 a0_219
	word32 a1_220
	word32 a2_221
	word32 a3_222
	word32 a4_223
	word32 a5_224
	word32 ra_47 = memset(ra, a0_23, 0<32>, 60<i32>, out t1_218, out a0_219, out a1_220, out a2_221, out a3_222, out a4_223, out a5_224)
	Mem51[a0_23 + 48<i32>:word32] = s2_32
	word32 s1_61 = bloop_timer_init(ra_47, a0_23 + 8<i32>, 0<32>)
	bloop_timer_repeat_enable(s1_61)
	word32 s0_78 = bloop_timer_configure(s1_61, s3_33, a0_23, 1<32>, dwArg94)
	word32 ra_89 = bl_gpio_enable_output(0<32>, 0<32>)
	word32 a5_225
	word32 a4_92 = vTaskEnterCritical(1<32>, mstatus, out a5_225)
	word32 a5_94 = Mem51[a4_92 + 12<i32>:word32]
	Mem96[a5_94 + 8<i32>:word32] = s0_78
	Mem97[a4_92 + 4<i32>:word32] = s0_78
	Mem98[s0_78 + 12<i32>:word32] = a5_94
	Mem99[s0_78:word32] = a4_92
	word32 a4_102
	word32 a5_226
	word32 a3_101 = vTaskExitCritical(a5_94 + 8<i32>, mstatus, out a4_102, out a5_226)
l2306A4EC_thunk_looprt_evt_notify_async:
	word32 a4_115
	word32 a5_116
	word32 mstatus_117
	word32 s0_119
	word32 s1_120
	word32 s2_121
	word32 s3_122
	word32 ra_118 = looprt_evt_notify_async(ra_89, 1<32>, 2<32>, a3_101, a4_102, mstatus, dwArg08, dwArg14, dwArg38, dwArg50, dwArg54, dwArg58, dwArg78, dwArg9C, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_119, out s1_120, out a4_115, out a5_116, out s2_121, out s3_122, out mstatus_117)
	s0Out = s0_119
	s1Out = s1_120
	a4Out = a4_115
	a5Out = a5_116
	s2Out = s2_121
	s3Out = s3_122
	mstatusOut = mstatus_117
	return ra_118
loopset_led_trigger_exit:
l2306A43A:
	branch Mem16[0x4200F560<32>:int32] == 0<32> l2306A474
l2306A474:
	word32 a5_227
	xTaskGetTickCount(out a5_227)
l2306A444:
	word32 a5_228
	xTaskGetTickCountFromISR(out a5_228)
l2306A448:
	word32 s1_229
	word32 a0_230
	word32 a1_231
	word32 a2_232
	word32 a3_233
	word32 a4_234
	word32 a5_235
	word32 s2_236
	word32 s3_237
	word32 s4_238
	word32 s5_239
	word32 s6_240
	word32 s7_241
	word32 s8_242
	word32 s9_243
	word32 s10_244
	word32 s11_245
	bl_printk(ra, 0x230B1CAC<32>, 0x230C33F4<32>, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_229, out a0_230, out a1_231, out a2_232, out a3_233, out a4_234, out a5_235, out s2_236, out s3_237, out s4_238, out s5_239, out s6_240, out s7_241, out s8_242, out s9_243, out s10_244, out s11_245)
l2306A472:


word32 sys_mbox_new(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg0108, word32 dwArg0148, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_init
//      netconn_alloc
//      lwip_netconn_do_listen
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: s0 sp
sys_mbox_new_entry:
l2306A4F0:
	word32 a0_17
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 a3_81
	word32 a4_82
	word32 a2_80
	word32 a1_79
	word32 a5_83
	Mem33[a0_17:word32] = xQueueGenericCreate(ra, 50<i32>, 4<32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s1_25, out a0_17, out a1_79, out a2_80, out a3_81, out a4_82, out a5_83, out s2_26, out s3_27, out s4_28)
	word32 a5_38 = CONVERT(Mem33[0x420268F0<32>:uint16], uint16, word32) + 1<32> << 16<i32>
	word32 a3_36 = CONVERT(Mem33[0x420268F2<32>:uint16], uint16, word32)
	Mem40[0x420268F0<32>:word16] = SLICE(a5_38 >>u 16<i32>, word16, 0)
	branch a3_36 >=u a5_38 >>u 16<i32> l2306A528
l2306A524:
	Mem41[0x420268F2<32>:word16] = SLICE(a5_38 >>u 16<i32>, word16, 0)
l2306A528:
	a0Out = 0<32> - CONVERT(a0_17 <u 1<i32>, bool, word32)
	a2Out = dwArg10
	a3Out = a3_36
	a4Out = 0x420267F0<32>
	a5Out = a5_38 >>u 16<i32>
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	return s1_25
sys_mbox_new_exit:


word32 sys_mbox_free(word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_new_with_proto_and_callback
//      netconn_alloc
//      netconn_drain
//      accept_function
//      lwip_netconn_do_listen
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s4 t3 tp
// Preserved: s0 sp
sys_mbox_free_entry:
l2306A53A:
	word32 a3_20
	word32 a4_21
	word32 a2_70
	word32 a5_71
	word32 a0_18 = uxQueueMessagesWaiting(Mem9[a0:word32], a3, a4, mstatus, out a2_70, out a3_20, out a4_21, out a5_71)
	branch a0_18 == 0<32> l2306A560
l2306A554:
	Mem25[0x420268F4<32>:word16] = SLICE(CONVERT(Mem9[0x420268F4<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306A560:
	word32 a0_33
	word32 a3_36
	word32 a4_37
	word32 s1_41
	word32 s4_42
	word32 a1_72
	word32 a2_73
	word32 a5_74
	word32 s0_40 = vQueueDelete(a0_18, a3_20, a4_21, mstatus, dwArg0148, dwArg0188, out s1_41, out a0_33, out a1_72, out a2_73, out a3_36, out a4_37, out a5_74, out s4_42)
	word32 a5_45 = CONVERT(Mem27[s0_40 + 256<i32>:uint16], uint16, word32)
	Mem49[s0_40 + 256<i32>:word16] = SLICE(a5_45 + 0xFFFFFFFF<32>, word16, 0)
	a0Out = a0_33
	a2Out = dwArg10
	a3Out = a3_36
	a4Out = a4_37
	a5Out = a5_45 + 0xFFFFFFFF<32>
	s4Out = s4_42
	return s1_41
sys_mbox_free_exit:


word32 sys_mbox_post(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_callback
//      tcpip_send_msg_wait_sem
//      tcpip_api_call
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 s0 s1 s2 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_mbox_post_entry:
l2306A57A:
l2306A588:
	word32 a3_28
	word32 s1_34
	word32 s2_35
	word32 s5_38
	word32 s6_39
	word32 a2_82
	word32 a1_81
	word32 a7_83
	word32 s3_84
	word32 s4_85
	word32 s8_86
	word32 s0_33 = xQueueGenericSend(a0, fp + 0xFFFFFFEC<32>, 0<32>, a4, a5, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_34, out a0, out a1_81, out a2_82, out a3_28, out a4, out a5, out a7_83, out s2_35, out s3_84, out s4_85, out s5_38, out s6_39, out s8_86)
	branch a0 != s0_33 l2306A588
l2306A598:
	s1Out = s1_34
	a3Out = a3_28
	a4Out = a4
	s2Out = s2_35
	s5Out = s5_38
	s6Out = s6_39
	return s0_33
sys_mbox_post_exit:


word32 sys_mbox_trypost(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
//      tcpip_try_callback
//      recv_udp
//      err_tcp
//      recv_raw
//      recv_tcp
//      accept_function
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_mbox_trypost_entry:
l2306A5A2:
	word32 a0_40
	word32 a0_16
	word32 a1_17
	word32 a3_19
	word32 a7_23
	word32 s1_25
	word32 s2_26
	word32 s3_27
	word32 s4_28
	word32 s5_29
	word32 s6_30
	word32 s8_97
	word32 a5_96
	word32 a2_95
	word32 a4_20
	word32 s0_24 = xQueueGenericSend(Mem5[a0:word32], fp + 0xFFFFFFEC<32>, 0<32>, a4, a5, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_25, out a0_16, out a1_17, out a2_95, out a3_19, out a4_20, out a5_96, out a7_23, out s2_26, out s3_27, out s4_28, out s5_29, out s6_30, out s8_97)
	word32 a5_39 = 1<32>
	branch a0_16 == 1<32> l2306A5D4
l2306A5D4:
	a0_40 = 0<32>
l2306A5BA:
	word32 a4_43 = CONVERT(Mem9[0x420268F4<32>:uint16], uint16, word32)
	Mem46[0x420268F4<32>:word16] = SLICE(a4_43 + 1<32>, word16, 0)
	a5_39 = 0x420267F0<32>
	a0_40 = 0xFFFFFFFF<32>
	a4_20 = a4_43 + 1<32>
l2306A5CE:
	s1Out = s1_25
	a0Out = a0_40
	a1Out = a1_17
	a3Out = a3_19
	a4Out = a4_20
	a5Out = a5_39
	a7Out = a7_23
	s2Out = s2_26
	s3Out = s3_27
	s4Out = s4_28
	s5Out = s5_29
	s6Out = s6_30
	return s0_24
sys_mbox_trypost_exit:


word32 sys_arch_mbox_fetch(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg64, word32 dwArgD8, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_thread
//      netconn_accept
//      netconn_recv_data
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +0064:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_arch_mbox_fetch_entry:
l2306A5D8:
	word32 a5_21
	xTaskGetTickCount(out a5_21)
	word32 s2_166 = a0
	word32 s1_164 = a1
	branch a1 != 0<32> l2306A5F6
l2306A5F4:
	s1_164 = fp + -36<i32>
l2306A5F6:
	word32 s0_163
	word32 a5_160
	word32 s3_168
	word32 a1_154
	word32 a0_153
	branch a2 == 0<32> l2306A626
l2306A626:
	word32 a0_38
	word32 a2_191
	word32 s4_192
	word32 s8_193
	s0_163 = xQueueReceive(Mem15[s2_166:int32], s1_164, 0xFFFFFFFF<32>, a3, a4, a5_21, mstatus, dwLoc38, dwLoc1C, dwArg64, dwArgD8, dwArg0118, out s1_164, out a0_38, out a1_154, out a2_191, out a3, out a4, out a5_21, out s2_166, out s3_168, out s4_192, out s8_193)
	branch a0_38 != s3_168 l2306A626
l2306A636:
l2306A5FA:
	word32 a0_72
	word32 a2_194
	word32 a5_195
	word32 s4_196
	word32 s8_197
	s0_163 = xQueueReceive(Mem15[a0:int32], s1_164, a2, a3, a4, a5_21, mstatus, dwLoc38, dwLoc1C, dwArg64, dwArgD8, dwArg0118, out s1_164, out a0_72, out a1_154, out a2_194, out a3, out a4, out a5_195, out s2_166, out s3_168, out s4_196, out s8_197)
	a5_160 = 1<32>
	branch a0_72 != 1<32> l2306A612
l2306A612:
	Mem94[s1_164:word32] = 0<32>
	a0_153 = 0xFFFFFFFF<32>
l2306A60A:
	a0_153 = xTaskGetTickCount(out a5_160) - s0_163
l2306A618:
	s1Out = s1_164
	a0Out = a0_153
	a1Out = a1_154
	a3Out = a3
	a4Out = a4
	a5Out = a5_160
	s2Out = s2_166
	s3Out = s3_168
	s4Out = dwArgF4
	return s0_163
sys_arch_mbox_fetch_exit:


word32 sys_arch_mbox_tryfetch(word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_accept
//      netconn_recv_data
//      netconn_drain
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a3 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_arch_mbox_tryfetch_entry:
l2306A638:
	branch a1 != 0<32> l2306A640
l2306A63E:
	a1 = fp + 0xFFFFFFEC<32>
l2306A640:
	word32 a0_23
	word32 a1_24
	word32 a3_26
	word32 a4_27
	word32 s1_32
	word32 s2_33
	word32 s3_34
	word32 s4_35
	word32 a2_70
	word32 a5_71
	word32 s8_72
	word32 s0_31 = xQueueReceive(Mem5[a0:word32], a1, 0<32>, a3, a4, a5, mstatus, dwLoc18, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_32, out a0_23, out a1_24, out a2_70, out a3_26, out a4_27, out a5_71, out s2_33, out s3_34, out s4_35, out s8_72)
	s1Out = s1_32
	a0Out = 0<32> - CONVERT(a0_23 != 0xFFFFFFFF<32>, bool, word32)
	a1Out = a1_24
	a3Out = a3_26
	a4Out = a4_27
	s2Out = s2_33
	s3Out = s3_34
	s4Out = s4_35
	return s0_31
sys_arch_mbox_tryfetch_exit:


word32 sys_mbox_valid(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
//      tcpip_callback
//      tcpip_try_callback
//      tcpip_send_msg_wait_sem
//      tcpip_api_call
//      netconn_new_with_proto_and_callback
//      netconn_accept
//      netconn_recv_data
//      netconn_recv_tcp_pbuf_flags
//      recv_udp
//      err_tcp
//      recv_raw
//      recv_tcp
//      netconn_free
//      netconn_drain
//      accept_function
//      lwip_netconn_do_listen
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
sys_mbox_valid_entry:
l2306A658:
	return CONVERT(Mem0[a0:word32] != 0<32>, bool, word32)
sys_mbox_valid_exit:


void sys_mbox_set_invalid(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_alloc
//      netconn_drain
//      accept_function
//      lwip_netconn_do_listen
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
sys_mbox_set_invalid_entry:
l2306A660:
	Mem4[a0:word32] = 0<32>
	return
sys_mbox_set_invalid_exit:


word32 sys_sem_new(word32 ra, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg10, word32 dwArg14, word32 dwArg94, word32 dwArg0108, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_api_call
//      netconn_gethostbyname
//      netconn_alloc
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0094:[0..31] Stack +0108:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 s1 s2 s3 s4 s8 t3 tp
// Preserved: a7 s0 s5 s6 sp t0 t1 t4 t5 t6
sys_sem_new_entry:
l2306A666:
	word32 s4_203
	word32 a1_202
	word32 a0_21
	word32 a5_26
	word32 a2_23
	word32 a4_141
	word32 a3_139
	word32 s1_150
	word32 s2_152
	word32 s3_155
	Mem36[a0_21:word32] = xQueueGenericCreate(ra, 1<32>, 0<32>, a3, a4, a5, mstatus, dwArg10, dwArg14, dwArg0108, dwArg0148, out s1_150, out a0_21, out a1_202, out a2_23, out a3_139, out a4_141, out a5_26, out s2_152, out s3_155, out s4_203)
	branch a0_21 == 0<32> l2306A68A
l2306A680:
	word32 s8_209
	word32 s5_207
	word32 s6_208
	word32 a7_205
	word32 s4_206
	word32 a1_204
	xQueueGenericSend(a0_21, 0<32>, 0<32>, a4_141, a5_26, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1_150, out a0_21, out a1_204, out a2_23, out a3_139, out a4_141, out a5_26, out a7_205, out s2_152, out s3_155, out s4_206, out s5_207, out s6_208, out s8_209)
l2306A68A:
	word32 a0_102
	word32 a5_103
	word32 s0_67 = 0x420267F0<32>
	branch a0_21 != 0<32> l2306A6AC
l2306A6AC:
	branch s1_150 != 0<32> l2306A6B4
l2306A6AE:
	word32 a0_210
	word32 a1_211
	word32 a2_212
	word32 a4_213
	word32 a5_214
	word32 s4_215
	word32 s8_216
	s0_67 = xQueueSemaphoreTake(a0_21, 1<32>, a2_23, a3_139, a4_141, a5_26, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, out s1_150, out a0_210, out a1_211, out a2_212, out a3_139, out a4_213, out a5_214, out s2_152, out s3_155, out s4_215, out s8_216)
l2306A6B4:
	word32 a5_97 = CONVERT(Mem36[s0_67 + 244<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	a4_141 = CONVERT(Mem36[s0_67 + 246<i32>:uint16], uint16, word32)
	Mem99[s0_67 + 244<i32>:word16] = SLICE(a5_97 >>u 16<i32>, word16, 0)
	a0_102 = 0<32>
	a5_103 = a5_97 >>u 16<i32>
	branch a4_141 >=u a5_97 >>u 16<i32> l2306A6A2
l2306A6CC:
	Mem100[s0_67 + 246<i32>:word16] = SLICE(a5_97 >>u 16<i32>, word16, 0)
l2306A696:
	word32 a5_101 = CONVERT(Mem36[0x420268E8<32>:uint16], uint16, word32)
	Mem104[0x420268E8<32>:word16] = SLICE(a5_101 + 1<32>, word16, 0)
	a0_102 = 0xFFFFFFFF<32>
	a5_103 = a5_101 + 1<32>
l2306A6A2:
	a0Out = a0_102
	a2Out = dwArg10
	a3Out = a3_139
	a4Out = a4_141
	a5Out = a5_103
	s2Out = s2_152
	s3Out = s3_155
	return s1_150
sys_sem_new_exit:


word32 sys_arch_sem_wait(word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg44, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sys_mutex_lock
//      lwip_setsockopt
//      tcpip_send_msg_wait_sem
//      tcpip_api_call
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0044:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a1 a3 a4 a5 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
sys_arch_sem_wait_entry:
l2306A6D2:
	word32 s1_120
	word32 s0_119
	word32 s2_122
	word32 s3_124
	word32 a1_111
	word32 a5_66
	word32 a5_17
	word32 a0_16 = xTaskGetTickCount(out a5_17)
	word32 a2_18 = dwArg44
	branch a1 == 0<32> l2306A710
l2306A710:
	word32 s4_143
	word32 s8_144
	s0_119 = xQueueSemaphoreTake(a0_16, 0xFFFFFFFF<32>, a2_18, a3, a4, a5_17, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_120, out a0_16, out a1_111, out a2_18, out a3, out a4, out a5_17, out s2_122, out s3_124, out s4_143, out s8_144)
	branch a0_16 != s2_122 l2306A710
l2306A71C:
l2306A6EC:
	word32 a0_50
	word32 a2_137
	word32 a4_138
	word32 a5_139
	word32 s4_140
	word32 s8_141
	s0_119 = xQueueSemaphoreTake(a0_16, a1, dwArg44, a3, a4, a5_17, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, out s1_120, out a0_50, out a1_111, out a2_137, out a3, out a4_138, out a5_139, out s2_122, out s3_124, out s4_140, out s8_141)
	a4 = 1<32>
	a5_66 = 0xFFFFFFFF<32>
	branch a0_50 != 1<32> l2306A702
l2306A6FA:
	word32 a5_142
	a5_66 = xTaskGetTickCount(out a5_142) - s0_119
l2306A702:
	s1Out = s1_120
	a0Out = a5_66
	a1Out = a1_111
	a3Out = a3
	a4Out = a4
	a5Out = a5_66
	s2Out = s2_122
	s3Out = s3_124
	s4Out = dwArg04
	return s0_119
sys_arch_sem_wait_exit:


word32 sys_sem_free(word32 a0, word32 a3, word32 mstatus, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_api_call
//      netconn_new_with_proto_and_callback
//      netconn_gethostbyname
//      netconn_free
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s4 t3 tp
// Preserved: sp
sys_sem_free_entry:
l2306A71E:
	word32 a4_6 = CONVERT(Mem0[0x420268E4<32>:uint16], uint16, word32)
	Mem8[0x420268E4<32>:word16] = SLICE(a4_6 + 0xFFFFFFFF<32>, word16, 0)
	word32 a0_10 = Mem8[a0:word32]
l2306A732_thunk_vQueueDelete:
	word32 a3_16
	word32 a4_17
	word32 a5_18
	word32 s1_21
	word32 s4_22
	word32 a0_32
	word32 a1_33
	word32 a2_34
	word32 s0_20 = vQueueDelete(a0_10, a3, a4_6 + 0xFFFFFFFF<32>, mstatus, dwArg0158, dwArg0198, out s1_21, out a0_32, out a1_33, out a2_34, out a3_16, out a4_17, out a5_18, out s4_22)
	s1Out = s1_21
	a3Out = a3_16
	a4Out = a4_17
	a5Out = a5_18
	s4Out = s4_22
	return s0_20
sys_sem_free_exit:


word32 sys_sem_valid(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_send_msg_wait_sem
//      netconn_new_with_proto_and_callback
//      err_tcp
//      lwip_netconn_do_delconn
// MayUse:  a0:[0..31]
// LiveOut: a0
// Trashed: a0
// Preserved: sp
sys_sem_valid_entry:
l2306A736:
	return CONVERT(Mem0[a0:word32] != 0<32>, bool, word32)
sys_sem_valid_exit:


void sys_sem_set_invalid(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_free
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
sys_sem_set_invalid_entry:
l2306A73E:
	Mem4[a0:word32] = 0<32>
	return
sys_sem_set_invalid_exit:


void sys_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: sp
sys_init_entry:
l2306A744:
	Mem4[0x4200F5B0<32>:word16] = 0<16>
	return
sys_init_exit:


void sys_mutex_new(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mem_init
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
sys_mutex_new_entry:
l2306A74E:
	word32 a0_28
	word32 s3_94
	word32 s2_93
	word32 a5_92
	word32 a4_91
	word32 a3_90
	word32 a1_89
	xQueueCreateMutex(ra, a3, a4, a5, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out a0_28, out a1_89, out a3_90, out a4_91, out a5_92, out s2_93, out s3_94)
	Mem38[a0_28:word32] = a0
	branch a0_28 != 0<32> l2306A77C
l2306A77C:
	word32 a3_41 = CONVERT(Mem38[0x420268EC<32>:uint16], uint16, word32)
	word32 a4_44 = CONVERT(Mem38[0x420268EA<32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem46[0x420268EA<32>:word16] = SLICE(a4_44 >>u 16<i32>, word16, 0)
	branch a3_41 >=u a4_44 >>u 16<i32> l2306A774
l2306A794:
	Mem47[0x420268EC<32>:word16] = SLICE(a4_44 >>u 16<i32>, word16, 0)
l2306A768:
	Mem51[0x420268EE<32>:word16] = SLICE(CONVERT(Mem38[0x420268EE<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306A774:
	return
sys_mutex_new_exit:


word32 sys_mutex_lock(word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg04, word32 dwArg44, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mem_trim
//      mem_malloc
//      altcp_mbedtls_free_config
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] Stack +0004:[0..31] Stack +0044:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: a1 a4 s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3 tp
// Preserved: sp
sys_mutex_lock_entry:
l2306A79A:
l2306A79C_thunk_sys_arch_sem_wait:
	word32 a1_10
	word32 a4_13
	word32 s1_17
	word32 s2_18
	word32 s3_19
	word32 s4_20
	word32 a0_35
	word32 a3_36
	word32 a5_37
	word32 s0_16 = sys_arch_sem_wait(0<32>, a3, a4, s2, mstatus, dwArg04, dwArg44, dwArg84, dwArgF8, dwArg0138, out s1_17, out a0_35, out a1_10, out a3_36, out a4_13, out a5_37, out s2_18, out s3_19, out s4_20)
	s1Out = s1_17
	a1Out = a1_10
	a4Out = a4_13
	s2Out = s2_18
	s3Out = s3_19
	s4Out = s4_20
	return s0_16
sys_mutex_lock_exit:


word32 sys_mutex_unlock(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mem_trim
//      mem_malloc
//      lwip_netconn_do_gethostbyname
//      altcp_mbedtls_free_config
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_mutex_unlock_entry:
l2306A7A0:
	word32 a0_5 = Mem0[a0:word32]
l2306A7A8_thunk_xQueueGenericSend:
	word32 a1_13
	word32 a3_15
	word32 a4_16
	word32 a5_17
	word32 a7_19
	word32 s1_21
	word32 s2_22
	word32 s3_23
	word32 s4_24
	word32 s5_25
	word32 s6_26
	word32 s8_27
	word32 a0_53
	word32 a2_54
	word32 s0_20 = xQueueGenericSend(a0_5, 0<32>, 0<32>, a4, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_21, out a0_53, out a1_13, out a2_54, out a3_15, out a4_16, out a5_17, out a7_19, out s2_22, out s3_23, out s4_24, out s5_25, out s6_26, out s8_27)
	s1Out = s1_21
	a1Out = a1_13
	a3Out = a3_15
	a4Out = a4_16
	a5Out = a5_17
	a7Out = a7_19
	s2Out = s2_22
	s3Out = s3_23
	s4Out = s4_24
	s5Out = s5_25
	s6Out = s6_26
	s8Out = s8_27
	return s0_20
sys_mutex_unlock_exit:


word32 sys_sem_signal(word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg08, word32 dwArg24, word32 dwArgA4, word32 dwArg0118, word32 dwArg0158, word32 dwArg0198, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
//      event_callback
//      lwip_netconn_do_dns_found
//      lwip_netconn_do_connected
//      err_tcp
//      lwip_netconn_do_newconn
//      lwip_netconn_do_delconn
//      lwip_netconn_do_bind
//      lwip_netconn_do_connect
//      lwip_netconn_do_disconnect
//      lwip_netconn_do_listen
//      lwip_netconn_do_send
//      lwip_netconn_do_recv
//      lwip_netconn_do_write
//      lwip_netconn_do_getaddr
//      lwip_netconn_do_close
//      lwip_netconn_do_join_leave_group
//      lwip_netconn_do_gethostbyname
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +00A4:[0..31] Stack +0118:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a3 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
sys_sem_signal_entry:
l2306A7AC:
l2306A7AC_thunk_sys_mutex_unlock:
	word32 a1_9
	word32 a3_11
	word32 s1_17
	word32 s2_18
	word32 s3_19
	word32 s4_20
	word32 s5_21
	word32 s6_22
	word32 s8_23
	word32 a4_46
	word32 a5_47
	word32 a7_48
	word32 s0_16 = sys_mutex_unlock(a0, a4, a5, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_17, out a1_9, out a3_11, out a4_46, out a5_47, out a7_48, out s2_18, out s3_19, out s4_20, out s5_21, out s6_22, out s8_23)
	s1Out = s1_17
	a1Out = a1_9
	a3Out = a3_11
	s2Out = s2_18
	s3Out = s3_19
	s4Out = s4_20
	s5Out = s5_21
	s6Out = s6_22
	s8Out = s8_23
	return s0_16
sys_sem_signal_exit:


word32 sys_thread_new(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 s3, word32 mstatus, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_init
// MayUse:  a2:[0..31] a3:[0..15] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a6 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 tp
// Preserved: sp
sys_thread_new_entry:
l2306A7B0:
	word32 a6_5 = CONVERT(Mem0[0x4200F5B0<32>:uint16], uint16, word32)
	branch a6_5 <=u 5<32> l2306A7CA
l2306A7CA:
	word32 a0_26
	word32 s3_129
	word32 s2_128
	word32 a5_127
	word32 a4_126
	word32 a3_125
	word32 a2_124
	word32 s1_123
	word32 ra_44 = xTaskCreate(ra, s1, CONVERT(SLICE(a3, word16, 0), word16, word32), a2, a4, fp + 0xFFFFFFEC<32>, s3, mstatus, dwLoc10, dwLoc0C, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out s1_123, out a0_26, out a2_124, out a3_125, out a4_126, out a5_127, out s2_128, out s3_129)
	branch a0_26 != 1<32> l2306A7C2
l2306A7C2:
l2306A7EA:
l2306A7C4:
	a6Out = a6_32
	return ra_44
l2306A7BE:
	a6Out = a6_5
	return ra
sys_thread_new_exit:


word32 sys_arch_protect(word32 a4, word32 mstatus, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      alloc_socket
//      free_socket
//      event_callback
//      lwip_accept
//      mem_trim
//      memp_malloc
//      pbuf_free_ooseq_callback
//      pbuf_free
//      pbuf_alloc
//      pbuf_chain
//      netconn_err
//      err_tcp
//      altcp_free
//      altcp_mbedtls_free_config
// MayUse:  a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a4
// Trashed: a0 a2 a4 a5
// Preserved: sp
sys_arch_protect_entry:
l2306A7EE:
	word32 a5_17
	word32 a4_9 = vTaskEnterCritical(a4, mstatus, out a5_17)
	a2Out = dwArg10
	a4Out = a4_9
	return 1<32>
sys_arch_protect_exit:


word32 sys_arch_unprotect(word32 a3, word32 mstatus, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      alloc_socket
//      free_socket
//      event_callback
//      lwip_accept
//      mem_trim
//      memp_malloc
//      pbuf_free_ooseq_callback
//      pbuf_free
//      pbuf_alloc
//      pbuf_chain
//      netconn_err
//      err_tcp
//      altcp_free
//      altcp_mbedtls_free_config
// MayUse:  a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5
// Trashed: a3 a4 a5
// Preserved: sp
sys_arch_unprotect_entry:
l2306A7FE:
l2306A7FE_thunk_vTaskExitCritical:
	word32 a5_5
	word32 a4_7
	word32 a3_6 = vTaskExitCritical(a3, mstatus, out a4_7, out a5_5)
	a4Out = a4_7
	a5Out = a5_5
	return a3_6
sys_arch_unprotect_exit:


word32 sys_now(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_cyclic_timer
//      sys_timeout
//      sys_check_timeouts
//      sys_timeouts_sleeptime
//      netconn_close_shutdown
//      netconn_prepare_delete
//      netconn_write_vectors_partly
//      lwip_netconn_do_write
//      lwip_netconn_do_close
// MayUse: 
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
sys_now_entry:
l2306A802:
l2306A802_thunk_xTaskGetTickCount:
	word32 a5_4
	word32 a0_3 = xTaskGetTickCount(out a5_4)
	a5Out = a5_4
	return a0_3
sys_now_exit:


word32 lwip_gethostbyname(word32 ra, word32 s0, word32 a0, word32 a3, word32 mstatus, word32 dwArg78, word32 dwArgB8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0148, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      domain_name_resolution
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0078:[0..31] Stack +00B8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a2 a3 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_gethostbyname_entry:
l2306A806:
	word32 a4_110
	word32 a0_106
	word32 a0_17
	word32 a4_22
	word32 s2_26
	word32 a3_109
	word32 a2_108
	word32 s1_114 = netconn_gethostbyname(ra, s0, a0, fp + 0xFFFFFFEC<32>, a3, mstatus, dwArg78, dwArgB8, dwArgF8, dwArg0108, dwArg0138, dwArg0148, out a0_17, out a2_108, out a3_109, out a4_22, out s2_26)
	branch a0_17 == 0<32> l2306A834
l2306A834:
	Mem50[a4_22:word32] = 0x4200F5B8<32>
	Mem51[0x4200F5B8<32>:word32] = 0x4200F5BC<32>
	Mem52[0x4200F5C0<32>:word32] = 0<32>
	word32 a5_130
	word32 a4_129
	strncpy(0x4201A908<32>, s2_26, 256<i32>, out a2_108, out a3_109, out a4_129, out a5_130)
	Mem66[0x4200F5B4<32>:word32] = 0<32>
	Mem67[0x4200F5B8<32>:word32] = 0x4201A8F4<32>
	Mem69[0xA<32>:word32] = 0x4201A8F4<32>
	Mem71[0x4201AA08<32>:byte] = 0<8>
	Mem72[0x4201A908<32>:word32] = 0x4201A8F4<32>
	Mem73[0x10<32>:word32] = 0x4201A8F4<32>
	Mem74[0x4200F5CC<32>:word32] = 0x4201A8F4<32>
	s1_114 = 0x4201A908<32>
	a4_110 = 4<32>
	a0_106 = 0x4201A8F4<32>
l2306A81A:
	Mem78[0x420267AC<32>:word32] = 210<i32>
	a4_110 = 210<i32>
	a0_106 = 0<32>
l2306A828:
	a0Out = a0_106
	a2Out = a2_108
	a3Out = a3_109
	a4Out = a4_110
	return s1_114
lwip_gethostbyname_exit:


void netifapi_do_netif_add(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArgA4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +00A4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_do_netif_add_entry:
l2306A890:
	branch netif_add(ra, Mem5[Mem5[a1 + 12<i32>:word32] + 8<i32>:word32], a1, a2, a3, a5, Mem5[a0 + 32<i32>:int32], s4, s7, mstatus, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg48, dwArg58, dwArg64, dwArg78, dwArgA4, dwArgE8, dwArgF8, dwArg0118) == 0<32> l2306A8B2
l2306A8B2:
l2306A8AA:
l2306A8AC:
	return
netifapi_do_netif_add_exit:


void netifapi_do_netif_set_addr(word32 ra, word32 s1, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg1C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArg0118, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_do_netif_set_addr_entry:
l2306A8B6:
	word32 s0_71
	word32 s1_72
	word32 a1_73
	word32 a2_74
	word32 a3_75
	word32 a4_76
	word32 a5_77
	word32 s2_78
	word32 s3_79
	word32 s4_80
	word32 s5_81
	word32 s6_82
	word32 s7_83
	word32 mstatus_84
	netif_set_addr(ra, s1, Mem5[Mem5[a1 + 12<i32>:word32] + 8<i32>:word32], a1, a2, a3, a4, a5, s3, s4, s7, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg34, dwArg38, dwArg48, dwArg58, dwArg5C, dwArg64, dwArg68, dwArg78, dwArg88, dwArgA8, dwArg0118, dwArg0128, out s0_71, out s1_72, out a1_73, out a2_74, out a3_75, out a4_76, out a5_77, out s2_78, out s3_79, out s4_80, out s5_81, out s6_82, out s7_83, out mstatus_84)
	return
netifapi_do_netif_set_addr_exit:


void netifapi_do_netif_common(word32 ra, word32 a0, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] ra:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: a0 a2 a5 ra t1
// Preserved: sp
netifapi_do_netif_common_entry:
l2306A8CE:
	word32 t1_5 = Mem0[a0 + 16<i32>:int32]
	word32 a0_7 = Mem0[a0 + 8<i32>:word32]
	branch t1_5 == 0<32> l2306A8DC
l2306A8DC:
	call Mem10[a0 + 12<i32>:word32] (retsize: 0;)
		uses: a0:a0_7,ra:ra,Stack +0084:ra
	return
l2306A8DA:
	call t1_5 (retsize: 0;)
		uses: a0:a0_7,ra:ra,Stack +0010:dwArg10
	return
netifapi_do_netif_common_exit:


word32 netifapi_netif_add(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & s1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: s0 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_netif_add_entry:
l2306A8EC:
	branch a1 != 0<32> l2306A8FA
l2306A8F2:
l2306A8FA:
	branch a2 != 0<32> l2306A904
l2306A8FC:
l2306A904:
	branch a3 != 0<32> l2306A90E
l2306A906:
	a3 = 0x230CBADC<32>
l2306A90E:
	word32 s1_76
	word32 a5_140
	word32 s2_141
	word32 s3_142
	word32 a3_138
	word32 a4_139
	word32 s0_75 = tcpip_api_call(ra, s0, fp + -52<i32>, a3, a4, a5, s2, mstatus, a5, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, out s1_76, out a3_138, out a4_139, out a5_140, out s2_141, out s3_142)
	s1Out = s1_76
	return s0_75
netifapi_netif_add_exit:


word32 netifapi_netif_set_addr(word32 ra, word32 s0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & a4Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_sm_disconnect_ind
//      stateConnectedIPNoEnter
//      stateConnectedIPYes_exit
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_netif_set_addr_entry:
l2306A930:
	branch a1 != 0<32> l2306A93E
l2306A936:
l2306A93E:
	branch a2 != 0<32> l2306A948
l2306A940:
l2306A948:
	branch a3 != 0<32> l2306A952
l2306A94A:
	a3 = 0x230CBADC<32>
l2306A952:
	word32 a3_64
	word32 a4_65
	word32 s3_71
	word32 a5_134
	word32 s2_135
	word32 s1_133
	tcpip_api_call(ra, s0, fp + -52<i32>, a3, a4, a5, s2, mstatus, dwLoc2C, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, out s1_133, out a3_64, out a4_65, out a5_134, out s2_135, out s3_71)
	a4Out = a4_65
	s3Out = s3_71
	return a3_64
netifapi_netif_set_addr_exit:


word32 netifapi_netif_common(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg88, word32 dwArg98, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_sm_connect_ind
//      bl_rx_sm_disconnect_ind
//      stateConnectedIPNoEnter
//      stateGlobalGuard_AP
//      stateConnectedIPYes_exit
//      stateGlobalGuard_stop
//      wifi_netif_dhcp_start
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31]
// LiveOut: a3 a4 a5 s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netifapi_netif_common_entry:
l2306A96E:
	word32 a3_24
	word32 a4_25
	word32 a5_26
	word32 s2_30
	word32 s1_64
	word32 s3_65
	word32 s0_28 = tcpip_api_call(ra, s0, fp + -52<i32>, a3, a4, a5, s2, mstatus, dwLoc2C, dwArg88, dwArg98, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, out s1_64, out a3_24, out a4_25, out a5_26, out s2_30, out s3_65)
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_26
	s2Out = s2_30
	return s0_28
netifapi_netif_common_exit:


word32 alloc_socket(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_accept
//      lwip_socket
// MayUse:  a0:[0..31] a1:[0..15] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 s0 s1 s2 s3 s5
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
alloc_socket_entry:
l2306A98C:
	word32 s2_123 = 0x4201AB08<32>
	word32 s4_23 = a1
	word32 s1_24 = 0<32>
	word32 s5_127 = 0x15<32>
l2306A9B0:
	word32 a4_140
	word32 a2_139
	sys_arch_protect(a4, mstatus, out a2_139, out a4_140)
	branch Mem19[s2_123:int32] != 0<32> l2306AA00
l2306AA00:
	s1_24 = s1_24 + 1<32>
	word32 a5_136
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5_136)
	s2_123 = s2_123 + 0x10<32>
	branch s1_24 != 0x15<32> l2306A9B0
l2306AA0C:
	s1_24 = 0xFFFFFFFF<32>
l2306A9BA:
	s5_127 = s1_24 << 4<u32>
	Mem49[s5_127 + 0x4201AB08<32>:word32] = a0
	word32 a5_138
	word32 a4_137
	a3 = sys_arch_unprotect(a3, mstatus, out a4_137, out a5_138)
	Mem53[s5_127 + 0x4201AB0C<32>:word32] = 0<32>
	Mem54[s5_127 + 0x4201AB10<32>:word16] = 0<16>
	s2_123 = s5_127 + 0x4201AB08<32>
	a4 = 0x10<32>
	branch (CONVERT(Mem54[a0:byte], byte, word32) & 240<i32>) == 0x10<32> l2306A9E2
l2306A9E0:
	s4_23 = 1<32>
l2306A9E2:
	Mem64[s5_127 + 0x4201AB12<32>:word16] = SLICE(s4_23, word16, 0)
	Mem65[s5_127 + 0x4201AB14<32>:word16] = 0<16>
l2306A9EC:
	s1Out = s1_24
	a0Out = s1_24
	a2Out = dwArg48
	a3Out = a3
	a4Out = a4
	s2Out = s2_123
	s3Out = a0
	s5Out = s5_127
	return s1
alloc_socket_exit:


void lwip_recv_tcp(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_recv_tcp_entry:
l2306AA10:
	word32 s3_155 = a0
	word32 s5_102 = a1
	word32 s1_198 = a2
	branch a2 >= 0<32> l2306AA38
l2306AA30:
	s1_198 = 0x7FFFFFFF<32>
l2306AA38:
	word32 a2_199 = 8<32>
	branch (a3 & 8<i32>) == 0<32> l2306AA42
l2306AA40:
	a2_199 = 0xC<32>
l2306AA42:
	word32 s0_105 = 0<32>
	word32 s6_131 = a3 & 1<i32>
l2306AA48:
	branch Mem40[s3_155 + 4<i32>:int32] == 0<32> l2306AAAA
l2306AAAA:
	word32 a5_51
	word32 s4_63
	ra = netconn_recv_tcp_pbuf_flags(ra, Mem40[s3_155:int32], fp + -52<i32>, a2_199, a3, mstatus, dwArg18, dwArg24, dwArg28, dwArg38, s1, dwArg68, dwArg78, dwArg98, dwArgA8, out s0_105, out s1_198, out a0, out a2_199, out a5_51, out s3_155, out s4_63, out s5_102, out s6_131, out mstatus)
	branch a0 == 0<32> l2306AAF6
l2306AAF6:
	Mem76[s3_155 + 4<i32>:word32] = a5_51
l2306AAB8:
	branch s0_105 == 0<32> l2306AADA
l2306AADA:
	word32 a4_552
	word32 a5_553
	word32 a0_77 = err_to_errno(a0, out a4_552, out a5_553)
	branch a0_77 == 0<32> l2306AAE8
l2306AAE0:
	Mem81[0x420267A8<32>:word32] = a0_77
l2306AAE8:
l2306AABA:
	branch (s4_63 & 1<i32>) == 0<32> l2306AA9E
l2306AA4E:
l2306AA50:
	word32 s2_93 = CONVERT(Mem89[a0 + 8<i32>:uint16], uint16, word32)
	branch s2_93 < s1_198 l2306AA62
l2306AA5A:
	s2_93 = CONVERT(SLICE(s1_198, word16, 0), word16, word32)
l2306AA62:
	word32 a0_110
	word32 s4_114
	word32 s1_117
	word32 s2_118
	word32 a3_120
	word32 a4_121
	word32 s3_124
	word32 a1_548
	word32 a2_549
	word32 a5_550
	word32 s8_551
	pbuf_copy_partial(a0, s5_102 + s0_105, s2_93, 0<32>, out s1_117, out a0_110, out a1_548, out a2_549, out a3_120, out a4_121, out a5_550, out s2_118, out s3_124, out s4_114, out s8_551)
	word32 s7_108 = s2_93 + s0_105
	branch s6_131 != 0<32> l2306AB08
l2306AB08:
	branch s7_108 != 0<32> l2306AAC2
l2306AA76:
	word32 s2_154
	word32 s1_153
	branch CONVERT(Mem89[a0_110 + 8<i32>:uint16], uint16, word32) - s2_118 <= 0<32> l2306AAFE
l2306AAFE:
	Mem139[s3_124 + 4<i32>:word32] = 0<32>
	word32 a7_559
	word32 s0_554
	word32 a4_557
	word32 a2_556
	word32 a1_555
	word32 a5_558
	word32 s4_560
	word32 s8_561
	ra = pbuf_free(ra, a0_110, a3_120, a4_121, s4_114, mstatus, dwArgE8, out s0_554, out s1_153, out a0, out a1_555, out a2_556, out a3, out a4_557, out a5_558, out a7_559, out s2_154, out s3_155, out s4_560, out s5_102, out s6_131, out s8_561, out mstatus)
l2306AA84:
	word32 s0_562
	word32 s4_563
	word32 s8_564
	ra = pbuf_free_header(ra, s1_117, a0_110, s2_118, dwArg04, a3_120, a4_121, s4_114, mstatus, dwArg04, dwArgC8, out s0_562, out s1_153, out a0, out a3, out s2_154, out s3_155, out s4_563, out s5_102, out s6_131, out s8_564, out mstatus)
	Mem195[s3_155 + 4<i32>:word32] = a0
l2306AA8E:
	s1_198 = s1_153 - s2_154
	a2_199 = 0x1C<32>
	s0_105 = s7_108
	branch s1_198 > 0<32> l2306AA48
l2306AA9A:
	branch s7_108 == 0<32> l2306AB0E
l2306AB0E:
l2306AA9E:
	netconn_tcp_recvd(Mem205[s3_155:int32], a2_199, mstatus, dwArg38, dwArg78, dwArgB8)
l2306AAC2:
	0<32> = dwArg0198
	return
lwip_recv_tcp_exit:


word32 lwip_sock_make_addr.isra.3(word32 ra, word32 a1, word32 a2, word32 dwArg74, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recvfrom_udp_raw.isra.6
//      lwip_recv
// MayUse:  a1:[0..31] a2:[0..31] ra:[0..31] Stack +0074:[0..31]
// LiveOut: a0 a3 a4 a5 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_sock_make_addr.isra.3_entry:
l2306AB12:
	word32 a5_89
	lwip_htons(a1, out a5_89)
	word32 a4_32
	word32 t1_90
	word32 a0_91
	word32 a1_92
	word32 a2_93
	word32 a3_94
	word32 a5_95
	word32 ra_34 = memset(ra, fp + -24<i32>, 0<32>, 8<32>, out t1_90, out a0_91, out a1_92, out a2_93, out a3_94, out a4_32, out a5_95)
	word32 s0_39 = 1<32>
	word32 a3_40 = Mem27[a4_32:word32]
	branch a4_32 <u 0x10<32> l2306AB56
l2306AB4E:
	s0_39 = 0<32>
	branch a4_32 <=u 0x10<32> l2306AB56
l2306AB54:
	Mem42[0x10<32>:word32] = a3_40
l2306AB56:
	word32 a4_50
	word32 a5_51
	word32 a3_55
	word32 a1_96
	word32 a2_97
	word32 a6_98
	word32 a7_99
	memcpy(a2, fp + -32<i32>, dwArg74, out a1_96, out a2_97, out a3_55, out a4_50, out a5_51, out a6_98, out a7_99)
	a0Out = s0_39
	a3Out = a3_55
	a4Out = a4_50
	a5Out = a5_51
	return ra_34
lwip_sock_make_addr.isra.3_exit:


word32 free_socket(word32 ra, word32 s1, word32 a1, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgA8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0138, word32 dwArg0178, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_accept
//      lwip_close
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +00A8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a3 a4 a5 s1 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus ra sp
free_socket_entry:
l2306AB6C:
	word32 s1_149
	word32 a4_186
	word32 a2_19
	sys_arch_protect(a4, mstatus, out a2_19, out a4_186)
	word32 s0_22 = Mem15[s1 + 4<i32>:word32]
	word32 s2_23 = Mem15[s0_22:int32]
	Mem24[s0_22 + 4<i32>:word32] = 0<32>
	Mem25[s0_22:word32] = 0<32>
	word32 a4_28
	word32 a5_138
	word32 a3_135 = sys_arch_unprotect(a3, mstatus, out a4_28, out a5_138)
	s1_149 = s1
	branch s1 == 0<32> l2306AB9C
l2306AB92:
	branch a1 == 0<32> l2306ABB0
l2306ABB0:
	s1_149 = netbuf_delete(ra, s1, a3_135, a4_28, s4, mstatus, dwArgE8, out a2_19, out a3_135, out a4_28, out a5_138)
l2306AB98:
	word32 s0_187
	word32 a0_188
	word32 a1_189
	word32 a7_190
	word32 s4_191
	word32 s5_192
	word32 s6_193
	word32 s8_194
	pbuf_free(ra, s1, a3_135, a4_28, s4, mstatus, dwArg0108, out s0_187, out s1_149, out a0_188, out a1_189, out a2_19, out a3_135, out a4_28, out a5_138, out a7_190, out s2_23, out s3, out s4_191, out s5_192, out s6_193, out s8_194, out mstatus)
l2306AB9C:
	branch s2_23 == 0<32> l2306ABB6
l2306ABB6:
	a3Out = a3_135
	a4Out = a4_28
	a5Out = a5_138
	s3Out = s3
	return s1_149
l2306ABA0:
l2306ABAC_thunk_netconn_delete:
	word32 a3_88
	word32 a4_89
	word32 a5_90
	word32 s3_94
	word32 s2_195
	word32 s4_196
	word32 s5_197
	word32 s1_85 = netconn_delete(s2_23, a2_19, a4_28, mstatus, s1, dwArgA8, dwArgE8, dwArg0138, dwArg0178, out a3_88, out a4_89, out a5_90, out s2_195, out s3_94, out s4_196, out s5_197)
	a3Out = a3_88
	a4Out = a4_89
	a5Out = a5_90
	s3Out = s3_94
	return s1_85
free_socket_exit:


void lwip_recvfrom_udp_raw.isra.6(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg34, word32 dwArg68, word32 dwArg74, word32 dwArg88, word32 dwArgA4, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_recv
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0034:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_recvfrom_udp_raw.isra.6_entry:
l2306ABC2:
	word32 a0_109
	a0_109 = a0
	branch a5 != 0<32> l2306ABE4
l2306ABDC:
	a0_109 = 0xFFFFFFF0<32>
	branch a5 > 0<32> l2306AC60
l2306ABE4:
	word32 a3_123
	word32 a5_30 = Mem21[a0 + 4<i32>:int32]
	word32 a2_36 = CONVERT((a1 & 8<i32>) != 0<32>, bool, word32)
	word32 s2_121 = a1
	a3_123 = a3
	branch a5_30 != 0<32> l2306AC0E
l2306ABFC:
	ra = netconn_recv_udp_raw_netbuf_flags(ra, Mem38[a0:int32], fp + -52<i32>, a2_36 << 2<i32>, a3, mstatus, s4, dwLoc0C, dwArg68, dwArg74, dwArg88, dwArgA8, dwArgC8, dwArgE8, out a0_109, out a1, out a3_123, out a4, out a5_30, out s2_121, out mstatus)
	branch a0_109 != 0<32> l2306AC60
l2306AC08:
	Mem73[a0 + 4<i32>:word32] = a5_30
l2306AC0E:
	word32 a5_125 = Mem75[a5_30:word32]
	word32 a2_114 = dwArgA4
	word32 s4_134 = 0<32>
	word32 s1_133 = 0<32>
	word32 s6_81 = CONVERT(Mem75[a5_125 + 8<i32>:uint16], uint16, word32)
l2306AC1A:
	branch s4_134 >= a5_125 l2306AC24
l2306AC20:
	branch s1_133 <u s6_81 l2306AC76
l2306AC76:
	word32 s3_106 = CONVERT(SLICE(s6_81 - s1_133, word16, 0), word16, word32)
	branch s3_106 <u a4 l2306AC96
l2306AC8E:
	s3_106 = CONVERT(SLICE(a4, word16, 0), word16, word32)
l2306AC96:
	word32 s4_117
	word32 s1_120
	word32 s8_482
	word32 s3_481
	pbuf_copy_partial(a0_109, a1, s3_106, s1_133, out s1_120, out a0_109, out a1, out a2_114, out a3_123, out a4, out a5_125, out s2_121, out s3_481, out s4_117, out s8_482)
	s1_133 = s1_120 >>u 16<i32>
	s4_134 = s4_117 + 1<32>
l2306AC24:
	branch a2_114 == 0<32> l2306AC3C
l2306AC28:
	branch a5_125 == 0<32> l2306AC3C
l2306AC2C:
	ra = lwip_sock_make_addr.isra.3(ra, CONVERT(Mem75[a0_109 + 12<i32>:uint16], uint16, word32), dwArg04, dwArg34, out a0_109, out a3_123, out a4, out a5_125)
l2306AC3C:
	word32 s0_171 = Mem75[a5_125 + 16<i32>:word32]
	Mem172[s0_171 + 24<i32>:word32] = 0<32>
	branch a5_125 == 0<32> l2306AC48
l2306AC44:
	Mem173[s0_171 + 20<i32>:word32] = 0<32>
l2306AC48:
	branch (s2_121 & 1<i32>) != 0<32> l2306AC5A
l2306AC50:
	Mem190[a0 + 4<i32>:word32] = 0<32>
	word32 a5_486
	word32 a4_485
	word32 a2_483
	word32 a3_484
	netbuf_delete(ra, a0_109, a3_123, a4, s4_134, mstatus, dwArgC8, out a2_483, out a3_484, out a4_485, out a5_486)
l2306AC5A:
	Mem231[a3:word16] = SLICE(s6_81, word16, 0)
l2306AC60:
	0<32> = dwArg0198
	return
lwip_recvfrom_udp_raw.isra.6_exit:


word32 get_socket(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      event_callback
//      lwip_accept
//      lwip_bind
//      lwip_close
//      lwip_connect
//      lwip_listen
//      lwip_recv
//      lwip_sendto
//      lwip_send
//      lwip_setsockopt
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
get_socket_entry:
l2306ACAE:
	word32 a5_10
	word32 a0_13
	branch a0 >u 0x14<32> l2306ACC6
l2306ACB4:
	a5_10 = a0 << 4<u32>
	a0_13 = Mem0[a0 << 4<u32>:word32]
	branch a0 << 4<u32> != 0<32> l2306ACD2
l2306ACC6:
	Mem12[0x420267A8<32>:word32] = 9<32>
	a5_10 = 0x42026000<32>
	a4 = 9<32>
	a0_13 = 0<32>
l2306ACD2:
	a4Out = a4
	a5Out = a5_10
	return a0_13
get_socket_exit:


void lwip_setsockopt_callback(word32 ra, word32 s0, word32 a0, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, word32 dwArg58, word32 dwArg74, word32 dwArgE4, word32 dwArgE8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
lwip_setsockopt_callback_entry:
l2306ACD4:
	word32 s0_116
	word32 s3_17 = Mem15[a0:int32]
	word32 s1_23 = Mem15[a4 + 16<i32>:word32]
	word32 a0_100 = Mem15[Mem15[a5 + 8<i32>:word32] + 12<i32>:word32]
	branch s3_17 >u 0x14<32> l2306B0B2
l2306ACF6:
	word32 a2_29 = Mem15[(s3_17 << 4<u32>) + 0x4201AB08<32>:word32]
	branch a2_29 == 0<32> l2306B0B2
l2306B0B2:
	s0_116 = 9<32>
l2306AD0E:
	branch s0 == 6<32> l2306B02C
l2306B02C:
	s0_116 = 0x16<32>
	branch a4 <=u 3<32> l2306AD60
l2306B034:
	word32 a2_35 = Mem15[a4 + 4<i32>:word32]
	branch a4 == 0<32> l2306AD60
l2306B03A:
	s0_116 = 92<i32>
	branch (CONVERT(Mem15[a2_35:byte], byte, word32) & 240<i32>) != 0x10<32> l2306AD60
l2306B04C:
	s0_116 = 0x16<32>
	branch CONVERT(Mem15[a4 + 20<i32>:byte], byte, word32) == 1<32> l2306AD60
l2306B058:
	a5 = a5 + 0xFFFFFFFF<32>
	s0_116 = 92<i32>
	branch a5 >u 0xFFFFFFFB<32> l2306AD60
l2306B064:
	word32 a5_50 = Mem15[(a5 + 0xFFFFFFFF<32> << 2<i32>) + 0x230C358C<32>:word32]
	word32 t2_255
	call a5_50 (retsize: 0;)
		uses: a0:Mem15[92<i32>:word32],a3:0x230C358C<32>,a4:a4,a5:a5_50,mstatus:mstatus,ra:ra,s0:92<i32>,s1:s1_23,s2:0x4201AB08<32>,s3:s3_17,s4:s3_17 << 4<u32>,Stack +0008:dwLoc28,Stack +0024:dwLoc0C,Stack +0068:dwArg38,Stack +0088:dwArg58,Stack +00A4:dwArg74,Stack +0114:dwArgE4,Stack +0118:dwArgE8,Stack +0130:dwArg0100,Stack +0134:dwArg0104,Stack +0158:dwArg0128,Stack +0198:dwArg0168,t2:t2_255
		defs: t2:t2_255
	return
l2306AD14:
	branch s0 == 0xFFFFFF<32> l2306AD28
l2306AD28:
	branch a5 == 0x1000005<32> l2306ADEC
l2306ADEC:
	a5 = 0xF<32>
	s0_116 = 0x16<32>
	branch a4 <=u 0xF<32> l2306AD60
l2306ADF4:
	a0_100 = Mem15[0xF<32>:word32]
	a4 = a4 ^ 1000<i32>
	a5 = (a4 ^ 1000<i32>) + 0x3F7<32>
	branch a5 < 0<32> l2306AD60
l2306AE0A:
	Mem80[a5 + 28<i32>:word32] = a2_29
l2306AD30:
	branch a5 > 0x1000005<32> l2306AD78
l2306AD78:
	branch a5 == 0x100000A<32> l2306AE0E
l2306AE0E:
	a5 = 3<32>
	s0_116 = 0x16<32>
	branch a4 <=u 3<32> l2306AD60
l2306AE16:
	word32 a2_84 = Mem15[a4 + 4<i32>:word32]
	branch a4 == 0<32> l2306AD60
l2306AE1A:
	word32 a5_85 = CONVERT(Mem15[a2_84:byte], byte, word32)
	s0_116 = 92<i32>
	a5 = a5_85 & 240<i32>
	branch (a5_85 & 240<i32>) != 32<i32> l2306AD60
l2306AE2E:
	a0_100 = Mem15[92<i32>:word32]
	word32 a5_90 = CONVERT(Mem15[a4 + 16<i32>:byte], byte, word32)
	branch false l2306AE40
l2306AE40:
	Mem92[a4 + 16<i32>:byte] = SLICE(a5_90 & 0xFFFFFFFE<32>, byte, 0)
	a5 = a5_90 & 0xFFFFFFFE<32>
l2306AE36:
	Mem94[a4 + 16<i32>:byte] = SLICE(a5_90 | 1<i32>, byte, 0)
	a5 = a5_90 | 1<i32>
l2306AD80:
	branch a5 == 0x100000B<32> l2306AE48
l2306AE48:
	a5 = 5<32>
	s0_116 = 0x16<32>
	branch a4 <=u 5<32> l2306AD60
l2306AE50:
	word32 a1_115 = 0<32>
	branch CONVERT(Mem15[a0_100:byte], byte, word32) == 0<32> l2306AE64
l2306AE58:
	a0_100 = netif_find(a0_100, out a4, out a5)
	a1_115 = a0_100
	s0_116 = 0x13<32>
	branch a0_100 == 0<32> l2306AD60
l2306AE64:
	word32 a5_121 = CONVERT(Mem15[a4:byte], byte, word32)
	a5 = a5_121 & 240<i32>
	branch (a5_121 & 240<i32>) == 32<i32> l2306AE92
l2306AE92:
	a4 = Mem15[a0_100 + 4<i32>:word32]
	a5 = udp_bind_netif(a0_100, a1_115)
l2306AE7A:
	branch (a5_121 & 240<i32>) == 64<i32> l2306AE9A
l2306AE9A:
	a4 = Mem15[a0_100 + 4<i32>:word32]
	a5 = raw_bind_netif(a0_100, a1_115)
l2306AE82:
	s0_116 = 0<32>
	branch (a5_121 & 240<i32>) != 0x10<32> l2306AD60
l2306AE8A:
	a4 = Mem15[a0_100 + 4<i32>:word32]
	a5 = tcp_bind_netif(a0_100, a1_115)
l2306AD88:
	branch a5 != 0x1000006<32> l2306AD22
l2306AD8E:
	a5 = 0xF<32>
	s0_116 = 0x16<32>
	branch a4 <=u 0xF<32> l2306AD60
l2306AD96:
	a0_100 = Mem15[0xF<32>:word32]
	a4 = a4 ^ 1000<i32>
	a5 = (a4 ^ 1000<i32>) + 0x3F7<32>
	branch a5 < 0<32> l2306AD60
l2306ADAC:
	Mem143[a5 + 32<i32>:word32] = a2_29
l2306AD34:
	branch a5 == 8<32> l2306AD48
l2306AD3A:
	branch a5 == 32<i32> l2306AD48
l2306AD42:
	branch a5 != 4<32> l2306AD22
l2306AD48:
	branch a5 != 32<i32> l2306ADB0
l2306ADB0:
	branch a5 == 4<32> l2306ADBE
l2306ADB6:
	branch a5 == 8<32> l2306ADBE
l2306ADBC:
	a5 = 0<32>
l2306AD50:
	s0_116 = 92<i32>
	branch (CONVERT(Mem15[a2_29:byte], byte, word32) & 240<i32>) == a5 l2306ADBE
l2306ADBE:
	s0_116 = 0x16<32>
	branch a4 <=u 3<32> l2306AD60
l2306ADC6:
	branch false l2306AD60
l2306ADCA:
	word32 a5_165 = a5 << 24<i32>
	a0_100 = Mem15[0x16<32>:word32]
	word32 a4_166 = CONVERT(Mem15[0xC<32>:int8], int8, int32)
	a5 = a5_165 >> 24<i32>
	branch false l2306ADE0
l2306ADE0:
	a5 = ~(a5_165 >> 24<i32>)
	a4 = a4_166 & a5
	Mem170[0xC<32>:byte] = SLICE(a4, byte, 0)
l2306ADD6:
	a4 = a4_166 | a5_165 >> 24<i32>
	Mem172[0xC<32>:byte] = SLICE(a4, byte, 0)
l2306ADDC:
	s0_116 = 0<32>
l2306AD1E:
	branch s0 == 0<32> l2306AEA2
l2306AEA2:
	branch a5 >u 0xFFFFFFF9<32> l2306AD22
l2306AEAA:
l2306AD22:
	s0_116 = 92<i32>
l2306AD60:
	Mem193[s0_116 + 20<i32>:word32] = Mem187[a0_100 + 24<i32>:word32]
	word32 s1_393
	word32 a1_394
	word32 a3_395
	word32 s5_399
	word32 s3_397
	word32 s4_398
	word32 s6_400
	word32 s8_401
	word32 s2_396
	sys_sem_signal(a0_100, a4, a5, mstatus, dwLoc28, dwLoc0C, dwArg74, dwArgE8, dwArg0128, dwArg0168, out s1_393, out a1_394, out a3_395, out s2_396, out s3_397, out s4_398, out s5_399, out s6_400, out s8_401)
	0<32> = dwArg0128
	return
lwip_setsockopt_callback_exit:


void event_callback(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArgC8, word32 dwArg0108, word32 dwArg010C, word32 dwArg0148)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +010C:[0..31] Stack +0148:[0..31]
// LiveOut:
// Trashed: a0 a2 a3 a4 a5 a6 ra s0 s1 s2 s4 s8 t0 t3 tp
// Preserved: a1 a7 s10 s11 s3 s5 s6 s7 s9 sp t1 t4 t5 t6
event_callback_entry:
l2306B0BA:
	branch a0 == 0<32> l2306B28E
l2306B28E:
	return
l2306B0BE:
	branch s1 >= 0<32> l2306B11E
l2306B0E4:
	word32 a4_802
	word32 a2_801
	sys_arch_protect(a4, mstatus, out a2_801, out a4_802)
	word32 s0_41 = Mem30[s1 + 24<i32>:word32]
	branch s1 >= 0<32> l2306B11A
l2306B11A:
	word32 a4_803
	word32 a5_804
	a3 = sys_arch_unprotect(a3, mstatus, out a4_803, out a5_804)
l2306B11E:
	word32 a4_50
	word32 a5_800
	word32 a0_49 = get_socket(s1, out a4_50, out a5_800)
	branch a0_49 == 0<32> l2306B270
l2306B270:
	0<32> = dwArg010C
	return
l2306B12A:
	word32 a4_808
	word32 a2_807
	sys_arch_protect(a4_50, mstatus, out a2_807, out a4_808)
	word32 a5_74 = 1<32>
	branch a1 >u 4<32> l2306B15A
l2306B136:
	a1 = 0x230C35A0<32>
	switch ((a1 << 2<i32>) + 0x230C35A0<32>) { l2306B148 l2306B1A4 }
l2306B1A4:
	Mem83[a0_49 + 8<i32>:word16] = SLICE(CONVERT(Mem30[a0_49 + 8<i32>:uint16], uint16, word32) + 0xFFFFFFFF<32>, word16, 0)
	a5_74 = 0<32>
l2306B148:
	word32 a5_87 = CONVERT(Mem30[a0_49 + 8<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem89[a0_49 + 8<i32>:word16] = SLICE(a5_87 >> 16<i32>, word16, 0)
	a5_74 = CONVERT(a5_87 >> 16<i32> < 2<i32>, bool, word32)
l2306B15A:
	branch CONVERT(Mem92[a0_49 + 14<i32>:byte], byte, word32) == 0<32> l2306B0FA
l2306B160:
	branch a5_74 == 0<32> l2306B0FA
l2306B162:
	word32 s3_129 = CONVERT(Mem92[a0_49 + 8<i32>:int16], int16, int32)
	word32 s4_137 = CONVERT(Mem92[a0_49 + 10<i32>:uint16], uint16, word32)
	word32 s2_148 = CONVERT(Mem92[a0_49 + 12<i32>:uint16], uint16, word32)
	word32 a4_102
	word32 a5_809
	word32 a3_101 = sys_arch_unprotect(a3, mstatus, out a4_102, out a5_809)
	word32 a2_810
	word32 a4_811
	word32 a4_111 = sys_arch_protect(a4_102, mstatus, out a2_810, out a4_811)
	word32 s11_112 = 1<32> << s1
	word32 s6_113 = 0x4200F000<32>
	word32 s8_114 = 0x4200F000<32>
	word32 s10_116 = s1 >>u 5<u32> << 2<i32>
l2306B18E:
	word32 a5_118 = s6_113 + 1476<i32>
	word32 s5_120 = Mem119[a5_118:int32]
	word32 s0_122 = Mem119[s8_114 + 1480<i32>:int32]
	word32 s7_123 = s6_113 + 1476<i32>
l2306B19E:
	branch s0_122 != 0<32> l2306B1D0
l2306B1D0:
	word32 s0_127 = Mem126[a5_118 + 28<i32>:word32]
	branch a5_118 != 0<32> l2306B1E2
l2306B1D4:
	s0_127 = Mem126[a5_118 + 20<i32>:word32]
	branch a5_118 == 0<32> l2306B228
l2306B228:
	branch s3_129 <= 0<32> l2306B23A
l2306B22C:
	s0_127 = Mem126[a5_118 + 8<i32>:word32]
	branch a5_118 == 0<32> l2306B23A
l2306B230:
	a5_118 = s11_112 & Mem126[a5_118 + s10_116:word32]
	branch a5_118 != 0<32> l2306B25E
l2306B23A:
	branch s4_137 == 0<32> l2306B24C
l2306B23E:
	s0_127 = Mem126[a5_118 + 12<i32>:word32]
	branch a5_118 == 0<32> l2306B24C
l2306B242:
	a5_118 = s11_112 & Mem126[a5_118 + s10_116:word32]
	branch a5_118 != 0<32> l2306B25E
l2306B24C:
	branch s2_148 == 0<32> l2306B1E2
l2306B250:
	s0_127 = Mem126[a5_118 + 16<i32>:word32]
	branch a5_118 == 0<32> l2306B1E2
l2306B254:
	a5_118 = s11_112 & Mem126[a5_118 + s10_116:word32]
	branch a5_118 == 0<32> l2306B1E2
l2306B1D8:
	s0_127 = Mem126[a1 + 24<i32>:word32]
	a5_118 = a5_118 + 4<32>
	a3_101 = 0<32>
l2306B1DE:
	branch a3_101 != a1 l2306B1FE
l2306B1FE:
	branch s1 != Mem126[a5_118 + -4<i32>:int32] l2306B222
l2306B206:
	branch s3_129 <= 0<32> l2306B212
l2306B20A:
	branch (CONVERT(Mem126[a5_118:uint16], uint16, word32) & 1<32>) != 0<32> l2306B25E
l2306B212:
	branch s4_137 == 0<32> l2306B21E
l2306B216:
	branch (CONVERT(Mem126[a5_118:uint16], uint16, word32) & 2<32>) != 0<32> l2306B25E
l2306B21E:
	branch s2_148 != 0<32> l2306B25E
l2306B25E:
	Mem190[s0_127 + 28<i32>:word32] = 1<32>
	s0_127 = sys_sem_signal(s0_127 + 32<i32>, a4_111, a5_118, mstatus, dwLoc48, s0, ra, dwArgC8, dwArg0108, dwArg0148, out s1, out a1, out a3_101, out s2_148, out s3_129, out s4_137, out s5_120, out s6_113, out s8_114)
l2306B222:
	a3_101 = a3_101 + 1<32>
	a5_118 = a5_118 + 8<32>
l2306B1E2:
	word32 a4_254
	word32 a5_812
	a3_101 = sys_arch_unprotect(a3_101, mstatus, out a4_254, out a5_812)
	word32 a2_813
	word32 a4_814
	word32 a0_256 = sys_arch_protect(a4_254, mstatus, out a2_813, out a4_814)
	a5_118 = Mem269[s7_123:int32]
	a4_111 = a0_256
	branch a5_118 != s5_120 l2306B18E
l2306B1F6:
	s5_120 = Mem269[s7_123:int32]
	s0_122 = Mem269[s0_127:word32]
l2306B1A0:
l2306B0F0:
	branch a1 != 0<32> l2306B0F8
l2306B0F4:
	Mem287[s1 + 0x17<32>:word32] = s0_41
l2306B0F8:
l2306B0FA:
	0<32> = dwArg010C
l2306B116_thunk_sys_arch_unprotect:
	word32 a4_805
	word32 a5_806
	sys_arch_unprotect(s2, mstatus, out a4_805, out a5_806)
	return
event_callback_exit:


word32 lwip_accept(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg28, word32 dwArg68, word32 dwArg88, word32 dwArgA4, word32 dwArgA8, word32 dwArgC8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0138, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iperf_server
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31]
// LiveOut: mstatus ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_accept_entry:
l2306B290:
	word32 sp_126 = fp + -64<i32>
	word32 a4_21
	word32 a5_495
	word32 a0_20 = get_socket(a0, out a4_21, out a5_495)
	branch a0_20 != 0<32> l2306B2BC
l2306B2BC:
	word32 a3_29
	word32 a4_30
	word32 a5_31
	word32 a0_255
	ra = netconn_accept(ra, Mem18[a0_20:word32], fp + -56<i32>, a3, a4_21, mstatus, dwLoc0C, dwArg14, dwArg68, dwArg88, dwArgA8, dwArgC8, dwArgE8, out a0_255, out a3_29, out a4_30, out a5_31, out mstatus)
	branch a0_255 == 0<32> l2306B2F4
l2306B2F4:
	word32 a0_53
	word32 a2_54
	word32 a3_55
	word32 a4_56
	word32 s1_60
	word32 s5_496
	word32 s3_101
	word32 s2_100
	alloc_socket(a0_255, 1<32>, a3_29, a4_30, mstatus, out s1_60, out a0_53, out a2_54, out a3_55, out a4_56, out s2_100, out s3_101, out s5_496)
	branch a0_53 != 0xFFFFFFFF<32> l2306B316
l2306B316:
	word32 a4_498
	word32 a2_497
	word32 a0_107 = sys_arch_protect(a4_56, mstatus, out a2_497, out a4_498)
	Mem76[dwArgA4 + 24<i32>:word32] = Mem18[s1_60 + 24<i32>:word32]
	word32 a5_79
	word32 a4_114
	word32 a3_113 = sys_arch_unprotect(a3_55, mstatus, out a4_114, out a5_79)
	word32 a5_112 = Mem76[a5_79 + 44<i32>:word32]
	branch a5_112 != 0<32> l2306B370
l2306B370:
	word32 s1_104 = CONVERT(SLICE(~s1_60, word16, 0), word16, int32)
l2306B378:
	branch s1_104 <= 0<32> l2306B32A
l2306B37C:
	word32 tp_116
	word32 a7_117
	word32 t0_118
	word32 t1_119
	word32 t4_120
	word32 t5_121
	word32 t6_122
	word32 s5_123
	word32 s6_343
	call a5_112 (retsize: 0;)
		uses: a0:Mem76[a5_91 + 44<i32>:word32],a1:0<32>,a2:0<32>,a3:a3_98,a7:a7_117,mstatus:mstatus_97,ra:ra_96,s0:Mem76[sp_86 + 68<i32>:word32],s1:s1_85 + 0xFFFFFFFF<32>,s2:s2_94,s3:s3_95,s5:s5_123,s6:s6_343,Stack +0004:dwArg04,Stack +0014:dwArg14,Stack +0028:dwArg28,Stack +0068:dwArg68,Stack +0088:dwArg88,Stack +00A4:dwArgA4,Stack +00A8:dwArgA8,Stack +00C8:dwArgC8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0138:dwArg0138,Stack +FFFFFFF4:dwLoc0C,t0:t0_118,t1:t1_119,t4:t4_120,t5:t5_121,t6:t6_122,tp:tp_116
		defs: a0:a0_107,a3:a3_113,a4:a4_114,a5:a5_112,a7:a7_117,mstatus:mstatus_115,ra:ra_102,s1:s1_104,s2:s2_100,s3:s3_101,s5:s5_123,s6:s6_343,sp:sp_99,t0:t0_118,t1:t1_119,t4:t4_120,t5:t5_121,t6:t6_122,tp:tp_116
l2306B32A:
	branch s3_101 == 0<32> l2306B2AC
l2306B32E:
	branch s2_100 == 0<32> l2306B2AC
l2306B332:
	word32 a2_139
	word32 a4_141
	word32 s2_146
	word32 s3_147
	word32 a0_137 = netconn_getaddr(a0_107, sp_126 + 12<i32>, sp_126 + 6<i32>, a4_114, mstatus, Mem76[sp_126 + 120<i32>:word32], Mem76[sp_126 + 184<i32>:word32], Mem76[sp_126 + 248<i32>:word32], out a2_139, out a4_141, out s2_146, out s3_147)
	branch a0_137 == 0<32> l2306B38A
l2306B38A:
	word32 a0_160 = CONVERT(Mem76[sp_126 + 6<i32>:uint16], uint16, word32)
	Mem162[sp_126 + 16<i32>:word16] = 0x210<16>
	word32 a5_164
	Mem166[sp_126 + 18<i32>:word16] = SLICE(lwip_htons(a0_160, out a5_164), word16, 0)
	Mem170[sp_126 + 136<i32>:word32] = a5_164
	word32 a3_512
	word32 a1_510
	word32 a4_513
	word32 a5_514
	word32 a2_511
	word32 a0_509
	word32 t1_508
	ra = memset(ra, sp_126 + 24<i32>, 0<32>, 8<32>, out t1_508, out a0_509, out a1_510, out a2_511, out a3_512, out a4_513, out a5_514)
	word32 a5_181 = CONVERT(Mem170[sp_126 + 16<i32>:byte], byte, word32)
	branch a5_181 >=u Mem170[s2_146:int32] l2306B3BC
l2306B3B8:
	Mem183[s2_146:word32] = a5_181
l2306B3BC:
	word32 a1_523
	word32 a3_525
	word32 a7_529
	word32 a6_528
	word32 a5_527
	word32 a4_526
	word32 a2_524
	memcpy(s3_147, sp_126 + 16<i32>, Mem185[s2_146:int32], out a1_523, out a2_524, out a3_525, out a4_526, out a5_527, out a6_528, out a7_529)
l2306B344:
	word32 a3_210
	word32 a4_211
	word32 s4_217
	word32 s5_518
	word32 s3_522
	word32 a5_521
	word32 a4_520
	word32 a3_519
	word32 s3_517
	word32 s2_516
	word32 a5_515
	a0_255 = free_socket(ra, netconn_delete(a0_137, a2_139, a4_141, mstatus, Mem76[sp_126 + 104<i32>:word32], Mem76[sp_126 + 168<i32>:word32], Mem76[sp_126 + 232<i32>:word32], Mem76[sp_126 + 312<i32>:word32], Mem76[sp_126 + 376<i32>:word32], out a3_210, out a4_211, out a5_515, out s2_516, out s3_517, out s4_217, out s5_518), 1<32>, a3_210, a4_211, s4_217, mstatus, Mem76[sp_126 + 168<i32>:word32], Mem76[sp_126 + 232<i32>:word32], Mem76[sp_126 + 264<i32>:word32], Mem76[sp_126 + 312<i32>:word32], Mem76[sp_126 + 376<i32>:word32], out a3_519, out a4_520, out a5_521, out s3_522)
l2306B304:
	word32 a3_499
	word32 a4_500
	word32 s3_503
	word32 s5_505
	word32 s4_504
	word32 s2_502
	word32 a5_501
	netconn_delete(a0_53, a2_54, a4_56, mstatus, dwArg28, dwArg68, dwArgA8, dwArgF8, dwArg0138, out a3_499, out a4_500, out a5_501, out s2_502, out s3_503, out s4_504, out s5_505)
	Mem281[0x420267A8<32>:word32] = 0x17<32>
l2306B2C8:
	word32 a4_294
	branch (CONVERT(Mem18[a5_31:byte], byte, word32) & 240<i32>) == 0x10<32> l2306B2E6
l2306B2E6:
	branch a0_255 != 0xFFFFFFF1<32> l2306B360
l2306B360:
	word32 a4_506
	word32 a5_507
	word32 a0_288 = err_to_errno(a0_255, out a4_506, out a5_507)
	branch a0_288 == 0<32> l2306B2AA
l2306B366:
	Mem292[0x420267A8<32>:word32] = a0_288
l2306B2EC:
	a4_294 = 0x16<32>
l2306B2D8:
	a4_294 = 95<i32>
l2306B2E0:
	Mem299[0x420267A8<32>:word32] = a4_294
l2306B2AA:
l2306B2AC:
	mstatusOut = mstatus
	return ra
lwip_accept_exit:


word32 lwip_bind(word32 a0, word32 a1, word32 mstatus, word32 dwArg34, word32 dwArg48, word32 dwArg88, word32 dwArgC8, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iperf_client_udp
//      iperf_server
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a3 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_bind_entry:
l2306B3CA:
	word32 a5_54
	word32 a5_189
	word32 a4_188
	branch get_socket(a0, out a4_188, out a5_189) != 0<32> l2306B3E2
l2306B3E2:
	word32 a0_32
	branch dwArg34 != 0x10<32> l2306B3F8
l2306B3E8:
	word32 a4_19 = CONVERT(Mem11[a1 + 1<i32>:byte], byte, word32)
	branch a4_19 != 2<32> l2306B3F8
l2306B3F2:
	branch (a1 & 3<i32>) == 0<32> l2306B40A
l2306B40A:
	word32 a5_27
	word32 a0_26 = lwip_htons(CONVERT(Mem11[Mem11[(a1 & 3<i32>) + 4<i32>:word32] + 2<i32>:uint16], uint16, word32), out a5_27)
	a0_32 = netconn_bind(a0_26, fp + -20<i32>, a0_26, a4_19, a5_27, mstatus, dwArg48, dwArg88, dwArgC8, out a3)
	a5_54 = 0<32>
	branch a0_32 != 0<32> l2306B3FA
l2306B3F8:
	a0_32 = 0xFFFFFFF0<32>
l2306B3FA:
	word32 a5_191
	word32 a4_190
	word32 a0_57 = err_to_errno(a0_32, out a4_190, out a5_191)
	branch a0_57 == 0<32> l2306B3DE
l2306B400:
	Mem61[0x420267A8<32>:word32] = a0_57
l2306B3DE:
	a5_54 = 0xFFFFFFFF<32>
l2306B426:
	a0Out = a5_54
	a3Out = a3
	return dwArgE4
lwip_bind_exit:


word32 lwip_close(word32 ra, word32 a0, word32 a2, word32 mstatus, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a2 a3 a4 a5 s0 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_close_entry:
l2306B430:
	word32 a4_134
	word32 a5_135
	branch get_socket(a0, out a4_134, out a5_135) != 0<32> l2306B458
l2306B458:
	word32 s2_22 = Mem15[a5_135:word32]
	branch a5_135 == 0<32> l2306B46E
l2306B460:
l2306B46E:
	word32 a4_31
	word32 a5_171
	word32 a0_30 = get_socket(a0, out a4_31, out a5_171)
	word32 s3_172 = a0_30
	branch a0_30 == 0<32> l2306B4B2
l2306B478:
	word32 s4_36 = 0x4201AB08<32>
l2306B484:
	word32 s0_39 = Mem38[a5_171:word32]
	branch s3_172 != a5_171 l2306B4AC
l2306B48A:
	word32 s0_41 = Mem38[a5_171 + 8<i32>:word32]
	Mem42[s0_41:word32] = 0<32>
	Mem43[s0_41 + 8<i32>:word32] = 0<32>
	s0_39 = Mem45[a5_171 + 4<i32>:word32]
	Mem47[s0_39 + 4<i32>:word32] = 0<32>
	a2 = netconn_join_leave_group(Mem49[s3_172:int32], fp + -40<i32>, fp + -36<i32>, a4_31, a5_171, mstatus, dwArg48, dwArg88, dwArgC8, out a4_31, out a5_171, out s2_22, out s3_172, out s4_36)
l2306B4AC:
	branch s0_39 + 0xC<32> != s4_36 l2306B484
l2306B4B2:
	word32 a0_103
	word32 a4_107
	word32 s4_114
	word32 s5_316
	word32 a5_314
	word32 s2_315
	word32 s1_111 = netconn_prepare_delete(Mem85[s2_22:int32], a2, a4_31, mstatus, dwArg48, dwArg88, dwArgC8, out a0_103, out a3, out a4_107, out a5_314, out s2_315, out s3, out s4_114, out s5_316)
	branch a0_103 == 0<32> l2306B4CC
l2306B4CC:
	free_socket(ra, s1_111, s1_111, a3, a4_107, s4_114, mstatus, dwArg78, dwArgB8, dwArgD8, dwArg0108, dwArg0148, out a3, out a4_134, out a5_135, out s3)
l2306B4BC:
	word32 a0_155 = err_to_errno(a0_103, out a4_134, out a5_135)
	branch a0_155 == 0<32> l2306B446
l2306B4C2:
	Mem159[0x420267A8<32>:word32] = a0_155
	a5_135 = 0x42026000<32>
l2306B446:
l2306B448:
	0<32> = dwArg0128
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4_134
	a5Out = a5_135
	s3Out = s3
	return dwArgE4
lwip_close_exit:


word32 lwip_connect(word32 a0, word32 a1, word32 mstatus, word32 dwArg34, word32 dwArg48, word32 dwArg88, word32 dwArgC8, ptr32 & a0Out, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      iperf_client_tcp
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] Stack +0034:[0..31] Stack +0048:[0..31] Stack +0088:[0..31] Stack +00C8:[0..31]
// LiveOut: a0 a3 s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_connect_entry:
l2306B4D8:
	word32 a5_78
	word32 a4_14
	word32 a5_235
	word32 a0_13 = get_socket(a0, out a4_14, out a5_235)
	branch a0_13 != 0<32> l2306B4F0
l2306B4F0:
	word32 a0_32
	word32 a5_18 = CONVERT(Mem11[a1 + 1<i32>:byte], byte, word32)
	branch a5_18 != 0<32> l2306B50C
l2306B50C:
	branch dwArg34 != 0x10<32> l2306B51E
l2306B512:
	branch a5_18 != 2<32> l2306B51E
l2306B518:
	branch (a1 & 3<i32>) == 0<32> l2306B530
l2306B530:
	word32 a5_27
	word32 a0_26 = lwip_htons(CONVERT(Mem11[Mem11[(a1 & 3<i32>) + 4<i32>:word32] + 2<i32>:uint16], uint16, word32), out a5_27)
	a0_32 = netconn_connect(a0_26, fp + -20<i32>, a0_26, 2<32>, a5_27, mstatus, dwArg48, dwArg88, dwArgC8, out a3)
l2306B51E:
	a0_32 = 0xFFFFFFF0<32>
l2306B4F8:
	a0_32 = netconn_disconnect(Mem11[a0_13:word32], dwArg34, a4_14, a5_18, mstatus, dwArg48, dwArg88, dwArgC8, out a3)
l2306B4FE:
	a5_78 = 0<32>
	branch a0_32 != 0<32> l2306B520
l2306B520:
	word32 a5_237
	word32 a4_236
	word32 a0_81 = err_to_errno(a0_32, out a4_236, out a5_237)
	branch a0_81 == 0<32> l2306B4EC
l2306B526:
	Mem85[0x420267A8<32>:word32] = a0_81
l2306B4EC:
	a5_78 = 0xFFFFFFFF<32>
l2306B502:
	a0Out = a5_78
	a3Out = a3
	return dwArgE4
lwip_connect_exit:


word32 lwip_listen(word32 a0, word32 a1, word32 mstatus, word32 dwArg44, word32 dwArg58, word32 dwArg98, word32 dwArgD8, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iperf_server
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] Stack +0044:[0..31] Stack +0058:[0..31] Stack +0098:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a3 s0 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_listen_entry:
l2306B546:
	word32 a5_59
	word32 a4_12
	word32 a5_161
	word32 a0_11 = get_socket(a0, out a4_12, out a5_161)
	branch a0_11 != 0<32> l2306B562
l2306B562:
	branch a1 >= 0<32> l2306B56A
l2306B568:
	a1 = 0<32>
l2306B56A:
	branch a1 <= 255<i32> l2306B576
l2306B572:
l2306B576:
	s0 = Mem9[a0_11:word32]
	word32 a0_37 = netconn_listen_with_backlog(a0_11, dwArg44, a4_12, 255<i32>, mstatus, dwArg58, dwArg98, dwArgD8, out a3, out s2)
	a5_59 = 0<32>
	branch a0_37 == 0<32> l2306B558
l2306B584:
	s0 = Mem9[0<32>:word32]
	branch (CONVERT(Mem9[0<32>:byte], byte, word32) & 240<i32>) == 0x10<32> l2306B5A2
l2306B5A2:
	word32 a4_162
	word32 a5_163
	word32 a0_64 = err_to_errno(a0_37, out a4_162, out a5_163)
	branch a0_64 == 0<32> l2306B556
l2306B5A8:
	Mem68[0x420267A8<32>:word32] = a0_64
l2306B594:
	Mem71[0x420267A8<32>:word32] = 95<i32>
l2306B556:
	a5_59 = 0xFFFFFFFF<32>
l2306B558:
	a0Out = a5_59
	a3Out = a3
	s2Out = s2
	return s0
lwip_listen_exit:


word32 lwip_recvfrom(word32 a0, word32 a2, word32 a4, word32 a5, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_read
//      lwip_recv
// MayUse:  a0:[0..31] a2:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a2 a3 s0 s1 s2 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s9 t4
// Preserved: sp
lwip_recvfrom_entry:
l2306B5B2:
	word32 a2_154
	word32 s0_58
	word32 s1_25 = a5
	a2_154 = a2
	word32 a5_29
	word32 a4_180
	branch get_socket(a0, out a4_180, out a5_29) == 0<32> l2306B660
l2306B5D0:
	word32 a0_30 = Mem17[a5_29:word32]
	branch (CONVERT(Mem17[a5_29:byte], byte, word32) & 240<i32>) != 0x10<32> l2306B622
l2306B622:
	branch a5 == 0<32> l2306B640
l2306B63E:
	s1_25 = Mem46[0<32>:word32]
l2306B640:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg52 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg116 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg164 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg408 = <invalid>
	lwip_recvfrom_udp_raw.isra.6(ra, a0, a1, a3, a4, a5, s4, mstatus, stackArg4, stackArg52, stackArg104, stackArg116, stackArg136, stackArg164, stackArg168, stackArg200, stackArg232, stackArg408)
	a2_154 = fp + -60<i32>
	branch a0_30 == 0<32> l2306B664
l2306B664:
	s0_58 = 0<32>
	branch a2 >=u 0<32> l2306B66E
l2306B66C:
	s0_58 = a2
l2306B66E:
	branch s1_25 == 0<32> l2306B610
l2306B670:
	Mem67[0<32>:word32] = s1_25
	s0_58 = dwArg0194
l2306B652:
	word32 a4_217
	word32 a5_218
	word32 a0_68 = err_to_errno(a0_30, out a4_217, out a5_218)
	branch a0_68 == 0<32> l2306B660
l2306B658:
	Mem72[0x420267A8<32>:word32] = a0_68
l2306B660:
	s0_58 = 0xFFFFFFFF<32>
l2306B5E4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg24 = <invalid>
	word32 stackArg36 = <invalid>
	word32 stackArg40 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg152 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg408 = <invalid>
	lwip_recv_tcp(ra, s1, a0, a1, a2, a3, mstatus, stackArg4, stackArg24, stackArg36, stackArg40, stackArg56, stackArg104, stackArg120, stackArg152, stackArg168, stackArg184, stackArg200, stackArg232, stackArg408)
	a2_154 = a2
	s0_58 = a0_30
	branch a4 == 0<32> l2306B610
l2306B5F2:
	branch a5 == 0<32> l2306B610
l2306B5F4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg120 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg248 = <invalid>
	word32 a2_198
	word32 a4_199
	word32 s2_200
	word32 s3_201
	netconn_getaddr(a0, a1, a2, a4, mstatus, stackArg120, stackArg184, stackArg248, out a2_198, out a4_199, out s2_200, out s3_201)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg116 = <invalid>
	word32 a0_203
	word32 a3_204
	word32 a4_205
	word32 a5_206
	lwip_sock_make_addr.isra.3(ra, a1, a2, stackArg116, out a0_203, out a3_204, out a4_205, out a5_206)
	a2_154 = a4
l2306B610:
	s1Out = dwArg28
	a0Out = s0_58
	a2Out = a2_154
	a3Out = dwArg08
	s2Out = a2
	s4Out = a4
	s9Out = dwLoc5C
	return s0_58
lwip_recvfrom_exit:


void lwip_read(word32 a0, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s9 t4
// Preserved: sp
lwip_read_entry:
l2306B676:
l2306B67C_thunk_lwip_recvfrom:
	word32 s1_23
	word32 a0_24
	word32 a2_25
	word32 a3_26
	word32 s2_27
	word32 s4_28
	word32 s9_29
	lwip_recvfrom(a0, a2, 0<32>, 0<32>, out s1_23, out a0_24, out a2_25, out a3_26, out s2_27, out s4_28, out s9_29)
	return
lwip_read_exit:


word32 lwip_recv(word32 a0, word32 a2, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iperf_server
// MayUse:  a0:[0..31] a2:[0..31]
// LiveOut: a0 a2 a3 s0 s1 s2 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s9 t4
// Preserved: sp
lwip_recv_entry:
l2306B680:
l2306B684_thunk_lwip_recvfrom:
	word32 a0_7
	word32 a3_8
	word32 s1_13
	word32 s2_14
	word32 s4_15
	word32 s9_17
	word32 a2_20
	word32 s0_12 = lwip_recvfrom(a0, a2, 0<32>, 0<32>, out s1_13, out a0_7, out a2_20, out a3_8, out s2_14, out s4_15, out s9_17)
	s1Out = s1_13
	a0Out = a0_7
	a2Out = a2_20
	a3Out = a3_8
	s2Out = s2_14
	s4Out = s4_15
	s9Out = s9_17
	return s0_12
lwip_recv_exit:


word32 lwip_sendto(word32 ra, word32 s0, word32 a0, word32 mstatus, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_send
//      iperf_client_udp
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31]
// LiveOut: a0 a2 mstatus ra s0 s1 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_sendto_entry:
l2306B688:
	word32 a0_217
	word32 s3_196 = a0
	word32 s2_195 = a1
	word32 s0_232 = dwArg74
	word32 a2_185 = ra
	word32 a5_30
	word32 a4_29
	branch get_socket(a0, out a4_29, out a5_30) != 0<32> l2306B6B2
l2306B6B2:
	word32 a2_37 = CONVERT(Mem21[ra:byte], byte, word32)
	word32 a0_34 = Mem21[ra:word32]
	a2_185 = a2_37 & 240<i32>
	branch (a2_37 & 240<i32>) != 0x10<32> l2306B6DC
l2306B6DC:
	word32 a3_39 = 0x10000000<32>
	branch dwArg74 <u 0x10000000<32> l2306B6F0
l2306B6F0:
	s4 = CONVERT(SLICE(dwArg74, word16, 0), word16, word32)
	branch a4_29 != 0<32> l2306B792
l2306B792:
	branch a5_30 != 0x10<32> l2306B6FC
l2306B796:
	a3_39 = CONVERT(Mem21[a4_29 + 1<i32>:byte], byte, word32)
	branch a3_39 != 2<32> l2306B6FC
l2306B7A0:
	a5_30 = a4_29 & 3<i32>
l2306B6FA:
	branch a5_30 == 0<32> l2306B70E
l2306B70E:
	branch a4_29 == 0<32> l2306B782
l2306B782:
l2306B718:
	a4_29 = Mem49[a5_30 + 4<i32>:word32]
	word32 a5_489
	lwip_htons(CONVERT(Mem49[a4_29 + 2<i32>:uint16], uint16, word32), out a5_489)
l2306B722:
	word32 mstatus_83
	word32 s2_87
	word32 a0_124
	word32 a4_156
	word32 a3_155
	word32 s4_163
	word32 ra_84 = netbuf_alloc(ra, a0_34, fp + -52<i32>, s4, a3_39, a4_29, s4, mstatus, s0, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_232, out a0_124, out a3_155, out a4_156, out s2_87, out s4_163, out mstatus_83)
	branch a0_124 == 0<32> l2306B764
l2306B732:
	word32 a5_110
	word32 a4_109
	word32 a2_113
	branch (CONVERT(Mem60[Mem60[a0_124 + 4<i32>:word32]:byte], byte, word32) & 240<i32>) == 64<i32> l2306B788
l2306B788:
	word32 a6_494
	word32 a3_493
	word32 a1_492
	word32 a7_495
	memcpy(a0_124, s2_87, s0_232, out a1_492, out a2_113, out a3_493, out a4_109, out a5_110, out a6_494, out a7_495)
l2306B748:
	lwip_chksum_copy(a0_124, s2_87, s4_163, out a0_124, out a2_113, out a4_109)
	a5_110 = 2<32>
l2306B75A:
	a3_155 = netconn_send(a0_124, a2_113, a4_109, a5_110, mstatus_83, dwArg28, dwArg68, dwArgA8, out a4_156, out s4_163)
l2306B764:
	a2_185 = netbuf_free(ra_84, fp + -52<i32>, a3_155, a4_156, s4_163, mstatus_83, dwArgC8, out s2_195, out s3_196, out s4, out s5, out mstatus)
	word32 a5_491
	word32 a4_490
	word32 a0_209 = err_to_errno(s3_196, out a4_490, out a5_491)
	branch a0_209 == 0<32> l2306B77A
l2306B772:
	Mem213[0x420267A8<32>:word32] = a0_209
l2306B77A:
	a0_217 = s0_232
	branch s3_196 == 0<32> l2306B6CC
l2306B780:
l2306B6FC:
	word32 a4_487
	word32 a5_488
	word32 a0_220 = err_to_errno(0xFFFFFFF0<32>, out a4_487, out a5_488)
	branch a0_220 == 0<32> l2306B6AE
l2306B704:
	Mem224[0x420267A8<32>:word32] = a0_220
l2306B6E2:
	Mem227[0x420267A8<32>:word32] = 90<i32>
l2306B6C4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg40 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg168 = <invalid>
	word32 s8_486
	lwip_send(a0, a3, mstatus, stackArg40, stackArg104, stackArg168, out s0_232, out a0_217, out a2_185, out s2_195, out s3_196, out s4, out s5, out s8_486, out mstatus)
l2306B6AE:
	a0_217 = 0xFFFFFFFF<32>
l2306B6CC:
	s0Out = s0_232
	s1Out = a4
	a0Out = a0_217
	a2Out = a2_185
	s2Out = s2_195
	s3Out = s3_196
	s4Out = s4
	s5Out = s5
	s8Out = dwArg0148
	mstatusOut = mstatus
	return dwLoc08
lwip_sendto_exit:


word32 lwip_send(word32 a0, word32 a3, word32 mstatus, word32 dwArg28, word32 dwArg68, word32 dwArgA8, ptr32 & s0Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
//      iperf_client_tcp
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] Stack +0028:[0..31] Stack +0068:[0..31] Stack +00A8:[0..31]
// LiveOut: a0 a2 mstatus ra s0 s2 s3 s4 s5 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_send_entry:
l2306B7A6:
	word32 a0_103
	word32 a5_18
	word32 a4_232
	branch get_socket(a0, out a4_232, out a5_18) != 0<32> l2306B7CA
l2306B7CA:
	word32 a0_22 = Mem13[a5_18:word32]
	branch (CONVERT(Mem13[a5_18:byte], byte, word32) & 240<i32>) == 0x10<32> l2306B7E6
l2306B7E6:
	word32 a6_27 = 3<32>
	branch (a3 & 16<i32>) != 0<32> l2306B7F0
l2306B7EE:
	a6_27 = 1<32>
l2306B7F0:
	word32 a0_41 = netconn_write_partly(Mem30[a0_22:word32], a6_27 | a3 >> 1<i32> & 4<32>, fp + -20<i32>, mstatus, dwArg28, dwArg68, dwArgA8, out s2, out s3, out s4, out s5, out s8)
	word32 a4_247
	word32 a5_248
	a0_103 = err_to_errno(a0_41, out a4_247, out a5_248)
	branch a0_103 == 0<32> l2306B812
l2306B80A:
	Mem69[0x420267A8<32>:word32] = a0_103
l2306B812:
	branch a0_41 != 0<32> l2306B7C0
l2306B814:
l2306B7DA:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg40 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg72 = <invalid>
	word32 stackArg104 = <invalid>
	word32 stackArg116 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 s0_244
	word32 s1_245
	word32 a2_246
	ra = lwip_sendto(ra, a1, a1, mstatus, stackArg40, stackArg56, stackArg72, stackArg104, stackArg116, stackArg120, stackArg136, stackArg168, stackArg184, stackArg200, stackArg232, out s0_244, out s1_245, out a0_103, out a2_246, out s2, out s3, out s4, out s5, out s8, out mstatus)
l2306B7C0:
	a0_103 = 0xFFFFFFFF<32>
l2306B7C2:
	s0Out = dwArgE4
	a0Out = a0_103
	a2Out = dwArg0100
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s8Out = s8
	mstatusOut = mstatus
	return ra
lwip_send_exit:


word32 lwip_socket(word32 ra, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg34, word32 dwArg58, word32 dwArg68, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, word32 dwArg0148, word32 dwArg0168, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
// MayUse:  a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0034:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0148:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 s2 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
lwip_socket_entry:
l2306B818:
	word32 s1_122
	word32 a4_118
	word32 a4_14
	word32 a0_15
	branch a1 == 2<32> l2306B864
l2306B864:
	a4_14 = 136<i32>
	a0_15 = 33<i32>
	branch a2 == 136<i32> l2306B874
l2306B870:
	a0_15 = 32<i32>
l2306B874:
l2306B828:
	a4_14 = 3<32>
	branch a1 == 3<32> l2306B842
l2306B842:
	a0_15 = 64<i32>
l2306B82E:
	branch a1 != 1<32> l2306B880
l2306B880:
	a4_118 = 0x16<32>
l2306B834:
	a0_15 = 0x10<32>
l2306B852:
	word32 a4_51
	word32 a0_70 = netconn_new_with_proto_and_callback(ra, a0_15, a3, a4_14, mstatus, dwArg34, dwArg68, dwArgA8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, dwArg0148, out a3, out a4_51, out s2, out s5)
	branch a0_70 != 0<32> l2306B898
l2306B898:
	word32 a0_73
	word32 a2_74
	word32 a4_76
	word32 s1_239
	word32 s3_240
	word32 s0_79 = alloc_socket(a0_70, 0<32>, a3, a4_51, mstatus, out s1_239, out a0_73, out a2_74, out a3, out a4_76, out s2, out s3_240, out s5)
	s1_122 = a0_73
	branch a0_73 != 0xFFFFFFFF<32> l2306B8B8
l2306B8B8:
	Mem90[a0_73 + 24<i32>:word32] = s0_79
l2306B8A6:
	word32 a4_241
	word32 a5_242
	word32 s3_243
	word32 s4_244
	s1_122 = netconn_delete(s0_79, a2_74, a4_76, mstatus, dwArg58, dwArg98, dwArgD8, dwArg0128, dwArg0168, out a3, out a4_241, out a5_242, out s2, out s3_243, out s4_244, out s5)
	Mem116[0x420267A8<32>:word32] = 0x17<32>
l2306B85A:
	a4_118 = 105<i32>
l2306B886:
	Mem121[0x420267A8<32>:word32] = a4_118
	s1_122 = 0xFFFFFFFF<32>
l2306B88C:
	a3Out = a3
	s2Out = s2
	s5Out = s5
	return s1_122
lwip_socket_exit:


word32 lwip_setsockopt(word32 a0, word32 a1, word32 a2, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg84, word32 dwArg98, word32 dwArgB8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      iperf_server
//      iperf_client_tcp
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31]
// LiveOut: s0 s1 s2 s4 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_setsockopt_entry:
l2306B8BC:
	word32 a4_19
	word32 a5_205
	word32 a0_18 = get_socket(a0, out a4_19, out a5_205)
	0<32> = dwArg84
	word32 s0_150 = a1
	branch a0_18 != 0<32> l2306B8DE
l2306B8DE:
	branch a3 != 0<32> l2306B8EC
l2306B8EC:
	word32 a0_62
	word32 a0_37
	word32 a3_39
	word32 a4_40
	s0_150 = tcpip_callback(0x2306ACD4<32>, fp + -44<i32>, a3, a4_19, mstatus, dwArg98, dwArgD8, dwArg0118, out s1, out a0_37, out a3_39, out a4_40, out s2, out s4, out s6)
	branch a0_37 == 0<32> l2306B91C
l2306B91C:
	word32 a3_207
	word32 a1_206
	word32 a4_208
	word32 a5_209
	word32 s3_210
	sys_arch_sem_wait(0<32>, a3_39, a4_40, s2, mstatus, a2, dwArg04, a1, dwArgB8, dwArgF8, out s1, out a0_62, out a1_206, out a3_207, out a4_208, out a5_209, out s2, out s3_210, out s4)
	s0_150 = dwArg0114
	branch a0_62 != 0<32> l2306B912
l2306B90C:
	word32 a4_211
	word32 a5_212
	a0_62 = err_to_errno(a0_37, out a4_211, out a5_212)
	branch a0_62 == 0<32> l2306B8DA
l2306B912:
	Mem83[0x420267A8<32>:word32] = a0_62
l2306B8E0:
	Mem86[0x420267A8<32>:word32] = 0xE<32>
l2306B8DA:
l2306B928:
	s1Out = s1
	s2Out = s2
	s4Out = s4
	s6Out = s6
	s8Out = dwArgD4
	return s0_150
lwip_setsockopt_exit:


void tcpip_thread(word32 ra, word32 s0, word32 s1, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 s5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s5:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_thread_entry:
l2306B930:
	word32 a5_106 = Mem0[0x4200F5CC<32>:int32]
	word32 sp_164 = fp + -48<i32>
	branch a5_106 == 0<32> l2306B954
l2306B94A:
	call a5_106 (retsize: 0;)
		uses: a0:Mem20[0x4200F5D0<32>:int32],a1:a1_35,a3:a3,a4:0x4200F000<32>,mstatus:mstatus,ra:ra,s0:s0,s1:s1,s2:s2,s3:s3,s4:s4,s5:s5
		defs: a1:a1_35,a4:a4_32,a5:a5_24,ra:ra_25,s0:s0_26,sp:sp_23
l2306B954:
	word32 s2_111 = 0xFFFFFFFF<32>
	word32 s3_112 = 0x4200F000<32>
	word32 s1_110 = 0x230C35B4<32>
l2306B964:
	word32 s4_113
	word32 a0_42 = sys_timeouts_sleeptime(a5_106)
	branch a0_42 != s2_111 l2306B98E
l2306B98E:
	branch a0_42 != 0<32> l2306B996
l2306B996:
	word32 a0_55
	s0 = sys_arch_mbox_fetch(s3_112 + 1492<i32>, sp_164 + 12<i32>, a0_42, a3, a4, mstatus, Mem20[sp_164 + 100<i32>:word32], Mem20[sp_164 + 216<i32>:word32], Mem20[sp_164 + 280<i32>:word32], out s1_110, out a0_55, out a1, out a3, out a4, out a5_106, out s2_111, out s3_112, out s4_113)
	branch a0_55 == s2_111 l2306B990
l2306B9A4:
l2306B990:
	s0 = sys_check_timeouts(ra, s0, s1_110, a1, mstatus, out a1, out a3, out a4, out a5_106, out s2_111, out s3_112)
l2306B96E:
	word32 a0_203
	s0 = sys_arch_mbox_fetch(s3_112 + 1492<i32>, sp_164 + 12<i32>, 0<32>, a3, a4, mstatus, Mem20[sp_164 + 100<i32>:word32], Mem20[sp_164 + 216<i32>:word32], Mem20[sp_164 + 280<i32>:word32], out s1_110, out a0_203, out a1, out a3, out a4, out a5_106, out s2_111, out s3_112, out s4_113)
l2306B97A:
	branch s0 == 0<32> l2306B964
l2306B97E:
	a5_106 = CONVERT(Mem20[s0:byte], byte, word32)
	branch a5_106 >u 4<32> l2306B964
l2306B986:
	word32 a5_132 = Mem20[(a5_106 << 2<i32>) + s1_110:word32]
	word32 a4_146
	word32 a1_149
	word32 mstatus_150
	word32 a3_151
	call a5_132 (retsize: 0;)
		uses: a1:a1_149,a3:a3_151,a4:a4_146,a5:a5_132,mstatus:mstatus_150,ra:ra_177,s0:s0_125,s1:s1_130,s2:s2_134,s3:s3_135,s4:s4_136,s5:4<32>
		defs: a1:a1_149,a3:a3_151,a4:a4_146,mstatus:mstatus_150
	return
tcpip_thread_exit:


void tcpip_inpkt(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_inpkt_entry:
l2306B9EA:
	sys_mbox_valid(0x4200F5D4<32>)
	word32 a0_25
	word32 a3_28
	word32 a4_29
	word32 a2_212
	word32 a5_213
	word32 s1_30 = memp_malloc(0x4200F000<32>, 9<32>, a3, a4, mstatus, out a0_25, out a2_212, out a3_28, out a4_29, out a5_213)
	branch a0_25 != 0<32> l2306BA2C
l2306BA2C:
	Mem35[a1 + 8<i32>:word32] = a0_25
	Mem37[a0_25:byte] = 2<8>
	Mem38[a0_25 + 4<i32>:word32] = a0
	Mem39[dwArg44 + 12<i32>:word32] = a0_25
	word32 a0_42
	word32 a3_45
	word32 s1_233
	word32 a1_234
	word32 a4_235
	word32 a5_236
	word32 a7_237
	word32 s2_238
	word32 s3_239
	word32 s4_240
	word32 s5_241
	word32 s6_242
	word32 s0_50 = sys_mbox_trypost(s1_30 + 1492<i32>, a4_29, 2<32>, mstatus, a2, a1, dwArgD8, dwArg0118, dwArg0158, out s1_233, out a0_42, out a1_234, out a3_45, out a4_235, out a5_236, out a7_237, out s2_238, out s3_239, out s4_240, out s5_241, out s6_242)
	branch a0_42 == 0<32> l2306BA20
l2306BA48:
	word32 a3_72
	word32 a4_73
	word32 s1_243
	word32 a0_244
	word32 a1_245
	word32 a2_246
	word32 a5_247
	word32 a7_248
	word32 s2_249
	word32 s3_250
	word32 s4_251
	word32 s5_252
	word32 s6_253
	word32 s7_254
	word32 s8_255
	word32 s9_256
	word32 s10_257
	word32 s11_258
	word32 t4_259
	printf(ra, 0x230C35E4<32>, a3_45, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_243, out a0_244, out a1_245, out a2_246, out a3_72, out a4_73, out a5_247, out a7_248, out s2_249, out s3_250, out s4_251, out s5_252, out s6_253, out s7_254, out s8_255, out s9_256, out s10_257, out s11_258, out t4_259)
	word32 a0_260
	word32 a2_261
	word32 a3_262
	word32 a4_263
	word32 a5_264
	memp_free(9<32>, s0_50, a3_72, a4_73, mstatus, out a0_260, out a2_261, out a3_262, out a4_263, out a5_264)
l2306BA12:
	word32 s1_214
	word32 a0_215
	word32 a1_216
	word32 a2_217
	word32 a3_218
	word32 a4_219
	word32 a5_220
	word32 a7_221
	word32 s2_222
	word32 s3_223
	word32 s4_224
	word32 s5_225
	word32 s6_226
	word32 s7_227
	word32 s8_228
	word32 s9_229
	word32 s10_230
	word32 s11_231
	word32 t4_232
	printf(ra, 0x230C35D0<32>, a3_28, s2, dwArg08, dwArg50, dwArg54, dwArg78, dwArg9C, out s1_214, out a0_215, out a1_216, out a2_217, out a3_218, out a4_219, out a5_220, out a7_221, out s2_222, out s3_223, out s4_224, out s5_225, out s6_226, out s7_227, out s8_228, out s9_229, out s10_230, out s11_231, out t4_232)
l2306BA1E:
l2306BA20:
	return
tcpip_inpkt_exit:


void tcpip_input(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg08, word32 dwArg44, word32 dwArg50, word32 dwArg54, word32 dwArg78, word32 dwArg9C, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0008:[0..31] Stack +0044:[0..31] Stack +0050:[0..31] Stack +0054:[0..31] Stack +0078:[0..31] Stack +009C:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_input_entry:
l2306BA5E:
	word32 a2_10
	branch (CONVERT(Mem0[a1 + 65<i32>:byte], byte, word32) & 0x18<32>) == 0<32> l2306BA72
l2306BA72:
	a2_10 = 0x2306EDA0<32>
l2306BA66:
	a2_10 = 0x2307528A<32>
l2306BA6E:
l2306BA6E_thunk_tcpip_inpkt:
	tcpip_inpkt(ra, a0, a1, a2_10, a3, a4, s2, mstatus, dwArg08, dwArg44, dwArg50, dwArg54, dwArg78, dwArg9C, dwArgD8, dwArg0118, dwArg0158)
	return
tcpip_input_exit:


word32 tcpip_callback(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt
//      cmd_sntp_start
//      bl_cipsend
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s4 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_callback_entry:
l2306BA7C:
	word32 a0_28
	sys_mbox_valid(0x4200F5D4<32>)
	word32 s0_44 = 0x4200F000<32>
	word32 a0_21
	word32 a2_118
	word32 a5_119
	word32 a3_24
	word32 a4_25
	word32 s1_26 = memp_malloc(a0, 8<32>, a3, a4, mstatus, out a0_21, out a2_118, out a3_24, out a4_25, out a5_119)
	branch a0_21 == 0<32> l2306BABE
l2306BABE:
	a0_28 = 0xFFFFFFFF<32>
l2306BA9C:
	Mem31[a0_21:byte] = 3<8>
	Mem32[a1 + 8<i32>:word32] = a0_21
	Mem33[s1_26 + 4<i32>:word32] = a0_21
	word32 s5_120
	s0_44 = sys_mbox_post(0x4200F5D4<32>, a4_25, 3<32>, mstatus, dwLoc1C, a1, dwArgD8, dwArg0118, dwArg0158, out s1_26, out a3_24, out a4_25, out s2, out s5_120, out s6)
	a0_28 = 0<32>
l2306BAB4:
	s1Out = s1_26
	a0Out = a0_28
	a3Out = a3_24
	a4Out = a4_25
	s2Out = s2
	s4Out = dwArg04
	s6Out = s6
	return s0_44
tcpip_callback_exit:


word32 tcpip_try_callback(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, word32 dwArgD8, word32 dwArg0118, word32 dwArg0158, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_alloc
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] Stack +00D8:[0..31] Stack +0118:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_try_callback_entry:
l2306BAC2:
	word32 a0_101
	sys_mbox_valid(0x4200F5D4<32>)
	word32 s2_10 = a0
	word32 a0_23
	word32 a2_159
	word32 a3_106
	word32 a4_108
	word32 a5_110
	word32 s1_117 = memp_malloc(0x4200F000<32>, 8<32>, a3, a4, mstatus, out a0_23, out a2_159, out a3_106, out a4_108, out a5_110)
	branch a0_23 == 0<32> l2306BB08
l2306BAE4:
	Mem33[a1 + 8<i32>:word32] = a0_23
	Mem34[a0_23:byte] = 3<8>
	Mem35[a0_23 + 4<i32>:word32] = a0
	word32 s4_160
	s0 = sys_mbox_trypost(s1_117 + 1492<i32>, a4_108, 3<32>, mstatus, dwLoc1C, a1, dwArgD8, dwArg0118, dwArg0158, out s1_117, out a0_101, out a1, out a3_106, out a4_108, out a5_110, out a7, out s2_10, out s3, out s4_160, out s5, out s6)
	branch a0_101 == 0<32> l2306BB0A
l2306BB00:
	a1 = s0
	word32 a0_161
	word32 a2_162
	s1_117 = memp_free(8<32>, s0, a3_106, a4_108, mstatus, out a0_161, out a2_162, out a3_106, out a4_108, out a5_110)
l2306BB08:
	a0_101 = 0xFFFFFFFF<32>
l2306BB0A:
	s1Out = s1_117
	a0Out = a0_101
	a1Out = a1
	a3Out = a3_106
	a4Out = a4_108
	a5Out = a5_110
	a7Out = a7
	s2Out = s2_10
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	return s0
tcpip_try_callback_exit:


word32 tcpip_send_msg_wait_sem(word32 a1, word32 a2, word32 a4, word32 a5, word32 mstatus, word32 dwArg14, word32 dwArgC8, word32 dwArg0108, word32 dwArg0148, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netconn_apimsg
//      netconn_gethostbyname
// MayUse:  a1:[0..31] a2:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] Stack +0014:[0..31] Stack +00C8:[0..31] Stack +0108:[0..31] Stack +0148:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_send_msg_wait_sem_entry:
l2306BB16:
	sys_sem_valid(a2)
	sys_mbox_valid(0x4200F5D4<32>)
	word32 a3_33
	word32 a4_34
	word32 s2_40
	word32 s5_43
	word32 s6_44
	word32 s1_102
	sys_mbox_post(0x4200F5D4<32>, a4, a5, mstatus, a2, a1, dwArgC8, dwArg0108, dwArg0148, out s1_102, out a3_33, out a4_34, out s2_40, out s5_43, out s6_44)
	word32 a3_59
	word32 a4_60
	word32 a5_61
	word32 s1_64
	word32 s2_65
	word32 s3_66
	word32 s4_67
	word32 a0_103
	word32 a1_104
	sys_arch_sem_wait(0<32>, a3_33, a4_34, s2_40, mstatus, a2, dwArg14, a1, dwArgC8, dwArg0108, out s1_64, out a0_103, out a1_104, out a3_59, out a4_60, out a5_61, out s2_65, out s3_66, out s4_67)
	s1Out = s1_64
	a0Out = 0<32>
	a3Out = a3_59
	a4Out = a4_60
	a5Out = a5_61
	s2Out = s2_65
	s3Out = s3_66
	s4Out = s4_67
	s5Out = s5_43
	s6Out = s6_44
	return dwArgE4
tcpip_send_msg_wait_sem_exit:


word32 tcpip_api_call(word32 ra, word32 s0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0148, word32 dwArg0158, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netifapi_netif_add
//      netifapi_netif_set_addr
//      netifapi_netif_common
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0158:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 a5 s0 s1 s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_api_call_entry:
l2306BB60:
	word32 a0_25
	word32 a2_170
	word32 a5_141
	word32 a4_140
	word32 a3_139
	word32 s2_146
	word32 s3_147
	word32 s1_145 = sys_sem_new(ra, a3, a4, a5, mstatus, s2, s0, ra, dwArgD8, dwArg0118, dwArg0158, out a0_25, out a2_170, out a3_139, out a4_140, out a5_141, out s2_146, out s3_147)
	branch a0_25 != 0<32> l2306BBB2
l2306BB7E:
	sys_mbox_valid(0x4200F5D4<32>)
	word32 a3_52
	word32 a4_53
	word32 s2_59
	word32 s1_171
	word32 s5_172
	word32 s6_173
	sys_mbox_post(0x4200F5D4<32>, a4_140, 1<32>, mstatus, a1, s1_145, dwArgC8, dwArg0108, dwArg0148, out s1_171, out a3_52, out a4_53, out s2_59, out s5_172, out s6_173)
	word32 a3_77
	word32 s1_82
	word32 a0_174
	word32 a1_175
	word32 a4_176
	word32 a5_177
	word32 s4_178
	sys_arch_sem_wait(0<32>, a3_52, a4_53, s2_59, mstatus, a1, dwArg14, s1_145, dwArgC8, dwArg0108, out s1_82, out a0_174, out a1_175, out a3_77, out a4_176, out a5_177, out s2_146, out s3_147, out s4_178)
	word32 s4_179
	sys_sem_free(s1_82, a3_77, mstatus, dwArg0128, dwArg0168, out s1_145, out a3_139, out a4_140, out a5_141, out s4_179)
l2306BBB2:
	0<32> = dwArg0128
	s1Out = s1_145
	a3Out = a3_139
	a4Out = a4_140
	a5Out = a5_141
	s2Out = s2_146
	s3Out = s3_147
	return dwArgE4
tcpip_api_call_exit:


word32 tcpip_init(word32 ra, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg40, word32 dwArg68, word32 dwArg8C, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bfl_main
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0040:[0..31] Stack +0068:[0..31] Stack +008C:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31]
// LiveOut: a6 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
tcpip_init_entry:
l2306BBC0:
	word32 a0_11
	word32 a1_12
	word32 a3_14
	word32 a4_15
	word32 ra_19 = lwip_init(ra, mstatus, dwLoc08, dwArg14, dwArg18, dwArg40, dwArg68, dwArg8C, dwArgC8, dwArg0108, dwArg0148, out a0_11, out a1_12, out a3_14, out a4_15)
	Mem42[0x4200F5CC<32>:word32] = a0_11
	Mem45[0x4200F5D0<32>:word32] = a1_12
	word32 s3_57
	word32 a0_115
	word32 a2_116
	word32 a3_117
	word32 a4_118
	word32 a5_119
	word32 s2_120
	word32 s4_121
	word32 s1_55 = sys_mbox_new(ra_19, a3_14, a4_15, 0x4200F000<32>, mstatus, dwLoc10, dwLoc0C, dwArgE8, dwArg0128, out a0_115, out a2_116, out a3_117, out a4_118, out a5_119, out s2_120, out s3_57, out s4_121)
l2306BC0E_thunk_sys_thread_new:
	word32 a6_78
	word32 ra_80 = sys_thread_new(ra_19, s1_55, 0<32>, 0xFFFFA0<32>, 0x1E<32>, s3_57, mstatus, dwArgD8, dwArgE8, dwArg0108, dwArg0128, dwArg0148, out a6_78)
	a6Out = a6_78
	return ra_80
tcpip_init_exit:


word32 lwip_htons(word32 a0, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ota_tcp_cmd
//      get_dns_request
//      lwip_sock_make_addr.isra.3
//      lwip_accept
//      lwip_bind
//      lwip_connect
//      lwip_sendto
//      dns_check_entry
//      dns_recv
//      ip_chksum_pseudo
//      ip_chksum_pseudo_partial
//      etharp_request
//      ip4_input
//      ip4_output_if_opt
//      tcp_oos_insert_segment
//      tcp_free_acked_segments.isra.3
//      tcp_receive
//      tcp_input
//      tcp_create_segment
//      tcp_output_alloc_header_common.constprop.6
//      tcp_split_unsent_seg
//      tcp_send_fin
//      tcp_rexmit_rto_prepare
//      tcp_output
//      tcp_zero_window_probe
//      udp_input
//      udp_sendto
//      ethernet_output
//      iperf_client_udp
//      iperf_server
//      iperf_client_tcp
//      altcp_tcp_write
// MayUse:  a0:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a5
// Preserved: sp
lwip_htons_entry:
l2306BC12:
	a5Out = a0 << 8<u32>
	return CONVERT(SLICE(a0 >>u 8<i32> | a0 << 8<u32>, word16, 0), word16, word32)
lwip_htons_exit:


word32 lwip_htonl(word32 a0, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_recv
//      dhcp_create_msg
//      dhcp_select
//      dhcp_handle_ack.isra.3
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_stop
//      ip4addr_aton
//      tcp_free_acked_segments.isra.3
//      tcp_receive
//      tcp_input
//      tcp_create_segment
//      tcp_output_alloc_header_common.constprop.6
//      tcp_split_unsent_seg
//      tcp_rexmit_rto_prepare
//      tcp_rexmit
//      tcp_rst
//      tcp_output
//      tcp_keepalive
//      tcp_zero_window_probe
//      dhcp_server_recv
//      iperf_client_udp
//      sntp_recv
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5
// Preserved: sp
lwip_htonl_entry:
l2306BC20:
	a3Out = 0xFF0000<32>
	a4Out = 0xFFFFF00<32>
	word32 a5_10 = a0 << 0x18<u32> | a0 >>u 0x18<u32> | a0 << 8<u32> & 0xFF0000<32>
	a5Out = a5_10
	return a0 >>u 8<i32> & 0xFFFFF00<32> | a5_10
lwip_htonl_exit:


word32 lwip_strnicmp(word32 a0, word32 a1, word32 a2, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_gethostbyname
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a5
// Trashed: a0 a2 a3 a4 a5 a6 a7 t1
// Preserved: sp
lwip_strnicmp_entry:
l2306BC44:
	word32 a5_24 = 0<32>
l2306BC4A:
	word32 a3_11 = CONVERT(Mem0[a0 + a5_24:byte], byte, word32)
	word32 a4_14 = CONVERT(Mem0[a1 + a5_24:byte], byte, word32)
	branch a3_11 == a4_14 l2306BC76
l2306BC5E:
	branch ((a3_11 | 32<i32>) + -97<i32> & 255<i32>) >u 0x19<32> l2306BC82
l2306BC6E:
	branch (a3_11 | 32<i32>) != (a4_14 | 32<i32>) l2306BC82
l2306BC82:
	a5Out = a5_24
	return 1<32>
l2306BC76:
	branch a2 + 0xFFFFFFFF<32> == a5_24 l2306BC7E
l2306BC7A:
	a5_24 = a5_24 + 1<32>
	branch a3_11 != 0<32> l2306BC4A
l2306BC7E:
	a5Out = a5_24
	return 0<32>
lwip_strnicmp_exit:


word32 dns_call_found(word32 ra, word32 a0, word32 a2, word32 a3, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_check_entry
//      dns_recv
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] ra:[0..31]
// LiveOut: a3 a4 a5 ra s1
// Trashed: a0 a2 a3 a4 a5 ra s1 tp
// Preserved: s0 sp
dns_call_found_entry:
l2306BC86:
	word32 s1_27 = a0 << 3<u32>
	word32 a4_15 = Mem13[a3:word32]
	word32 s0_16 = 0x4201AC58<32>
	branch a3 == 0<32> l2306BCBC
l2306BCA4:
	call a3 (retsize: 0;)
		uses: a0:a0 + 0x4201AD97<32>,a2:a2,a3:a3,a4:0x4201AC78<32>,a5:272<i32>,ra:ra,s0:0x4201AC58<32>,s1:a0 << 3<u32>
		defs: a3:a3_32,a4:a4_28,ra:ra_31,s0:s0_30,s1:s1_27
l2306BCBC:
	word32 a5_37 = s0_16 + s1_27
	Mem38[a5_37:word32] = 0<32>
	s1Out = s1_27
	a3Out = a3
	a4Out = a4_15
	a5Out = a5_37
	return ra
dns_call_found_exit:


word32 dns_send(word32 ra, word32 s1, word32 a0, word32 a2, word32 a3, word32 s4, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_check_entry
// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a2 a3 a4 a5 mstatus ra s1 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
dns_send_entry:
l2306BCCE:
	word32 a5_307
	word32 a4_306
	word32 a3_305
	word32 ra_323
	word32 s1_308
	branch Mem32[(CONVERT(Mem32[a0 + 0x4201AD93<32>:byte], byte, word32) << 2<i32>) + 0x4200F5E0<32>:word32] != 0<32> l2306BD38
l2306BD38:
	word32 a3_46
	word32 a4_47
	word32 a0_57
	word32 s2_68
	word32 s5_75
	word32 s6_76
	word32 s3_548
	word32 s4_549
	word32 s8_550
	word32 s1_544
	word32 a1_545
	word32 a7_547
	word32 a2_546
	word32 a1_540
	word32 a2_541
	word32 s0_543
	word32 a5_542
	ra_323 = pbuf_alloc(ra, a0 + 0x4201AD97<32>, s1, 182<i32>, CONVERT(SLICE(strlen(a0 + 0x4201AD97<32>, out a1_540, out a2_541, out a3_46, out a4_47, out a5_542) + 18<i32>, word16, 0), word16, word32), 640<i32>, a3_46, a4_47, mstatus, dwLoc3C, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_543, out s1_544, out a0_57, out a1_545, out a2_546, out a3_305, out a4_306, out a5_307, out a7_547, out s2_68, out s3_548, out s4_549, out s5_75, out s6_76, out s8_550, out mstatus)
	s1_308 = a0_57
	branch a0_57 == 0<32> l2306BD1A
l2306BD62:
	word32 a3_555
	word32 a5_557
	word32 a4_556
	word32 a0_552
	word32 a2_554
	word32 a1_553
	word32 t1_551
	word32 ra_93 = memset(ra_323, fp + -60<i32>, 0<32>, 0xC<32>, out t1_551, out a0_552, out a1_553, out a2_554, out a3_555, out a4_556, out a5_557)
	word32 a5_558
	lwip_htons(CONVERT(Mem32[s2_68 + 8<i32>:uint16], uint16, word32), out a5_558)
	word32 s8_116
	word32 s4_561
	word32 s3_560
	word32 s2_559
	word32 s1_114
	word32 a4_120
	word32 a3_119
	word32 s0_113 = pbuf_take(a0_57, fp + -60<i32>, 0xC<32>, out s1_114, out a3_119, out a4_120, out s2_559, out s3_560, out s4_561, out s8_116)
	word32 s2_130 = 0xC<32>
	word32 s8_132 = s8_116 + 0xFFFFFFFE<32>
l2306BDA0:
	word32 s0_134 = s0_113 + 1<32>
	s9 = s0_134
	word32 a2_136 = 0<32>
	s0_137 = s0_134
l2306BDA6:
	word32 s0_137
	word32 a5_139 = CONVERT(Mem108[s0_137:byte], byte, word32)
	branch a5_139 != 46<i32> l2306BDCA
l2306BDCA:
	branch a5_139 == 0<32> l2306BDAE
l2306BDCC:
	a2_136 = a2_136 + 1<32> & 255<i32>
	s0_137 = s0_137 + 1<32>
l2306BDAE:
	word32 s4_154 = s2_130 + a2_136
	word32 s7_155 = CONVERT(SLICE(s0_137 - s0_134, word16, 0), word16, word32)
	branch s8_132 >= s4_154 l2306BDD6
l2306BDD6:
	pbuf_put_at(s0_137, s1_114, s2_130, a2_136)
	word32 s4_203 = CONVERT(SLICE(s4_200, word16, 0), word16, word32)
	word32 s2_206 = s4_203 + 1<i32> << 16<i32>
	word32 s4_200
	word32 s2_573
	word32 s3_574
	s0_113 = pbuf_take_at(s1_114, s0_134, s7_155, CONVERT(SLICE(s2_130 + 1<i32>, word16, 0), word16, word32), dwArgE8, out s1_114, out a3_119, out a4_120, out s2_573, out s3_574, out s4_200, out s8_132)
	s2_130 = s2_206 >>u 0x10<u32>
	branch CONVERT(Mem108[s0_113:byte], byte, word32) != 0<32> l2306BDA0
l2306BE06:
	pbuf_put_at(s0_113, s1_114, s2_206 >>u 0x10<u32>, 0<32>)
	word32 s8_578
	word32 s2_577
	word32 a4_576
	word32 s3_231
	word32 s1_237
	word32 s4_246
	word32 a3_575
	pbuf_take_at(s1_114, fp + -64<i32>, 4<32>, CONVERT(SLICE(s4_203 + 2<32>, word16, 0), word16, word32), dwArgE8, out s1_237, out a3_575, out a4_576, out s2_577, out s3_231, out s4_246, out s8_578)
	word32 a2_580
	word32 s3_581
	word32 s0_579
	word32 s5_583
	word32 s4_582
	word32 a0_270
	word32 a3_273
	word32 a4_274
	word32 mstatus_278
	word32 s1_281
	word32 s0_584
	word32 a0_585
	word32 a1_586
	word32 a2_587
	word32 a7_588
	word32 s2_589
	word32 s3_590
	word32 s4_591
	word32 s5_592
	word32 s6_593
	word32 s8_594
	ra_323 = pbuf_free(udp_sendto(ra_93, Mem226[0x4200F5D8<32>:int32], s1_237, (CONVERT(Mem226[s3_231 + (s5_75 + 272<i32>) + 11<i32>:byte], byte, word32) << 2<i32>) + (s6_76 + 1504<i32>), 53<i32>, s4_246, mstatus, s4, dwLoc18, dwArg08, dwArg38, s9, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_579, out s1_281, out a0_270, out a2_580, out a3_273, out a4_274, out s3_581, out s4_582, out s5_583, out s9, out mstatus_278), s1_281, a3_273, a4_274, a0_270, mstatus_278, dwArgE8, out s0_584, out s1_308, out a0_585, out a1_586, out a2_587, out a3_305, out a4_306, out a5_307, out a7_588, out s2_589, out s3_590, out s4_591, out s5_592, out s6_593, out s8_594, out mstatus)
l2306BDC0:
	word32 s5_570
	word32 s8_572
	word32 s6_571
	word32 s2_567
	word32 s4_569
	word32 s3_568
	word32 a1_564
	word32 a7_566
	word32 a2_565
	word32 a0_563
	word32 s0_562
	ra_323 = pbuf_free(ra_93, s1_114, a3_119, a4_120, s4_154, mstatus, dwArgE8, out s0_562, out s1_308, out a0_563, out a1_564, out a2_565, out a3_305, out a4_306, out a5_307, out a7_566, out s2_567, out s3_568, out s4_569, out s5_570, out s6_571, out s8_572, out mstatus)
l2306BD0E:
	ra_323 = dns_call_found(ra, a0, a2, a3, out s1_308, out a3_305, out a4_306, out a5_307)
	Mem369[a0 + 0x4201AD92<32>:byte] = 0<8>
l2306BD1A:
	0<32> = dwArg0198
	s1Out = s1_308
	a2Out = dwArg0138
	a3Out = a3_305
	a4Out = a4_306
	a5Out = a5_307
	s4Out = dwLoc14
	s9Out = s9
	mstatusOut = mstatus
	return ra_323
dns_send_exit:


word32 dns_check_entry(word32 ra, word32 s1, word32 a0, word32 a2, word32 s4, word32 s9, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg38, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s9Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_recv
//      dns_tmr
//      dns_gethostbyname
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s9:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0038:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a2 a3 a4 a5 mstatus ra s1 s4 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dns_check_entry_entry:
l2306BE5A:
	word32 a3_147
	word32 a0_48
	word32 a3_15 = 2<32>
	word32 a5_17 = a0 + 0x4201AD88<32>
	word32 a4_18 = CONVERT(Mem14[a0 + 0x4201AD92<32>:byte], byte, word32)
	branch a4_18 == 2<32> l2306BEEA
l2306BEEA:
	a4_18 = CONVERT(Mem14[a0 + 0x4201AD94<32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem22[a0 + 0x4201AD94<32>:byte] = SLICE(a4_18, byte, 0)
	branch a4_18 != 0<32> l2306BF40
l2306BEFA:
	word32 a4_26 = CONVERT(Mem22[a0 + 0x4201AD95<32>:byte], byte, word32) + 1<32> & 255<i32>
	Mem27[a0 + 0x4201AD95<32>:byte] = SLICE(a4_26, byte, 0)
	a3_147 = 4<32>
	branch a4_26 != 4<32> l2306BF4A
l2306BF4A:
	Mem28[a0 + 0x4201AD94<32>:byte] = SLICE(a4_26, byte, 0)
l2306BF0E:
	branch CONVERT(Mem27[a0 + 0x4201AD93<32>:byte], byte, word32) != 0<32> l2306BF2A
l2306BF14:
	branch Mem27[0x4200F5E4<32>:int32] == 0<32> l2306BF2A
l2306BF2A:
	ra = dns_call_found(ra, a0, a2, 4<32>, out s1, out a3_15, out a4_18, out a5_17)
	a0_48 = s1 + 272<i32>
l2306BF1E:
	Mem50[a0 + 0x4201AD93<32>:byte] = 1<8>
	Mem51[a0 + 0x4201AD94<32>:word16] = 1<16>
l2306BE82:
	a3_15 = 3<32>
	branch a4_18 == 3<32> l2306BF50
l2306BF50:
	a5_17 = Mem14[a4_18:word32]
	branch a4_18 != 0<32> l2306BF5E
l2306BF5E:
	Mem55[a4_18 + 0xFFFFFFFF<32>:word32] = a5_17
	a4_18 = a4_18 + 0xFFFFFFFF<32>
	branch a4_18 == 0xFFFFFFFF<32> l2306BF54
l2306BF64:
l2306BF54:
	a5_17 = 272<i32>
	a0_48 = a0 + 272<i32>
l2306BF3A:
	Mem64[a0_48 + 0x4201AC82<32>:byte] = 0<8>
l2306BE88:
	a5_17 = 1<32>
	branch a4_18 != 1<32> l2306BF40
l2306BF40:
	s1Out = s1
	a2Out = dwArg10
	a3Out = a3_15
	a4Out = a4_18
	a5Out = a5_17
	s4Out = s4
	s9Out = s9
	mstatusOut = mstatus
	return ra
l2306BE8E:
	word32 a4_76 = CONVERT(Mem14[0x4200F5E8<32>:uint16], uint16, word32)
	a3_147 = 0x4200F5E8<32>
l2306BEA0:
	word32 a4_81 = a4_76 + 1<32>
	a4_76 = CONVERT(SLICE(a4_81, word16, 0), word16, word32)
	word32 a5_85 = 0x4201AC78<32>
l2306BEA8:
	branch CONVERT(Mem14[a5_85 + 10<i32>:byte], byte, word32) != 2<32> l2306BEB8
l2306BEB0:
	branch CONVERT(Mem14[a5_85 + 8<i32>:uint16], uint16, word32) == CONVERT(SLICE(a4_81, word16, 0), word16, word32) l2306BEA0
l2306BEB8:
	a5_85 = a5_85 + 272<i32>
	branch a5_85 != 0x4201B0B8<32> l2306BEA8
l2306BEC0:
	Mem105[0x4200F5E8<32>:word16] = SLICE(a4_76, word16, 0)
	Mem110[a0 + 0x4201AD92<32>:word16] = 2<16>
	Mem112[a0 + 0x4201AD90<32>:word16] = SLICE(a4_76, word16, 0)
	Mem113[a0 + 0x4201AD94<32>:word16] = 1<16>
l2306BEDE:
l2306BEE6_thunk_dns_send:
	word32 a2_150
	word32 a3_151
	word32 a4_152
	word32 a5_153
	word32 mstatus_156
	word32 s1_159
	word32 s4_162
	word32 s9_174
	word32 ra_157 = dns_send(ra, s1, a0, dwArg10, a3_147, s4, s9, mstatus, dwArg04, dwArg08, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, dwArg0198, out s1_159, out a2_150, out a3_151, out a4_152, out a5_153, out s4_162, out s9_174, out mstatus_156)
	s1Out = s1_159
	a2Out = a2_150
	a3Out = a3_151
	a4Out = a4_152
	a5Out = a5_153
	s4Out = s4_162
	s9Out = s9_174
	mstatusOut = mstatus_156
	return ra_157
dns_check_entry_exit:


void dns_recv(word32 ra, word32 a2, word32 a3, word32 s4, word32 s5, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg48, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArgA8, word32 dwArgB8, word32 dwArgE4, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s5:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E4:[0..31] Stack +0128:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s5 sp
dns_recv_entry:
	uint16 wLoc5E = SLICE(dwLoc60, uint16, 16)
	uint16 wLoc60 = SLICE(dwLoc60, uint16, 0)
l2306BF66:
	uint16 wLoc44_1032 = SLICE(s4, uint16, 0)
	uint16 wLoc4A_1024 = SLICE(s8, uint16, 16)
	uint16 wLoc4C_1039 = SLICE(s8, uint16, 0)
	word32 a4_111 = CONVERT(Mem29[a2 + 8<i32>:uint16], uint16, word32)
	word32 s1_207 = a2
	branch a4_111 <=u 0xF<32> l2306C29A
l2306BF8E:
	word32 a0_40
	word32 a2_1102
	word32 a1_1101
	word32 a5_1103
	word32 s8_1106
	word32 s2_1104
	word32 s3_1105
	pbuf_copy_partial(a2, fp + -88<i32>, 0xC<32>, 0<32>, out s1_207, out a0_40, out a1_1101, out a2_1102, out a3, out a4_111, out a5_1103, out s2_1104, out s3_1105, out s4, out s8_1106)
	word32 s0_119 = a0_40
	branch a0_40 != 0xC<32> l2306C29A
l2306BFA4:
	word32 s2_64 = 0<32>
	word32 a5_1107
	word32 a0_65 = lwip_htons(CONVERT(wLoc58, uint16, word32), out a5_1107)
	word32 a5_67 = 0x4201AC78<32>
	a3 = 2<32>
	a4_111 = 4<32>
l2306BFBE:
	word32 s6_75 = s2_64 & 255<i32>
	branch CONVERT(Mem29[a5_67 + 10<i32>:byte], byte, word32) != 2<32> l2306C2D0
l2306BFCA:
	branch CONVERT(Mem29[a5_67 + 8<i32>:uint16], uint16, word32) != a0_65 l2306C2D0
l2306C2D0:
	s2_64 = s2_64 + 1<32>
	a5_67 = a5_67 + 272<i32>
	branch s2_64 != 4<32> l2306BFBE
l2306C2DA:
l2306BFD2:
	word32 a5_1108
	word32 a0_88 = lwip_htons(CONVERT(wLoc54, uint16, word32), out a5_1108)
	s4 = a0_88
	word32 a5_1109
	word32 s5_290 = lwip_htons(CONVERT(wLoc52, uint16, word32), out a5_1109)
	branch CONVERT(bLoc56, int8, int32) >= 0<32> l2306C29A
l2306BFEE:
	branch a0_88 != 1<32> l2306C29A
l2306BFF4:
	s4 = s2_64 + 272<i32>
	a4_111 = Mem29[a3:int32]
	branch a4_111 != Mem29[(CONVERT(Mem29[s4 + 0x4201AC83<32>:byte], byte, word32) << 2<i32>) + 0x4200F5E0<32>:word32] l2306C29A
l2306C01E:
	word32 s7_115 = s4 + 0x4201AC87<32>
l2306C032:
	word32 a5_1111
	word32 a0_123 = pbuf_try_get_at(s1_207, s0_119, out a3, out a4_111, out a5_1111)
	branch a0_123 < 0<32> l2306C29A
l2306C03E:
	branch s0_119 == 0xFFFFFFF<32> l2306C29A
l2306C042:
	a4_111 = 192<i32>
	s0_119 = CONVERT(SLICE(s0_119 + 1<32>, word16, 0), word16, word32)
	branch (a0_123 & 192<i32>) == 192<i32> l2306C29A
l2306C054:
	word32 a5_136 = s7_115 + a0_123
l2306C058:
	branch s7_115 != a5_136 l2306C1EE
l2306C1EE:
	word32 a0_145 = pbuf_try_get_at(s1_207, s0_119, out a3, out a4_111, out a5_136)
	branch a0_145 < 0<32> l2306C29A
l2306C1FC:
	a4_111 = CONVERT(Mem144[s7_115:byte], byte, word32)
	branch (CONVERT(Mem144[a4_111 + 0x230CB5B1<32>:byte], byte, word32) & 3<32>) != 1<32> l2306C214
l2306C210:
	a4_111 = a4_111 + 32<i32>
l2306C214:
	word32 a3_164 = CONVERT(Mem144[(a0_145 & 255<i32>) + 0x230CB5B1<32>:byte], byte, word32)
	word32 a0_160 = a0_145 & 255<i32>
	a3 = a3_164 & 3<32>
	branch (a3_164 & 3<32>) != 1<32> l2306C22A
l2306C226:
	a0_160 = (a0_145 & 255<i32>) + 32<i32>
l2306C22A:
	branch a4_111 != a0_160 l2306C29A
l2306C22E:
	branch s0_119 == 0xFFFFFFF<32> l2306C29A
l2306C232:
	s0_119 = CONVERT(SLICE(s0_119 + 1<32>, word16, 0), word16, word32)
	s7_115 = s7_115 + 1<32>
l2306C05C:
	s7_115 = s7_115 + 1<32>
	word32 a5_1110
	word32 a0_185 = pbuf_try_get_at(s1_207, s0_119, out a3, out a4_111, out a5_1110)
	branch a0_185 < 0<32> l2306C29A
l2306C06A:
	branch a0_185 != 0<32> l2306C032
l2306C06C:
	branch s0_119 == 0xFFFFFFF<32> l2306C29A
l2306C076:
	word32 s7_195 = CONVERT(SLICE(s0_119 + 1<i32>, word16, 0), word16, word32)
	branch s7_195 == 0xFFFFFFF<32> l2306C29A
l2306C084:
	word32 a0_200
	word32 a2_201
	word32 s8_205
	word32 s2_208
	word32 s3_214
	word32 a1_1112
	word32 a5_1113
	word32 s0_203 = pbuf_copy_partial(s1_207, fp + -96<i32>, 4<32>, s7_195, out s1_207, out a0_200, out a1_1112, out a2_201, out a3, out a4_111, out a5_1113, out s2_208, out s3_214, out s4, out s8_205)
	branch a0_200 != 4<32> l2306C29A
l2306C096:
	word32 a5_224 = CONVERT(wLoc5E, uint16, word32)
	a4_111 = 256<i32>
	branch a5_224 != 256<i32> l2306C29A
l2306C0A2:
	a4_111 = CONVERT(wLoc60, uint16, word32)
	branch a4_111 != a5_224 l2306C29A
l2306C0AA:
	branch s7_195 >u 0xFFFFFFB<32> l2306C29A
l2306C0B0:
	branch (CONVERT(bLoc55, byte, word32) & 0xF<32>) != 0<32> l2306C23C
l2306C23C:
	word32 a5_232 = s2_208 + 272<i32> + s3_214
	a4_111 = CONVERT(Mem221[a5_232 + 11<i32>:byte], byte, word32)
	branch a4_111 == 0<32> l2306C286
l2306C286:
	a4_111 = Mem221[s8_205 + 4<i32>:int32]
	branch a4_111 == 0<32> l2306C24C
l2306C28C:
	Mem236[a5_232 + 12<i32>:word16] = 0x301<16>
	word32 a5_1162
	word32 s9_1163
	word32 a2_1161
	ra = dns_check_entry(ra, s1_207, s6_75, a2_201, s4, 0xFFFFFFB<32>, mstatus, dwLoc6C, dwLoc68, dwLoc60, dwLoc38, dwLoc08, dwArg08, dwArg18, dwArg28, s5, dwArg48, dwArg68, dwArg78, dwArgA8, dwArg0128, out s1_207, out a2_1161, out a3, out a4_111, out a5_1162, out s4, out s9_1163, out mstatus)
l2306C0BA:
	word32 s0_285 = CONVERT(SLICE(s0_203 + 5<32>, word16, 0), word16, word32)
	word32 s8_287 = 0xFFFFFFF<32>
l2306C0D2:
	branch s5_290 == 0<32> l2306C24C
l2306C0D6:
	a4_111 = CONVERT(Mem292[s1_207 + 8<i32>:uint16], uint16, word32)
	branch s0_285 >=u a4_111 l2306C24C
l2306C24C:
	word32 a2_311
	word32 a3_316
	word32 s2_320
	word32 s3_321
	word32 s6_326
	word32 s5_1122
	word32 s1_1125
	word32 a3_1126
	word32 a5_1128
	word32 a4_1127
	word32 mstatus_1124
	word32 s8_1123
	word32 s0_1114
	word32 a0_1116
	word32 a1_1117
	word32 a7_1120
	word32 s4_1121
	word32 a4_1118
	word32 a5_1119
	word32 s1_1115
	dns_call_found(pbuf_free(ra, s1_207, a3, a4_111, s4, mstatus, dwArgB8, out s0_1114, out s1_1115, out a0_1116, out a1_1117, out a2_311, out a3_316, out a4_1118, out a5_1119, out a7_1120, out s2_320, out s3_321, out s4_1121, out s5_1122, out s6_326, out s8_1123, out mstatus_1124), s6_326, a2_311, a3_316, out s1_1125, out a3_1126, out a4_1127, out a5_1128)
	Mem348[s3_321 + (s2_320 + 272<i32>) + 10<i32>:byte] = 0<8>
l2306C0DE:
	word32 a5_1129
	word32 a0_358 = pbuf_try_get_at(s1_207, s0_285, out a3, out a4_111, out a5_1129)
	branch a0_358 < 0<32> l2306C29A
l2306C0F6:
	branch a3 == 0<32> l2306C29A
l2306C0FC:
	branch (a0_358 & 192<i32>) == 192<i32> l2306C2A2
l2306C2A2:
	s0_285 = a3
l2306C104:
	word32 a0_369 = a0_358 + a3
	branch a0_369 >= CONVERT(Mem357[s1_207 + 8<i32>:uint16], uint16, word32) l2306C29A
l2306C10E:
	s0_285 = CONVERT(SLICE(a0_369, word16, 0), word16, word32)
	word32 a5_1130
	word32 a0_374 = pbuf_try_get_at(s1_207, s0_285, out a3, out a4_111, out a5_1130)
	branch a0_374 < 0<32> l2306C29A
l2306C120:
	branch a0_374 != 0<32> l2306C0DE
l2306C122:
	branch s0_285 == s8_287 l2306C29A
l2306C126:
	a4_111 = CONVERT(SLICE(s0_285 + 1<i32>, word16, 0), word16, word32)
	branch a4_111 == s8_287 l2306C29A
l2306C132:
	word32 a0_394
	word32 s3_1136
	word32 a1_1131
	word32 a5_1134
	word32 s2_1135
	word32 a2_1132
	word32 a3_1133
	word32 s0_397 = pbuf_copy_partial(s1_207, fp + -76<i32>, 0xA<32>, a4_111, out s1_207, out a0_394, out a1_1131, out a2_1132, out a3_1133, out a4_111, out a5_1134, out s2_1135, out s3_1136, out s4, out s8_287)
	a3 = 0xA<32>
	branch a0_394 != 0xA<32> l2306C29A
l2306C146:
	branch a4_111 >u 0xFFFFFF5<32> l2306C29A
l2306C14C:
	word32 s0_420 = s0_397 + 11<i32> << 0x10<u32>
	word32 a0_423 = CONVERT(wLoc44_1032, uint16, word32)
	branch CONVERT(wLoc4A_1024, uint16, word32) != 256<i32> l2306C2AC
l2306C162:
	branch CONVERT(wLoc4C_1039, uint16, word32) != 256<i32> l2306C2AC
l2306C16A:
	branch a0_423 != 1024<i32> l2306C2AC
l2306C2AC:
	word32 a5_1137
	branch lwip_htons(a0_423, out a5_1137) + (s0_420 >>u 16<i32>) >= 0x10000000<32> l2306C29A
l2306C2B6:
	word32 a5_1160
	s0_285 = CONVERT(SLICE(lwip_htons(CONVERT(wLoc44_1032, uint16, word32), out a5_1160) + (s0_420 >>u 16<i32>), word16, 0), word16, word32)
	s5_290 = CONVERT(SLICE(s5_290 + 0xFFFFFFFF<32>, word16, 0), word16, word32)
l2306C172:
	word32 a0_456
	word32 s2_464
	word32 a1_1138
	word32 a5_1140
	word32 a2_1139
	word32 s8_1142
	word32 s3_1141
	pbuf_copy_partial(s1_207, fp + -92<i32>, 4<32>, s0_420 >>u 16<i32>, out s1_207, out a0_456, out a1_1138, out a2_1139, out a3, out a4_111, out a5_1140, out s2_464, out s3_1141, out s4, out s8_1142)
	branch a0_456 != 4<32> l2306C29A
l2306C29A:
	word32 s8_1099
	word32 s4_1096
	word32 mstatus_1100
	word32 a0_1087
	word32 s0_1085
	word32 s6_1098
	word32 s1_1086
	word32 a1_1088
	word32 a2_1089
	word32 a5_1092
	word32 a3_1090
	word32 a4_1091
	word32 a7_1093
	word32 s2_1094
	word32 s3_1095
	word32 s5_1097
	pbuf_free(ra, s1_207, a3, a4_111, s4, mstatus, dwArgB8, out s0_1085, out s1_1086, out a0_1087, out a1_1088, out a2_1089, out a3_1090, out a4_1091, out a5_1092, out a7_1093, out s2_1094, out s3_1095, out s4_1096, out s5_1097, out s6_1098, out s8_1099, out mstatus_1100)
l2306C184:
	Mem550[s2_464 + 0x4201AD8C<32>:word32] = s2_464 + 272<i32>
	word32 a0_551
	word32 a2_552
	word32 s2_561
	word32 s3_562
	word32 s6_567
	word32 a5_1148
	word32 s5_1151
	word32 s8_1152
	word32 mstatus_1153
	word32 s4_1150
	word32 a7_1149
	word32 s0_1143
	word32 a3_1146
	word32 a4_1147
	word32 s1_1144
	word32 a1_1145
	word32 ra_575 = pbuf_free(ra, s1_207, a3, a4_111, dwArg74, mstatus, dwArgB8, out s0_1143, out s1_1144, out a0_551, out a1_1145, out a2_552, out a3_1146, out a4_1147, out a5_1148, out a7_1149, out s2_561, out s3_562, out s4_1150, out s5_1151, out s6_567, out s8_1152, out mstatus_1153)
	word32 a3_578
	word32 a4_1154
	word32 a5_1155
	word32 a0_577 = lwip_htonl(a0_551, out a3_578, out a4_1154, out a5_1155)
	Mem582[s3_562 + 10<i32>:byte] = 3<8>
	branch a0_577 >u 0x93A80<32> l2306C2A6
l2306C2A6:
	Mem585[s3_562:word32] = 0x93A80<32>
l2306C1BE:
	Mem586[s3_562:word32] = a0_577
l2306C1C2:
	word32 s1_1156
	word32 a3_1157
	word32 a4_1158
	word32 a5_1159
	dns_call_found(ra_575, s6_567, a2_552, a3_578, out s1_1156, out a3_1157, out a4_1158, out a5_1159)
	word32 s2_607 = s2_561 + 272<i32> + dwArgE4
	branch Mem608[s2_607:int32] != 0<32> l2306C268
l2306C1DE:
	branch CONVERT(Mem608[s2_607 + 10<i32>:byte], byte, word32) != 3<32> l2306C268
l2306C1E8:
	Mem612[s2_607 + 10<i32>:byte] = 0<8>
l2306C268:
	return
dns_recv_exit:


void dns_init(word32 ra, word32 s1, word32 a3, word32 a4, word32 a5, word32 mstatus)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31]
// LiveOut:
// Trashed: a2
// Preserved: a0 a1 a3 a4 a5 a6 ra s0 s1 sp t0 t1 t3 tp
dns_init_entry:
l2306C2DC:
	word32 s0_8 = Mem5[a5:word32]
	branch a5 != 0<32> l2306C31C
l2306C31C:
	return
l2306C2EE:
	word32 s1_72
	word32 a3_73
	word32 a4_74
	word32 a5_75
	udp_new_ip_type(ra, s1, a3, a4, mstatus, out s1_72, out a3_73, out a4_74, out a5_75)
	Mem32[46<i32>:word32] = s0_8
	word32 a3_76
	word32 a4_77
	word32 a5_78
	word32 a0_33 = udp_bind(46<i32>, 0x230CBADC<32>, 0<32>, out a3_76, out a4_77, out a5_78)
l2306C318_thunk_udp_recv:
	udp_recv(a0_33, 0x2306BF66<32>, 0<32>)
	return
dns_init_exit:


word32 dns_setserver(word32 a0, word32 a1, word32 a4, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      stateConnectedIPNoEnter
//      dhcp_handle_ack.isra.3
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a4 a5
// Preserved: sp
dns_setserver_entry:
l2306C324:
	word32 a5_23 = 1<32>
	branch a0 >u 1<32> l2306C33C
l2306C32A:
	a0 = a0 << 2<i32>
	a5_23 = (a0 << 2<i32>) + 0x4200F5E0<32>
	branch a1 == 0<32> l2306C33E
l2306C33E:
	a4 = Mem0[0x230CBADC<32>:int32]
l2306C338:
l2306C33A:
	Mem17[a4:word32] = a5_23
l2306C33C:
	a4Out = a4
	a5Out = a5_23
	return a0
dns_setserver_exit:


word32 dns_getserver(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_dns_get
//      netif_status_callback
// MayUse:  a0:[0..31]
// LiveOut: a5
// Trashed: a0 a5
// Preserved: sp
dns_getserver_entry:
l2306C348:
	branch a0 >u 1<32> l2306C35E
l2306C35E:
	return 1<32>
l2306C34E:
	return a0 << 2<u32>
dns_getserver_exit:


void dns_tmr(word32 ra, word32 s1, word32 a2, word32 s4, word32 s9, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg10, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0188, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] s9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0188:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dns_tmr_entry:
l2306C368:
	word32 a2_12
	word32 mstatus_21
	word32 s1_24
	word32 s4_28
	word32 s9_32
	word32 a2_40
	word32 mstatus_49
	word32 s1_52
	word32 s4_56
	word32 s9_60
	word32 mstatus_77
	word32 s1_80
	word32 s4_84
	word32 s9_88
	word32 a3_148
	word32 a4_149
	word32 a5_150
	word32 a3_151
	word32 a4_152
	word32 a5_153
	word32 a2_154
	word32 a3_155
	word32 a4_156
	word32 a5_157
	word32 ra_78 = dns_check_entry(dns_check_entry(dns_check_entry(ra, s1, 0<32>, a2, s4, s9, mstatus, dwLoc0C, dwLoc08, dwArg00, dwArg28, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_24, out a2_12, out a3_148, out a4_149, out a5_150, out s4_28, out s9_32, out mstatus_21), s1_24, 1<32>, a2_12, s4_28, s9_32, mstatus_21, dwLoc0C, dwLoc08, dwArg00, dwArg28, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_52, out a2_40, out a3_151, out a4_152, out a5_153, out s4_56, out s9_60, out mstatus_49), s1_52, 2<32>, a2_40, s4_56, s9_60, mstatus_49, dwLoc0C, dwLoc08, dwArg00, dwArg28, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_80, out a2_154, out a3_155, out a4_156, out a5_157, out s4_84, out s9_88, out mstatus_77)
l2306C384_thunk_dns_check_entry:
	word32 s1_158
	word32 a2_159
	word32 a3_160
	word32 a4_161
	word32 a5_162
	word32 s4_163
	word32 s9_164
	word32 mstatus_165
	dns_check_entry(ra_78, s1_80, 3<32>, dwArg10, s4_84, s9_88, mstatus_77, dwArg04, dwArg08, dwArg10, dwArg38, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, dwArg0198, out s1_158, out a2_159, out a3_160, out a4_161, out a5_162, out s4_163, out s9_164, out mstatus_165)
	return
dns_tmr_exit:


word32 dns_gethostbyname_addrtype(word32 ra, word32 a0, word32 a1, word32 a3, word32 s2, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg1C, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_gethostbyname
//      lwip_netconn_do_gethostbyname
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
dns_gethostbyname_addrtype_entry:
l2306C388:
	branch a1 != 0<32> l2306C3B0
l2306C3B0:
	word32 a4_101
	word32 s2_237 = a0
	branch a0 == 0<32> l2306C390
l2306C3CE:
	a5 = CONVERT(Mem28[a0:byte], byte, word32)
	branch a5 == 0<32> l2306C390
l2306C3D4:
	a5 = Mem28[0x4200F5D8<32>:int32]
	branch a5 == 0<32> l2306C390
l2306C3DE:
	word32 a4_574
	word32 a5_575
	word32 a1_572
	word32 a2_573
	word32 a0_39 = strlen(a0, out a1_572, out a2_573, out a3, out a4_574, out a5_575)
	a5 = 255<i32>
	s3 = a0_39
	branch a0_39 >u 255<i32> l2306C390
l2306C390:
	a4_101 = 0xFFFFFFF0<32>
l2306C3F2:
	word32 a0_50
	word32 s4_65
	word32 s8_577
	word32 a4_576
	ip4addr_aton(a0, a1, out a0_50, out a3, out a4_576, out a5, out s4_65, out s8_577)
	a4_101 = 0<32>
	branch a0_50 != 0<32> l2306C392
l2306C3FE:
	word32 s8_110 = 0x4201AC78<32>
	word32 s9_70 = 0x4201AC78<32>
	s1 = 0x110<32>
l2306C414:
	branch CONVERT(Mem28[s9_70 + 10<i32>:byte], byte, word32) != 3<32> l2306C442
l2306C41C:
	branch lwip_strnicmp(a0, s9_70 + 15<i32>, 256<i32>, out a5) != 0<32> l2306C442
l2306C442:
	s1 = s1 + 1<32>
	s9_70 = s9_70 + 272<i32>
	branch s1 != 0xFFFFFEF4<32> l2306C414
l2306C44C:
	a5 = Mem28[0x4200F5E0<32>:int32]
	a4_101 = 0xFFFFFFFA<32>
	branch a5 == 0<32> l2306C392
l2306C458:
	a3 = CONVERT(Mem28[0x4200F5DC<32>:byte], byte, word32)
	a5 = 0<32>
	s1 = 4<32>
	word32 a2_106 = 0<32>
l2306C46E:
	word32 s0_140
	word32 a4_112 = CONVERT(Mem28[s8_110 + 10<i32>:byte], byte, word32)
	word32 a1_114 = a5 & 255<i32>
	branch a4_112 != 0<32> l2306C4CC
l2306C4CC:
	branch a4_112 != 3<32> l2306C4E4
l2306C4D0:
	word32 a4_118 = a3 - CONVERT(Mem28[s8_110 + 14<i32>:byte], byte, word32)
	branch a2_106 >=u (a4_118 & 255<i32>) l2306C4E4
l2306C4E0:
	s1 = a1_114
	a2_106 = a4_118 & 255<i32>
l2306C4E4:
	a5 = a5 + 1<32>
	s8_110 = s8_110 + 272<i32>
	branch a5 != 4<32> l2306C46E
l2306C4EE:
	a4_101 = 0xFFFFFFFF<32>
	branch s1 == a5 l2306C392
l2306C4F4:
	word32 s0_133 = s1 + 272<i32>
	a5 = 3<32>
	a4_101 = 0xFFFFFFFF<32>
	s0_140 = s0_133 + 0x4201AC78<32>
	branch CONVERT(Mem28[s0_133 + 0x4201AC82<32>:byte], byte, word32) != 3<32> l2306C392
l2306C50A:
l2306C478:
	s1 = a1_114
	s0_140 = a5 + 0x4201AD88<32>
l2306C486:
	Mem149[s0_140 + 10<i32>:byte] = 1<8>
	Mem157[s0_140 + 14<i32>:byte] = SLICE(a3, byte, 0)
	word32 a4_152 = s1 << 3<u32>
	Mem163[a4_152 + 0x4201AC58<32>:word32] = s4_65
	Mem169[a4_152 + 0x4201AC5C<32>:word32] = a3
	word32 a1_578
	word32 a3_579
	word32 a4_580
	word32 a6_582
	word32 a2_186
	word32 a5_581
	word32 a7_583
	memcpy(s0_140 + 15<i32>, a0, a0_39, out a1_578, out a2_186, out a3_579, out a4_580, out a5_581, out a6_582, out a7_583)
	word32 a5_198 = CONVERT(Mem169[0x4200F5DC<32>:byte], byte, word32)
	Mem200[s0_140 + a0_39 + 15<i32>:byte] = 0<8>
	Mem203[0x4200F5DC<32>:byte] = SLICE(a5_198 + 1<32>, byte, 0)
	word32 a2_584
	word32 a4_585
	word32 s4_586
	word32 s9_587
	ra = dns_check_entry(ra, s1, s1, a2_186, s4_65, s9_70, mstatus, s8, s6, s2, dwArg08, dwArg38, dwArg48, s5, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, dwArg0168, out s1, out a2_584, out a3, out a4_585, out a5, out s4_586, out s9_587, out mstatus)
	a4_101 = 0xFFFFFFFB<32>
l2306C42C:
	Mem257[a1:word32] = a5
	s1 = s1 + 0<i32>
	a4_101 = 0<32>
l2306C392:
	0<32> = dwArg0128
	0<32> = dwArg1C
	s0Out = s4
	s1Out = s1
	a0Out = a4_101
	a3Out = a3
	a4Out = a4_101
	a5Out = a5
	s2Out = s2_237
	s3Out = s3
	s4Out = dwArg78
	mstatusOut = mstatus
	return ra
l2306C38A:
	s0Out = s0
	s1Out = s1
	a0Out = 0xFFFFFFF0<32>
	a3Out = a3
	a4Out = 0xFFFFFFF0<32>
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	mstatusOut = mstatus
	return ra
dns_gethostbyname_addrtype_exit:


word32 dns_gethostbyname(word32 ra, word32 a0, word32 a1, word32 a3, word32 s2, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg08, word32 dwArg1C, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sntp_request
//      httpc_get_file_dns
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0008:[0..31] Stack +001C:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a3 a4 mstatus ra s0 s1 s2 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
dns_gethostbyname_entry:
l2306C50C:
l2306C50E_thunk_dns_gethostbyname_addrtype:
	word32 a0_14
	word32 a4_16
	word32 s0_18
	word32 s2_19
	word32 s4_20
	word32 a3_26
	word32 s3_27
	word32 s1_37
	word32 mstatus_41
	word32 a5_64
	word32 ra_42 = dns_gethostbyname_addrtype(ra, a0, a1, a3, s2, s5, s6, s8, mstatus, dwArg08, dwArg1C, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, dwArg0128, dwArg0168, out s0_18, out s1_37, out a0_14, out a3_26, out a4_16, out a5_64, out s2_19, out s3_27, out s4_20, out mstatus_41)
	s0Out = s0_18
	s1Out = s1_37
	a0Out = a0_14
	a3Out = a3_26
	a4Out = a4_16
	s2Out = s2_19
	s3Out = s3_27
	s4Out = s4_20
	mstatusOut = mstatus_41
	return ra_42
dns_gethostbyname_exit:


word32 lwip_standard_chksum(word32 a0, word32 a1, word32 a4, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip_chksum_pseudo
//      ip_chksum_pseudo_partial
//      inet_chksum
//      inet_chksum_pbuf
//      lwip_chksum_copy
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
lwip_standard_chksum_entry:
l2306C512:
	word32 a0_10
	word16 wLoc02_106 = 0<16>
	a0_10 = a0
	branch (a0 & 1<i32>) == 0<32> l2306C52E
l2306C51E:
	a0_10 = a0
	branch a1 <= 0<32> l2306C52E
l2306C522:
	a1 = a1 + 0xFFFFFFFF<32>
	a0_10 = a0 + 1<32>
	wLoc02_106 = SEQ(SLICE(CONVERT(Mem4[a0:byte], byte, word32), byte, 0), 0<8>) (alias)
l2306C52E:
	byte bLoc01_118 = SLICE(wLoc02_106, byte, 8)
	word32 a5_101 = a0_10 & 3<i32>
	branch a5_101 == 0<32> l2306C544
l2306C534:
	a4 = 1<32>
	a5_101 = 0<32>
	branch a1 <= 1<32> l2306C544
l2306C53C:
	a5_101 = CONVERT(Mem17[a0_10:uint16], uint16, word32)
	a1 = a1 + 0xFFFFFFFE<32>
	a0_10 = a0_10 + 2<32>
l2306C544:
	word32 a2_124 = 7<32>
l2306C546:
	branch a1 > 7<32> l2306C598
l2306C598:
	word32 a0_26 = Mem17[a4:word32]
	a4 = a4 + a5_101
	branch a4 >=u a5_101 l2306C5A2
l2306C5A0:
	a4 = a4 + 1<32>
l2306C5A2:
	a0_10 = a0_26 + 8<32>
	a5_101 = Mem17[a0_26 + 4<32>:int32] + a4
	branch a5_101 >=u a4 l2306C5B0
l2306C5AE:
	a5_101 = a5_101 + 1<32>
l2306C5B0:
	a1 = a1 + 0xFFFFFFF8<32>
l2306C54A:
	word32 a5_43 = CONVERT(SLICE(a5_101, word16, 0), word16, word32) + (a5_101 >>u 0x10<u32>)
l2306C556:
	branch a1 > 1<32> l2306C5B4
l2306C5B4:
	a0_10 = a0_10 + 2<32>
	a2_124 = CONVERT(Mem17[a0_10 + -2<i32>:uint16], uint16, word32)
	a1 = a1 + 0xFFFFFFFE<32>
	a5_43 = a5_43 + a2_124
l2306C55A:
	branch a1 != 1<32> l2306C566
l2306C55E:
	wLoc02_106 = SEQ(bLoc01_118, SLICE(CONVERT(Mem17[a0_10:byte], byte, word32), byte, 0)) (alias)
l2306C566:
	word32 a0_68 = CONVERT(wLoc02_106, word16, word32) + a5_43
	word32 a5_71 = (a0_68 >>u 0x10<u32>) + (a0_68 & 0xFFFFFFF<32>)
	word32 a4_126 = 0xFFFFFFF<32>
	word32 a5_127 = a5_71 & 0xFFFFFFF<32>
	word32 a0_74 = (a5_71 >>u 0x10<u32>) + (a5_71 & 0xFFFFFFF<32>)
	branch (a0 & 1<i32>) == 0<32> l2306C590
l2306C582:
	a4_126 = a0_74 << 8<u32> & 0xFFFFFFF<32>
	a5_127 = a0_74 << 8<u32>
	a0_74 = a0_74 >>u 8<i32> & 255<i32> | a4_126
l2306C590:
	a2Out = a2_124
	a3Out = a0 & 1<i32>
	a4Out = a4_126
	a5Out = a5_127
	return CONVERT(SLICE(a0_74, word16, 0), word16, word32)
lwip_standard_chksum_exit:


word32 inet_chksum_pseudo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip_chksum_pseudo
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a2 a3 a4 a6 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
inet_chksum_pseudo_entry:
l2306C5C0:
	word32 a4_19 = Mem17[a4:word32]
	word32 a3_21 = Mem17[a3:word32]
	word32 a3_30 = (a3_21 >>u 16<i32>) + (((a4_19 & 0xFFFFFFF<32>) + (a4_19 >>u 16<i32>)) + (a3_21 & 0xFFFFFFF<32>))
	word32 a3_33 = (a3_30 & 0xFFFFFFF<32>) + (a3_30 >>u 0x10<u32>)
	word32 a4_163 = a3_21 & 0xFFFFFFF<32>
	word32 a3_161 = a3_33 & 0xFFFFFFF<32>
	word32 s3_37 = a0
	word32 s0_121 = (a3_33 >>u 0x10<u32>) + (a3_33 & 0xFFFFFFF<32>)
	word32 s5_123 = 0<32>
l2306C604:
	branch s3_37 != 0<32> l2306C65E
l2306C65E:
	word32 a2_178
	word32 a5_179
	word32 s0_57 = s0_121 + lwip_standard_chksum(Mem17[s3_37 + 4<i32>:int32], CONVERT(Mem17[s3_37 + 10<i32>:uint16], uint16, word32), a4_163, out a2_178, out a3_161, out a4_163, out a5_179)
	s0_121 = (s0_57 & 0xFFFFFFF<32>) + (s0_57 >>u 0x10<u32>)
	branch (CONVERT(Mem17[s3_37 + 10<i32>:uint16], uint16, word32) & 1<32>) == 0<32> l2306C68E
l2306C67C:
	s5_123 = s5_123 ^ 1<i32>
	s0_121 = s0_121 >>u 8<i32> & 255<i32> | s0_121 << 8<u32> & 0xFFFFFFF<32>
l2306C68E:
	s3_37 = Mem17[s3_37:int32]
l2306C608:
	branch s5_123 == 0<32> l2306C61E
l2306C60C:
	a4_163 = 0xFFFFFFF<32>
	s0_121 = s0_121 >>u 8<i32> & 255<i32> | s0_121 << 8<u32> & 0xFFFFFFF<32>
l2306C61E:
	word32 a5_176
	word32 a0_85 = lwip_htons(a1, out a5_176)
	word32 a5_177
	word32 s0_97 = s0_121 + (lwip_htons(a2, out a5_177) + a0_85)
	s1Out = a0_85
	word32 s0_101 = (s0_97 & 0xFFFFFFF<32>) + (s0_97 >>u 0x10<u32>)
	a0Out = CONVERT(SLICE(~((s0_101 & 0xFFFFFFF<32>) + (s0_101 >>u 0x10<u32>)), word16, 0), word16, word32)
	a2Out = dwArg48
	a3Out = a3_161
	a4Out = a4_163
	a6Out = dwArg28
	s2Out = a2
	s3Out = s3_37
	s4Out = dwArg04
	s5Out = s5_123
	return s1
inet_chksum_pseudo_exit:


word32 ip_chksum_pseudo(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a6Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_input
//      tcp_output_control_segment
//      udp_input
//      udp_sendto
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31]
// LiveOut: a0 a2 a3 a4 a6 s0 s1 s2 s3 s4 s5
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s8 t3 tp
// Preserved: sp
ip_chksum_pseudo_entry:
l2306C694:
l2306C694_thunk_inet_chksum_pseudo:
	word32 a0_8
	word32 a2_10
	word32 a3_11
	word32 a4_12
	word32 a6_14
	word32 s1_16
	word32 s2_17
	word32 s3_18
	word32 s4_19
	word32 s5_20
	word32 s0_15 = inet_chksum_pseudo(a0, a1, a2, a3, a4, out s1_16, out a0_8, out a2_10, out a3_11, out a4_12, out a6_14, out s2_17, out s3_18, out s4_19, out s5_20)
	s1Out = s1_16
	a0Out = a0_8
	a2Out = a2_10
	a3Out = a3_11
	a4Out = a4_12
	a6Out = a6_14
	s2Out = s2_17
	s3Out = s3_18
	s4Out = s4_19
	s5Out = s5_20
	return s0_15
ip_chksum_pseudo_exit:


word32 inet_chksum_pseudo_partial(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip_chksum_pseudo_partial
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 s0 s1 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
inet_chksum_pseudo_partial_entry:
l2306C698:
	word32 a4_24 = Mem19[a4:word32]
	word32 a4_33 = (a4_24 >>u 16<i32>) + (((a2 & 0xFFFFFFF<32>) + (a2 >>u 16<i32>)) + (a4_24 & 0xFFFFFFF<32>))
	word32 a4_36 = (a4_33 & 0xFFFFFFF<32>) + (a4_33 >>u 0x10<u32>)
	word32 a4_100 = a4_36 & 0xFFFFFFF<32>
	word32 s4_40 = a0
	word32 s0_104 = (a4_36 >>u 0x10<u32>) + (a4_36 & 0xFFFFFFF<32>)
	word32 s6_154 = 0<32>
l2306C6DE:
	branch s4_40 != 0<32> l2306C728
l2306C728:
	branch a3 == 0<32> l2306C6E2
l2306C72A:
	word32 a5_49 = CONVERT(Mem48[s4_40 + 10<i32>:uint16], uint16, word32)
	word32 s3_50 = a5_49
	branch a3 >=u a5_49 l2306C736
l2306C734:
	s3_50 = a3
l2306C736:
	word32 s3_53 = s3_50 << 16<i32>
	word32 a3_68
	word32 a5_238
	word32 a2_237
	word32 s0_73 = s0_104 + lwip_standard_chksum(Mem48[s4_40 + 4<i32>:int32], s3_53 >>u 0x10<u32>, a4_100, out a2_237, out a3_68, out a4_100, out a5_238)
	s3 = a3_68 - (s3_53 >>u 0x10<u32>)
	s0_104 = (s0_73 & 0xFFFFFFF<32>) + (s0_73 >>u 0x10<u32>)
	a3 = CONVERT(SLICE(s3, word16, 0), word16, word32)
	branch (CONVERT(Mem62[s4_40 + 10<i32>:uint16], uint16, word32) & 1<32>) == 0<32> l2306C778
l2306C766:
	s6_154 = s6_154 ^ 1<i32>
	s0_104 = s0_104 >>u 8<i32> & 255<i32> | s0_104 << 8<u32> & 0xFFFFFFF<32>
l2306C778:
	s4_40 = Mem62[s4_40:int32]
l2306C6E2:
	branch s6_154 != 0<32> l2306C77E
l2306C77E:
	a4_100 = 0xFFFFFFF<32>
	s0_104 = s0_104 >>u 8<i32> & 255<i32> | s0_104 << 8<u32> & 0xFFFFFFF<32>
l2306C6E6:
	word32 a5_235
	word32 a0_111 = lwip_htons(a1, out a5_235)
	word32 a5_236
	word32 s0_125 = s0_104 + (lwip_htons(a2, out a5_236) + a0_111)
	0<32> = dwArg0128
	s1Out = a0_111
	word32 s0_129 = (s0_125 & 0xFFFFFFF<32>) + (s0_125 >>u 0x10<u32>)
	a0Out = CONVERT(SLICE(~((s0_129 & 0xFFFFFFF<32>) + (s0_129 >>u 0x10<u32>)), word16, 0), word16, word32)
	a4Out = a4_100
	s3Out = s3
	s4Out = dwArg78
	s5Out = a1
	s6Out = s6_154
	return dwArgE4
inet_chksum_pseudo_partial_exit:


word32 ip_chksum_pseudo_partial(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 dwArg0128, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcp_output
//      udp_sendto
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a4 s0 s1 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s5 s6 s8 t3 tp
// Preserved: sp
ip_chksum_pseudo_partial_entry:
l2306C792:
l2306C792_thunk_inet_chksum_pseudo_partial:
	word32 a0_9
	word32 a4_13
	word32 s1_17
	word32 s3_19
	word32 s4_20
	word32 s5_21
	word32 s6_22
	word32 s0_16 = inet_chksum_pseudo_partial(a0, a1, a2, a3, a4, dwArg0128, out s1_17, out a0_9, out a4_13, out s3_19, out s4_20, out s5_21, out s6_22)
	s1Out = s1_17
	a0Out = a0_9
	a4Out = a4_13
	s3Out = s3_19
	s4Out = s4_20
	s5Out = s5_21
	s6Out = s6_22
	return s0_16
ip_chksum_pseudo_partial_exit:


word32 inet_chksum(word32 a0, word32 a1, word32 a4, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_send
//      igmp_input
//      ip4_input
//      tcp_split_unsent_seg
//      icmp_input
//      icmp_dest_unreach
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
inet_chksum_entry:
l2306C796:
	word32 a3_12
	word32 a4_13
	word32 a5_14
	word32 a2_26
	word32 a0_18 = CONVERT(SLICE(~lwip_standard_chksum(a0, a1, a4, out a2_26, out a3_12, out a4_13, out a5_14), word16, 0), word16, word32)
	a2Out = dwArg10
	a3Out = a3_12
	a4Out = a4_13
	a5Out = a5_14
	return a0_18
inet_chksum_exit:


word32 inet_chksum_pbuf(word32 a0, word32 a4, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      icmp_input
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4 s0 s1 s2 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
inet_chksum_pbuf_entry:
l2306C7AC:
	word32 s1_16 = a0
	word32 s3_17 = 0<32>
	word32 s0_18 = 0<32>
l2306C7C2:
	branch s1_16 != 0<32> l2306C7F0
l2306C7F0:
	word32 s1_24 = Mem14[a0 + 4<i32>:word32]
	word32 a2_124
	word32 a5_125
	a0 = lwip_standard_chksum(a0, CONVERT(Mem14[s1_16 + 10<i32>:uint16], uint16, word32), a4, out a2_124, out a3, out a4, out a5_125)
	word32 s0_33 = s0_18 + a0
	s0_18 = (s0_33 & 0xFFFFFFF<32>) + (s0_33 >>u 0x10<u32>)
	branch (CONVERT(Mem14[s1_24 + 10<i32>:uint16], uint16, word32) & 1<32>) == 0<32> l2306C822
l2306C80E:
	s3_17 = s3_17 ^ 1<i32>
	s0_18 = s0_18 >>u 8<i32> & 255<i32> | s0_18 << 8<u32> & 0xFFFFFFF<32>
l2306C822:
	s1_16 = Mem14[s1_24:word32]
l2306C7C4:
	branch s3_17 == 0<32> l2306C7DA
l2306C7C8:
	a4 = 0xFFFFFFF<32>
	s0_18 = s0_18 >>u 8<i32> & 255<i32> | s0_18 << 8<u32> & 0xFFFFFFF<32>
l2306C7DA:
	s1Out = s1_16
	a0Out = CONVERT(SLICE(~s0_18, word16, 0), word16, word32)
	a3Out = a3
	a4Out = a4
	s2Out = 0xFFFFFFF<32>
	s4Out = dwArg04
	return s0_18
inet_chksum_pbuf_exit:


word32 lwip_chksum_copy(word32 a0, word32 a1, word32 a2, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_sendto
//      altcp_tcp_write
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a2 a4 s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
lwip_chksum_copy_entry:
l2306C826:
	word32 a4_15
	word32 a1_48
	word32 a2_49
	word32 a3_50
	word32 a5_51
	word32 a6_52
	word32 a7_53
	memcpy(a0, a1, a2, out a1_48, out a2_49, out a3_50, out a4_15, out a5_51, out a6_52, out a7_53)
l2306C842_thunk_lwip_standard_chksum:
	word32 a2_36
	word32 a4_38
	word32 a3_54
	word32 a5_55
	a0Out = lwip_standard_chksum(a0, a2, a4_15, out a2_36, out a3_54, out a4_38, out a5_55)
	a2Out = a2_36
	a4Out = a4_38
	return a2
lwip_chksum_copy_exit:


word32 lwip_init(word32 ra, word32 mstatus, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg60, word32 dwArg88, word32 dwArgAC, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_init
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0060:[0..31] Stack +0088:[0..31] Stack +00AC:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a3 a4 ra
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
lwip_init_entry:
l2306C846:
	stats_init()
	sys_init()
	mem_init(ra, mstatus, dwLoc10, dwLoc0C, ra, dwArgE8, dwArg0128, dwArg0168)
	word32 a2_31
	word32 a0_30 = memp_init(out a2_31)
	netif_init()
	word32 a2_45
	word32 a0_54
	word32 a3_57
	word32 s1_62
	word32 ra_61 = tcp_init(ra, udp_init(a0_30, a2_31, out a2_45), a2_45, dwLoc08, dwArg18, dwArg60, dwArg88, dwArgAC, out s1_62, out a0_54, out a3_57)
	word32 a5_78
	word32 a4_77 = igmp_init(out a5_78)
	dns_init(ra_61, s1_62, a3_57, a4_77, a5_78, mstatus)
l2306C872_thunk_sys_timeouts_init:
	word32 a1_83
	word32 a3_85
	word32 a4_86
	a0Out = sys_timeouts_init(a0_54, a3_57, a4_77, mstatus, dwArg34, dwArg38, out a1_83, out a3_85, out a4_86)
	a1Out = a1_83
	a3Out = a3_85
	a4Out = a4_86
	return ra_61
lwip_init_exit:


word32 dhcp_set_state(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_check
//      dhcp_bind
//      dhcp_select
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_start
//      dhcp_coarse_tmr
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a5
// Trashed: a5
// Preserved: sp
dhcp_set_state_entry:
l2306C876:
	word32 a5_5 = CONVERT(Mem0[a0 + 5<i32>:byte], byte, word32)
	branch a5_5 == a1 l2306C88A
l2306C87E:
	Mem7[a0 + 5<i32>:byte] = SLICE(a1, byte, 0)
	Mem8[a0 + 6<i32>:byte] = 0<8>
	Mem9[a0 + 8<i32>:word16] = 0<16>
l2306C88A:
	return a5_5
dhcp_set_state_exit:


word32 dhcp_option_short(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_renew
//      dhcp_coarse_tmr
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
dhcp_option_short_entry:
l2306C88C:
	Mem8[a1 + a0:byte] = SLICE(a2 >>u 8<u32>, byte, 0)
	Mem15[a1 + CONVERT(SLICE(a0 + 1<i32>, word16, 0), word16, word32):byte] = SLICE(a2, byte, 0)
	return CONVERT(SLICE(a0 + 2<32>, word16, 0), word16, word32)
dhcp_option_short_exit:


word32 dhcp_option_long(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a4 a5
// Preserved: sp
dhcp_option_long_entry:
l2306C8AE:
	Mem8[a1 + a0:byte] = SLICE(a2 >>u 0x18<u32>, byte, 0)
	Mem14[CONVERT(SLICE(a0 + 1<i32>, word16, 0), word16, word32) + a1:byte] = SLICE(a2 >>u 0x10<u32>, byte, 0)
	Mem20[CONVERT(SLICE(a0 + 2<i32>, word16, 0), word16, word32) + a1:byte] = SLICE(a2 >>u 8<u32>, byte, 0)
	Mem27[a1 + CONVERT(SLICE(a0 + 3<i32>, word16, 0), word16, word32):byte] = SLICE(a2, byte, 0)
	return CONVERT(SLICE(a0 + 4<32>, word16, 0), word16, word32)
dhcp_option_long_exit:


word32 dhcp_create_msg(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg24, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0024:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_create_msg_entry:
l2306C8F4:
	word32 s1_108
	word32 s5_184
	s1_108 = s1
	branch a0 != 0<32> l2306C920
l2306C920:
	s1_108 = s1
	branch a1 == 0<32> l2306C908
l2306C922:
	word32 a0_33
	word32 a2_34
	word32 s0_394
	word32 a1_395
	word32 s5_397
	word32 s8_398
	word32 a7_396
	word32 s4_179
	ra = pbuf_alloc(ra, s0, a0, 182<i32>, 308<i32>, 640<i32>, a3, a4, mstatus, s4, dwArg24, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0138, out s0_394, out s1_108, out a0_33, out a1_395, out a2_34, out a3, out a4, out a5, out a7_396, out s2, out s3, out s4_179, out s5_397, out s6, out s8_398, out mstatus)
	s5_184 = a0_33
	branch a0_33 == 0<32> l2306C908
l2306C93E:
	branch s2 != 3<32> l2306C94C
l2306C944:
	branch CONVERT(Mem19[s3 + 5<i32>:byte], byte, word32) != s2 l2306C966
l2306C94C:
	word32 a5_63 = CONVERT(Mem19[s3 + 6<i32>:byte], byte, word32)
	branch a5_63 != 0<32> l2306C960
l2306C95A:
	word32 a3_411
	word32 a2_410
	word32 a0_68
	word32 a1_409
	word32 s8_413
	word32 a4_412
	s1_108 = bl_rand(a0_33, a2_34, out a0_68, out a1_409, out a2_410, out a3_411, out a4_412, out a5_63, out s4_179, out s8_413)
	Mem79[a0_68:word32] = 0x4200F5F4<32>
l2306C960:
	Mem84[s3:word32] = a5_63
l2306C966:
	word32 s0_89 = Mem88[a0_33 + 4<i32>:int32]
	word32 a3_403
	word32 a4_404
	word32 a5_405
	word32 a2_402
	word32 a1_401
	word32 a0_400
	word32 t1_399
	ra = memset(ra, s0_89, 0<32>, 308<i32>, out t1_399, out a0_400, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405)
	Mem106[s0_89:byte] = 1<8>
	Mem107[s0_89 + 1<i32>:byte] = 1<8>
	Mem112[s0_89 + 2<i32>:byte] = SLICE(CONVERT(Mem107[s1_108 + 64<i32>:byte], byte, word32), byte, 0)
	word32 a5_408
	word32 a3_406
	word32 a4_407
	word32 a0_115 = lwip_htonl(Mem112[s3:int32], out a3_406, out a4_407, out a5_408)
	Mem120[s0_89 + 4<i32>:byte] = SLICE(a0_115, byte, 0)
	Mem121[s0_89 + 5<i32>:byte] = SLICE(a0_115 >>u 8<u32>, byte, 0)
	Mem124[s0_89 + 6<i32>:byte] = SLICE(a0_115 >>u 0x10<u32>, byte, 0)
	Mem125[s0_89 + 7<i32>:byte] = SLICE(a0_115 >>u 24<i32>, byte, 0)
	s6 = 1<32>
	word32 a5_126 = 4<32>
	branch s2 == 4<32> l2306C9D0
l2306C9B0:
	a5_126 = s2 + -7<i32> & 255<i32>
	branch a5_126 <=u 1<32> l2306C9D0
l2306C9BC:
	branch s2 != 3<32> l2306C9EC
l2306C9C2:
	a5_126 = CONVERT(Mem125[s3 + 5<i32>:byte], byte, word32) + 0xFFFFFFFC<32> & 255<i32>
	branch a5_126 >u 1<32> l2306C9EC
l2306C9D0:
	s1_108 = Mem125[a5_126 + 4<i32>:word32]
	Mem141[s0_89 + 12<i32>:byte] = SLICE(a5_126, byte, 0)
	Mem142[s0_89 + 13<i32>:byte] = SLICE(a5_126 >>u 8<u32>, byte, 0)
	Mem145[s0_89 + 14<i32>:byte] = SLICE(a5_126 >>u 0x10<u32>, byte, 0)
	Mem146[s0_89 + 15<i32>:byte] = SLICE(a5_126 >>u 24<i32>, byte, 0)
l2306C9EC:
	word32 a5_148 = s1_108 + 58<i32>
	word32 a4_150 = s0_89 + 28<i32>
	s1_108 = s1_108 + 64<i32>
l2306C9F8:
	a3 = CONVERT(Mem153[a5_148:byte], byte, word32)
	a4_150 = a4_150 + 1<32>
	Mem158[a4_150 + 4095<i32>:byte] = SLICE(a3, byte, 0)
	a5_148 = a5_148 + 1<32>
	branch a5_148 != s1_108 l2306C9F8
l2306CA08:
	Mem162[s0_89 + 236<i32>:byte] = 0x63<8>
	Mem164[s0_89 + 239<i32>:byte] = 0x63<8>
	Mem166[s0_89 + 237<i32>:byte] = 0x82<8>
	Mem167[s0_89 + 240<i32>:byte] = 0x35<8>
	Mem170[s0_89 + 241<i32>:byte] = 1<8>
	Mem171[s0_89 + 238<i32>:byte] = 0x53<8>
	Mem175[s0_89 + 242<i32>:byte] = SLICE(s2, byte, 0)
	Mem183[s4_179:word16] = 3<16>
	a4 = 83<i32>
	a5 = 3<32>
l2306C908:
	s5_184 = 0<32>
l2306C90A:
	0<32> = dwArgA8
	s0Out = s1
	s1Out = s1_108
	a0Out = s5_184
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5_184
	s6Out = s6
	mstatusOut = mstatus
	return ra
dhcp_create_msg_exit:


word32 dhcp_option_trailer(word32 ra, word32 s0, word32 a0, word32 a1, word32 a2, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg98, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0128, word32 dwArg0168, ptr32 & s1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0098:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: mstatus ra s1 s2 s3 s4 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_option_trailer_entry:
l2306CA3E:
	Mem10[a1 + a0:byte] = 0xFF<8>
	word32 a5_5 = a0 + 1<i32> << 16<i32>
	word32 a5_14 = a5_5 >>u 16<i32>
	word32 a1_11 = a1 + (a5_5 >>u 16<i32>)
l2306CA56:
	branch a5_14 <=u 67<i32> l2306CA68
l2306CA68:
	Mem18[a1_11:byte] = 0<8>
	a5_14 = CONVERT(SLICE(a5_14 + 1<32>, word16, 0), word16, word32)
	a1_11 = a1_11 + 1<32>
l2306CA5A:
	word32 a1_23 = CONVERT(SLICE(a5_14 + 240<i32>, word16, 0), word16, word32)
l2306CA64_thunk_pbuf_realloc:
	word32 a2_89
	word32 s1_46
	word32 mstatus_52
	word32 s2_54
	word32 s3_55
	word32 s4_56
	word32 s6_58
	word32 s8_59
	word32 a3_90
	word32 a4_91
	word32 a5_92
	word32 s5_93
	word32 ra_53 = pbuf_realloc(ra, s0, a2, a1_23, 0xFFFFFFFF<32>, 67<i32>, s2, s3, s4, mstatus, dwArg14, dwArg98, dwArgC8, dwArgE8, dwArg0108, dwArg0118, dwArg0128, dwArg0168, out s1_46, out a2_89, out a3_90, out a4_91, out a5_92, out s2_54, out s3_55, out s4_56, out s5_93, out s6_58, out s8_59, out mstatus_52)
	s1Out = s1_46
	s2Out = s2_54
	s3Out = s3_55
	s4Out = s4_56
	s6Out = s6_58
	s8Out = s8_59
	mstatusOut = mstatus_52
	return ra_53
dhcp_option_trailer_exit:


word32 dhcp_discover(word32 ra, word32 s0, word32 s1, word32 a4, word32 s4, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_start
//      dhcp_fine_tmr
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_discover_entry:
l2306CA76:
	word32 a0_14 = Mem13[s1 + 40<i32>:word32]
	Mem18[s1 + 28<i32>:word32] = 0<32>
	dhcp_set_state(s1, 6<32>)
	word32 s0_36
	word32 a0_51
	word32 a4_325
	word32 a5_326
	word32 s1_156
	word32 s4_161
	word32 s3_158
	word32 s2_157
	word32 mstatus_170
	word32 a3_153
	word32 s5_162
	word32 s6_163
	word32 ra_171 = dhcp_create_msg(ra, s0, a0_14, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_36, out s1_156, out a0_51, out a3_153, out a4_325, out a5_326, out s2_157, out s3_158, out s4_161, out s5_162, out s6_163, out mstatus_170)
	branch a0_51 == 0<32> l2306CB62
l2306CAA2:
	word32 a5_53 = CONVERT(wLoc22, uint16, word32)
	word32 a0_52 = Mem18[s0_36 + 4<i32>:word32]
	Mem62[s0_36 + 240<i32> + a5_53:byte] = 0x39<8>
	Mem65[CONVERT(SLICE(a5_53 + 1<32>, word16, 0), word16, word32) + (s0_36 + 240<i32>):byte] = 2<8>
	word32 a0_71 = dhcp_option_short(CONVERT(SLICE(a5_53 + 2<i32>, word16, 0), word16, word32), s0_36 + 240<i32>, CONVERT(Mem65[s3_158 + 56<i32>:uint16], uint16, word32))
	Mem77[s0_36 + 240<i32> + a0_71:byte] = 0x37<8>
	Mem83[CONVERT(SLICE(a0_71 + 1<i32>, word16, 0), word16, word32) + (s0_36 + 240<i32>):byte] = 4<8>
	uint16 wLoc22_222 = SLICE(a0_71 + 2<32>, word16, 0)
	word32 a5_104 = 0x230CBAD8<32>
l2306CB0C:
	word32 a4_92 = CONVERT(wLoc22_222, uint16, word32)
	Mem102[a4_92 + (s0_36 + 240<i32>):byte] = SLICE(CONVERT(Mem91[a5_104 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_98 = a4_92 + 1<i32> << 16<i32>
	wLoc22_222 = SLICE(a0_98 >>u 16<i32>, word16, 0)
	a5_104 = a5_104 + 1<32>
	branch a5_104 != 0xDCF3452C<32> l2306CB0C
l2306CB30:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 mstatus_121
	word32 s2_124
	word32 s3_125
	word32 s4_126
	word32 s1_327
	word32 s8_329
	word32 s6_328
	word32 ra_122 = dhcp_option_trailer(ra_171, s0_36 + 240<i32>, a0_98 >>u 16<i32>, s0_36 + 240<i32>, a0_52, a0_52, s3_158, s4_161, mstatus_170, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_327, out s2_124, out s3_125, out s4_126, out s6_328, out s8_329, out mstatus_121)
	word32 stackArg20 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg296 = <invalid>
	word32 a3_345
	word32 a4_346
	word32 s2_347
	word32 s3_348
	word32 s4_349
	word32 mstatus_350
	udp_sendto_if_src(ra, a0, a1, a2, a3, a4, a5, s8, mstatus, stackArg20, stackArg120, stackArg136, stackArg168, stackArg184, stackArg200, stackArg232, stackArg248, stackArg296, out a3_345, out a4_346, out s2_347, out s3_348, out s4_349, out mstatus_350)
	word32 s0_351
	word32 a0_352
	word32 a1_353
	word32 a2_354
	word32 a4_355
	word32 a5_356
	word32 a7_357
	word32 s8_358
	ra_171 = pbuf_free(ra_122, s2_124, 67<i32>, s3_125, s4_126, mstatus_121, dwArgF8, out s0_351, out s1_156, out a0_352, out a1_353, out a2_354, out a3_153, out a4_355, out a5_356, out a7_357, out s2_157, out s3_158, out s4_161, out s5_162, out s6_163, out s8_358, out mstatus_170)
l2306CB62:
	word32 a5_174 = CONVERT(Mem173[s1_156 + 6<i32>:byte], byte, word32)
	branch a5_174 == 255<i32> l2306CB74
l2306CB6E:
	Mem177[s1_156 + 6<i32>:byte] = SLICE(a5_174 + 1<32>, byte, 0)
l2306CB74:
	word32 a5_183
	word32 a4_180 = CONVERT(Mem179[s1_156 + 6<i32>:byte], byte, word32)
	branch a4_180 >u 5<32> l2306CBB0
l2306CBB0:
	a5_183 = 0xEFFFA60<32>
l2306CB7E:
	a5_183 = CONVERT(SLICE((1<32> << a4_180) + 1000<i32>, word16, 0), word16, word32)
l2306CB90:
	word32 a5_191 = a5_183 + 499<i32>
	Mem196[s1_156 + 8<i32>:word16] = SLICE(a5_191 ^ 500<i32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_156
	a0Out = 0<32>
	a3Out = a3_153
	a4Out = 500<i32>
	a5Out = a5_191 ^ 500<i32>
	s2Out = s2_157
	s3Out = s3_158
	s4Out = s4_161
	s5Out = s5_162
	s6Out = s6_163
	mstatusOut = mstatus_170
	return ra_171
dhcp_discover_exit:


word32 dhcp_check(word32 ra, word32 s0, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg90, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF0, word32 dwArgF4, word32 dwArgF8, word32 dwArg0118, word32 dwArg0168, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_fine_tmr
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F0:[0..31] Stack +00F4:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0168:[0..31]
// LiveOut: a3 a4 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s0 sp
dhcp_check_entry:
l2306CBB8:
	word32 a0_10 = Mem9[s0 + 40<i32>:word32]
	dhcp_set_state(s0, 8<32>)
	word32 a3_23
	word32 s0_27
	word32 s2_28
	word32 s4_29
	word32 mstatus_33
	word32 s1_35
	word32 s3_36
	word32 s5_37
	word32 s6_38
	word32 s7_39
	word32 ra_34 = etharp_query(ra, a0_10, s0 + 28<i32>, s4, mstatus, dwArg04, dwArg28, dwArg38, dwArg48, dwArg64, dwArg68, ra, dwArg78, dwArg88, dwArg90, dwArg94, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD4, dwArgD8, dwArgE8, dwArgF0, dwArgF4, dwArgF8, dwArg0118, dwArg0168, out s0_27, out s1_35, out a3_23, out s2_28, out s3_36, out s4_29, out s5_37, out s6_38, out s7_39, out mstatus_33)
	word32 a5_48 = CONVERT(Mem9[s0_27 + 6<i32>:byte], byte, word32)
	branch a5_48 == 255<i32> l2306CBEA
l2306CBE4:
	Mem51[s0_27 + 6<i32>:byte] = SLICE(a5_48 + 1<32>, byte, 0)
l2306CBEA:
	Mem54[s0_27 + 8<i32>:word16] = 1<16>
	s1Out = s1_35
	a3Out = a3_23
	a4Out = 255<i32>
	s2Out = s2_28
	s3Out = s3_36
	s4Out = s4_29
	s5Out = s5_37
	s6Out = s6_38
	s7Out = s7_39
	mstatusOut = mstatus_33
	return ra_34
dhcp_check_exit:


word32 dhcp_bind(word32 ra, word32 s0, word32 s1, word32 a0, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg08, word32 dwArg0C, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg48, word32 dwArg4C, word32 dwArg54, word32 dwArg58, word32 dwArg78, word32 dwArg98, word32 dwArg0108, word32 dwArg0118, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_fine_tmr
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +0108:[0..31] Stack +0118:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_bind_entry:
l2306CBFA:
	branch a0 == 0<32> l2306CD34
l2306CD34:
	s0Out = s0
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2306CBFE:
	word32 a0_11 = Mem10[s0 + 40<i32>:word32]
	branch s0 == 0<32> l2306CCD8
l2306CC0A:
	word32 s0_13 = Mem10[a5 + 40<i32>:word32]
	Mem14[s0_13 + 18<i32>:word16] = 0<16>
	branch a5 == 0xFFFFFFFF<32> l2306CC34
l2306CC16:
	word32 a4_19
	a5 = a5 + 0x1E<32>
	branch a5 >=u 0xFFC4001E<32> l2306CCE2
l2306CCE2:
	a4_19 = 0xFFFFFFF<32>
l2306CC20:
	a5 = a5 + 0x1E<32> >>u 60<i32>
	a4_19 = CONVERT(SLICE(a5, word16, 0), word16, word32)
	branch a5 == 0<32> l2306CCE8
l2306CCE8:
	Mem25[s0_13 + 20<i32>:word16] = 1<16>
	a5 = 1<32>
l2306CC30:
	Mem28[s0_13 + 20<i32>:word16] = SLICE(a4_19, word16, 0)
l2306CC34:
	word32 s0_32 = Mem31[a5 + 44<i32>:word32]
	branch a5 == 0xFFFFFFFF<32> l2306CC62
l2306CC3C:
	word32 a4_37
	word32 a5_34 = a5 + 0x1E<32>
	branch a5_34 >=u 0x3C0000<32> l2306CCF0
l2306CCF0:
	a4_37 = 0xFFFFFFF<32>
l2306CC46:
	a4_37 = CONVERT(SLICE(a5_34 >>u 60<i32>, word16, 0), word16, word32)
	branch a5_34 >>u 60<i32> == 0<32> l2306CCF6
l2306CCF6:
	Mem43[s0_32 + 10<i32>:word16] = 1<16>
l2306CC56:
	Mem46[s0_32 + 10<i32>:word16] = SLICE(a4_37, word16, 0)
l2306CC5A:
	a5 = CONVERT(Mem48[s0_32 + 10<i32>:uint16], uint16, word32)
	Mem50[s0_32 + 14<i32>:word16] = SLICE(a5, word16, 0)
l2306CC62:
	word32 s0_53 = Mem52[a5 + 48<i32>:word32]
	branch a5 == 0xFFFFFFFF<32> l2306CC90
l2306CC6A:
	word32 a4_58
	word32 a5_55 = a5 + 0x1E<32>
	branch a5_55 >=u 0x3C0000<32> l2306CCFE
l2306CCFE:
	a4_58 = 0xFFFFFFF<32>
l2306CC74:
	a4_58 = CONVERT(SLICE(a5_55 >>u 60<i32>, word16, 0), word16, word32)
	branch a5_55 >>u 60<i32> == 0<32> l2306CD04
l2306CD04:
	Mem64[s0_53 + 12<i32>:word16] = 1<16>
l2306CC84:
	Mem67[s0_53 + 12<i32>:word16] = SLICE(a4_58, word16, 0)
l2306CC88:
	Mem71[s0_53 + 16<i32>:word16] = SLICE(CONVERT(Mem69[s0_53 + 12<i32>:uint16], uint16, word32), word16, 0)
l2306CC90:
	word32 a5_74 = CONVERT(Mem73[s0_53 + 12<i32>:uint16], uint16, word32)
	word32 a4_107 = CONVERT(Mem73[s0_53 + 10<i32>:uint16], uint16, word32)
	branch a4_107 <u a5_74 l2306CCA2
l2306CC9C:
	branch a5_74 == 0<32> l2306CCA2
l2306CC9E:
	Mem76[s0_53 + 10<i32>:word16] = 0<16>
l2306CCA2:
	word32 a5_79 = CONVERT(Mem78[s0_53 + 7<i32>:byte], byte, word32)
	branch a5_79 == 0<32> l2306CD0C
l2306CD0C:
	word32 a5_80 = CONVERT(Mem78[s0_53 + 28<i32>:byte], byte, word32)
	a4_107 = CONVERT(SLICE(a5_80, byte, 0), byte, int32)
	branch a4_107 < 0<32> l2306CD20
l2306CD20:
	word32 a5_84
	a4_107 = 191<i32>
	branch a5_80 <=u 191<i32> l2306CD30
l2306CD30:
	a5_84 = 0x10000000<32>
l2306CD28:
	a5_84 = 0x1000000<32>
l2306CD2C:
	a5_79 = a5_84 + 0xFFFFFFFF<32>
l2306CD1A:
	a5_79 = 255<i32>
l2306CCA8:
l2306CCAA:
	word32 s0_103 = Mem102[a5_79 + 36<i32>:word32]
	branch a5_79 != 0<32> l2306CCC0
l2306CCB2:
	s0_103 = Mem104[a5_79 + 28<i32>:word32]
	a4_107 = 0x1000000<32>
l2306CCC0:
	word32 a1_580
	word32 a5_582
	word32 s4_583
	word32 a2_581
	ra = netif_set_addr(ra, a0_11, a0_11, s0_103 + 28<i32>, fp + 0xFFFFFFE8<32>, fp + 0xFFFFFFEC<32>, a4_107, dhcp_set_state(s0_103, 0xA<32>), s3, s4, s7, mstatus, a5_79, dwLoc18, dwLoc08, dwArg08, dwArg0C, dwArg24, dwArg28, dwArg38, dwArg48, dwArg4C, dwArg54, dwArg58, s1, dwArg78, dwArg98, dwArg0108, dwArg0118, out s0, out s1, out a1_580, out a2_581, out a3, out a4, out a5_582, out s2, out s3, out s4_583, out s5, out s6, out s7, out mstatus)
l2306CCD8:
	s0Out = s0
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
dhcp_bind_exit:


word32 dhcp_inc_pcb_refcount(word32 ra, word32 a0, word32 a3, word32 a4, word32 mstatus, word32 dwArg28, word32 dwArg38, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a4 a5 ra s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s1 s2 t0 t1 t3 tp
// Preserved: s0 sp
dhcp_inc_pcb_refcount_entry:
l2306CD36:
	word32 a5_100
	word32 a4_32
	branch CONVERT(Mem5[0x4200F5F0<32>:byte], byte, word32) != 0<32> l2306CD9A
l2306CD4E:
	word32 s1_23
	word32 a3_123
	word32 a4_124
	ra = udp_new(ra, 0x4200F000<32>, a3, a4, mstatus, out s1_23, out a3_123, out a4_124, out a5_100)
	Mem31[a0:word32] = s1_23 + 1516<i32>
	a4_32 = 0xFFFFFFFF<32>
	branch a0 == 0<32> l2306CDA6
l2306CD60:
	Mem37[a0 + 9<i32>:byte] = SLICE(CONVERT(Mem31[a0 + 9<i32>:byte], byte, word32) | 32<i32>, byte, 0)
	word32 a3_125
	word32 a4_126
	word32 a5_127
	word32 a3_128
	word32 a4_129
	word32 a5_130
	udp_recv(udp_connect(udp_bind(a0, 0x230CBADC<32>, 68<i32>, out a3_125, out a4_126, out a5_127), 0x230CBADC<32>, 67<i32>, dwArg28, out a3_128, out a4_129, out a5_130, out s2), 0x2306D2B2<32>, 0<32>)
l2306CD9A:
	word32 a5_66 = CONVERT(Mem65[0x4200F5F0<32>:byte], byte, word32)
	Mem69[0x4200F5F0<32>:byte] = SLICE(a5_66 + 1<32>, byte, 0)
	a4_32 = 0<32>
	a5_100 = a5_66 + 1<32>
l2306CDA6:
	0<32> = dwArg38
	a0Out = a4_32
	a4Out = a4_32
	a5Out = a5_100
	s2Out = s2
	return ra
dhcp_inc_pcb_refcount_exit:


word32 dhcp_option_hostname.isra.0(word32 a0, word32 a1, word32 dwArg44, ptr32 & a0Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_select
//      dhcp_network_changed
//      dhcp_renew
//      dhcp_coarse_tmr
// MayUse:  a0:[0..31] a1:[0..31] Stack +0044:[0..31]
// LiveOut: a0 s0 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s8 t3
// Preserved: sp
dhcp_option_hostname.isra.0_entry:
l2306CDB4:
	word32 s0_59 = a0
	word32 a2_10 = Mem7[a0:word32]
	branch a0 == 0<32> l2306CE0E
l2306CDC4:
	word32 a1_18
	word32 a2_99
	word32 a3_100
	word32 a4_101
	word32 a5_102
	word32 a0_14 = strlen(a0, out a1_18, out a2_99, out a3_100, out a4_101, out a5_102)
	branch a0_14 == 0<32> l2306CE0E
l2306CDCA:
	word32 a4_22 = 65<i32> - a1
	word32 a2_24 = dwArg44
	branch a0_14 >=u a4_22 l2306CDDC
l2306CDDA:
	a4_22 = a0_14
l2306CDDC:
	Mem30[a1_18 + a1:byte] = 0xC<8>
	Mem39[CONVERT(SLICE(a1 + 1<i32>, word16, 0), word16, word32) + a1_18:byte] = SLICE(a4_22, byte, 0)
	word32 a3_34 = a1 + 2<i32> << 16<i32>
	word32 a0_41 = dwArg44 + a4_22
	word32 a5_42 = a3_34 >>u 16<i32>
l2306CE02:
	branch a2_24 != a0_41 l2306CE18
l2306CE18:
	a2_24 = a2_24 + 1<32>
	Mem52[a5_42 + a1_18:byte] = SLICE(CONVERT(Mem46[a2_24 + -1<i32>:byte], byte, word32), byte, 0)
	a5_42 = CONVERT(SLICE(a5_42 + 1<i32>, word16, 0), word16, word32)
l2306CE06:
	s0_59 = CONVERT(SLICE((a3_34 >>u 16<i32>) + a4_22, word16, 0), word16, word32)
l2306CE0E:
	a0Out = s0_59
	s8Out = a2_10
	return s0_59
dhcp_option_hostname.isra.0_exit:


word32 dhcp_reboot(word32 ra, word32 s0, word32 s1, word32 a4, word32 s4, word32 s5, word32 mstatus, word32 dwArg14, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_network_changed
//      dhcp_fine_tmr
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0014:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a4 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_reboot_entry:
l2306CE30:
	word32 a0_18 = Mem17[s1 + 40<i32>:word32]
	dhcp_set_state(s1, 3<32>)
	uint16 wLoc22_264 = SLICE(s4, uint16, 16)
	word32 a0_53
	word32 s0_372
	word32 a4_374
	word32 a5_375
	word32 s4_376
	word32 a3_373
	word32 s1_196
	word32 s6_203
	word32 s5_202
	word32 s2_197
	word32 s3_198
	word32 mstatus_210
	word32 ra_211 = dhcp_create_msg(ra, s0, a0_18, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_372, out s1_196, out a0_53, out a3_373, out a4_374, out a5_375, out s2_197, out s3_198, out s4_376, out s5_202, out s6_203, out mstatus_210)
	branch a0_53 == 0<32> l2306CF5E
l2306CE60:
	word32 a5_56 = CONVERT(wLoc22_264, uint16, word32)
	word32 a0_55 = Mem17[3<32>:word32]
	Mem65[a5_56 + 0xEF<32>:byte] = 0x39<8>
	Mem69[CONVERT(SLICE(a5_56 + 1<32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 2<8>
	word32 a0_74 = dhcp_option_short(CONVERT(SLICE(a5_56 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, 576<i32>)
	Mem84[a0_74 + 0xEF<32>:byte] = 0x32<8>
	word32 a0_85 = CONVERT(SLICE(a0_74 + 1<32>, word16, 0), word16, word32) + 0xEF<32>
	Mem87[a0_85:byte] = 4<8>
	word32 s4_89 = a0_74 + 2<i32> << 16<i32>
	word32 a3_377
	word32 a4_378
	word32 a5_379
	word32 a0_99 = dhcp_option_long(s4_89 >>u 0x10<u32>, 0xEF<32>, lwip_htonl(a0_85, out a3_377, out a4_378, out a5_379))
	Mem105[a0_99 + 0xEF<32>:byte] = 0x37<8>
	Mem110[CONVERT(SLICE(a0_99 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	uint16 wLoc22_267 = SLICE(a0_99 + 2<32>, word16, 0)
	word32 a5_114 = 0x230CBAD8<32>
l2306CF00:
	word32 a4_119 = CONVERT(wLoc22_267, uint16, word32)
	Mem129[a4_119 + 0xEF<32>:byte] = SLICE(CONVERT(Mem118[a5_114 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_125 = a4_119 + 1<i32> << 16<i32>
	wLoc22_267 = SLICE(a0_125 >>u 16<i32>, word16, 0)
	a5_114 = a5_114 + 1<32>
	branch a5_114 != 0xDCF3452C<32> l2306CF00
l2306CF24:
	word32 a0_144
	word32 s8_380
	word32 s0_137 = dhcp_option_hostname.isra.0(a0_125 >>u 16<i32>, 0xEF<32>, dwArg14, out a0_144, out s8_380)
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 mstatus_162
	word32 s2_165
	word32 s3_166
	word32 s4_167
	word32 s6_382
	word32 s8_383
	word32 s1_381
	word32 ra_163 = dhcp_option_trailer(ra_211, s0_137, a0_144, s0_137, a0_55, a0_55, s3_198, s4_89 >>u 0x10<u32>, mstatus_210, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_381, out s2_165, out s3_166, out s4_167, out s6_382, out s8_383, out mstatus_162)
	word32 stackArg20 = <invalid>
	word32 stackArg120 = <invalid>
	word32 stackArg136 = <invalid>
	word32 stackArg168 = <invalid>
	word32 stackArg184 = <invalid>
	word32 stackArg200 = <invalid>
	word32 stackArg232 = <invalid>
	word32 stackArg248 = <invalid>
	word32 stackArg296 = <invalid>
	word32 a3_398
	word32 a4_399
	word32 s2_400
	word32 s3_401
	word32 s4_402
	word32 s7_403
	word32 s8_404
	word32 mstatus_405
	udp_sendto_if(ra, a0, a1, a2, a3, a4, s8, mstatus, stackArg20, stackArg120, stackArg136, stackArg168, stackArg184, stackArg200, stackArg232, stackArg248, stackArg296, out a3_398, out a4_399, out s2_400, out s3_401, out s4_402, out s7_403, out s8_404, out mstatus_405)
	word32 s0_406
	word32 a0_407
	word32 a1_408
	word32 a2_409
	word32 a3_410
	word32 a4_411
	word32 a5_412
	word32 a7_413
	word32 s4_414
	word32 s8_415
	ra_211 = pbuf_free(ra_163, s2_165, 67<i32>, s3_166, s4_167, mstatus_162, dwArgF8, out s0_406, out s1_196, out a0_407, out a1_408, out a2_409, out a3_410, out a4_411, out a5_412, out a7_413, out s2_197, out s3_198, out s4_414, out s5_202, out s6_203, out s8_415, out mstatus_210)
l2306CF5E:
	word32 a5_214 = CONVERT(Mem213[s1_196 + 6<i32>:byte], byte, word32)
	branch a5_214 == 255<i32> l2306CF70
l2306CF6A:
	Mem217[s1_196 + 6<i32>:byte] = SLICE(a5_214 + 1<32>, byte, 0)
l2306CF70:
	word32 a5_223
	word32 a5_220 = CONVERT(Mem219[s1_196 + 6<i32>:byte], byte, word32)
	branch a5_220 >u 9<32> l2306CFAA
l2306CFAA:
	a5_223 = 0x2000710<32>
l2306CF7A:
	a5_223 = CONVERT(SLICE(a5_220 + 1000<i32>, word16, 0), word16, word32)
l2306CF86:
	Mem237[s1_196 + 8<i32>:word16] = SLICE(a5_223 + 499<i32> ^ 500<i32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_196
	a4Out = 500<i32>
	s2Out = s2_197
	s3Out = s3_198
	s4Out = dwArg78
	s5Out = s5_202
	s6Out = s6_203
	mstatusOut = mstatus_210
	return ra_211
dhcp_reboot_exit:


word32 dhcp_select(word32 ra, word32 s0, word32 s1, word32 a0, word32 a4, word32 s4, word32 s5, word32 mstatus, word32 dwArg14, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
//      dhcp_fine_tmr
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
dhcp_select_entry:
l2306CFB2:
	uint16 wLoc22_325 = SLICE(s4, uint16, 16)
	branch a0 == 0<32> l2306D16C
l2306CFC8:
	word32 a0_20 = Mem17[s1 + 40<i32>:word32]
	branch s1 == 0<32> l2306D16C
l2306CFD0:
	dhcp_set_state(s1, 1<32>)
	word32 a0_56
	word32 s4_489
	word32 a5_487
	word32 s3_488
	word32 s0_485
	word32 a4_486
	ra = dhcp_create_msg(ra, 0xFFFFFFFA<32>, a0_20, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, s5, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_485, out s1, out a0_56, out a3, out a4_486, out a5_487, out s2, out s3_488, out s4_489, out s5, out s6, out mstatus)
	s3 = a0_56
	branch a0_56 == 0<32> l2306D12E
l2306CFF0:
	word32 a5_60 = CONVERT(wLoc22_325, uint16, word32)
	Mem68[a5_60 + 0xEF<32>:byte] = 0x39<8>
	Mem71[CONVERT(SLICE(a5_60 + 1<32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 2<8>
	word32 a0_77 = dhcp_option_short(CONVERT(SLICE(a5_60 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, CONVERT(Mem71[s2 + 56<i32>:uint16], uint16, word32))
	Mem83[a0_77 + 0xEF<32>:byte] = 0x32<8>
	Mem89[CONVERT(SLICE(a0_77 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	word32 a5_492
	word32 a4_491
	word32 a3_490
	word32 a0_102 = dhcp_option_long(CONVERT(SLICE(a0_77 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, lwip_htonl(a0_77, out a3_490, out a4_491, out a5_492))
	Mem108[a0_102 + 0xEF<32>:byte] = 0x36<8>
	Mem113[CONVERT(SLICE(a0_102 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	word32 s4_116 = a0_102 + 2<i32> << 16<i32>
	word32 a4_494
	word32 a3_493
	word32 a5_495
	word32 a0_126 = dhcp_option_long(s4_116 >>u 0x10<u32>, 0xEF<32>, lwip_htonl(a0_102, out a3_493, out a4_494, out a5_495))
	Mem132[a0_126 + 0xEF<32>:byte] = 0x37<8>
	Mem137[CONVERT(SLICE(a0_126 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	uint16 wLoc22_329 = SLICE(a0_126 + 2<32>, word16, 0)
	word32 a5_141 = 0x230CBAD8<32>
l2306D0C8:
	word32 a4_146 = CONVERT(wLoc22_329, uint16, word32)
	Mem156[a4_146 + 0xEF<32>:byte] = SLICE(CONVERT(Mem145[a5_141 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_152 = a4_146 + 1<i32> << 16<i32>
	wLoc22_329 = SLICE(a0_152 >>u 16<i32>, word16, 0)
	a5_141 = a5_141 + 1<32>
	branch a5_141 != 0xDCF3452C<32> l2306D0C8
l2306D0EC:
	word32 a0_171
	word32 s8_496
	word32 s0_164 = dhcp_option_hostname.isra.0(a0_152 >>u 16<i32>, 0xEF<32>, dwArg14, out a0_171, out s8_496)
	word32 mstatus_189
	word32 s2_192
	word32 s3_193
	word32 s8_197
	word32 a3_217
	word32 a4_218
	word32 mstatus_222
	word32 s3_227
	word32 s4_228
	word32 s1_497
	word32 s4_498
	word32 s6_499
	word32 s2_500
	word32 s0_501
	word32 a0_502
	word32 a1_503
	word32 a2_504
	word32 a5_506
	word32 a4_505
	word32 a7_507
	word32 s4_508
	word32 s8_509
	ra = pbuf_free(udp_sendto_if_src(dhcp_option_trailer(ra, s0_164, a0_171, s0_164, a0_56, s2, a0_56, s4_116 >>u 0x10<u32>, mstatus, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_497, out s2_192, out s3_193, out s4_498, out s6_499, out s8_197, out mstatus_189), Mem177[0x4200F5EC<32>:int32], s3_193, 0x230CBAE0<32>, 67<i32>, s2_192, 0x230CBADC<32>, s8_197, mstatus_189, s0, dwArg48, s5, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_217, out a4_218, out s2_500, out s3_227, out s4_228, out mstatus_222), s3_227, a3_217, a4_218, s4_228, mstatus_222, dwArgF8, out s0_501, out s1, out a0_502, out a1_503, out a2_504, out a3, out a4_505, out a5_506, out a7_507, out s2, out s3, out s4_508, out s5, out s6, out s8_509, out mstatus)
l2306D12E:
	word32 a5_270 = CONVERT(Mem269[s1 + 6<i32>:byte], byte, word32)
	branch a5_270 == 255<i32> l2306D140
l2306D13A:
	Mem273[s1 + 6<i32>:byte] = SLICE(a5_270 + 1<32>, byte, 0)
l2306D140:
	word32 a5_279
	word32 a4_276 = CONVERT(Mem275[s1 + 6<i32>:byte], byte, word32)
	branch a4_276 >u 5<32> l2306D180
l2306D180:
	a5_279 = 0xEFFFA60<32>
l2306D14A:
	a5_279 = CONVERT(SLICE((1<32> << a4_276) + 1000<i32>, word16, 0), word16, word32)
l2306D15C:
	Mem291[s1 + 8<i32>:word16] = SLICE(a5_279 + 499<i32> ^ 500<i32>, word16, 0)
	a4 = 500<i32>
l2306D16C:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a3Out = a3
	a4Out = a4
	s2Out = s2
	s3Out = s3
	s4Out = dwArg78
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
dhcp_select_exit:


word32 dhcp_dec_pcb_refcount(word32 a0, word32 a3, word32 mstatus, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
//      dhcp_stop
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31]
// LiveOut: a3 a4 a5 s1
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
dhcp_dec_pcb_refcount_entry:
l2306D188:
	word32 a5_8 = CONVERT(Mem0[0x4200F5F0<32>:byte], byte, word32) + 0xFFFFFFFF<32> & 255<i32>
	Mem9[0x4200F5F0<32>:byte] = SLICE(a5_8, byte, 0)
	branch a5_8 != 0<32> l2306D1C0
l2306D1C0:
	a3Out = a3
	a4Out = 0x4200F5F0<32>
	a5Out = a5_8
	return s1
l2306D1A0:
	word32 s0_15 = Mem12[a0:word32]
	word32 a3_23
	word32 a4_24
	word32 a5_25
	word32 a0_52
	word32 a2_53
	word32 s1_26 = udp_remove(a0, a3, mstatus, out a0_52, out a2_53, out a3_23, out a4_24, out a5_25)
	Mem29[s0_15:word32] = 0<32>
	a3Out = a3_23
	a4Out = a4_24
	a5Out = a5_25
	return s1_26
dhcp_dec_pcb_refcount_exit:


word32 dhcp_handle_ack.isra.3(word32 a0, word32 a1, word32 a4, ptr32 & s1Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_recv
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31]
// LiveOut: a5 s0 s1 s4
// Trashed: a0 a1 a3 a4 a5 s0 s1 s4 s8 t3
// Preserved: sp
dhcp_handle_ack.isra.3_entry:
l2306D1C2:
	word32 a5_12 = CONVERT(Mem10[0x420267DB<32>:byte], byte, word32)
	Mem14[a0 + 32<i32>:word32] = 0<32>
	Mem15[a0 + 36<i32>:word32] = 0<32>
	word32 s0_111 = a0
	branch a5_12 == 0<32> l2306D1F0
l2306D1E6:
	Mem20[Mem15[0x420267BC<32>:int32] + 40<i32>:word32] = a0
l2306D1F0:
	word32 a5_25
	word32 a5_23 = CONVERT(Mem22[0x420267DC<32>:byte], byte, word32)
	branch a5_23 == 0<32> l2306D29A
l2306D29A:
	s0_111 = Mem22[a5_23 + 40<i32>:word32]
	a5_25 = a5_23 >>u 1<i32>
l2306D1F6:
	a5_25 = Mem22[0x420267C0<32>:int32]
l2306D1FE:
	word32 a5_40
	Mem31[a5_25 + 44<i32>:word32] = s0_111
	branch CONVERT(Mem31[0x420267DD<32>:byte], byte, word32) == 0<32> l2306D2A0
l2306D2A0:
	s0_111 = Mem31[a4 + 40<i32>:word32]
	a5_40 = a4 + 7<32> >>u 3<i32>
l2306D206:
	a5_40 = Mem31[0x420267C4<32>:int32]
l2306D20E:
	Mem45[a5_40 + 48<i32>:word32] = s0_111
	Mem60[(CONVERT(Mem45[a1 + 19<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem45[a1 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem45[a1 + 16<i32>:byte], byte, word32)) | CONVERT(Mem45[a1 + 18<i32>:byte], byte, word32) << 16<i32>)) + 28<i32>:word32] = s0_111
	branch CONVERT(Mem60[0x420267DE<32>:byte], byte, word32) == 0<32> l2306D2AC
l2306D2AC:
	Mem63[s0_111 + 7<i32>:byte] = 0<8>
l2306D234:
	word32 a3_176
	word32 a4_177
	word32 a5_178
	a0 = lwip_htonl(Mem60[0x420267C8<32>:int32], out a3_176, out a4_177, out a5_178)
	Mem71[a0 + 32<i32>:word32] = s0_111
	Mem72[s0_111 + 7<i32>:byte] = 1<8>
l2306D248:
	branch CONVERT(Mem74[0x420267DF<32>:byte], byte, word32) == 0<32> l2306D25C
l2306D24E:
	word32 a3_179
	word32 a4_180
	word32 a5_181
	a0 = lwip_htonl(Mem74[0x420267CC<32>:int32], out a3_179, out a4_180, out a5_181)
	Mem83[a0 + 36<i32>:word32] = s0_111
l2306D25C:
	word32 a5_110 = CONVERT(Mem85[0x420267E0<32>:byte], byte, word32)
	branch a5_110 == 0<32> l2306D290
l2306D262:
	s0_111 = Mem85[a0 + 32<i32>:word32]
	word32 a4_96
	word32 a3_182
	word32 a5_183
	lwip_htonl(a0, out a3_182, out a4_96, out a5_183)
	word32 a4_184
	word32 a5_185
	word32 a0_107 = dns_setserver(0<32>, fp + 0xFFFFFFEC<32>, a4_96, out a4_184, out a5_185)
	a5_110 = CONVERT(Mem103[0x420267E1<32>:byte], byte, word32)
	branch a5_110 == 0<32> l2306D290
l2306D280:
	s0_111 = Mem103[a0_107 + 36<i32>:word32]
	word32 a4_114
	word32 a3_186
	word32 a5_187
	lwip_htonl(a0_107, out a3_186, out a4_114, out a5_187)
	word32 a4_188
	dns_setserver(1<32>, fp + 0xFFFFFFEC<32>, a4_114, out a4_188, out a5_110)
l2306D290:
	s1Out = 0x420267D8<32>
	a5Out = a5_110
	s4Out = dwArg04
	return s0_111
dhcp_handle_ack.isra.3_exit:


void dhcp_recv(word32 ra, word32 s0, word32 a2, word32 a3, word32 a4, word32 s4, word32 s5, word32 s6, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg48, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0048:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: s5 sp
dhcp_recv_entry:
l2306D2B2:
	word32 s1_7 = Mem6[0x4202691C<32>:int32]
	word32 s3_310 = Mem31[s1_7 + 40<i32>:int32]
	word32 s2_101 = a2
	branch s3_310 == 0<32> l2306D39A
l2306D2E0:
	branch CONVERT(Mem31[s3_310 + 4<i32>:byte], byte, word32) == 0<32> l2306D39A
l2306D2E6:
	a4 = CONVERT(Mem31[a2 + 10<i32>:uint16], uint16, word32)
	branch a4 <=u 43<i32> l2306D39A
l2306D2F2:
	a4 = 2<32>
	a3 = CONVERT(Mem31[43<i32>:byte], byte, word32)
	branch a3 != 2<32> l2306D39A
l2306D2FE:
	word32 a2_41 = CONVERT(Mem31[s1_7 + 64<i32>:byte], byte, word32)
	a4 = 0<32>
	a3 = 6<32>
l2306D306:
	branch (a4_2289 & 255<i32>) >=u a2_41 l2306D312
l2306D30E:
	branch a4_2289 != 6<32> l2306D384
l2306D384:
	a4 = a4_2289 + 1<32>
	a4_2289 = a4
	branch CONVERT(Mem31[a4 + 70<i32>:byte], byte, word32) == CONVERT(Mem31[(s1_7 + a4_2289) + 58<i32>:byte], byte, word32) l2306D306
l2306D312:
	word32 a5_2240
	branch lwip_htonl(CONVERT(Mem31[0x32<32>:byte], byte, word32) << 24<i32> | (CONVERT(Mem31[0x31<32>:byte], byte, word32) << 16<i32> | (CONVERT(Mem31[0x30<32>:byte], byte, word32) << 8<i32> | CONVERT(Mem31[0x2F<32>:byte], byte, word32))), out a3, out a4, out a5_2240) != Mem31[s3_310:int32] l2306D39A
l2306D33A:
	word32 a1_2242
	word32 a5_2245
	word32 a2_2243
	word32 t1_2241
	word32 a4_2244
	word32 a0_296
	ra = memset(ra, 0x420267D8<32>, 0<32>, 0xA<32>, out t1_2241, out a0_296, out a1_2242, out a2_2243, out a3, out a4_2244, out a5_2245)
	s4 = 0x42026000<32>
	a4 = CONVERT(Mem31[a2 + 10<i32>:uint16], uint16, word32)
	branch a4 <=u 43<i32> l2306D39A
l2306D356:
	word32 s8_109 = CONVERT(Mem31[a2 + 8<i32>:uint16], uint16, word32)
	word32 s11_106 = 240<i32>
l2306D368:
	word32 s6_102 = s2_101
l2306D36A:
	word32 a5_105 = CONVERT(Mem904[s6_102 + 10<i32>:uint16], uint16, word32)
	branch s11_106 >=u a5_105 l2306D3BE
l2306D3BE:
	s6_102 = Mem904[s6_102:int32]
	s11_106 = CONVERT(SLICE(s11_106 - a5_105, word16, 0), word16, word32)
	s8_109 = CONVERT(SLICE(s8_109 - a5_105, word16, 0), word16, word32)
	branch s6_102 != 0<32> l2306D36A
l2306D3DE:
l2306D372:
	word32 s7_116 = 0x10000000<32>
	word32 s9_117 = s11_106
	word32 dwLoc68_1426 = Mem904[s6_102 + 4<i32>:int32]
	word32 a5_121 = 0xFFFFFFD<32>
l2306D5AC:
	byte bLoc44_2118 = SLICE(s4, byte, 0)
	branch s9_117 >=u s8_109 l2306D5C2
l2306D5B0:
	a4 = a5_121 + s9_117
	a3 = 255<i32>
	word32 a5_131 = CONVERT(Mem126[a4:byte], byte, word32)
	branch a5_131 != 255<i32> l2306D3E0
l2306D3E0:
	s7_116 = CONVERT(SLICE(s9_117 + 2<i32>, word16, 0), word16, word32)
	branch s7_116 <u s9_117 l2306D39A
l2306D3F0:
	word32 s10_162
	a3 = s9_117 + 1<i32>
	branch a3 >= CONVERT(Mem126[s6_102 + 10<i32>:uint16], uint16, word32) l2306D428
l2306D428:
	word32 a4_138 = Mem126[s6_102:int32]
	branch a4_138 == 0<32> l2306D734
l2306D734:
	a4 = 51<i32>
	branch a5_131 == 51<i32> l2306D39A
l2306D73C:
	branch a5_131 >u 51<i32> l2306D756
l2306D756:
	branch a5_131 == 54<i32> l2306D556
l2306D556:
	a4 = 0<32>
l2306D75E:
	branch a5_131 >u 54<i32> l2306D772
l2306D772:
	branch a5_131 == 58<i32> l2306D564
l2306D564:
	a4 = 0<32>
l2306D77A:
	a4 = 0<32>
l2306D762:
	branch a5_131 == 52<i32> l2306D540
l2306D540:
	a4 = 0<32>
l2306D76A:
	a4 = 0<32>
l2306D740:
	a4 = 1<32>
	branch a5_131 == 1<32> l2306D39A
l2306D746:
	branch a5_131 == 0<32> l2306D572
l2306D74A:
	a4 = 3<32>
	branch a5_131 == 3<32> l2306D39A
l2306D750:
	a4 = 0<32>
l2306D430:
	a4 = CONVERT(Mem126[Mem126[a4_138 + 4<i32>:word32]:byte], byte, word32)
l2306D3FC:
	a4 = CONVERT(Mem126[a4 + 1<i32>:byte], byte, word32)
l2306D400:
	branch a5_131 == 51<i32> l2306D534
l2306D534:
	a5_131 = 4<32>
	branch a4 != 4<32> l2306D39A
l2306D53A:
	s0 = 4<32>
	s10_162 = 3<32>
l2306D408:
	branch a5_131 >u 51<i32> l2306D438
l2306D438:
	a3 = 54<i32>
	branch a5_131 == 54<i32> l2306D558
l2306D558:
	a5_131 = 4<32>
	branch a4 != 4<32> l2306D39A
l2306D55E:
	s0 = 4<32>
	s10_162 = 2<32>
l2306D440:
	branch a5_131 >u 54<i32> l2306D460
l2306D460:
	a3 = 58<i32>
	branch a5_131 == 58<i32> l2306D566
l2306D566:
	a5_131 = 4<32>
	branch a4 != 4<32> l2306D39A
l2306D56C:
	s0 = 4<32>
	s10_162 = 4<32>
l2306D468:
l2306D46C:
	a3 = 59<i32>
	branch a5_131 != 59<i32> l2306D422
l2306D470:
	a5_131 = 4<32>
	branch a4 != 4<32> l2306D39A
l2306D476:
	s0 = 4<32>
	s10_162 = 5<32>
l2306D444:
	a3 = 52<i32>
	branch a5_131 == 52<i32> l2306D542
l2306D542:
	branch a4 != 1<32> l2306D39A
l2306D548:
	a5_131 = 240<i32>
	branch s11_106 != 240<i32> l2306D39A
l2306D550:
	s0 = 1<32>
	s10_162 = 0<32>
l2306D44C:
l2306D450:
	a3 = 53<i32>
	branch a5_131 != 53<i32> l2306D422
l2306D454:
	a5_131 = 1<32>
	branch a4 != 1<32> l2306D39A
l2306D45A:
	s0 = 1<32>
	s10_162 = 1<32>
l2306D40C:
	branch a5_131 == 1<32> l2306D47C
l2306D47C:
	a5_131 = 4<32>
	branch a4 != 4<32> l2306D39A
l2306D482:
	s0 = 4<32>
	s10_162 = 6<32>
l2306D412:
	branch a5_131 == 0<32> l2306D572
l2306D572:
	s9_117 = CONVERT(SLICE(a3, word16, 0), word16, word32)
l2306D416:
	a3 = 3<32>
	branch a5_131 == 3<32> l2306D50E
l2306D50E:
	branch a5_131 >=u a4 l2306D39A
l2306D512:
	s10_162 = 7<32>
	s0 = 4<32>
l2306D41C:
l2306D41E:
	a3 = 6<32>
	branch a5_131 == 6<32> l2306D518
l2306D518:
	branch (a4 & 3<i32>) != 0<32> l2306D39A
l2306D520:
	a5_131 = 8<32>
	s0 = a4 & 255<i32>
	branch a4 <=u 8<32> l2306D52C
l2306D52A:
	s0 = 8<32>
l2306D52C:
	branch a4 <u s0 l2306D39A
l2306D530:
	s10_162 = 8<32>
l2306D422:
	s10_162 = 0xFFFFFFFF<32>
	s0 = 0<32>
l2306D486:
	s4 = dwArg74
	branch a5_131 < a4 + s9_117 l2306D39A
l2306D490:
	a4 = a4 + s7_116
	s9_117 = CONVERT(SLICE(a4, word16, 0), word16, word32)
	branch s0 == 0<32> l2306D57A
l2306D49C:
	dwArg24 = 0<32>
	word32 a5_274 = dwArg74 + 2008<i32> + s10_162
l2306D4A4:
	a4 = CONVERT(Mem276[a5_274:byte], byte, word32)
	branch a4 != 0<32> l2306D57A
l2306D4AC:
	word32 a4_280 = s0 & 255<i32>
	branch s0 <=u 4<32> l2306D4B6
l2306D4B4:
	a4_280 = 4<32>
l2306D4B6:
	dwLoc64 = a4_280
	word32 a5_308
	word32 a1_2283
	word32 a2_2284
	word32 s8_2285
	word32 s1_2282
	s0 = pbuf_copy_partial(s6_102, fp + -68<i32>, a4_280, s7_116, out s1_2282, out a0_296, out a1_2283, out a2_2284, out a3, out a4, out a5_308, out s2_101, out s3_310, out s4, out s8_2285)
	s8_109 = dwArg54
	branch a4 != a0_296 l2306D39A
l2306D4CC:
	branch s0 <=u 4<32> l2306D616
l2306D616:
	branch s0 != 4<32> l2306D63E
l2306D63E:
	branch s0 != 1<32> l2306D39A
l2306D644:
	dwArg24 = CONVERT(bLoc44_2118, byte, word32)
l2306D61A:
	word32 a5_2288
	word32 a4_2287
	a0_296 = lwip_htonl(a0_296, out a3, out a4_2287, out a5_2288)
	dwArg24 = a0_296
l2306D622:
	word32 a5_332 = s10_162 + 0x420267D8<32>
	Mem334[a5_332:byte] = 1<8>
	Mem342[(s10_162 << 2<i32>) + 0x420267B0<32>:word32] = a5_332
	a4 = 1<32>
l2306D57A:
	a5_121 = CONVERT(Mem356[s6_102 + 10<i32>:uint16], uint16, word32)
	branch s9_117 <u a5_121 l2306D5AC
l2306D582:
	s9_117 = CONVERT(SLICE(s9_117 - a5_121, word16, 0), word16, word32)
	s8_109 = CONVERT(SLICE(s8_109 - a5_121, word16, 0), word16, word32)
	branch s9_117 >=u s8_109 l2306D39A
l2306D59E:
	s6_102 = Mem356[s6_102:int32]
	branch s6_102 == 0<32> l2306D39A
l2306D5A6:
	a5_121 = Mem356[s6_102 + 4<i32>:int32]
	dwLoc68_1426 = a5_121
l2306D4D2:
	a4 = s0 & 3<i32>
	branch (s0 & 3<i32>) != 0<32> l2306D39A
l2306D4DA:
	Mem392[a5_308:byte] = 1<8>
	word32 a5_397
	word32 a4_2286
	a0_296 = lwip_htonl(a0_296, out a3, out a4_2286, out a5_397)
	Mem400[a0_296:word32] = (s10_162 << 2<u32>) + 0x420267B0<32>
	dwLoc64 = a5_308
	s8_109 = dwArg74
	a4 = CONVERT(SLICE(s7_116 + 4<i32>, word16, 0), word16, word32)
	s0 = s0 + 0xFFFFFFFC<32> & 255<i32>
	a5_274 = a5_397 + 1<32>
	branch a4 <u s7_116 l2306D39A
l2306D508:
	s10_162 = s10_162 + 1<32>
	s7_116 = a4
l2306D5C2:
	a4 = s4 + 2008<i32>
	word32 a5_421 = CONVERT(Mem126[a4:byte], byte, word32)
	branch a5_421 != 0<32> l2306D64C
l2306D64C:
	a5_421 = Mem126[0x420267B0<32>:int32]
	Mem439[a4:byte] = 0<8>
	a4 = 1<32>
	branch a5_421 == 1<32> l2306D676
l2306D65A:
	a4 = 2<32>
	branch a5_421 != 2<32> l2306D66C
l2306D66C:
	a4 = 3<32>
	branch a5_421 != 3<32> l2306D5CC
l2306D672:
l2306D676:
	s8_109 = 236<i32>
	s11_106 = 108<i32>
l2306D5CC:
	branch a5_421 != 0<32> l2306D660
l2306D660:
	s8_109 = 108<i32>
	s11_106 = 44<i32>
l2306D5D0:
	branch CONVERT(Mem449[0x420267D9<32>:byte], byte, word32) == 0<32> l2306D39A
l2306D5E0:
	a4 = CONVERT(Mem449[0x420267B4<32>:byte], byte, word32)
	a3 = 5<32>
	word32 a1_481 = Mem449[s2_101 + 4<i32>:int32]
	branch a4 != 5<32> l2306D69A
l2306D69A:
	a3 = 6<32>
	branch a4 != 6<32> l2306D6DE
l2306D6DE:
	branch a4 != 2<32> l2306D39A
l2306D6E4:
	a4 = CONVERT(Mem449[s3_310 + 5<i32>:byte], byte, word32)
	branch a4 != 6<32> l2306D39A
l2306D6EC:
	a4 = CONVERT(Mem449[0x420267DA<32>:byte], byte, word32)
	branch a4 == 0<32> l2306D39A
l2306D6FC:
	word32 s1_522 = Mem449[s0 + 40<i32>:word32]
	Mem524[s0 + 8<i32>:word16] = 0<16>
	word32 a3_2274
	word32 a5_2276
	word32 a4_2275
	Mem552[lwip_htonl(a0_296, out a3_2274, out a4_2275, out a5_2276) + 24<i32>:word32] = s0
	word32 a4_560 = CONVERT(Mem552[a1_481 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem552[a1_481 + 16<i32>:byte], byte, word32) | CONVERT(Mem552[a1_481 + 18<i32>:byte], byte, word32) << 16<i32>
	Mem564[(CONVERT(Mem552[a1_481 + 19<i32>:byte], byte, word32) << 24<i32> | a4_560) + 28<i32>:word32] = s0
	word32 s0_2277
	word32 s1_2278
	word32 s6_2281
	word32 s5_2280
	word32 s3_2279
	ra = dhcp_select(ra, s0, s1_522, s1_522, a4_560, s4, 0x420267B0<32>, mstatus, dwLoc5C, dwLoc28, dwLoc08, dwArg08, 0xFFFFFFD<32>, dwArg28, s5, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, out s0_2277, out s1_2278, out a3, out a4, out s2_101, out s3_2279, out s4, out s5_2280, out s6_2281, out mstatus)
l2306D6A0:
	a4 = CONVERT(Mem449[s3_310 + 5<i32>:byte], byte, word32)
	a3 = 2<32>
	branch (a4 + -3<i32> & 255<i32>) <=u 2<32> l2306D6B8
l2306D6B2:
	branch a4 != 1<32> l2306D39A
l2306D6B8:
	word32 s1_646 = Mem449[a0_296 + 40<i32>:word32]
	word32 a4_671
	word32 mstatus_675
	word32 s0_677
	word32 s1_678
	word32 s4_683
	word32 s1_2268
	word32 s7_2266
	word32 s6_2273
	word32 s0_2267
	word32 s6_2265
	word32 s2_2262
	word32 a5_2261
	word32 s3_2271
	word32 a2_2259
	word32 a1_2258
	word32 a3_2260
	word32 s3_2263
	word32 s5_2264
	word32 a5_2270
	word32 a0_2269
	word32 s5_2272
	ra = dhcp_discover(netif_set_addr(ra, s1_646, s1_646, 0x230CBADC<32>, 0x230CBADC<32>, 0x230CBADC<32>, a4, dhcp_set_state(a0_296, 0xC<32>), s3_310, s4, s7_116, mstatus, dwLoc6C, dwLoc68_1426, dwLoc58, s6, s4, dwLoc2C, dwLoc28, dwLoc18, dwLoc08, dwLoc04, dwArg04, dwArg08, 0xFFFFFFD<32>, dwArg28, dwArg48, dwArgB8, dwArgC8, out s0_677, out s1_678, out a1_2258, out a2_2259, out a3_2260, out a4_671, out a5_2261, out s2_2262, out s3_2263, out s4_683, out s5_2264, out s6_2265, out s7_2266, out mstatus_675), s0_677, s1_678, a4_671, s4_683, mstatus_675, dwLoc18, dwLoc08, dwArg08, 0xFFFFFFD<32>, dwArg28, s5, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, out s0_2267, out s1_2268, out a0_2269, out a3, out a4, out a5_2270, out s2_101, out s3_2271, out s4, out s5_2272, out s6_2273, out mstatus)
l2306D5F6:
	word32 s4_732
	word32 a5_729
	word32 s1_731
	word32 s0_730
	word32 a0_738
	word32 a5_722 = CONVERT(Mem449[s3_310 + 5<i32>:byte], byte, word32)
	branch a5_722 != 1<32> l2306D680
l2306D680:
	a4 = 2<32>
	branch (a5_722 + 0xFFFFFFFD<32> & 255<i32>) >u 2<32> l2306D39A
l2306D68C:
	s0_730 = dhcp_handle_ack.isra.3(a0_296, a1_481, 2<32>, out s1_731, out a5_729, out s4_732)
	a0_738 = s1_731
l2306D600:
	word32 a5_2246
	s0_730 = dhcp_handle_ack.isra.3(a0_296, a1_481, 1<32>, out s1_731, out a5_2246, out s4_732)
	word32 a5_750 = CONVERT(Mem449[s1_731 + 65<i32>:byte], byte, word32)
	a0_738 = s1_731
	a5_729 = a5_750 & 8<32>
	branch (a5_750 & 8<32>) == 0<32> l2306D694
l2306D694:
	word32 s7_2252
	word32 s3_2249
	word32 s5_2250
	word32 s0_2247
	word32 s1_2248
	word32 s6_2251
	ra = dhcp_bind(ra, s0_730, s1_731, a0_738, a5_729, s3_310, s4_732, s7_116, mstatus, dwLoc68_1426, dwLoc64, s8, s6, dwLoc38, dwLoc28, dwLoc24, dwLoc1C, dwLoc18, dwArg08, dwArg28, dwArg98, dwArgA8, out s0_2247, out s1_2248, out a3, out a4, out s2_101, out s3_2249, out s4, out s5_2250, out s6_2251, out s7_2252, out mstatus)
l2306D610:
	word32 s1_2253
	word32 s3_2254
	word32 s6_2256
	word32 s7_2257
	word32 s5_2255
	ra = dhcp_check(ra, s0_730, s4_732, mstatus, dwLoc6C, s6, dwLoc38, dwLoc28, dwLoc0C, dwLoc08, dwArg08, 0xFFFFFFD<32>, dwArg20, dwArg24, dwArg28, s5, dwArg48, dwArg58, dwArg64, dwArg68, dwArg78, dwArg80, dwArg84, dwArg88, dwArgA8, dwArgF8, out s1_2253, out a3, out a4, out s2_101, out s3_2254, out s4, out s5_2255, out s6_2256, out s7_2257, out mstatus)
l2306D39A:
	word32 s3_2234
	word32 s0_2224
	word32 s8_2238
	word32 s6_2237
	word32 mstatus_2239
	word32 s1_2225
	word32 a7_2232
	word32 s2_2233
	word32 s4_2235
	word32 a4_2230
	word32 s5_2236
	word32 a5_2231
	word32 a1_2227
	word32 a2_2228
	word32 a3_2229
	word32 a0_2226
	pbuf_free(ra, s2_101, a3, a4, s4, mstatus, dwArgB8, out s0_2224, out s1_2225, out a0_2226, out a1_2227, out a2_2228, out a3_2229, out a4_2230, out a5_2231, out a7_2232, out s2_2233, out s3_2234, out s4_2235, out s5_2236, out s6_2237, out s8_2238, out mstatus_2239)
	return
dhcp_recv_exit:


word32 dhcp_network_changed(word32 ra, word32 s0, word32 s1, word32 a5, word32 s4, word32 s5, word32 mstatus, word32 dwArg14, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_set_link_up
// MayUse:  a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0014:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: mstatus ra s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_network_changed_entry:
l2306D782:
	branch a5 == 0<32> l2306D7AE
l2306D786:
	word32 a4_6 = CONVERT(Mem0[a5 + 5<i32>:byte], byte, word32)
	branch a4_6 >u 5<32> l2306D7A0
l2306D7A0:
	branch a4_6 != 0xA<32> l2306D798
l2306D790:
	branch a4_6 >=u 3<32> l2306D7A6
l2306D7A6:
	Mem11[a5 + 6<i32>:byte] = 0<8>
l2306D7AA_thunk_dhcp_reboot:
	word32 s6_215
	word32 mstatus_34
	word32 s0_36
	word32 s5_214
	word32 s4_213
	word32 s3_212
	word32 s2_211
	word32 a4_210
	word32 s1_209
	word32 ra_35 = dhcp_reboot(ra, s0, s1, a4_6, s4, s5, mstatus, dwArg14, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out s0_36, out s1_209, out a4_210, out s2_211, out s3_212, out s4_213, out s5_214, out s6_215, out mstatus_34)
	s0Out = s0_36
	mstatusOut = mstatus_34
	return ra_35
l2306D796:
	branch a4_6 == 0<32> l2306D7AE
l2306D7AE:
	s0Out = s0
	mstatusOut = mstatus
	return ra
l2306D798:
	Mem52[a5 + 6<i32>:byte] = 0<8>
l2306D79C_thunk_dhcp_discover:
	word32 mstatus_68
	word32 s0_70
	word32 s6_208
	word32 s5_207
	word32 s4_206
	word32 s2_204
	word32 s3_205
	word32 a5_203
	word32 a4_202
	word32 a3_201
	word32 a0_200
	word32 s1_199
	word32 ra_69 = dhcp_discover(ra, s0, s1, a4_6, s4, mstatus, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out s0_70, out s1_199, out a0_200, out a3_201, out a4_202, out a5_203, out s2_204, out s3_205, out s4_206, out s5_207, out s6_208, out mstatus_68)
	s0Out = s0_70
	mstatusOut = mstatus_68
	return ra_69
dhcp_network_changed_exit:


word32 dhcp_arp_reply(word32 ra, word32 s0, word32 a0, word32 s4, word32 mstatus, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[16..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a3 a4 mstatus ra s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
dhcp_arp_reply_entry:
l2306D7B0:
	branch a0 == 0<32> l2306D892
l2306D892:
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	mstatusOut = mstatus
	return ra
l2306D7B2:
	uint16 wLoc22_209 = SLICE(s4, uint16, 16)
	word32 a0_17 = Mem16[s0 + 40<i32>:word32]
	branch s0 == 0<32> l2306D882
l2306D7C4:
	a4 = CONVERT(Mem16[s0 + 5<i32>:byte], byte, word32)
	branch a4 != 8<32> l2306D882
l2306D7CE:
	word32 s0_21 = Mem16[0x24<32>:word32]
	branch a4 != 8<32> l2306D882
l2306D7D6:
	dhcp_set_state(s0_21, 0xC<32>)
	word32 s1_41
	word32 a0_55
	word32 s6_359
	word32 s5_358
	word32 s2_357
	word32 a5_356
	word32 a4_355
	word32 s0_151
	ra = dhcp_create_msg(ra, s0_21, a0_17, s0_21, fp + -34<i32>, a4, a0_17, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_151, out s1_41, out a0_55, out a3, out a4_355, out a5_356, out s2_357, out s3, out s4, out s5_358, out s6_359, out mstatus)
	branch a0_55 == 0<32> l2306D86A
l2306D7F2:
	word32 a5_58 = CONVERT(wLoc22_209, uint16, word32)
	word32 a0_57 = Mem16[s1_41 + 4<i32>:word32]
	Mem66[s1_41 + 240<i32> + a5_58:byte] = 0x32<8>
	Mem69[CONVERT(SLICE(a5_58 + 1<32>, word16, 0), word16, word32) + (s1_41 + 240<i32>):byte] = 4<8>
	word32 s3_71 = a5_58 + 2<i32> << 16<i32>
	word32 mstatus_96
	word32 s2_99
	word32 s4_101
	word32 s8_104
	word32 a3_124
	word32 a4_125
	word32 mstatus_129
	word32 s2_133
	word32 s4_135
	word32 a0_368
	word32 a1_369
	word32 a2_370
	word32 s1_367
	word32 s3_366
	word32 s6_365
	word32 s3_364
	word32 s1_363
	word32 a5_362
	word32 a4_361
	word32 a3_360
	word32 a4_371
	word32 a5_372
	word32 a7_373
	word32 s2_374
	word32 s5_375
	word32 s6_376
	word32 s8_377
	ra = pbuf_free(udp_sendto_if_src(dhcp_option_trailer(ra, Mem69[a0_57 + 28<i32>:word32], dhcp_option_long(s3_71 >>u 0x10<u32>, s1_41 + 240<i32>, lwip_htonl(a0_57, out a3_360, out a4_361, out a5_362)), s1_41 + 240<i32>, a0_55, a0_55, s3_71 >>u 0x10<u32>, s4, mstatus, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_363, out s2_99, out s3_364, out s4_101, out s6_365, out s8_104, out mstatus_96), Mem87[0x4200F5EC<32>:int32], s2_99, 0x230CBAE0<32>, 67<i32>, s4_101, 0x230CBADC<32>, s8_104, mstatus_96, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_124, out a4_125, out s2_133, out s3_366, out s4_135, out mstatus_129), s2_133, a3_124, a4_125, s4_135, mstatus_129, dwArgF8, out s0_151, out s1_367, out a0_368, out a1_369, out a2_370, out a3, out a4_371, out a5_372, out a7_373, out s2_374, out s3, out s4, out s5_375, out s6_376, out s8_377, out mstatus)
l2306D86A:
	word32 a5_176 = CONVERT(Mem175[s0_151 + 6<i32>:byte], byte, word32)
	a4 = 255<i32>
	branch a5_176 == 255<i32> l2306D87C
l2306D876:
	Mem179[s0_151 + 6<i32>:byte] = SLICE(a5_176 + 1<32>, byte, 0)
l2306D87C:
	Mem182[s0_151 + 8<i32>:word16] = 0x14<16>
l2306D882:
	0<32> = dwArg0128
	a3Out = a3
	a4Out = a4
	s3Out = s3
	s4Out = s4
	mstatusOut = mstatus
	return ra
dhcp_arp_reply_exit:


word32 dhcp_renew(word32 ra, word32 s0, word32 s1, word32 a4, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_coarse_tmr
// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: mstatus ra s0 s1 s3 s4
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s7 s9 sp
dhcp_renew_entry:
l2306D894:
	word32 a0_14 = Mem13[s1 + 40<i32>:word32]
	dhcp_set_state(s1, 5<32>)
	word32 a0_50
	word32 s5_380
	word32 s6_381
	word32 a5_378
	word32 s2_379
	word32 a3_376
	word32 a4_377
	word32 s0_375
	word32 s1_195
	word32 s4_200
	word32 s3_197
	word32 mstatus_209
	word32 ra_210 = dhcp_create_msg(ra, s0, a0_14, s1, fp + -34<i32>, a4, s4, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_375, out s1_195, out a0_50, out a3_376, out a4_377, out a5_378, out s2_379, out s3_197, out s4_200, out s5_380, out s6_381, out mstatus_209)
	branch a0_50 == 0<32> l2306D982
l2306D8BE:
	word32 a5_53 = CONVERT(wLoc22, uint16, word32)
	word32 a0_52 = Mem13[3<32>:word32]
	Mem62[a5_53 + 0xEF<32>:byte] = 0x39<8>
	Mem65[CONVERT(SLICE(a5_53 + 1<32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 2<8>
	word32 a0_71 = dhcp_option_short(CONVERT(SLICE(a5_53 + 2<i32>, word16, 0), word16, word32), 0xEF<32>, CONVERT(Mem65[s3_197 + 56<i32>:uint16], uint16, word32))
	Mem77[a0_71 + 0xEF<32>:byte] = 0x37<8>
	Mem83[CONVERT(SLICE(a0_71 + 1<i32>, word16, 0), word16, word32) + 0xEF<32>:byte] = 4<8>
	uint16 wLoc22_262 = SLICE(a0_71 + 2<32>, word16, 0)
	word32 a5_104 = 0x230CBAD8<32>
l2306D928:
	word32 a4_92 = CONVERT(wLoc22_262, uint16, word32)
	Mem102[a4_92 + 0xEF<32>:byte] = SLICE(CONVERT(Mem91[a5_104 + 0<32>:byte], byte, word32), byte, 0)
	word32 a0_98 = a4_92 + 1<i32> << 16<i32>
	wLoc22_262 = SLICE(a0_98 >>u 16<i32>, word16, 0)
	a5_104 = a5_104 + 1<32>
	branch a5_104 != 0xDCF3452C<32> l2306D928
l2306D94C:
	word32 a0_117
	word32 s8_382
	word32 s0_110 = dhcp_option_hostname.isra.0(a0_98 >>u 16<i32>, 0xEF<32>, dwArg14, out a0_117, out s8_382)
	word32 mstatus_135
	word32 s1_137
	word32 s2_138
	word32 s3_139
	word32 s8_143
	word32 a3_160
	word32 a4_161
	word32 mstatus_165
	word32 s2_169
	word32 s4_171
	word32 s6_384
	word32 s8_387
	word32 s7_386
	word32 a0_389
	word32 s0_388
	word32 a2_391
	word32 a1_390
	word32 a4_393
	word32 a3_392
	word32 s5_397
	word32 a5_394
	word32 a7_395
	word32 s6_398
	word32 s8_399
	word32 s2_396
	word32 s3_385
	word32 s4_383
	ra_210 = pbuf_free(udp_sendto_if(dhcp_option_trailer(ra_210, s0_110, a0_117, s0_110, a0_52, a0_52, s3_197, s4_200, mstatus_209, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_137, out s2_138, out s3_139, out s4_383, out s6_384, out s8_143, out mstatus_135), Mem123[0x4200F5EC<32>:int32], s2_138, s1_137 + 24<i32>, 67<i32>, s3_139, s8_143, mstatus_135, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_160, out a4_161, out s2_169, out s3_385, out s4_171, out s7_386, out s8_387, out mstatus_165), s2_169, a3_160, a4_161, s4_171, mstatus_165, dwArgF8, out s0_388, out s1_195, out a0_389, out a1_390, out a2_391, out a3_392, out a4_393, out a5_394, out a7_395, out s2_396, out s3_197, out s4_200, out s5_397, out s6_398, out s8_399, out mstatus_209)
l2306D982:
	word32 a5_213 = CONVERT(Mem212[s1_195 + 6<i32>:byte], byte, word32)
	branch a5_213 == 255<i32> l2306D994
l2306D98E:
	Mem216[s1_195 + 6<i32>:byte] = SLICE(a5_213 + 1<32>, byte, 0)
l2306D994:
	word32 a5_222
	word32 a5_219 = CONVERT(Mem218[s1_195 + 6<i32>:byte], byte, word32)
	branch a5_219 >u 9<32> l2306D9CA
l2306D9CA:
	a5_222 = 0x4FFFE20<32>
l2306D99E:
	a5_222 = CONVERT(SLICE(a5_219 + 2000<i32>, word16, 0), word16, word32)
l2306D9AA:
	Mem236[s1_195 + 8<i32>:word16] = SLICE(a5_222 + 499<i32> ^ 500<i32>, word16, 0)
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_195
	s3Out = s3_197
	s4Out = s4_200
	mstatusOut = mstatus_209
	return ra_210
dhcp_renew_exit:


word32 dhcp_supplied_address(word32 a0, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_stop
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
dhcp_supplied_address_entry:
l2306D9D2:
	branch a0 == 0<32> l2306D9F4
l2306D9F4:
l2306D9D4:
	branch a5 == 0<32> l2306D9F6
l2306D9F6:
	a4Out = a4
	a5Out = a5
	return 0<32>
l2306D9DA:
	word32 a5_9 = CONVERT(Mem0[a5 + 5<i32>:byte], byte, word32)
	word32 a0_11 = 1<32>
	branch a5_9 == 0xA<32> l2306D9EE
l2306D9E6:
	a0_11 = CONVERT(a5_9 <u -6<i32>, bool, word32)
l2306D9EE:
	a4Out = 0xA<32>
	a5Out = a5_9
	return a0_11 & 255<i32>
dhcp_supplied_address_exit:


word32 dhcp_release_and_stop(word32 ra, word32 s0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
//      dhcp_coarse_tmr
//      dhcp_fine_tmr
//      dhcp_stop
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_release_and_stop_entry:
	uint16 wLoc26 = SLICE(dwLoc28, uint16, 16)
	word16 wLoc28 = SLICE(dwLoc28, word16, 0)
l2306D9F8:
	word32 a0_16 = Mem15[s0 + 40<i32>:word32]
	branch s0 == 0<32> l2306DAF2
l2306DA0C:
	a5 = CONVERT(Mem15[s0 + 5<i32>:byte], byte, word32)
	branch a5 == 0<32> l2306DAF2
l2306DA14:
	word32 s0_18 = Mem15[a5 + 24<i32>:word32]
	Mem19[s0_18 + 28<i32>:word32] = 0<32>
	Mem20[s0_18 + 24<i32>:word32] = 0<32>
	Mem21[s0_18 + 32<i32>:word32] = 0<32>
	Mem22[s0_18 + 36<i32>:word32] = 0<32>
	Mem23[s0_18 + 48<i32>:word32] = 0<32>
	Mem24[s0_18 + 44<i32>:word32] = 0<32>
	Mem25[s0_18 + 40<i32>:word32] = 0<32>
	Mem26[s0_18 + 14<i32>:word16] = 0<16>
	Mem27[s0_18 + 16<i32>:word32] = 0<32>
	Mem28[s0_18 + 20<i32>:word16] = 0<16>
	word32 s1_163 = a0_16
	word32 dwLoc28_278 = dwLoc28
	word32 a5_162
	word32 a4_161
	branch dhcp_supplied_address(a0_16, a5, out a4_161, out a5_162) == 0<32> l2306DAC6
l2306DA48:
	word32 s0_48
	word32 a0_63
	word32 a3_367
	word32 s2_368
	word32 s3_369
	word32 s5_370
	word32 s6_371
	ra = dhcp_create_msg(ra, s0_18, a0_16, s0_18, fp + -38<i32>, a4_161, s4, mstatus, dwLoc0C, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_48, out s1_163, out a0_63, out a3_367, out a4_161, out a5_162, out s2_368, out s3_369, out s4, out s5_370, out s6_371, out mstatus)
	s3 = a0_63
	branch a0_63 == 0<32> l2306DAC6
l2306DA5A:
	word32 s2_65 = Mem30[a0_63 + 4<i32>:int32]
	word32 a5_66 = CONVERT(wLoc26, uint16, word32)
	Mem74[s2_65 + 240<i32> + a5_66:byte] = 0x36<8>
	Mem77[CONVERT(SLICE(a5_66 + 1<32>, word16, 0), word16, word32) + (s2_65 + 240<i32>):byte] = 4<8>
	word32 s4_79 = a5_66 + 2<i32> << 16<i32>
	word32 a3_372
	word32 a4_373
	word32 a5_374
	word32 a0_89 = dhcp_option_long(s4_79 >>u 0x10<u32>, s2_65 + 240<i32>, lwip_htonl(a0_63, out a3_372, out a4_373, out a5_374))
	word32 mstatus_104
	word32 s1_106
	word32 s3_108
	word32 s8_112
	word32 a3_129
	word32 a4_130
	word32 mstatus_134
	word32 s3_139
	word32 s4_140
	word32 s2_375
	word32 s4_376
	word32 s6_377
	word32 s2_378
	word32 s8_379
	word32 s0_380
	word32 a0_381
	word32 a1_382
	word32 a2_383
	word32 a3_384
	word32 a7_385
	word32 s2_386
	word32 s5_387
	word32 s6_388
	word32 s8_389
	ra = pbuf_free(udp_sendto_if(dhcp_option_trailer(ra, s0_48, a0_89, s2_65 + 240<i32>, a0_63, s2_65 + 240<i32>, a0_63, s4_79 >>u 0x10<u32>, mstatus, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_106, out s2_375, out s3_108, out s4_376, out s6_377, out s8_112, out mstatus_104), Mem95[0x4200F5EC<32>:int32], s3_108, fp + -36<i32>, 67<i32>, s1_106, s8_112, mstatus_104, s0, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out a3_129, out a4_130, out s2_378, out s3_139, out s4_140, out s7, out s8_379, out mstatus_134), s3_139, a3_129, a4_130, s4_140, mstatus_134, dwArgF8, out s0_380, out s1_163, out a0_381, out a1_382, out a2_383, out a3_384, out a4_161, out a5_162, out a7_385, out s2_386, out s3, out s4, out s5_387, out s6_388, out s8_389, out mstatus)
	dwLoc28_278 = SEQ(SLICE(a0_89, word16, 0), wLoc28) (alias)
l2306DAC6:
	word32 s0_205
	word32 a1_390
	word32 a2_391
	word32 a5_392
	ra = netif_set_addr(ra, s1_163, s1_163, 0x230CBADC<32>, 0x230CBADC<32>, 0x230CBADC<32>, a4_161, a5_162, s3, s4, s7, mstatus, dwLoc2C, dwLoc28_278, dwLoc18, dwLoc08, dwLoc04, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg88, dwArgF8, dwArg0108, out s0_205, out s1, out a1_390, out a2_391, out a3, out a4, out a5_392, out s2, out s3, out s4, out s5, out s6, out s7, out mstatus)
	dhcp_set_state(s0_205, 0<32>)
	a5 = CONVERT(Mem194[s0_205 + 4<i32>:byte], byte, word32)
	branch a5 == 0<32> l2306DAF2
l2306DAEA:
	s1 = dhcp_dec_pcb_refcount(s0_205, a3, mstatus, out a3, out a4, out a5)
	Mem236[s0_205 + 4<i32>:byte] = 0<8>
l2306DAF2:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
dhcp_release_and_stop_exit:


word32 dhcp_start(word32 ra, word32 a0, word32 a3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0178, ptr32 & s1Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_coarse_tmr
//      dhcp_fine_tmr
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
dhcp_start_entry:
l2306DB02:
	word32 s1_12 = 0xFFFFFFF0<32>
	branch a0 == 0<32> l2306DB6C
l2306DB10:
	word32 a5_14 = CONVERT(Mem11[a0 + 65<i32>:byte], byte, word32)
	s1_12 = 0xFFFFFFF0<32>
	a5 = a5_14 & 1<32>
	branch (a5_14 & 1<32>) == 0<32> l2306DB6C
l2306DB1A:
	a4 = CONVERT(Mem11[a0 + 56<i32>:uint16], uint16, word32)
	a5 = 575<i32>
	s2 = Mem11[a0 + 40<i32>:int32]
	branch a4 >u 575<i32> l2306DB2E
l2306DB2E:
	branch s2 != 0<32> l2306DB7A
l2306DB7A:
	branch CONVERT(Mem11[s2 + 4<i32>:byte], byte, word32) == 0<32> l2306DB42
l2306DB80:
	word32 a3_333
	word32 a4_334
	word32 a5_335
	dhcp_dec_pcb_refcount(a0, a3, mstatus, out a3_333, out a4_334, out a5_335)
l2306DB34:
	word32 a0_33
	word32 a1_319
	word32 a3_320
	word32 a7_321
	word32 s2_322
	word32 s8_323
	mem_malloc(ra, a0, 52<i32>, a3, a4, s2, mstatus, dwArg04, dwArg24, dwArg84, dwArgD8, dwArgF8, dwArg0118, dwArg0138, dwArg0178, out a0_33, out a1_319, out a3_320, out a4, out a5, out a7_321, out s2_322, out s3, out s4, out s5, out s6, out s8_323)
	s2 = a0_33
	branch a0_33 == 0<32> l2306DB2A
l2306DB40:
	Mem56[a0_33 + 40<i32>:word32] = a0
l2306DB42:
	word32 a0_62
	word32 a3_65
	word32 a4_66
	word32 a0_74
	word32 t1_329
	word32 a1_330
	word32 a2_331
	word32 a5_332
	ra = dhcp_inc_pcb_refcount(memset(ra, s2, 0<32>, 52<i32>, out t1_329, out a0_62, out a1_330, out a2_331, out a3_65, out a4_66, out a5_332), a0_62, a3_65, a4_66, mstatus, dwArg18, dwArg28, out a0_74, out a4, out a5, out s2)
	s1_12 = a0_74
	branch a0_74 != 0<32> l2306DB2A
l2306DB56:
	Mem90[s2 + 4<i32>:byte] = 1<8>
	branch (CONVERT(Mem90[a0 + 65<i32>:byte], byte, word32) & 4<32>) != 0<32> l2306DB86
l2306DB86:
	word32 a0_97
	word32 s0_107
	word32 s1_324
	word32 a3_325
	ra = dhcp_discover(ra, a0, a0_74, a4, s4, mstatus, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0128, out s0_107, out s1_324, out a0_97, out a3_325, out a4, out a5, out s2, out s3, out s4, out s5, out s6, out mstatus)
	s1_12 = a0_97
	branch a0_97 == 0<32> l2306DB6C
l2306DB90:
	word32 s0_326
	word32 s1_327
	word32 a3_328
	ra = dhcp_release_and_stop(ra, s0_107, s3, s4, s7, mstatus, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0128, out s0_326, out s1_327, out a3_328, out a4, out a5, out s2, out s3, out s4, out s5, out s6, out s7, out mstatus)
l2306DB64:
	a5 = dhcp_set_state(s2, 2<32>)
l2306DB2A:
	s1_12 = 0xFFFFFFFF<32>
l2306DB6C:
	0<32> = dwArg38
	s1Out = s1_12
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
dhcp_start_exit:


void dhcp_coarse_tmr(word32 ra, word32 s1, word32 s2, word32 s4, word32 s8, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0128, word32 dwArg0138, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] s8:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_coarse_tmr_entry:
l2306DB98:
	word32 a5_112 = 0x42026000<32>
	word32 s0_33 = Mem6[0x420267E8<32>:int32]
	uint16 wLoc32_521 = SLICE(s8, uint16, 16)
	word32 s3_140 = 1<32>
	word32 s4_141 = 0x2000710<32>
	word32 s7_255 = 0x230CC000<32>
	s1_138 = s1
l2306DBCE:
	word32 s1_138
	branch s0_33 != 0<32> l2306DBE8
l2306DBE8:
	word32 s0_346
	word32 s0_115 = Mem35[a5_112 + 40<i32>:word32]
	branch a5_112 == 0<32> l2306DC16
l2306DBEC:
	branch CONVERT(Mem35[a5_112 + 5<i32>:byte], byte, word32) == 0<32> l2306DC16
l2306DBF2:
	word32 a3_38 = CONVERT(Mem35[a5_112 + 20<i32>:uint16], uint16, word32)
	branch a3_38 == 0<32> l2306DC1A
l2306DBF8:
	word32 a4_41 = CONVERT(Mem35[a5_112 + 18<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem43[a5_112 + 18<i32>:word16] = SLICE(a4_41 >>u 16<i32>, word16, 0)
	branch a3_38 != a4_41 >>u 16<i32> l2306DC1A
l2306DC1A:
	word32 a4_46 = CONVERT(Mem45[a5_112 + 16<i32>:uint16], uint16, word32)
	branch a4_46 == 0<32> l2306DD66
l2306DC22:
	Mem48[a5_112 + 16<i32>:word16] = SLICE(a4_46 + -1<i32>, word16, 0)
	branch a4_46 != s3_140 l2306DD66
l2306DD66:
	word32 a4_53 = CONVERT(Mem52[a5_112 + 14<i32>:uint16], uint16, word32)
	branch a4_53 == 0<32> l2306DC16
l2306DD6E:
	Mem55[a5_112 + 14<i32>:word16] = SLICE(a4_53 + -1<i32>, word16, 0)
	branch a4_53 != s3_140 l2306DC16
l2306DD7A:
	a5_112 = CONVERT(Mem55[s1_138 + 5<i32>:byte], byte, word32)
	s0_115 = Mem55[s1_138 + 40<i32>:word32]
	word32 a4_62 = a5_112 & 251<i32>
	branch (a5_112 & 251<i32>) == s3_140 l2306DD8E
l2306DD88:
	a4_62 = 0xA<32>
	branch a5_112 != 0xA<32> l2306DC16
l2306DD8E:
	ra = dhcp_renew(ra, s0_115, s1_138, a4_62, s4_141, mstatus, s4, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, out s0_115, out s1_138, out s3_140, out s4_141, out mstatus)
	a5_112 = CONVERT(Mem55[s1_138 + 12<i32>:uint16] - Mem55[s1_138 + 18<i32>:uint16], uint16, uint16)
	branch s3_140 >= a5_112 l2306DC16
l2306DDA2:
	Mem114[s1_138 + 14<i32>:word16] = SLICE(a5_112 >> 1<i32>, word16, 0)
	a5_112 = a5_112 >> 1<i32>
l2306DC2E:
	s0_115 = Mem48[s1_138 + 40<i32>:word32]
	a5_112 = 0xA<32>
	word32 a4_117 = CONVERT(Mem48[s1_138 + 5<i32>:byte], byte, word32)
	branch a4_117 >u 0xA<32> l2306DC16
l2306DC3A:
	word32 a5_119 = 1074<i32> >>u a4_117
	a5_112 = a5_119 & 1<32>
	branch (a5_119 & 1<32>) == 0<32> l2306DC16
l2306DC46:
	dhcp_set_state(s1_138, 4<32>)
	word32 s5_142
	word32 a0_152
	word32 a5_982
	word32 a3_980
	word32 a4_981
	word32 s2_983
	word32 s6_984
	ra = dhcp_create_msg(ra, s0_115, s0_115, s1_138, fp + -50<i32>, a4_117, s4_141, mstatus, dwLoc1C, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s0_115, out s1_138, out a0_152, out a3_980, out a4_981, out a5_982, out s2_983, out s3_140, out s4_141, out s5_142, out s6_984, out mstatus)
	branch a0_152 == 0<32> l2306DD16
l2306DC60:
	word32 s2_154 = Mem48[a0_152 + 4<i32>:int32]
	word32 a5_155 = CONVERT(wLoc32_521, uint16, word32)
	Mem163[s2_154 + 240<i32> + a5_155:byte] = 0x39<8>
	Mem166[CONVERT(SLICE(a5_155 + 1<32>, word16, 0), word16, word32) + (s2_154 + 240<i32>):byte] = 2<8>
	word32 a0_172 = dhcp_option_short(CONVERT(SLICE(a5_155 + 2<i32>, word16, 0), word16, word32), s2_154 + 240<i32>, CONVERT(Mem166[s0_115 + 56<i32>:uint16], uint16, word32))
	Mem178[s2_154 + 240<i32> + a0_172:byte] = 0x37<8>
	Mem184[CONVERT(SLICE(a0_172 + 1<i32>, word16, 0), word16, word32) + (s2_154 + 240<i32>):byte] = 4<8>
	uint16 wLoc32_523 = SLICE(a0_172 + 2<32>, word16, 0)
	word32 a5_187 = 0<32>
l2306DCC2:
	word32 a4_191 = CONVERT(wLoc32_523, uint16, word32)
	Mem201[a4_191 + (s2_154 + 240<i32>):byte] = SLICE(CONVERT(Mem190[s5_142 + a5_187:byte], byte, word32), byte, 0)
	word32 a0_197 = a4_191 + 1<i32> << 16<i32>
	wLoc32_523 = SLICE(a0_197 >>u 16<i32>, word16, 0)
	a5_187 = a5_187 + 1<32>
	branch a5_187 != 4<32> l2306DCC2
l2306DCE6:
	word32 s8_210
	word32 a0_216
	word32 s0_209 = dhcp_option_hostname.isra.0(a0_197 >>u 16<i32>, s2_154 + 240<i32>, dwArg04, out a0_216, out s8_210)
	wLoc32_521 = SLICE(a0_216, word16, 0)
	word32 mstatus_234
	word32 s6_241
	word32 s8_242
	word32 a3_261
	word32 a4_262
	word32 mstatus_266
	word32 s4_272
	word32 s8_276
	word32 s3_990
	word32 a4_995
	word32 s6_1000
	word32 s2_986
	word32 s1_985
	word32 s3_987
	word32 s4_988
	word32 s2_989
	word32 a0_991
	word32 a1_992
	word32 a2_993
	word32 s2_998
	word32 a3_994
	word32 a5_996
	word32 a7_997
	word32 s5_999
	word32 s8_1001
	ra = pbuf_free(udp_sendto_if(dhcp_option_trailer(ra, s0_209, a0_216, s2_154 + 240<i32>, s8_210, s2_154 + 240<i32>, s3_140, s4_141, mstatus, s4, s1, dwArg88, dwArgA8, dwArgC8, dwArgD8, dwArgE8, dwArg0128, out s1_985, out s2_986, out s3_987, out s4_988, out s6_241, out s8_242, out mstatus_234), Mem221[s6_241 + 1516<i32>:int32], s8_242, s7_255 + -1312<i32>, 67<i32>, s0_209, s8_242, mstatus_234, s4, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out a3_261, out a4_262, out s2_989, out s3_990, out s4_272, out s7_255, out s8_276, out mstatus_266), s8_276, a3_261, a4_262, s4_272, mstatus_266, dwArgE8, out s0_115, out s1_138, out a0_991, out a1_992, out a2_993, out a3_994, out a4_995, out a5_996, out a7_997, out s2_998, out s3_140, out s4_141, out s5_999, out s6_1000, out s8_1001, out mstatus)
l2306DD16:
	word32 a5_313 = CONVERT(Mem312[s1_138 + 6<i32>:byte], byte, word32)
	branch a5_313 == 255<i32> l2306DD28
l2306DD22:
	Mem316[s1_138 + 6<i32>:byte] = SLICE(a5_313 + 1<32>, byte, 0)
l2306DD28:
	word32 a4_319 = CONVERT(Mem318[s1_138 + 6<i32>:byte], byte, word32)
	word32 a5_323 = s4_141
	branch a4_319 >u 9<32> l2306DD40
l2306DD34:
	a5_323 = CONVERT(SLICE(a4_319 + 1000<i32>, word16, 0), word16, word32)
l2306DD40:
	word32 a4_334 = CONVERT(Mem318[s1_138 + 18<i32>:uint16], uint16, word32)
	Mem335[s1_138 + 8<i32>:word16] = SLICE(a5_323 + 499<i32> ^ 500<i32>, word16, 0)
	a5_112 = CONVERT(Mem335[s1_138 + 20<i32>:uint16], uint16, word32) - a4_334
	branch s3_140 >= a5_112 l2306DC16
l2306DD5E:
	Mem342[s1_138 + 16<i32>:word16] = SLICE(a5_112 >> 1<i32>, word16, 0)
	a5_112 = a5_112 >> 1<i32>
l2306DC0A:
	word32 a3_352
	word32 mstatus_356
	word32 s4_363
	word32 s7_366
	word32 s2_977
	word32 a4_970
	word32 s2_972
	word32 a5_971
	word32 s1_969
	word32 s5_974
	word32 s6_975
	word32 s3_973
	word32 s5_978
	word32 a4_976
	word32 s6_979
	ra = dhcp_start(dhcp_release_and_stop(ra, s0_115, s3_140, s4_141, s7_255, mstatus, s4, s2, dwLoc18, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, out s0_346, out s1_969, out a3_352, out a4_970, out a5_971, out s2_972, out s3_973, out s4_363, out s5_974, out s6_975, out s7_366, out mstatus_356), s0_346, a3_352, s4_363, s7_366, mstatus_356, dwLoc3C, dwLoc38, s2, dwLoc1C, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg38, dwArg44, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_138, out a4_976, out a5_112, out s2_977, out s3_140, out s4_141, out s5_978, out s6_979, out s7_255, out mstatus)
	s0_115 = s0_346
l2306DC16:
	s0_33 = Mem408[s0_115:word32]
l2306DBD0:
	0<32> = dwArg0198
	return
dhcp_coarse_tmr_exit:


void dhcp_fine_tmr(word32 ra, word32 s0, word32 s1, word32 a4, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg34, word32 dwArg38, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgC8, word32 dwArgD0, word32 dwArgD4, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0118, word32 dwArg0148, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0118:[0..31] Stack +0148:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_fine_tmr_entry:
l2306DDAA:
	word32 s0_262 = Mem6[0x420267E8<32>:int32]
	word32 s1_113 = 1<32>
	word32 s2_114 = 0xC<32>
	word32 s3_115 = 6<32>
	word32 s4_116 = 8<32>
	word32 s5_117 = 3<32>
	word32 s6_118 = 5<32>
l2306DDD0:
	branch s0_262 != 0<32> l2306DDE6
l2306DDE6:
	word32 s0_135
	word32 s0_193 = Mem30[a4 + 40<i32>:word32]
	branch a4 == 0<32> l2306DDF8
l2306DDEA:
	word32 a5_32 = CONVERT(Mem30[a4 + 8<i32>:uint16], uint16, word32)
	branch s1_113 >=u a5_32 l2306DDFC
l2306DDFC:
	branch a5_32 != s1_113 l2306DDF8
l2306DE00:
	Mem34[a4 + 8<i32>:word16] = 0<16>
	s0_193 = Mem34[a4 + 40<i32>:word32]
	word32 a5_36 = CONVERT(Mem34[a4 + 5<i32>:byte], byte, word32)
	branch a5_36 == s2_114 l2306DE12
l2306DE0E:
	branch a5_36 != s3_115 l2306DE1A
l2306DE1A:
	branch a5_36 != s1_113 l2306DE3A
l2306DE3A:
	branch a5_36 != s4_116 l2306DE54
l2306DE54:
	branch a5_36 != s5_117 l2306DDF8
l2306DE58:
	branch s1_113 <u CONVERT(Mem34[a4 + 6<i32>:byte], byte, word32) l2306DE14
l2306DE62:
	ra = dhcp_reboot(ra, s0_193, s1_113, a4, s4_116, s5_117, mstatus, dwLoc0C, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s0_193, out s1_113, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out mstatus)
l2306DE3E:
	word32 a5_71 = CONVERT(Mem34[a4 + 6<i32>:byte], byte, word32)
	branch s1_113 <u a5_71 l2306DE4E
l2306DE4E:
	word32 a3_548
	ra = dhcp_bind(ra, s0_193, s1_113, s0_193, a5_71, s3_115, s4_116, s7, mstatus, s2, s0, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg34, dwArg38, dwArg58, dwArg78, dwArgE8, dwArgF8, out s0_193, out s1_113, out a3_548, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7, out mstatus)
l2306DE48:
	word32 a3_549
	ra = dhcp_check(ra, s0_193, s4_116, mstatus, s4, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg58, s1, dwArg70, dwArg74, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB4, dwArgB8, dwArgC8, dwArgD0, dwArgD4, dwArgD8, dwArgF8, dwArg0148, out s1_113, out a3_549, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7, out mstatus)
l2306DE1E:
	branch s6_118 <u CONVERT(Mem34[a4 + 6<i32>:byte], byte, word32) l2306DE2E
l2306DE2E:
	word32 a3_141
	word32 mstatus_145
	word32 s4_152
	word32 s7_155
	word32 s2_542
	word32 s1_539
	word32 a4_540
	word32 a5_541
	word32 s3_543
	word32 s5_544
	word32 s6_545
	word32 a5_546
	ra = dhcp_start(dhcp_release_and_stop(ra, s0_193, s3_115, s4_116, s7, mstatus, dwLoc0C, dwLoc08, dwArg08, dwArg18, dwArg1C, dwArg24, dwArg28, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s0_135, out s1_539, out a3_141, out a4_540, out a5_541, out s2_542, out s3_543, out s4_152, out s5_544, out s6_545, out s7_155, out mstatus_145), s0_135, a3_141, s4_152, s7_155, mstatus_145, s4, s2, dwLoc08, dwArg04, dwArg08, dwArg0C, dwArg14, dwArg18, dwArg28, dwArg38, dwArg48, dwArg58, s3, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgF8, dwArg0108, dwArg0118, dwArg0158, out s1_113, out a4, out a5_546, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out s7, out mstatus)
	s0_193 = s0_135
l2306DE28:
	word32 a3_547
	ra = dhcp_select(ra, s0_193, s1_113, s0_193, a4, s4_116, s5_117, mstatus, dwLoc0C, dwArg28, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s0_193, out s1_113, out a3_547, out a4, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out mstatus)
l2306DE12:
l2306DE14:
	word32 a0_550
	word32 a3_551
	word32 a5_552
	ra = dhcp_discover(ra, s0_193, s1_113, a4, s4_116, mstatus, dwArg38, dwArg48, dwArg58, s1, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArg0108, dwArg0118, out s0_193, out s1_113, out a0_550, out a3_551, out a4, out a5_552, out s2_114, out s3_115, out s4_116, out s5_117, out s6_118, out mstatus)
l2306DDF2:
	Mem259[a4 + 8<i32>:word16] = SLICE(a5_32 + 0xFFFFFFFF<32>, word16, 0)
l2306DDF8:
	s0_262 = Mem261[s0_193:word32]
l2306DDD2:
	0<32> = dwArgA8
	return
dhcp_fine_tmr_exit:


word32 dhcp_stop(word32 ra, word32 s0, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0138, ptr32 & s1Out, ptr32 & s3Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcpd_start
// MayUse:  mstatus:[0..31] ra:[0..31] s0:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: mstatus ra s1 s3 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
dhcp_stop_entry:
l2306DE68:
l2306DE68_thunk_dhcp_release_and_stop:
	word32 mstatus_22
	word32 s1_24
	word32 s3_28
	word32 s7_32
	word32 s0_64
	word32 a3_65
	word32 a4_66
	word32 a5_67
	word32 s2_68
	word32 s4_69
	word32 s5_70
	word32 s6_71
	word32 ra_23 = dhcp_release_and_stop(ra, s0, s3, s4, s7, mstatus, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0108, dwArg0128, dwArg0138, out s0_64, out s1_24, out a3_65, out a4_66, out a5_67, out s2_68, out s3_28, out s4_69, out s5_70, out s6_71, out s7_32, out mstatus_22)
	s1Out = s1_24
	s3Out = s3_28
	s7Out = s7_32
	mstatusOut = mstatus_22
	return ra_23
dhcp_stop_exit:


word32 etharp_free_entry(word32 ra, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArg38, word32 dwArg0118, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_find_entry
//      etharp_cleanup_netif
//      etharp_tmr
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0038:[0..31] Stack +0118:[0..31]
// LiveOut: a0 a3 mstatus ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
etharp_free_entry_entry:
l2306DE6C:
	word32 s1_17 = a0
	word32 s0_18 = 0x4201B0B8<32>
	word32 s2_19 = a0 + 0x4201B0D0<32>
	word32 a0_20 = Mem16[a0 + 0x4201B0D0<32>:int32]
	branch a0_20 == 0<32> l2306DE9A
l2306DE92:
	word32 a1_115
	word32 a2_116
	word32 a4_117
	word32 a5_118
	word32 a7_119
	word32 s8_120
	ra = pbuf_free(ra, a0_20, a3, a0 + 0x18<32>, s4, mstatus, dwArg0118, out s0_18, out s1_17, out a0_20, out a1_115, out a2_116, out a3, out a4_117, out a5_118, out a7_119, out s2_19, out s3, out s4, out s5, out s6, out s8_120, out mstatus)
	Mem49[s2_19:word32] = 0<32>
l2306DE9A:
	Mem55[s1_17 + 0x18<32> + s0_18 + 20<i32>:byte] = 0<8>
	0<32> = dwArg38
	s1Out = s1_17
	a0Out = a0_20
	a3Out = a3
	s2Out = s2_19
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
etharp_free_entry_exit:


word32 etharp_find_entry(word32 ra, word32 a0, word32 a1, word32 a2, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArgF8, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_query
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a3 mstatus ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
etharp_find_entry_entry:
l2306DEB2:
	word32 a3_145 = 0x4201B0B8<32>
	word32 t0_16 = 0<32>
	word32 t6_17 = 0<32>
	word32 t5_18 = 0<32>
	word32 t1_105 = 0xA<32>
	word32 a5_185 = 0<32>
	word32 a4_161 = 0xA<32>
	word32 a7_22 = 0xA<32>
	word32 s1_100 = 0xA<32>
	word32 s0_180 = 0x4201B0B8<32>
l2306DEDE:
	word32 t4_29 = CONVERT(Mem15[a3_145 + 20<i32>:byte], byte, word32)
	branch a4_161 != 0xA<32> l2306DF1C
l2306DF1C:
	branch t4_29 != 0<32> l2306DEEA
l2306DEE6:
	branch t4_29 == 0<32> l2306DFA4
l2306DFA4:
	a4_161 = a5_185
l2306DEEA:
	branch a0 == 0<32> l2306DF02
l2306DEEC:
	s2 = Mem15[a0:int32]
	branch s2 != Mem15[a3_145 + 4<i32>:int32] l2306DF02
l2306DEF8:
	branch a2 == 0<32> l2306DF80
l2306DEFA:
	branch Mem15[a3_145 + 8<i32>:int32] == a2 l2306DF80
l2306DF02:
	word32 a6_45 = CONVERT(Mem15[a3_145 + 18<i32>:uint16], uint16, word32)
	branch t4_29 != 1<32> l2306DF9A
l2306DF9A:
	branch a6_45 <u t0_16 l2306DF20
l2306DF9E:
	t0_16 = a6_45
	a7_22 = a5_185
l2306DF0A:
	branch Mem15[a3_145:int32] == 0<32> l2306DF90
l2306DF90:
	branch a6_45 <u t6_17 l2306DF20
l2306DF94:
	t6_17 = a6_45
	s1_100 = a5_185
l2306DF12:
	branch a6_45 <u t5_18 l2306DF20
l2306DF16:
	t5_18 = a6_45
	t1_105 = a5_185
l2306DF20:
	word32 a6_72 = CONVERT(SLICE(a5_185 + 1<32>, word16, 0), word16, word32)
	a3_145 = a3_145 + 0x18<32>
	a5_185 = CONVERT(SLICE(a6_72, word16, 0), word16, int32)
	branch a6_72 != 0xA<32> l2306DEDE
l2306DF36:
	a3_145 = 1<32>
	a5_185 = 0xFFFFFFFF<32>
	branch a1 != 1<32> l2306DF80
l2306DF3E:
	s3 = a2
	s2 = a0
	branch a4_161 != 0xA<32> l2306DF5C
l2306DF46:
	branch a7_22 != a4_161 l2306DFA8
l2306DFA8:
	s1_100 = a7_22
l2306DF4A:
	branch s1_100 != a7_22 l2306DF54
l2306DF4E:
	branch t1_105 == s1_100 l2306DF80
l2306DF52:
	s1_100 = t1_105
l2306DF54:
	word32 a0_351
	word32 s4_352
	ra = etharp_free_entry(ra, s1_100, 1<32>, s4, mstatus, dwArg18, dwArgF8, out s1_100, out a0_351, out a3_145, out s2, out s3, out s4_352, out s5, out s6, out mstatus)
	a4_161 = s1_100
l2306DF5C:
	branch s2 == 0<32> l2306DF6E
l2306DF60:
	a3_145 = Mem15[s2:int32]
	Mem175[a3_145 + 4<i32>:word32] = a4_161 + 0x4201B0D0<32>
l2306DF6E:
	word32 a5_178 = a4_161 + 0x18<32>
	Mem181[a5_178 + 0x4201B0CA<32>:word16] = 0<16>
	Mem184[a5_178 + 0x4201B0C0<32>:word32] = s3
	s0_180 = a5_178 + 0x4201B0B8<32>
	a5_185 = a4_161
l2306DF80:
	s0Out = s0_180
	s1Out = s1_100
	a0Out = a5_185
	a3Out = a3_145
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	mstatusOut = mstatus
	return ra
etharp_find_entry_exit:


word32 etharp_raw(word32 ra, word32 s0, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_request
//      etharp_output_to_arp_index
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s8 sp
etharp_raw_entry:
l2306DFAC:
	word32 a0_213
	word32 a0_47
	word32 s0_52
	word32 s1_53
	word32 s8_54
	word32 s4_60
	word32 a7_62
	word32 a2_312
	word32 a5_313
	word32 s3_199
	word32 s2_198
	word32 mstatus_211
	word32 a4_195
	word32 a3_194
	word32 a1_193
	word32 s5_203
	word32 s6_204
	word32 ra_212 = pbuf_alloc(ra, s0, 0x42026000<32>, 142<i32>, 0x1C<32>, 640<i32>, a3, a4, mstatus, dwLoc3C, dwArg04, dwArg68, dwArg78, dwArg98, dwArgA8, dwArgB8, dwArgD8, dwArgE8, dwArg0118, out s0_52, out s1_53, out a0_47, out a1_193, out a2_312, out a3_194, out a4_195, out a5_313, out a7_62, out s2_198, out s3_199, out s4_60, out s5_203, out s6_204, out s8_54, out mstatus_211)
	word32 s1_197 = s1_53 + 2032<i32>
	branch a0_47 != 0<32> l2306E014
l2306E014:
	word32 a0_74 = Mem36[s0_52 + 4<i32>:word32]
	word32 a5_314
	word32 a0_77 = lwip_htons(a7_62, out a5_314)
	Mem79[s0_52 + 6<i32>:byte] = SLICE(a0_77, byte, 0)
	Mem81[s0_52 + 7<i32>:byte] = SLICE(a0_77 >>u 8<i32>, byte, 0)
	word32 a1_315
	word32 a2_316
	word32 a3_317
	word32 a4_318
	word32 a5_319
	word32 a6_320
	word32 a7_321
	memcpy(s0_52 + 8<i32>, a3, 6<32>, out a1_315, out a2_316, out a3_317, out a4_318, out a5_319, out a6_320, out a7_321)
	word32 a1_322
	word32 a2_323
	word32 a3_324
	word32 a4_325
	word32 a5_326
	word32 a6_327
	word32 a7_328
	memcpy(s0_52 + 18<i32>, s8_54, 6<32>, out a1_322, out a2_323, out a3_324, out a4_325, out a5_326, out a6_327, out a7_328)
	word32 a1_329
	word32 a2_330
	word32 a3_331
	word32 a4_332
	word32 a5_333
	word32 a6_334
	word32 a7_335
	memcpy(s0_52 + 14<i32>, a4, 4<32>, out a1_329, out a2_330, out a3_331, out a4_332, out a5_333, out a6_334, out a7_335)
	word32 a1_336
	word32 a2_337
	word32 a3_338
	word32 a4_339
	word32 a5_340
	word32 a6_341
	word32 a7_342
	memcpy(s0_52 + 24<i32>, s6_204, 4<32>, out a1_336, out a2_337, out a3_338, out a4_339, out a5_340, out a6_341, out a7_342)
	Mem147[s0_52 + 1<i32>:byte] = 1<8>
	Mem149[s0_52 + 2<i32>:byte] = 8<8>
	Mem151[s0_52 + 4<i32>:byte] = 6<8>
	Mem154[s0_52 + 5<i32>:byte] = 4<8>
	Mem159[s0_52:byte] = 0<8>
	Mem160[s0_52 + 3<i32>:byte] = 0<8>
	word32 a3_165
	word32 a4_166
	word32 s1_169
	word32 s2_170
	word32 s4_172
	word32 s0_343
	word32 s3_344
	word32 ra_178 = ethernet_output(ra_212, s3_199, a0_74, s4_60, 0xFFF806<32>, dwLoc08, dwArg18, dwArg34, dwArgA4, dwArgC0, dwArgC4, dwArgE8, out s0_343, out s1_169, out a3_165, out a4_166, out s2_170, out s3_344, out s4_172)
	Mem187[s1_169 + 24<i32>:word16] = SLICE(CONVERT(Mem160[s1_169 + 24<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s0_345
	word32 a0_346
	word32 a2_347
	word32 a5_348
	word32 a7_349
	word32 s4_350
	word32 s8_351
	ra_212 = pbuf_free(ra_178, s2_170, a3_165, a4_166, s4_172, mstatus_211, dwArgE8, out s0_345, out s1_197, out a0_346, out a1_193, out a2_347, out a3_194, out a4_195, out a5_348, out a7_349, out s2_198, out s3_199, out s4_350, out s5_203, out s6_204, out s8_351, out mstatus_211)
	a0_213 = 0<32>
l2306DFEE:
	Mem217[s1_53 + 2068<i32>:word16] = SLICE(CONVERT(Mem36[s1_53 + 2068<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	a0_213 = 0xFFFFFFFF<32>
l2306DFFA:
	0<32> = dwArg0198
	s0Out = dwArg0158
	s1Out = s1_197
	a0Out = a0_213
	a1Out = a1_193
	a3Out = a3_194
	a4Out = a4_195
	s2Out = s2_198
	s3Out = s3_199
	s4Out = dwLoc14
	s5Out = s5_203
	s6Out = s6_204
	s7Out = a4
	mstatusOut = mstatus_211
	return ra_212
etharp_raw_exit:


word32 etharp_cleanup_netif(word32 ra, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArgF8, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_set_down
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +00F8:[0..31]
// LiveOut: s0 s4
// Trashed: a2 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: a0 a1 a3 a4 a7 mstatus ra s5 s6 sp t0 t1 t4 t5 t6 tp
etharp_cleanup_netif_entry:
l2306E09E:
	word32 s3_16 = a0
	word32 s0_17 = 0x4201B0B8<32>
	word32 s1_18 = 0<32>
	word32 s2_19 = 0xA<32>
l2306E0B8:
	word32 a5_22 = CONVERT(Mem14[s0_17 + 20<i32>:byte], byte, word32)
	branch a5_22 == 0<32> l2306E0CA
l2306E0BE:
	s0_17 = Mem14[a5_22 + 8<i32>:word32]
	branch a5_22 != s3_16 l2306E0CA
l2306E0C4:
	word32 a0_141
	word32 s5_142
	word32 s6_143
	ra = etharp_free_entry(ra, s1_18, a3, s4, mstatus, dwArg18, dwArgF8, out s1_18, out a0_141, out a3, out s2_19, out s3_16, out s4, out s5_142, out s6_143, out mstatus)
l2306E0CA:
	s1_18 = s1_18 + 1<32>
	s0_17 = s0_17 + 0x18<32>
	branch s1_18 != s2_19 l2306E0B8
l2306E0D2:
	s4Out = dwArg04
	return s0_17
etharp_cleanup_netif_exit:


void etharp_input(word32 ra, word32 s1, word32 a1, word32 a3, word32 s2, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg64, word32 dwArg68, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0158, word32 dwArg0198)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ethernet_input
// MayUse:  a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0158:[0..31] Stack +0198:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp t2
etharp_input_entry:
l2306E0E0:
	branch a1 == 0<32> l2306E278
l2306E278:
	return
l2306E0E4:
	word32 s3_130 = Mem22[s1 + 4<i32>:word32]
	word32 a4_227 = 256<i32>
	word32 s2_120 = 0x420267F0<32>
	branch (CONVERT(Mem22[s1 + 1<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem22[s1:byte], byte, word32)) != 256<i32> l2306E140
l2306E11A:
	a4_227 = CONVERT(Mem22[s1 + 4<i32>:byte], byte, word32)
	branch a4_227 != 6<32> l2306E140
l2306E124:
	a4_227 = CONVERT(Mem22[s1 + 5<i32>:byte], byte, word32)
	branch a4_227 != 4<32> l2306E140
l2306E12E:
	a4_227 = 8<32>
	branch (CONVERT(Mem22[s1 + 3<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem22[s1 + 2<i32>:byte], byte, word32)) == 8<32> l2306E170
l2306E170:
	word32 s5_134
	word32 s6_101
	Mem47[0x4202680A<32>:word16] = SLICE(CONVERT(Mem22[0x4202680A<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a2_594
	word32 a1_593
	word32 a3_595
	word32 a7_599
	word32 a4_596
	word32 a5_597
	word32 a6_598
	memcpy(fp + -56<i32>, s1 + 14<i32>, 4<32>, out a1_593, out a2_594, out a3_595, out a4_596, out a5_597, out a6_598, out a7_599)
	word32 a4_64
	word32 a5_65
	word32 a7_603
	word32 a2_601
	word32 a6_602
	word32 a1_600
	memcpy(fp + -52<i32>, s1 + 24<i32>, 4<32>, out a1_600, out a2_601, out a3, out a4_64, out a5_65, out a6_602, out a7_603)
	s4 = s1 + 8<i32>
	branch a5_65 == 0<32> l2306E1A0
l2306E19A:
	branch a5_65 == a4_64 l2306E248
l2306E248:
	s5_134 = 1<32>
	s6_101 = 1<32>
l2306E1A0:
	s5_134 = 0<32>
	s6_101 = 2<32>
l2306E1A4:
	word32 s1_119
	word32 s0_118 = dwArg04
	s1_119 = s1
	branch fp == 0xFFFFFFCC<32> l2306E220
l2306E1A8:
	s1_119 = s1
	word32 a5_95
	word32 a4_604
	branch ip4_addr_isbroadcast_u32(fp + -52<i32>, dwArg04, out a3, out a4_604, out a5_95) != 0<32> l2306E220
l2306E1B0:
	s0_118 = dwArgA4
	s1_119 = s1
	branch (a5_95 & 240<i32>) == 224<i32> l2306E220
l2306E1BE:
	word32 a0_111
	word32 s6_605
	ra = etharp_find_entry(ra, fp + -56<i32>, s6_101, dwArgA4, s1 + 8<i32>, mstatus, s2, dwArgB8, out s0_118, out s1_119, out a0_111, out a3, out s2_120, out s3_130, out s4, out s5_134, out s6_605, out mstatus)
	branch a0_111 < 0<32> l2306E220
l2306E1CC:
	Mem146[a0_111 + 0x4201B0E4<32>:byte] = 2<8>
	Mem147[a0_111 + 0x4201B0D8<32>:word32] = s0_118
	word32 a5_609
	word32 a6_610
	word32 a7_611
	word32 a1_606
	word32 a2_607
	word32 a4_608
	memcpy(a0_111 + 0x4201B0DC<32>, s4, 6<32>, out a1_606, out a2_607, out a3, out a4_608, out a5_609, out a6_610, out a7_611)
	word32 s7_162 = Mem147[a0_111 + 0x4201B0D0<32>:int32]
	Mem163[a0_111 + 0x4201B0E2<32>:word16] = 0<16>
	branch s7_162 == 0<32> l2306E220
l2306E202:
	Mem165[a0_111 + 0x4201B0D0<32>:word32] = 0<32>
	word32 a3_174
	word32 a4_175
	word32 s4_181
	word32 a7_621
	word32 s6_622
	word32 s8_623
	word32 a2_618
	word32 a4_619
	word32 a5_620
	word32 s3_615
	word32 a0_616
	word32 a1_617
	word32 s0_612
	word32 s1_613
	word32 s2_614
	ra = pbuf_free(ethernet_output(ra, s0_118, s7_162, s0_118 + 58<i32>, 0xFFF800<32>, dwLoc08, dwArg18, dwArg34, dwArgA4, dwArgC0, dwArgC4, dwArgE8, out s0_612, out s1_613, out a3_174, out a4_175, out s2_614, out s3_615, out s4_181), s7_162, a3_174, a4_175, s4_181, mstatus, dwArgE8, out s0_118, out s1_119, out a0_616, out a1_617, out a2_618, out a3, out a4_619, out a5_620, out a7_621, out s2_120, out s3_130, out s4, out s5_134, out s6_622, out s8_623, out mstatus)
l2306E220:
	word32 a5_226 = CONVERT(Mem222[s1_119 + 7<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem222[s1_119 + 6<i32>:byte], byte, word32)
	a4_227 = 256<i32>
	branch a5_226 == 256<i32> l2306E24E
l2306E24E:
	branch s5_134 == 0<32> l2306E154
l2306E252:
	word32 s7_647
	word32 s5_645
	word32 s6_646
	word32 a0_642
	word32 a1_643
	word32 s2_644
	word32 s0_640
	word32 s1_641
	ra = etharp_raw(ra, s0_118, s0_118 + 58<i32>, s0_118 + 4<i32>, mstatus, dwLoc3C, s2, dwLoc0C, dwArg28, dwArg38, s1, dwArg64, dwArg68, dwArg78, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgD8, dwArg0158, out s0_640, out s1_641, out a0_642, out a1_643, out a3, out a4_227, out s2_644, out s3_130, out s4, out s5_645, out s6_646, out s7_647, out mstatus)
l2306E234:
	a4_227 = 512<i32>
	branch a5_226 == 512<i32> l2306E26E
l2306E26E:
	ra = dhcp_arp_reply(ra, s0_118, s0_118, s4, mstatus, dwArg08, dwArg18, dwArg28, dwArg38, dwArg48, s1, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, out a3, out a4_227, out s3_130, out s4, out mstatus)
l2306E23C:
	Mem302[s2_120 + 44<i32>:word16] = SLICE(CONVERT(Mem222[s2_120 + 44<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E140:
	Mem307[0x42026818<32>:word16] = SLICE(CONVERT(Mem22[0x42026818<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem310[0x4202680E<32>:word16] = SLICE(CONVERT(Mem307[0x4202680E<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E154:
	word32 mstatus_639
	word32 s5_636
	word32 s6_637
	word32 s8_638
	word32 s2_633
	word32 s3_634
	word32 s4_635
	word32 a4_630
	word32 a5_631
	word32 a7_632
	word32 a1_627
	word32 a2_628
	word32 a3_629
	word32 s0_624
	word32 s1_625
	word32 a0_626
	pbuf_free(ra, s3_130, a3, a4_227, s4, mstatus, dwArgE8, out s0_624, out s1_625, out a0_626, out a1_627, out a2_628, out a3_629, out a4_630, out a5_631, out a7_632, out s2_633, out s3_634, out s4_635, out s5_636, out s6_637, out s8_638, out mstatus_639)
	0<32> = dwArg0198
	return
etharp_input_exit:


word32 etharp_request(word32 ra, word32 s0, word32 a0, word32 mstatus, word32 dwArg04, word32 dwArg18, word32 dwArg34, word32 dwArg68, word32 dwArg78, word32 dwArg98, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC0, word32 dwArgC4, word32 dwArgD8, word32 dwArgE8, word32 dwArg0118, word32 dwArg0198, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_tmr
//      etharp_output_to_arp_index
//      etharp_query
//      netif_issue_reports
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0004:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C0:[0..31] Stack +00C4:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +0118:[0..31] Stack +0198:[0..31]
// LiveOut: a0 a1 a3 a4 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
etharp_request_entry:
l2306E27A:
l2306E298_thunk_etharp_raw:
	word32 a0_18
	word32 a1_19
	word32 a3_21
	word32 a4_22
	word32 mstatus_26
	word32 s0_28
	word32 s1_29
	word32 s2_30
	word32 s3_31
	word32 s4_32
	word32 s5_33
	word32 s6_34
	word32 s7_35
	word32 ra_27 = etharp_raw(ra, s0, a0 + 58<i32>, a0 + 4<i32>, mstatus, dwArg04, dwArg18, dwArg34, dwArg68, dwArg78, dwArg98, dwArgA4, dwArgA8, dwArgB8, dwArgC0, dwArgC4, dwArgD8, dwArgE8, dwArg0118, dwArg0198, out s0_28, out s1_29, out a0_18, out a1_19, out a3_21, out a4_22, out s2_30, out s3_31, out s4_32, out s5_33, out s6_34, out s7_35, out mstatus_26)
	s0Out = s0_28
	s1Out = s1_29
	a0Out = a0_18
	a1Out = a1_19
	a3Out = a3_21
	a4Out = a4_22
	s2Out = s2_30
	s3Out = s3_31
	s4Out = s4_32
	s5Out = s5_33
	s6Out = s6_34
	s7Out = s7_35
	mstatusOut = mstatus_26
	return ra_27
etharp_request_exit:


void etharp_tmr(word32 ra, word32 a0, word32 a3, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg38, word32 dwArg48, word32 dwArg68, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90, word32 dwArg94, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8, word32 dwArg0128, word32 dwArg0168)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut:
// Trashed: a2 a4 a6 s0 s1 s2 s3 s4 s5 s6 s7 s8 t3 tp
// Preserved: a0 a1 a3 a5 a7 mstatus ra s9 sp t0 t1 t4 t5 t6
etharp_tmr_entry:
l2306E29C:
	word32 s0_114 = 0x4201B0B8<32>
	word32 s1_112 = 0<32>
	word32 s4_102 = 299<i32>
	word32 s5_103 = 1<32>
	word32 s6_104 = 3<32>
	word32 s2_133 = 4<32>
	word32 s7_134 = 2<32>
	word32 s3_101 = 0xA<32>
l2306E2C8:
	word32 a4_33 = CONVERT(Mem32[s0_114 + 20<i32>:byte], byte, word32)
	branch a4_33 == 0<32> l2306E2EE
l2306E2CE:
	word32 a5_36 = CONVERT(Mem32[s0_114 + 18<i32>:uint16], uint16, word32) + 1<32> << 16<i32>
	Mem38[s0_114 + 18<i32>:word16] = SLICE(a5_36 >>u 16<i32>, word16, 0)
	branch s4_102 <u a5_36 >>u 16<i32> l2306E2E8
l2306E2E0:
	branch a4_33 != s5_103 l2306E30C
l2306E30C:
	branch a4_33 != s6_104 l2306E316
l2306E316:
	branch a4_33 != s2_133 l2306E2EE
l2306E31A:
	Mem44[s0_114 + 20<i32>:byte] = SLICE(s7_134, byte, 0)
l2306E310:
	Mem45[s0_114 + 20<i32>:byte] = SLICE(s2_133, byte, 0)
l2306E2E4:
	branch s2_133 >=u a5_36 >>u 16<i32> l2306E320
l2306E320:
	word32 a1_268
	word32 a4_269
	ra = etharp_request(ra, Mem38[a0 + 8<i32>:word32], a0, mstatus, dwLoc2C, dwLoc18, dwArg04, dwArg38, dwArg48, dwArg68, dwArg74, dwArg78, dwArg88, dwArg90, dwArg94, dwArgA8, dwArgB8, dwArgE8, dwArg0168, out s0_114, out s1_112, out a0, out a1_268, out a3, out a4_269, out s2_133, out s3_101, out s4_102, out s5_103, out s6_104, out s7_134, out mstatus)
l2306E2E8:
	ra = etharp_free_entry(ra, s1_112, a3, s4_102, mstatus, dwArg08, dwArgE8, out s1_112, out a0, out a3, out s2_133, out s3_101, out s4_102, out s5_103, out s6_104, out mstatus)
l2306E2EE:
	s1_112 = s1_112 + 1<32>
	s0_114 = s0_114 + 0x18<32>
	branch s1_112 != s3_101 l2306E2C8
l2306E2F6:
	0<32> = dwArg0128
	return
etharp_tmr_exit:


void etharp_output_to_arp_index(word32 ra, word32 a0, word32 a2, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg14, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA4, word32 dwArgB8, word32 dwArgC8, word32 dwArgE4, word32 dwArgF8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0128, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_output
// MayUse:  a0:[0..31] a2:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E4:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0128:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: mstatus s5 s6 s7 s9 sp
etharp_output_to_arp_index_entry:
l2306E32C:
	word32 s2_115 = a0
	branch CONVERT(Mem22[a2 + 0x4201B0E4<32>:byte], byte, word32) != 2<32> l2306E380
l2306E364:
	word32 s1_100
	word32 a0_44
	word32 a5_31 = CONVERT(Mem22[a2 + 0x4201B0E2<32>:uint16], uint16, word32)
	branch a5_31 <=u 284<i32> l2306E3A0
l2306E3A0:
	branch a5_31 <=u 269<i32> l2306E380
l2306E3A8:
	word32 s0_232
	word32 a1_233
	word32 a3_234
	word32 a4_235
	word32 s3_236
	word32 s4_237
	word32 s5_238
	word32 s6_239
	word32 s7_240
	word32 mstatus_241
	ra = etharp_raw(ra, a2 + 0x4201B0DC<32>, a0 + 58<i32>, a0 + 4<i32>, mstatus, s4, dwLoc08, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s0_232, out s1_100, out a0_44, out a1_233, out a3_234, out a4_235, out s2_115, out s3_236, out s4_237, out s5_238, out s6_239, out s7_240, out mstatus_241)
l2306E370:
	word32 s7_223
	word32 mstatus_224
	word32 s5_221
	word32 s6_222
	word32 s3_219
	word32 s4_220
	word32 a3_217
	word32 a4_218
	word32 s0_215
	word32 a1_216
	ra = etharp_request(ra, a2 + 0x4201B0DC<32>, a0, mstatus, s4, dwLoc08, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s0_215, out s1_100, out a0_44, out a1_216, out a3_217, out a4_218, out s2_115, out s3_219, out s4_220, out s5_221, out s6_222, out s7_223, out mstatus_224)
l2306E378:
	branch a0_44 != 0<32> l2306E380
l2306E37A:
	Mem101[s1_100 + 20<i32>:byte] = 3<8>
l2306E380:
l2306E39C_thunk_ethernet_output:
	word32 s0_225
	word32 s1_226
	word32 a3_227
	word32 a4_228
	word32 s2_229
	word32 s3_230
	word32 s4_231
	ethernet_output(ra, s2_115, dwArg04, dwArg48, 0xFFF800<32>, dwArg38, dwArg58, dwArg74, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_225, out s1_226, out a3_227, out a4_228, out s2_229, out s3_230, out s4_231)
	return
etharp_output_to_arp_index_exit:


word32 etharp_query(word32 ra, word32 a0, word32 a1, word32 s4, word32 mstatus, word32 dwArg14, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg74, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE4, word32 dwArgE8, word32 dwArgF8, word32 dwArg0100, word32 dwArg0104, word32 dwArg0108, word32 dwArg0128, word32 dwArg0178, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a3Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_check
//      etharp_output
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0100:[0..31] Stack +0104:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0178:[0..31]
// LiveOut: a3 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
etharp_query_entry:
l2306E3C8:
	word32 s1_113
	word32 s2_12 = a0
	word32 a5_593
	word32 a4_592
	word32 a3_112
	branch ip4_addr_isbroadcast_u32(Mem9[a1:int32], a0, out a3_112, out a4_592, out a5_593) != 0<32> l2306E4E2
l2306E3EA:
	word32 a5_29 = Mem21[a1:int32]
	a3_112 = a5_29 & 240<i32>
	branch (a5_29 & 240<i32>) == 224<i32> l2306E4E2
l2306E3FA:
	branch a5_29 == 0<32> l2306E4E2
l2306E4E2:
	s1_113 = s1
l2306E3FC:
	word32 a0_37
	word32 s4_144
	word32 s0_118
	ra = etharp_find_entry(ra, a1, 1<32>, a0, a1, mstatus, dwLoc08, dwArgD8, out s0_118, out s1_113, out a0_37, out a3_112, out s2_12, out s3, out s4_144, out s5, out s6, out mstatus)
	branch a0_37 >= 0<32> l2306E432
l2306E432:
	word32 a4_65 = (a0_37 & 255<i32>) + 0x18<32>
	s3 = a0_37 & 255<i32>
	s1_113 = 0x4201B0B8<32>
	branch CONVERT(Mem21[a4_65 + 0x4201B0CC<32>:byte], byte, word32) == 0<32> l2306E49E
l2306E49E:
	Mem72[a4_65 + 0x4201B0CC<32>:byte] = 1<8>
	Mem73[a4_65 + 0x4201B0C0<32>:word32] = s2_12
l2306E450:
	branch s0_118 != 0<32> l2306E45E
l2306E454:
	word32 a4_596
	word32 a0_594
	word32 a1_595
	ra = etharp_request(ra, s0_118, s2_12, mstatus, s4, dwLoc08, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s0_118, out s1_113, out a0_594, out a1_595, out a3_112, out a4_596, out s2_12, out s3, out s4_144, out s5, out s6, out s7, out mstatus)
	branch s0_118 == 0<32> l2306E422
l2306E45E:
	a3_112 = s3 + 0x18<32>
	word32 a4_116 = CONVERT(Mem115[s1_113 + a3_112 + 20<i32>:byte], byte, word32)
	branch a4_116 <=u 1<32> l2306E4AA
l2306E4AA:
	branch a4_116 != 1<32> l2306E422
l2306E4AE:
	word32 a5_119 = s0_118
l2306E4B0:
	word32 a4_135
	word32 a0_155
	word32 a4_122 = CONVERT(Mem115[a5_119 + 12<i32>:byte], byte, word32)
	branch (a4_122 & 64<i32>) != 0<32> l2306E4E6
l2306E4E6:
	ra = pbuf_clone(ra, s0_118, 142<i32>, 640<i32>, s0_118, a3_112, a4_122 & 64<i32>, mstatus, dwArg14, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgC8, dwArgE8, dwArgF8, dwArg0128, out s1_113, out a0_155, out a3_112, out a4_135, out s2_12, out s3, out s4_144, out s5, out s6, out mstatus)
	s0_118 = a0_155
	branch a0_155 != 0<32> l2306E4C4
l2306E4F8:
	Mem162[0x42026814<32>:word16] = SLICE(CONVERT(Mem115[0x42026814<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E4BA:
	a5_119 = Mem115[a5_119:word32]
	branch a5_119 != 0<32> l2306E4B0
l2306E4BE:
	word32 a5_598
	a0_155 = pbuf_ref(s0_118, a3_112, a4_122 & 64<i32>, mstatus, out a3_112, out a4_135, out a5_598)
l2306E4C4:
	branch a0_155 == 0<32> l2306E4D4
l2306E4D0:
	word32 s8_606
	word32 s4_605
	word32 a7_604
	word32 a5_603
	word32 a4_602
	word32 a2_601
	word32 a1_600
	word32 a0_599
	ra = pbuf_free(ra, a0_155, a3_112, a4_135, s4_144, mstatus, dwArg0108, out s0_118, out s1_113, out a0_599, out a1_600, out a2_601, out a3_112, out a4_602, out a5_603, out a7_604, out s2_12, out s3, out s4_605, out s5, out s6, out s8_606, out mstatus)
l2306E4D4:
	s1_113 = s1_113 + (s3 + 0x18<32>)
	Mem219[s0_118:word32] = s1_113
l2306E472:
	Mem226[0x4200F5F8<32>:byte] = SLICE(s3, byte, 0)
	word32 a2_232 = s2_12 + 58<i32>
l2306E49A_thunk_ethernet_output:
	word32 a3_243
	word32 s0_246
	word32 s1_247
	word32 s2_248
	word32 s3_249
	word32 s4_250
	word32 a4_597
	word32 ra_256 = ethernet_output(ra, s2_12, s0_118, a2_232, 0xFFF800<32>, dwArg38, dwArg58, dwArg74, dwArgE4, dwArg0100, dwArg0104, dwArg0128, out s0_246, out s1_247, out a3_243, out a4_597, out s2_248, out s3_249, out s4_250)
	s0Out = s0_246
	s1Out = s1_247
	a3Out = a3_243
	s2Out = s2_248
	s3Out = s3_249
	s4Out = s4_250
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra_256
l2306E40A:
	branch s0_118 == 0<32> l2306E41E
l2306E40C:
	Mem266[0x42026814<32>:word16] = SLICE(CONVERT(Mem21[0x42026814<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E41E:
l2306E422:
	s0Out = s1
	s1Out = s1_113
	a3Out = a3_112
	s2Out = s2_12
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
etharp_query_exit:


void etharp_output(word32 ra, word32 s1, word32 a0, word32 a1, word32 s4, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg54, word32 dwArg58, word32 dwArg64, word32 dwArg78, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgB8, word32 dwArgC4, word32 dwArgC8, word32 dwArgD8, word32 dwArgE0, word32 dwArgE4, word32 dwArgE8, word32 dwArg0108, word32 dwArg0158)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0064:[0..31] Stack +0078:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E0:[0..31] Stack +00E4:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0158:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t2 t3 t4 t5 t6 tp
// Preserved: sp
etharp_output_entry:
l2306E50E:
	word32 a5_22
	word32 a4_477
	word32 a3_476
	word32 a0_19 = ip4_addr_isbroadcast_u32(a0, a0, out a3_476, out a4_477, out a5_22)
	branch a0_19 != 0<32> l2306E636
l2306E636:
l2306E52A:
	word32 s1_229 = Mem11[a5_22:word32]
	branch (a5_22 & 240<i32>) != 224<i32> l2306E578
l2306E578:
	word32 s0_30 = Mem11[(a5_22 & 240<i32>) + 8<i32>:word32]
	word32 a4_31 = a0_19
	branch ((a5_22 ^ 224<i32>) & (a5_22 & 240<i32>)) == 0<32> l2306E59C
l2306E584:
	word32 a5_36 = CONVERT(SLICE(a5_22, word16, 0), word16, word32)
	branch a5_36 == 0xFFFFEA9<32> l2306E59C
l2306E592:
	s0_30 = Mem11[a5_36 + 12<i32>:word32]
	branch a5_36 == 0<32> l2306E5EE
l2306E598:
	s1_229 = s0_30 + 12<i32>
l2306E59C:
	word32 a2_136 = CONVERT(Mem11[0x4200F5F8<32>:byte], byte, word32)
	word32 a5_49 = 0x4201B0B8<32>
	branch CONVERT(Mem11[a2_136 + 0x4201B0E4<32>:byte], byte, word32) <=u 1<32> l2306E5FA
l2306E5C6:
	word32 a3_53 = Mem11[9<32>:word32]
	branch s0_30 != 1<32> l2306E5FA
l2306E5CC:
	s1_229 = Mem11[1<32>:word32]
	branch Mem11[a3_53 + 4<i32>:word32] != 1<32> l2306E5FA
l2306E5FA:
l2306E5FE:
	word32 a0_61 = CONVERT(Mem11[a5_49 + 20<i32>:byte], byte, word32)
	branch a0_61 <=u 1<32> l2306E61E
l2306E606:
	a5_49 = Mem11[a0_61 + 8<i32>:word32]
	branch a0_61 != s0_30 l2306E61E
l2306E60C:
	a5_49 = Mem11[a0_61 + 4<i32>:word32]
	branch Mem11[s1_229:int32] != a0_61 l2306E61E
l2306E61E:
	word32 a4_70 = a4_31 + 1<32>
	a4_31 = a4_70 & 255<i32>
	a5_49 = a5_49 + 0x18<32>
	branch (a4_70 & 255<i32>) != 0xA<32> l2306E5FE
l2306E62A:
	word32 s0_485
	word32 s1_486
	word32 a3_487
	word32 s4_490
	word32 s5_491
	word32 s3_489
	word32 s6_492
	word32 s2_488
	word32 s7_493
	word32 mstatus_494
	etharp_query(ra, s0_30, s1_229, s4, mstatus, dwLoc0C, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg64, s1, dwArg78, dwArg80, dwArg84, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC4, dwArgC8, dwArgD8, dwArgE0, dwArgE4, dwArgE8, dwArg0108, dwArg0158, out s0_485, out s1_486, out a3_487, out s2_488, out s3_489, out s4_490, out s5_491, out s6_492, out s7_493, out mstatus_494)
l2306E616:
	Mem135[0x4200F5F8<32>:byte] = SLICE(a4_31, byte, 0)
	a2_136 = a4_31
l2306E5D4:
	Mem141[0x4202681E<32>:word16] = SLICE(CONVERT(Mem11[0x4202681E<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E5E6:
	etharp_output_to_arp_index(ra, s0_30, a2_136, s4, mstatus, dwLoc1C, dwLoc0C, dwArg18, dwArg28, dwArg38, dwArg54, dwArg58, dwArg64, s1, dwArg78, dwArg80, dwArg84, dwArg98, dwArgA8, dwArgC4, dwArgD8, dwArgE0, dwArgE4, dwArg0108, dwArg0158)
l2306E538:
l2306E564:
	word32 s1_479
	word32 s0_478
	word32 a4_481
	word32 a3_480
	word32 s4_484
	word32 s3_483
	word32 s2_482
	ethernet_output(ra, a0, a1, a0 + 58<i32>, 0xFFF800<32>, dwArg18, dwArg38, dwArg54, dwArgC4, dwArgE0, dwArgE4, dwArg0108, out s0_478, out s1_479, out a3_480, out a4_481, out s2_482, out s3_483, out s4_484)
l2306E5EE:
	return
etharp_output_exit:


word32 igmp_send(word32 ra, word32 s0, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_joingroup_netif
//      igmp_leavegroup_netif
//      igmp_tmr
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31]
// LiveOut: a0 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_send_entry:
l2306E640:
	word32 a5_166
	word32 s1_41
	word32 s4_48
	word32 s6_54
	word32 a1_271
	word32 a3_272
	word32 a5_273
	word32 a7_274
	word32 s8_275
	word32 s3_169
	word32 s5_173
	word32 s0_160
	word32 s2_168
	word32 mstatus_181
	word32 a2_159
	word32 a4_165
	word32 a0_158
	word32 ra_52 = pbuf_alloc(ra, s0, 0x42026000<32>, 182<i32>, 8<32>, 640<i32>, a3, a4, mstatus, dwLoc4C, dwLoc0C, dwArg58, dwArg68, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArgD8, dwArg0108, out s0_160, out s1_41, out a0_158, out a1_271, out a2_159, out a3_272, out a4_165, out a5_273, out a7_274, out s2_168, out s3_169, out s4_48, out s5_173, out s6_54, out s8_275, out mstatus_181)
	branch a0_158 == 0<32> l2306E734
l2306E734:
	word32 a5_61 = CONVERT(Mem30[s1_41 + 2138<i32>:uint16], uint16, word32)
	Mem63[s1_41 + 2138<i32>:word16] = SLICE(a5_61 + 1<32>, word16, 0)
	a5_166 = a5_61 + 1<32>
l2306E678:
	word32 a5_68 = Mem67[s3_169 + 4<i32>:int32]
	branch s5_173 != 0x16<32> l2306E71A
l2306E71A:
	Mem75[s0_160 + 4<i32>:byte] = SLICE(a5_68 & 255<i32>, byte, 0)
	Mem76[s0_160 + 5<i32>:byte] = SLICE(a5_68 >>u 8<u32>, byte, 0)
	Mem77[s0_160 + 6<i32>:byte] = SLICE(a5_68 >>u 0x10<u32>, byte, 0)
	Mem78[s0_160 + 7<i32>:byte] = SLICE(a5_68 >>u 24<i32>, byte, 0)
l2306E69A:
	Mem80[s0_160 + 7<i32>:byte] = SLICE(a5_68 >>u 24<i32>, byte, 0)
	Mem81[s0_160 + 4<i32>:byte] = SLICE(a5_68 & 255<i32>, byte, 0)
	Mem82[s0_160 + 5<i32>:byte] = SLICE(a5_68 >>u 8<u32>, byte, 0)
	Mem83[s0_160 + 6<i32>:byte] = SLICE(a5_68 >>u 0x10<u32>, byte, 0)
	Mem86[s3_169 + 8<i32>:byte] = 1<8>
l2306E6B4:
	Mem90[s0_160:byte] = SLICE(s5_173, byte, 0)
	Mem91[s0_160 + 1<i32>:byte] = 0<8>
	Mem92[s0_160 + 2<i32>:byte] = 0<8>
	Mem93[s0_160 + 3<i32>:byte] = 0<8>
	word32 a2_101
	word32 a3_276
	word32 a4_277
	word32 a5_278
	word32 a0_99 = inet_chksum(s0_160, 8<32>, a5_68 >>u 0x10<u32>, out a2_101, out a3_276, out a4_277, out a5_278)
	Mem105[s0_160 + 2<i32>:byte] = SLICE(a0_99, byte, 0)
	Mem107[s0_160 + 3<i32>:byte] = SLICE(a0_99 >>u 8<i32>, byte, 0)
	Mem115[s1_41 + 2128<i32>:word16] = SLICE(CONVERT(Mem109[s1_41 + 2128<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a3_133
	word32 a4_134
	word32 s2_141
	word32 s4_143
	word32 s0_279
	word32 s1_280
	word32 a0_281
	word32 a1_282
	word32 a5_283
	word32 a7_284
	word32 s3_285
	word32 s5_286
	word32 s6_287
	word32 s8_288
	word32 s9_289
	word32 s1_290
	word32 a1_291
	word32 a3_292
	word32 a7_293
	word32 s4_294
	word32 s6_295
	word32 s8_296
	pbuf_free(ip4_output_if_opt(ra_52, s0_160, s1_41 + 2032<i32>, a0_158, fp + -40<i32>, a2_101, 1<32>, 0<32>, 2<32>, s4_48, fp + -36<i32>, s4_48, s5_173, s6_54, s7, 4<u16>, out s0_279, out s1_280, out a0_281, out a1_282, out a3_133, out a4_134, out a5_283, out a7_284, out s2_141, out s3_285, out s4_143, out s5_286, out s6_287, out s7, out s8_288, out s9_289), s2_141, a3_133, a4_134, s4_143, mstatus_181, dwArgD8, out s0_160, out s1_290, out a0_158, out a1_291, out a2_159, out a3_292, out a4_165, out a5_166, out a7_293, out s2_168, out s3_169, out s4_294, out s5_173, out s6_295, out s8_296, out mstatus_181)
l2306E708:
	s0Out = s0_160
	s1Out = dwLoc4C
	a0Out = a0_158
	a2Out = a2_159
	a3Out = s2
	a4Out = a4_165
	a5Out = a5_166
	s2Out = s2_168
	s3Out = s3_169
	s4Out = dwArg0168
	s5Out = s5_173
	s7Out = s7
	mstatusOut = mstatus_181
	return dwLoc08
igmp_send_exit:


word32 igmp_delaying_member(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_input
//      netif_issue_reports
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a1 a2 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
igmp_delaying_member_entry:
l2306E740:
	word32 a5_5 = CONVERT(Mem0[a0 + 9<i32>:byte], byte, word32)
	word32 a4_31 = 2<32>
	branch a5_5 == 2<32> l2306E75A
l2306E74A:
	a4_31 = 1<32>
	branch a5_5 != 1<32> l2306E792
l2306E750:
	a5_5 = CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32)
	branch a5_5 == 0<32> l2306E75A
l2306E756:
	branch a1 >=u a5_5 l2306E792
l2306E792:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = 1<32>
	a5Out = a5_5
	s4Out = s4
	return s1
l2306E75A:
	word32 s1_25 = a0
	branch a1 >u 2<32> l2306E782
l2306E782:
	word32 a0_28
	word32 s8_124
	word32 a5_123
	word32 a2_122
	s1_25 = bl_rand(a0, a2, out a0_28, out a1, out a2_122, out a3, out a4_31, out a5_123, out s4, out s8_124)
	word32 s0_39 = a0_28 & a1
	Mem40[s1_25 + 10<i32>:word16] = SLICE(s0_39, word16, 0)
	branch s0_39 == 0<32> l2306E76C
l2306E790:
l2306E76C:
	Mem43[s1_25 + 10<i32>:word16] = 1<16>
l2306E772:
	Mem46[s1_25 + 9<i32>:byte] = 1<8>
	a1Out = a1
	a2Out = dwArg10
	a3Out = a3
	a4Out = a4_31
	a5Out = 1<32>
	s4Out = s4
	return s1_25
igmp_delaying_member_exit:


word32 igmp_init(ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut: a4 a5
// Trashed: a4 a5
// Preserved: sp
igmp_init_entry:
l2306E794:
	Mem6[0x4200F600<32>:word32] = 0x10000E0<32>
	Mem10[0x4200F5FC<32>:word32] = 0x20000E0<32>
	a5Out = 0x20000E0<32>
	return 0x4200F000<32>
igmp_init_exit:


word32 igmp_stop(word32 ra, word32 s0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_remove
// MayUse:  a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0038:[0..31]
// LiveOut: a3 ra
// Trashed: a0 a1 a2 a3 a4 a5 ra s1 s2 tp
// Preserved: s0 sp
igmp_stop_entry:
l2306E7B6:
	Mem14[Mem11[s0 + 44<i32>:word32] + 44<i32>:word32] = 0<32>
l2306E7C8:
	branch s0 != 0<32> l2306E7D8
l2306E7D8:
	word32 s1_18 = Mem14[a5 + 72<i32>:word32]
	word32 s2_19 = Mem14[s0:int32]
	branch a5 == 0<32> l2306E7EA
l2306E7E0:
	word32 a5_33
	call a5 (retsize: 0;)
		uses: a0:s1_18,a1:s0_15 + 4<i32>,a2:0<32>,a3:a3_43,a4:a4_41,a5:a5_33,mstatus:mstatus,ra:ra_23,s0:s0_15,s1:s1_18,s2:s2_19
		defs: a5:a5_33,ra:ra_27,s0:s0_28,s2:s2_29
l2306E7EA:
	word32 a2_89
	word32 a0_88
	memp_free(0xA<32>, s0, a3, a4, mstatus, out a0_88, out a2_89, out a3, out a4, out a5)
	s0 = s2_19
l2306E7CA:
	0<32> = dwArg38
	a3Out = a3
	return ra
igmp_stop_exit:


word32 igmp_report_groups(word32 s0, word32 a2, word32 a5, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_issue_reports
// MayUse:  a2:[0..31] a5:[0..31] s0:[0..31]
// LiveOut: a1 a3 a4 a5 s1 s4
// Trashed: a0 a1 a2 a3 a4 a5 s1 s4 s8 t3 tp
// Preserved: s0 sp
igmp_report_groups_entry:
l2306E7F6:
	branch a5 == 0<32> l2306E818
l2306E818:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s4Out = s4
	return s1
l2306E7FA:
	word32 a5_11 = Mem10[s0:word32]
l2306E802:
	branch s0 != 0<32> l2306E80C
l2306E80C:
	s1 = igmp_delaying_member(s0, 5<32>, a2, out a1, out a2, out a3, out a4, out a5_11, out s4)
	s0 = Mem10[s0:word32]
l2306E804:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5_11
	s4Out = s4
	return s1
igmp_report_groups_exit:


word32 igmp_lookfor_group(word32 a0, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_lookup_group
//      igmp_input
//      igmp_leavegroup_netif
//      ip4_input
// MayUse:  a0:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0
// Trashed: a0 a1
// Preserved: sp
igmp_lookfor_group_entry:
l2306E81A:
	word32 a0_12 = Mem0[a0 + 44<i32>:word32]
l2306E81C:
	branch a0_12 != 0<32> l2306E820
l2306E820:
	a0_12 = Mem0[a4 + 4<i32>:word32]
	branch a4 == a5 l2306E81E
l2306E828:
	a0_12 = Mem0[a0_12:word32]
l2306E81E:
	return a0_12
igmp_lookfor_group_exit:


word32 igmp_lookup_group(word32 s0, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg38, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_start
//      igmp_joingroup_netif
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] s0:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 s1 s2 tp
// Preserved: s0 sp
igmp_lookup_group_entry:
l2306E82C:
	word32 s1_13 = a0
	word32 a0_18 = igmp_lookfor_group(a0, a4, a5)
	branch a0_18 != 0<32> l2306E866
l2306E840:
	word32 a5_83
	word32 a2_82
	s1_13 = memp_malloc(Mem11[s0 + 44<i32>:word32], 0xA<32>, a3, a4, mstatus, out a0_18, out a2_82, out a3, out a4, out a5_83)
	branch a0_18 == 0<32> l2306E866
l2306E84A:
	word32 a5_31 = 0<32>
	branch a1 == 0<32> l2306E854
l2306E850:
	a5_31 = Mem11[a1:int32]
l2306E854:
	Mem35[a5_31 + 4<i32>:word32] = a0_18
	Mem36[a0_18 + 8<i32>:word32] = 0<32>
	Mem37[a0_18 + 12<i32>:byte] = 0<8>
	branch s0 != 0<32> l2306E872
l2306E872:
	word32 s0_39 = Mem37[a5_31:word32]
	Mem40[a5_31:word32] = a0_18
	Mem41[a0_18:word32] = s0_39
l2306E860:
	Mem42[a0_18:word32] = 0<32>
	Mem44[a0_18 + 44<i32>:word32] = s1_13
l2306E866:
	0<32> = dwArg38
	a0Out = a0_18
	a3Out = a3
	a4Out = a4
	s2Out = a1
	return s1_13
igmp_lookup_group_exit:


void igmp_start(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 mstatus, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_add
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 mstatus ra s1 s2 tp
// Preserved: s0 sp
igmp_start_entry:
l2306E87A:
	word32 a0_18
	word32 a3_24
	word32 a4_25
	word32 s2_76
	word32 s1_21 = igmp_lookup_group(a0, a0, 0x4200F600<32>, a3, a4, a5, mstatus, dwArg28, out a0_18, out a3_24, out a4_25, out s2_76)
	branch a0_18 == 0<32> l2306E8BE
l2306E8BE:
l2306E892:
	Mem29[a0_18 + 9<i32>:byte] = 2<8>
	word32 a5_30 = CONVERT(Mem29[a0_18 + 12<i32>:byte], byte, word32)
	Mem32[a0_18 + 12<i32>:byte] = SLICE(a5_30 + 1<32>, byte, 0)
	word32 s0_33 = Mem32[a5_30 + 0x49<32>:word32]
	branch a5_30 == 1<32> l2306E8B4
l2306E8A8:
	call a5_30 + 1<32> (retsize: 0;)
		uses: a0:s0_33,a1:s1_21 + 1536<i32>,a2:1<32>,a3:a3_24,a4:a4_25,a5:a5_30 + 1<32>,mstatus:mstatus,ra:ra,s0:s0_33,s1:s1_21,Stack +0038:dwArg28
l2306E8B4:
	return
igmp_start_exit:


word32 igmp_input(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgF8, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s4:[0..31] Stack +00F8:[0..31] Stack +0128:[0..31]
// LiveOut: s1
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_input_entry:
l2306E8C2:
	word32 s1_177
	Mem24[0x42026852<32>:word16] = SLICE(CONVERT(Mem18[0x42026852<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s0_102 = 0x420267F0<32>
	word32 a1_26 = CONVERT(Mem24[a0 + 10<i32>:uint16], uint16, word32)
	branch a1_26 >u 7<32> l2306E910
l2306E910:
	word32 a0_28 = Mem24[s1 + 4<i32>:word32]
	word32 s4_115 = a2
	word32 a4_38
	word32 a5_39
	word32 a2_107
	word32 a3_111
	branch inet_chksum(s1, a1_26, a4, out a2_107, out a3_111, out a4_38, out a5_39) == 0<32> l2306E930
l2306E930:
	word32 a0_42 = igmp_lookfor_group(a1, a4_38, a5_39)
	branch a0_42 != 0<32> l2306E94C
l2306E94C:
	word32 a4_112
	word32 a5_44 = CONVERT(Mem24[s1:byte], byte, word32)
	branch a5_44 == 0x11<32> l2306E968
l2306E968:
	a3_111 = Mem24[a2:int32]
	word32 a5_57 = CONVERT(Mem24[s1 + 7<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem24[s1 + 5<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem24[s1 + 4<i32>:byte], byte, word32)) | CONVERT(Mem24[s1 + 6<i32>:byte], byte, word32) << 16<i32>)
	a4_112 = Mem24[0x4200F600<32>:int32]
	branch a3_111 != a4_112 l2306EA24
l2306EA24:
	branch a5_57 == 0<32> l2306E95C
l2306EA26:
l2306E998:
	branch a5_57 != 0<32> l2306E9DC
l2306E9DC:
	a0_42 = igmp_lookfor_group(a1, a4_112, a5_57)
	branch a0_42 == 0<32> l2306E9FC
l2306E9FC:
	Mem67[0x42026854<32>:word16] = SLICE(CONVERT(Mem62[0x42026854<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E9E8:
	Mem72[0x42026860<32>:word16] = SLICE(CONVERT(Mem69[0x42026860<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a1_431
	word32 a2_432
	word32 a5_433
	igmp_delaying_member(a0_42, CONVERT(Mem72[s1 + 1<i32>:byte], byte, word32), a2_107, out a1_431, out a2_432, out a3_111, out a4_112, out a5_433, out s4_115)
l2306E99A:
	branch CONVERT(Mem24[s1 + 1<i32>:byte], byte, word32) != 0<32> l2306E9C2
l2306E9C2:
	Mem91[0x42026862<32>:word16] = SLICE(CONVERT(Mem24[0x42026862<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E9A0:
	Mem94[0x4202685E<32>:word16] = SLICE(CONVERT(Mem24[0x4202685E<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem96[s1 + 1<i32>:byte] = 0xA<8>
l2306E9B0:
	branch Mem98[a1 + 44<i32>:int32] == 0<32> l2306E9BA
l2306E9B6:
l2306E9B8:
	branch s0_102 != 0<32> l2306E9CE
l2306E9CE:
	word32 a1_429
	word32 a5_430
	s1 = igmp_delaying_member(s0_102, CONVERT(Mem98[s1 + 1<i32>:byte], byte, word32), a2_107, out a1_429, out a2_107, out a3_111, out a4_112, out a5_430, out s4_115)
	s0_102 = Mem98[s0_102:word32]
l2306E956:
	a4_112 = 0x16<32>
	branch a5_44 == 0x16<32> l2306EA08
l2306EA08:
	Mem123[0x42026864<32>:word16] = SLICE(CONVERT(Mem24[0x42026864<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	a4_112 = CONVERT(Mem123[a0_42 + 9<i32>:byte], byte, word32)
	branch a4_112 != 1<32> l2306E9BA
l2306EA1C:
	Mem127[0x208<32>:word32] = a0_42
l2306E95C:
	Mem132[0x4202685C<32>:word16] = SLICE(CONVERT(Mem24[0x4202685C<32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E9BA:
	word32 s0_414
	word32 a0_415
	word32 a1_416
	word32 a2_417
	word32 a3_418
	word32 a4_419
	word32 a5_420
	word32 a7_421
	word32 s2_422
	word32 s3_423
	word32 s4_424
	word32 s5_425
	word32 s6_426
	word32 s8_427
	word32 mstatus_428
	pbuf_free(ra, a0_28, a3_111, a4_112, s4_115, mstatus, dwArgF8, out s0_414, out s1_177, out a0_415, out a1_416, out a2_417, out a3_418, out a4_419, out a5_420, out a7_421, out s2_422, out s3_423, out s4_424, out s5_425, out s6_426, out s8_427, out mstatus_428)
l2306E93A:
	word32 s0_196
	word32 a0_400
	word32 a1_401
	word32 a2_402
	word32 a3_403
	word32 a4_404
	word32 a5_405
	word32 a7_406
	word32 s2_407
	word32 s3_408
	word32 s4_409
	word32 s5_410
	word32 s6_411
	word32 s8_412
	word32 mstatus_413
	pbuf_free(ra, a0_28, a3_111, a4_38, a2, mstatus, dwArgF8, out s0_196, out s1_177, out a0_400, out a1_401, out a2_402, out a3_403, out a4_404, out a5_405, out a7_406, out s2_407, out s3_408, out s4_409, out s5_410, out s6_411, out s8_412, out mstatus_413)
	Mem221[s0_196 + 100<i32>:word16] = SLICE(CONVERT(Mem24[s0_196 + 100<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E91E:
	word32 a0_386
	word32 a1_387
	word32 a2_388
	word32 a7_392
	word32 a5_391
	word32 s2_393
	word32 s5_396
	word32 s3_394
	word32 a4_390
	word32 a3_389
	word32 s8_398
	word32 s6_397
	word32 mstatus_399
	word32 s4_395
	word32 s0_225
	pbuf_free(ra, a0_28, a3_111, a4_38, a2, mstatus, dwArgF8, out s0_225, out s1_177, out a0_386, out a1_387, out a2_388, out a3_389, out a4_390, out a5_391, out a7_392, out s2_393, out s3_394, out s4_395, out s5_396, out s6_397, out s8_398, out mstatus_399)
	Mem250[s0_225 + 102<i32>:word16] = SLICE(CONVERT(Mem24[s0_225 + 102<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E8F0:
	word32 s2_379
	word32 s4_381
	word32 s3_380
	word32 s5_382
	word32 a7_378
	word32 a5_377
	word32 s8_384
	word32 mstatus_385
	word32 s6_383
	word32 s0_254
	word32 a0_372
	word32 a4_376
	word32 a2_374
	word32 a3_375
	word32 a1_373
	pbuf_free(ra, a0, a3, a4, s4, mstatus, dwArgF8, out s0_254, out s1_177, out a0_372, out a1_373, out a2_374, out a3_375, out a4_376, out a5_377, out a7_378, out s2_379, out s3_380, out s4_381, out s5_382, out s6_383, out s8_384, out mstatus_385)
	Mem279[s0_254 + 104<i32>:word16] = SLICE(CONVERT(Mem24[s0_254 + 104<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306E8FE:
	0<32> = dwArg0128
	return s1_177
igmp_input_exit:


word32 igmp_joingroup_netif(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg28, word32 dwArg38, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_joingroup
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s7:[0..31] Stack +0028:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a3 a4 a5 mstatus ra s1 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
igmp_joingroup_netif_entry:
l2306EA28:
	word32 a1_5 = Mem0[a3:word32]
	branch (a3 & 240<i32>) != 224<i32> l2306EACC
l2306EACC:
l2306EA36:
	word32 a5_11 = 0xFFFFFFFA<32>
	branch a3 == Mem0[0x4200F600<32>:int32] l2306EACE
l2306EACE:
	s1Out = s1
	a0Out = 0xFFFFFFFA<32>
	a3Out = a3
	a4Out = a4
	a5Out = 0xFFFFFFFA<32>
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2306EA44:
	word32 a3_24 = CONVERT(Mem22[a0 + 65<i32>:byte], byte, word32)
	word32 sp_14 = fp + 0xFFFFFFF0<32>
	word32 s1_109 = a0
	word32 a3_106 = a3_24 & 32<i32>
	branch (a3_24 & 32<i32>) == 0<32> l2306EABE
l2306EA5A:
	word32 a0_30
	word32 s2_34
	s1_109 = igmp_lookup_group(s0, a0, a1_5, a3_24 & 32<i32>, a4, 0xFFFFFFFA<32>, mstatus, dwArg28, out a0_30, out a3_106, out a4, out s2_34)
	word32 s0_123 = a0_30
	a5_11 = 0xFFFFFFFF<32>
	branch a0_30 == 0<32> l2306EABE
l2306EA66:
	branch CONVERT(Mem22[a0_30 + 9<i32>:byte], byte, word32) != 0<32> l2306EAB2
l2306EA6C:
	word32 a5_42 = CONVERT(Mem22[a0_30 + 12<i32>:byte], byte, word32)
	branch a5_42 != 0<32> l2306EA7E
l2306EA72:
	word32 s1_43 = Mem22[a5_42 + 72<i32>:word32]
	branch a5_42 == 0<32> l2306EA7E
l2306EA76:
	word32 tp_58
	word32 a6_145
	word32 a7_146
	word32 s3_147
	word32 s4_148
	word32 s5_149
	word32 s6_150
	word32 s8_151
	word32 t0_152
	word32 t1_153
	word32 t3_154
	word32 t4_155
	word32 t5_156
	word32 t6_157
	word32 s9_158
	call a5_42 (retsize: 0;)
		uses: a0:s1_43,a1:s2_34,a2:1<32>,a3:a3_36,a4:a4_37,a6:a6_145,a7:a7_146,mstatus:mstatus,ra:ra,s0:a0_30,s1:s1_43,s2:s2_34,s3:s3_147,s4:s4_148,s5:s5_149,s6:s6_150,s7:s7,s8:s8_151,s9:s9_158,Stack +0038:dwArg28,t0:t0_152,t1:t1_153,t3:t3_154,t4:t4_155,t5:t5_156,t6:t6_157,tp:tp_58
		defs: a3:a3_49,a6:a6_145,a7:a7_146,mstatus:mstatus_59,ra:ra_53,s0:s0_54,s3:s3_147,s4:s4_148,s5:s5_149,s6:s6_150,s8:s8_151,s9:s9_158,sp:sp_47,t0:t0_152,t1:t1_153,t3:t3_154,t4:t4_155,t5:t5_156,t6:t6_157,tp:tp_58
l2306EA7E:
	word32 a4_63 = CONVERT(Mem22[0x42026866<32>:uint16], uint16, word32)
	Mem70[0x42026866<32>:word16] = SLICE(a4_63 + 1<32>, word16, 0)
	word32 a0_77
	word32 a2_79
	word32 s1_320
	word32 s2_324
	word32 a5_323
	word32 a4_322
	word32 a3_321
	word32 s5_327
	word32 s4_326
	word32 s3_325
	ra = igmp_send(ra, s0_123, a3_106, a4_63 + 1<32>, s7, mstatus, Mem70[sp_14 + 88<i32>:word32], Mem70[sp_14 + 104<i32>:word32], Mem70[sp_14 + 136<i32>:word32], Mem70[sp_14 + 152<i32>:word32], Mem70[sp_14 + 168<i32>:word32], Mem70[sp_14 + 200<i32>:word32], Mem70[sp_14 + 216<i32>:word32], Mem70[sp_14 + 264<i32>:word32], out s0_123, out s1_320, out a0_77, out a2_79, out a3_321, out a4_322, out a5_323, out s2_324, out s3_325, out s4_326, out s5_327, out s7, out mstatus)
	word32 a0_104
	word32 s8_332
	word32 s4_331
	word32 a5_330
	word32 a2_329
	word32 a1_328
	s1_109 = bl_rand(a0_77, a2_79, out a0_104, out a1_328, out a2_329, out a3_106, out a4, out a5_330, out s4_331, out s8_332)
	word32 a0_116 = a0_104 & 5<32>
	branch (a0_104 & 5<32>) != 0<32> l2306EAA8
l2306EAA6:
	a0_116 = 1<32>
l2306EAA8:
	Mem121[s0_123 + 10<i32>:word16] = SLICE(a0_116, word16, 0)
	Mem122[s0_123 + 9<i32>:byte] = 1<8>
l2306EAB2:
	Mem127[s0_123 + 12<i32>:byte] = SLICE(CONVERT(Mem124[s0_123 + 12<i32>:byte], byte, word32) + 1<32>, byte, 0)
	a5_11 = 0<32>
l2306EABE:
	0<32> = dwArg38
	s1Out = s1_109
	a0Out = a5_11
	a3Out = a3_106
	a4Out = a4
	a5Out = a5_11
	s7Out = s7
	mstatusOut = mstatus
	return ra
igmp_joingroup_netif_exit:


word32 igmp_joingroup(word32 ra, word32 a0, word32 a5, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_join_leave_group
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31]
// LiveOut: a0 a4 a5 mstatus
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
igmp_joingroup_entry:
l2306EAD2:
	word32 a3_40 = a5 & 240<i32>
	branch (a5 & 240<i32>) != 224<i32> l2306EB36
l2306EB36:
	a4Out = 224<i32>
	a5Out = a5
	mstatusOut = mstatus
	return 0xFFFFFFFA<32>
l2306EAE0:
	word32 a4_10 = Mem0[0x4200F600<32>:int32]
	word32 s1_21 = a0
	word32 a0_128 = 0xFFFFFFFA<32>
	branch a5 == a4_10 l2306EB06
l2306EAFA:
	a5 = 0x42026000<32>
	word32 s0_24 = Mem19[0x420267E8<32>:int32]
l2306EB04:
	branch s0_24 != 0<32> l2306EB12
l2306EB12:
	word32 a5_28 = CONVERT(Mem19[s0_24 + 65<i32>:byte], byte, word32)
	a5 = a5_28 & 32<i32>
	branch (a5_28 & 32<i32>) == 0<32> l2306EB32
l2306EB1C:
	branch s1_21 == 0<32> l2306EB28
l2306EB1E:
	s1_21 = Mem19[a5_28 & 32<i32>:word32]
	branch (a5_28 & 32<i32>) == 0<32> l2306EB28
l2306EB22:
	s0_24 = Mem19[a4_10 + 4<i32>:word32]
	branch (a5_28 & 32<i32>) != a4_10 l2306EB32
l2306EB28:
	ra = igmp_joingroup_netif(ra, s0_24, s0_24, a3_40, a4_10, s7, mstatus, dwArg18, dwArg28, out s1_21, out a0_128, out a3_40, out a4_10, out a5, out s7, out mstatus)
	branch a0_128 != 0<32> l2306EB06
l2306EB32:
	s0_24 = Mem19[s0_24:word32]
l2306EB06:
	0<32> = dwArg38
	a4Out = a4_10
	a5Out = a5
	mstatusOut = mstatus
	return a0_128
igmp_joingroup_exit:


word32 igmp_leavegroup_netif(word32 ra, word32 a0, word32 a4, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArgC8, word32 dwArgF8, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_leavegroup
// MayUse:  a0:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00F8:[0..31]
// LiveOut: a0 a4 a5 mstatus ra s1 s2 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
igmp_leavegroup_netif_entry:
l2306EB3A:
	word32 a1_5 = Mem0[a4:word32]
	branch (a4 & 240<i32>) != 224<i32> l2306EBE2
l2306EBE2:
l2306EB48:
	word32 a3_10 = Mem0[0x4200F600<32>:int32]
	word32 a5_11 = 0xFFFFFFFA<32>
	branch a4 == a3_10 l2306EBE4
l2306EBE4:
	s1Out = s1
	a0Out = 0xFFFFFFFA<32>
	a4Out = a4
	a5Out = 0xFFFFFFFA<32>
	s2Out = s2
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2306EB56:
	word32 a4_24 = CONVERT(Mem22[a0 + 65<i32>:byte], byte, word32)
	word32 s1_153 = a0
	word32 a4_106 = a4_24 & 32<i32>
	branch (a4_24 & 32<i32>) == 0<32> l2306EBC8
l2306EB6C:
	word32 a0_28 = igmp_lookfor_group(a0, a4_24 & 32<i32>, 0xFFFFFFFA<32>)
	s2 = a1_5
	word32 s0_109 = a0_28
	a5_11 = 0xFFFFFFFA<32>
	branch a0_28 == 0<32> l2306EBC8
l2306EB78:
	word32 a5_32 = CONVERT(Mem22[a0_28 + 12<i32>:byte], byte, word32)
	a4_106 = 1<32>
	branch a5_32 >u 1<32> l2306EBDA
l2306EBDA:
	Mem35[a0_28 + 12<i32>:byte] = SLICE(a5_32 + 0xFFFFFFFF<32>, byte, 0)
l2306EB82:
l2306EB84:
	branch a5_32 == 0<32> l2306EB90
l2306EB86:
	word32 a5_40 = Mem22[1<32>:word32]
	branch a0_28 != 1<32> l2306EBD6
l2306EBD6:
	a5_32 = 1<32>
l2306EB8C:
	s0_109 = Mem22[1<32>:word32]
	Mem44[1<32>:word32] = a5_40
l2306EB90:
	word32 a5_47 = CONVERT(Mem46[s0_109 + 8<i32>:byte], byte, word32)
	branch a5_47 == 0<32> l2306EBB2
l2306EB96:
	word32 a4_50 = CONVERT(Mem46[0x42026868<32>:uint16], uint16, word32)
	Mem57[0x42026868<32>:word16] = SLICE(a4_50 + 1<32>, word16, 0)
	word32 s4_415
	word32 a2_413
	word32 s3_414
	word32 a0_412
	word32 s1_411
	word32 s5_416
	ra = igmp_send(ra, s0_109, a3_10, a4_50 + 1<32>, s7, mstatus, dwArg48, dwArg58, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8, out s0_109, out s1_411, out a0_412, out a2_413, out a3_10, out a4_106, out a5_47, out s2, out s3_414, out s4_415, out s5_416, out s7, out mstatus)
l2306EBB2:
	word32 s1_99 = Mem98[a5_47 + 72<i32>:word32]
	branch a5_47 == 0<32> l2306EBBE
l2306EBB6:
	word32 tp_124
	word32 a6_127
	word32 a7_128
	word32 s3_129
	word32 s4_130
	word32 s5_131
	word32 s6_132
	word32 s8_133
	word32 t0_134
	word32 t1_135
	word32 t3_136
	word32 t4_137
	word32 t5_138
	word32 t6_139
	word32 s9_140
	call a5_47 (retsize: 0;)
		uses: a0:s1_99,a1:s2_101,a2:0<32>,a4:a4_106,a6:a6_127,a7:a7_128,mstatus:mstatus_110,ra:ra_108,s0:s0_109,s1:s1_99,s2:s2_101,s3:s3_129,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_111,s8:s8_133,s9:s9_140,Stack +0058:dwArg48,Stack +0068:dwArg58,Stack +0088:dwArg78,Stack +0098:dwArg88,Stack +00A8:dwArg98,Stack +00C8:dwArgB8,Stack +00D8:dwArgC8,Stack +0108:dwArgF8,t0:t0_134,t1:t1_135,t3:t3_136,t4:t4_137,t5:t5_138,t6:t6_139,tp:tp_124
		defs: a3:a3_117,a4:a4_115,a6:a6_127,a7:a7_128,mstatus:mstatus_125,ra:ra_119,s0:s0_120,s2:s2_121,s3:s3_129,s4:s4_130,s5:s5_131,s6:s6_132,s7:s7_126,s8:s8_133,s9:s9_140,t0:t0_134,t1:t1_135,t3:t3_136,t4:t4_137,t5:t5_138,t6:t6_139,tp:tp_124
l2306EBBE:
	word32 a5_420
	word32 a3_419
	word32 a0_417
	word32 a2_418
	s1_153 = memp_free(0xA<32>, s0_109, a3_10, a4_106, mstatus, out a0_417, out a2_418, out a3_419, out a4_106, out a5_420)
l2306EBC6:
	a5_11 = 0<32>
l2306EBC8:
	0<32> = dwArg38
	s1Out = s1_153
	a0Out = a5_11
	a4Out = a4_106
	a5Out = a5_11
	s2Out = s2
	s7Out = s7
	mstatusOut = mstatus
	return ra
igmp_leavegroup_netif_exit:


word32 igmp_leavegroup(word32 ra, word32 s1, word32 a0, word32 a5, word32 s7, word32 mstatus, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg58, word32 dwArg78, word32 dwArg98, word32 dwArgA8, word32 dwArgD8, ptr32 & a0Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_netconn_do_join_leave_group
// MayUse:  a0:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s7:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +0058:[0..31] Stack +0078:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31]
// LiveOut: a0 a4 a5 mstatus s0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_leavegroup_entry:
l2306EBE8:
	word32 a4_16 = 224<i32>
	word32 s1_17 = 0xFFFFFFFA<32>
	branch (a5 & 240<i32>) != 224<i32> l2306EC20
l2306EC04:
	a4_16 = Mem13[0x4200F600<32>:int32]
	s1_17 = 0xFFFFFFFA<32>
	branch a5 == a4_16 l2306EC20
l2306EC12:
	a5 = 0x42026000<32>
	s0 = Mem13[0x420267E8<32>:int32]
	word32 s2_26 = a0
l2306EC1E:
	branch s0 != 0<32> l2306EC30
l2306EC30:
	word32 a5_29 = CONVERT(Mem13[s0 + 65<i32>:byte], byte, word32)
	a5 = a5_29 & 32<i32>
	branch (a5_29 & 32<i32>) == 0<32> l2306EC56
l2306EC3A:
	branch s2_26 == 0<32> l2306EC4A
l2306EC3E:
	a5 = Mem13[s2_26:int32]
	branch a5 == 0<32> l2306EC4A
l2306EC44:
	s0 = Mem13[a4_16 + 4<i32>:word32]
	branch a5 != a4_16 l2306EC56
l2306EC4A:
	word32 a0_50
	ra = igmp_leavegroup_netif(ra, s0, a4_16, s7, mstatus, dwArg18, dwArg28, dwArg38, dwArg58, s1, dwArg78, dwArg98, dwArgA8, dwArgD8, out s1_17, out a0_50, out a4_16, out a5, out s2_26, out s7, out mstatus)
	branch s1_17 == 0<32> l2306EC56
l2306EC54:
	s1_17 = a0_50
l2306EC56:
	s0 = Mem13[s0:word32]
l2306EC20:
	a0Out = s1_17
	a4Out = a4_16
	a5Out = a5
	mstatusOut = mstatus
	return s0
igmp_leavegroup_exit:


void igmp_tmr(word32 ra, word32 s0, word32 s1, word32 a3, word32 a4, word32 s7, word32 mstatus, word32 dwArg38, word32 dwArg48, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgB8, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s7:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
igmp_tmr_entry:
l2306EC5A:
	word32 s1_25 = Mem6[0x420267E8<32>:int32]
	word32 s3_21 = 1<32>
	word32 s4_102 = 0x4200F000<32>
	word32 s5_104 = 2<32>
	word32 s2_106 = 0x420267F0<32>
l2306EC82:
	branch s1_25 != 0<32> l2306EC96
l2306EC96:
	word32 s1_108 = Mem27[s0 + 44<i32>:word32]
l2306EC98:
	branch s0 != 0<32> l2306EC9E
l2306EC9E:
	word32 a5_31 = CONVERT(Mem30[s0 + 10<i32>:uint16], uint16, word32)
	branch a5_31 == 0<32> l2306ECDA
l2306ECA4:
	word32 a5_33 = a5_31 + 0xFFFFFFFF<32> << 16<i32>
	Mem35[s0 + 10<i32>:word16] = SLICE(a5_33 >>u 16<i32>, word16, 0)
	branch a5_33 >>u 16<i32> != 0<32> l2306ECDA
l2306ECB0:
	branch CONVERT(Mem35[s0 + 9<i32>:byte], byte, word32) != s3_21 l2306ECDA
l2306ECB8:
	s0 = Mem35[a4 + 4<i32>:word32]
	branch a4 == Mem35[s4_102 + 1536<i32>:int32] l2306ECDA
l2306ECC2:
	Mem43[s0 + 9<i32>:byte] = SLICE(s5_104, byte, 0)
	Mem51[s2_106 + 122<i32>:word16] = SLICE(CONVERT(Mem43[s2_106 + 122<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a0_217
	word32 a2_218
	word32 a5_219
	ra = igmp_send(ra, s0, a3, a4, s7, mstatus, dwArg38, dwArg48, s1, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0, out s1_108, out a0_217, out a2_218, out a3, out a4, out a5_219, out s2_106, out s3_21, out s4_102, out s5_104, out s7, out mstatus)
l2306ECDA:
	s0 = Mem85[s0:word32]
l2306EC9A:
	s1_25 = Mem30[s1_108:word32]
l2306EC84:
	return
igmp_tmr_exit:


word32 ip4_input_accept(word32 a0, word32 a4, ptr32 & a3Out, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
// MayUse:  a0:[0..31] a4:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
ip4_input_accept_entry:
l2306ECDE:
	branch (CONVERT(Mem0[a0 + 65<i32>:byte], byte, word32) & 1<32>) == 0<32> l2306ED0E
l2306ED0E:
	a3Out = a3
	a4Out = a4
	return 0<32>
l2306ECE6:
	word32 a0_9 = Mem0[a4 + 4<i32>:word32]
	word32 a0_11 = 0<32>
	branch a4 == 0<32> l2306ED12
l2306ECEE:
	word32 a5_13 = Mem0[0x4202692C<32>:int32]
	a0_11 = 1<32>
	branch a4 == a5_13 l2306ED12
l2306ED12:
	a3Out = a3
	a4Out = a4
	return a0_11
l2306ECFC:
	word32 a3_20
	word32 a4_21
	word32 a5_48
	word32 a0_25 = CONVERT(ip4_addr_isbroadcast_u32(a5_13, a0_9, out a3_20, out a4_21, out a5_48) != 0<32>, bool, word32)
	a3Out = a3_20
	a4Out = a4_21
	return a0_25
ip4_input_accept_exit:


word32 ip4_route(word32 a2, word32 a5, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_send
//      tcp_input
//      tcp_output_control_segment
//      tcp_output
//      udp_sendto
//      icmp_dest_unreach
//      altcp_tcp_connect
// MayUse:  a2:[0..31] a5:[0..31]
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a2 a3 a4 a5
// Preserved: sp
ip4_route_entry:
l2306ED14:
	word32 a4_24
	word32 a0_12
	word32 a3_15 = a5 & 240<i32>
	branch (a5 & 240<i32>) != 224<i32> l2306ED2C
l2306ED22:
	a4_24 = 0x4200F000<32>
	a0_12 = Mem0[0x4200F604<32>:int32]
	branch a0_12 != 0<32> l2306ED9E
l2306ED2C:
	a0_12 = Mem0[0x420267E8<32>:int32]
l2306ED34:
	branch a0_12 != 0<32> l2306ED70
l2306ED70:
	a3_15 = CONVERT(Mem0[a0_12 + 65<i32>:byte], byte, word32)
	branch (a3_15 & 1<i32>) == 0<32> l2306ED98
l2306ED7A:
	word32 a4_18 = a3_15 >>u 2<u32> & 1<32>
	branch a4_18 == 0<32> l2306ED98
l2306ED82:
	a0_12 = Mem0[a4_18 + 4<i32>:word32]
	branch a4_18 == 0<32> l2306ED98
l2306ED86:
	a0_12 = Mem0[a2 + 8<i32>:word32]
	a4_24 = (a4_18 ^ a5) & a2
	branch a4_24 == 0<32> l2306ED9E
l2306ED8E:
	a3_15 = a3_15 & 2<32>
	branch (a3_15 & 2<32>) != 0<32> l2306ED98
l2306ED92:
	a0_12 = Mem0[a4_24 + 12<i32>:word32]
	branch a5 == a4_24 l2306ED9E
l2306ED98:
	a0_12 = Mem0[a0_12:word32]
l2306ED36:
	word32 a4_31 = Mem0[0x420267E4<32>:int32]
	branch a4_31 == 0<32> l2306ED5C
l2306ED40:
	word32 a3_32 = CONVERT(Mem0[a4_31 + 65<i32>:byte], byte, word32)
	a2 = 5<32>
	a3_15 = a3_32 & 5<32>
	branch (a3_32 & 5<32>) != 5<32> l2306ED5C
l2306ED4C:
	a4_24 = Mem0[(a3_32 & 5<32>) + 4<i32>:word32]
	branch (a3_32 & 5<32>) == 0<32> l2306ED5C
l2306ED50:
	a5 = a5 & 255<i32>
	a3_15 = 127<i32>
	branch (a5 & 255<i32>) != 127<i32> l2306ED9C
l2306ED9C:
	a0_12 = a4_24
l2306ED9E:
	a2Out = a2
	a3Out = a3_15
	a4Out = a4_24
	a5Out = a5
	return a0_12
l2306ED5C:
	word32 a4_42 = CONVERT(Mem0[0x4202682E<32>:uint16], uint16, word32)
	Mem44[0x4202682E<32>:word16] = SLICE(a4_42 + 1<32>, word16, 0)
	a2Out = a2
	a3Out = a3_15
	a4Out = a4_42 + 1<32>
	a5Out = 0x420267F0<32>
	return a0_12
ip4_route_exit:


void ip4_input(word32 ra, word32 s0, word32 a0, word32 a1, word32 a3, word32 s3, word32 s4, word32 s5, word32 s6, word32 s8, word32 s10, word32 s11, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg4C, word32 dwArg68, word32 dwArg78, word32 dwArg88, word32 dwArg8C, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB4, word32 dwArgB8, word32 dwArgBC, word32 dwArgC8, word32 dwArgD0, word32 dwArgD4, word32 dwArgD8, word32 dwArgDC, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ethernet_input
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s10:[0..31] s11:[0..31] s3:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s8:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +004C:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B4:[0..31] Stack +00B8:[0..31] Stack +00BC:[0..31] Stack +00C8:[0..31] Stack +00D0:[0..31] Stack +00D4:[0..31] Stack +00D8:[0..31] Stack +00DC:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_input_entry:
l2306EDA0:
	Mem28[0x42026822<32>:word16] = SLICE(CONVERT(Mem24[0x42026822<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 s3_30 = Mem28[a0 + 4<i32>:int32]
	word32 s6_32 = CONVERT(Mem28[s3_30:byte], byte, word32)
	word32 a4_33 = s6_32 >>u 4<u32>
	branch s6_32 >>u 4<u32> == 4<32> l2306EE0C
l2306EE0C:
	word32 ra_244
	word32 s6_169 = (s6_32 & 15<i32>) << 2<i32>
	word32 a5_1492
	word32 a0_41 = lwip_htons(CONVERT(Mem28[s3_30 + 2<i32>:byte], byte, word32) | CONVERT(Mem28[s3_30 + 3<i32>:byte], byte, word32) << 8<i32>, out a5_1492)
	word32 s2_35 = a0
	word32 s4_122 = a1
	word32 s1_48 = CONVERT(SLICE(s6_169, word16, 0), word16, word32)
	word32 s5_49 = a0_41
	ra_244 = ra
	branch a0_41 >=u CONVERT(Mem28[a0 + 8<i32>:uint16], uint16, word32) l2306EE42
l2306EE3A:
	word32 s8_1510
	word32 a5_1509
	word32 a2_1508
	ra_244 = pbuf_realloc(ra, 0x420267F0<32>, a0, a0_41, a3, s6_32 >>u 4<u32>, a0, s3_30, a1, mstatus, s0, dwArg68, dwArg98, dwArgB8, dwArgD8, dwArgE8, dwArgF8, dwArg0138, out s1_48, out a2_1508, out a3, out a4_33, out a5_1509, out s2_35, out s3_30, out s4_122, out s5_49, out s6_169, out s8_1510, out mstatus)
l2306EE42:
	word32 s0_567
	branch CONVERT(Mem28[s2_35 + 10<i32>:uint16], uint16, word32) <u s1_48 l2306EE58
l2306EE4A:
	branch CONVERT(Mem28[s2_35 + 8<i32>:uint16], uint16, word32) <u s5_49 l2306EE58
l2306EE52:
	branch s1_48 >u 0x13<32> l2306EE74
l2306EE74:
	word32 a3_92
	word32 a4_93
	word32 a5_1527
	word32 a2_1526
	word32 a0_124 = inet_chksum(s3_30, s1_48, a4_33, out a2_1526, out a3_92, out a4_93, out a5_1527)
	branch a0_124 == 0<32> l2306EE90
l2306EE90:
	word32 s5_133
	word32 a5_107 = CONVERT(Mem28[s3_30 + 19<i32>:byte], byte, word32) << 24<i32> | ((CONVERT(Mem28[s3_30 + 17<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem28[s3_30 + 16<i32>:byte], byte, word32)) | CONVERT(Mem28[s3_30 + 18<i32>:byte], byte, word32) << 16<i32>)
	Mem108[a5_107 + 20<i32>:word32] = 0x42026918<32>
	word32 a3_116 = CONVERT(Mem108[s3_30 + 13<i32>:byte], byte, word32) << 8<i32> | CONVERT(Mem108[s3_30 + 12<i32>:byte], byte, word32) | CONVERT(Mem108[s3_30 + 14<i32>:byte], byte, word32) << 16<i32>
	Mem120[(CONVERT(Mem108[s3_30 + 15<i32>:byte], byte, word32) << 24<i32> | a3_116) + 16<i32>:word32] = 0x42026918<32>
	word32 s1_102 = 0x42026918<32>
	word32 a4_121 = 224<i32>
	branch (a5_107 & 240<i32>) != 224<i32> l2306EF66
l2306EF66:
	a0_124 = ip4_input_accept(s4_122, 224<i32>, out a3_116, out a4_121)
	branch a0_124 != 0<32> l2306EF9A
l2306EF9A:
	branch s4_122 != 0<32> l2306EF1C
l2306EF9E:
l2306EF6E:
	a4_121 = CONVERT(Mem120[0x4202692C<32>:byte], byte, word32)
	branch a4_121 == 127<i32> l2306EEEE
l2306EF7A:
	s5_133 = Mem120[0x420267E8<32>:int32]
l2306EF82:
	branch s5_133 == 0<32> l2306EEEE
l2306EF86:
	branch s5_133 != s4_122 l2306EF90
l2306EF90:
	a0_124 = ip4_input_accept(s5_133, a4_121, out a3_116, out a4_121)
	branch a0_124 == 0<32> l2306EF8A
l2306EF98:
l2306EF8A:
	s5_133 = Mem120[s5_133:int32]
l2306EEE4:
	word32 a5_148 = CONVERT(Mem120[s4_122 + 65<i32>:byte], byte, word32)
	branch (a5_148 & 32<i32>) != 0<32> l2306EEFC
l2306EEFC:
	a0_124 = igmp_lookfor_group(s4_122, 224<i32>, a5_148 & 32<i32>)
	branch a0_124 == 0<32> l2306EEEE
l2306EF0C:
	s1_102 = Mem120[240<i32>:word32]
	branch a3_116 == 0x10000E0<32> l2306EF3E
l2306EF3E:
	s5_133 = s4_122
	branch true l2306EF1C
l2306EF1C:
	s5_133 = s4_122
l2306EEEE:
	a4_121 = CONVERT(Mem120[s3_30 + 9<i32>:byte], byte, word32)
	branch a4_121 == 0x11<32> l2306EFA0
l2306EFA0:
	word32 a4_172 = s3_30 + s6_169
	a3_116 = CONVERT(Mem120[a4_172 + 2<i32>:byte], byte, word32)
	a4_121 = 0x4000400<32>
	branch (CONVERT(Mem120[a4_172 + 3<i32>:byte], byte, word32) << 8<i32> | a3_116) != 0x4000400<32> l2306EEF8
l2306EFBA:
	s5_133 = s4_122
l2306EEF8:
	s5_133 = 0<32>
l2306EF1E:
	s1_102 = Mem120[a0_124 + 16<i32>:word32]
	branch a0_124 == 0<32> l2306EFBC
l2306EF22:
	word32 a5_198
	branch ip4_addr_isbroadcast_u32(a0_124, s4_122, out a3_116, out a4_121, out a5_198) != 0<32> l2306EF36
l2306EF28:
	s1_102 = Mem120[a5_198 + 16<i32>:word32]
	a4_121 = 224<i32>
	branch (a5_198 & 240<i32>) != 224<i32> l2306EFBC
l2306EFBC:
	branch s5_133 != 0<32> l2306EF42
l2306EF42:
	word32 a4_213 = CONVERT(Mem120[s3_30 + 7<i32>:byte], byte, word32)
	branch (CONVERT(Mem120[s3_30 + 6<i32>:byte], byte, word32) & 63<i32> | a4_213 << 8<i32>) == 0<32> l2306EFD2
l2306EFD2:
	Mem223[s1_102:word32] = s5_133
	Mem226[s1_102 + 4<i32>:word32] = s4_122
	Mem227[s1_102 + 8<i32>:word32] = s3_30
	Mem241[s1_102 + 12<i32>:word16] = SLICE((CONVERT(Mem227[s3_30:byte], byte, word32) & 0xF<32>) << 2<i32>, word16, 0)
	word32 a0_261
	word32 a2_263
	word32 s3_271
	word32 s5_273
	word32 s6_274
	word32 s8_276
	word32 s0_268
	word32 s2_270
	word32 s4_272
	word32 s1_269
	word32 ra_279 = raw_input(ra_244, s2_35, s4_122, dwArgF8, out s0_268, out s1_269, out a0_261, out a2_263, out s2_270, out s3_271, out s4_272, out s5_273, out s6_274, out s8_276)
	branch a0_261 == s8_276 l2306F070
l2306EFFA:
	word32 a5_1575
	word32 a1_1573
	word32 a4_1574
	word32 a3_286
	word32 a0_283 = pbuf_remove_header(s2_270, s6_274, a2_263, out a1_1573, out a3_286, out a4_1574, out a5_1575)
	word32 a5_288 = CONVERT(Mem241[s3_271 + 9<i32>:byte], byte, word32)
	word32 a4_289 = 2<32>
	branch a5_288 == 2<32> l2306F09E
l2306F09E:
	s1_269 = igmp_input(ra_279, s1_269, s2_270, s4_272, 0x4202692C<32>, a3_286, 2<32>, s4_272, mstatus, dwArgC8, dwArgF8)
l2306F00C:
	branch a5_288 >u 2<32> l2306F05C
l2306F05C:
	branch a5_288 == 6<32> l2306F08A
l2306F08A:
	s1_269 = tcp_input(ra_279, s0_268, s2_270, s3_271, s5_273, s6_274, a0_261, s10, s11, mstatus, s8, s6, dwLoc18, dwLoc14, dwLoc0C, dwLoc08, dwLoc04, dwArg04, dwArg08, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg4C, s5, s3, ra, dwArg68, dwArg78, dwArg88, dwArg8C, dwArg98, dwArg9C, dwArgA8, dwArgB8, dwArgBC, dwArgDC, dwArgF8, dwArg0118, dwArg0138, dwArg0158, dwArg0178)
l2306F062:
	a4_289 = 0x11<32>
	branch a5_288 != 0x11<32> l2306F014
l2306F068:
	s1_269 = udp_input(ra_279, s2_270, s4_272, a2_263, s5_273, mstatus, dwArg08, dwArg18, dwArg38, dwArg48, s5, dwArg68, dwArg78, dwArg88, dwArgB4, dwArgB8, dwArgD0, dwArgD4, dwArgF8)
l2306F010:
	branch a5_288 == s8_276 l2306F094
l2306F094:
	s1_269 = icmp_input(ra_279, s2_270, s4_272, a3_286, s4_272, mstatus, s0, dwArg48, s5, dwArg78, dwArg88, dwArg98, dwArgB8, dwArgC8, dwArgF8)
l2306F014:
	branch a0_261 == 2<32> l2306F054
l2306F01A:
	word32 a5_448
	branch ip4_addr_isbroadcast_u32(a0_283, s5_273, out a3_286, out a4_289, out a5_448) != 0<32> l2306F040
l2306F022:
	word32 s1_450 = Mem241[a5_448 + 20<i32>:word32]
	a4_289 = 224<i32>
	branch (a5_448 & 240<i32>) == 224<i32> l2306F040
l2306F030:
	word32 a4_462
	word32 s1_1591
	ra_279 = icmp_dest_unreach(ra_279, s0_268, s1_450, pbuf_header_force(s2_270, s6_274, a2_263, out a4_462), a4_462, a0_261, mstatus, s8, dwArg38, dwArg48, dwArg68, dwArg78, dwArg88, dwArgA8, dwArgB8, dwArgE8, out s0_268, out s1_1591, out a3_286, out a4_289, out s2_270, out s4_272, out mstatus)
l2306F040:
	Mem501[s0_268 + 64<i32>:word16] = SLICE(CONVERT(Mem241[s0_268 + 64<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem504[s0_268 + 54<i32>:word16] = SLICE(CONVERT(Mem501[s0_268 + 54<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306F054:
	word32 mstatus_1590
	word32 a4_1581
	word32 s8_1589
	word32 a5_1582
	word32 a7_1583
	word32 s3_1585
	word32 s4_1586
	word32 s5_1587
	word32 s6_1588
	word32 s2_1584
	word32 a3_1580
	word32 a0_1577
	word32 a1_1578
	word32 a2_1579
	word32 s0_1576
	pbuf_free(ra_279, s2_270, a3_286, a4_289, s4_272, mstatus, dwArgF8, out s0_1576, out s1_269, out a0_1577, out a1_1578, out a2_1579, out a3_1580, out a4_1581, out a5_1582, out a7_1583, out s2_1584, out s3_1585, out s4_1586, out s5_1587, out s6_1588, out s8_1589, out mstatus_1590)
l2306F070:
	Mem550[s1_269:word32] = 0<32>
	Mem551[s1_269 + 4<i32>:word32] = 0<32>
	Mem552[s1_269 + 8<i32>:word32] = 0<32>
	Mem553[s1_269 + 12<i32>:word16] = 0<16>
	Mem554[s1_269 + 16<i32>:word32] = 0<32>
	Mem555[s1_269 + 20<i32>:word32] = 0<32>
l2306EF54:
	word32 s1_1558
	word32 a5_1564
	word32 a0_1559
	word32 a1_1560
	word32 a2_1561
	word32 a3_1562
	word32 a7_1565
	word32 a4_1563
	word32 s2_1566
	word32 s4_1568
	word32 s3_1567
	word32 s6_1570
	word32 mstatus_1572
	word32 s8_1571
	word32 s5_1569
	pbuf_free(ra_244, s2_35, a3_116, a4_213 << 8<i32>, s4_122, mstatus, dwArgF8, out s0_567, out s1_1558, out a0_1559, out a1_1560, out a2_1561, out a3_1562, out a4_1563, out a5_1564, out a7_1565, out s2_1566, out s3_1567, out s4_1568, out s5_1569, out s6_1570, out s8_1571, out mstatus_1572)
	Mem592[s0_567 + 66<i32>:word16] = SLICE(CONVERT(Mem120[s0_567 + 66<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306EFC0:
	Mem604[0x42026826<32>:word16] = SLICE(CONVERT(Mem120[0x42026826<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	word32 a5_1599
	word32 mstatus_1607
	word32 a7_1600
	word32 s2_1601
	word32 s4_1603
	word32 s5_1604
	word32 s6_1605
	word32 s8_1606
	word32 s3_1602
	word32 a4_1598
	word32 s0_1592
	word32 a0_1594
	word32 a1_1595
	word32 a2_1596
	word32 a3_1597
	word32 s1_1593
	pbuf_free(ra_244, s2_35, a3_116, a4_121, s4_122, mstatus, dwArgF8, out s0_1592, out s1_1593, out a0_1594, out a1_1595, out a2_1596, out a3_1597, out a4_1598, out a5_1599, out a7_1600, out s2_1601, out s3_1602, out s4_1603, out s5_1604, out s6_1605, out s8_1606, out mstatus_1607)
l2306EF36:
	word32 a2_1546
	word32 s1_1543
	word32 a0_1544
	word32 a3_1547
	word32 s5_1554
	word32 a7_1550
	word32 s6_1555
	word32 s8_1556
	word32 a5_1549
	word32 s2_1551
	word32 s3_1552
	word32 s4_1553
	word32 a4_1548
	word32 a1_1545
	word32 mstatus_1557
	pbuf_free(ra_244, s2_35, a3_116, a4_121, s4_122, mstatus, dwArgF8, out s0_567, out s1_1543, out a0_1544, out a1_1545, out a2_1546, out a3_1547, out a4_1548, out a5_1549, out a7_1550, out s2_1551, out s3_1552, out s4_1553, out s5_1554, out s6_1555, out s8_1556, out mstatus_1557)
l2306EE7E:
	word32 a2_1531
	word32 a5_1534
	word32 a0_1529
	word32 a1_1530
	word32 s1_1528
	word32 a7_1535
	word32 a3_1532
	word32 mstatus_1542
	word32 s4_1538
	word32 s3_1537
	word32 s5_1539
	word32 s6_1540
	word32 s8_1541
	word32 s2_1536
	word32 a4_1533
	pbuf_free(ra_244, s2_35, a3_92, a4_93, s4_122, mstatus, dwArgF8, out s0_567, out s1_1528, out a0_1529, out a1_1530, out a2_1531, out a3_1532, out a4_1533, out a5_1534, out a7_1535, out s2_1536, out s3_1537, out s4_1538, out s5_1539, out s6_1540, out s8_1541, out mstatus_1542)
	Mem696[s0_567 + 56<i32>:word16] = SLICE(CONVERT(Mem28[s0_567 + 56<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306EE58:
	word32 a0_1512
	word32 a1_1513
	word32 a2_1514
	word32 a3_1515
	word32 s1_1511
	word32 a4_1516
	word32 a5_1517
	word32 a7_1518
	word32 s4_1521
	word32 s5_1522
	word32 s6_1523
	word32 s2_1519
	word32 s3_1520
	word32 s8_1524
	word32 mstatus_1525
	pbuf_free(ra_244, s2_35, a3, a4_33, s4_122, mstatus, dwArgF8, out s0_567, out s1_1511, out a0_1512, out a1_1513, out a2_1514, out a3_1515, out a4_1516, out a5_1517, out a7_1518, out s2_1519, out s3_1520, out s4_1521, out s5_1522, out s6_1523, out s8_1524, out mstatus_1525)
	Mem734[s0_567 + 58<i32>:word16] = SLICE(CONVERT(Mem28[s0_567 + 58<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306EE68:
	Mem739[s0_567 + 54<i32>:word16] = SLICE(CONVERT(Mem736[s0_567 + 54<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306EDDA:
	word32 s1_749
	word32 a2_1496
	word32 a3_1497
	word32 a4_1498
	word32 a1_1495
	word32 a5_1499
	word32 s4_1503
	word32 a0_1494
	word32 s0_1493
	word32 mstatus_1507
	word32 s8_1506
	word32 s6_1505
	word32 s5_1504
	word32 s3_1502
	word32 s2_1501
	word32 a7_1500
	pbuf_free(ra, a0, a3, s6_32 >>u 4<u32>, s4, mstatus, dwArgF8, out s0_1493, out s1_749, out a0_1494, out a1_1495, out a2_1496, out a3_1497, out a4_1498, out a5_1499, out a7_1500, out s2_1501, out s3_1502, out s4_1503, out s5_1504, out s6_1505, out s8_1506, out mstatus_1507)
	Mem767[s1_749 + 68<i32>:word16] = SLICE(CONVERT(Mem28[s1_749 + 68<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
	Mem770[s1_749 + 54<i32>:word16] = SLICE(CONVERT(Mem767[s1_749 + 54<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306EDF2:
	0<32> = dwArg0128
	return
ip4_input_exit:


word32 ip4_output_if_opt_src(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s4, word32 s5, word32 s6, word32 s7, uint16 wArg00, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_output_if_opt
//      ip4_output_if_src
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0000:[0..15]
// LiveOut: a0 a1 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_opt_src_entry:
l2306F0B0:
	word32 a6_275
	word32 s2_242
	word32 a0_303
	word32 a5_309
	word32 a4_308
	word32 s3_29 = a6
	word32 s9_111 = CONVERT(wArg00, uint16, word32)
	branch a2 == 0<32> l2306F2CC
l2306F2CC:
	s2_242 = s2
	branch CONVERT(Mem25[a0 + 10<i32>:uint16], uint16, word32) <=u 0x13<32> l2306F136
l2306F2D6:
	s2_242 = fp + -52<i32>
	a6_275 = a6
l2306F0D4:
	word32 s1_157
	s4 = a1
	s2_242 = a2
	s6 = a3
	s5 = a4
	s7 = a5
	branch s9_111 == 0<32> l2306F2C0
l2306F2C0:
	s1_157 = 0x14<32>
	s9_111 = 0<32>
	a6_275 = a6
l2306F0E2:
	branch s9_111 <=u 40<i32> l2306F118
l2306F118:
	word32 s0_62 = CONVERT(SLICE(s9_111 + 3<i32> & 0xFFFFFFFC<32>, word16, 0), word16, word32)
	s1_157 = CONVERT(SLICE(s0_62 + 20<i32>, word16, 0), word16, word32)
	word32 a3_517
	word32 a4_518
	word32 a5_519
	word32 a2_516
	branch pbuf_add_header(a0, s0_62, out a1, out a2_516, out a3_517, out a4_518, out a5_519) == 0<32> l2306F14C
l2306F14C:
	word32 a2_521
	word32 a5_524
	word32 a3_522
	word32 a4_523
	word32 a1_520
	memcpy(Mem66[a0 + 4<i32>:int32], a7, s9_111, out a1_520, out a2_521, out a3_522, out a4_523, out a5_524, out a6_275, out a7)
	branch s9_111 >=u s0_62 l2306F16C
l2306F15C:
	word32 a2_528
	word32 a5_531
	word32 a3_529
	word32 a4_530
	word32 t1_525
	word32 a0_526
	word32 a1_527
	ra = memset(ra, Mem66[a0 + 4<i32>:int32] + s9_111, 0<32>, s0_62 - s9_111, out t1_525, out a0_526, out a1_527, out a2_528, out a3_529, out a4_530, out a5_531)
l2306F16C:
	word32 a3_107 = Mem66[a0 + 4<i32>:int32]
	word32 a5_110 = 0<32>
	s9_111 = 0<32>
l2306F176:
	a5_110 = a5_110 + 1<32>
	s9_111 = s9_111 + CONVERT(Mem66[(a5_110 << 1<u32>) + a3_107:uint16], uint16, word32)
	branch a5_110 < s0_62 >>u 1<i32> l2306F176
l2306F188:
	word32 a5_535
	word32 a2_532
	word32 a3_533
	word32 a4_534
	branch pbuf_add_header(a0, 0x14<32>, out a1, out a2_532, out a3_533, out a4_534, out a5_535) != 0<32> l2306F136
l2306F192:
	word32 a4_209
	s0 = Mem132[a0 + 4<i32>:int32]
	Mem137[s0 + 8<i32>:byte] = SLICE(a3, byte, 0)
	Mem141[s0 + 9<i32>:byte] = SLICE(a5, byte, 0)
	word32 a5_145 = Mem141[a2:int32]
	Mem150[s0 + 16<i32>:byte] = SLICE(a5_145, byte, 0)
	Mem151[s0 + 17<i32>:byte] = SLICE(a5_145 >>u 8<u32>, byte, 0)
	Mem156[s0 + 18<i32>:byte] = SLICE(a5_145 >>u 0x10<u32>, byte, 0)
	word32 a4_162 = (s1_157 >>u 2<u32> | 64<i32>) & 255<i32>
	Mem163[s0:byte] = SLICE(a4_162, byte, 0)
	Mem179[s0 + 19<i32>:byte] = SLICE(a5_145 >>u 0x18<u32>, byte, 0)
	Mem180[s0 + 1<i32>:byte] = SLICE(a4, byte, 0)
	word32 a5_536
	word32 a0_188 = lwip_htons(CONVERT(Mem180[a0 + 8<i32>:uint16], uint16, word32), out a5_536)
	Mem191[s0 + 2<i32>:byte] = SLICE(a0_188, byte, 0)
	word32 a0_193 = CONVERT(Mem191[0x4200F608<32>:uint16], uint16, word32)
	Mem194[s0 + 3<i32>:byte] = SLICE(a0_188 >>u 8<u32>, byte, 0)
	Mem195[s0 + 6<i32>:byte] = 0<8>
	Mem196[s0 + 7<i32>:byte] = 0<8>
	word32 a5_537
	word32 a0_197 = lwip_htons(a0_193, out a5_537)
	Mem200[s0 + 5<i32>:byte] = SLICE(a0_197 >>u 8<u32>, byte, 0)
	word32 a5_201 = CONVERT(Mem200[0x4200F608<32>:uint16], uint16, word32)
	Mem202[s0 + 4<i32>:byte] = SLICE(a0_197, byte, 0)
	word32 s7_147 = a3 << 8<i32> | a5
	word32 a4_170 = a4_162 << 8<i32> | a4
	Mem205[0x4200F608<32>:word16] = SLICE(a5_201 + 1<32>, word16, 0)
	s1 = CONVERT(SLICE(a4_170 >> 8<i32> | a4_170 << 8<u32>, word16, 0), word16, word32) + ((CONVERT(SLICE(s7_147 << 8<u32> | s7_147 >> 8<u32>, word16, 0), word16, word32) + (CONVERT(SLICE(a5_145, word16, 0), word16, word32) + (a5_145 >>u 0x10<u32>))) + s9_111) + a0_188
	s6 = a3 << 8<i32>
	s7 = s7_147 >> 8<u32>
	s5 = 0x4200F608<32>
	word32 a0_203 = a0_197 + s1
	branch a1 != 0<32> l2306F2C6
l2306F2C6:
	a4_209 = Mem205[a1:int32]
l2306F252:
	a4_209 = Mem205[0x230CBADC<32>:int32]
l2306F25A:
	Mem215[s0 + 15<i32>:byte] = SLICE(a4_209 >>u 0x18<u32>, byte, 0)
	Mem219[s0 + 12<i32>:byte] = SLICE(a4_209, byte, 0)
	Mem220[s0 + 13<i32>:byte] = SLICE(a4_209 >>u 8<u32>, byte, 0)
	word32 a5_221 = a4_209 >>u 0x10<u32>
	Mem226[s0 + 14<i32>:byte] = SLICE(a5_221, byte, 0)
	word32 a4_225 = (a4_209 & 0xFFFFFFF<32>) + a0_203 + a5_221
	word32 a4_229 = (a4_225 & 0xFFFFFFF<32>) + (a4_225 >>u 0x10<u32>)
	word32 a5_234 = CONVERT(SLICE(~((a4_229 >>u 0x10<u32>) + a4_229), word16, 0), word16, word32)
	Mem235[s0 + 10<i32>:byte] = SLICE(a5_234, byte, 0)
	Mem237[s0 + 11<i32>:byte] = SLICE(a5_234 >>u 8<i32>, byte, 0)
	a3 = 0xFFFFFFF<32>
l2306F2A0:
	word32 a4_241 = CONVERT(Mem240[0x42026820<32>:uint16], uint16, word32)
	Mem249[0x42026820<32>:word16] = SLICE(a4_241 + 1<32>, word16, 0)
	word32 a5_255 = Mem249[a6 + 20<i32>:int32]
	word32 t1_314
	word32 t4_315
	word32 t5_316
	word32 t6_317
	call a5_255 (retsize: 0;)
		uses: a0:a6,a1:a0,a2:s2_242,a3:a3_280,a4:a4_241 + 1<32>,a5:a5_255,a6:a6_275,a7:a7_281,ra:ra_259,s0:s0_264,s1:s1_265,s2:s2_242,s3:a6,s4:s4_267,s5:s5_269,s6:s6_271,s7:s7_273,s8:a0,s9:s9_257,Stack +0028:dwLoc28,Stack +0050:wArg00,t1:t1_314,t4:t4_315,t5:t5_316,t6:t6_317
		defs: a0:a0_303,a1:a1_306,a4:a4_308,a5:a5_309,a7:a7_313,s2:s2_298,s3:s3_292,s5:s5_300,s6:s6_301,s7:s7_302,s9:s9_294,t1:t1_314,t4:t4_315,t5:t5_316,t6:t6_317
l2306F136:
	word32 a4_321 = CONVERT(Mem320[0x42026834<32>:uint16], uint16, word32)
	Mem324[0x42026834<32>:word16] = SLICE(a4_321 + 1<32>, word16, 0)
	a5_309 = 0x420267F0<32>
	a0_303 = 0xFFFFFFFE<32>
	a4_308 = a4_321 + 1<32>
l2306F0EA:
	word32 a4_327 = CONVERT(Mem25[0x42026834<32>:uint16], uint16, word32)
	Mem330[0x42026834<32>:word16] = SLICE(a4_327 + 1<32>, word16, 0)
	a5_309 = 0x420267F0<32>
	a0_303 = 0xFFFFFFFA<32>
	a4_308 = a4_327 + 1<32>
l2306F0FE:
	s0Out = dwArgCC
	s1Out = dwLoc4C
	a0Out = a0_303
	a1Out = a1
	a3Out = s2
	a4Out = a4_308
	a5Out = a5_309
	a7Out = a7
	s2Out = s2_242
	s3Out = s3_29
	s4Out = dwArg0168
	s5Out = s5
	s6Out = s6
	s7Out = s7
	s8Out = dwArg0148
	s9Out = s9_111
	return dwLoc08
ip4_output_if_opt_src_exit:


word32 ip4_output_if_opt(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 a7, word32 s4, word32 s5, word32 s6, word32 s7, uint16 wArg00, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      igmp_send
//      ip4_output_if
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] a7:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31] Stack +0000:[0..15]
// LiveOut: a0 a1 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_opt_entry:
l2306F2FC:
	word32 t1_4 = CONVERT(wArg00, uint16, word32)
	branch a2 == 0<32> l2306F310
l2306F302:
	branch a1 == 0<32> l2306F30C
l2306F304:
	branch Mem0[a1:int32] != 0<32> l2306F310
l2306F30C:
	a1 = a6 + 4<i32>
l2306F310:
	uint16 wArg00_84 = SLICE(t1_4, uint16, 0)
l2306F312_thunk_ip4_output_if_opt_src:
	word32 a0_56
	word32 a3_58
	word32 a4_59
	word32 a5_60
	word32 s0_63
	word32 s1_64
	word32 s3_65
	word32 s4_66
	word32 s8_67
	word32 s9_68
	word32 a1_72
	word32 a7_73
	word32 s2_74
	word32 s5_75
	word32 s6_76
	word32 s7_77
	word32 ra_62 = ip4_output_if_opt_src(ra, s0, s1, a0, a1, a2, a3, a4, a5, a6, a7, s4, s5, s6, s7, wArg00_84, out s0_63, out s1_64, out a0_56, out a1_72, out a3_58, out a4_59, out a5_60, out a7_73, out s2_74, out s3_65, out s4_66, out s5_75, out s6_76, out s7_77, out s8_67, out s9_68)
	s0Out = s0_63
	s1Out = s1_64
	a0Out = a0_56
	a1Out = a1_72
	a3Out = a3_58
	a4Out = a4_59
	a5Out = a5_60
	a7Out = a7_73
	s2Out = s2_74
	s3Out = s3_65
	s4Out = s4_66
	s5Out = s5_75
	s6Out = s6_76
	s7Out = s7_77
	s8Out = s8_67
	s9Out = s9_68
	return ra_62
ip4_output_if_opt_exit:


word32 ip4_output_if(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s4, word32 s5, word32 s6, word32 s7, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & s8Out, ptr32 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_send
//      tcp_output_control_segment
//      tcp_output
//      icmp_input
//      icmp_dest_unreach
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_entry:
l2306F316:
	word32 a0_21
	word32 a1_22
	word32 a3_24
	word32 a4_25
	word32 a5_26
	word32 a7_28
	word32 s0_30
	word32 s1_31
	word32 s2_32
	word32 s3_33
	word32 s4_34
	word32 s5_35
	word32 s6_36
	word32 s7_37
	word32 s8_38
	word32 s9_39
	word32 ra_29 = ip4_output_if_opt(ra, s0, s1, a0, a1, a2, a3, a4, a5, a6, 0<32>, s4, s5, s6, s7, 0<u16>, out s0_30, out s1_31, out a0_21, out a1_22, out a3_24, out a4_25, out a5_26, out a7_28, out s2_32, out s3_33, out s4_34, out s5_35, out s6_36, out s7_37, out s8_38, out s9_39)
	s0Out = s0_30
	s1Out = s1_31
	a0Out = a0_21
	a1Out = a1_22
	a3Out = a3_24
	a4Out = a4_25
	a5Out = a5_26
	a7Out = a7_28
	s2Out = s2_32
	s3Out = s3_33
	s4Out = s4_34
	s5Out = s5_35
	s6Out = s6_36
	s7Out = s7_37
	s8Out = s8_38
	s9Out = s9_39
	return ra_29
ip4_output_if_exit:


word32 ip4_output_if_src(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 s4, word32 s5, word32 s6, word32 s7, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      udp_sendto
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] s6:[0..31] s7:[0..31]
// LiveOut: a0 a3 a4 ra s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
ip4_output_if_src_entry:
l2306F328:
	word32 a0_21
	word32 a3_23
	word32 a4_24
	word32 s1_29
	word32 s3_30
	word32 s4_31
	word32 s2_39
	word32 s5_40
	word32 s6_41
	word32 s0_62
	word32 a1_63
	word32 a5_64
	word32 a7_65
	word32 s7_66
	word32 s8_67
	word32 s9_68
	word32 ra_27 = ip4_output_if_opt_src(ra, s0, s1, a0, a1, a2, a3, a4, a5, a6, 0<32>, s4, s5, s6, s7, 0<u16>, out s0_62, out s1_29, out a0_21, out a1_63, out a3_23, out a4_24, out a5_64, out a7_65, out s2_39, out s3_30, out s4_31, out s5_40, out s6_41, out s7_66, out s8_67, out s9_68)
	s1Out = s1_29
	a0Out = a0_21
	a3Out = a3_23
	a4Out = a4_24
	s2Out = s2_39
	s3Out = s3_30
	s4Out = s4_31
	s5Out = s5_40
	s6Out = s6_41
	return ra_27
ip4_output_if_src_exit:


word32 ip4_addr_isbroadcast_u32(word32 a0, word32 a1, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      etharp_input
//      etharp_query
//      etharp_output
//      ip4_input_accept
//      ip4_input
//      raw_input
//      tcp_input
//      udp_input
//      icmp_input
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
ip4_addr_isbroadcast_u32_entry:
l2306F33A:
	word32 a0_11
	word32 a5_10 = 0xFFFFFFFD<32>
	branch a0 >u 2<32> l2306F370
l2306F370:
	a0_11 = 1<32>
l2306F346:
	a5_10 = CONVERT(Mem0[a1 + 65<i32>:byte], byte, word32)
	a0_11 = a5_10 & 2<i32>
	branch (a5_10 & 2<i32>) == 0<32> l2306F372
l2306F350:
	a0_11 = 0<32>
	branch a5_10 == a0 l2306F372
l2306F358:
	a5_10 = (a5_10 ^ a0) & a0 + -1<i32>
	branch a5_10 != 0<32> l2306F372
l2306F372:
	a3Out = a0 + -1<i32>
	a4Out = <invalid>
	a5Out = a5_10
	return a0_11
l2306F360:
	word32 a3_17 = ~(a0 + -1<i32>)
	a3Out = a3_17
	a4Out = <invalid>
	a5Out = a5_10
	return CONVERT((a3_17 & a0) - a3_17 <u 1<i32>, bool, word32)
ip4_addr_isbroadcast_u32_exit:


word32 ip4addr_aton(word32 a0, word32 a1, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_gethostbyname
//      ipaddr_addr
//      dhcpd_start
//      bl_cipstart
//      set_if
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a3 a4 a5 s0 s4 s8
// Trashed: a0 a2 a3 a4 a5 a6 a7 s0 s4 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ip4addr_aton_entry:
l2306F374:
	word32 a5_102 = CONVERT(Mem7[a0:byte], byte, word32)
	word32 a4_10 = fp + -32<i32>
l2306F39C:
	word32 s0_114
	word32 a3_24 = CONVERT(Mem23[a5_102 + 0x230CB5B1<32>:byte], byte, word32)
	word32 a3_117 = a3_24 & 4<32>
	branch (a3_24 & 4<32>) == 0<32> l2306F4CE
l2306F3AA:
	word32 a7_177 = 0xA<32>
	branch a5_102 != 48<i32> l2306F3C0
l2306F3B0:
	a5_102 = CONVERT(Mem23[a0 + 1<i32>:byte], byte, word32)
	branch (a5_102 & 223<i32>) == 88<i32> l2306F3E6
l2306F3E6:
	a5_102 = CONVERT(Mem23[a0 + 2<i32>:byte], byte, word32)
	a7_177 = 0x10<32>
	a0 = a0 + 2<32>
l2306F3BC:
	a0 = a0 + 1<32>
	a7_177 = 8<32>
l2306F3C0:
	word32 a2_138 = a0
	word32 a0_103 = 0<32>
l2306F3C4:
	a3_117 = CONVERT(Mem23[a5_102 + 0x230CB5B1<32>:byte], byte, word32)
	branch (a3_117 & 4<i32>) == 0<32> l2306F3F0
l2306F3F0:
	branch a7_177 != 0x10<32> l2306F416
l2306F3F4:
	branch (a3_117 & 68<i32>) == 0<32> l2306F416
l2306F416:
	branch a5_102 != 46<i32> l2306F42E
l2306F42E:
	branch a5_102 == 0<32> l2306F436
l2306F430:
	a3_117 = a3_117 & 8<32>
	s0_114 = 0<32>
	branch (a3_117 & 8<32>) == 0<32> l2306F458
l2306F436:
	s0_114 = (a4_10 - (fp + -32<i32>) >> 2<i32>) + 1<32>
	a5_102 = 2<32>
	branch s0_114 == 2<32> l2306F494
l2306F494:
	a5_102 = 0x1000000<32>
	s0_114 = 0<32>
	branch a0_103 >=u 0x1000000<32> l2306F458
l2306F49E:
	a4_10 = 255<i32>
	branch true l2306F458
l2306F4A8:
	a5_102 = 0<32>
l2306F444:
	branch s0_114 > 2<32> l2306F462
l2306F462:
	word32 a5_84
	branch s0_114 == 3<32> l2306F4AE
l2306F4AE:
	a5_102 = 0x10000000<32>
	s0_114 = 0<32>
	branch a0_103 >=u 0x10000000<32> l2306F458
l2306F4B6:
	a3_117 = 255<i32>
	branch true l2306F458
l2306F4C0:
	s4 = dwArg94
	branch a4_10 >u 255<i32> l2306F458
l2306F4C6:
	a5_84 = 0<32>
	a4_10 = a4_10 << 16<i32>
l2306F468:
	a5_102 = 4<32>
	branch s0_114 != 4<32> l2306F44A
l2306F46E:
	s0_114 = 0<32>
	branch a0_103 >u 255<i32> l2306F458
l2306F478:
	branch false l2306F458
l2306F47E:
	s4 = dwArg74
	branch a3_117 >u 255<i32> l2306F458
l2306F484:
	s8 = dwArg94
	branch a4_10 >u 255<i32> l2306F458
l2306F48A:
	a3_117 = a3_117 << 16<i32>
	a5_84 = a3_117 | 0x4000000<32>
	a4_10 = a4_10 << 8<i32>
l2306F4CA:
	a5_102 = a5_84 | a4_10
l2306F4AA:
	a0_103 = a0_103 | a5_102
l2306F448:
	branch s0_114 == 0<32> l2306F458
l2306F44A:
	s0_114 = 1<32>
	branch a1 == 0<32> l2306F458
l2306F450:
	Mem121[lwip_htonl(a0_103, out a3_117, out a4_10, out a5_102):word32] = a1
l2306F41A:
	branch a4_10 == fp + -20<i32> l2306F4CE
l2306F4CE:
	s0_114 = 0<32>
l2306F458:
	a0Out = s0_114
	a3Out = a3_117
	a4Out = a4_10
	a5Out = a5_102
	s4Out = s4
	s8Out = s8
	return dwArgE4
ip4addr_aton_exit:
l2306F41E:
	a4_10 = a4_10 + 4<32>
	Mem136[a4_10 + 4092<i32>:word32] = a0_103
	a5_102 = CONVERT(Mem136[a2_138 + 1<i32>:byte], byte, word32)
	a0 = a2_138 + 1<i32>
l2306F3FC:
	word32 a0_142 = a0_103 << 4<i32>
	word32 a5_143 = a5_102 + 0xA<32>
	word32 t1_144 = 97<i32>
	branch (a3_117 & 3<32>) == 2<32> l2306F40E
l2306F40A:
	t1_144 = 65<i32>
l2306F40E:
	a0_103 = a0_142 | a5_143 - t1_144
l2306F3D4:
	a0_103 = a7_177 + a0_103 + a5_102 + -48<i32>
l2306F3DE:
	a5_102 = CONVERT(Mem23[a2_138 + 1<i32>:byte], byte, word32)
	a2_138 = a2_138 + 1<32>


word32 ipaddr_addr(word32 a0, ptr32 & a0Out, ptr32 & a3Out, ptr32 & s4Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_rx_sm_disconnect_ind
//      wifi_sta_ip_set_cmd
//      iperf_server_udp
//      iperf_client_udp
//      iperf_client_tcp
//      cipsta_ip
//      http_url_req
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 s0 s4 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s4 s8 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ipaddr_addr_entry:
l2306F4D2:
	word32 a3_10
	word32 s4_23
	word32 s8_24
	word32 a5_57
	word32 a4_56
	word32 a0_25
	word32 s0_14 = ip4addr_aton(a0, fp + 0xFFFFFFEC<32>, out a0_25, out a3_10, out a4_56, out a5_57, out s4_23, out s8_24)
	branch a0_25 == 0<32> l2306F4E6
l2306F4E6:
	a0_25 = 0xFFFFFFFF<32>
l2306F4DE:
l2306F4E0:
	a0Out = a0_25
	a3Out = a3_10
	s4Out = s4_23
	s8Out = s8_24
	return s0_14
ipaddr_addr_exit:


word32 ip4addr_ntoa_r(word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_sta_ip_set_cmd
//      ip4addr_ntoa
//      tcp_accept_callback
// MayUse:  a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a4 a5
// Trashed: a0 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ip4addr_ntoa_r_entry:
l2306F4EA:
	word32 t4_42 = a1
	word32 a0_10 = 0<32>
	word32 a3_11 = fp + 0xFFFFFFFC<32>
l2306F502:
	word32 a6_18 = CONVERT(Mem17[a3_11:byte], byte, word32)
	word32 a5_19 = 0<32>
l2306F508:
	Mem31[fp + a5_19 + 4088<i32>:byte] = SLICE((a6_18 & 0xA<32>) + 48<i32>, byte, 0)
	word32 t3_27 = a5_19 + 1<i32>
	word32 a4_29 = a6_18 >>u 0xA<32>
	branch a6_18 >u 9<32> l2306F55A
l2306F55A:
	a6_18 = a4_29 & 255<i32>
	a5_19 = t3_27 & 255<i32>
l2306F52E:
	Mem37[a3_11:byte] = SLICE(a4_29 & 255<i32>, byte, 0)
	word32 a6_40 = a0_10
	word32 a4_43 = t4_42
l2306F536:
	word32 a0_62
	a0_10 = a0_10 + 1<32>
	branch a5_19 != 255<i32> l2306F560
l2306F560:
	word32 a7_48 = a5_19 + -1<i32>
	branch a6_40 >= a2 l2306F582
l2306F56C:
	a4_43 = a4_43 + 1<32>
	Mem60[a4_43 + 4095<i32>:byte] = SLICE(CONVERT(Mem55[a5_19 + fp + -8<i32>:byte], byte, word32), byte, 0)
	a6_40 = a0_10
	a5_19 = a7_48 & 255<i32>
l2306F53C:
	branch a6_40 >= a2 l2306F582
l2306F582:
	a0_62 = 0<32>
l2306F540:
	Mem66[a4_43:byte] = 0x2E<8>
	a3_11 = a3_11 + 1<32>
	a5_19 = fp
	t4_42 = a4_43 + 1<i32>
	branch a3_11 != fp l2306F502
l2306F550:
	Mem71[a4_43:byte] = 0<8>
	a0_62 = a1
l2306F556:
	a3Out = a3_11
	a4Out = a4_43
	a5Out = a5_19
	return a0_62
ip4addr_ntoa_r_exit:


word32 ip4addr_ntoa(ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifiprov_wifi_state_get
//      wifi_sta_ip_info
//      netif_status_callback
//      ota_tcp_cmd
//      iperf_server
//      cipsta_ip_get
//      ap_sta_get
//      cwjap_info
//      domain_name_resolution
//      httpc_get_file
// MayUse: 
// LiveOut: a0 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: sp
ip4addr_ntoa_entry:
l2306F586:
l2306F590_thunk_ip4addr_ntoa_r:
	word32 a3_7
	word32 a4_8
	word32 a5_9
	word32 a0_6 = ip4addr_ntoa_r(0x4201B1A8<32>, 0x10<32>, out a3_7, out a4_8, out a5_9)
	a2Out = 0x10<32>
	a3Out = a3_7
	a4Out = a4_8
	a5Out = a5_9
	return a0_6
ip4addr_ntoa_exit:


void mem_init(word32 ra, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg84, word32 dwArgF8, word32 dwArg0138, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse:  mstatus:[0..31] ra:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0084:[0..31] Stack +00F8:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_init_entry:
l2306F594:
	Mem7[0x4200F614<32>:word32] = 0x42045FC0<32>
	Mem11[0x2000000<32>:word32] = 0x42045FC0<32>
	Mem12[0x42045FC4<32>:byte] = 0<8>
	Mem13[0x4200F618<32>:word32] = 0x44045FC0<32>
	Mem15[0x20002000<32>:word32] = 0x44045FC0<32>
	Mem17[0x44045FC4<32>:byte] = 1<8>
	Mem20[0x4200F60C<32>:word32] = 0x42045FC0<32>
	Mem23[0x4202789E<32>:word16] = 0<16>
l2306F5DE_thunk_sys_mutex_new:
	sys_mutex_new(ra, 0x4200F610<32>, 0x4200F000<32>, 0x2000000<32>, 0x42027000<32>, mstatus, dwArg00, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178)
	return
mem_init_exit:


word32 mem_free(word32 a0, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg24, word32 dwArg84, word32 dwArgA4, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0158, word32 dwArg0178, word32 dwArg0198, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_free
//      dhcp_server_recv
//      dhcp_server_stop
//      httpc_free_state
//      altcp_mbedtls_free
//      altcp_mbedtls_free_config
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +00A4:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0158:[0..31] Stack +0178:[0..31] Stack +0198:[0..31]
// LiveOut: a1 a3 a4 a5 a7 s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_free_entry:
l2306F5E2:
	branch a0 == 0<32> l2306F74C
l2306F74C:
	s1Out = s1
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	return s0
l2306F5E6:
	word32 s1_207
	word32 s2_208 = 0x420267F0<32>
	s1_207 = s1
	branch (a0 & 3<i32>) == 0<32> l2306F628
l2306F628:
	s1_207 = a0 + -8<i32>
	branch a0 + -8<i32> <u Mem19[0x4200F614<32>:int32] l2306F606
l2306F63C:
	a3 = Mem19[0x4200F618<32>:int32]
	a4 = a0 + 12<i32>
	s3 = 0x4200F618<32>
	branch a3 <u a0 + 12<i32> l2306F606
l2306F650:
	word32 s1_42
	word32 s2_43
	word32 s3_44
	word32 s4_45
	word32 a1_448
	word32 a4_194
	word32 s0_41 = sys_mutex_lock(a3, a0 + 12<i32>, 0x420267F0<32>, mstatus, s4, dwArg24, s3, dwArgD8, dwArg0118, out s1_42, out a1_448, out a4_194, out s2_43, out s3_44, out s4_45)
	word32 a5_129 = CONVERT(Mem19[s0_41 + -4<i32>:byte], byte, word32)
	branch a5_129 != 0<32> l2306F66C
l2306F66C:
	word32 a1_50 = CONVERT(Mem19[s0_41 + -8<i32>:uint16], uint16, word32)
	a5_129 = 0x2000000<32>
	branch a1_50 >u 0x2000000<32> l2306F662
l2306F676:
	a4_194 = CONVERT(Mem19[s0_41 + -6<i32>:uint16], uint16, word32)
	branch a4_194 >u 0x2000000<32> l2306F662
l2306F67E:
	a5_129 = Mem19[s4_45:int32]
	word32 a2_56 = CONVERT(SLICE(s1_42 - a5_129, word16, 0), word16, word32)
	branch a2_56 == a4_194 l2306F698
l2306F68E:
	a4_194 = CONVERT(Mem19[a4_194 + a5_129:uint16], uint16, word32)
	branch a4_194 != a2_56 l2306F662
l2306F698:
	word32 a6_61 = Mem19[s3_44:int32]
	word32 a4_64 = a5_129 + a1_50
	branch a4_64 == a6_61 l2306F6AC
l2306F6A4:
	a4_194 = CONVERT(Mem19[a4_64 + 2<i32>:uint16], uint16, word32)
	branch a4_194 != a2_56 l2306F662
l2306F6AC:
	word32 a3_69 = Mem19[0x4200F60C<32>:int32]
	Mem72[s0_41 + 4092<i32>:byte] = 0<8>
	word32 a4_126 = 0x4200F60C<32>
	branch s1_42 >=u a3_69 l2306F6C2
l2306F6C0:
	Mem76[s1_42:word32] = 0x4200F60C<32>
l2306F6C2:
	Mem88[s2_43 + 176<i32>:word16] = SLICE(CONVERT(Mem80[s2_43 + 176<i32>:uint16], uint16, word32) - a1_50 + a2_56, word16, 0)
	word32 a3_93 = CONVERT(Mem88[s0_41 + -8<i32>:uint16], uint16, word32) + a5_129
	branch s1_42 == a3_93 l2306F702
l2306F6D8:
	word32 a1_95 = CONVERT(Mem88[a3_93 + 4<i32>:byte], byte, word32)
	branch a1_95 != 0<32> l2306F702
l2306F6DE:
	branch a6_61 == a3_93 l2306F702
l2306F6E2:
	a4_126 = Mem88[a1_95:word32]
	branch a3_93 != a1_95 l2306F6EA
l2306F6E8:
	Mem99[s1_42:word32] = a4_126
l2306F6EA:
	Mem104[s0_41 + 4088<i32>:word16] = SLICE(CONVERT(Mem101[a3_93:uint16], uint16, word32), word16, 0)
	word32 a3_105 = CONVERT(Mem104[a3_93:uint16], uint16, word32)
	branch a3_105 == 0x2000000<32> l2306F702
l2306F6FC:
	Mem110[a3_105 + a5_129 + 2<i32>:word16] = SLICE(a2_56, word16, 0)
l2306F702:
	word32 a2_113 = CONVERT(Mem112[s0_41 + -6<i32>:uint16], uint16, word32)
	word32 a3_115 = a5_129 + a2_113
	branch s1_42 == a3_115 l2306F734
l2306F70E:
	word32 a1_118 = CONVERT(Mem112[a3_115 + 4<i32>:byte], byte, word32)
	branch a1_118 != 0<32> l2306F734
l2306F714:
	word32 a4_119 = Mem112[a1_118:word32]
	branch s1_42 != a1_118 l2306F71C
l2306F71A:
	Mem120[a3_115:word32] = a4_119
l2306F71C:
	Mem125[a3_115:word16] = SLICE(CONVERT(Mem122[s0_41 + -8<i32>:uint16], uint16, word32), word16, 0)
	a4_126 = CONVERT(Mem125[s0_41 + -8<i32>:uint16], uint16, word32)
	branch a4_126 == 0x2000000<32> l2306F734
l2306F72E:
	a5_129 = a5_129 + a4_126
	Mem131[a5_129 + 2<i32>:word16] = SLICE(a2_113, word16, 0)
l2306F734:
l2306F748_thunk_sys_mutex_unlock:
	word32 a1_169
	word32 a3_171
	word32 a4_172
	word32 a5_173
	word32 a7_175
	word32 s1_177
	word32 s2_178
	word32 s3_179
	word32 s4_180
	word32 s5_181
	word32 s6_182
	word32 s8_183
	word32 s0_176 = sys_mutex_unlock(0x4200F610<32>, a4_126, a5_129, mstatus, dwArg08, dwArg24, dwArgA4, dwArg0118, dwArg0158, dwArg0198, out s1_177, out a1_169, out a3_171, out a4_172, out a5_173, out a7_175, out s2_178, out s3_179, out s4_180, out s5_181, out s6_182, out s8_183)
	s1Out = s1_177
	a1Out = a1_169
	a3Out = a3_171
	a4Out = a4_172
	a5Out = a5_173
	a7Out = a7_175
	s2Out = s2_178
	s3Out = s3_179
	s4Out = s4_180
	s5Out = s5_181
	s6Out = s6_182
	s8Out = s8_183
	return s0_176
l2306F662:
	word32 s8_451
	word32 a5_449
	word32 s4_450
	sys_mutex_unlock(0x4200F610<32>, a4_194, a5_129, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1_207, out a1, out a3, out a4, out a5_449, out a7, out s2_208, out s3, out s4_450, out s5, out s6, out s8_451)
l2306F606:
	word32 a2_446
	word32 a4_447
	sys_arch_protect(a4, mstatus, out a2_446, out a4_447)
	Mem235[s2_208 + 180<i32>:word16] = SLICE(CONVERT(Mem19[s2_208 + 180<i32>:uint16], uint16, word32) + 1<32>, word16, 0)
l2306F624_thunk_sys_arch_unprotect:
	word32 a4_245
	word32 a5_246
	word32 a3_244 = sys_arch_unprotect(a3, mstatus, out a4_245, out a5_246)
	s1Out = s1_207
	a1Out = a1
	a3Out = a3_244
	a4Out = a4_245
	a5Out = a5_246
	a7Out = a7
	s2Out = s2_208
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = s4
	return s1
mem_free_exit:


word32 mem_trim(word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 s3, word32 s4, word32 mstatus, word32 dwArg04, word32 dwArg24, word32 dwArg84, word32 dwArgA8, word32 dwArgD8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0138, word32 dwArg0178, ptr32 & a0Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_realloc
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] Stack +0004:[0..31] Stack +0024:[0..31] Stack +0084:[0..31] Stack +00A8:[0..31] Stack +00D8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0138:[0..31] Stack +0178:[0..31]
// LiveOut: a0 a3 a4 a5 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_trim_entry:
l2306F74E:
	word32 s0_24 = CONVERT(SLICE(a1 + 3<i32> & 0xFFFFFFFC<32>, word16, 0), word16, word32)
	word32 a5_180 = 0xB<32>
	word32 s4_187 = a0
	branch s0_24 <=u 0xB<32> l2306F77C
l2306F77C:
	s0_24 = 0xC<32>
l2306F772:
	a5_180 = 0x2000000<32>
	branch s0_24 <=u 0x2000000<32> l2306F77E
l2306F77E:
	branch s0_24 <u a1 l2306F778
l2306F782:
	s5 = 0x4200F614<32>
	a5_180 = Mem23[0x4200F614<32>:int32]
	branch a0 <u a5_180 l2306F79E
l2306F792:
	a4 = Mem23[0x4200F618<32>:int32]
	branch a0 <u a4 l2306F7CE
l2306F7CE:
	word32 s2_44 = CONVERT(Mem23[a0 + -8<i32>:uint16], uint16, word32) + 0xFFFFFFF8<32> << 16<i32>
	s1 = CONVERT(SLICE(a0 + -8<i32> - a5_180, word16, 0), word16, word32)
	s2 = s2_44 >>u 0x10<u32>
	s3 = CONVERT(SLICE((s2_44 >>u 0x10<u32>) - s1, word16, 0), word16, word32)
	branch s3 <u s0_24 l2306F778
l2306F7F2:
	branch s3 == s0_24 l2306F7B8
l2306F7F6:
	word32 a4_117
	word32 s0_110
	word32 a1_58
	word32 s1_65
	word32 s2_66
	word32 s3_67
	word32 s4_68
	word32 a4_445
	word32 s0_64 = sys_mutex_lock(a3, a4, s2_44 >>u 0x10<u32>, mstatus, s4, dwArg24, s3, dwArgD8, dwArg0118, out s1_65, out a1_58, out a4_445, out s2_66, out s3_67, out s4_68)
	word32 a5_148 = Mem23[0x4200F614<32>:int32]
	word32 a2_74 = CONVERT(Mem23[s4_68 + -8<i32>:uint16], uint16, word32) + a5_148
	branch CONVERT(Mem23[a2_74 + 4<i32>:byte], byte, word32) != 0<32> l2306F878
l2306F878:
	a4_117 = s0_64 + 20<i32>
	branch s3_67 <u s0_64 + 20<i32> l2306F86E
l2306F880:
	a4_117 = CONVERT(SLICE(s1_65 + 8<i32> + s0_64, word16, 0), word16, word32)
	word32 a2_81 = Mem23[a1_58:word32]
	word32 a3_83 = a5_148 + a4_117
	branch a3_83 >=u a1_58 l2306F89E
l2306F89C:
	Mem84[a3_83:word32] = a2_81
l2306F89E:
	Mem86[a3_83 + 4<i32>:byte] = 0<8>
	word32 a2_88 = CONVERT(Mem86[s4_68 + -8<i32>:uint16], uint16, word32)
	Mem90[a3_83 + 2<i32>:word16] = SLICE(s1_65, word16, 0)
	Mem91[a3_83:word16] = SLICE(a2_88, word16, 0)
	Mem93[s4_68 + 4088<i32>:word16] = SLICE(a4_117, word16, 0)
	word32 a3_94 = CONVERT(Mem93[a3_83:uint16], uint16, word32)
	branch a3_94 == 0x2000000<32> l2306F8C2
l2306F8BC:
	Mem98[a5_148 + a3_94 + 2<i32>:word16] = SLICE(a4_117, word16, 0)
l2306F8C2:
	s0_110 = s0_64 + ((s1_65 - s2_66) + CONVERT(Mem105[0x420268A0<32>:uint16], uint16, word32))
l2306F812:
	a4_117 = CONVERT(SLICE(s1_65 + 8<i32> + s0_64, word16, 0), word16, word32)
	word32 a6_118 = CONVERT(Mem23[a2_74:uint16], uint16, word32)
	word32 a3_119 = a5_148 + a4_117
	branch Mem23[0x4200F60C<32>:int32] != a2_74 l2306F836
l2306F834:
	Mem120[a3_119:word32] = 0x4200F60C<32>
l2306F836:
	Mem122[a3_119 + 4<i32>:byte] = 0<8>
	Mem124[a3_119:word16] = SLICE(a6_118, word16, 0)
	Mem126[a3_119 + 2<i32>:word16] = SLICE(s1_65, word16, 0)
	Mem129[s4_68 + 4088<i32>:word16] = SLICE(a4_117, word16, 0)
	word32 a3_130 = CONVERT(Mem129[a3_119:uint16], uint16, word32)
	branch a3_130 == 0x2000000<32> l2306F856
l2306F850:
	Mem134[a5_148 + a3_130 + 2<i32>:word16] = SLICE(a4_117, word16, 0)
l2306F856:
	s0_110 = s0_64 + ((s1_65 - s2_66) + CONVERT(Mem141[0x420268A0<32>:uint16], uint16, word32))
l2306F86A:
	Mem149[0x420268A0<32>:word16] = SLICE(s0_110, word16, 0)
	a5_148 = 0x420267F0<32>
l2306F86E:
	word32 a7_447
	word32 a1_446
	word32 s8_448
	sys_mutex_unlock(0x4200F610<32>, a4_117, a5_148, mstatus, s2, dwArg04, dwArg84, dwArgF8, dwArg0138, dwArg0178, out s1, out a1_446, out a3, out a4, out a5_180, out a7_447, out s2, out s3, out s4_187, out s5, out s6, out s8_448)
l2306F79E:
	word32 a2_443
	word32 a4_444
	sys_arch_protect(a4, mstatus, out a2_443, out a4_444)
	Mem211[0x420268A4<32>:word16] = SLICE(CONVERT(Mem23[0x420268A4<32>:uint16], uint16, word32) + 1<32>, word16, 0)
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5_180)
l2306F778:
	s4_187 = 0<32>
l2306F7B8:
	0<32> = dwArgA8
	a0Out = s4_187
	a3Out = a3
	a4Out = a4
	a5Out = a5_180
	s2Out = s2
	s3Out = s3
	s4Out = dwArg04
	s5Out = s5
	s6Out = s6
	s8Out = s4
	return s1
mem_trim_exit:


word32 mem_malloc(word32 ra, word32 s0, word32 a0, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArg34, word32 dwArg94, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0148, word32 dwArg0188, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dhcp_start
//      pbuf_alloc
//      dhcp_server_recv
//      dhcp_server_start
//      httpc_init_connection_common.constprop.5
//      altcp_mbedtls_alloc_config
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +0034:[0..31] Stack +0094:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0148:[0..31] Stack +0188:[0..31]
// LiveOut: a0 a1 a3 a4 a5 a7 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
mem_malloc_entry:
l2306F8D8:
	word32 s0_18
	branch a0 == 0<32> l2306F960
l2306F8E2:
	s1 = CONVERT(SLICE(a0 + 3<i32> & 0xFFFFFFFC<32>, word16, 0), word16, word32)
	a5 = 0xB<32>
	branch s1 <=u 0xB<32> l2306F906
l2306F906:
	s1 = 0xC<32>
l2306F8F2:
	a5 = 0x2000000<32>
	s0_18 = 0<32>
	branch s1 <=u 0x2000000<32> l2306F908
l2306F908:
	s0_18 = 0<32>
	branch s1 <u a0 l2306F8FA
l2306F90E:
	word32 s1_42
	word32 s2_408
	word32 s3_409
	word32 s4_410
	word32 a1_406
	word32 a4_407
	word32 s0_41 = sys_mutex_lock(a3, a4, s2, mstatus, s0, dwArg34, ra, dwArgE8, dwArg0128, out s1_42, out a1_406, out a4_407, out s2_408, out s3_409, out s4_410)
	word32 a6_124 = Mem9[0x4200F60C<32>:int32]
	word32 a7_52 = Mem9[0x4200F614<32>:int32]
	word32 a3_57 = CONVERT(SLICE(a6_124 - a7_52, word16, 0), word16, word32)
	word32 a4_59 = 0x2000000<32> - s1_42
l2306F942:
	branch a3_57 <u a4_59 l2306F964
l2306F964:
	word32 s0_64 = a7_52 + a3_57
	word32 a5_67 = CONVERT(Mem9[s0_64:uint16], uint16, word32)
	branch CONVERT(Mem9[s0_64 + 4<i32>:byte], byte, word32) != 0<32> l2306FA30
l2306F972:
	word32 a2_70 = 0xFFFFFFF8<32> - a3_57 + a5_67
	branch a2_70 <u s1_42 l2306FA30
l2306FA30:
	a3_57 = a5_67
l2306F97C:
	word32 a5_111
	word32 a4_126 = 0x420267F0<32>
	branch a2_70 <u s1_42 + 20<i32> l2306FA04
l2306FA04:
	Mem78[s0_64 + 4<i32>:byte] = 1<8>
	word32 a3_83 = CONVERT(Mem78[0x420268A2<32>:uint16], uint16, word32)
	a5_111 = CONVERT(SLICE(a5_67 + CONVERT(Mem78[0x420268A0<32>:uint16], uint16, word32) - a3_57, word16, 0), word16, word32)
	Mem85[0x420268A0<32>:word16] = SLICE(a5_111, word16, 0)
	branch a3_83 >=u a5_111 l2306F9DE
l2306FA22:
	Mem86[0x420268A2<32>:word16] = SLICE(a5_111, word16, 0)
l2306F98C:
	word32 a5_90 = CONVERT(SLICE(s1_42 + 8<i32> + a3_57, word16, 0), word16, word32)
	word32 a2_91 = a7_52 + a5_90
	Mem92[a2_91 + 4<i32>:byte] = 0<8>
	word32 a1_93 = CONVERT(Mem92[s0_64:uint16], uint16, word32)
	Mem94[a2_91 + 2<i32>:word16] = SLICE(a3_57, word16, 0)
	Mem96[a2_91:word16] = SLICE(a1_93, word16, 0)
	Mem97[s0_64:word16] = SLICE(a5_90, word16, 0)
	Mem98[s0_64 + 4<i32>:byte] = 1<8>
	word32 a3_99 = CONVERT(Mem98[a2_91:uint16], uint16, word32)
	branch a3_99 == 0x2000000<32> l2306F9C2
l2306F9BC:
	Mem103[a3_99 + a7_52 + 2<i32>:word16] = SLICE(a5_90, word16, 0)
l2306F9C2:
	a5_111 = CONVERT(Mem105[0x420268A2<32>:uint16], uint16, word32)
	word32 s1_112 = CONVERT(SLICE(s1_42 + (CONVERT(Mem105[0x420268A0<32>:uint16], uint16, word32) + 8<32>), word16, 0), word16, word32)
	Mem113[0x420268A0<32>:word16] = SLICE(s1_112, word16, 0)
	branch a5_111 >=u s1_112 l2306F9DE
l2306F9DA:
	Mem114[0x420268A2<32>:word16] = SLICE(s1_112, word16, 0)
l2306F9DE:
	branch a6_124 != s0_64 l2306F9F8
l2306F9E2:
	a5_111 = Mem122[0x4200F618<32>:int32]
l2306F9EA:
	a4_126 = CONVERT(Mem122[a6_124 + 4<i32>:byte], byte, word32)
	branch a4_126 == 0<32> l2306F9F4
l2306F9F0:
	branch a5_111 != a6_124 l2306FA28
l2306FA28:
	a6_124 = CONVERT(Mem122[a6_124:uint16], uint16, word32) + a7_52
l2306F9F4:
	Mem138[0x4200F60C<32>:word32] = a6_124
l2306F9F8:
	s0_18 = sys_mutex_unlock(s0_41 + 1552<i32>, a4_126, a5_111, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1, out a1, out a3, out a4, out a5, out a7, out s2, out s3, out s4, out s5, out s6, out s8) + 8<32>
l2306F946:
	word32 a4_194 = CONVERT(Mem9[0x4202689C<32>:uint16], uint16, word32)
	Mem197[0x4202689C<32>:word16] = SLICE(a4_194 + 1<32>, word16, 0)
	sys_mutex_unlock(s0_41 + 1552<i32>, a4_194 + 1<32>, 0x420267F0<32>, mstatus, dwLoc08, dwArg14, dwArg94, dwArg0108, dwArg0148, dwArg0188, out s1, out a1, out a3, out a4, out a5, out a7, out s2, out s3, out s4, out s5, out s6, out s8)
l2306F960:
	s0_18 = 0<32>
l2306F8FA:
	a0Out = s0_18
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	return s1
mem_malloc_exit:


word32 mem_calloc(word32 ra, word32 a0, word32 a1, word32 a3, word32 a4, word32 s2, word32 mstatus, word32 dwArg14, word32 dwArg74, word32 dwArgC8, word32 dwArgE8, word32 dwArg0108, word32 dwArg0128, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      altcp_mbedtls_alloc
//      altcp_mbedtls_alloc_config
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s2:[0..31] Stack +0014:[0..31] Stack +0074:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31] Stack +0168:[0..31]
// LiveOut: a0 a1 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
mem_calloc_entry:
l2306FA34:
	word32 a2_5 = a0 + a1
	word32 s0_11 = 0<32>
	word32 a5_13 = CONVERT(SLICE(a2_5, word16, 0), word16, word32)
	branch a2_5 != a5_13 l2306FA5E
l2306FA4A:
	word32 a0_20
	word32 a7_121
	word32 s8_122
	s1 = mem_malloc(ra, 0<32>, a5_13, a3, a4, s2, mstatus, dwLoc0C, dwArg14, dwArg74, dwArgC8, dwArgE8, dwArg0108, dwArg0128, dwArg0168, out a0_20, out a1, out a3, out a4, out a5_13, out a7_121, out s2, out s3, out s4, out s5, out s6, out s8_122)
	s0_11 = a0_20
	branch a0_20 == 0<32> l2306FA5E
l2306FA56:
	word32 t1_123
	word32 a0_124
	word32 a2_125
	ra = memset(ra, a0_20, 0<32>, a2_5, out t1_123, out a0_124, out a1, out a2_125, out a3, out a4, out a5_13)
l2306FA5E:
	s0Out = s0_11
	s1Out = s1
	a0Out = s0_11
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a5_13
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	return ra
mem_calloc_exit:


word32 do_memp_malloc_pool(word32 s1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memp_malloc
// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
do_memp_malloc_pool_entry:
l2306FA68:
	word32 a4_16
	word32 a2_71
	word32 a0_14 = sys_arch_protect(a4, mstatus, out a2_71, out a4_16)
	word32 a5_19 = Mem11[s1:word32]
	branch s1 == 0<32> l2306FAB2
l2306FAB2:
	Mem23[a4_16:word16] = SLICE(CONVERT(Mem11[a4_16:uint16], uint16, word32) + 1<32>, word16, 0)
l2306FA7C:
	s1 = Mem11[a4_16:word32]
	Mem26[a4_16:word32] = a5_19
	word32 a5_28 = CONVERT(Mem26[a4_16 + 4<i32>:uint16], uint16, word32)
	Mem30[a4_16 + 4<i32>:word16] = SLICE(a5_28 + 1<32>, word16, 0)
	a3 = a0_14
	word32 a4_32 = CONVERT(Mem30[a5_28 + 5<32>:uint16], uint16, word32)
	branch CONVERT(Mem30[a5_28 + 7<32>:uint16], uint16, word32) >=u a4_32 l2306FAA0
l2306FA9C:
	Mem34[a5_28 + 7<32>:word16] = SLICE(a4_32, word16, 0)
l2306FAA0:
l2306FAA2:
	word32 a4_42
	word32 a5_43
	word32 a3_41 = sys_arch_unprotect(a3, mstatus, out a4_42, out a5_43)
	a0Out = s1
	a2Out = dwArg10
	a3Out = a3_41
	a4Out = a4_42
	a5Out = a5_43
	return s1
do_memp_malloc_pool_exit:


word32 memp_init_pool(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      memp_init
// MayUse:  a5:[0..31]
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
memp_init_pool_entry:
l2306FAC0:
	Mem7[a5:word32] = 0<32>
	word32 a4_14 = 0<32>
	word32 a0_11 = Mem7[a5 + 8<i32>:word32]
	word32 a5_10 = a5 + 3<32> & 0xFFFFFFFC<32>
l2306FACE:
	word32 a3_13 = CONVERT(Mem12[a0_11 + 6<i32>:uint16], uint16, word32)
	branch a4_14 < a3_13 l2306FADE
l2306FADE:
	word32 a3_17 = Mem12[a3_13:word32]
	Mem19[a3_17:word32] = a5_10
	a0_11 = Mem19[a3_17 + 12<i32>:word32]
	Mem21[a5_10:word32] = a3_17
	a4_14 = a4_14 + 1<32>
	a5_10 = a5_10 + CONVERT(Mem21[a0_11 + 4<i32>:uint16], uint16, word32)
l2306FAD6:
	word32 a0_24 = Mem12[a5_10:word32]
	Mem25[a5_10 + 2<i32>:word16] = SLICE(a3_13, word16, 0)
	return a0_24
memp_init_pool_exit:


word32 memp_init(ptr32 & a2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut: a0 a2
// Trashed: a0 a2 a3 a4 a5 a6 s0 s1 s2 s3 s4 s8 t3
// Preserved: sp
memp_init_entry:
l2306FAF2:
	word32 s0_18 = 0x420267F0<32>
	word32 s1_19 = 0x230C36E8<32>
l2306FB16:
	word32 a5_24 = s1_19 + 0<32>
	word32 s3_26 = Mem25[a5_24:int32]
	word32 a0_31 = memp_init_pool(a5_24)
	s0_18 = s0_18 + 4<32>
	Mem36[s0_18 + 180<i32>:word32] = Mem25[s3_26:int32]
	s1_19 = s1_19 + 4<32>
	branch s1_19 != 0xDCF3C954<32> l2306FB16
l2306FB34:
	a2Out = dwArg48
	return a0_31
memp_init_exit:


word32 memp_malloc(word32 s1, word32 a0, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
//      tcpip_callback
//      tcpip_try_callback
//      igmp_lookup_group
//      pbuf_alloc
//      raw_new_ip_type
//      tcp_listen_with_backlog_and_err
//      tcp_seg_copy
//      tcp_new_ip_type
//      tcp_create_segment
//      sys_timeout
//      udp_new_ip_type
//      recv_udp
//      recv_raw
//      netconn_alloc
//      altcp_alloc
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: sp
memp_malloc_entry:
l2306FB44:
	branch a0 >u 0xE<32> l2306FB5E
l2306FB5E:
	a0Out = 0<32>
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0xE<32>
	return s1
l2306FB4A:
l2306FB5A_thunk_do_memp_malloc_pool:
	word32 a0_16
	word32 a2_17
	word32 a3_18
	word32 a4_19
	word32 a5_20
	word32 s1_22 = do_memp_malloc_pool(s1, a3, a4, mstatus, out a0_16, out a2_17, out a3_18, out a4_19, out a5_20)
	a0Out = a0_16
	a2Out = a2_17
	a3Out = a3_18
	a4Out = a4_19
	a5Out = a5_20
	return s1_22
memp_malloc_exit:


word32 memp_free(word32 a0, word32 a1, word32 a3, word32 a4, word32 mstatus, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_input
//      tcpip_try_callback
//      igmp_stop
//      igmp_leavegroup_netif
//      pbuf_free
//      raw_remove
//      tcp_seg_free
//      tcp_abort
//      tcp_close
//      sys_untimeout
//      sys_check_timeouts
//      udp_remove
//      netconn_new_with_proto_and_callback
//      netconn_alloc
//      netconn_free
//      netbuf_delete
//      altcp_free
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31]
// LiveOut: a0 a2 a3 a4 a5 s1
// Trashed: a0 a2 a3 a4 a5 s1 tp
// Preserved: s0 sp
memp_free_entry:
l2306FB62:
	branch a0 >u 0xE<32> l2306FBA8
l2306FB68:
	branch a1 == 0<32> l2306FBA8
l2306FBA8:
	a0Out = a0
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = 0xE<32>
	return s1
l2306FB6A:
	word32 a4_22
	word32 a2_71
	word32 a0_20 = sys_arch_protect(a4, mstatus, out a2_71, out a4_22)
	word32 a5_25 = CONVERT(Mem16[a4_22 + 4<i32>:uint16], uint16, word32)
	Mem27[a4_22 + 4<i32>:word16] = SLICE(a5_25 + 0xFFFFFFFF<32>, word16, 0)
	word32 a5_29 = Mem27[a5_25 + 0xFFFFFFFF<32>:word32]
	Mem30[a5_29:word32] = a1
	word32 s1_31 = Mem30[a5_29 + 12<i32>:word32]
	Mem32[a1:word32] = a5_29
l2306FBA4_thunk_sys_arch_unprotect:
	word32 a4_39
	word32 a5_40
	word32 a3_38 = sys_arch_unprotect(a3, mstatus, out a4_39, out a5_40)
	a0Out = a0_20
	a2Out = dwArg10
	a3Out = a3_38
	a4Out = a4_39
	a5Out = a5_40
	return s1_31
memp_free_exit:


void netif_null_output_ip4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0
// Preserved: sp
netif_null_output_ip4_entry:
l2306FBAA:
	return
netif_null_output_ip4_exit:


word32 netif_issue_reports(word32 ra, word32 s0, word32 a0, word32 a1, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg24, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB0, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0188, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_do_set_ipaddr
//      netif_set_up
//      netif_set_link_up
// MayUse:  a0:[0..31] a1:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0024:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0188:[0..31]
// LiveOut: a1 a3 a4 a5 mstatus ra s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netif_issue_reports_entry:
l2306FBAE:
	word32 a4_108 = CONVERT(Mem0[a0 + 65<i32>:byte], byte, word32)
	word32 a3_104 = 5<32>
	branch (a4_108 & 5<i32>) != 5<32> l2306FBF6
l2306FBBC:
	a1 = a1 & 1<32>
	branch (a1 & 1<32>) == 0<32> l2306FBF6
l2306FBF6:
	s1Out = s1
	a1Out = a1
	a3Out = 5<32>
	a4Out = a4_108
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2306FBC0:
	word32 a0_15 = Mem14[9<32>:word32]
	word32 s0_16 = a0_15
	branch false l2306FBEE
l2306FBCC:
	a4_108 = a4_108 & 8<32>
	branch (a4_108 & 8<32>) == 0<32> l2306FBD8
l2306FBD0:
	word32 a0_228
	ra = etharp_request(ra, a0_15, a0_15, mstatus, s0, dwArg08, dwArg24, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB0, dwArgB4, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s0_16, out s1, out a0_228, out a1, out a3_104, out a4_108, out s2, out s3, out s4, out s5, out s6, out s7, out mstatus)
l2306FBD8:
	word32 a5_48 = CONVERT(Mem14[s0_16 + 65<i32>:byte], byte, word32)
	a5 = a5_48 & 32<i32>
	branch (a5_48 & 32<i32>) == 0<32> l2306FBEE
l2306FBEE:
	s1Out = s1
	a1Out = a1
	a3Out = a3_104
	a4Out = a4_108
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2306FBE2:
l2306FBEA_thunk_igmp_report_groups:
	word32 a1_61
	word32 a3_63
	word32 a4_64
	word32 a5_65
	word32 s4_67
	s1Out = igmp_report_groups(s0, dwArg10, a5_48 & 32<i32>, out a1_61, out a3_63, out a4_64, out a5_65, out s4_67)
	a1Out = a1_61
	a3Out = a3_63
	a4Out = a4_64
	a5Out = a5_65
	s2Out = s2
	s3Out = s3
	s4Out = s4_67
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
netif_issue_reports_exit:


word32 netif_do_set_ipaddr(word32 ra, word32 s1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg34, word32 dwArg38, word32 dwArg48, word32 dwArg58, word32 dwArg5C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg90, word32 dwArg94, word32 dwArg98, word32 dwArg9C, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgE8, word32 dwArg0168, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_set_ipaddr
//      netif_set_addr
// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +005C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0090:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +009C:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00E8:[0..31] Stack +0168:[0..31]
// LiveOut: a1 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_do_set_ipaddr_entry:
l2306FBF8:
	word32 a0_5 = Mem0[a5 + 4<i32>:word32]
	word32 a1_7 = Mem0[a4:word32]
	branch a4 == a5 l2306FC50
l2306FC50:
	s0Out = s0
	s1Out = s1
	a1Out = a1_7
	a3Out = a3
	a4Out = a4
	a5Out = a5
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra
l2306FC00:
	Mem11[a5:word32] = a2
	word32 a3_35
	word32 a4_36
	word32 a5_37
	word32 mstatus_40
	word32 s1_42
	word32 s2_45
	word32 s4_251
	word32 ra_41 = tcp_netif_ip_addr_changed(ra, a2, fp + 0xFFFFFFEC<32>, a3, a4, s3, s4, s7, mstatus, s2, dwLoc08, dwArg08, dwArg18, dwArg34, dwArg38, dwArg48, dwArg58, dwArg5C, s1, dwArg78, dwArg98, dwArg9C, dwArgA8, dwArgC8, out s1_42, out a3_35, out a4_36, out a5_37, out s2_45, out s4_251, out mstatus_40)
	raw_netif_ip_addr_changed(s1_42, fp + 0xFFFFFFEC<32>, a3_35, a4_36, udp_netif_ip_addr_changed(s1_42, fp + 0xFFFFFFEC<32>, a3_35, a4_36, a5_37))
	Mem72[Mem24[s2_45:int32] + 4<i32>:word32] = a0_5
	word32 s4_252
	word32 a1_104
	word32 a3_102
	word32 a4_103
	word32 a5_106
	word32 mstatus_114
	word32 s1_107
	word32 s2_116
	word32 s3_117
	word32 s5_118
	word32 s6_119
	word32 s7_120
	word32 ra_115 = netif_issue_reports(ra_41, a0_5, a0_5, 1<32>, mstatus_40, s2, dwLoc10, dwArg04, dwArg38, dwArg48, s1, dwArg74, dwArg78, dwArg88, dwArg90, dwArg94, dwArgA8, dwArgB8, dwArgE8, dwArg0168, out s1_107, out a1_104, out a3_102, out a4_103, out a5_106, out s2_116, out s3_117, out s4_252, out s5_118, out s6_119, out s7_120, out mstatus_114)
	word32 s0_99 = Mem72[a5_106 + 28<i32>:word32]
	branch a5_106 == 0<32> l2306FC42
l2306FC3E:
	call a5_106 (retsize: 0;)
		uses: a0:s0_99,a1:a1_76,mstatus:mstatus_86,ra:ra_87,s0:s0_99,Stack +0008:s2,Stack +0010:dwLoc10,Stack +0024:dwArg04,Stack +0058:dwArg38,Stack +0068:dwArg48,Stack +0088:s1,Stack +0094:dwArg74,Stack +0098:dwArg78,Stack +00A8:dwArg88,Stack +00B0:dwArg90,Stack +00B4:dwArg94,Stack +00C8:dwArgA8,Stack +00D8:dwArgB8,Stack +0108:dwArgE8,Stack +0188:dwArg0168
		defs: a1:a1_104,a3:a3_102,a4:a4_103,a5:a5_106,mstatus:mstatus_114,ra:ra_115,s1:s1_107,s2:s2_116,s3:s3_117,s5:s5_118,s6:s6_119,s7:s7_120
l2306FC42:
	s0Out = s0_99
	s1Out = s1_107
	a1Out = a1_104
	a3Out = a3_102
	a4Out = a4_103
	a5Out = a5_106
	s2Out = s2_116
	s3Out = s3_117
	s4Out = dwArg04
	s5Out = s5_118
	s6Out = s6_119
	s7Out = s7_120
	mstatusOut = mstatus_114
	return ra_115
netif_do_set_ipaddr_exit:


void netif_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_init
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
netif_init_entry:
l2306FC54:
	return
netif_init_exit:


word32 netif_set_ipaddr(word32 ra, word32 s1, word32 a0, word32 a1, word32 a3, word32 a4, word32 a5, word32 s2, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg54, word32 dwArg58, word32 dwArg68, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg88, word32 dwArg98, word32 dwArgA8, word32 dwArgC8, word32 dwArg0148, ptr32 & s1Out, ptr32 & s2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_if
// MayUse:  a0:[0..31] a1:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s2:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0054:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00C8:[0..31] Stack +0148:[0..31]
// LiveOut: s0 s1 s2
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_set_ipaddr_entry:
l2306FC56:
	branch a0 == 0<32> l2306FC72
l2306FC72:
	s1Out = s1
	s2Out = s2
	return s0
l2306FC58:
	branch a1 != 0<32> l2306FC66
l2306FC5E:
l2306FC66:
	word32 s0_42
	word32 s1_43
	word32 s2_46
	word32 a1_155
	word32 a3_156
	word32 a4_157
	word32 a5_158
	word32 s3_159
	word32 s4_160
	word32 s5_161
	word32 s6_162
	word32 s7_163
	word32 mstatus_164
	netif_do_set_ipaddr(ra, s1, fp + 0xFFFFFFEC<32>, a3, a4, a5, s2, s3, s4, s7, mstatus, dwLoc1C, dwLoc18, dwLoc08, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg54, dwArg58, dwArg68, dwArg70, dwArg74, dwArg78, dwArg7C, dwArg88, dwArg98, dwArgA8, dwArgC8, dwArg0148, out s0_42, out s1_43, out a1_155, out a3_156, out a4_157, out a5_158, out s2_46, out s3_159, out s4_160, out s5_161, out s6_162, out s7_163, out mstatus_164)
	s1Out = s1_43
	s2Out = s2_46
	return s0_42
netif_set_ipaddr_exit:


void netif_set_netmask(word32 a0, word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_if
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1
// Preserved: sp
netif_set_netmask_entry:
l2306FC74:
	branch a0 == 0<32> l2306FC8A
l2306FC76:
	branch a1 != 0<32> l2306FC80
l2306FC78:
l2306FC80:
	word32 a0_14 = Mem0[a4 + 8<i32>:word32]
	branch a5 == a4 l2306FC8A
l2306FC88:
	Mem15[a5 + 8<i32>:word32] = a0_14
l2306FC8A:
	return
netif_set_netmask_exit:


void netif_set_gw(word32 a0, word32 a1, word32 a4, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_if
// MayUse:  a0:[0..31] a1:[0..31] a4:[0..31] a5:[0..31]
// LiveOut:
// Trashed: a0 a1
// Preserved: sp
netif_set_gw_entry:
l2306FC8C:
	branch a0 == 0<32> l2306FCA2
l2306FC8E:
	branch a1 != 0<32> l2306FC98
l2306FC90:
l2306FC98:
	word32 a0_14 = Mem0[a4 + 12<i32>:word32]
	branch a5 == a4 l2306FCA2
l2306FCA0:
	Mem15[a5 + 12<i32>:word32] = a0_14
l2306FCA2:
	return
netif_set_gw_exit:


word32 netif_set_addr(word32 ra, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg04, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg2C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg74, word32 dwArg78, word32 dwArg88, word32 dwArg98, word32 dwArgB8, word32 dwArg0128, word32 dwArg0138, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s7Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netifapi_do_netif_set_addr
//      dhcp_bind
//      dhcp_recv
//      dhcp_stop
//      netif_add
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s1:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00B8:[0..31] Stack +0128:[0..31] Stack +0138:[0..31]
// LiveOut: a1 a2 a3 a4 a5 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_set_addr_entry:
l2306FCA4:
	word32 s2_104 = a2
	branch a1 != 0<32> l2306FCBE
l2306FCB6:
l2306FCBE:
	branch a2 != 0<32> l2306FCCA
l2306FCC2:
	s2_104 = 0x230CBADC<32>
l2306FCCA:
	branch a3 != 0<32> l2306FCD4
l2306FCCC:
	a3 = 0x230CBADC<32>
l2306FCD4:
	word32 a5_102
	word32 ra_136
	branch a5 == 0<32> l2306FCDC
l2306FCDC:
	word32 a3_517
	word32 a5_519
	word32 s0_515
	word32 a4_518
	word32 s1_516
	ra_136 = netif_do_set_ipaddr(ra, a0, fp + -20<i32>, a3, a4, a5, s2_104, s3, s4, s7, mstatus, dwLoc2C, dwLoc28, dwLoc18, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgB8, dwArg0138, out s0_515, out s1_516, out a1, out a3_517, out a4_518, out a5_519, out s2_104, out s3, out s4, out s5, out s6, out s7, out mstatus)
	a2 = dwArg74
	a5_102 = 1<32>
l2306FCD8:
	a5_102 = 0<32>
	ra_136 = ra
l2306FCEC:
	word32 a4_106 = Mem105[s2_104:int32]
	word32 s1_111 = Mem105[a2 + 8<i32>:word32]
	branch a4_106 == a2 l2306FCF8
l2306FCF6:
	Mem112[a4_106 + 8<i32>:word32] = s1_111
l2306FCF8:
	word32 a3_115 = Mem114[a4_106:word32]
	word32 s1_116 = Mem114[a3_115 + 12<i32>:word32]
	branch a4_106 == a3_115 l2306FD02
l2306FD00:
	Mem117[a4_106 + 12<i32>:word32] = s1_116
l2306FD02:
	branch a5_102 != 0<32> l2306FD0E
l2306FD04:
	word32 s0_520
	ra_136 = netif_do_set_ipaddr(ra_136, s1_116, fp + -20<i32>, a3_115, a4_106, a5_102, s2_104, s3, s4, s7, mstatus, dwLoc2C, dwLoc28, dwLoc18, dwArg04, dwArg08, dwArg18, dwArg28, dwArg2C, dwArg44, dwArg48, dwArg58, s1, ra, dwArg68, dwArg6C, dwArg78, dwArg88, dwArg98, dwArgB8, dwArg0138, out s0_520, out s1_116, out a1, out a3_115, out a4_106, out a5_102, out s2_104, out s3, out s4, out s5, out s6, out s7, out mstatus)
l2306FD0E:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_116
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3_115
	a4Out = a4_106
	a5Out = a5_102
	s2Out = s2_104
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s7Out = s7
	mstatusOut = mstatus
	return ra_136
netif_set_addr_exit:


word32 netif_add(word32 ra, word32 a0, word32 a1, word32 a2, word32 a3, word32 a5, word32 a6, word32 s4, word32 s7, word32 mstatus, word32 dwArg14, word32 dwArg18, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg74, word32 dwArg88, word32 dwArgB4, word32 dwArgF8, word32 dwArg0108, word32 dwArg0128)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netifapi_do_netif_add
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a6:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] s7:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0074:[0..31] Stack +0088:[0..31] Stack +00B4:[0..31] Stack +00F8:[0..31] Stack +0108:[0..31] Stack +0128:[0..31]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_add_entry:
l2306FD1A:
	word32 s0_148
	branch a0 != 0<32> l2306FD3A
l2306FD3A:
	branch a5 == 0<32> l2306FD28
l2306FD3C:
	word32 s1_18 = a1
	word32 s2_20 = a2
	branch a1 != 0<32> l2306FD4C
l2306FD44:
	s1_18 = 0x230CBADC<32>
l2306FD4C:
	branch a2 != 0<32> l2306FD58
l2306FD50:
	s2_20 = 0x230CBADC<32>
l2306FD58:
	branch a3 != 0<32> l2306FD62
l2306FD5A:
l2306FD62:
	Mem36[0x2306FBBE<32>:word32] = a0
	Mem39[a0 + 4<i32>:word32] = 0<32>
	Mem40[a0 + 8<i32>:word32] = 0<32>
	Mem41[a0 + 12<i32>:word32] = 0<32>
	Mem42[a0 + 56<i32>:word16] = 0<16>
	Mem43[a0 + 65<i32>:byte] = 0<8>
	word32 a3_70
	word32 a4_71
	word32 a5_72
	word32 t1_514
	word32 a0_515
	word32 a2_517
	word32 a1_516
	word32 ra_73 = memset(ra, a0 + 40<i32>, 0<32>, 0xC<32>, out t1_514, out a0_515, out a1_516, out a2_517, out a3_70, out a4_71, out a5_72)
	Mem79[a4_71 + 36<i32>:word32] = a0
	word32 a4_80 = CONVERT(Mem79[0x4200F658<32>:byte], byte, word32)
	0<32> = dwArg74
	Mem81[a0 + 16<i32>:word32] = a6
	Mem82[a0 + 68<i32>:byte] = SLICE(a4_80, byte, 0)
	Mem91[a0 + 28<i32>:word32] = 0<32>
	Mem92[a0 + 32<i32>:word32] = 0<32>
	Mem93[a0 + 72<i32>:word32] = 0<32>
	word32 a1_107
	word32 a2_108
	word32 a3_109
	word32 a4_110
	word32 a5_111
	word32 mstatus_114
	word32 s1_117
	word32 s3_121
	word32 s4_122
	word32 s7_125
	word32 a0_138
	word32 mstatus_146
	word32 ra_147
	word32 s3_153
	call a5_111 (retsize: 0;)
		uses: a0:dwArgB4,a1:a1_107,a2:a2_108,a3:a3_109,a4:a4_110,a5:a5_111,mstatus:mstatus_114,ra:netif_set_addr(ra_73, s1_88, a0, s1_88, s2_84, a3_70, a4_80, a5_72, 0x4200F000<32>, s4, s7, mstatus, a5, dwLoc28, dwLoc18, dwLoc08, dwLoc04, dwArg14, dwArg18, dwArg28, dwArg38, dwArg3C, dwArg44, dwArg48, dwArg58, dwArg68, dwArg88, dwArgF8, dwArg0108, out s0_518, out s1_117, out a1_107, out a2_108, out a3_109, out a4_110, out a5_111, out s2_519, out s3_121, out s4_122, out s5_520, out s6_521, out s7_125, out mstatus_114),s1:s1_117,s3:s3_121 + 1624<i32>,s4:s4_122,s7:s7_125,Stack +0004:a5,Stack +0008:dwLoc28,Stack +0018:dwLoc18,Stack +0028:dwLoc08,Stack +002C:dwLoc04,Stack +0044:dwArg14,Stack +0048:dwArg18,Stack +0058:dwArg28,Stack +0068:dwArg38,Stack +006C:dwArg3C,Stack +0074:dwArg44,Stack +0078:dwArg48,Stack +0088:dwArg58,Stack +0098:dwArg68,Stack +00B8:dwArg88,Stack +0128:dwArgF8,Stack +0138:dwArg0108
		defs: a0:a0_138,mstatus:mstatus_146,ra:ra_147,s0:s0_148,s3:s3_153
	branch a0_138 != 0<32> l2306FD28
l2306FDCE:
	word32 a2_168 = Mem93[0x420267E8<32>:int32]
l2306FDDC:
	branch CONVERT(Mem172[s0_148 + 68<i32>:byte], byte, word32) != 255<i32> l2306FDE8
l2306FDE4:
	Mem175[s0_148 + 68<i32>:byte] = 0<8>
l2306FDE8:
	word32 a5_178 = CONVERT(Mem177[s0_148 + 68<i32>:byte], byte, word32)
	word32 a3_181 = a2_168
l2306FDEE:
	branch a3_181 != 0<32> l2306FE1C
l2306FE1C:
	branch CONVERT(Mem177[a3_181 + 68<i32>:byte], byte, word32) != a5_178 l2306FE2C
l2306FE2C:
	a3_181 = Mem177[a3_181:word32]
l2306FE24:
	Mem189[s0_148 + 68<i32>:byte] = SLICE(a5_178 + 1<32>, byte, 0)
l2306FDF0:
	word32 a3_191 = 0<32>
	branch a5_178 == 254<i32> l2306FE00
l2306FDFA:
	a3_191 = a5_178 + 1<32> & 255<i32>
l2306FE00:
	word32 a5_196 = CONVERT(Mem177[s0_148 + 65<i32>:byte], byte, word32)
	Mem199[a2_168:word32] = s0_148
	Mem205[s3_153:byte] = SLICE(a3_191, byte, 0)
	Mem210[0x420267E8<32>:word32] = s0_148
	branch (a5_196 & 32<i32>) == 0<32> l2306FD2A
l2306FE14:
	igmp_start(ra_147, s0_148, a3_191, 0x42026000<32>, a5_196 & 32<i32>, mstatus_146, dwLoc08)
l2306FD28:
	s0_148 = 0<32>
l2306FD2A:
	0<32> = dwArg0128
	return s0_148
netif_add_exit:


void netif_set_default(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a5
// Preserved: sp
netif_set_default_entry:
l2306FE30:
	Mem5[0x420267E4<32>:word32] = a0
	return
netif_set_default_exit:


word32 netif_set_up(word32 ra, word32 s0, word32 a0, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArg24, word32 dwArg58, word32 dwArg68, word32 dwArg88, word32 dwArg94, word32 dwArg98, word32 dwArgA8, word32 dwArgB0, word32 dwArgB4, word32 dwArgC8, word32 dwArgD8, word32 dwArg0108, word32 dwArg0188, ptr32 & a1Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wifi_mgmr_sta_enable
//      wifi_mgmr_ap_enable
//      dhcpd_start
// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0024:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0088:[0..31] Stack +0094:[0..31] Stack +0098:[0..31] Stack +00A8:[0..31] Stack +00B0:[0..31] Stack +00B4:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +0108:[0..31] Stack +0188:[0..31]
// LiveOut: a1 mstatus ra s2 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: s0 sp
netif_set_up_entry:
l2306FE3A:
	branch a0 == 0<32> l2306FE72
l2306FE72:
	a1Out = a1
	s2Out = s2
	s3Out = s3
	mstatusOut = mstatus
	return ra
l2306FE3C:
	word32 a5_9 = CONVERT(Mem8[a0 + 65<i32>:byte], byte, word32)
	word32 s0_10 = a0
	branch (a5_9 & 1<i32>) != 0<32> l2306FE6A
l2306FE6A:
	a1Out = a1
	s2Out = s2
	s3Out = s3
	mstatusOut = mstatus
	return ra
l2306FE4E:
	Mem16[a0 + 65<i32>:byte] = SLICE(a5_9 | 1<i32>, byte, 0)
	word32 a0_17 = Mem16[(a5_9 | 1<i32>) + 28<i32>:word32]
	branch (a5_9 | 1<i32>) == 0<32> l2306FE5C
l2306FE5A:
	word32 a5_22
	word32 a4_23
	word32 a2_24
	word32 a1_25
	word32 a3_67
	word32 s1_68
	word32 s4_69
	word32 s8_70
	word32 t3_71
	word32 tp_72
	word32 a6_73
	word32 a7_74
	word32 s2_75
	word32 s3_76
	word32 s5_77
	word32 s6_78
	word32 s7_79
	word32 s9_80
	word32 t0_81
	word32 t1_82
	word32 t4_83
	word32 t5_84
	word32 t6_85
	call a5_9 | 1<i32> (retsize: 0;)
		uses: a0:a0_17,a1:a1_25,a2:a2_24,a3:a3_67,a4:a4_23,a5:a5_22,a6:a6_73,a7:a7_74,mstatus:mstatus,ra:ra,s0:a0,s1:s1_68,s2:s2_75,s3:s3_76,s4:s4_69,s5:s5_77,s6:s6_78,s7:s7_79,s8:s8_70,s9:s9_80,Stack +0020:dwArg10,t0:t0_81,t1:t1_82,t3:t3_71,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_72
		defs: a1:a1_25,a2:a2_24,a3:a3_67,a4:a4_23,a5:a5_22,a6:a6_73,a7:a7_74,ra:ra_21,s0:s0_20,s1:s1_68,s2:s2_75,s3:s3_76,s4:s4_69,s5:s5_77,s6:s6_78,s7:s7_79,s8:s8_70,s9:s9_80,t0:t0_81,t1:t1_82,t3:t3_71,t4:t4_83,t5:t5_84,t6:t6_85,tp:tp_72
l2306FE5C:
l2306FE66_thunk_netif_issue_reports:
	word32 a1_40
	word32 mstatus_50
	word32 s2_52
	word32 s3_53
	word32 s7_178
	word32 s6_177
	word32 s5_176
	word32 s4_175
	word32 a5_174
	word32 a4_173
	word32 a3_172
	word32 s1_171
	word32 ra_51 = netif_issue_reports(ra, s0, s0_10, 3<32>, mstatus, dwArg08, dwArg10, dwArg24, dwArg58, dwArg68, dwArg88, dwArg94, dwArg98, dwArgA8, dwArgB0, dwArgB4, dwArgC8, dwArgD8, dwArg0108, dwArg0188, out s1_171, out a1_40, out a3_172, out a4_173, out a5_174, out s2_52, out s3_53, out s4_175, out s5_176, out s6_177, out s7_178, out mstatus_50)
	a1Out = a1_40
	s2Out = s2_52
	s3Out = s3_53
	mstatusOut = mstatus_50
	return ra_51
netif_set_up_exit:


word32 netif_set_down(word32 ra, word32 s0, word32 a0, word32 a3, word32 s4, word32 mstatus, word32 dwArg08, word32 dwArg10, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netif_remove
// MayUse:  a0:[0..31] a3:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s4:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +00E8:[0..31]
// LiveOut: s0
// Trashed: a0 a2 a3 a4 a5 a6 mstatus ra s0 s1 s2 s3 s4 s8 t1 t3
// Preserved: sp
netif_set_down_entry:
l2306FE74:
	branch a0 == 0<32> l2306FEB2
l2306FEB2:
	return s0
l2306FE76:
	word32 a5_9 = CONVERT(Mem8[a0 + 65<i32>:byte], byte, word32)
	word32 s0_10 = a0
	branch (a5_9 & 1<i32>) == 0<32> l2306FEAA
l2306FE88:
	Mem13[a0 + 65<i32>:byte] = SLICE(a5_9 & -2<i32>, byte, 0)
	branch (a5_9 & 8<32>) == 0<32> l2306FE98
l2306FE94:
	s0_10 = etharp_cleanup_netif(ra, a0, a3, s4, mstatus, dwArg08, dwArgE8, out s4)
l2306FE98:
	word32 t1_30 = Mem13[s0_10 + 28<i32>:int32]
	branch t1_30 == 0<32> l2306FEAA
l2306FEAA:
	return s0
l2306FEA0:
	word32 s0_47
	word32 a5_49
	word32 a4_50
	word32 t1_51
	word32 a6_56
	word32 s1_57
	word32 s2_58
	word32 s3_59
	word32 s8_60
	word32 t3_61
	call t1_30 (retsize: 0;)
		uses: a0:s0_28,a2:dwArg10,a3:a3,a4:a4_50,a5:a5_49,a6:a6_56,mstatus:mstatus,ra:ra,s0:s0,s1:s1_57,s2:s2_58,s3:s3_59,s4:s4_44,s8:s8_60,Stack +0008:dwArg08,Stack +0010:dwArg10,Stack +00E8:dwArgE8,t1:t1_51,t3:t3_61
		defs: a4:a4_50,a5:a5_49,a6:a6_56,s0:s0_47,s1:s1_57,s2:s2_58,s3:s3_59,s8:s8_60,t1:t1_51,t3:t3_61
	return s0_47
netif_set_down_exit:


void netif_remove(word32 ra, word32 a0, word32 a3, word32 a4, word32 a5, word32 s3, word32 s4, word32 s7, word32 mstatus, word32 dwArg00, word32 dwArg08, word32 dwArg18, word32 dwArg28, word32 dwArg44, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg6C, word32 dwArg78, word32 dwArg88, word32 dwArgA8, word32 dwArgAC, word32 dwArgB8, word32 dwArgD8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] mstatus:[0..31] ra:[0..31] s3:[0..31] s4:[0..31] s7:[0..31] Stack +0000:[0..31] Stack +0008:[0..31] Stack +0018:[0..31] Stack +0028:[0..31] Stack +0044:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0078:[0..31] Stack +0088:[0..31] Stack +00A8:[0..31] Stack +00AC:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31]
// LiveOut:
// Trashed: a0 a2 a4 a5 tp
// Preserved: a1 a3 a6 a7 mstatus ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t0 t1 t3 t4 t5 t6
netif_remove_entry:
l2306FEB4:
	branch a0 == 0<32> l2306FF3A
l2306FF3A:
	return
l2306FEB6:
	word32 a0_12 = Mem10[a5 + 4<i32>:word32]
	word32 s0_101 = a0_12
	branch a5 == 0<32> l2306FEE0
l2306FEC4:
	word32 a5_29
	word32 s1_34
	word32 s2_368
	ra = tcp_netif_ip_addr_changed(ra, a0_12 + 4<i32>, 0<32>, a3, a4, s3, s4, s7, mstatus, dwLoc08, dwArg08, dwArg18, dwArg28, dwArg44, dwArg48, dwArg58, dwArg68, dwArg6C, dwArg78, dwArg88, dwArgA8, dwArgAC, dwArgB8, dwArgD8, out s1_34, out a3, out a4, out a5_29, out s2_368, out s4, out mstatus)
	raw_netif_ip_addr_changed(s1_34, 0<32>, a3, a4, udp_netif_ip_addr_changed(s1_34, 0<32>, a3, a4, a5_29))
l2306FEE0:
	word32 a5_63 = CONVERT(Mem10[a0_12 + 65<i32>:byte], byte, word32)
	branch (a5_63 & 32<i32>) == 0<32> l2306FEF0
l2306FEEA:
	ra = igmp_stop(ra, a0_12, a3, a4, a5_63 & 32<i32>, mstatus, dwArg28, out a3)
l2306FEF0:
	branch (CONVERT(Mem10[a0_12 + 65<i32>:byte], byte, word32) & 1<32>) == 0<32> l2306FEFE
l2306FEF8:
	s0_101 = netif_set_down(ra, a0_12, a0_12, a3, s4, mstatus, dwLoc08, dwArg00, dwArgD8)
l2306FEFE:
	branch Mem10[0x420267E4<32>:int32] != s0_101 l2306FF0E
l2306FF0A:
	Mem112[0x420267E4<32>:word32] = 0<32>
l2306FF0E:
	word32 a5_115 = Mem114[0x420267E8<32>:int32]
	branch a5_115 != s0_101 l2306FF2C
l2306FF2C:
	branch a5_115 == 0<32> l2306FF20
l2306FF2E:
	word32 a5_120 = Mem114[0x42026000<32>:word32]
	branch s0_101 != 0x42026000<32> l2306FF2A
l2306FF2A:
	a5_115 = 0x42026000<32>
l2306FF34:
	Mem124[0x42026000<32>:word32] = a5_120
l2306FF1A:
	Mem126[0x420267E8<32>:word32] = a5_115
l2306FF20:
	return
netif_remove_exit:


void netif_set_status_callback(word32 a0, word32 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl606a0_wifi_netif_init
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
netif_set_status_callback_entry:
l2306FF3C:
	branch a0 == 0<32> l2306FF40
l2306FF3E:
	Mem5[a1 + 28<i32>:word32] = a0
l2306FF40:
	return
netif_set_status_callback_exit:


void netif_set_link_up(word32 ra, word32 s0, word32 s1, word32 a0, word32 s4, word32 s5, word32 mstatus, word32 dwArg00, word32 dwArg04, word32 dwArg10, word32 dwArg14, word32 dwArg48, word32 dwArg58, word32 dwArg68, word32 dwArg78, word32 dwArg84, word32 dwArg88, word32 dwArg98, word32 dwArgA0, word32 dwArgA4, word32 dwArgA8, word32 dwArgB8, word32 dwArgC8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0178)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] s4:[0..31] s5:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0048:[0..31] Stack +0058:[0..31] Stack +0068:[0..31] Stack +0078:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +0098:[0..31] Stack +00A0:[0..31] Stack +00A4:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00C8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0178:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
netif_set_link_up_entry:
l2306FF42:
	branch a0 == 0<32> l2306FF84
l2306FF84:
	return
l2306FF44:
	word32 a5_9 = CONVERT(Mem8[a0 + 65<i32>:byte], byte, word32)
	branch (a5_9 & 4<i32>) != 0<32> l2306FF7C
l2306FF56:
	Mem13[a0 + 65<i32>:byte] = SLICE(a5_9 | 4<i32>, byte, 0)
	word32 mstatus_26
	word32 s0_28
	word32 s1_51
	word32 s4_52
	word32 mstatus_58
	word32 s5_62
	word32 a1_210
	word32 a3_211
	word32 a4_212
	word32 a5_213
	word32 s2_214
	word32 s3_215
	word32 s6_216
	word32 s7_217
	word32 ra_59 = netif_issue_reports(dhcp_network_changed(ra, a0, s1, a5_9 | 4<i32>, s4, s5, mstatus, dwArg04, dwArg48, dwArg58, dwArg68, dwArg78, dwArg88, dwArg98, dwArgA8, dwArgB8, dwArgC8, dwArgD8, dwArgE8, dwArgF8, dwArg0118, dwArg0128, out s0_28, out mstatus_26), s0_28, s0_28, 3<32>, mstatus_26, dwLoc08, dwArg00, dwArg14, dwArg48, dwArg58, dwArg78, dwArg84, dwArg88, dwArg98, dwArgA0, dwArgA4, dwArgB8, dwArgC8, dwArgF8, dwArg0178, out s1_51, out a1_210, out a3_211, out a4_212, out a5_213, out s2_214, out s3_215, out s4_52, out s5_62, out s6_216, out s7_217, out mstatus_58)
	word32 t1_71 = Mem13[s0_28 + 32<i32>:int32]
	branch t1_71 == 0<32> l2306FF7C
l2306FF7C:
	return
l2306FF72:
	word32 a5_85
	word32 a4_86
	word32 a1_87
	word32 t1_88
	word32 a3_94
	word32 a6_95
	word32 a7_96
	word32 s2_97
	word32 s3_98
	word32 s6_99
	word32 s8_100
	word32 t0_101
	word32 t3_102
	word32 t4_103
	word32 t5_104
	word32 t6_105
	word32 tp_106
	word32 s7_107
	word32 s9_108
	call t1_71 (retsize: 0;)
		uses: a0:s0_28,a1:a1_87,a2:dwArg10,a3:a3_94,a4:a4_86,a5:a5_85,a6:a6_95,a7:a7_96,mstatus:mstatus_58,ra:ra_59,s0:s0,s1:s1_51,s2:s2_97,s3:s3_98,s4:s4_52,s5:s5_62,s6:s6_99,s7:s7_107,s8:s8_100,s9:s9_108,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0048:dwArg48,Stack +0058:dwArg58,Stack +0068:dwArg68,Stack +0078:dwArg78,Stack +0084:dwArg84,Stack +0088:dwArg88,Stack +0098:dwArg98,Stack +00A0:dwArgA0,Stack +00A4:dwArgA4,Stack +00A8:dwArgA8,Stack +00B8:dwArgB8,Stack +00C8:dwArgC8,Stack +00D8:dwArgD8,Stack +00E8:dwArgE8,Stack +00F8:dwArgF8,Stack +0118:dwArg0118,Stack +0128:dwArg0128,Stack +0178:dwArg0178,Stack +FFFFFFF8:dwLoc08,t0:t0_101,t1:t1_88,t3:t3_102,t4:t4_103,t5:t5_104,t6:t6_105,tp:tp_106
		defs: a1:a1_87,a3:a3_94,a4:a4_86,a5:a5_85,a6:a6_95,a7:a7_96,s2:s2_97,s3:s3_98,s6:s6_99,s7:s7_107,s8:s8_100,s9:s9_108,t0:t0_101,t1:t1_88,t3:t3_102,t4:t4_103,t5:t5_104,t6:t6_105,tp:tp_106
	return
netif_set_link_up_exit:


void netif_set_link_down(word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31]
// LiveOut:
// Trashed: a0 a3 a4 t1
// Preserved: sp
netif_set_link_down_entry:
l2306FF86:
	branch a0 == 0<32> l2306FFA2
l2306FF88:
	word32 a4_5 = CONVERT(Mem0[a0 + 65<i32>:byte], byte, word32)
	branch (a4_5 & 4<i32>) == 0<32> l2306FFA2
l2306FF92:
	word32 t1_7 = Mem0[a0 + 32<i32>:int32]
	Mem9[a0 + 65<i32>:byte] = SLICE(a4_5 & 0xFFFFFFFB<32>, byte, 0)
	branch t1_7 == 0<32> l2306FFA2
l2306FFA2:
	return
l2306FFA0:
	word32 a4_12
	word32 a3_13
	word32 t1_14
	call t1_7 (retsize: 0;)
		uses: a0:a0,a3:a3_13,a4:a4_12,t1:t1_14
		defs: a3:a3_13,a4:a4_12,t1:t1_14
	return
netif_set_link_down_exit:


word32 netif_get_by_index(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raw_send
//      tcp_output_control_segment
//      tcp_output
//      udp_sendto
//      altcp_tcp_connect
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5
// Preserved: sp
netif_get_by_index_entry:
l2306FFA4:
	word32 a5_14 = 0<32>
	branch a0 == 0<32> l2306FFB2
l2306FFA8:
	a5_14 = Mem0[0x420267E8<32>:int32]
l2306FFB0:
	branch a5_14 != 0<32> l2306FFB6
l2306FFB6:
	a4 = CONVERT(Mem0[a5_14 + 68<i32>:byte], byte, word32) + 1<32> & 255<i32>
	branch a4 == a0 l2306FFB2
l2306FFC4:
	a5_14 = Mem0[a5_14:word32]
l2306FFB2:
	a4Out = a4
	a5Out = a5_14
	return a5_14
netif_get_by_index_exit:


word32 netif_find(word32 a0, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      lwip_setsockopt_callback
// MayUse:  a0:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6
// Preserved: s0 sp
netif_find_entry:
l2306FFC8:
	branch a0 != 0<32> l2306FFCE
l2306FFCE:
	word32 a5_136
	word32 a2_133
	word32 a3_134
	word32 a4_135
	word32 a1_132
	word32 a0_11 = atoi(a0 + 2<32>, out a1_132, out a2_133, out a3_134, out a4_135, out a5_136)
	word32 a4_26 = 0x42026000<32>
	word32 a0_28 = Mem10[0x420267E8<32>:int32]
l2306FFE8:
	branch a0_28 != 0<32> l2306FFF4
l2306FFF4:
	a4_26 = CONVERT(Mem10[a0_28 + 68<i32>:byte], byte, word32)
	branch a4_26 != (a0_11 & 255<i32>) l23070014
l2306FFFC:
	a4_26 = CONVERT(Mem10[a0_28 + 66<i32>:byte], byte, word32)
	branch CONVERT(Mem10[a0:byte], byte, word32) != a4_26 l23070014
l23070008:
	a4_26 = CONVERT(Mem10[a0_28 + 67<i32>:byte], byte, word32)
	branch CONVERT(Mem10[a0 + 1<i32>:byte], byte, word32) == a4_26 l2306FFEC
l23070014:
	a0_28 = Mem10[a0_28:word32]
l2306FFEA:
	a0_28 = 0<32>
l2306FFEC:
	a4Out = a4_26
	a5Out = a0_11 & 255<i32>
	return a0_28
l2306FFCA:
	a4Out = a4
	a5Out = a5
	return 0<32>
netif_find_exit:


void pbuf_skip_const(word32 a0, word32 a1, word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_take_at
//      pbuf_try_get_at
//      pbuf_put_at
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut:
// Trashed:
// Preserved: a0 a1 a5 sp
pbuf_skip_const_entry:
l23070018:
	branch a0 == 0<32> l23070022
l2307001A:
	word32 a5_5 = CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32)
	branch a1 >=u a5_5 l2307002A
l2307002A:
	a1 = CONVERT(SLICE(a1 - a5_5, word16, 0), word16, word32)
	a0 = Mem0[a0:word32]
l23070022:
	branch a2 == 0<32> l23070028
l23070024:
	Mem15[a2:word16] = SLICE(a1, word16, 0)
l23070028:
	return
pbuf_skip_const_exit:


void pbuf_free_ooseq_callback(word32 ra, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArgE8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +00E8:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 s1 tp
// Preserved: sp
pbuf_free_ooseq_callback_entry:
l23070034:
	word32 a4_65
	word32 a2_64
	sys_arch_protect(a4, mstatus, out a2_64, out a4_65)
	Mem13[0x420267EC<32>:byte] = 0<8>
	word32 a4_16
	word32 a5_66
	word32 a3_15 = sys_arch_unprotect(a3, mstatus, out a4_16, out a5_66)
	word32 a0_19 = Mem13[0x42026904<32>:int32]
l23070050:
	branch a0_19 != 0<32> l23070058
l23070058:
	word32 a0_23 = Mem13[0x42027074<32>:word32]
	branch false l23070064
l23070064:
	a0_19 = Mem13[a0_23 + 12<i32>:word32]
l2307005C:
l23070060_thunk_tcp_free_ooseq:
	word32 a0_67
	word32 a2_68
	word32 a3_69
	word32 a4_70
	tcp_free_ooseq(ra, a3_15, a4_16, 0x42027000<32>, s4, mstatus, dwArgE8, out a0_67, out a2_68, out a3_69, out a4_70)
	return
l23070052:
	return
pbuf_free_ooseq_callback_exit:


word32 pbuf_add_header_impl(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_add_header
//      pbuf_header
//      pbuf_header_force
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_add_header_impl_entry:
l23070068:
	word32 a0_17
	branch a0 == 0<32> l230700C6
l230700C6:
	a0_17 = 1<32>
l2307006C:
	a4 = 0x10000000<32>
	a0_17 = 1<32>
	branch a1 >=u 0x10000000<32> l230700C8
l23070074:
	a0_17 = 0<32>
	branch a1 == 0<32> l230700C8
l23070078:
	a3 = CONVERT(SLICE(a1, word16, 0), word16, word32)
	a4 = CONVERT(SLICE(CONVERT(Mem0[a0 + 8<i32>:uint16], uint16, word32) + a3, word16, 0), word16, word32)
	a0_17 = 1<32>
	branch a4 <u a3 l230700C8
l2307008E:
	word32 a1_22
	word32 a5_21
	branch CONVERT(Mem0[a0 + 12<i32>:int8], int8, int32) >= 0<32> l230700A8
l230700A8:
	a0_17 = 1<32>
	branch a2 == 0<32> l230700C8
l230700C8:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a5Out = a0
	return a0_17
l230700AC:
	a5_21 = Mem0[a2 + 4<i32>:word32]
	a1_22 = a2 - a1
l23070096:
	a5_21 = Mem0[a2 + 4<i32>:word32]
	a1_22 = a2 - a1
	branch a1_22 >=u a5_21 + 16<i32> l230700B2
l230700B2:
	word32 a2_29 = CONVERT(Mem0[a5_21 + 10<i32>:uint16], uint16, word32)
	Mem31[a1_22 + 4<i32>:word32] = a5_21
	Mem33[a5_21 + 8<i32>:word16] = SLICE(a4, word16, 0)
	word32 a3_35 = a3 + a2_29
	Mem36[a5_21 + 10<i32>:word16] = SLICE(a3_35, word16, 0)
	a1Out = a1_22
	a2Out = a2_29
	a3Out = a3_35
	a4Out = a4
	a5Out = a5_21
	return 0<32>
l230700A6:
	a1Out = a1_22
	a2Out = a5_21 + 16<i32>
	a3Out = a3
	a4Out = a4
	a5Out = a5_21
	return 1<32>
pbuf_add_header_impl_exit:


word32 pbuf_alloc_reference(word32 s1, word32 a1, word32 a3, word32 a4, word32 mstatus, byte bArg44, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & s8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pbuf_alloc
// MayUse:  a1:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] s1:[0..31] Stack +0044:[0..7]
// LiveOut: a0 a2 a3 a4 a5 s0 s1 s8
// Trashed: a0 a2 a3 a4 a5 s0 s1 s8 t3 tp
// Preserved: sp
pbuf_alloc_reference_entry:
l230700CA:
	word32 s0_27 = a0
	word32 a0_19
	word32 a3_22
	word32 a4_23
	word32 a2_21
	word32 a5_20
	word32 s1_24 = memp_malloc(s1, 0xD<32>, a3, a4, mstatus, out a0_19, out a2_21, out a3_22, out a4_23, out a5_20)
	branch a0_19 == 0<32> l230700FE
l230700DE:
	Mem29[a0_19:word32] = 0<32>
	Mem30[a1 + 4<i32>:word32] = a0_19
	Mem31[a0_19 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem32[a0_19 + 10<i32>:word16] = SLICE(a1, word16, 0)
	Mem33[a0_19 + 12<i32>:byte] = SLICE(dwArg44, byte, 0)
	Mem34[a0_19 + 13<i32>:byte] = 0<8>
	Mem35[a0_19 + 14<i32>:word16] = 1<16>
	a2_21 = dwArg44
	s0_27 = a1
	a5_20 = 1<32>
l230700FE:
	s1Out = s1_24
	a0Out = a0_19
	a2Out = a2_21
	a3Out = a3_22
	a4Out = a4_23
	a5Out = a5_20
	s8Out = a2
	return s0_27
pbuf_alloc_reference_exit:


word32 pbuf_alloced_custom(word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 a5, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      tcpip_stack_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..7] a3:[0..31] a4:[0..31] a5:[0..31]
// LiveOut: a0 a4 a5
// Trashed: a0 a4 a5 a6
// Preserved: sp
pbuf_alloced_custom_entry:
l23070106:
	word32 a0_5 = a0 + 3<32> & 0xFFFFFFFC<32>
	branch a5 <u a1 + a0_5 l23070138
l23070138:
	a4Out = a4
	a5Out = a5
	return 0<32>
l23070112:
	branch a4 == 0<32> l23070116
l23070114:
	a4 = a4 + a0_5
l23070116:
	Mem15[a3 + 13<i32>:byte] = 2<8>
	Mem18[a3:word32] = 0<32>
	Mem20[a4 + 4<i32>:word32] = a3
	Mem22[a3 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem23[a3 + 10<i32>:word16] = SLICE(a1, word16, 0)
	Mem26[a3 + 12<i32>:byte] = SLICE(a2, byte, 0)
	Mem27[a3 + 14<i32>:word16] = 1<16>
	a4Out = a4
	a5Out = 1<32>
	return a3
pbuf_alloced_custom_exit:


word32 pbuf_add_header(word32 a0, word32 a1, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_output_if_opt
//      raw_send
//      tcp_create_segment
//      udp_sendto
//      ethernet_output
//      icmp_input
// MayUse:  a0:[0..31] a1:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_add_header_entry:
l2307013C:
l2307013E_thunk_pbuf_add_header_impl:
	word32 a5_7
	word32 a4_8
	word32 a3_9
	word32 a1_10
	word32 a2_11
	word32 a0_6 = pbuf_add_header_impl(a0, a1, 0<32>, out a1_10, out a2_11, out a3_9, out a4_8, out a5_7)
	a1Out = a1_10
	a2Out = a2_11
	a3Out = a3_9
	a4Out = a4_8
	a5Out = a5_7
	return a0_6
pbuf_add_header_exit:


word32 pbuf_remove_header(word32 a0, word32 a1, word32 a2, ptr32 & a1Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
//      pbuf_header
//      pbuf_header_force
//      pbuf_free_header
//      raw_send
//      tcp_receive
//      tcp_input
//      udp_input
//      ethernet_input
//      icmp_input
//      altcp_mbedtls_bio_recv
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a1 a3 a4 a5
// Trashed: a0 a1 a3 a4 a5
// Preserved: sp
pbuf_remove_header_entry:
l23070142:
	word32 a0_14
	branch a0 == 0<32> l2307017C
l2307017C:
	a0_14 = 1<32>
l23070146:
	a4 = 0x10000000<32>
	a0_14 = 1<32>
	branch a1 >=u 0x10000000<32> l2307017E
l2307014E:
	a0_14 = 0<32>
	branch a1 == 0<32> l2307017E
l23070152:
	a4 = CONVERT(Mem0[a0 + 10<i32>:uint16], uint16, word32)
	a3 = CONVERT(SLICE(a1, word16, 0), word16, word32)
	a0_14 = 1<32>
	branch a4 <u a3 l2307017E
l2307017E:
	a1Out = a1
	a3Out = a3
	a4Out = a4
	a5Out = a0
	return a0_14
l23070162:
	word32 a5_17 = Mem0[a2 + 4<i32>:word32]
	Mem18[a5_17 + 10<i32>:word16] = SLICE(a4 - a3, word16, 0)
	word32 a4_19 = CONVERT(Mem18[a5_17 + 8<i32>:uint16], uint16, word32)
	word32 a1_20 = a1 + a2
	Mem21[a1_20 + 4<i32>:word32] = a5_17
	word32 a4_22 = a4_19 - a3
	Mem23[a5_17 + 8<i32>:word16] = SLICE(a4_22, word16, 0)
	a1Out = a1_20
	a3Out = a3
	a4Out = a4_22
	a5Out = a5_17
	return 0<32>
pbuf_remove_header_exit:


word32 pbuf_header(word32 a0, word32 a1, word32 a2, ptr32 & a3Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_output
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a0 a3 a5
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_header_entry:
l23070180:
	branch a1 >= 0<32> l2307018C
l2307018C:
l2307018E_thunk_pbuf_add_header_impl:
	word32 a5_7
	word32 a3_9
	word32 a1_30
	word32 a2_31
	word32 a4_32
	word32 a0_6 = pbuf_add_header_impl(a0, a1, 0<32>, out a1_30, out a2_31, out a3_9, out a4_32, out a5_7)
	a3Out = a3_9
	a5Out = a5_7
	return a0_6
l23070184:
	word32 a1_12 = 0<32> - a1
l23070188_thunk_pbuf_remove_header:
	word32 a5_15
	word32 a3_17
	word32 a1_28
	word32 a4_29
	word32 a0_14 = pbuf_remove_header(a0, a1_12, a2, out a1_28, out a3_17, out a4_29, out a5_15)
	a3Out = a3_17
	a5Out = a5_15
	return a0_14
pbuf_header_exit:


word32 pbuf_header_force(word32 a0, word32 a1, word32 a2, ptr32 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ip4_input
//      udp_input
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31]
// LiveOut: a3 a4
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: sp
pbuf_header_force_entry:
l23070192:
	branch a1 >= 0<32> l2307019E
l2307019E:
l230701A0_thunk_pbuf_add_header_impl:
	word32 a4_8
	word32 a3_9
	word32 a1_29
	word32 a2_30
	word32 a5_31
	pbuf_add_header_impl(a0, a1, 1<32>, out a1_29, out a2_30, out a3_9, out a4_8, out a5_31)
	a4Out = a4_8
	return a3_9
l23070196:
	word32 a1_12 = 0<32> - a1
l2307019A_thunk_pbuf_remove_header:
	word32 a4_16
	word32 a3_17
	word32 a1_27
	word32 a5_28
	pbuf_remove_header(a0, a1_12, a2, out a1_27, out a3_17, out a4_16, out a5_28)
	a4Out = a4_16
	return a3_17
pbuf_header_force_exit:


word32 pbuf_free(word32 ra, word32 a0, word32 a3, word32 a4, word32 s4, word32 mstatus, word32 dwArg0128, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      bl_txdatacfm
//      get_dns_request
//      lwip_recv_tcp
//      free_socket
//      dns_check_entry
//      dns_recv
//      dhcp_select
//      dhcp_recv
//      dhcp_network_changed
//      dhcp_arp_reply
//      dhcp_renew
//      dhcp_coarse_tmr
//      dhcp_stop
//      etharp_free_entry
//      etharp_input
//      etharp_request
//      etharp_query
//      igmp_send
//      igmp_input
//      ip4_input
//      pbuf_alloc
//      pbuf_realloc
//      pbuf_free_header
//      raw_send
//      tcp_seg_free
//      tcp_pcb_purge
//      tcp_recv_null
//      tcp_input
//      tcp_create_segment
//      tcp_output_control_segment
//      tcp_split_unsent_seg
//      udp_input
//      udp_sendto
//      ethernet_input
//      recv_udp
//      recv_raw
//      recv_tcp
//      netconn_drain
//      netbuf_delete
//      netbuf_alloc
//      netbuf_free
//      icmp_input
//      icmp_dest_unreach
//      dhcp_server_recv
//      iperf_server_udp_recv_fn
//      sntp_recv
//      sntp_dns_found
//      cb_altcp_recv_fn
//      tcp_receive_callback
//      udp_send_data
//      udp_receive_callback
//      httpc_free_state
//      httpc_tcp_recv
//      httpc_tcp_connected
//      altcp_tcp_write
//      altcp_tcp_shutdown
//      altcp_tcp_recv
//      altcp_mbedtls_bio_recv
//      altcp_mbedtls_dealloc
//      altcp_mbedtls_handle_rx_appldata
//      altcp_mbedtls_lower_recv
// MayUse:  a0:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s4:[0..31] Stack +0128:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_free_entry:
l230701A4:
	word32 sp_124 = fp + -48<i32>
	word32 s0_115 = 0<32>
	branch a0 == 0<32> l230701F4
l230701B4:
	a1 = a0
	s0_115 = 0<32>
	s2 = 2<32>
	s3 = 1<32>
l230701BC:
	Mem22[sp_124 + 132<i32>:word32] = a1
	word32 a4_259
	word32 a2_258
	sys_arch_protect(a4, mstatus, out a2_258, out a4_259)
	word32 s1_30 = CONVERT(Mem22[a1 + 14<i32>:byte], byte, word32)
	s1 = s1_30 + 0xFFFFFFFF<32> & 255<i32>
	Mem33[a1 + 14<i32>:byte] = SLICE(s1, byte, 0)
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5)
	branch s1 != 0<32> l230701F4
l230701D8:
	word32 s8_109
	word32 s6_108
	word32 s5_107
	word32 a7_106
	word32 s4_104
	word32 a3_103
	word32 a4_102
	word32 mstatus_101
	word32 a5_98
	word32 a5_39 = CONVERT(Mem33[a1 + 13<i32>:byte], byte, word32)
	word32 a1_40 = Mem33[s1_30 + 0xFFFFFFFF<32> & 255<i32>:word32]
	branch (a5_39 & 2<32>) == 0<32> l23070204
l23070204:
	word32 a5_42 = CONVERT(Mem33[a1_40 + 12<i32>:byte], byte, word32)
	word32 a0_43 = 0xE<32>
	a5 = a5_42 & 0xF<32>
	branch (a5_42 & 0xF<32>) == s2 l23070216
l23070210:
	branch (a5_42 & 0xF<32>) != s3 l2307021C
l2307021C:
	branch (a5_42 & 0xF<32>) != 0<32> l230701EA
l2307021E:
	word32 a1_262
	s0_115 = mem_free(a1_40, a3, a4, s2, s3, s4, mstatus, Mem33[sp_124 + 4<i32>:word32], Mem33[sp_124 + 8<i32>:word32], Mem33[sp_124 + 36<i32>:word32], Mem33[sp_124 + 132<i32>:word32], Mem33[sp_124 + 164<i32>:word32], Mem33[sp_124 + 216<i32>:word32], Mem33[sp_124 + 248<i32>:word32], Mem33[sp_124 + 280<i32>:word32], Mem33[sp_124 + 312<i32>:word32], Mem33[sp_124 + 344<i32>:word32], Mem33[sp_124 + 376<i32>:word32], Mem33[sp_124 + 408<i32>:word32], out s1, out a1_262, out a3, out a4, out a5, out a7, out s2, out s3, out s4, out s5, out s6, out s8)
l23070214:
	a0_43 = 0xD<32>
l23070216:
	word32 a2_261
	word32 a0_260
	s1 = memp_free(a0_43, a1_40, a3, a4, mstatus, out a0_260, out a2_261, out a3, out a4, out a5)
l230701E4:
	word32 a1_85 = Mem33[(a5_39 & 2<32>) + 16<i32>:word32]
	word32 a6_105
	word32 t0_110
	word32 t1_111
	word32 t4_112
	word32 t5_113
	word32 t6_114
	call a5_39 & 2<32> (retsize: 0;)
		uses: a0:a1_85,a1:a1_85,a3:a3_103,a4:a4_102,a5:a5_98,a6:a6_105,a7:a7_106,mstatus:mstatus_101,ra:ra_88,s0:s0_87,s1:s1_30 + 0xFFFFFFFF<32> & 255<i32>,s2:s2_45,s3:s3_46,s4:s4_104,s5:s5_107,s6:s6_108,s8:s8_109,t0:t0_110,t1:t1_111,t4:t4_112,t5:t5_113,t6:t6_114
		defs: a3:a3_103,a4:a4_102,a5:a5_98,a6:a6_105,a7:a7_106,mstatus:mstatus_101,ra:ra_91,s0:s0_90,s1:s1_92,s2:s2_93,s3:s3_94,s4:s4_104,s5:s5_107,s6:s6_108,s8:s8_109,sp:sp_89,t0:t0_110,t1:t1_111,t4:t4_112,t5:t5_113,t6:t6_114
	a5 = a5_98
	mstatus = mstatus_101
	a4 = a4_102
	a3 = a3_103
	s4 = s4_104
	a7 = a7_106
	s5 = s5_107
	s6 = s6_108
	s8 = s8_109
l230701EA:
	s0_115 = s0_115 + 1<32> & 255<i32>
	a1 = s1
	branch s1 != 0<32> l230701BC
l230701F4:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1
	a0Out = s0_115
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8
	mstatusOut = mstatus
	return ra
pbuf_free_exit:


word32 pbuf_alloc(word32 ra, word32 s0, word32 s1, word32 a0, word32 a1, word32 a2, word32 a3, word32 a4, word32 mstatus, word32 dwArg04, word32 dwArg44, word32 dwArgA8, word32 dwArgB8, word32 dwArgD8, word32 dwArgE8, word32 dwArgF8, word32 dwArg0118, word32 dwArg0128, word32 dwArg0158, ptr32 & s0Out, ptr32 & s1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a4Out, ptr32 & a5Out, ptr32 & a7Out, ptr32 & s2Out, ptr32 & s3Out, ptr32 & s4Out, ptr32 & s5Out, ptr32 & s6Out, ptr32 & s8Out, ptr32 & mstatusOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      get_dns_request
//      dns_check_entry
//      dhcp_create_msg
//      etharp_request
//      igmp_send
//      pbuf_clone
//      raw_send
//      tcp_output_alloc_header_common.constprop.6
//      tcp_split_unsent_seg
//      tcp_send_fin
//      udp_sendto
//      netbuf_alloc
//      icmp_input
//      icmp_dest_unreach
//      dhcp_server_recv
//      sntp_dns_found
//      udp_send_data
//      httpc_init_connection_common.constprop.5
//      altcp_tcp_write
//      altcp_mbedtls_handle_rx_appldata
// MayUse:  a0:[0..31] a1:[0..31] a2:[0..31] a3:[0..31] a4:[0..31] mstatus:[0..31] ra:[0..31] s0:[0..31] s1:[0..31] Stack +0004:[0..31] Stack +0044:[0..31] Stack +00A8:[0..31] Stack +00B8:[0..31] Stack +00D8:[0..31] Stack +00E8:[0..31] Stack +00F8:[0..31] Stack +0118:[0..31] Stack +0128:[0..31] Stack +0158:[0..31]
// LiveOut: a0 a1 a2 a3 a4 a5 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 mstatus ra s0 s1 s2 s3 s4 s5 s6 s8 t0 t1 t3 t4 t5 t6 tp
// Preserved: sp
pbuf_alloc_entry:
l23070226:
	branch a2 == 65<i32> l23070380
l23070380:
l2307022E:
	word32 a5_101
	word32 s1_103
	branch a2 >u 65<i32> l2307025A
l2307025A:
	word32 s0_22 = CONVERT(SLICE(a0, word16, 0), word16, word32)
	branch a2 == 386<i32> l230702D4
l230702D4:
	s3 = 0<32>
	s1_103 = 0<32>
	s4 = 760<i32>
	s2 = 0x10000082<32>
l230702E2:
	word32 a0_36
	word32 a4_40
	word32 a2_491
	word32 a5_492
	s1_103 = memp_malloc(s1_103, 0xE<32>, a3, a4, mstatus, out a0_36, out a2_491, out a3, out a4_40, out a5_492)
	branch a0_36 != 0<32> l23070334
l23070334:
	word32 a5_48 = 760<i32> - (s0_22 + 3<i32> & 0xFFFFFFFC<32>)
	a4 = a5_48
	branch a1 >=u CONVERT(SLICE(a5_48, word16, 0), word16, word32) l2307034A
l23070348:
	a4 = a1
l2307034A:
	Mem60[a0_36:word32] = 0<32>
	Mem61[(s0_22 + a0_36 + 0x13<32> & 0xFFFFFFFC<32>) + 4<i32>:word32] = a0_36
	Mem63[a0_36 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem64[a0_36 + 10<i32>:word16] = SLICE(a4, word16, 0)
	Mem67[a0_36 + 12<i32>:word32] = 0x10000082<32>
	word32 a5_59 = a4 << 0x10<u32>
	a5_101 = a5_59 >>u 16<i32>
	branch s1_103 == 0<32> l2307037C
l2307037C:
	s1_103 = a0_36
l2307036A:
	Mem73[s3:word32] = a0_36
l2307036E:
	a1 = CONVERT(SLICE(a1 - (a5_59 >>u 16<i32>), word16, 0), word16, word32)
	s0_22 = 0<32>
	s3 = a0_36
	branch a1 != 0<32> l230702E2
l2307037A:
l230702EE:
	word32 a2_482
	word32 a4_483
	sys_arch_protect(a4_40, mstatus, out a2_482, out a4_483)
	word32 s2_87 = CONVERT(Mem31[0x420267EC<32>:byte], byte, word32)
	Mem89[0x420267EC<32>:byte] = 1<8>
	s2 = s2_87 & 255<i32>
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5_101)
	branch (s2_87 & 255<i32>) != 0<32> l23070328
l2307030C:
	word32 a0_97
	word32 s0_111 = tcpip_try_callback(0x23070034<32>, 0<32>, a3, a4, mstatus, dwArgA8, dwArgE8, dwArg0128, out s1_103, out a0_97, out a1, out a3, out a4, out a5_101, out a7, out s2, out s3, out s4, out s5, out s6)
	branch a0_97 == 0<32> l23070328
l2307031C:
	word32 a4_485
	word32 a2_484
	sys_arch_protect(a4, mstatus, out a2_484, out a4_485)
	Mem124[s0_111 + 2028<i32>:byte] = 0<8>
	a3 = sys_arch_unprotect(a3, mstatus, out a4, out a5_101)
l23070328:
	branch s1_103 == 0<32> l23070246
l2307032C:
	word32 s8_490
	word32 a2_489
	word32 s0_486
	word32 s1_487
	word32 a0_488
	ra = pbuf_free(ra, s1_103, a3, a4, s4, mstatus, dwArgF8, out s0_486, out s1_487, out a0_488, out a1, out a2_489, out a3, out a4, out a5_101, out a7, out s2, out s3, out s4, out s5, out s6, out s8_490, out mstatus)
l23070268:
	a5_101 = 640<i32>
	branch a2 != 640<i32> l23070246
l23070270:
	a5_101 = a1 + 3<i32> & 0xFFFFFFFC<32>
	word32 s0_173 = CONVERT(SLICE((s0_22 + 3<32> & 0xFFFFFFFC<32>) + a5_101, word16, 0), word16, word32)
	s2 = a0
	word32 a0_176 = s0_173 + 16<i32> << 16<i32>
	branch s0_173 <u a5_101 l23070246
l23070290:
	branch a0_176 >>u 16<i32> <u a5_101 l23070246
l23070294:
	word32 a0_182
	word32 s8_481
	mem_malloc(ra, s0_173, a0_176 >>u 16<i32>, a3, a4, a0, mstatus, s0, dwArg04, ra, dwArgB8, dwArgD8, dwArgF8, dwArg0118, dwArg0158, out a0_182, out a1, out a3, out a4, out a5_101, out a7, out s2, out s3, out s4, out s5, out s6, out s8_481)
	s1_103 = a0_182
	branch a0_182 == 0<32> l23070248
l2307029C:
	Mem211[a0_182:word32] = 0<32>
	s2 = s2 + a0_182 + 0x13<32> & -4<i32>
	Mem212[a0_182 + 4<i32>:word32] = s2
	Mem213[a0_182 + 8<i32>:word16] = SLICE(a1, word16, 0)
	Mem214[a0_182 + 10<i32>:word16] = SLICE(a1, word16, 0)
	Mem215[0x1000008C<32>:word32] = a0_182
	a5_101 = 0x10000080<32>
l23070240:
	a5_101 = 1<32>
	branch a2 == 1<32> l230702C0
l230702C0:
	0<32> = dwArg0128
l230702D0:
l230702D0_thunk_pbuf_alloc_reference:
	word32 a0_232
	word32 a2_233
	word32 a3_234
	word32 a4_235
	word32 a5_236
	word32 s1_238
	word32 s8_239
	s0Out = pbuf_alloc_reference(s1, a1, a3, a4, mstatus, dwArg44, out s1_238, out a0_232, out a2_233, out a3_234, out a4_235, out a5_236, out s8_239)
	s1Out = s1_238
	a0Out = a0_232
	a1Out = a1
	a2Out = a2_233
	a3Out = a3_234
	a4Out = a4_235
	a5Out = a5_236
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = s8_239
	mstatusOut = mstatus
	return ra
l23070246:
	s1_103 = 0<32>
l23070248:
	0<32> = dwArg0128
	s0Out = dwArgE4
	s1Out = s1_103
	a0Out = s1_103
	a1Out = a1
	a2Out = dwArg0100
	a3Out = a3
	a4Out = a4
	a5Out = a5_101
	a7Out = a7
	s2Out = s2
	s3Out = s3
	s4Out = s4
	s5Out = s5
	s6Out = s6
	s8Out = dwArg58
	mstatusOut = mstatus
	return ra
pbuf_alloc_exit:


